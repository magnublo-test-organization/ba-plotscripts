<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 18:26:38.347" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:39.622" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:39.639" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:26:40.526" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:39.618" endtime="20201030 18:26:40.527"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.533" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:26:40.530" endtime="20201030 18:26:43.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.615" endtime="20201030 18:26:43.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.540" endtime="20201030 18:26:43.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.537" endtime="20201030 18:26:43.871"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.902" endtime="20201030 18:26:43.924"></status>
</kw>
<msg timestamp="20201030 18:26:43.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:26:43.899" endtime="20201030 18:26:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:26:43.927" endtime="20201030 18:26:43.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:43.938" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:43.933" endtime="20201030 18:26:43.939"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:43.893" endtime="20201030 18:26:43.941"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:43.886" endtime="20201030 18:26:43.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.884" endtime="20201030 18:26:43.943"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:43.951" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:43.949" endtime="20201030 18:26:43.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.945" endtime="20201030 18:26:43.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.882" endtime="20201030 18:26:43.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.880" endtime="20201030 18:26:43.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.954" endtime="20201030 18:26:43.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.877" endtime="20201030 18:26:43.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:43.961" endtime="20201030 18:26:43.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.873" endtime="20201030 18:26:43.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:39.612" endtime="20201030 18:26:43.967"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:43.981" endtime="20201030 18:26:44.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.978" endtime="20201030 18:26:44.004"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.039" endtime="20201030 18:26:44.058"></status>
</kw>
<msg timestamp="20201030 18:26:44.059" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.036" endtime="20201030 18:26:44.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.065" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.061" endtime="20201030 18:26:44.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.072" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:44.068" endtime="20201030 18:26:44.073"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:44.029" endtime="20201030 18:26:44.074"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:44.022" endtime="20201030 18:26:44.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.018" endtime="20201030 18:26:44.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:44.084" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:44.083" endtime="20201030 18:26:44.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.079" endtime="20201030 18:26:44.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.016" endtime="20201030 18:26:44.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.014" endtime="20201030 18:26:44.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.088" endtime="20201030 18:26:44.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.010" endtime="20201030 18:26:44.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.006" endtime="20201030 18:26:44.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:43.975" endtime="20201030 18:26:44.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.112" endtime="20201030 18:26:44.125"></status>
</kw>
<msg timestamp="20201030 18:26:44.126" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.108" endtime="20201030 18:26:44.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.132" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:44.129" endtime="20201030 18:26:44.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:44.135" endtime="20201030 18:26:44.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.101" endtime="20201030 18:26:44.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.097" endtime="20201030 18:26:44.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.151" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:26:44.149" endtime="20201030 18:26:44.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.155" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:26:44.153" endtime="20201030 18:26:44.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.143" endtime="20201030 18:26:44.158"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:43.968" endtime="20201030 18:26:44.159" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:26:38.612" endtime="20201030 18:26:44.167"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:26:44.303" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:26:44.320" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:26:45.202" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:26:44.300" endtime="20201030 18:26:45.204"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.210" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:26:45.206" endtime="20201030 18:26:48.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.297" endtime="20201030 18:26:48.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:48.217" endtime="20201030 18:26:48.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.214" endtime="20201030 18:26:48.558"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.592" endtime="20201030 18:26:48.614"></status>
</kw>
<msg timestamp="20201030 18:26:48.615" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.588" endtime="20201030 18:26:48.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.618" endtime="20201030 18:26:48.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.630" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:48.625" endtime="20201030 18:26:48.631"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:48.581" endtime="20201030 18:26:48.633"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:48.575" endtime="20201030 18:26:48.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.572" endtime="20201030 18:26:48.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:48.644" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:48.643" endtime="20201030 18:26:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.638" endtime="20201030 18:26:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.570" endtime="20201030 18:26:48.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.568" endtime="20201030 18:26:48.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.649" endtime="20201030 18:26:48.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.564" endtime="20201030 18:26:48.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.656" endtime="20201030 18:26:48.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.560" endtime="20201030 18:26:48.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:44.294" endtime="20201030 18:26:48.663"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:48.677" endtime="20201030 18:26:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.673" endtime="20201030 18:26:48.700"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.796" endtime="20201030 18:26:48.815"></status>
</kw>
<msg timestamp="20201030 18:26:48.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.793" endtime="20201030 18:26:48.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.819" endtime="20201030 18:26:48.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:26:48.825" endtime="20201030 18:26:48.830"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:48.785" endtime="20201030 18:26:48.832"></status>
</kw>
<status status="FAIL" starttime="20201030 18:26:48.717" endtime="20201030 18:26:48.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.714" endtime="20201030 18:26:48.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:26:48.842" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:26:48.841" endtime="20201030 18:26:48.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.837" endtime="20201030 18:26:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.712" endtime="20201030 18:26:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.710" endtime="20201030 18:26:48.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.846" endtime="20201030 18:26:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.706" endtime="20201030 18:26:48.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.702" endtime="20201030 18:26:48.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.670" endtime="20201030 18:26:48.853"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.875" endtime="20201030 18:26:48.888"></status>
</kw>
<msg timestamp="20201030 18:26:48.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.872" endtime="20201030 18:26:48.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:48.895" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:48.891" endtime="20201030 18:26:48.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.898" endtime="20201030 18:26:48.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.865" endtime="20201030 18:26:48.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.860" endtime="20201030 18:26:48.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:48.923" endtime="20201030 18:26:49.320"></status>
</kw>
<msg timestamp="20201030 18:26:49.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189309819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.189310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:48.920" endtime="20201030 18:26:49.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.189309819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.189310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.332" endtime="20201030 18:26:49.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.354" endtime="20201030 18:26:49.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.911" endtime="20201030 18:26:49.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.907" endtime="20201030 18:26:49.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:49.434" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:49.367" endtime="20201030 18:26:49.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.439" endtime="20201030 18:26:49.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.458" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:49.454" endtime="20201030 18:26:49.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.473" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.420000000200265e-07, 7.860999999997897e-06, 5.419999999922709e-07, 8.889000000011915e-06, 5.409999999927972e-07, 8.986999999988088e-06, 5.410000000205528e-07, 8.0969999999847e-06, 5.419999999922709e-07, 7.431000000002186e-06, 5.410000000205528e-07, 8.874999999991529e-06, 5.419999999922709e-07, 7.5419999999992715e-06, 5.409999999927972e-07, 6.098000000009929e-06, 5.409999999927972e-07, 9.30600000001447e-06, 5.409999999927972e-07, 6.652999999995357e-06, 5.419999999922709e-07, 7.208000000008541e-06, 5.419999999922709e-07, 8.764000000022198e-06, 5.409999999927972e-07, 7.431000000002186e-06, 5.419999999922709e-07, 8.665999999990515e-06, 5.420000000200265e-07, 8.985999999988614e-06, 5.419999999922709e-07, 8.319000000006627e-06, 5.419999999922709e-07, 6.430000000001712e-06, 5.420000000200265e-07, 7.652999999996357e-06, 5.419999999922709e-07, 8.874999999991529e-06, 5.410000000205528e-07, 9.20899999998226e-06, 5.410000000205528e-07, 6.777999999985074e-06, 5.419999999922709e-07, 6.097000000010455e-06, 5.419999999922709e-07, 7.19400000001591e-06, 5.419999999922709e-07, 6.6659999999885144e-06, 5.420000000200265e-07, 6.749999999999812e-06, 5.419999999922709e-07, 6.111000000003086e-06, 5.409999999927972e-07, 8.972999999995457e-06, 5.410000000205528e-07, 9.319999999979345e-06, 5.410000000205528e-07, 9.458999999989448e-06, 8.068999999999438e-06, 5.419999999922709e-07, 6.875000000017284e-06, 5.419999999922709e-07, 8.651999999997884e-06, 5.419999999922709e-07, 6.222000000000172e-06, 5.419999999922709e-07, 8.653000000025113e-06, 5.409999999927972e-07, 7.750000000000812e-06, 5.419999999922709e-07, 9.000000000009e-06, 5.419999999922709e-07, 8.097000000012455e-06, 5.419999999922709e-07, 8.527000000008167e-06, 5.419999999922709e-07, 7.208000000008541e-06, 5.419999999922709e-07, 7.763999999993443e-06, 5.419999999922709e-07, 8.763000000022725e-06, 5.419999999922709e-07, 8.000000000008e-06, 5.419999999922709e-07, 6.971999999993983e-06, 5.419999999922709e-07, 9.111000000006086e-06, 5.409999999927972e-07, 8.431000000003186e-06, 5.419999999922709e-07, 6.694000000001532e-06, 9.153000000011735e-06, 5.419999999922709e-07, 8.98600000001637e-06, 5.409999999927972e-07, 9.431000000004186e-06, 5.419999999922709e-07], 'time': [0.189309819, 0.189310361, 0.189318222, 0.189318764, 0.189327653, 0.189328194, 0.189337181, 0.189337722, 0.189345819, 0.189346361, 0.189353792, 0.189354333, 0.189363208, 0.18936375, 0.189371292, 0.189371833, 0.189377931, 0.189378472, 0.189387778, 0.189388319, 0.189394972, 0.189395514, 0.189402722, 0.189403264, 0.189412028, 0.189412569, 0.18942, 0.189420542, 0.189429208, 0.18942975, 0.189438736, 0.189439278, 0.189447597, 0.189448139, 0.189454569, 0.189455111, 0.189462764, 0.189463306, 0.189472181, 0.189472722, 0.189481931, 0.189482472, 0.18948925, 0.189489792, 0.189495889, 0.189496431, 0.189503625, 0.189504167, 0.189510833, 0.189511375, 0.189518125, 0.189518667, 0.189524778, 0.189525319, 0.189534292, 0.189534833, 0.189544153, 0.189544694, 0.189554153, 0.189562222, 0.189562764, 0.189569639, 0.189570181, 0.189578833, 0.189579375, 0.189585597, 0.189586139, 0.189594792, 0.189595333, 0.189603083, 0.189603625, 0.189612625, 0.189613167, 0.189621264, 0.189621806, 0.189630333, 0.189630875, 0.189638083, 0.189638625, 0.189646389, 0.189646931, 0.189655694, 0.189656236, 0.189664236, 0.189664778, 0.18967175, 0.189672292, 0.189681403, 0.189681944, 0.189690375, 0.189690917, 0.189697611, 0.189706764, 0.189707306, 0.189716292, 0.189716833, 0.189726264, 0.189726806], 'eventsource_diff': [0, 5.420000000200265e-07, 7.860999999997897e-06, 5.419999999922709e-07, 8.889000000011915e-06, 5.409999999927972e-07, 8.986999999988088e-06, 5.410000000205528e-07, 8.0969999999847e-06, 5.419999999922709e-07, 7.431000000002186e-06, 5.410000000205528e-07, 8.874999999991529e-06, 5.419999999922709e-07, 7.5419999999992715e-06, 5.409999999927972e-07, 6.098000000009929e-06, 5.409999999927972e-07, 9.30600000001447e-06, 5.409999999927972e-07, 6.652999999995357e-06, 5.419999999922709e-07, 7.208000000008541e-06, 5.419999999922709e-07, 8.764000000022198e-06, 5.409999999927972e-07, 7.431000000002186e-06, 5.419999999922709e-07, 8.665999999990515e-06, 5.420000000200265e-07, 8.985999999988614e-06, 5.419999999922709e-07, 8.319000000006627e-06, 5.419999999922709e-07, 6.430000000001712e-06, 5.420000000200265e-07, 7.652999999996357e-06, 5.419999999922709e-07, 8.874999999991529e-06, 5.410000000205528e-07, 9.20899999998226e-06, 5.410000000205528e-07, 6.777999999985074e-06, 5.419999999922709e-07, 6.097000000010455e-06, 5.419999999922709e-07, 7.19400000001591e-06, 5.419999999922709e-07, 6.6659999999885144e-06, 5.420000000200265e-07, 6.749999999999812e-06, 5.419999999922709e-07, 6.111000000003086e-06, 5.409999999927972e-07, 8.972999999995457e-06, 5.410000000205528e-07, 9.319999999979345e-06, 5.410000000205528e-07, 9.458999999989448e-06, 8.068999999999438e-06, 5.419999999922709e-07, 6.875000000017284e-06, 5.419999999922709e-07, 8.651999999997884e-06, 5.419999999922709e-07, 6.222000000000172e-06, 5.419999999922709e-07, 8.653000000025113e-06, 5.409999999927972e-07, 7.750000000000812e-06, 5.419999999922709e-07, 9.000000000009e-06, 5.419999999922709e-07, 8.097000000012455e-06, 5.419999999922709e-07, 8.527000000008167e-06, 5.419999999922709e-07, 7.208000000008541e-06, 5.419999999922709e-07, 7.763999999993443e-06, 5.419999999922709e-07, 8.763000000022725e-06, 5.419999999922709e-07, 8.000000000008e-06, 5.419999999922709e-07, 6.971999999993983e-06, 5.419999999922709e-07, 9.111000000006086e-06, 5.409999999927972e-07, 8.431000000003186e-06, 5.419999999922709e-07, 6.694000000001532e-06, 9.153000000011735e-06, 5.419999999922709e-07, 8.98600000001637e-06, 5.409999999927972e-07, 9.431000000004186e-06, 5.419999999922709e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:49.464" endtime="20201030 18:26:49.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.446" endtime="20201030 18:26:49.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:49.495" level="INFO">${RESULT} = [{'diff': 5.420000000200265e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999927972e-07}, {'diff': 5.410000000205528e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:49.482" endtime="20201030 18:26:49.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:49.509" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000200265e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:26:49.498" endtime="20201030 18:26:49.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.524" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:49.521" endtime="20201030 18:26:49.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.530" level="INFO">VALUE: [5.420000000200265e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.420000000200265e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000200265e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000000200265e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.410000000205528e-07, 5.410000000205528e-07, 8.068999999999438e-06, 6.875000000017284e-06, 8.651999999997884e-06, 6.222000000000172e-06, 8.653000000025113e-06, 7.750000000000812e-06, 9.000000000009e-06, 8.097000000012455e-06, 8.527000000008167e-06, 7.208000000008541e-06, 7.763999999993443e-06, 8.763000000022725e-06, 8.000000000008e-06, 6.971999999993983e-06, 9.111000000006086e-06, 8.431000000003186e-06, 6.694000000001532e-06, 5.419999999922709e-07, 5.409999999927972e-07, 5.419999999922709e-07]</msg>
<status status="PASS" starttime="20201030 18:26:49.526" endtime="20201030 18:26:49.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.512" endtime="20201030 18:26:49.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:49.543" endtime="20201030 18:26:49.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.538" endtime="20201030 18:26:49.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.535" endtime="20201030 18:26:49.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.856" endtime="20201030 18:26:49.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.856" endtime="20201030 18:26:49.568"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.589" endtime="20201030 18:26:49.602"></status>
</kw>
<msg timestamp="20201030 18:26:49.604" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.585" endtime="20201030 18:26:49.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:49.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:49.606" endtime="20201030 18:26:49.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.613" endtime="20201030 18:26:49.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.577" endtime="20201030 18:26:49.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.573" endtime="20201030 18:26:49.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:49.639" endtime="20201030 18:26:49.986"></status>
</kw>
<msg timestamp="20201030 18:26:49.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036621403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.635" endtime="20201030 18:26:49.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036620861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036621403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:49.995" endtime="20201030 18:26:50.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.016" endtime="20201030 18:26:50.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.627" endtime="20201030 18:26:50.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.622" endtime="20201030 18:26:50.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:50.080" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:50.026" endtime="20201030 18:26:50.080"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.082" endtime="20201030 18:26:50.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.095" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:50.093" endtime="20201030 18:26:50.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.104" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 7.555000000006307e-06, 5.419999999992098e-07, 8.528000000000702e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 7.986999999994027e-06, 5.41000000006675e-07, 7.430999999995247e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 7.195000000001506e-06, 5.409999999997361e-07, 6.430999999994247e-06, 5.420000000061487e-07, 7.665999999996453e-06, 5.419999999992098e-07, 8.653000000004296e-06, 5.409999999997361e-07, 7.972999999994457e-06, 5.409999999997361e-07, 7.3200000000051e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 6.416999999994677e-06, 5.420000000061487e-07, 7.874999999997467e-06, 5.409999999997361e-07, 6.569999999997411e-06, 8.958000000003352e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 9.457999999996913e-06, 8.167000000003366e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 6.653000000002296e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.318999999999688e-06, 5.419999999992098e-07, 6.30600000000453e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.389000000003476e-06, 9.792000000001522e-06, 5.419999999992098e-07, 8.999999999995123e-06, 5.409999999997361e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.792000000000522e-06, 7.055000000005807e-06, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 6.874999999996467e-06, 5.419999999992098e-07, 7.666000000003392e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.420000000061487e-07, 8.985999999995553e-06, 5.409999999997361e-07, 6.805999999998091e-06, 9.375000000005906e-06, 5.419999999992098e-07], 'time': [0.036620861, 0.036621403, 0.036628958, 0.0366295, 0.036638028, 0.036638569, 0.036644778, 0.036645319, 0.036653306, 0.036653847, 0.036661278, 0.036661819, 0.036667917, 0.036668458, 0.036677458, 0.036678, 0.036684542, 0.036685083, 0.036693403, 0.036693944, 0.036703167, 0.036703708, 0.036710903, 0.036711444, 0.036717875, 0.036718417, 0.036726083, 0.036726625, 0.036735278, 0.036735819, 0.036743792, 0.036744333, 0.036751653, 0.036752194, 0.036759736, 0.036760278, 0.036768708, 0.03676925, 0.036776806, 0.036777347, 0.036783764, 0.036784306, 0.036792181, 0.036792722, 0.036799292, 0.03680825, 0.036808792, 0.036815, 0.036815542, 0.036825, 0.036833167, 0.036833708, 0.036839917, 0.036840458, 0.036847111, 0.036847653, 0.036856972, 0.036857514, 0.036863958, 0.0368645, 0.036872597, 0.036873139, 0.036881458, 0.036882, 0.036888306, 0.036888847, 0.036894833, 0.036895375, 0.036903361, 0.036903903, 0.036910778, 0.036911319, 0.036918708, 0.0369285, 0.036929042, 0.036938042, 0.036938583, 0.036945569, 0.036946111, 0.036954903, 0.036961958, 0.0369625, 0.036969708, 0.03697025, 0.036977125, 0.036977667, 0.036985333, 0.036985875, 0.036992514, 0.036993056, 0.037002042, 0.037002583, 0.037009389, 0.037018764, 0.037019306], 'eventsource_diff': [0, 5.419999999992098e-07, 7.555000000006307e-06, 5.419999999992098e-07, 8.528000000000702e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 7.986999999994027e-06, 5.41000000006675e-07, 7.430999999995247e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 9.223000000002646e-06, 5.409999999997361e-07, 7.195000000001506e-06, 5.409999999997361e-07, 6.430999999994247e-06, 5.420000000061487e-07, 7.665999999996453e-06, 5.419999999992098e-07, 8.653000000004296e-06, 5.409999999997361e-07, 7.972999999994457e-06, 5.409999999997361e-07, 7.3200000000051e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 6.416999999994677e-06, 5.420000000061487e-07, 7.874999999997467e-06, 5.409999999997361e-07, 6.569999999997411e-06, 8.958000000003352e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 9.457999999996913e-06, 8.167000000003366e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 6.653000000002296e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.318999999999688e-06, 5.419999999992098e-07, 6.30600000000453e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.389000000003476e-06, 9.792000000001522e-06, 5.419999999992098e-07, 8.999999999995123e-06, 5.409999999997361e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.792000000000522e-06, 7.055000000005807e-06, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 6.874999999996467e-06, 5.419999999992098e-07, 7.666000000003392e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.420000000061487e-07, 8.985999999995553e-06, 5.409999999997361e-07, 6.805999999998091e-06, 9.375000000005906e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:50.097" endtime="20201030 18:26:50.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.087" endtime="20201030 18:26:50.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:50.119" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.41000000006675e-07}, {'diff': 5.409999999997361e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:26:50.109" endtime="20201030 18:26:50.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:50.129" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.41000000006675e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.40999...</msg>
<status status="PASS" starttime="20201030 18:26:50.122" endtime="20201030 18:26:50.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.140" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:50.137" endtime="20201030 18:26:50.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.146" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.41000000006675e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.409999999997361e-07, 8.958000000003352e-06, 6.208000000000602e-06, 9.457999999996913e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 9.792000000001522e-06, 8.999999999995123e-06, 6.986000000000492e-06, 8.792000000000522e-06, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 9.375000000005906e-06]</msg>
<status status="PASS" starttime="20201030 18:26:50.143" endtime="20201030 18:26:50.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.131" endtime="20201030 18:26:50.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:50.159" endtime="20201030 18:26:50.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.155" endtime="20201030 18:26:50.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.152" endtime="20201030 18:26:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.569" endtime="20201030 18:26:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:49.569" endtime="20201030 18:26:50.185"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.211" endtime="20201030 18:26:50.225"></status>
</kw>
<msg timestamp="20201030 18:26:50.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.208" endtime="20201030 18:26:50.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.232" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.228" endtime="20201030 18:26:50.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.236" endtime="20201030 18:26:50.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.200" endtime="20201030 18:26:50.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.191" endtime="20201030 18:26:50.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.267" endtime="20201030 18:26:50.615"></status>
</kw>
<msg timestamp="20201030 18:26:50.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042934167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.263" endtime="20201030 18:26:50.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042934167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.625" endtime="20201030 18:26:50.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.645" endtime="20201030 18:26:50.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.249" endtime="20201030 18:26:50.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.244" endtime="20201030 18:26:50.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:50.710" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:50.654" endtime="20201030 18:26:50.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.712" endtime="20201030 18:26:50.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.726" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:50.724" endtime="20201030 18:26:50.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.736" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 8.985999999995553e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.420000000061487e-07, 7.999999999994123e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 7.931000000002686e-06, 6.458000000000852e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 7.305999999998591e-06, 5.409999999997361e-07, 8.986000000002492e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 9.209000000003076e-06, 5.409999999997361e-07, 7.555999999998841e-06, 5.419999999992098e-07, 7.887999999997564e-06, 7.945000000002256e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 7.304999999999118e-06, 5.419999999992098e-07, 7.55600000000578e-06, 5.409999999997361e-07, 7.0279999999992016e-06, 6.485999999999992e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.409999999997361e-07, 9.042000000000772e-06, 6.695000000001006e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 6.695000000001006e-06, 8.929999999997273e-06, 5.420000000061487e-07, 8.777999999994013e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 6.333000000004196e-06, 5.419999999992098e-07, 6.110999999996147e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 6.611000000003586e-06, 9.792000000001522e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 6.555999999997841e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 7.415999999996203e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.419999999992098e-07, 6.541000000005737e-06, 5.419999999992098e-07, 9.249999999995373e-06, 9.500000000002562e-06, 5.419999999992098e-07], 'time': [0.042933625, 0.042934167, 0.042941375, 0.042941917, 0.042950903, 0.042951444, 0.042960889, 0.042961431, 0.042968083, 0.042968625, 0.042976625, 0.042977167, 0.042985153, 0.042985694, 0.042993625, 0.043000083, 0.043000625, 0.043009958, 0.0430105, 0.043017806, 0.043018347, 0.043027333, 0.043027875, 0.043036417, 0.043036958, 0.043046167, 0.043046708, 0.043054264, 0.043054806, 0.043062694, 0.043070639, 0.043071181, 0.043078403, 0.043078944, 0.043085722, 0.043086264, 0.043093569, 0.043094111, 0.043101667, 0.043102208, 0.043109236, 0.043115722, 0.043116264, 0.043123806, 0.043124347, 0.043132653, 0.043133194, 0.043142236, 0.043148931, 0.043149472, 0.043158347, 0.043158889, 0.043167431, 0.043167972, 0.043174667, 0.043183597, 0.043184139, 0.043192917, 0.043193458, 0.043199875, 0.043200417, 0.04320675, 0.043207292, 0.043213403, 0.043213944, 0.043221917, 0.043222458, 0.043229069, 0.043238861, 0.043239403, 0.043247167, 0.043247708, 0.043256806, 0.043257347, 0.043263903, 0.043264444, 0.043271194, 0.043271736, 0.043280944, 0.043281486, 0.043290139, 0.043290681, 0.043300125, 0.043300667, 0.043308083, 0.043308625, 0.043316611, 0.043317153, 0.043323694, 0.043324236, 0.043333486, 0.043342986, 0.043343528], 'eventsource_diff': [0, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 8.985999999995553e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.420000000061487e-07, 7.999999999994123e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 7.931000000002686e-06, 6.458000000000852e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 7.305999999998591e-06, 5.409999999997361e-07, 8.986000000002492e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 9.209000000003076e-06, 5.409999999997361e-07, 7.555999999998841e-06, 5.419999999992098e-07, 7.887999999997564e-06, 7.945000000002256e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 6.7779999999989515e-06, 5.419999999992098e-07, 7.304999999999118e-06, 5.419999999992098e-07, 7.55600000000578e-06, 5.409999999997361e-07, 7.0279999999992016e-06, 6.485999999999992e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.409999999997361e-07, 9.042000000000772e-06, 6.695000000001006e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 6.695000000001006e-06, 8.929999999997273e-06, 5.420000000061487e-07, 8.777999999994013e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 6.333000000004196e-06, 5.419999999992098e-07, 6.110999999996147e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 6.611000000003586e-06, 9.792000000001522e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 6.555999999997841e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 7.415999999996203e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.419999999992098e-07, 6.541000000005737e-06, 5.419999999992098e-07, 9.249999999995373e-06, 9.500000000002562e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:50.729" endtime="20201030 18:26:50.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.718" endtime="20201030 18:26:50.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:50.761" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:50.742" endtime="20201030 18:26:50.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:50.777" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 6.458000000000852e-06, 9.3330...</msg>
<status status="PASS" starttime="20201030 18:26:50.767" endtime="20201030 18:26:50.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.791" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:50.787" endtime="20201030 18:26:50.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.798" level="INFO">VALUE: [5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 6.458000000000852e-06, 9.333000000000258e-06, 7.305999999998591e-06, 8.986000000002492e-06, 8.542000000000272e-06, 9.209000000003076e-06, 7.555999999998841e-06, 7.887999999997564e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 6.485999999999992e-06, 7.5419999999992715e-06, 8.305999999999591e-06, 9.042000000000772e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 8.929999999997273e-06, 8.777999999994013e-06, 6.417000000001616e-06, 6.333000000004196e-06, 6.110999999996147e-06, 7.973000000001396e-06, 6.611000000003586e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.500000000002562e-06]</msg>
<status status="PASS" starttime="20201030 18:26:50.793" endtime="20201030 18:26:50.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.779" endtime="20201030 18:26:50.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:50.814" endtime="20201030 18:26:50.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.807" endtime="20201030 18:26:50.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.804" endtime="20201030 18:26:50.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.187" endtime="20201030 18:26:50.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.186" endtime="20201030 18:26:50.839"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.861" endtime="20201030 18:26:50.874"></status>
</kw>
<msg timestamp="20201030 18:26:50.875" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.857" endtime="20201030 18:26:50.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:50.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:50.878" endtime="20201030 18:26:50.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.884" endtime="20201030 18:26:50.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.850" endtime="20201030 18:26:50.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.845" endtime="20201030 18:26:50.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:50.908" endtime="20201030 18:26:51.242"></status>
</kw>
<msg timestamp="20201030 18:26:51.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037308917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037309458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:50.905" endtime="20201030 18:26:51.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037308917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037309458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.251" endtime="20201030 18:26:51.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.269" endtime="20201030 18:26:51.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.897" endtime="20201030 18:26:51.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.893" endtime="20201030 18:26:51.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:51.332" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:51.278" endtime="20201030 18:26:51.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.334" endtime="20201030 18:26:51.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.355" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:51.351" endtime="20201030 18:26:51.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.369" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.409999999997361e-07, 5.986000000006431e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 9.208999999996137e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000061487e-07, 8.888999999998037e-06, 5.419999999992098e-07, 9.457999999996913e-06, 9.833000000000758e-06, 5.419999999992098e-07, 7.55600000000578e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 9.430000000004712e-06, 5.419999999992098e-07, 6.667000000001866e-06, 5.409999999997361e-07, 6.860999999996897e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.0279999999992016e-06, 8.278000000000452e-06, 5.409999999997361e-07, 9.347999999999301e-06, 7.375000000003906e-06, 5.409999999997361e-07, 7.250000000000312e-06, 9.388999999998537e-06, 5.419999999992098e-07, 7.110999999997147e-06, 9.333000000000258e-06, 8.264000000000882e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 8.125000000004656e-06, 9.610999999999648e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 7.8200000000056e-06, 8.832999999999758e-06, 5.419999999992098e-07, 8.77699999999454e-06, 5.420000000061487e-07, 9.430999999997247e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.125000000004656e-06, 7.611999999997121e-06, 5.409999999997361e-07, 9.166999999997427e-06, 8.680000000003962e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 6.304999999998118e-06, 5.419999999992098e-07], 'time': [0.037308917, 0.037309458, 0.037315444, 0.037315986, 0.037323528, 0.037324069, 0.037333278, 0.037333819, 0.037341819, 0.037342361, 0.037350444, 0.037350986, 0.037359875, 0.037360417, 0.037369875, 0.037379708, 0.03738025, 0.037387806, 0.037388347, 0.037394431, 0.037394972, 0.037401736, 0.037402278, 0.037411708, 0.03741225, 0.037418917, 0.037419458, 0.037426319, 0.037426861, 0.037434069, 0.037434611, 0.037441639, 0.037449917, 0.037450458, 0.037459806, 0.037467181, 0.037467722, 0.037474972, 0.037484361, 0.037484903, 0.037492014, 0.037501347, 0.037509611, 0.037510153, 0.037519361, 0.037519903, 0.037526556, 0.037527097, 0.037533306, 0.037533847, 0.037542722, 0.037543264, 0.037551597, 0.037552139, 0.037560264, 0.037569875, 0.037570417, 0.037577403, 0.037577944, 0.037584028, 0.037584569, 0.037591847, 0.037599667, 0.0376085, 0.037609042, 0.037617819, 0.037618361, 0.037627792, 0.037628333, 0.037635208, 0.03763575, 0.037643069, 0.037643611, 0.037650153, 0.037650694, 0.037658819, 0.037666431, 0.037666972, 0.037676139, 0.037684819, 0.037685361, 0.037692347, 0.037692889, 0.037700889, 0.037701431, 0.037707861, 0.037708403, 0.037714708, 0.03771525], 'eventsource_diff': [0, 5.409999999997361e-07, 5.986000000006431e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 9.208999999996137e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000061487e-07, 8.888999999998037e-06, 5.419999999992098e-07, 9.457999999996913e-06, 9.833000000000758e-06, 5.419999999992098e-07, 7.55600000000578e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 9.430000000004712e-06, 5.419999999992098e-07, 6.667000000001866e-06, 5.409999999997361e-07, 6.860999999996897e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.0279999999992016e-06, 8.278000000000452e-06, 5.409999999997361e-07, 9.347999999999301e-06, 7.375000000003906e-06, 5.409999999997361e-07, 7.250000000000312e-06, 9.388999999998537e-06, 5.419999999992098e-07, 7.110999999997147e-06, 9.333000000000258e-06, 8.264000000000882e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 8.125000000004656e-06, 9.610999999999648e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 7.2779999999994516e-06, 7.8200000000056e-06, 8.832999999999758e-06, 5.419999999992098e-07, 8.77699999999454e-06, 5.420000000061487e-07, 9.430999999997247e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 8.125000000004656e-06, 7.611999999997121e-06, 5.409999999997361e-07, 9.166999999997427e-06, 8.680000000003962e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 6.304999999998118e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:51.358" endtime="20201030 18:26:51.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.341" endtime="20201030 18:26:51.374"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:51.385" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:51.376" endtime="20201030 18:26:51.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:51.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 9.833000000000758e-06, 7.5560...</msg>
<status status="PASS" starttime="20201030 18:26:51.387" endtime="20201030 18:26:51.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:51.404" endtime="20201030 18:26:51.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.413" level="INFO">VALUE: [5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 9.833000000000758e-06, 7.55600000000578e-06, 6.083999999996481e-06, 6.763999999999382e-06, 9.430000000004712e-06, 6.667000000001866e-06, 6.860999999996897e-06, 7.208000000001602e-06, 7.0279999999992016e-06, 5.409999999997361e-07, 7.375000000003906e-06, 7.250000000000312e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.610999999999648e-06, 6.986000000000492e-06, 6.083999999996481e-06, 7.2779999999994516e-06, 8.832999999999758e-06, 8.77699999999454e-06, 9.430999999997247e-06, 6.875000000003406e-06, 7.318999999998688e-06, 6.541999999998271e-06, 8.125000000004656e-06, 5.409999999997361e-07, 8.680000000003962e-06, 6.986000000000492e-06, 8.000000000001062e-06, 6.430000000001712e-06, 6.304999999998118e-06]</msg>
<status status="PASS" starttime="20201030 18:26:51.410" endtime="20201030 18:26:51.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.397" endtime="20201030 18:26:51.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:51.427" endtime="20201030 18:26:51.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.422" endtime="20201030 18:26:51.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.419" endtime="20201030 18:26:51.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.841" endtime="20201030 18:26:51.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:50.840" endtime="20201030 18:26:51.452"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.474" endtime="20201030 18:26:51.489"></status>
</kw>
<msg timestamp="20201030 18:26:51.490" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.470" endtime="20201030 18:26:51.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:51.492" endtime="20201030 18:26:51.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.499" endtime="20201030 18:26:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.463" endtime="20201030 18:26:51.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.457" endtime="20201030 18:26:51.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.525" endtime="20201030 18:26:51.878"></status>
</kw>
<msg timestamp="20201030 18:26:51.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038641611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.521" endtime="20201030 18:26:51.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038641611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:51.888" endtime="20201030 18:26:51.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.906" endtime="20201030 18:26:51.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.513" endtime="20201030 18:26:51.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.508" endtime="20201030 18:26:51.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:51.968" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:51.915" endtime="20201030 18:26:51.968"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:51.970" endtime="20201030 18:26:51.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.982" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:51.980" endtime="20201030 18:26:51.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:51.991" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.097000000003516e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.419999999992098e-07, 6.639000000002726e-06, 5.409999999997361e-07, 7.888999999997037e-06, 5.419999999992098e-07, 7.194000000002032e-06, 5.419999999992098e-07, 7.805999999999091e-06, 9.041000000001298e-06, 5.419999999992098e-07, 8.444000000003282e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 7.568999999998938e-06, 8.944000000003782e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000061487e-07, 7.999999999994123e-06, 5.420000000061487e-07, 9.415999999998204e-06, 5.419999999992098e-07, 9.236000000002742e-06, 8.499999999994623e-06, 5.419999999992098e-07, 7.555000000006307e-06, 5.419999999992098e-07, 8.430999999996247e-06, 5.409999999997361e-07, 6.111000000003086e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 6.819999999997661e-06, 7.013999999999632e-06, 5.409999999997361e-07, 7.09800000000399e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.416999999996677e-06, 5.409999999997361e-07, 8.3200000000061e-06, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.554999999998368e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07], 'time': [0.038641611, 0.038642153, 0.038649931, 0.038650472, 0.038659444, 0.038659986, 0.038667083, 0.038667625, 0.038676722, 0.038677264, 0.038686139, 0.038686681, 0.038693556, 0.038694097, 0.038701306, 0.038701847, 0.038707944, 0.038708486, 0.038716486, 0.038717028, 0.038723667, 0.038724208, 0.038732097, 0.038732639, 0.038739833, 0.038740375, 0.038748181, 0.038757222, 0.038757764, 0.038766208, 0.03876675, 0.038774847, 0.038775389, 0.038782042, 0.038782583, 0.038788792, 0.038789333, 0.038797653, 0.038798194, 0.038805403, 0.038805944, 0.038813264, 0.038813806, 0.038821375, 0.038830319, 0.038830861, 0.03883875, 0.038839292, 0.038845819, 0.038846361, 0.038854361, 0.038854903, 0.038864319, 0.038864861, 0.038874097, 0.038882597, 0.038883139, 0.038890694, 0.038891236, 0.038899667, 0.038900208, 0.038906319, 0.038906861, 0.038914625, 0.038915167, 0.038921917, 0.038922458, 0.038930889, 0.038931431, 0.038940764, 0.038941306, 0.038949403, 0.038949944, 0.038956764, 0.038963778, 0.038964319, 0.038971417, 0.038971958, 0.038979278, 0.038979819, 0.038988819, 0.038989361, 0.038997778, 0.038998319, 0.039006639, 0.039007181, 0.039015722, 0.039016264, 0.03902325, 0.039023792, 0.039030347, 0.039030889, 0.039036986, 0.039037528, 0.039044069, 0.039044611], 'eventsource_diff': [0, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 8.972000000002922e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.097000000003516e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.419999999992098e-07, 6.639000000002726e-06, 5.409999999997361e-07, 7.888999999997037e-06, 5.419999999992098e-07, 7.194000000002032e-06, 5.419999999992098e-07, 7.805999999999091e-06, 9.041000000001298e-06, 5.419999999992098e-07, 8.444000000003282e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 7.568999999998938e-06, 8.944000000003782e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000061487e-07, 7.999999999994123e-06, 5.420000000061487e-07, 9.415999999998204e-06, 5.419999999992098e-07, 9.236000000002742e-06, 8.499999999994623e-06, 5.419999999992098e-07, 7.555000000006307e-06, 5.419999999992098e-07, 8.430999999996247e-06, 5.409999999997361e-07, 6.111000000003086e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 6.819999999997661e-06, 7.013999999999632e-06, 5.409999999997361e-07, 7.09800000000399e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.416999999996677e-06, 5.409999999997361e-07, 8.3200000000061e-06, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.554999999998368e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:51.984" endtime="20201030 18:26:51.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.975" endtime="20201030 18:26:51.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:52.012" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:51.997" endtime="20201030 18:26:52.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:52.028" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:52.015" endtime="20201030 18:26:52.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.044" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:52.041" endtime="20201030 18:26:52.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.051" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.041000000001298e-06, 8.444000000003282e-06, 8.096999999998578e-06, 6.653000000002296e-06, 6.2090000000000756e-06, 8.319999999999161e-06, 7.209000000001076e-06, 7.319999999998161e-06, 7.568999999998938e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 8.499999999994623e-06, 7.555000000006307e-06, 8.430999999996247e-06, 6.111000000003086e-06, 7.764000000000382e-06, 6.749999999999812e-06, 8.431000000003186e-06, 9.333000000000258e-06, 8.096999999998578e-06, 6.819999999997661e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:52.048" endtime="20201030 18:26:52.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.030" endtime="20201030 18:26:52.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:52.063" endtime="20201030 18:26:52.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.059" endtime="20201030 18:26:52.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.056" endtime="20201030 18:26:52.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.454" endtime="20201030 18:26:52.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:51.453" endtime="20201030 18:26:52.088"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.110" endtime="20201030 18:26:52.124"></status>
</kw>
<msg timestamp="20201030 18:26:52.125" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.106" endtime="20201030 18:26:52.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.131" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.127" endtime="20201030 18:26:52.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.133" endtime="20201030 18:26:52.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.099" endtime="20201030 18:26:52.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.094" endtime="20201030 18:26:52.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.157" endtime="20201030 18:26:52.502"></status>
</kw>
<msg timestamp="20201030 18:26:52.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037915542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:26:52.153" endtime="20201030 18:26:52.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037915542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:26:52.512" endtime="20201030 18:26:52.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.531" endtime="20201030 18:26:52.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.146" endtime="20201030 18:26:52.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.141" endtime="20201030 18:26:52.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:52.591" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:52.539" endtime="20201030 18:26:52.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.593" endtime="20201030 18:26:52.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.605" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:52.603" endtime="20201030 18:26:52.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.614" level="INFO">VALUE: {'sourcediff': [0, 5.420000000061487e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 7.263999999999882e-06, 5.419999999992098e-07, 6.79200000000546e-06, 7.6109999999976474e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.420000000061487e-07, 7.040999999999298e-06, 9.916999999998177e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.420000000061487e-07, 7.332999999998258e-06, 5.419999999992098e-07, 7.332999999998258e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 8.653000000004296e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.985999999994553e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07, 8.875000000005406e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 7.791000000000048e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.409999999997361e-07, 9.111999999998621e-06, 5.409999999997361e-07, 7.638999999996787e-06, 5.420000000061487e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 5.419999999992098e-07, 8.777000000001478e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.419999999992098e-07, 8.652000000004822e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 9.444999999996817e-06, 5.409999999997361e-07, 6.3200000000041e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 6.652999999995357e-06, 5.41000000006675e-07, 6.666999999994927e-06, 5.419999999992098e-07, 7.639000000003726e-06, 5.409999999997361e-07], 'time': [0.037915, 0.037915542, 0.037922417, 0.037922958, 0.037930944, 0.037931486, 0.037938069, 0.037945333, 0.037945875, 0.037952667, 0.037960278, 0.037960819, 0.037967139, 0.037967681, 0.037974722, 0.037984639, 0.037985181, 0.037992167, 0.037992708, 0.037999139, 0.037999681, 0.038008889, 0.038009431, 0.038016764, 0.038017306, 0.038024639, 0.038025181, 0.038031708, 0.03803225, 0.038041125, 0.038041667, 0.038049542, 0.038050083, 0.038058736, 0.038059278, 0.038067264, 0.038067806, 0.038075792, 0.038076333, 0.038084764, 0.038085306, 0.038094181, 0.038094722, 0.038103597, 0.038104139, 0.038113472, 0.038114014, 0.038122986, 0.038123528, 0.038130403, 0.038130944, 0.038140264, 0.038140806, 0.038148597, 0.038149139, 0.038155333, 0.038155875, 0.038163528, 0.038164069, 0.038173181, 0.038173722, 0.038181361, 0.038181903, 0.038191, 0.038191542, 0.038199306, 0.038199847, 0.038207389, 0.038207931, 0.038216708, 0.03821725, 0.038226111, 0.038226653, 0.038232972, 0.038233514, 0.0382415, 0.038242042, 0.038250694, 0.038251236, 0.038257444, 0.038257986, 0.038266194, 0.038266736, 0.038276181, 0.038276722, 0.038283042, 0.038283583, 0.038290347, 0.038290889, 0.038297097, 0.038297639, 0.038304292, 0.038304833, 0.0383115, 0.038312042, 0.038319681, 0.038320222], 'eventsource_diff': [0, 5.420000000061487e-07, 6.874999999996467e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 6.5829999999975075e-06, 7.263999999999882e-06, 5.419999999992098e-07, 6.79200000000546e-06, 7.6109999999976474e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.420000000061487e-07, 7.040999999999298e-06, 9.916999999998177e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 6.431000000001186e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.420000000061487e-07, 7.332999999998258e-06, 5.419999999992098e-07, 7.332999999998258e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 8.653000000004296e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.985999999994553e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.409999999997361e-07, 8.875000000005406e-06, 5.419999999992098e-07, 9.333000000000258e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 7.791000000000048e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.409999999997361e-07, 9.111999999998621e-06, 5.409999999997361e-07, 7.638999999996787e-06, 5.420000000061487e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.409999999997361e-07, 7.5419999999992715e-06, 5.419999999992098e-07, 8.777000000001478e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.419999999992098e-07, 8.652000000004822e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 9.444999999996817e-06, 5.409999999997361e-07, 6.3200000000041e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 6.652999999995357e-06, 5.41000000006675e-07, 6.666999999994927e-06, 5.419999999992098e-07, 7.639000000003726e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:52.608" endtime="20201030 18:26:52.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.598" endtime="20201030 18:26:52.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:52.629" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 7.263999999999882e-06}, {'diff': 6.79200000000546e-06}, {'diff': 5.409999999997361e-07}, {'...</msg>
<status status="PASS" starttime="20201030 18:26:52.620" endtime="20201030 18:26:52.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:52.638" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 7.263999999999882e-06, 6.79200000000546e-06, 5.409999999997361e-07, 5.420000000061487e-07, 9.916999999998177e-06, 6.98600...</msg>
<status status="PASS" starttime="20201030 18:26:52.631" endtime="20201030 18:26:52.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.648" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:52.646" endtime="20201030 18:26:52.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.654" level="INFO">VALUE: [5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 7.263999999999882e-06, 6.79200000000546e-06, 5.409999999997361e-07, 5.420000000061487e-07, 9.916999999998177e-06, 6.986000000000492e-06, 6.431000000001186e-06, 9.207999999996663e-06, 7.332999999998258e-06, 7.332999999998258e-06, 6.526999999999228e-06, 8.875000000005406e-06, 7.874999999997467e-06, 8.653000000004296e-06, 7.986000000001492e-06, 7.985999999994553e-06, 8.431000000003186e-06, 8.874999999998467e-06, 8.875000000005406e-06, 9.333000000000258e-06, 8.971999999995983e-06, 6.875000000003406e-06, 9.320000000000161e-06, 7.791000000000048e-06, 6.194000000001032e-06, 7.653000000003296e-06, 9.111999999998621e-06, 7.638999999996787e-06, 9.096999999999578e-06, 7.764000000000382e-06, 7.5419999999992715e-06, 8.777000000001478e-06, 8.860999999998898e-06, 6.318999999997688e-06, 7.985999999994553e-06, 8.652000000004822e-06, 6.208000000000602e-06, 8.208000000002602e-06, 9.444999999996817e-06, 6.3200000000041e-06, 6.763999999999382e-06, 6.208000000000602e-06, 6.652999999995357e-06, 6.666999999994927e-06, 7.639000000003726e-06]</msg>
<status status="PASS" starttime="20201030 18:26:52.651" endtime="20201030 18:26:52.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.640" endtime="20201030 18:26:52.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:52.667" endtime="20201030 18:26:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.661" endtime="20201030 18:26:52.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.659" endtime="20201030 18:26:52.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.090" endtime="20201030 18:26:52.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.089" endtime="20201030 18:26:52.692"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.713" endtime="20201030 18:26:52.726"></status>
</kw>
<msg timestamp="20201030 18:26:52.727" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.709" endtime="20201030 18:26:52.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:52.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:52.729" endtime="20201030 18:26:52.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.736" endtime="20201030 18:26:52.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.702" endtime="20201030 18:26:52.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.698" endtime="20201030 18:26:52.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:52.759" endtime="20201030 18:26:53.109"></status>
</kw>
<msg timestamp="20201030 18:26:53.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036336847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036346806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:52.756" endtime="20201030 18:26:53.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036336847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036346806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:53.119" endtime="20201030 18:26:53.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.138" endtime="20201030 18:26:53.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.749" endtime="20201030 18:26:53.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.744" endtime="20201030 18:26:53.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:53.202" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:53.147" endtime="20201030 18:26:53.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.204" endtime="20201030 18:26:53.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.216" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:53.214" endtime="20201030 18:26:53.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.226" level="INFO">VALUE: {'sourcediff': [0, 9.959000000003826e-06, 5.409999999997361e-07, 8.999999999995123e-06, 5.420000000061487e-07, 8.082999999999008e-06, 5.419999999992098e-07, 7.443999999995343e-06, 5.420000000061487e-07, 6.193999999994093e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 7.429999999995773e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.420000000061487e-07, 7.652999999996357e-06, 5.419999999992098e-07, 7.763000000000908e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.777000000001478e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 6.415999999995203e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.419999999992098e-07, 7.000000000000062e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 6.111000000003086e-06, 5.409999999997361e-07, 7.777999999999952e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 6.3190000000046265e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 9.429999999997773e-06, 5.419999999992098e-07, 7.403000000003046e-06, 9.901999999999134e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.409999999997361e-07], 'time': [0.036336847, 0.036346806, 0.036347347, 0.036356347, 0.036356889, 0.036364972, 0.036365514, 0.036372958, 0.0363735, 0.036379694, 0.036380236, 0.036387792, 0.036388333, 0.036394639, 0.036395181, 0.0364025, 0.036403042, 0.036409472, 0.036410014, 0.036418125, 0.036418667, 0.036424861, 0.036425403, 0.036432833, 0.036433375, 0.036441917, 0.036442458, 0.036451889, 0.036452431, 0.036458875, 0.036459417, 0.036466069, 0.036466611, 0.036474264, 0.036474806, 0.036482569, 0.036483111, 0.036490764, 0.036491306, 0.036500625, 0.036501167, 0.036509944, 0.036510486, 0.036517125, 0.036517667, 0.036526, 0.036526542, 0.036532958, 0.0365335, 0.036540486, 0.036541028, 0.036549903, 0.036550444, 0.036559764, 0.036560306, 0.036566625, 0.036567167, 0.036574167, 0.036574708, 0.036584014, 0.036584556, 0.036590667, 0.036591208, 0.036598986, 0.036599528, 0.036605722, 0.036606264, 0.03661225, 0.036612792, 0.036619111, 0.036619653, 0.036628208, 0.03662875, 0.036637514, 0.036638056, 0.036646917, 0.036647458, 0.036654889, 0.036655431, 0.036664861, 0.036665403, 0.036672806, 0.036682708, 0.03668325, 0.036689222, 0.036689764, 0.036696208, 0.03669675, 0.036702958, 0.0367035, 0.036709472, 0.036710014, 0.036719111, 0.036719653, 0.036725875, 0.036726417, 0.036734292, 0.036734833], 'eventsource_diff': [0, 9.959000000003826e-06, 5.409999999997361e-07, 8.999999999995123e-06, 5.420000000061487e-07, 8.082999999999008e-06, 5.419999999992098e-07, 7.443999999995343e-06, 5.420000000061487e-07, 6.193999999994093e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 7.429999999995773e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.420000000061487e-07, 7.652999999996357e-06, 5.419999999992098e-07, 7.763000000000908e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.777000000001478e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 6.415999999995203e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.419999999992098e-07, 7.000000000000062e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 6.111000000003086e-06, 5.409999999997361e-07, 7.777999999999952e-06, 5.419999999992098e-07, 6.194000000001032e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 6.3190000000046265e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.419999999992098e-07, 8.860999999998898e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 9.429999999997773e-06, 5.419999999992098e-07, 7.403000000003046e-06, 9.901999999999134e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.419999999992098e-07, 6.444000000001282e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:53.219" endtime="20201030 18:26:53.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.209" endtime="20201030 18:26:53.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:53.240" level="INFO">${RESULT} = [{'diff': 9.959000000003826e-06}, {'diff': 8.999999999995123e-06}, {'diff': 8.082999999999008e-06}, {'diff': 7.443999999995343e-06}, {'diff': 6.193999999994093e-06}, {'diff': 7.555999999998841e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:53.231" endtime="20201030 18:26:53.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:53.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.959000000003826e-06, 8.999999999995123e-06, 8.082999999999008e-06, 7.443999999995343e-06, 6.193999999994093e-06, 7.555999999998841e-06, 6.305999999997591e-06, 7.318999999998688e-06, 6.4300...</msg>
<status status="PASS" starttime="20201030 18:26:53.242" endtime="20201030 18:26:53.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.261" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:53.259" endtime="20201030 18:26:53.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.266" level="INFO">VALUE: [9.959000000003826e-06, 8.999999999995123e-06, 8.082999999999008e-06, 7.443999999995343e-06, 6.193999999994093e-06, 7.555999999998841e-06, 6.305999999997591e-06, 7.318999999998688e-06, 6.430000000001712e-06, 8.111000000005086e-06, 6.194000000001032e-06, 7.429999999995773e-06, 8.542000000000272e-06, 9.431000000004186e-06, 6.444000000001282e-06, 6.6519999999958834e-06, 7.652999999996357e-06, 7.763000000000908e-06, 7.653000000003296e-06, 9.319000000000688e-06, 8.777000000001478e-06, 6.638999999995787e-06, 8.333000000006197e-06, 6.415999999995203e-06, 6.986000000000492e-06, 8.874999999998467e-06, 9.320000000000161e-06, 6.318999999997688e-06, 7.000000000000062e-06, 9.306000000000592e-06, 6.111000000003086e-06, 7.777999999999952e-06, 6.194000000001032e-06, 5.985999999999492e-06, 6.3190000000046265e-06, 8.555000000000368e-06, 8.764000000001382e-06, 8.860999999998898e-06, 7.431000000002186e-06, 9.429999999997773e-06, 7.403000000003046e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:53.263" endtime="20201030 18:26:53.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.253" endtime="20201030 18:26:53.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.278" endtime="20201030 18:26:53.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.274" endtime="20201030 18:26:53.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.271" endtime="20201030 18:26:53.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.694" endtime="20201030 18:26:53.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:52.693" endtime="20201030 18:26:53.303"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.324" endtime="20201030 18:26:53.337"></status>
</kw>
<msg timestamp="20201030 18:26:53.338" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.321" endtime="20201030 18:26:53.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.344" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:53.340" endtime="20201030 18:26:53.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.347" endtime="20201030 18:26:53.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.313" endtime="20201030 18:26:53.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.309" endtime="20201030 18:26:53.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.370" endtime="20201030 18:26:53.722"></status>
</kw>
<msg timestamp="20201030 18:26:53.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0364835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036484042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:53.367" endtime="20201030 18:26:53.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0364835, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036484042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:26:53.731" endtime="20201030 18:26:53.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.751" endtime="20201030 18:26:53.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.359" endtime="20201030 18:26:53.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.355" endtime="20201030 18:26:53.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:53.830" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:53.764" endtime="20201030 18:26:53.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:53.833" endtime="20201030 18:26:53.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.849" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:53.846" endtime="20201030 18:26:53.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.859" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 8.638999999997787e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.409999999997361e-07, 6.33400000000367e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.235999999995803e-06, 5.419999999992098e-07, 7.305000000006057e-06, 5.419999999992098e-07, 9.402999999998107e-06, 8.000000000001062e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 6.638000000003252e-06, 5.419999999992098e-07, 6.902999999995607e-06, 7.722000000001672e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.888999999998037e-06, 6.8330000000046964e-06, 5.419999999992098e-07, 8.901999999998134e-06, 9.194999999996567e-06, 5.420000000061487e-07, 7.304999999999118e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.409999999997361e-07, 9.111999999998621e-06, 5.409999999997361e-07, 8.860999999998898e-06, 5.419999999992098e-07, 6.54200000000521e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07, 8.666999999996927e-06, 5.409999999997361e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 6.555999999997841e-06, 5.419999999992098e-07, 7.416000000003142e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 6.917000000002116e-06, 5.409999999997361e-07, 8.987000000001966e-06, 5.409999999997361e-07], 'time': [0.0364835, 0.036484042, 0.036492681, 0.036493222, 0.036502542, 0.036503083, 0.036512528, 0.036513069, 0.036521597, 0.036522139, 0.036530792, 0.036531333, 0.036537667, 0.036538208, 0.036544958, 0.0365455, 0.036554736, 0.036555278, 0.036562583, 0.036563125, 0.036572528, 0.036580528, 0.036581069, 0.036589278, 0.036589819, 0.036599153, 0.036599694, 0.036607014, 0.036607556, 0.036614194, 0.036614736, 0.036621639, 0.036629361, 0.036629903, 0.036637556, 0.036638097, 0.036646194, 0.036646736, 0.036655736, 0.036656278, 0.036665167, 0.036672, 0.036672542, 0.036681444, 0.036690639, 0.036691181, 0.036698486, 0.036699028, 0.036706806, 0.036707347, 0.036715556, 0.036716097, 0.036722403, 0.036722944, 0.036732056, 0.036732597, 0.036741458, 0.036742, 0.036748542, 0.036749083, 0.036756958, 0.0367575, 0.036764597, 0.036765139, 0.036772125, 0.036772667, 0.036779208, 0.03677975, 0.036788417, 0.036788958, 0.036795819, 0.036796361, 0.03680425, 0.036804792, 0.036813667, 0.036814208, 0.036822417, 0.036822958, 0.036829514, 0.036830056, 0.036837472, 0.036838014, 0.036845556, 0.036846097, 0.036852083, 0.036852625, 0.036861722, 0.036862264, 0.036871028, 0.036871569, 0.036878611, 0.036885528, 0.036886069, 0.036895056, 0.036895597], 'eventsource_diff': [0, 5.419999999992098e-07, 8.638999999997787e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.409999999997361e-07, 6.33400000000367e-06, 5.409999999997361e-07, 6.749999999999812e-06, 5.419999999992098e-07, 9.235999999995803e-06, 5.419999999992098e-07, 7.305000000006057e-06, 5.419999999992098e-07, 9.402999999998107e-06, 8.000000000001062e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 9.333999999999731e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 6.638000000003252e-06, 5.419999999992098e-07, 6.902999999995607e-06, 7.722000000001672e-06, 5.419999999992098e-07, 7.653000000003296e-06, 5.409999999997361e-07, 8.096999999998578e-06, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.888999999998037e-06, 6.8330000000046964e-06, 5.419999999992098e-07, 8.901999999998134e-06, 9.194999999996567e-06, 5.420000000061487e-07, 7.304999999999118e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.409999999997361e-07, 9.111999999998621e-06, 5.409999999997361e-07, 8.860999999998898e-06, 5.419999999992098e-07, 6.54200000000521e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07, 8.666999999996927e-06, 5.409999999997361e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 6.555999999997841e-06, 5.419999999992098e-07, 7.416000000003142e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.0419999999987715e-06, 6.917000000002116e-06, 5.409999999997361e-07, 8.987000000001966e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:53.851" endtime="20201030 18:26:53.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.840" endtime="20201030 18:26:53.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:53.875" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:53.865" endtime="20201030 18:26:53.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:53.886" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:53.878" endtime="20201030 18:26:53.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.897" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:53.894" endtime="20201030 18:26:53.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:53.903" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.000000000001062e-06, 8.209000000002076e-06, 9.333999999999731e-06, 7.319999999998161e-06, 6.638000000003252e-06, 6.902999999995607e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 6.8330000000046964e-06, 8.901999999998134e-06, 5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 6.917000000002116e-06, 8.987000000001966e-06]</msg>
<status status="PASS" starttime="20201030 18:26:53.899" endtime="20201030 18:26:53.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.888" endtime="20201030 18:26:53.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:53.916" endtime="20201030 18:26:53.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.911" endtime="20201030 18:26:53.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.908" endtime="20201030 18:26:53.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.305" endtime="20201030 18:26:53.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.304" endtime="20201030 18:26:53.960"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.009" endtime="20201030 18:26:54.032"></status>
</kw>
<msg timestamp="20201030 18:26:54.033" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.000" endtime="20201030 18:26:54.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.035" endtime="20201030 18:26:54.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.042" endtime="20201030 18:26:54.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.985" endtime="20201030 18:26:54.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.974" endtime="20201030 18:26:54.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.067" endtime="20201030 18:26:54.412"></status>
</kw>
<msg timestamp="20201030 18:26:54.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.087032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087038583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:54.063" endtime="20201030 18:26:54.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.087032097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.087038583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:54.421" endtime="20201030 18:26:54.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.439" endtime="20201030 18:26:54.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.056" endtime="20201030 18:26:54.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.051" endtime="20201030 18:26:54.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:54.498" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:54.447" endtime="20201030 18:26:54.499"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.500" endtime="20201030 18:26:54.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.512" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:54.510" endtime="20201030 18:26:54.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.521" level="INFO">VALUE: {'sourcediff': [0, 6.485999999999992e-06, 5.419999999922709e-07, 9.444000000011221e-06, 8.278000000000452e-06, 5.419999999922709e-07, 7.5419999999992715e-06, 5.41000000006675e-07, 6.319999999990222e-06, 5.41000000006675e-07, 8.986000000002492e-06, 5.419999999922709e-07, 8.445000000009695e-06, 5.409999999927972e-07, 8.971999999995983e-06, 5.420000000061487e-07, 8.444999999995817e-06, 5.41000000006675e-07, 6.860999999996897e-06, 5.420000000061487e-07, 7.318999999991749e-06, 5.420000000061487e-07, 5.985999999999492e-06, 5.419999999922709e-07, 7.111000000004086e-06, 5.420000000061487e-07, 7.651999999996884e-06, 5.419999999922709e-07, 8.096999999998578e-06, 5.420000000061487e-07, 7.763999999993443e-06, 5.420000000061487e-07, 7.76299999999397e-06, 5.420000000061487e-07, 6.096999999996577e-06, 5.420000000061487e-07, 6.986000000000492e-06, 5.419999999922709e-07, 7.332999999998258e-06, 5.420000000061487e-07, 6.986000000000492e-06, 5.420000000061487e-07, 6.874999999989528e-06, 5.41000000006675e-07, 7.013999999999632e-06, 9.096999999999578e-06, 9.278000000001452e-06, 8.278000000000452e-06, 5.419999999922709e-07, 6.0000000000060005e-06, 5.409999999927972e-07, 8.08400000000542e-06, 5.409999999927972e-07, 6.667000000001866e-06, 5.420000000061487e-07, 8.860999999998898e-06, 5.41000000006675e-07, 8.263999999993943e-06, 9.944999999997317e-06, 5.41000000006675e-07, 8.319999999992223e-06, 5.41000000006675e-07, 9.097999999999051e-06, 5.409999999927972e-07, 6.889000000009915e-06, 7.208999999994137e-06, 7.040999999999298e-06, 5.420000000061487e-07, 6.652999999995357e-06, 5.409999999927972e-07, 6.542000000012149e-06, 5.419999999922709e-07, 7.430000000002712e-06, 5.420000000061487e-07, 9.429999999990835e-06, 5.420000000061487e-07, 8.542000000000272e-06, 5.409999999927972e-07, 8.667000000003866e-06, 5.420000000061487e-07, 6.888999999996037e-06, 9.833000000000758e-06, 5.419999999922709e-07, 8.111000000005086e-06, 5.409999999927972e-07, 6.9869999999999655e-06, 5.41000000006675e-07, 6.096999999996577e-06, 5.420000000061487e-07, 8.110999999991209e-06, 5.420000000061487e-07], 'time': [0.087032097, 0.087038583, 0.087039125, 0.087048569, 0.087056847, 0.087057389, 0.087064931, 0.087065472, 0.087071792, 0.087072333, 0.087081319, 0.087081861, 0.087090306, 0.087090847, 0.087099819, 0.087100361, 0.087108806, 0.087109347, 0.087116208, 0.08711675, 0.087124069, 0.087124611, 0.087130597, 0.087131139, 0.08713825, 0.087138792, 0.087146444, 0.087146986, 0.087155083, 0.087155625, 0.087163389, 0.087163931, 0.087171694, 0.087172236, 0.087178333, 0.087178875, 0.087185861, 0.087186403, 0.087193736, 0.087194278, 0.087201264, 0.087201806, 0.087208681, 0.087209222, 0.087216236, 0.087225333, 0.087234611, 0.087242889, 0.087243431, 0.087249431, 0.087249972, 0.087258056, 0.087258597, 0.087265264, 0.087265806, 0.087274667, 0.087275208, 0.087283472, 0.087293417, 0.087293958, 0.087302278, 0.087302819, 0.087311917, 0.087312458, 0.087319347, 0.087326556, 0.087333597, 0.087334139, 0.087340792, 0.087341333, 0.087347875, 0.087348417, 0.087355847, 0.087356389, 0.087365819, 0.087366361, 0.087374903, 0.087375444, 0.087384111, 0.087384653, 0.087391542, 0.087401375, 0.087401917, 0.087410028, 0.087410569, 0.087417556, 0.087418097, 0.087424194, 0.087424736, 0.087432847, 0.087433389], 'eventsource_diff': [0, 6.485999999999992e-06, 5.419999999922709e-07, 9.444000000011221e-06, 8.278000000000452e-06, 5.419999999922709e-07, 7.5419999999992715e-06, 5.41000000006675e-07, 6.319999999990222e-06, 5.41000000006675e-07, 8.986000000002492e-06, 5.419999999922709e-07, 8.445000000009695e-06, 5.409999999927972e-07, 8.971999999995983e-06, 5.420000000061487e-07, 8.444999999995817e-06, 5.41000000006675e-07, 6.860999999996897e-06, 5.420000000061487e-07, 7.318999999991749e-06, 5.420000000061487e-07, 5.985999999999492e-06, 5.419999999922709e-07, 7.111000000004086e-06, 5.420000000061487e-07, 7.651999999996884e-06, 5.419999999922709e-07, 8.096999999998578e-06, 5.420000000061487e-07, 7.763999999993443e-06, 5.420000000061487e-07, 7.76299999999397e-06, 5.420000000061487e-07, 6.096999999996577e-06, 5.420000000061487e-07, 6.986000000000492e-06, 5.419999999922709e-07, 7.332999999998258e-06, 5.420000000061487e-07, 6.986000000000492e-06, 5.420000000061487e-07, 6.874999999989528e-06, 5.41000000006675e-07, 7.013999999999632e-06, 9.096999999999578e-06, 9.278000000001452e-06, 8.278000000000452e-06, 5.419999999922709e-07, 6.0000000000060005e-06, 5.409999999927972e-07, 8.08400000000542e-06, 5.409999999927972e-07, 6.667000000001866e-06, 5.420000000061487e-07, 8.860999999998898e-06, 5.41000000006675e-07, 8.263999999993943e-06, 9.944999999997317e-06, 5.41000000006675e-07, 8.319999999992223e-06, 5.41000000006675e-07, 9.097999999999051e-06, 5.409999999927972e-07, 6.889000000009915e-06, 7.208999999994137e-06, 7.040999999999298e-06, 5.420000000061487e-07, 6.652999999995357e-06, 5.409999999927972e-07, 6.542000000012149e-06, 5.419999999922709e-07, 7.430000000002712e-06, 5.420000000061487e-07, 9.429999999990835e-06, 5.420000000061487e-07, 8.542000000000272e-06, 5.409999999927972e-07, 8.667000000003866e-06, 5.420000000061487e-07, 6.888999999996037e-06, 9.833000000000758e-06, 5.419999999922709e-07, 8.111000000005086e-06, 5.409999999927972e-07, 6.9869999999999655e-06, 5.41000000006675e-07, 6.096999999996577e-06, 5.420000000061487e-07, 8.110999999991209e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:54.515" endtime="20201030 18:26:54.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.505" endtime="20201030 18:26:54.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:54.535" level="INFO">${RESULT} = [{'diff': 6.485999999999992e-06}, {'diff': 9.444000000011221e-06}, {'diff': 5.419999999922709e-07}, {'diff': 5.41000000006675e-07}, {'diff': 5.41000000006675e-07}, {'diff': 5.419999999922709e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 18:26:54.527" endtime="20201030 18:26:54.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:54.545" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.485999999999992e-06, 9.444000000011221e-06, 5.419999999922709e-07, 5.41000000006675e-07, 5.41000000006675e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.410000...</msg>
<status status="PASS" starttime="20201030 18:26:54.537" endtime="20201030 18:26:54.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.555" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:54.553" endtime="20201030 18:26:54.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.561" level="INFO">VALUE: [6.485999999999992e-06, 9.444000000011221e-06, 5.419999999922709e-07, 5.41000000006675e-07, 5.41000000006675e-07, 5.419999999922709e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.41000000006675e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.41000000006675e-07, 9.096999999999578e-06, 8.278000000000452e-06, 6.0000000000060005e-06, 8.08400000000542e-06, 6.667000000001866e-06, 8.860999999998898e-06, 8.263999999993943e-06, 5.41000000006675e-07, 5.41000000006675e-07, 5.409999999927972e-07, 7.208999999994137e-06, 5.420000000061487e-07, 5.409999999927972e-07, 5.419999999922709e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.409999999927972e-07, 5.420000000061487e-07, 9.833000000000758e-06, 8.111000000005086e-06, 6.9869999999999655e-06, 6.096999999996577e-06, 8.110999999991209e-06]</msg>
<status status="PASS" starttime="20201030 18:26:54.558" endtime="20201030 18:26:54.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.547" endtime="20201030 18:26:54.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:54.572" endtime="20201030 18:26:54.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.568" endtime="20201030 18:26:54.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.566" endtime="20201030 18:26:54.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.965" endtime="20201030 18:26:54.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:53.962" endtime="20201030 18:26:54.597"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.618" endtime="20201030 18:26:54.631"></status>
</kw>
<msg timestamp="20201030 18:26:54.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.614" endtime="20201030 18:26:54.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:54.638" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:54.634" endtime="20201030 18:26:54.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.641" endtime="20201030 18:26:54.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.607" endtime="20201030 18:26:54.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.602" endtime="20201030 18:26:54.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:54.664" endtime="20201030 18:26:55.010"></status>
</kw>
<msg timestamp="20201030 18:26:55.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03585625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:54.661" endtime="20201030 18:26:55.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03585625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:55.019" endtime="20201030 18:26:55.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.038" endtime="20201030 18:26:55.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.653" endtime="20201030 18:26:55.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.649" endtime="20201030 18:26:55.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:55.098" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:55.046" endtime="20201030 18:26:55.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.100" endtime="20201030 18:26:55.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.112" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:55.110" endtime="20201030 18:26:55.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.122" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.888999999998037e-06, 5.420000000061487e-07, 8.416999999996677e-06, 5.409999999997361e-07, 9.166999999997427e-06, 7.236000000000742e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.419999999992098e-07, 6.139000000002226e-06, 6.818999999998188e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.409999999997361e-07, 6.445000000000756e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.083000000003946e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 8.180000000003462e-06, 8.000000000001062e-06, 5.419999999992098e-07, 8.763999999994443e-06, 5.420000000061487e-07, 9.443999999997343e-06, 5.419999999992098e-07, 7.652000000003822e-06, 5.419999999992098e-07, 8.638999999997787e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.000000000000062e-06, 5.419999999992098e-07, 7.638999999996787e-06, 5.409999999997361e-07, 7.3200000000051e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.419999999992098e-07, 8.887999999998564e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.419999999992098e-07, 7.429999999995773e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.409999999997361e-07, 9.209000000003076e-06, 5.409999999997361e-07, 8.208999999995137e-06, 5.409999999997361e-07, 7.09800000000399e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.458000000001852e-06, 6.874999999996467e-06], 'time': [0.03585625, 0.035856792, 0.035863778, 0.035864319, 0.035873208, 0.03587375, 0.035882167, 0.035882708, 0.035891875, 0.035899111, 0.035899653, 0.035906972, 0.035907514, 0.035915625, 0.035916167, 0.035922306, 0.035929125, 0.035929667, 0.035939111, 0.035939653, 0.035946292, 0.035946833, 0.035953278, 0.035953819, 0.035960583, 0.035961125, 0.035967208, 0.03596775, 0.035973736, 0.035974278, 0.035982458, 0.035990458, 0.035991, 0.035999764, 0.036000306, 0.03600975, 0.036010292, 0.036017944, 0.036018486, 0.036027125, 0.036027667, 0.036034097, 0.036034639, 0.036042861, 0.036043403, 0.036050167, 0.036050708, 0.036058694, 0.036059236, 0.036066236, 0.036066778, 0.036074417, 0.036074958, 0.036082278, 0.036082819, 0.036089139, 0.036089681, 0.036098569, 0.036099111, 0.036108083, 0.036108625, 0.0361165, 0.036117042, 0.036124472, 0.036125014, 0.036132333, 0.036132875, 0.03614075, 0.036141292, 0.036149278, 0.036149819, 0.03615825, 0.036158792, 0.036166903, 0.036167444, 0.036176653, 0.036177194, 0.036185403, 0.036185944, 0.036193042, 0.036193583, 0.036199569, 0.036200111, 0.036206097, 0.036206639, 0.036213847, 0.036214389, 0.036222931, 0.036223472, 0.036231792, 0.036232333, 0.036239208, 0.03623975, 0.036247208, 0.036254083], 'eventsource_diff': [0, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.888999999998037e-06, 5.420000000061487e-07, 8.416999999996677e-06, 5.409999999997361e-07, 9.166999999997427e-06, 7.236000000000742e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.419999999992098e-07, 6.139000000002226e-06, 6.818999999998188e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.409999999997361e-07, 6.445000000000756e-06, 5.409999999997361e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.083000000003946e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 8.180000000003462e-06, 8.000000000001062e-06, 5.419999999992098e-07, 8.763999999994443e-06, 5.420000000061487e-07, 9.443999999997343e-06, 5.419999999992098e-07, 7.652000000003822e-06, 5.419999999992098e-07, 8.638999999997787e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.000000000000062e-06, 5.419999999992098e-07, 7.638999999996787e-06, 5.409999999997361e-07, 7.3200000000051e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.419999999992098e-07, 8.887999999998564e-06, 5.420000000061487e-07, 8.971999999995983e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.419999999992098e-07, 7.429999999995773e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.419999999992098e-07, 8.110999999998147e-06, 5.409999999997361e-07, 9.209000000003076e-06, 5.409999999997361e-07, 8.208999999995137e-06, 5.409999999997361e-07, 7.09800000000399e-06, 5.409999999997361e-07, 5.985999999999492e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.458000000001852e-06, 6.874999999996467e-06]}</msg>
<status status="PASS" starttime="20201030 18:26:55.114" endtime="20201030 18:26:55.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.104" endtime="20201030 18:26:55.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:55.136" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.409999999997361e-07}, {'diff': 7.236000000000742e-06}, {'diff': 7.3190000000056266e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:55.127" endtime="20201030 18:26:55.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:55.145" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.409999999997361e-07, 7.236000000000742e-06, 7.3190000000056266e-06, 8.110999999998147e-06, 6.139000000002226e-06, 5.419...</msg>
<status status="PASS" starttime="20201030 18:26:55.138" endtime="20201030 18:26:55.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.155" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:55.153" endtime="20201030 18:26:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.160" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.409999999997361e-07, 7.236000000000742e-06, 7.3190000000056266e-06, 8.110999999998147e-06, 6.139000000002226e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.000000000001062e-06, 8.763999999994443e-06, 9.443999999997343e-06, 7.652000000003822e-06, 8.638999999997787e-06, 6.430000000001712e-06, 8.222000000002172e-06, 6.763999999999382e-06, 7.986000000001492e-06, 7.000000000000062e-06, 7.638999999996787e-06, 7.3200000000051e-06, 6.319999999997161e-06, 8.887999999998564e-06, 8.971999999995983e-06, 7.875000000004406e-06, 7.429999999995773e-06, 7.3190000000056266e-06, 7.874999999997467e-06, 7.986000000001492e-06, 8.431000000003186e-06, 8.110999999998147e-06, 9.209000000003076e-06, 8.208999999995137e-06, 7.09800000000399e-06, 5.985999999999492e-06, 5.985999999999492e-06, 7.208000000001602e-06, 8.542000000000272e-06, 8.319999999999161e-06, 6.875000000003406e-06, 7.458000000001852e-06]</msg>
<status status="PASS" starttime="20201030 18:26:55.157" endtime="20201030 18:26:55.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.147" endtime="20201030 18:26:55.163"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:55.172" endtime="20201030 18:26:55.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.168" endtime="20201030 18:26:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.165" endtime="20201030 18:26:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.599" endtime="20201030 18:26:55.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:54.598" endtime="20201030 18:26:55.197"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.219" endtime="20201030 18:26:55.232"></status>
</kw>
<msg timestamp="20201030 18:26:55.234" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.215" endtime="20201030 18:26:55.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.240" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.236" endtime="20201030 18:26:55.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.242" endtime="20201030 18:26:55.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.208" endtime="20201030 18:26:55.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.203" endtime="20201030 18:26:55.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.267" endtime="20201030 18:26:55.597"></status>
</kw>
<msg timestamp="20201030 18:26:55.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037949208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03794975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:55.264" endtime="20201030 18:26:55.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037949208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03794975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:55.606" endtime="20201030 18:26:55.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.625" endtime="20201030 18:26:55.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.257" endtime="20201030 18:26:55.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.252" endtime="20201030 18:26:55.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:55.683" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:55.633" endtime="20201030 18:26:55.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.686" endtime="20201030 18:26:55.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.698" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:55.696" endtime="20201030 18:26:55.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.707" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 8.444000000003282e-06, 5.419999999992098e-07, 6.860999999996897e-06, 5.420000000061487e-07, 7.318999999998688e-06, 5.419999999992098e-07, 7.138999999996287e-06, 9.042000000000772e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.41000000006675e-07, 8.541999999993333e-06, 5.420000000061487e-07, 8.651999999997884e-06, 5.419999999992098e-07, 6.931000000001686e-06, 8.707999999996163e-06, 5.419999999992098e-07, 6.389000000002476e-06, 9.569000000000938e-06, 5.419999999992098e-07, 8.222000000002172e-06, 6.8469999999973274e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 8.111999999997621e-06, 5.409999999997361e-07, 7.639000000003726e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.250000000000312e-06, 8.708000000003102e-06, 5.419999999992098e-07, 6.762999999999908e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 8.195000000002506e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.277000000000978e-06, 7.388999999996537e-06, 6.83400000000417e-06, 5.409999999997361e-07, 6.874999999996467e-06, 5.420000000061487e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 9.138999999998287e-06, 9.041000000001298e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07], 'time': [0.037949208, 0.03794975, 0.037958194, 0.037958736, 0.037965597, 0.037966139, 0.037973458, 0.037974, 0.037981139, 0.037990181, 0.037990722, 0.037999042, 0.037999583, 0.038008125, 0.038008667, 0.038017319, 0.038017861, 0.038024792, 0.0380335, 0.038034042, 0.038040431, 0.03805, 0.038050542, 0.038058764, 0.038065611, 0.038066153, 0.038073028, 0.038073569, 0.038081681, 0.038082222, 0.038089861, 0.038090403, 0.0380985, 0.038099042, 0.038107139, 0.038107681, 0.038115, 0.038115542, 0.038123639, 0.038124181, 0.038131431, 0.038140139, 0.038140681, 0.038147444, 0.038147986, 0.038156639, 0.038157181, 0.038165736, 0.038166278, 0.038173028, 0.038173569, 0.038183014, 0.038183556, 0.038192097, 0.038192639, 0.038201181, 0.038201722, 0.038210375, 0.038210917, 0.038218917, 0.038219458, 0.038225556, 0.038226097, 0.038234292, 0.038234833, 0.038243486, 0.038244028, 0.038250028, 0.038250569, 0.038258542, 0.038259083, 0.038266403, 0.038266944, 0.038273819, 0.038274361, 0.038282125, 0.038282667, 0.038290944, 0.038298333, 0.038305167, 0.038305708, 0.038312583, 0.038313125, 0.038320222, 0.038320764, 0.038329861, 0.038330403, 0.038339542, 0.038348583, 0.038349125, 0.038358333, 0.038358875], 'eventsource_diff': [0, 5.419999999992098e-07, 8.444000000003282e-06, 5.419999999992098e-07, 6.860999999996897e-06, 5.420000000061487e-07, 7.318999999998688e-06, 5.419999999992098e-07, 7.138999999996287e-06, 9.042000000000772e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.41000000006675e-07, 8.541999999993333e-06, 5.420000000061487e-07, 8.651999999997884e-06, 5.419999999992098e-07, 6.931000000001686e-06, 8.707999999996163e-06, 5.419999999992098e-07, 6.389000000002476e-06, 9.569000000000938e-06, 5.419999999992098e-07, 8.222000000002172e-06, 6.8469999999973274e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 8.111999999997621e-06, 5.409999999997361e-07, 7.639000000003726e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.419999999992098e-07, 7.250000000000312e-06, 8.708000000003102e-06, 5.419999999992098e-07, 6.762999999999908e-06, 5.419999999992098e-07, 8.652999999997357e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.409999999997361e-07, 9.445000000003756e-06, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 8.542000000000272e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 8.000000000001062e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 8.195000000002506e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.409999999997361e-07, 7.973000000001396e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.277000000000978e-06, 7.388999999996537e-06, 6.83400000000417e-06, 5.409999999997361e-07, 6.874999999996467e-06, 5.420000000061487e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 9.138999999998287e-06, 9.041000000001298e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:55.700" endtime="20201030 18:26:55.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.690" endtime="20201030 18:26:55.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:55.720" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {'diff': 9.042000000000772e-06}, {'diff': 8.319999999999161e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:55.712" endtime="20201030 18:26:55.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:55.729" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 9.042000000000772e-06, 8.319999999999161e-06, 8.541999999993333e-06, 8.651999999997884e-06, 6.9310...</msg>
<status status="PASS" starttime="20201030 18:26:55.722" endtime="20201030 18:26:55.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.740" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:55.737" endtime="20201030 18:26:55.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.745" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 9.042000000000772e-06, 8.319999999999161e-06, 8.541999999993333e-06, 8.651999999997884e-06, 6.931000000001686e-06, 5.419999999992098e-07, 9.569000000000938e-06, 8.222000000002172e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.708000000003102e-06, 6.762999999999908e-06, 8.652999999997357e-06, 8.555000000000368e-06, 6.749999999999812e-06, 9.445000000003756e-06, 8.541000000000798e-06, 8.542000000000272e-06, 8.652999999997357e-06, 8.000000000001062e-06, 6.09800000000299e-06, 8.195000000002506e-06, 8.652999999997357e-06, 5.999999999999062e-06, 7.973000000001396e-06, 7.319999999998161e-06, 6.875000000003406e-06, 7.764000000000382e-06, 8.277000000000978e-06, 6.83400000000417e-06, 6.874999999996467e-06, 7.0969999999975775e-06, 9.096999999999578e-06, 9.138999999998287e-06, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:55.742" endtime="20201030 18:26:55.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.731" endtime="20201030 18:26:55.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:55.759" endtime="20201030 18:26:55.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.752" endtime="20201030 18:26:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.750" endtime="20201030 18:26:55.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.199" endtime="20201030 18:26:55.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.198" endtime="20201030 18:26:55.784"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.805" endtime="20201030 18:26:55.818"></status>
</kw>
<msg timestamp="20201030 18:26:55.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.801" endtime="20201030 18:26:55.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:55.825" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:55.821" endtime="20201030 18:26:55.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.828" endtime="20201030 18:26:55.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.794" endtime="20201030 18:26:55.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.790" endtime="20201030 18:26:55.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:55.851" endtime="20201030 18:26:56.187"></status>
</kw>
<msg timestamp="20201030 18:26:56.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035954069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035954611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:55.848" endtime="20201030 18:26:56.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035954069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035954611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:56.195" endtime="20201030 18:26:56.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.213" endtime="20201030 18:26:56.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.841" endtime="20201030 18:26:56.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.836" endtime="20201030 18:26:56.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:56.272" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:56.222" endtime="20201030 18:26:56.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.275" endtime="20201030 18:26:56.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.291" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:56.288" endtime="20201030 18:26:56.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.301" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 8.124999999997717e-06, 9.958000000004352e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.014000000000632e-06, 8.277000000000978e-06, 5.419999999992098e-07, 9.430999999997247e-06, 5.409999999997361e-07, 6.33400000000367e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 8.985999999995553e-06, 5.420000000061487e-07, 8.221999999995233e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000061487e-07, 9.152999999997857e-06, 7.1519999999963835e-06, 5.420000000061487e-07, 6.7779999999989515e-06, 9.290999999994609e-06, 5.420000000061487e-07, 9.013999999994693e-06, 7.611000000004586e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.420000000061487e-07, 6.5829999999975075e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 7.569999999998411e-06, 9.722000000003672e-06, 5.419999999992098e-07, 9.360999999999398e-06, 9.235999999995803e-06, 8.332999999999258e-06, 5.420000000061487e-07, 6.888999999996037e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.319999999998161e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.409999999997361e-07, 8.819999999999661e-06, 9.805000000001618e-06, 5.419999999992098e-07, 8.707999999996163e-06, 9.959000000003826e-06, 8.374999999997967e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 6.110999999996147e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07], 'time': [0.035954069, 0.035954611, 0.035961708, 0.03596225, 0.035969458, 0.03597, 0.035977653, 0.035978194, 0.035985625, 0.035986167, 0.035994292, 0.03600425, 0.036004792, 0.036014111, 0.036014653, 0.036022667, 0.036030944, 0.036031486, 0.036040917, 0.036041458, 0.036047792, 0.036048333, 0.036056194, 0.036056736, 0.036065944, 0.036066486, 0.036075472, 0.036076014, 0.036084236, 0.036084778, 0.036092861, 0.036093403, 0.036102556, 0.036109708, 0.03611025, 0.036117028, 0.036126319, 0.036126861, 0.036135875, 0.036143486, 0.036144028, 0.036151014, 0.036151556, 0.036159653, 0.036160194, 0.036168069, 0.036168611, 0.036175194, 0.036182681, 0.036183222, 0.036190792, 0.036200514, 0.036201056, 0.036210417, 0.036219653, 0.036227986, 0.036228528, 0.036235417, 0.036235958, 0.036243944, 0.036244486, 0.036251806, 0.036252347, 0.036259556, 0.036260097, 0.036266306, 0.036266847, 0.036275278, 0.036275819, 0.036284639, 0.036294444, 0.036294986, 0.036303694, 0.036313653, 0.036322028, 0.036322569, 0.036331889, 0.036332431, 0.036341653, 0.036342194, 0.0363505, 0.036351042, 0.03635825, 0.036358792, 0.036364903, 0.036365444, 0.036372417, 0.036372958], 'eventsource_diff': [0, 5.419999999992098e-07, 7.097000000004516e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 8.124999999997717e-06, 9.958000000004352e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.014000000000632e-06, 8.277000000000978e-06, 5.419999999992098e-07, 9.430999999997247e-06, 5.409999999997361e-07, 6.33400000000367e-06, 5.409999999997361e-07, 7.860999999997897e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 8.985999999995553e-06, 5.420000000061487e-07, 8.221999999995233e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.420000000061487e-07, 9.152999999997857e-06, 7.1519999999963835e-06, 5.420000000061487e-07, 6.7779999999989515e-06, 9.290999999994609e-06, 5.420000000061487e-07, 9.013999999994693e-06, 7.611000000004586e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.096999999998578e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.420000000061487e-07, 6.5829999999975075e-06, 7.4870000000004655e-06, 5.409999999997361e-07, 7.569999999998411e-06, 9.722000000003672e-06, 5.419999999992098e-07, 9.360999999999398e-06, 9.235999999995803e-06, 8.332999999999258e-06, 5.420000000061487e-07, 6.888999999996037e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 7.319999999998161e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 8.431000000003186e-06, 5.409999999997361e-07, 8.819999999999661e-06, 9.805000000001618e-06, 5.419999999992098e-07, 8.707999999996163e-06, 9.959000000003826e-06, 8.374999999997967e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 8.305999999999591e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 6.110999999996147e-06, 5.409999999997361e-07, 6.9730000000003955e-06, 5.409999999997361e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:56.294" endtime="20201030 18:26:56.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.281" endtime="20201030 18:26:56.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:56.319" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 9.958000000004352e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:26:56.308" endtime="20201030 18:26:56.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:56.331" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.958000000004352e-06, 9.319000000000688e-06, 8.014000000000632e-06, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:56.322" endtime="20201030 18:26:56.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.342" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:56.340" endtime="20201030 18:26:56.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.349" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.958000000004352e-06, 9.319000000000688e-06, 8.014000000000632e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 7.1519999999963835e-06, 6.7779999999989515e-06, 5.420000000061487e-07, 7.611000000004586e-06, 6.986000000000492e-06, 8.096999999998578e-06, 7.874999999997467e-06, 6.5829999999975075e-06, 5.409999999997361e-07, 9.722000000003672e-06, 9.360999999999398e-06, 8.332999999999258e-06, 6.888999999996037e-06, 7.986000000001492e-06, 7.319999999998161e-06, 7.209000000001076e-06, 6.2090000000000756e-06, 8.431000000003186e-06, 8.819999999999661e-06, 5.419999999992098e-07, 9.959000000003826e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201030 18:26:56.346" endtime="20201030 18:26:56.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.333" endtime="20201030 18:26:56.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:56.361" endtime="20201030 18:26:56.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.357" endtime="20201030 18:26:56.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.354" endtime="20201030 18:26:56.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.786" endtime="20201030 18:26:56.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:55.785" endtime="20201030 18:26:56.386"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.406" endtime="20201030 18:26:56.419"></status>
</kw>
<msg timestamp="20201030 18:26:56.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.403" endtime="20201030 18:26:56.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.423" endtime="20201030 18:26:56.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.429" endtime="20201030 18:26:56.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.396" endtime="20201030 18:26:56.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.391" endtime="20201030 18:26:56.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.453" endtime="20201030 18:26:56.783"></status>
</kw>
<msg timestamp="20201030 18:26:56.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036453083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036453625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:56.450" endtime="20201030 18:26:56.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036453083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036453625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:56.792" endtime="20201030 18:26:56.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.811" endtime="20201030 18:26:56.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.442" endtime="20201030 18:26:56.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.438" endtime="20201030 18:26:56.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:56.872" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:56.820" endtime="20201030 18:26:56.872"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.874" endtime="20201030 18:26:56.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.886" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:56.884" endtime="20201030 18:26:56.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.895" level="INFO">VALUE: {'sourcediff': [0, 5.420000000061487e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.096999999996577e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 6.097000000003516e-06, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.415999999997203e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 9.320000000000161e-06, 5.409999999997361e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 7.110999999997147e-06, 5.409999999997361e-07, 7.750000000000812e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 6.652999999995357e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 9.445000000003756e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.420000000061487e-07, 6.429999999994773e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 6.902999999995607e-06, 9.597000000000078e-06, 5.420000000061487e-07, 7.777999999999952e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 9.195000000003506e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.3329999999972575e-06, 5.419999999992098e-07, 7.639000000003726e-06, 5.409999999997361e-07, 8.902999999997607e-06, 9.056000000000342e-06, 5.409999999997361e-07, 8.778000000000952e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.409999999997361e-07, 6.888999999996037e-06, 5.419999999992098e-07, 7.444000000002282e-06, 9.278000000001452e-06, 5.419999999992098e-07, 8.665999999997454e-06, 5.420000000061487e-07], 'time': [0.036453083, 0.036453625, 0.036460389, 0.036460931, 0.036467028, 0.036467569, 0.036474556, 0.036475097, 0.036481194, 0.036481736, 0.036490736, 0.036491278, 0.036499694, 0.036500236, 0.036506889, 0.036507431, 0.036514417, 0.036514958, 0.036523722, 0.036524264, 0.036530694, 0.036531236, 0.036540556, 0.036541097, 0.036547319, 0.036547861, 0.036554514, 0.036555056, 0.036562167, 0.036562708, 0.036570458, 0.036571, 0.036580319, 0.036580861, 0.036589736, 0.036590278, 0.036597597, 0.036598139, 0.036604792, 0.036605333, 0.036613319, 0.036613861, 0.036623306, 0.036623847, 0.036632167, 0.036632708, 0.036639125, 0.036639667, 0.036648875, 0.036649417, 0.036655625, 0.036656167, 0.036662597, 0.036663139, 0.03667025, 0.036670792, 0.036678, 0.036678542, 0.036687639, 0.036688181, 0.036695403, 0.036695944, 0.036702847, 0.036712444, 0.036712986, 0.036720764, 0.036721306, 0.036730278, 0.036730819, 0.036738819, 0.036739361, 0.036748556, 0.036749097, 0.036757861, 0.036758403, 0.036764736, 0.036765278, 0.036772917, 0.036773458, 0.036782361, 0.036791417, 0.036791958, 0.036800736, 0.036801278, 0.036808264, 0.036808806, 0.036816125, 0.036816667, 0.036824542, 0.036825083, 0.036831972, 0.036832514, 0.036839958, 0.036849236, 0.036849778, 0.036858444, 0.036858986], 'eventsource_diff': [0, 5.420000000061487e-07, 6.763999999999382e-06, 5.419999999992098e-07, 6.096999999996577e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 6.097000000003516e-06, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 8.415999999997203e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 9.320000000000161e-06, 5.409999999997361e-07, 6.222000000000172e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 7.110999999997147e-06, 5.409999999997361e-07, 7.750000000000812e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 7.3190000000056266e-06, 5.419999999992098e-07, 6.652999999995357e-06, 5.409999999997361e-07, 7.986000000001492e-06, 5.419999999992098e-07, 9.445000000003756e-06, 5.409999999997361e-07, 8.319999999999161e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 9.207999999996663e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.420000000061487e-07, 6.429999999994773e-06, 5.419999999992098e-07, 7.111000000004086e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.409999999997361e-07, 6.902999999995607e-06, 9.597000000000078e-06, 5.420000000061487e-07, 7.777999999999952e-06, 5.419999999992098e-07, 8.971999999995983e-06, 5.409999999997361e-07, 8.000000000001062e-06, 5.419999999992098e-07, 9.195000000003506e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.3329999999972575e-06, 5.419999999992098e-07, 7.639000000003726e-06, 5.409999999997361e-07, 8.902999999997607e-06, 9.056000000000342e-06, 5.409999999997361e-07, 8.778000000000952e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 7.875000000004406e-06, 5.409999999997361e-07, 6.888999999996037e-06, 5.419999999992098e-07, 7.444000000002282e-06, 9.278000000001452e-06, 5.419999999992098e-07, 8.665999999997454e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:56.888" endtime="20201030 18:26:56.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.879" endtime="20201030 18:26:56.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:56.909" level="INFO">${RESULT} = [{'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:56.900" endtime="20201030 18:26:56.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:56.920" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 18:26:56.911" endtime="20201030 18:26:56.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.930" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:56.928" endtime="20201030 18:26:56.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:56.935" level="INFO">VALUE: [5.420000000061487e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 9.597000000000078e-06, 7.777999999999952e-06, 8.971999999995983e-06, 8.000000000001062e-06, 9.195000000003506e-06, 8.764000000001382e-06, 6.3329999999972575e-06, 7.639000000003726e-06, 8.902999999997607e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.278000000001452e-06, 8.665999999997454e-06]</msg>
<status status="PASS" starttime="20201030 18:26:56.932" endtime="20201030 18:26:56.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.921" endtime="20201030 18:26:56.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:56.947" endtime="20201030 18:26:56.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.942" endtime="20201030 18:26:56.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.940" endtime="20201030 18:26:56.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.388" endtime="20201030 18:26:56.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.387" endtime="20201030 18:26:56.972"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:56.992" endtime="20201030 18:26:57.005"></status>
</kw>
<msg timestamp="20201030 18:26:57.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:56.989" endtime="20201030 18:26:57.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.009" endtime="20201030 18:26:57.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.015" endtime="20201030 18:26:57.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.982" endtime="20201030 18:26:57.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.977" endtime="20201030 18:26:57.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.040" endtime="20201030 18:26:57.377"></status>
</kw>
<msg timestamp="20201030 18:26:57.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036005111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036005653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.035" endtime="20201030 18:26:57.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036005111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036005653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.386" endtime="20201030 18:26:57.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.405" endtime="20201030 18:26:57.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.028" endtime="20201030 18:26:57.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.023" endtime="20201030 18:26:57.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:57.465" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:57.413" endtime="20201030 18:26:57.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.467" endtime="20201030 18:26:57.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.479" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:57.477" endtime="20201030 18:26:57.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.488" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 7.804999999999618e-06, 9.264000000001882e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 7.764000000000382e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 7.540999999999798e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.420000000061487e-07, 7.887999999997564e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 6.2640000000058205e-06, 9.485999999996053e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 9.430000000004712e-06, 5.419999999992098e-07, 9.485999999996053e-06, 7.8200000000056e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 8.527000000001228e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.889000000003976e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 6.111000000003086e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 6.541999999998271e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 8.763000000001908e-06, 5.419999999992098e-07, 6.0140000000055704e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.665999999995453e-06, 5.420000000061487e-07, 8.638999999997787e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.420000000061487e-07, 7.554999999999368e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.409999999997361e-07, 8.889000000004976e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.419999999992098e-07, 8.222000000002172e-06, 9.847000000000328e-06, 5.419999999992098e-07, 8.778000000000952e-06, 9.179999999997523e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 7.750000000000812e-06, 5.409999999997361e-07, 9.208999999996137e-06, 5.409999999997361e-07, 8.542000000000272e-06, 5.419999999992098e-07], 'time': [0.036005111, 0.036005653, 0.036013458, 0.036022722, 0.036023264, 0.036029806, 0.036030347, 0.036038111, 0.036038653, 0.036047861, 0.036048403, 0.0360555, 0.036056042, 0.036063583, 0.036064125, 0.036071222, 0.036071764, 0.036079639, 0.036080181, 0.036088069, 0.036088611, 0.036096472, 0.036097014, 0.036103278, 0.036112764, 0.036113306, 0.036120847, 0.036121389, 0.036130819, 0.036131361, 0.036140847, 0.036148667, 0.036149208, 0.036158292, 0.036158833, 0.036168153, 0.036168694, 0.03617725, 0.036177792, 0.036186319, 0.036186861, 0.036193958, 0.0361945, 0.036202389, 0.036202931, 0.036208903, 0.036209444, 0.036218097, 0.036218639, 0.03622475, 0.036225292, 0.036232167, 0.036232708, 0.03623925, 0.036239792, 0.036246889, 0.036247431, 0.036256194, 0.036256736, 0.03626275, 0.036271361, 0.036271903, 0.036278569, 0.036279111, 0.03628775, 0.036288292, 0.036296722, 0.036297264, 0.036304819, 0.036305361, 0.036312, 0.036312542, 0.036320528, 0.036321069, 0.036329958, 0.0363305, 0.036337375, 0.036337917, 0.036346139, 0.036355986, 0.036356528, 0.036365306, 0.036374486, 0.036375028, 0.036384347, 0.036384889, 0.036393, 0.036393542, 0.036401292, 0.036401833, 0.036411042, 0.036411583, 0.036420125, 0.036420667], 'eventsource_diff': [0, 5.419999999992098e-07, 7.804999999999618e-06, 9.264000000001882e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 7.764000000000382e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 7.540999999999798e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.420000000061487e-07, 7.887999999997564e-06, 5.419999999992098e-07, 7.860999999997897e-06, 5.419999999992098e-07, 6.2640000000058205e-06, 9.485999999996053e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 9.430000000004712e-06, 5.419999999992098e-07, 9.485999999996053e-06, 7.8200000000056e-06, 5.409999999997361e-07, 9.083999999999481e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 8.555999999999842e-06, 5.419999999992098e-07, 8.527000000001228e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 7.889000000003976e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 6.111000000003086e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 6.541999999998271e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.419999999992098e-07, 8.763000000001908e-06, 5.419999999992098e-07, 6.0140000000055704e-06, 8.610999999998648e-06, 5.419999999992098e-07, 6.665999999995453e-06, 5.420000000061487e-07, 8.638999999997787e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.420000000061487e-07, 7.554999999999368e-06, 5.419999999992098e-07, 6.638999999995787e-06, 5.420000000061487e-07, 7.985999999994553e-06, 5.409999999997361e-07, 8.889000000004976e-06, 5.419999999992098e-07, 6.874999999996467e-06, 5.419999999992098e-07, 8.222000000002172e-06, 9.847000000000328e-06, 5.419999999992098e-07, 8.778000000000952e-06, 9.179999999997523e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.111000000005086e-06, 5.419999999992098e-07, 7.750000000000812e-06, 5.409999999997361e-07, 9.208999999996137e-06, 5.409999999997361e-07, 8.542000000000272e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:57.482" endtime="20201030 18:26:57.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.472" endtime="20201030 18:26:57.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:57.502" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 9.264000000001882e-06}, {'diff': 6.541999999998271e-06}, {'diff': 7.764000000000382e-06}, {'diff': 9.208000000003602e-06}, {'diff': 7.0969999999975775e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:57.494" endtime="20201030 18:26:57.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:57.511" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 9.264000000001882e-06, 6.541999999998271e-06, 7.764000000000382e-06, 9.208000000003602e-06, 7.0969999999975775e-06, 7.540999999999798e-06, 7.0969999999975775e-06, 7.87...</msg>
<status status="PASS" starttime="20201030 18:26:57.504" endtime="20201030 18:26:57.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.521" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:57.519" endtime="20201030 18:26:57.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.527" level="INFO">VALUE: [5.419999999992098e-07, 9.264000000001882e-06, 6.541999999998271e-06, 7.764000000000382e-06, 9.208000000003602e-06, 7.0969999999975775e-06, 7.540999999999798e-06, 7.0969999999975775e-06, 7.874999999997467e-06, 7.887999999997564e-06, 7.860999999997897e-06, 6.2640000000058205e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.8200000000056e-06, 9.083999999999481e-06, 9.320000000000161e-06, 8.555999999999842e-06, 8.527000000001228e-06, 7.0969999999975775e-06, 7.889000000003976e-06, 5.971999999999922e-06, 8.652999999997357e-06, 6.111000000003086e-06, 6.875000000003406e-06, 6.541999999998271e-06, 7.0969999999975775e-06, 8.763000000001908e-06, 6.0140000000055704e-06, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.847000000000328e-06, 8.778000000000952e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:57.524" endtime="20201030 18:26:57.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.513" endtime="20201030 18:26:57.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:57.539" endtime="20201030 18:26:57.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.534" endtime="20201030 18:26:57.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.532" endtime="20201030 18:26:57.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.974" endtime="20201030 18:26:57.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:56.973" endtime="20201030 18:26:57.564"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.586" endtime="20201030 18:26:57.599"></status>
</kw>
<msg timestamp="20201030 18:26:57.600" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.582" endtime="20201030 18:26:57.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.606" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:57.602" endtime="20201030 18:26:57.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.609" endtime="20201030 18:26:57.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.575" endtime="20201030 18:26:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.569" endtime="20201030 18:26:57.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:57.632" endtime="20201030 18:26:57.973"></status>
</kw>
<msg timestamp="20201030 18:26:57.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037652486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037660875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.629" endtime="20201030 18:26:57.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:57.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037652486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037660875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:57.982" endtime="20201030 18:26:57.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.000" endtime="20201030 18:26:58.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.621" endtime="20201030 18:26:58.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.617" endtime="20201030 18:26:58.007"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:58.058" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:58.009" endtime="20201030 18:26:58.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.060" endtime="20201030 18:26:58.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.072" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:58.070" endtime="20201030 18:26:58.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.081" level="INFO">VALUE: {'sourcediff': [0, 8.389000000004476e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.7779999999989515e-06, 5.409999999997361e-07, 7.083999999997481e-06, 5.409999999997361e-07, 8.445000000002756e-06, 5.409999999997361e-07, 6.097999999996051e-06, 5.41000000006675e-07, 9.305999999993653e-06, 5.409999999997361e-07, 7.36200000000381e-06, 9.707999999997163e-06, 5.419999999992098e-07, 6.694000000001532e-06, 7.055999999998341e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.41000000006675e-07, 6.652999999995357e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 8.569999999999411e-06, 7.943999999995843e-06, 5.419999999992098e-07, 6.708000000001102e-06, 9.360999999999398e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.419999999992098e-07, 9.431000000004186e-06, 5.409999999997361e-07, 6.653000000002296e-06, 5.419999999992098e-07, 8.568999999999938e-06, 9.971999999996983e-06, 7.181000000001936e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 8.333999999998731e-06, 5.409999999997361e-07, 7.195000000001506e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000061487e-07, 8.651999999997884e-06, 5.419999999992098e-07, 6.096999999996577e-06, 5.420000000061487e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 6.417000000001616e-06, 5.409999999997361e-07, 8.110999999998147e-06, 5.419999999992098e-07, 8.750000000001812e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.666000000003392e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 7.125000000003656e-06, 5.419999999992098e-07, 6.9019999999961335e-06, 6.7369999999997154e-06, 5.409999999997361e-07, 5.971999999999922e-06, 5.420000000061487e-07, 7.763999999993443e-06, 5.420000000061487e-07], 'time': [0.037652486, 0.037660875, 0.037661417, 0.037668181, 0.037668722, 0.037677486, 0.037678028, 0.037684806, 0.037685347, 0.037692431, 0.037692972, 0.037701417, 0.037701958, 0.037708056, 0.037708597, 0.037717903, 0.037718444, 0.037725806, 0.037735514, 0.037736056, 0.03774275, 0.037749806, 0.037750347, 0.037756556, 0.037757097, 0.03776375, 0.037764292, 0.037773278, 0.037773819, 0.037779917, 0.037780458, 0.037789028, 0.037796972, 0.037797514, 0.037804222, 0.037813583, 0.037814125, 0.037823, 0.037823542, 0.037830194, 0.037830736, 0.037840167, 0.037840708, 0.037847361, 0.037847903, 0.037856472, 0.037866444, 0.037873625, 0.037874167, 0.037880931, 0.037881472, 0.037889681, 0.037890222, 0.037898556, 0.037899097, 0.037906292, 0.037906833, 0.037915486, 0.037916028, 0.037925125, 0.037925667, 0.037934319, 0.037934861, 0.037940958, 0.0379415, 0.037949833, 0.037950375, 0.037957125, 0.037957667, 0.037966222, 0.037966764, 0.037973181, 0.037973722, 0.037981833, 0.037982375, 0.037991125, 0.037991667, 0.038000764, 0.038001306, 0.038008972, 0.038009514, 0.038017125, 0.03802425, 0.038024792, 0.038031694, 0.038038431, 0.038038972, 0.038044944, 0.038045486, 0.03805325, 0.038053792], 'eventsource_diff': [0, 8.389000000004476e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 6.7779999999989515e-06, 5.409999999997361e-07, 7.083999999997481e-06, 5.409999999997361e-07, 8.445000000002756e-06, 5.409999999997361e-07, 6.097999999996051e-06, 5.41000000006675e-07, 9.305999999993653e-06, 5.409999999997361e-07, 7.36200000000381e-06, 9.707999999997163e-06, 5.419999999992098e-07, 6.694000000001532e-06, 7.055999999998341e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.41000000006675e-07, 6.652999999995357e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 6.09800000000299e-06, 5.409999999997361e-07, 8.569999999999411e-06, 7.943999999995843e-06, 5.419999999992098e-07, 6.708000000001102e-06, 9.360999999999398e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 6.6519999999958834e-06, 5.419999999992098e-07, 9.431000000004186e-06, 5.409999999997361e-07, 6.653000000002296e-06, 5.419999999992098e-07, 8.568999999999938e-06, 9.971999999996983e-06, 7.181000000001936e-06, 5.419999999992098e-07, 6.763999999999382e-06, 5.409999999997361e-07, 8.209000000002076e-06, 5.409999999997361e-07, 8.333999999998731e-06, 5.409999999997361e-07, 7.195000000001506e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.420000000061487e-07, 8.651999999997884e-06, 5.419999999992098e-07, 6.096999999996577e-06, 5.420000000061487e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.749999999999812e-06, 5.419999999992098e-07, 8.555000000000368e-06, 5.419999999992098e-07, 6.417000000001616e-06, 5.409999999997361e-07, 8.110999999998147e-06, 5.419999999992098e-07, 8.750000000001812e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.666000000003392e-06, 5.419999999992098e-07, 7.6109999999976474e-06, 7.125000000003656e-06, 5.419999999992098e-07, 6.9019999999961335e-06, 6.7369999999997154e-06, 5.409999999997361e-07, 5.971999999999922e-06, 5.420000000061487e-07, 7.763999999993443e-06, 5.420000000061487e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:58.075" endtime="20201030 18:26:58.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.065" endtime="20201030 18:26:58.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:58.095" level="INFO">${RESULT} = [{'diff': 8.389000000004476e-06}, {'diff': 6.763999999999382e-06}, {'diff': 8.764000000001382e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 7.083999999997481e-06}, {'diff': 8.445000000002756e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:26:58.087" endtime="20201030 18:26:58.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:58.104" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.389000000004476e-06, 6.763999999999382e-06, 8.764000000001382e-06, 6.7779999999989515e-06, 7.083999999997481e-06, 8.445000000002756e-06, 6.097999999996051e-06, 9.305999999993653e-06, 7.362...</msg>
<status status="PASS" starttime="20201030 18:26:58.097" endtime="20201030 18:26:58.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:58.112" endtime="20201030 18:26:58.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.119" level="INFO">VALUE: [8.389000000004476e-06, 6.763999999999382e-06, 8.764000000001382e-06, 6.7779999999989515e-06, 7.083999999997481e-06, 8.445000000002756e-06, 6.097999999996051e-06, 9.305999999993653e-06, 7.36200000000381e-06, 5.419999999992098e-07, 7.055999999998341e-06, 6.2090000000000756e-06, 6.652999999995357e-06, 8.986000000002492e-06, 6.09800000000299e-06, 8.569999999999411e-06, 5.419999999992098e-07, 9.360999999999398e-06, 8.875000000005406e-06, 6.6519999999958834e-06, 9.431000000004186e-06, 6.653000000002296e-06, 8.568999999999938e-06, 7.181000000001936e-06, 6.763999999999382e-06, 8.209000000002076e-06, 8.333999999998731e-06, 7.195000000001506e-06, 8.652999999997357e-06, 9.096999999999578e-06, 8.651999999997884e-06, 6.096999999996577e-06, 8.332999999999258e-06, 6.749999999999812e-06, 8.555000000000368e-06, 6.417000000001616e-06, 8.110999999998147e-06, 8.750000000001812e-06, 9.096999999999578e-06, 7.666000000003392e-06, 7.6109999999976474e-06, 5.419999999992098e-07, 6.7369999999997154e-06, 5.971999999999922e-06, 7.763999999993443e-06]</msg>
<status status="PASS" starttime="20201030 18:26:58.116" endtime="20201030 18:26:58.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.106" endtime="20201030 18:26:58.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:58.131" endtime="20201030 18:26:58.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.127" endtime="20201030 18:26:58.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.124" endtime="20201030 18:26:58.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.565" endtime="20201030 18:26:58.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:57.564" endtime="20201030 18:26:58.158"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.178" endtime="20201030 18:26:58.191"></status>
</kw>
<msg timestamp="20201030 18:26:58.192" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.174" endtime="20201030 18:26:58.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.198" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.194" endtime="20201030 18:26:58.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.201" endtime="20201030 18:26:58.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.167" endtime="20201030 18:26:58.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.163" endtime="20201030 18:26:58.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.224" endtime="20201030 18:26:58.559"></status>
</kw>
<msg timestamp="20201030 18:26:58.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035976208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03597675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:58.220" endtime="20201030 18:26:58.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035976208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03597675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:26:58.568" endtime="20201030 18:26:58.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.586" endtime="20201030 18:26:58.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.213" endtime="20201030 18:26:58.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.209" endtime="20201030 18:26:58.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:58.645" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:58.595" endtime="20201030 18:26:58.646"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.648" endtime="20201030 18:26:58.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.660" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:58.657" endtime="20201030 18:26:58.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.668" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 6.431000000001186e-06, 5.409999999997361e-07, 6.096999999996577e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 7.11200000000356e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 7.013999999999632e-06, 6.610999999996647e-06, 5.409999999997361e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 8.430000000003712e-06, 5.419999999992098e-07, 8.666999999996927e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.889000000003976e-06, 5.419999999992098e-07, 9.333000000000258e-06, 6.569999999997411e-06, 6.804999999998618e-06, 5.420000000061487e-07, 8.916999999997177e-06, 7.387999999997064e-06, 8.403000000004046e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.419999999992098e-07, 6.652000000002822e-06, 5.419999999992098e-07, 8.888999999998037e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 6.874999999996467e-06, 5.419999999992098e-07, 6.30600000000453e-06, 5.409999999997361e-07, 9.444999999996817e-06, 5.409999999997361e-07, 8.903000000004546e-06, 7.944999999995317e-06, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 8.430000000003712e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.165999999995953e-06, 9.069999999999911e-06, 9.360999999999398e-06, 5.409999999997361e-07, 8.3200000000061e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07], 'time': [0.035976208, 0.03597675, 0.035983181, 0.035983722, 0.035989819, 0.035990361, 0.035998569, 0.035999111, 0.036007, 0.036007542, 0.036016528, 0.036017069, 0.036024181, 0.036024722, 0.036030806, 0.036031347, 0.036038222, 0.036038764, 0.036047861, 0.036048403, 0.036056181, 0.036056722, 0.036062931, 0.036063472, 0.036070333, 0.036070875, 0.036078653, 0.036079194, 0.0360885, 0.036089042, 0.036096056, 0.036102667, 0.036103208, 0.036110972, 0.036111514, 0.036119722, 0.036120264, 0.036128694, 0.036129236, 0.036137903, 0.036138444, 0.036147542, 0.036148083, 0.036155972, 0.036156514, 0.036165847, 0.036172417, 0.036179222, 0.036179764, 0.036188681, 0.036196069, 0.036204472, 0.036205014, 0.036214, 0.036214542, 0.036222625, 0.036223167, 0.036229819, 0.036230361, 0.03623925, 0.036239792, 0.036247778, 0.036248319, 0.036255194, 0.036255736, 0.036262042, 0.036262583, 0.036272028, 0.036272569, 0.036281472, 0.036289417, 0.036289958, 0.036297181, 0.036297722, 0.03630625, 0.036306792, 0.036315222, 0.036315764, 0.03632475, 0.036325292, 0.036332611, 0.036333153, 0.036342139, 0.036342681, 0.036349847, 0.036358917, 0.036368278, 0.036368819, 0.036377139, 0.036377681, 0.036385, 0.036385542], 'eventsource_diff': [0, 5.419999999992098e-07, 6.431000000001186e-06, 5.409999999997361e-07, 6.096999999996577e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.888999999997037e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.409999999997361e-07, 7.11200000000356e-06, 5.409999999997361e-07, 6.083999999996481e-06, 5.409999999997361e-07, 6.875000000003406e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 6.2090000000000756e-06, 5.409999999997361e-07, 6.861000000003836e-06, 5.419999999992098e-07, 7.777999999999952e-06, 5.409999999997361e-07, 9.306000000000592e-06, 5.419999999992098e-07, 7.013999999999632e-06, 6.610999999996647e-06, 5.409999999997361e-07, 7.764000000000382e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 8.430000000003712e-06, 5.419999999992098e-07, 8.666999999996927e-06, 5.409999999997361e-07, 9.097999999999051e-06, 5.409999999997361e-07, 7.889000000003976e-06, 5.419999999992098e-07, 9.333000000000258e-06, 6.569999999997411e-06, 6.804999999998618e-06, 5.420000000061487e-07, 8.916999999997177e-06, 7.387999999997064e-06, 8.403000000004046e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 8.082999999999008e-06, 5.419999999992098e-07, 6.652000000002822e-06, 5.419999999992098e-07, 8.888999999998037e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 6.874999999996467e-06, 5.419999999992098e-07, 6.30600000000453e-06, 5.409999999997361e-07, 9.444999999996817e-06, 5.409999999997361e-07, 8.903000000004546e-06, 7.944999999995317e-06, 5.409999999997361e-07, 7.2230000000006456e-06, 5.409999999997361e-07, 8.528000000000702e-06, 5.419999999992098e-07, 8.430000000003712e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.165999999995953e-06, 9.069999999999911e-06, 9.360999999999398e-06, 5.409999999997361e-07, 8.3200000000061e-06, 5.419999999992098e-07, 7.318999999998688e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:58.662" endtime="20201030 18:26:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.652" endtime="20201030 18:26:58.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:58.685" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:58.676" endtime="20201030 18:26:58.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:58.695" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:58.687" endtime="20201030 18:26:58.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.705" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:58.703" endtime="20201030 18:26:58.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.711" level="INFO">VALUE: [5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 6.610999999996647e-06, 7.764000000000382e-06, 8.208000000002602e-06, 8.430000000003712e-06, 8.666999999996927e-06, 9.097999999999051e-06, 7.889000000003976e-06, 9.333000000000258e-06, 6.804999999998618e-06, 8.916999999997177e-06, 8.403000000004046e-06, 8.986000000002492e-06, 8.082999999999008e-06, 6.652000000002822e-06, 8.888999999998037e-06, 7.986000000001492e-06, 6.874999999996467e-06, 6.30600000000453e-06, 9.444999999996817e-06, 8.903000000004546e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.069999999999911e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:26:58.708" endtime="20201030 18:26:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.697" endtime="20201030 18:26:58.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:58.723" endtime="20201030 18:26:58.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.718" endtime="20201030 18:26:58.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.716" endtime="20201030 18:26:58.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.159" endtime="20201030 18:26:58.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.158" endtime="20201030 18:26:58.747"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.768" endtime="20201030 18:26:58.780"></status>
</kw>
<msg timestamp="20201030 18:26:58.782" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.764" endtime="20201030 18:26:58.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:58.788" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:58.784" endtime="20201030 18:26:58.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.790" endtime="20201030 18:26:58.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.757" endtime="20201030 18:26:58.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.753" endtime="20201030 18:26:58.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:58.813" endtime="20201030 18:26:59.146"></status>
</kw>
<msg timestamp="20201030 18:26:59.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036105139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036105681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:58.810" endtime="20201030 18:26:59.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036105139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036105681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.156" endtime="20201030 18:26:59.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.174" endtime="20201030 18:26:59.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.803" endtime="20201030 18:26:59.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.798" endtime="20201030 18:26:59.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:59.234" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:59.183" endtime="20201030 18:26:59.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.236" endtime="20201030 18:26:59.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.249" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:59.247" endtime="20201030 18:26:59.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.259" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 9.443999999997343e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 7.750000000000812e-06, 5.409999999997361e-07, 7.250000000000312e-06, 7.708999999994637e-06, 5.409999999997361e-07, 8.473000000001896e-06, 7.152000000003322e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.653000000004296e-06, 5.409999999997361e-07, 8.777999999994013e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 8.554999999993429e-06, 5.420000000061487e-07, 6.971999999993983e-06, 5.420000000061487e-07, 8.332999999999258e-06, 5.419999999992098e-07, 8.832999999999758e-06, 8.346999999998828e-06, 5.419999999992098e-07, 6.235999999999742e-06, 7.514000000000132e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 9.417000000004616e-06, 5.419999999992098e-07, 6.665999999995453e-06, 5.419999999992098e-07, 8.194000000003032e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 8.139000000004226e-06, 6.819999999997661e-06, 5.409999999997361e-07, 7.097999999997051e-06, 5.409999999997361e-07, 7.55600000000578e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.333999999996731e-06, 5.409999999997361e-07, 7.875000000004406e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 7.777999999999952e-06, 5.419999999992098e-07, 8.194000000003032e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.444000000002282e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07], 'time': [0.036105139, 0.036105681, 0.036114764, 0.036115306, 0.036124514, 0.036125056, 0.0361345, 0.036135042, 0.03614425, 0.036144792, 0.036152542, 0.036153083, 0.036160333, 0.036168042, 0.036168583, 0.036177056, 0.036184208, 0.03618475, 0.036193625, 0.036194167, 0.0362025, 0.036203042, 0.036209917, 0.036210458, 0.036219333, 0.036219875, 0.036228528, 0.036229069, 0.036237847, 0.036238389, 0.036247264, 0.036247806, 0.036256889, 0.036257431, 0.036266653, 0.036267194, 0.0362735, 0.036274042, 0.036281139, 0.036281681, 0.036290236, 0.036290778, 0.03629775, 0.036298292, 0.036306625, 0.036307167, 0.036316, 0.036324347, 0.036324889, 0.036331125, 0.036338639, 0.036339181, 0.036346167, 0.036346708, 0.036356125, 0.036356667, 0.036363333, 0.036363875, 0.036372069, 0.036372611, 0.036380153, 0.036380694, 0.036388833, 0.036395653, 0.036396194, 0.036403292, 0.036403833, 0.036411389, 0.036411931, 0.036419014, 0.036419556, 0.036425986, 0.036426528, 0.036435292, 0.036435833, 0.036443042, 0.036443583, 0.036449917, 0.036450458, 0.036458333, 0.036458875, 0.036465417, 0.036465958, 0.036473736, 0.036474278, 0.036482472, 0.036483014, 0.03649, 0.036490542, 0.036499639, 0.036500181, 0.036507625, 0.036508167, 0.03651525, 0.036515792], 'eventsource_diff': [0, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 9.443999999997343e-06, 5.419999999992098e-07, 9.208000000003602e-06, 5.419999999992098e-07, 7.750000000000812e-06, 5.409999999997361e-07, 7.250000000000312e-06, 7.708999999994637e-06, 5.409999999997361e-07, 8.473000000001896e-06, 7.152000000003322e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.332999999999258e-06, 5.419999999992098e-07, 6.875000000003406e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 8.653000000004296e-06, 5.409999999997361e-07, 8.777999999994013e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.409999999997361e-07, 6.305999999997591e-06, 5.419999999992098e-07, 7.0969999999975775e-06, 5.420000000061487e-07, 8.554999999993429e-06, 5.420000000061487e-07, 6.971999999993983e-06, 5.420000000061487e-07, 8.332999999999258e-06, 5.419999999992098e-07, 8.832999999999758e-06, 8.346999999998828e-06, 5.419999999992098e-07, 6.235999999999742e-06, 7.514000000000132e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 9.417000000004616e-06, 5.419999999992098e-07, 6.665999999995453e-06, 5.419999999992098e-07, 8.194000000003032e-06, 5.419999999992098e-07, 7.5419999999992715e-06, 5.409999999997361e-07, 8.139000000004226e-06, 6.819999999997661e-06, 5.409999999997361e-07, 7.097999999997051e-06, 5.409999999997361e-07, 7.55600000000578e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 8.764000000001382e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.333999999996731e-06, 5.409999999997361e-07, 7.875000000004406e-06, 5.419999999992098e-07, 6.541999999998271e-06, 5.409999999997361e-07, 7.777999999999952e-06, 5.419999999992098e-07, 8.194000000003032e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.419999999992098e-07, 7.444000000002282e-06, 5.419999999992098e-07, 7.0829999999980076e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:59.252" endtime="20201030 18:26:59.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.241" endtime="20201030 18:26:59.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:59.272" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.409999999997361e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:26:59.264" endtime="20201030 18:26:59.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:59.282" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 7.708999999994637e-06, 8.473000000001896e-06, 5.4199...</msg>
<status status="PASS" starttime="20201030 18:26:59.274" endtime="20201030 18:26:59.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.292" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:59.289" endtime="20201030 18:26:59.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.297" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 7.708999999994637e-06, 8.473000000001896e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.420000000061487e-07, 5.419999999992098e-07, 8.346999999998828e-06, 6.235999999999742e-06, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 6.819999999997661e-06, 7.097999999997051e-06, 7.55600000000578e-06, 7.0829999999980076e-06, 6.430000000001712e-06, 8.764000000001382e-06, 7.209000000001076e-06, 6.333999999996731e-06, 7.875000000004406e-06, 6.541999999998271e-06, 7.777999999999952e-06, 8.194000000003032e-06, 6.986000000000492e-06, 9.096999999999578e-06, 7.444000000002282e-06, 7.0829999999980076e-06]</msg>
<status status="PASS" starttime="20201030 18:26:59.294" endtime="20201030 18:26:59.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.283" endtime="20201030 18:26:59.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:59.309" endtime="20201030 18:26:59.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.304" endtime="20201030 18:26:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.302" endtime="20201030 18:26:59.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.749" endtime="20201030 18:26:59.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:58.748" endtime="20201030 18:26:59.334"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.355" endtime="20201030 18:26:59.370"></status>
</kw>
<msg timestamp="20201030 18:26:59.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.351" endtime="20201030 18:26:59.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.373" endtime="20201030 18:26:59.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.380" endtime="20201030 18:26:59.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.344" endtime="20201030 18:26:59.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.339" endtime="20201030 18:26:59.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.403" endtime="20201030 18:26:59.736"></status>
</kw>
<msg timestamp="20201030 18:26:59.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038748264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038748806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.400" endtime="20201030 18:26:59.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038748264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038748806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.746" endtime="20201030 18:26:59.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.764" endtime="20201030 18:26:59.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.393" endtime="20201030 18:26:59.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.388" endtime="20201030 18:26:59.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:26:59.832" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:26:59.773" endtime="20201030 18:26:59.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.836" endtime="20201030 18:26:59.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.850" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:26:59.848" endtime="20201030 18:26:59.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.859" level="INFO">VALUE: {'sourcediff': [0, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 8.902999999997607e-06, 1.0027000000002728e-05, 6.445000000000756e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 6.902999999995607e-06, 8.055999999999341e-06, 5.41000000006675e-07, 9.430999999997247e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 7.665999999996453e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.459000000000326e-06, 9.833000000000758e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 8.486000000001992e-06, 9.804999999994679e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.420000000061487e-07, 8.443999999996343e-06, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 7.445000000001756e-06, 5.409999999997361e-07, 8.638999999997787e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 9.431000000004186e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 7.791999999999522e-06, 6.818999999998188e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 6.346999999996827e-06, 6.625000000003156e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.419999999992098e-07], 'time': [0.038748264, 0.038748806, 0.038757347, 0.038757889, 0.038764097, 0.038764639, 0.038772972, 0.038773514, 0.038782597, 0.038783139, 0.038792042, 0.038802069, 0.038808514, 0.038809056, 0.038816264, 0.038816806, 0.038825903, 0.038826444, 0.038833347, 0.038841403, 0.038841944, 0.038851375, 0.038851917, 0.038858014, 0.038858556, 0.038866222, 0.038866764, 0.038873417, 0.038873958, 0.038880417, 0.03889025, 0.038890792, 0.038899, 0.038899542, 0.038907417, 0.038907958, 0.038915278, 0.038915819, 0.03892525, 0.038925792, 0.038934278, 0.038944083, 0.038944625, 0.038952389, 0.038952931, 0.038961375, 0.038961917, 0.038969444, 0.038969986, 0.038977431, 0.038977972, 0.038986611, 0.038987153, 0.038994375, 0.038994917, 0.039001014, 0.039001556, 0.039009097, 0.039009639, 0.039015625, 0.039016167, 0.039024375, 0.039024917, 0.039032458, 0.039033, 0.039042431, 0.039042972, 0.039049292, 0.039049833, 0.039058708, 0.03905925, 0.039068694, 0.039069236, 0.039077028, 0.039083847, 0.039084389, 0.039090375, 0.039090917, 0.039099792, 0.039100333, 0.039107764, 0.039108306, 0.039114653, 0.039121278, 0.039121819, 0.039128139, 0.039128681, 0.039136903, 0.039137444, 0.039144431, 0.039144972, 0.039152847, 0.039153389], 'eventsource_diff': [0, 5.419999999992098e-07, 8.541000000000798e-06, 5.419999999992098e-07, 6.208000000000602e-06, 5.419999999992098e-07, 8.333000000006197e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 8.902999999997607e-06, 1.0027000000002728e-05, 6.445000000000756e-06, 5.419999999992098e-07, 7.208000000001602e-06, 5.419999999992098e-07, 9.096999999999578e-06, 5.409999999997361e-07, 6.902999999995607e-06, 8.055999999999341e-06, 5.41000000006675e-07, 9.430999999997247e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 7.665999999996453e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.409999999997361e-07, 6.459000000000326e-06, 9.833000000000758e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 8.486000000001992e-06, 9.804999999994679e-06, 5.419999999992098e-07, 7.764000000000382e-06, 5.420000000061487e-07, 8.443999999996343e-06, 5.419999999992098e-07, 7.527000000000228e-06, 5.419999999992098e-07, 7.445000000001756e-06, 5.409999999997361e-07, 8.638999999997787e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 6.097000000003516e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.419999999992098e-07, 8.208000000002602e-06, 5.419999999992098e-07, 7.540999999999798e-06, 5.419999999992098e-07, 9.431000000004186e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.409999999997361e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.444000000004282e-06, 5.419999999992098e-07, 7.791999999999522e-06, 6.818999999998188e-06, 5.419999999992098e-07, 5.985999999999492e-06, 5.420000000061487e-07, 8.874999999998467e-06, 5.409999999997361e-07, 7.431000000002186e-06, 5.419999999992098e-07, 6.346999999996827e-06, 6.625000000003156e-06, 5.409999999997361e-07, 6.319999999997161e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.409999999997361e-07, 6.9869999999999655e-06, 5.409999999997361e-07, 7.874999999997467e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:26:59.852" endtime="20201030 18:26:59.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.841" endtime="20201030 18:26:59.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:26:59.873" level="INFO">${RESULT} = [{'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 1.0027000000002728e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:26:59.864" endtime="20201030 18:26:59.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:26:59.882" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0027000000002728e-05, 5.419999999992098e-07, 5.419999999992098e-07, 5.409...</msg>
<status status="PASS" starttime="20201030 18:26:59.875" endtime="20201030 18:26:59.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.892" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:26:59.890" endtime="20201030 18:26:59.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.897" level="INFO">VALUE: [5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 1.0027000000002728e-05, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 8.055999999999341e-06, 9.430999999997247e-06, 6.097000000003516e-06, 7.665999999996453e-06, 6.653000000002296e-06, 6.459000000000326e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 9.804999999994679e-06, 7.764000000000382e-06, 8.443999999996343e-06, 7.527000000000228e-06, 7.445000000001756e-06, 8.638999999997787e-06, 7.222000000001172e-06, 6.097000000003516e-06, 7.540999999999798e-06, 5.985999999999492e-06, 8.208000000002602e-06, 7.540999999999798e-06, 9.431000000004186e-06, 6.319999999997161e-06, 8.874999999998467e-06, 9.444000000004282e-06, 7.791999999999522e-06, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 6.625000000003156e-06, 6.319999999997161e-06, 8.222000000002172e-06, 6.9869999999999655e-06, 7.874999999997467e-06]</msg>
<status status="PASS" starttime="20201030 18:26:59.894" endtime="20201030 18:26:59.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.883" endtime="20201030 18:26:59.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:26:59.911" endtime="20201030 18:26:59.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.905" endtime="20201030 18:26:59.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.902" endtime="20201030 18:26:59.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.336" endtime="20201030 18:26:59.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.334" endtime="20201030 18:26:59.935"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.956" endtime="20201030 18:26:59.969"></status>
</kw>
<msg timestamp="20201030 18:26:59.970" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.952" endtime="20201030 18:26:59.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:26:59.976" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:26:59.972" endtime="20201030 18:26:59.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:26:59.979" endtime="20201030 18:26:59.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.945" endtime="20201030 18:26:59.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.941" endtime="20201030 18:26:59.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.002" endtime="20201030 18:27:00.338"></status>
</kw>
<msg timestamp="20201030 18:27:00.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035969042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035969583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:26:59.999" endtime="20201030 18:27:00.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035969042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035969583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:00.347" endtime="20201030 18:27:00.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.365" endtime="20201030 18:27:00.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.991" endtime="20201030 18:27:00.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.987" endtime="20201030 18:27:00.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:00.425" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:00.374" endtime="20201030 18:27:00.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.427" endtime="20201030 18:27:00.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.439" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:00.437" endtime="20201030 18:27:00.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.448" level="INFO">VALUE: {'sourcediff': [0, 5.409999999997361e-07, 9.195000000003506e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 9.429999999997773e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.420000000061487e-07, 9.304999999994179e-06, 5.419999999992098e-07, 9.375000000005906e-06, 6.804999999998618e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.420000000061487e-07, 6.207999999993663e-06, 5.420000000061487e-07, 9.333000000000258e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.409999999997361e-07, 7.2919999999990215e-06, 7.458000000001852e-06, 5.419999999992098e-07, 8.207999999995663e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 8.667000000003866e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 9.416999999997677e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.151999999998384e-06, 8.917000000004116e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.420000000061487e-07, 8.499999999994623e-06, 6.583000000004446e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 9.443999999997343e-06, 5.419999999992098e-07, 6.0829999999970075e-06, 5.420000000061487e-07, 5.999999999999062e-06, 5.409999999997361e-07, 6.195000000000506e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.915999999997704e-06, 9.000000000002062e-06, 6.555999999997841e-06, 5.419999999992098e-07, 8.486000000001992e-06, 6.915999999995703e-06, 5.420000000061487e-07, 6.096999999996577e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.419999999992098e-07, 8.763000000001908e-06, 5.419999999992098e-07, 8.319999999999161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07], 'time': [0.035969042, 0.035969583, 0.035978778, 0.035979319, 0.035986639, 0.035987181, 0.035996611, 0.035997153, 0.036003375, 0.036003917, 0.036013222, 0.036013764, 0.036023139, 0.036029944, 0.036030486, 0.036038139, 0.036038681, 0.036044889, 0.036045431, 0.036054764, 0.036055306, 0.036061278, 0.036061819, 0.036069111, 0.036076569, 0.036077111, 0.036085319, 0.036085861, 0.036092514, 0.036093056, 0.036100042, 0.036100583, 0.036109347, 0.036109889, 0.036118556, 0.036119097, 0.036128417, 0.036128958, 0.036138375, 0.036138917, 0.036148236, 0.036148778, 0.036157, 0.036157542, 0.036166625, 0.036167167, 0.036176319, 0.036185236, 0.036185778, 0.036193653, 0.036194194, 0.036201514, 0.036202056, 0.036210556, 0.036217139, 0.036217681, 0.036226111, 0.036226653, 0.03623475, 0.036235292, 0.0362425, 0.036243042, 0.036252486, 0.036253028, 0.036259111, 0.036259653, 0.036265653, 0.036266194, 0.036272389, 0.036272931, 0.036279361, 0.036279903, 0.036287125, 0.036287667, 0.036296583, 0.036305583, 0.036312139, 0.036312681, 0.036321167, 0.036328083, 0.036328625, 0.036334722, 0.036335264, 0.036341264, 0.036341806, 0.036350569, 0.036351111, 0.036359431, 0.036359972, 0.036369403, 0.036369944, 0.036378597, 0.036379139], 'eventsource_diff': [0, 5.409999999997361e-07, 9.195000000003506e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.419999999992098e-07, 9.429999999997773e-06, 5.419999999992098e-07, 6.222000000000172e-06, 5.420000000061487e-07, 9.304999999994179e-06, 5.419999999992098e-07, 9.375000000005906e-06, 6.804999999998618e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.420000000061487e-07, 6.207999999993663e-06, 5.420000000061487e-07, 9.333000000000258e-06, 5.419999999992098e-07, 5.971999999999922e-06, 5.409999999997361e-07, 7.2919999999990215e-06, 7.458000000001852e-06, 5.419999999992098e-07, 8.207999999995663e-06, 5.419999999992098e-07, 6.653000000002296e-06, 5.419999999992098e-07, 6.986000000000492e-06, 5.409999999997361e-07, 8.764000000001382e-06, 5.419999999992098e-07, 8.667000000003866e-06, 5.409999999997361e-07, 9.320000000000161e-06, 5.409999999997361e-07, 9.416999999997677e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 8.222000000002172e-06, 5.419999999992098e-07, 9.083000000000008e-06, 5.419999999992098e-07, 9.151999999998384e-06, 8.917000000004116e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.420000000061487e-07, 8.499999999994623e-06, 6.583000000004446e-06, 5.419999999992098e-07, 8.429999999996773e-06, 5.419999999992098e-07, 8.097000000005516e-06, 5.419999999992098e-07, 7.207999999994663e-06, 5.420000000061487e-07, 9.443999999997343e-06, 5.419999999992098e-07, 6.0829999999970075e-06, 5.420000000061487e-07, 5.999999999999062e-06, 5.409999999997361e-07, 6.195000000000506e-06, 5.419999999992098e-07, 6.430000000001712e-06, 5.419999999992098e-07, 7.222000000001172e-06, 5.419999999992098e-07, 8.915999999997704e-06, 9.000000000002062e-06, 6.555999999997841e-06, 5.419999999992098e-07, 8.486000000001992e-06, 6.915999999995703e-06, 5.420000000061487e-07, 6.096999999996577e-06, 5.419999999992098e-07, 5.999999999999062e-06, 5.419999999992098e-07, 8.763000000001908e-06, 5.419999999992098e-07, 8.319999999999161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.409999999997361e-07, 8.652999999997357e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:27:00.442" endtime="20201030 18:27:00.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.432" endtime="20201030 18:27:00.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:00.462" level="INFO">${RESULT} = [{'diff': 5.409999999997361e-07}, {'diff': 5.409999999997361e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.419999999992098e-07}, {'diff': 5.420000000061487e-07}, {'diff': 5.419999999992098e-07}, {...</msg>
<status status="PASS" starttime="20201030 18:27:00.454" endtime="20201030 18:27:00.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:00.473" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 6.804999999998618e-06, 7.652999999996357e-06, 6.2079...</msg>
<status status="PASS" starttime="20201030 18:27:00.464" endtime="20201030 18:27:00.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.483" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:00.481" endtime="20201030 18:27:00.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.488" level="INFO">VALUE: [5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 6.804999999998618e-06, 7.652999999996357e-06, 6.207999999993663e-06, 9.333000000000258e-06, 5.971999999999922e-06, 7.2919999999990215e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 8.917000000004116e-06, 7.874999999997467e-06, 7.319999999998161e-06, 8.499999999994623e-06, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 9.000000000002062e-06, 5.419999999992098e-07, 6.915999999995703e-06, 6.096999999996577e-06, 5.999999999999062e-06, 8.763000000001908e-06, 8.319999999999161e-06, 9.431000000004186e-06, 8.652999999997357e-06]</msg>
<status status="PASS" starttime="20201030 18:27:00.485" endtime="20201030 18:27:00.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.474" endtime="20201030 18:27:00.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:00.500" endtime="20201030 18:27:00.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.496" endtime="20201030 18:27:00.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.493" endtime="20201030 18:27:00.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.937" endtime="20201030 18:27:00.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:59.936" endtime="20201030 18:27:00.525"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.545" endtime="20201030 18:27:00.558"></status>
</kw>
<msg timestamp="20201030 18:27:00.560" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.542" endtime="20201030 18:27:00.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.566" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:00.562" endtime="20201030 18:27:00.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.568" endtime="20201030 18:27:00.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.534" endtime="20201030 18:27:00.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.530" endtime="20201030 18:27:00.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.591" endtime="20201030 18:27:00.926"></status>
</kw>
<msg timestamp="20201030 18:27:00.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:00.588" endtime="20201030 18:27:00.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:00.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035881, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:00.935" endtime="20201030 18:27:00.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:00.953" endtime="20201030 18:27:00.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.581" endtime="20201030 18:27:00.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.576" endtime="20201030 18:27:00.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:01.013" level="INFO">${debug} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201030 18:27:00.962" endtime="20201030 18:27:01.014"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.016" endtime="20201030 18:27:01.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.029" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:01.027" endtime="20201030 18:27:01.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.038" level="INFO">VALUE: {'sourcediff': [0, 7.403000000003046e-06, 5.419999999992098e-07, 8.638999999997787e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 7.777000000000478e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 7.415999999996203e-06, 5.420000000061487e-07, 6.207999999993663e-06, 5.420000000061487e-07, 7.221999999994233e-06, 5.419999999992098e-07, 8.861000000005836e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.409999999997361e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.11200000000256e-06, 5.409999999997361e-07, 8.750000000001812e-06, 5.419999999992098e-07, 9.374999999998967e-06, 8.693999999996593e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 6.0140000000055704e-06, 7.443999999995343e-06, 6.59800000000349e-06, 5.409999999997361e-07, 8.666999999996927e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 7.527999999999702e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07, 9.360999999999398e-06, 7.500000000000562e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.419999999992098e-07, 6.54200000000521e-06, 5.409999999997361e-07, 8.222999999994707e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 6.652000000002822e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 6.27800000000539e-06, 9.680999999997497e-06, 5.409999999997361e-07, 8.333999999998731e-06, 5.409999999997361e-07, 8.417000000003616e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.409999999997361e-07, 8.639000000004726e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07, 8.652000000004822e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07], 'time': [0.035873597, 0.035881, 0.035881542, 0.035890181, 0.035890722, 0.035898042, 0.035898583, 0.035908014, 0.035908556, 0.035916333, 0.035916875, 0.03592575, 0.035926292, 0.035935514, 0.035936056, 0.035943472, 0.035944014, 0.035950222, 0.035950764, 0.035957986, 0.035958528, 0.035967389, 0.035967931, 0.035975917, 0.035976458, 0.035984556, 0.035985097, 0.035994083, 0.035994625, 0.036002278, 0.036002819, 0.036010028, 0.036010569, 0.036016681, 0.036017222, 0.036025972, 0.036026514, 0.036035889, 0.036044583, 0.036045125, 0.036054444, 0.036054986, 0.036061, 0.036068444, 0.036075042, 0.036075583, 0.03608425, 0.036084792, 0.036091319, 0.036091861, 0.036099417, 0.036099958, 0.036107486, 0.036108028, 0.036114347, 0.036114889, 0.036123764, 0.036124306, 0.036130847, 0.036131389, 0.03614075, 0.03614825, 0.036148792, 0.036155319, 0.036155861, 0.036162403, 0.036162944, 0.036171167, 0.036171708, 0.036178125, 0.036178667, 0.036185319, 0.036185861, 0.036194639, 0.036195181, 0.036203056, 0.036203597, 0.036209875, 0.036219556, 0.036220097, 0.036228431, 0.036228972, 0.036237389, 0.036237931, 0.036247153, 0.036247694, 0.036256333, 0.036256875, 0.03626475, 0.036265292, 0.036273944, 0.036274486, 0.036282361, 0.036282903], 'eventsource_diff': [0, 7.403000000003046e-06, 5.419999999992098e-07, 8.638999999997787e-06, 5.409999999997361e-07, 7.319999999998161e-06, 5.409999999997361e-07, 9.431000000004186e-06, 5.419999999992098e-07, 7.777000000000478e-06, 5.419999999992098e-07, 8.874999999998467e-06, 5.419999999992098e-07, 9.222000000003172e-06, 5.419999999992098e-07, 7.415999999996203e-06, 5.420000000061487e-07, 6.207999999993663e-06, 5.420000000061487e-07, 7.221999999994233e-06, 5.419999999992098e-07, 8.861000000005836e-06, 5.419999999992098e-07, 7.986000000001492e-06, 5.409999999997361e-07, 8.097999999998051e-06, 5.409999999997361e-07, 8.986000000002492e-06, 5.419999999992098e-07, 7.652999999996357e-06, 5.409999999997361e-07, 7.209000000001076e-06, 5.409999999997361e-07, 6.11200000000256e-06, 5.409999999997361e-07, 8.750000000001812e-06, 5.419999999992098e-07, 9.374999999998967e-06, 8.693999999996593e-06, 5.419999999992098e-07, 9.319000000000688e-06, 5.419999999992098e-07, 6.0140000000055704e-06, 7.443999999995343e-06, 6.59800000000349e-06, 5.409999999997361e-07, 8.666999999996927e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.420000000061487e-07, 7.555999999998841e-06, 5.409999999997361e-07, 7.527999999999702e-06, 5.419999999992098e-07, 6.318999999997688e-06, 5.419999999992098e-07, 8.875000000005406e-06, 5.419999999992098e-07, 6.540999999998798e-06, 5.419999999992098e-07, 9.360999999999398e-06, 7.500000000000562e-06, 5.419999999992098e-07, 6.526999999999228e-06, 5.419999999992098e-07, 6.54200000000521e-06, 5.409999999997361e-07, 8.222999999994707e-06, 5.409999999997361e-07, 6.417000000001616e-06, 5.419999999992098e-07, 6.652000000002822e-06, 5.419999999992098e-07, 8.778000000000952e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.409999999997361e-07, 6.27800000000539e-06, 9.680999999997497e-06, 5.409999999997361e-07, 8.333999999998731e-06, 5.409999999997361e-07, 8.417000000003616e-06, 5.419999999992098e-07, 9.221999999996233e-06, 5.409999999997361e-07, 8.639000000004726e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07, 8.652000000004822e-06, 5.419999999992098e-07, 7.874999999997467e-06, 5.419999999992098e-07]}</msg>
<status status="PASS" starttime="20201030 18:27:01.031" endtime="20201030 18:27:01.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.020" endtime="20201030 18:27:01.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:01.052" level="INFO">${RESULT} = [{'diff': 7.403000000003046e-06}, {'diff': 8.638999999997787e-06}, {'diff': 7.319999999998161e-06}, {'diff': 9.431000000004186e-06}, {'diff': 7.777000000000478e-06}, {'diff': 8.874999999998467e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:01.043" endtime="20201030 18:27:01.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:01.061" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.403000000003046e-06, 8.638999999997787e-06, 7.319999999998161e-06, 9.431000000004186e-06, 7.777000000000478e-06, 8.874999999998467e-06, 9.222000000003172e-06, 7.415999999996203e-06, 6.2079...</msg>
<status status="PASS" starttime="20201030 18:27:01.054" endtime="20201030 18:27:01.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.071" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:01.069" endtime="20201030 18:27:01.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.076" level="INFO">VALUE: [7.403000000003046e-06, 8.638999999997787e-06, 7.319999999998161e-06, 9.431000000004186e-06, 7.777000000000478e-06, 8.874999999998467e-06, 9.222000000003172e-06, 7.415999999996203e-06, 6.207999999993663e-06, 7.221999999994233e-06, 8.861000000005836e-06, 7.986000000001492e-06, 8.097999999998051e-06, 8.986000000002492e-06, 7.652999999996357e-06, 7.209000000001076e-06, 6.11200000000256e-06, 8.750000000001812e-06, 9.374999999998967e-06, 5.419999999992098e-07, 5.419999999992098e-07, 7.443999999995343e-06, 5.409999999997361e-07, 5.419999999992098e-07, 5.420000000061487e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 7.500000000000562e-06, 6.526999999999228e-06, 6.54200000000521e-06, 8.222999999994707e-06, 6.417000000001616e-06, 6.652000000002822e-06, 8.778000000000952e-06, 7.874999999997467e-06, 6.27800000000539e-06, 5.409999999997361e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.409999999997361e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201030 18:27:01.073" endtime="20201030 18:27:01.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.062" endtime="20201030 18:27:01.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.088" endtime="20201030 18:27:01.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.084" endtime="20201030 18:27:01.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.081" endtime="20201030 18:27:01.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.527" endtime="20201030 18:27:01.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:00.526" endtime="20201030 18:27:01.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:26:48.854" endtime="20201030 18:27:01.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.123" endtime="20201030 18:27:01.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.119" endtime="20201030 18:27:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.116" endtime="20201030 18:27:01.147"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:26:48.664" endtime="20201030 18:27:01.147" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.164" endtime="20201030 18:27:01.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.160" endtime="20201030 18:27:01.187"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.223" endtime="20201030 18:27:01.241"></status>
</kw>
<msg timestamp="20201030 18:27:01.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.220" endtime="20201030 18:27:01.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.244" endtime="20201030 18:27:01.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.256" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:01.251" endtime="20201030 18:27:01.256"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:01.212" endtime="20201030 18:27:01.258"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:01.206" endtime="20201030 18:27:01.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.203" endtime="20201030 18:27:01.260"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:01.268" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:01.267" endtime="20201030 18:27:01.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.262" endtime="20201030 18:27:01.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.202" endtime="20201030 18:27:01.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.200" endtime="20201030 18:27:01.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.272" endtime="20201030 18:27:01.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.193" endtime="20201030 18:27:01.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.189" endtime="20201030 18:27:01.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.158" endtime="20201030 18:27:01.279"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.301" endtime="20201030 18:27:01.315"></status>
</kw>
<msg timestamp="20201030 18:27:01.316" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.297" endtime="20201030 18:27:01.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.322" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.318" endtime="20201030 18:27:01.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.325" endtime="20201030 18:27:01.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.290" endtime="20201030 18:27:01.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.286" endtime="20201030 18:27:01.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.350" endtime="20201030 18:27:01.707"></status>
</kw>
<msg timestamp="20201030 18:27:01.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128607264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128608806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.345" endtime="20201030 18:27:01.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128607264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128608806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.716" endtime="20201030 18:27:01.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.735" endtime="20201030 18:27:01.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.337" endtime="20201030 18:27:01.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.333" endtime="20201030 18:27:01.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:01.753" level="INFO">${RESULT} = [{'diff': 1.541999999993271e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.5689999999790594e-06}, {'diff': 1.5560000000136576e-06}, {'diff': 1.5560000000136576e-06}, {'diff': 1.5549999999864283e-0...</msg>
<status status="PASS" starttime="20201030 18:27:01.744" endtime="20201030 18:27:01.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:01.762" level="INFO">${OVERHEAD} = {'diff': [1.541999999993271e-06, 1.5549999999864283e-06, 1.5689999999790594e-06, 1.5560000000136576e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.569999999978533e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:01.755" endtime="20201030 18:27:01.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.773" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:01.771" endtime="20201030 18:27:01.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.779" level="INFO">VALUE: [1.541999999993271e-06, 1.5549999999864283e-06, 1.5689999999790594e-06, 1.5560000000136576e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.569999999978533e-06, 1.5549999999864283e-06, 1.555999999985902e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.52800000000064e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.569999999978533e-06, 1.5560000000136576e-06, 1.5700000000062886e-06, 1.5549999999864283e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.541999999993271e-06, 1.555000000014184e-06, 1.555999999985902e-06, 1.5689999999790594e-06, 1.5420000000210266e-06, 1.555999999985902e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.582999999999446e-06, 1.555000000014184e-06, 1.5560000000136576e-06, 1.541999999993271e-06, 1.569000000006815e-06, 1.555000000014184e-06, 1.5560000000136576e-06, 1.500000000015378e-06, 1.541000000021553e-06, 1.6389999999977256e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.5420000000210266e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.5700000000062886e-06, 1.555999999985902e-06]</msg>
<status status="PASS" starttime="20201030 18:27:01.775" endtime="20201030 18:27:01.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.764" endtime="20201030 18:27:01.781"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:01.790" endtime="20201030 18:27:01.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.786" endtime="20201030 18:27:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.784" endtime="20201030 18:27:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.282" endtime="20201030 18:27:01.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.281" endtime="20201030 18:27:01.815"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.837" endtime="20201030 18:27:01.851"></status>
</kw>
<msg timestamp="20201030 18:27:01.852" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.834" endtime="20201030 18:27:01.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:01.859" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:01.855" endtime="20201030 18:27:01.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.861" endtime="20201030 18:27:01.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.825" endtime="20201030 18:27:01.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.820" endtime="20201030 18:27:01.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:01.884" endtime="20201030 18:27:02.230"></status>
</kw>
<msg timestamp="20201030 18:27:02.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038730139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038731694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:01.881" endtime="20201030 18:27:02.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038730139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038731694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.239" endtime="20201030 18:27:02.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.258" endtime="20201030 18:27:02.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.874" endtime="20201030 18:27:02.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.869" endtime="20201030 18:27:02.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:02.275" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.582999999999446e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 18:27:02.266" endtime="20201030 18:27:02.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:02.285" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:02.277" endtime="20201030 18:27:02.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.295" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:02.293" endtime="20201030 18:27:02.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.301" level="INFO">VALUE: [1.5550000000003061e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 18:27:02.297" endtime="20201030 18:27:02.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.287" endtime="20201030 18:27:02.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:02.314" endtime="20201030 18:27:02.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.309" endtime="20201030 18:27:02.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.306" endtime="20201030 18:27:02.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.817" endtime="20201030 18:27:02.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.816" endtime="20201030 18:27:02.339"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.359" endtime="20201030 18:27:02.374"></status>
</kw>
<msg timestamp="20201030 18:27:02.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.356" endtime="20201030 18:27:02.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.379" endtime="20201030 18:27:02.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.387" endtime="20201030 18:27:02.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.349" endtime="20201030 18:27:02.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.344" endtime="20201030 18:27:02.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.418" endtime="20201030 18:27:02.761"></status>
</kw>
<msg timestamp="20201030 18:27:02.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036860958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036862514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.413" endtime="20201030 18:27:02.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036860958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036862514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:02.773" endtime="20201030 18:27:02.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.805" endtime="20201030 18:27:02.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.404" endtime="20201030 18:27:02.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.398" endtime="20201030 18:27:02.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:02.823" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.568999999999876e-06...</msg>
<status status="PASS" starttime="20201030 18:27:02.814" endtime="20201030 18:27:02.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:02.838" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:02.826" endtime="20201030 18:27:02.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:02.850" endtime="20201030 18:27:02.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.861" level="INFO">VALUE: [1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 18:27:02.856" endtime="20201030 18:27:02.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.841" endtime="20201030 18:27:02.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:02.885" endtime="20201030 18:27:02.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.876" endtime="20201030 18:27:02.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.871" endtime="20201030 18:27:02.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.340" endtime="20201030 18:27:02.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.340" endtime="20201030 18:27:02.920"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.962" endtime="20201030 18:27:02.977"></status>
</kw>
<msg timestamp="20201030 18:27:02.978" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.957" endtime="20201030 18:27:02.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:02.984" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:02.980" endtime="20201030 18:27:02.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:02.987" endtime="20201030 18:27:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.944" endtime="20201030 18:27:02.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.933" endtime="20201030 18:27:02.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.011" endtime="20201030 18:27:03.347"></status>
</kw>
<msg timestamp="20201030 18:27:03.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067279986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067281472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.007" endtime="20201030 18:27:03.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067279986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067281472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.357" endtime="20201030 18:27:03.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.375" endtime="20201030 18:27:03.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.000" endtime="20201030 18:27:03.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.995" endtime="20201030 18:27:03.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:03.394" level="INFO">${RESULT} = [{'diff': 1.4859999999949913e-06}, {'diff': 1.5970000000059548e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5410000000076751e-06}, {'diff': 1.4860000000088691e-...</msg>
<status status="PASS" starttime="20201030 18:27:03.384" endtime="20201030 18:27:03.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:03.405" level="INFO">${OVERHEAD} = {'diff': [1.4859999999949913e-06, 1.5970000000059548e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.4860000000088691e-06, 1.569000000006815e-06, 1.5699999999924108e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:03.396" endtime="20201030 18:27:03.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.415" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:03.413" endtime="20201030 18:27:03.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.420" level="INFO">VALUE: [1.4859999999949913e-06, 1.5970000000059548e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.4860000000088691e-06, 1.569000000006815e-06, 1.5699999999924108e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5689999999929372e-06, 1.5559999999997798e-06, 1.5699999999924108e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999924108e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999924108e-06, 1.5549999999864283e-06, 1.5970000000059548e-06, 1.5700000000062886e-06, 1.6109999999985858e-06, 1.5700000000062886e-06, 1.596999999992077e-06, 1.6109999999985858e-06, 1.5699999999924108e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.5550000000003061e-06, 1.569000000006815e-06, 1.5689999999929372e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 18:27:03.417" endtime="20201030 18:27:03.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.407" endtime="20201030 18:27:03.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:03.432" endtime="20201030 18:27:03.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.428" endtime="20201030 18:27:03.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.425" endtime="20201030 18:27:03.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.924" endtime="20201030 18:27:03.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:02.922" endtime="20201030 18:27:03.457"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.477" endtime="20201030 18:27:03.499"></status>
</kw>
<msg timestamp="20201030 18:27:03.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.474" endtime="20201030 18:27:03.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:03.502" endtime="20201030 18:27:03.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.509" endtime="20201030 18:27:03.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.467" endtime="20201030 18:27:03.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.462" endtime="20201030 18:27:03.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.533" endtime="20201030 18:27:03.897"></status>
</kw>
<msg timestamp="20201030 18:27:03.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.530" endtime="20201030 18:27:03.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036838542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036840069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:03.906" endtime="20201030 18:27:03.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:03.933" endtime="20201030 18:27:03.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.523" endtime="20201030 18:27:03.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.518" endtime="20201030 18:27:03.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:03.951" level="INFO">${RESULT} = [{'diff': 1.5270000000011663e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201030 18:27:03.942" endtime="20201030 18:27:03.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:03.960" level="INFO">${OVERHEAD} = {'diff': [1.5270000000011663e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.473000000001834e-06, 1.4860000000019302e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:03.953" endtime="20201030 18:27:03.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.970" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:03.968" endtime="20201030 18:27:03.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:03.976" level="INFO">VALUE: [1.5270000000011663e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.473000000001834e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.4999999999945612e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.6249999999981557e-06, 1.5000000000015001e-06, 1.5979999999984895e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.6109999999985858e-06]</msg>
<status status="PASS" starttime="20201030 18:27:03.972" endtime="20201030 18:27:03.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.962" endtime="20201030 18:27:03.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:03.988" endtime="20201030 18:27:04.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.983" endtime="20201030 18:27:04.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.981" endtime="20201030 18:27:04.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.459" endtime="20201030 18:27:04.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:03.458" endtime="20201030 18:27:04.013"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.033" endtime="20201030 18:27:04.049"></status>
</kw>
<msg timestamp="20201030 18:27:04.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.030" endtime="20201030 18:27:04.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.053" endtime="20201030 18:27:04.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.059" endtime="20201030 18:27:04.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.023" endtime="20201030 18:27:04.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.018" endtime="20201030 18:27:04.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.082" endtime="20201030 18:27:04.433"></status>
</kw>
<msg timestamp="20201030 18:27:04.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038989931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038991486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.079" endtime="20201030 18:27:04.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038989931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038991486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.443" endtime="20201030 18:27:04.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.462" endtime="20201030 18:27:04.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.072" endtime="20201030 18:27:04.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.067" endtime="20201030 18:27:04.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:04.480" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.5559999999997798e-...</msg>
<status status="PASS" starttime="20201030 18:27:04.471" endtime="20201030 18:27:04.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:04.489" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:04.482" endtime="20201030 18:27:04.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.499" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:04.497" endtime="20201030 18:27:04.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.505" level="INFO">VALUE: [1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.582999999999446e-06]</msg>
<status status="PASS" starttime="20201030 18:27:04.502" endtime="20201030 18:27:04.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.491" endtime="20201030 18:27:04.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:04.518" endtime="20201030 18:27:04.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.512" endtime="20201030 18:27:04.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.510" endtime="20201030 18:27:04.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.015" endtime="20201030 18:27:04.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.014" endtime="20201030 18:27:04.543"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.565" endtime="20201030 18:27:04.580"></status>
</kw>
<msg timestamp="20201030 18:27:04.581" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.562" endtime="20201030 18:27:04.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.588" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:04.583" endtime="20201030 18:27:04.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.590" endtime="20201030 18:27:04.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.554" endtime="20201030 18:27:04.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.549" endtime="20201030 18:27:04.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.614" endtime="20201030 18:27:04.968"></status>
</kw>
<msg timestamp="20201030 18:27:04.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039197694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.611" endtime="20201030 18:27:04.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:04.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039197694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:04.979" endtime="20201030 18:27:04.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:04.998" endtime="20201030 18:27:05.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.603" endtime="20201030 18:27:05.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.598" endtime="20201030 18:27:05.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:05.016" level="INFO">${RESULT} = [{'diff': 1.473000000001834e-06}, {'diff': 1.527999999993701e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:05.007" endtime="20201030 18:27:05.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:05.027" level="INFO">${OVERHEAD} = {'diff': [1.473000000001834e-06, 1.527999999993701e-06, 1.568999999999876e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:05.018" endtime="20201030 18:27:05.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.037" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:05.034" endtime="20201030 18:27:05.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.042" level="INFO">VALUE: [1.473000000001834e-06, 1.527999999993701e-06, 1.568999999999876e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5549999999933672e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201030 18:27:05.039" endtime="20201030 18:27:05.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.028" endtime="20201030 18:27:05.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.054" endtime="20201030 18:27:05.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.050" endtime="20201030 18:27:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.047" endtime="20201030 18:27:05.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.545" endtime="20201030 18:27:05.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:04.544" endtime="20201030 18:27:05.079"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.100" endtime="20201030 18:27:05.115"></status>
</kw>
<msg timestamp="20201030 18:27:05.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.096" endtime="20201030 18:27:05.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.122" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.118" endtime="20201030 18:27:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.124" endtime="20201030 18:27:05.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.089" endtime="20201030 18:27:05.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.084" endtime="20201030 18:27:05.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.149" endtime="20201030 18:27:05.492"></status>
</kw>
<msg timestamp="20201030 18:27:05.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037374333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.145" endtime="20201030 18:27:05.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037374333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037375958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.502" endtime="20201030 18:27:05.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.521" endtime="20201030 18:27:05.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.138" endtime="20201030 18:27:05.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.133" endtime="20201030 18:27:05.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:05.538" level="INFO">${RESULT} = [{'diff': 1.6249999999981557e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5559999999997798e-0...</msg>
<status status="PASS" starttime="20201030 18:27:05.529" endtime="20201030 18:27:05.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:05.549" level="INFO">${OVERHEAD} = {'diff': [1.6249999999981557e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5270000000011663e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:05.540" endtime="20201030 18:27:05.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.560" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:05.557" endtime="20201030 18:27:05.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.566" level="INFO">VALUE: [1.6249999999981557e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.4860000000019302e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5269999999942274e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 18:27:05.562" endtime="20201030 18:27:05.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.551" endtime="20201030 18:27:05.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:05.578" endtime="20201030 18:27:05.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.574" endtime="20201030 18:27:05.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.571" endtime="20201030 18:27:05.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.081" endtime="20201030 18:27:05.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.080" endtime="20201030 18:27:05.604"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.624" endtime="20201030 18:27:05.641"></status>
</kw>
<msg timestamp="20201030 18:27:05.642" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.621" endtime="20201030 18:27:05.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:05.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:05.644" endtime="20201030 18:27:05.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.652" endtime="20201030 18:27:05.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.614" endtime="20201030 18:27:05.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.609" endtime="20201030 18:27:05.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:05.676" endtime="20201030 18:27:06.053"></status>
</kw>
<msg timestamp="20201030 18:27:06.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037751403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:05.672" endtime="20201030 18:27:06.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037749847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037751403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.063" endtime="20201030 18:27:06.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.084" endtime="20201030 18:27:06.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.665" endtime="20201030 18:27:06.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.660" endtime="20201030 18:27:06.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.102" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-...</msg>
<status status="PASS" starttime="20201030 18:27:06.093" endtime="20201030 18:27:06.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:06.112" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5560000000067187e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5559999999997798e-06...</msg>
<status status="PASS" starttime="20201030 18:27:06.104" endtime="20201030 18:27:06.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.123" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:06.121" endtime="20201030 18:27:06.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.129" level="INFO">VALUE: [1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5560000000067187e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5560000000067187e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.6390000000046645e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.5410000000007362e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5839999999989196e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:06.126" endtime="20201030 18:27:06.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.114" endtime="20201030 18:27:06.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.145" endtime="20201030 18:27:06.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.137" endtime="20201030 18:27:06.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.134" endtime="20201030 18:27:06.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.606" endtime="20201030 18:27:06.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:05.605" endtime="20201030 18:27:06.171"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.194" endtime="20201030 18:27:06.216"></status>
</kw>
<msg timestamp="20201030 18:27:06.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.190" endtime="20201030 18:27:06.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.219" endtime="20201030 18:27:06.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.226" endtime="20201030 18:27:06.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.182" endtime="20201030 18:27:06.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.177" endtime="20201030 18:27:06.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.251" endtime="20201030 18:27:06.613"></status>
</kw>
<msg timestamp="20201030 18:27:06.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046678125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.248" endtime="20201030 18:27:06.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046678125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046679667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.623" endtime="20201030 18:27:06.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.642" endtime="20201030 18:27:06.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.240" endtime="20201030 18:27:06.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.235" endtime="20201030 18:27:06.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:06.659" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.5420000000002099e-0...</msg>
<status status="PASS" starttime="20201030 18:27:06.650" endtime="20201030 18:27:06.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:06.671" level="INFO">${OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:06.661" endtime="20201030 18:27:06.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:06.682" endtime="20201030 18:27:06.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.693" level="INFO">VALUE: [1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5410000000007362e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:06.689" endtime="20201030 18:27:06.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.674" endtime="20201030 18:27:06.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:06.714" endtime="20201030 18:27:06.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.705" endtime="20201030 18:27:06.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.701" endtime="20201030 18:27:06.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.173" endtime="20201030 18:27:06.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.172" endtime="20201030 18:27:06.739"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.760" endtime="20201030 18:27:06.774"></status>
</kw>
<msg timestamp="20201030 18:27:06.776" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.756" endtime="20201030 18:27:06.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:06.782" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:06.778" endtime="20201030 18:27:06.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.784" endtime="20201030 18:27:06.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.748" endtime="20201030 18:27:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.744" endtime="20201030 18:27:06.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:06.807" endtime="20201030 18:27:07.146"></status>
</kw>
<msg timestamp="20201030 18:27:07.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:06.804" endtime="20201030 18:27:07.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037725056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.155" endtime="20201030 18:27:07.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.174" endtime="20201030 18:27:07.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.797" endtime="20201030 18:27:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.792" endtime="20201030 18:27:07.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.191" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06...</msg>
<status status="PASS" starttime="20201030 18:27:07.182" endtime="20201030 18:27:07.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:07.202" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:27:07.193" endtime="20201030 18:27:07.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.212" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:07.210" endtime="20201030 18:27:07.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.217" level="INFO">VALUE: [1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 18:27:07.214" endtime="20201030 18:27:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.204" endtime="20201030 18:27:07.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.229" endtime="20201030 18:27:07.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.225" endtime="20201030 18:27:07.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.222" endtime="20201030 18:27:07.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.740" endtime="20201030 18:27:07.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:06.739" endtime="20201030 18:27:07.254"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.275" endtime="20201030 18:27:07.290"></status>
</kw>
<msg timestamp="20201030 18:27:07.291" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.271" endtime="20201030 18:27:07.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.297" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.293" endtime="20201030 18:27:07.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.300" endtime="20201030 18:27:07.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.264" endtime="20201030 18:27:07.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.260" endtime="20201030 18:27:07.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.323" endtime="20201030 18:27:07.660"></status>
</kw>
<msg timestamp="20201030 18:27:07.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037724681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.320" endtime="20201030 18:27:07.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037723111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037724681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.670" endtime="20201030 18:27:07.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.689" endtime="20201030 18:27:07.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.312" endtime="20201030 18:27:07.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.308" endtime="20201030 18:27:07.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:07.706" level="INFO">${RESULT} = [{'diff': 1.5700000000062886e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-0...</msg>
<status status="PASS" starttime="20201030 18:27:07.697" endtime="20201030 18:27:07.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:07.717" level="INFO">${OVERHEAD} = {'diff': [1.5700000000062886e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5699999999993497e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:07.708" endtime="20201030 18:27:07.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.727" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:07.725" endtime="20201030 18:27:07.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.733" level="INFO">VALUE: [1.5700000000062886e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5979999999984895e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.6250000000050946e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.486999999994465e-06]</msg>
<status status="PASS" starttime="20201030 18:27:07.729" endtime="20201030 18:27:07.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.719" endtime="20201030 18:27:07.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:07.745" endtime="20201030 18:27:07.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.741" endtime="20201030 18:27:07.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.738" endtime="20201030 18:27:07.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.256" endtime="20201030 18:27:07.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.256" endtime="20201030 18:27:07.770"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.797" endtime="20201030 18:27:07.815"></status>
</kw>
<msg timestamp="20201030 18:27:07.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.789" endtime="20201030 18:27:07.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:07.827" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:07.821" endtime="20201030 18:27:07.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.830" endtime="20201030 18:27:07.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.780" endtime="20201030 18:27:07.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.775" endtime="20201030 18:27:07.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:07.857" endtime="20201030 18:27:08.222"></status>
</kw>
<msg timestamp="20201030 18:27:08.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045000083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045001653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:07.853" endtime="20201030 18:27:08.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045000083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045001653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.233" endtime="20201030 18:27:08.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.253" endtime="20201030 18:27:08.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.845" endtime="20201030 18:27:08.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.840" endtime="20201030 18:27:08.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.271" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.52800000000064e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:08.262" endtime="20201030 18:27:08.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.281" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5...</msg>
<status status="PASS" starttime="20201030 18:27:08.273" endtime="20201030 18:27:08.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.292" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:08.290" endtime="20201030 18:27:08.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.298" level="INFO">VALUE: [1.5699999999993497e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5979999999984895e-06, 1.582999999999446e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5409999999937973e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5269999999942274e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5979999999984895e-06, 1.5559999999997798e-06, 1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.4859999999949913e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:08.294" endtime="20201030 18:27:08.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.283" endtime="20201030 18:27:08.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.311" endtime="20201030 18:27:08.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.307" endtime="20201030 18:27:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.304" endtime="20201030 18:27:08.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.772" endtime="20201030 18:27:08.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:07.771" endtime="20201030 18:27:08.337"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.359" endtime="20201030 18:27:08.375"></status>
</kw>
<msg timestamp="20201030 18:27:08.377" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.355" endtime="20201030 18:27:08.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.383" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.379" endtime="20201030 18:27:08.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.386" endtime="20201030 18:27:08.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.348" endtime="20201030 18:27:08.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.342" endtime="20201030 18:27:08.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.411" endtime="20201030 18:27:08.771"></status>
</kw>
<msg timestamp="20201030 18:27:08.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039688458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039690014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.407" endtime="20201030 18:27:08.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039688458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039690014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.780" endtime="20201030 18:27:08.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.800" endtime="20201030 18:27:08.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.399" endtime="20201030 18:27:08.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.394" endtime="20201030 18:27:08.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:08.817" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-06...</msg>
<status status="PASS" starttime="20201030 18:27:08.808" endtime="20201030 18:27:08.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:08.827" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:08.819" endtime="20201030 18:27:08.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.837" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:08.835" endtime="20201030 18:27:08.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.843" level="INFO">VALUE: [1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5840000000058585e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:08.840" endtime="20201030 18:27:08.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.829" endtime="20201030 18:27:08.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:08.857" endtime="20201030 18:27:08.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.851" endtime="20201030 18:27:08.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.849" endtime="20201030 18:27:08.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.339" endtime="20201030 18:27:08.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.338" endtime="20201030 18:27:08.882"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.903" endtime="20201030 18:27:08.918"></status>
</kw>
<msg timestamp="20201030 18:27:08.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.899" endtime="20201030 18:27:08.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:08.925" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:08.921" endtime="20201030 18:27:08.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.928" endtime="20201030 18:27:08.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.892" endtime="20201030 18:27:08.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.887" endtime="20201030 18:27:08.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:08.951" endtime="20201030 18:27:09.361"></status>
</kw>
<msg timestamp="20201030 18:27:09.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037629736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037631306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:08.948" endtime="20201030 18:27:09.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037629736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037631306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.371" endtime="20201030 18:27:09.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.391" endtime="20201030 18:27:09.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.941" endtime="20201030 18:27:09.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.936" endtime="20201030 18:27:09.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.410" level="INFO">${RESULT} = [{'diff': 1.5700000000062886e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 18:27:09.400" endtime="20201030 18:27:09.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.421" level="INFO">${OVERHEAD} = {'diff': [1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:09.412" endtime="20201030 18:27:09.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.432" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:09.430" endtime="20201030 18:27:09.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.438" level="INFO">VALUE: [1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5980000000054284e-06, 1.5420000000002099e-06]</msg>
<status status="PASS" starttime="20201030 18:27:09.434" endtime="20201030 18:27:09.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.423" endtime="20201030 18:27:09.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.451" endtime="20201030 18:27:09.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.447" endtime="20201030 18:27:09.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.444" endtime="20201030 18:27:09.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.884" endtime="20201030 18:27:09.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:08.883" endtime="20201030 18:27:09.477"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.499" endtime="20201030 18:27:09.515"></status>
</kw>
<msg timestamp="20201030 18:27:09.516" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.495" endtime="20201030 18:27:09.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.523" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:09.518" endtime="20201030 18:27:09.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.525" endtime="20201030 18:27:09.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.487" endtime="20201030 18:27:09.531"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.482" endtime="20201030 18:27:09.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.550" endtime="20201030 18:27:09.909"></status>
</kw>
<msg timestamp="20201030 18:27:09.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039400847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039402403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.546" endtime="20201030 18:27:09.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039400847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039402403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:09.918" endtime="20201030 18:27:09.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:09.938" endtime="20201030 18:27:09.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.539" endtime="20201030 18:27:09.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.534" endtime="20201030 18:27:09.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:09.955" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-...</msg>
<status status="PASS" starttime="20201030 18:27:09.946" endtime="20201030 18:27:09.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:09.966" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5550000000003061e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:09.957" endtime="20201030 18:27:09.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.976" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:09.974" endtime="20201030 18:27:09.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:09.982" level="INFO">VALUE: [1.5559999999997798e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5560000000067187e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5560000000067187e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5830000000063849e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 18:27:09.979" endtime="20201030 18:27:09.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.968" endtime="20201030 18:27:09.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:09.994" endtime="20201030 18:27:10.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.990" endtime="20201030 18:27:10.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.988" endtime="20201030 18:27:10.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.479" endtime="20201030 18:27:10.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:09.478" endtime="20201030 18:27:10.020"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.040" endtime="20201030 18:27:10.055"></status>
</kw>
<msg timestamp="20201030 18:27:10.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.037" endtime="20201030 18:27:10.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.062" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.058" endtime="20201030 18:27:10.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.065" endtime="20201030 18:27:10.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.029" endtime="20201030 18:27:10.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.025" endtime="20201030 18:27:10.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.088" endtime="20201030 18:27:10.447"></status>
</kw>
<msg timestamp="20201030 18:27:10.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037432042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037433597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.085" endtime="20201030 18:27:10.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037432042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037433597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.457" endtime="20201030 18:27:10.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.477" endtime="20201030 18:27:10.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.077" endtime="20201030 18:27:10.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.073" endtime="20201030 18:27:10.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:10.495" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5560000000067187e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.6250000000050946e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:10.486" endtime="20201030 18:27:10.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:10.505" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5560000000067187e-06, 1.51400000000107e-06, 1.6250000000050946e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:10.498" endtime="20201030 18:27:10.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.516" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:10.514" endtime="20201030 18:27:10.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.522" level="INFO">VALUE: [1.5550000000003061e-06, 1.5560000000067187e-06, 1.51400000000107e-06, 1.6250000000050946e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.6109999999985858e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:10.519" endtime="20201030 18:27:10.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.507" endtime="20201030 18:27:10.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:10.536" endtime="20201030 18:27:10.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.531" endtime="20201030 18:27:10.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.528" endtime="20201030 18:27:10.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.021" endtime="20201030 18:27:10.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.020" endtime="20201030 18:27:10.561"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.583" endtime="20201030 18:27:10.600"></status>
</kw>
<msg timestamp="20201030 18:27:10.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.579" endtime="20201030 18:27:10.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:10.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:10.604" endtime="20201030 18:27:10.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.611" endtime="20201030 18:27:10.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.572" endtime="20201030 18:27:10.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.567" endtime="20201030 18:27:10.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:10.636" endtime="20201030 18:27:11.008"></status>
</kw>
<msg timestamp="20201030 18:27:11.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041062597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:10.632" endtime="20201030 18:27:11.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041062597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041064153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.018" endtime="20201030 18:27:11.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.037" endtime="20201030 18:27:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.624" endtime="20201030 18:27:11.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.619" endtime="20201030 18:27:11.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.054" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5410000000007362e-06...</msg>
<status status="PASS" starttime="20201030 18:27:11.045" endtime="20201030 18:27:11.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.063" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:11.056" endtime="20201030 18:27:11.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.073" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:11.071" endtime="20201030 18:27:11.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.079" level="INFO">VALUE: [1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.4999999999945612e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5969999999990159e-06, 1.5560000000067187e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.6390000000046645e-06, 1.4860000000019302e-06]</msg>
<status status="PASS" starttime="20201030 18:27:11.076" endtime="20201030 18:27:11.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.065" endtime="20201030 18:27:11.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.093" endtime="20201030 18:27:11.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.087" endtime="20201030 18:27:11.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.084" endtime="20201030 18:27:11.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.563" endtime="20201030 18:27:11.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:10.562" endtime="20201030 18:27:11.117"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.138" endtime="20201030 18:27:11.152"></status>
</kw>
<msg timestamp="20201030 18:27:11.153" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.134" endtime="20201030 18:27:11.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.155" endtime="20201030 18:27:11.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.162" endtime="20201030 18:27:11.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.127" endtime="20201030 18:27:11.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.122" endtime="20201030 18:27:11.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.185" endtime="20201030 18:27:11.523"></status>
</kw>
<msg timestamp="20201030 18:27:11.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036839472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036840972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.181" endtime="20201030 18:27:11.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036839472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036840972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.532" endtime="20201030 18:27:11.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.551" endtime="20201030 18:27:11.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.174" endtime="20201030 18:27:11.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.170" endtime="20201030 18:27:11.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:11.568" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06...</msg>
<status status="PASS" starttime="20201030 18:27:11.560" endtime="20201030 18:27:11.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:11.583" level="INFO">${OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, ...</msg>
<status status="PASS" starttime="20201030 18:27:11.570" endtime="20201030 18:27:11.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.593" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:11.591" endtime="20201030 18:27:11.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.598" level="INFO">VALUE: [1.5000000000015001e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:11.595" endtime="20201030 18:27:11.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.584" endtime="20201030 18:27:11.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:11.611" endtime="20201030 18:27:11.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.606" endtime="20201030 18:27:11.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.604" endtime="20201030 18:27:11.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.119" endtime="20201030 18:27:11.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.118" endtime="20201030 18:27:11.635"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.656" endtime="20201030 18:27:11.670"></status>
</kw>
<msg timestamp="20201030 18:27:11.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.652" endtime="20201030 18:27:11.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:11.677" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:11.673" endtime="20201030 18:27:11.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.680" endtime="20201030 18:27:11.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.645" endtime="20201030 18:27:11.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.641" endtime="20201030 18:27:11.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:11.703" endtime="20201030 18:27:12.036"></status>
</kw>
<msg timestamp="20201030 18:27:12.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037092333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037093875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:11.700" endtime="20201030 18:27:12.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037092333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037093875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.046" endtime="20201030 18:27:12.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.064" endtime="20201030 18:27:12.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.692" endtime="20201030 18:27:12.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.688" endtime="20201030 18:27:12.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.082" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5969999999990159e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5969999999990159e-...</msg>
<status status="PASS" starttime="20201030 18:27:12.073" endtime="20201030 18:27:12.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:12.093" level="INFO">${OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5410000000007362e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:12.084" endtime="20201030 18:27:12.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.103" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:12.100" endtime="20201030 18:27:12.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.108" level="INFO">VALUE: [1.5420000000002099e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5560000000067187e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5410000000007362e-06, 1.5979999999984895e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.4720000000023603e-06]</msg>
<status status="PASS" starttime="20201030 18:27:12.105" endtime="20201030 18:27:12.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.094" endtime="20201030 18:27:12.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.121" endtime="20201030 18:27:12.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.116" endtime="20201030 18:27:12.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.114" endtime="20201030 18:27:12.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.637" endtime="20201030 18:27:12.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:11.636" endtime="20201030 18:27:12.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:01.280" endtime="20201030 18:27:12.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.155" endtime="20201030 18:27:12.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.151" endtime="20201030 18:27:12.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.148" endtime="20201030 18:27:12.180"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:01.152" endtime="20201030 18:27:12.180" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.198" endtime="20201030 18:27:12.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.194" endtime="20201030 18:27:12.221"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.256" endtime="20201030 18:27:12.274"></status>
</kw>
<msg timestamp="20201030 18:27:12.275" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.252" endtime="20201030 18:27:12.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.281" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.277" endtime="20201030 18:27:12.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.288" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:12.283" endtime="20201030 18:27:12.288"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:12.243" endtime="20201030 18:27:12.290"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:12.237" endtime="20201030 18:27:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.234" endtime="20201030 18:27:12.292"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:12.300" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:12.299" endtime="20201030 18:27:12.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.294" endtime="20201030 18:27:12.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.232" endtime="20201030 18:27:12.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.231" endtime="20201030 18:27:12.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.304" endtime="20201030 18:27:12.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.227" endtime="20201030 18:27:12.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.222" endtime="20201030 18:27:12.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.191" endtime="20201030 18:27:12.311"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.333" endtime="20201030 18:27:12.356"></status>
</kw>
<msg timestamp="20201030 18:27:12.358" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.330" endtime="20201030 18:27:12.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.364" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.360" endtime="20201030 18:27:12.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.367" endtime="20201030 18:27:12.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.322" endtime="20201030 18:27:12.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.317" endtime="20201030 18:27:12.373"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.378" endtime="20201030 18:27:12.383"></status>
</kw>
<msg timestamp="20201030 18:27:12.384" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:12.375" endtime="20201030 18:27:12.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.394" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:12.391" endtime="20201030 18:27:12.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.398" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:12.396" endtime="20201030 18:27:12.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.385" endtime="20201030 18:27:12.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.410" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:12.408" endtime="20201030 18:27:12.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.414" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:12.412" endtime="20201030 18:27:12.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.402" endtime="20201030 18:27:12.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.433" endtime="20201030 18:27:12.787"></status>
</kw>
<msg timestamp="20201030 18:27:12.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128603972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128608319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.430" endtime="20201030 18:27:12.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128603972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128608319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:12.800" endtime="20201030 18:27:12.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.825" endtime="20201030 18:27:12.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.423" endtime="20201030 18:27:12.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.418" endtime="20201030 18:27:12.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:12.844" level="INFO">${RESULT} = [{'diff': 4.346999999987888e-06}, {'diff': 4.52800000000364e-06}, {'diff': 4.527999999975885e-06}, {'diff': 4.526999999976411e-06}, {'diff': 4.570000000009289e-06}, {'diff': 4.527000000004167e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:12.834" endtime="20201030 18:27:12.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:12.853" level="INFO">${OVERHEAD} = {'diff': [4.346999999987888e-06, 4.52800000000364e-06, 4.527999999975885e-06, 4.526999999976411e-06, 4.570000000009289e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.5409999...</msg>
<status status="PASS" starttime="20201030 18:27:12.846" endtime="20201030 18:27:12.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.864" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:12.862" endtime="20201030 18:27:12.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:12.871" level="INFO">VALUE: [4.346999999987888e-06, 4.52800000000364e-06, 4.527999999975885e-06, 4.526999999976411e-06, 4.570000000009289e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.514000000011009e-06, 4.459000000012203e-06, 4.527999999975885e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.583000000002446e-06, 4.540999999996798e-06, 4.514000000011009e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.513999999983254e-06, 4.527000000004167e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.52800000000364e-06, 4.527000000004167e-06, 4.485999999997992e-06, 4.527000000004167e-06, 4.527000000004167e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.541999999996271e-06, 4.52800000000364e-06, 4.514000000011009e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.52800000000364e-06, 4.540999999996798e-06, 4.542000000024027e-06]</msg>
<status status="PASS" starttime="20201030 18:27:12.867" endtime="20201030 18:27:12.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.855" endtime="20201030 18:27:12.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.883" endtime="20201030 18:27:12.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.878" endtime="20201030 18:27:12.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.876" endtime="20201030 18:27:12.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.312" endtime="20201030 18:27:12.907"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:12.185" endtime="20201030 18:27:12.909" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:12.926" endtime="20201030 18:27:12.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.923" endtime="20201030 18:27:12.950"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:12.985" endtime="20201030 18:27:13.003"></status>
</kw>
<msg timestamp="20201030 18:27:13.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:12.981" endtime="20201030 18:27:13.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.006" endtime="20201030 18:27:13.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.017" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:13.013" endtime="20201030 18:27:13.018"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:12.974" endtime="20201030 18:27:13.020"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:12.968" endtime="20201030 18:27:13.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.965" endtime="20201030 18:27:13.022"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:13.030" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:13.028" endtime="20201030 18:27:13.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.024" endtime="20201030 18:27:13.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.963" endtime="20201030 18:27:13.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.961" endtime="20201030 18:27:13.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.033" endtime="20201030 18:27:13.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.956" endtime="20201030 18:27:13.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.951" endtime="20201030 18:27:13.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:12.920" endtime="20201030 18:27:13.040"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.064" endtime="20201030 18:27:13.148"></status>
</kw>
<msg timestamp="20201030 18:27:13.149" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.059" endtime="20201030 18:27:13.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.156" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.152" endtime="20201030 18:27:13.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.158" endtime="20201030 18:27:13.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.052" endtime="20201030 18:27:13.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.046" endtime="20201030 18:27:13.165"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.170" endtime="20201030 18:27:13.175"></status>
</kw>
<msg timestamp="20201030 18:27:13.176" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:13.167" endtime="20201030 18:27:13.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.186" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:13.183" endtime="20201030 18:27:13.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.191" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:13.188" endtime="20201030 18:27:13.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.177" endtime="20201030 18:27:13.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.205" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:13.202" endtime="20201030 18:27:13.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.209" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:13.207" endtime="20201030 18:27:13.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.194" endtime="20201030 18:27:13.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.229" endtime="20201030 18:27:13.594"></status>
</kw>
<msg timestamp="20201030 18:27:13.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.225" endtime="20201030 18:27:13.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135369139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:13.604" endtime="20201030 18:27:13.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.624" endtime="20201030 18:27:13.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.218" endtime="20201030 18:27:13.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.213" endtime="20201030 18:27:13.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:13.642" level="INFO">${RESULT} = [{'diff': 4.109699999998995e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.102799999999851e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.095900000000707e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:13.633" endtime="20201030 18:27:13.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:13.652" level="INFO">${OVERHEAD} = {'diff': [4.109699999998995e-05, 4.098599999999286e-05, 4.102799999999851e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.095900000000707e-05, 4.0972999999999704e-05, 4.098599999999286e-05, 4.098...</msg>
<status status="PASS" starttime="20201030 18:27:13.644" endtime="20201030 18:27:13.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.665" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:13.663" endtime="20201030 18:27:13.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.671" level="INFO">VALUE: [4.109699999998995e-05, 4.098599999999286e-05, 4.102799999999851e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.095900000000707e-05, 4.0972999999999704e-05, 4.098599999999286e-05, 4.098600000002062e-05, 4.099999999998549e-05, 4.098599999999286e-05, 4.0986999999992335e-05, 4.099999999998549e-05, 4.1026999999999036e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.097200000000023e-05, 4.095899999997932e-05, 4.0972999999999704e-05, 4.098600000002062e-05, 4.0972999999999704e-05, 4.102799999999851e-05, 4.10420000000189e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.098700000002009e-05, 4.098600000002062e-05, 4.098600000002062e-05, 4.094400000001497e-05, 4.100000000001325e-05, 4.100000000001325e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.100000000001325e-05, 4.098600000002062e-05, 4.098599999999286e-05, 4.098600000002062e-05, 4.098599999999286e-05, 4.1013999999978124e-05, 4.097200000000023e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.105600000001153e-05, 4.098599999999286e-05, 4.098599999999286e-05, 4.097200000000023e-05, 4.097200000000023e-05, 4.097200000000023e-05]</msg>
<status status="PASS" starttime="20201030 18:27:13.668" endtime="20201030 18:27:13.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.654" endtime="20201030 18:27:13.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.685" endtime="20201030 18:27:13.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.679" endtime="20201030 18:27:13.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.676" endtime="20201030 18:27:13.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.042" endtime="20201030 18:27:13.710"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:12.913" endtime="20201030 18:27:13.712" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:13.733" endtime="20201030 18:27:13.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.728" endtime="20201030 18:27:13.765"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.812" endtime="20201030 18:27:13.831"></status>
</kw>
<msg timestamp="20201030 18:27:13.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.809" endtime="20201030 18:27:13.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.839" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.834" endtime="20201030 18:27:13.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:13.846" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:13.841" endtime="20201030 18:27:13.846"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.800" endtime="20201030 18:27:13.848"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:13.790" endtime="20201030 18:27:13.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.784" endtime="20201030 18:27:13.851"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:13.859" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:13.858" endtime="20201030 18:27:13.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.853" endtime="20201030 18:27:13.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.782" endtime="20201030 18:27:13.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.780" endtime="20201030 18:27:13.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.863" endtime="20201030 18:27:13.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.774" endtime="20201030 18:27:13.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.767" endtime="20201030 18:27:13.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.724" endtime="20201030 18:27:13.871"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:13.896" endtime="20201030 18:27:14.136"></status>
</kw>
<msg timestamp="20201030 18:27:14.137" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:13.891" endtime="20201030 18:27:14.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.145" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.140" endtime="20201030 18:27:14.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.148" endtime="20201030 18:27:14.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.884" endtime="20201030 18:27:14.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.877" endtime="20201030 18:27:14.157"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.162" endtime="20201030 18:27:14.166"></status>
</kw>
<msg timestamp="20201030 18:27:14.167" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:14.159" endtime="20201030 18:27:14.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.177" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:14.175" endtime="20201030 18:27:14.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.182" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:14.180" endtime="20201030 18:27:14.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.169" endtime="20201030 18:27:14.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.194" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:14.191" endtime="20201030 18:27:14.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.198" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:14.196" endtime="20201030 18:27:14.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.186" endtime="20201030 18:27:14.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.217" endtime="20201030 18:27:14.634"></status>
</kw>
<msg timestamp="20201030 18:27:14.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.159468181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.159547472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.213" endtime="20201030 18:27:14.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.159468181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.159547472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:14.646" endtime="20201030 18:27:14.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.671" endtime="20201030 18:27:14.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.206" endtime="20201030 18:27:14.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.202" endtime="20201030 18:27:14.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:14.698" level="INFO">${RESULT} = [{'diff': 7.92910000000091e-05}, {'diff': 7.866700000000448e-05}, {'diff': 7.865200000001238e-05}, {'diff': 7.872200000000329e-05}, {'diff': 7.866700000000448e-05}, {'diff': 7.865200000001238e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:14.684" endtime="20201030 18:27:14.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:14.710" level="INFO">${OVERHEAD} = {'diff': [7.92910000000091e-05, 7.866700000000448e-05, 7.865200000001238e-05, 7.872200000000329e-05, 7.866700000000448e-05, 7.865200000001238e-05, 7.838899999998428e-05, 7.86110000000062e-05, 7.865299...</msg>
<status status="PASS" starttime="20201030 18:27:14.701" endtime="20201030 18:27:14.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.729" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:14.726" endtime="20201030 18:27:14.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.734" level="INFO">VALUE: [7.92910000000091e-05, 7.866700000000448e-05, 7.865200000001238e-05, 7.872200000000329e-05, 7.866700000000448e-05, 7.865200000001238e-05, 7.838899999998428e-05, 7.86110000000062e-05, 7.86529999999841e-05, 7.863899999999147e-05, 7.863899999999147e-05, 7.863900000001922e-05, 7.868099999999711e-05, 7.866700000000448e-05, 7.865300000001185e-05, 7.865300000001185e-05, 7.865200000001238e-05, 7.865300000001185e-05, 7.866700000000448e-05, 7.866700000000448e-05, 7.869499999998975e-05, 7.84169999999973e-05, 7.86529999999841e-05, 7.866699999997673e-05, 7.866700000003224e-05, 7.86529999999841e-05, 7.863899999999147e-05, 7.866699999997673e-05, 7.86529999999841e-05, 7.838900000001203e-05, 7.86529999999841e-05, 7.873600000002368e-05, 7.863799999996424e-05, 7.867999999999764e-05, 7.865300000003961e-05, 7.866699999997673e-05, 7.838899999995652e-05, 7.86529999999841e-05, 7.86110000000062e-05, 7.865300000003961e-05, 7.866700000003224e-05, 7.86529999999841e-05, 7.865300000003961e-05, 7.866700000003224e-05, 7.840300000000466e-05, 7.866600000000501e-05, 7.86529999999841e-05, 7.872300000000276e-05, 7.869499999996199e-05, 7.868100000002487e-05]</msg>
<status status="PASS" starttime="20201030 18:27:14.731" endtime="20201030 18:27:14.735"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.719" endtime="20201030 18:27:14.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.746" endtime="20201030 18:27:14.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.742" endtime="20201030 18:27:14.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.739" endtime="20201030 18:27:14.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:13.872" endtime="20201030 18:27:14.771"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:13.717" endtime="20201030 18:27:14.773" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:14.790" endtime="20201030 18:27:14.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.787" endtime="20201030 18:27:14.814"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.856" endtime="20201030 18:27:14.876"></status>
</kw>
<msg timestamp="20201030 18:27:14.878" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.845" endtime="20201030 18:27:14.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.885" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.880" endtime="20201030 18:27:14.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.894" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:14.888" endtime="20201030 18:27:14.895"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:14.837" endtime="20201030 18:27:14.897"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:14.830" endtime="20201030 18:27:14.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.828" endtime="20201030 18:27:14.900"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:14.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:14.907" endtime="20201030 18:27:14.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.902" endtime="20201030 18:27:14.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.826" endtime="20201030 18:27:14.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.824" endtime="20201030 18:27:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.912" endtime="20201030 18:27:14.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.820" endtime="20201030 18:27:14.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.816" endtime="20201030 18:27:14.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.784" endtime="20201030 18:27:14.920"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.945" endtime="20201030 18:27:14.969"></status>
</kw>
<msg timestamp="20201030 18:27:14.970" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.942" endtime="20201030 18:27:14.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:14.977" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:14.972" endtime="20201030 18:27:14.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.979" endtime="20201030 18:27:14.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.934" endtime="20201030 18:27:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.927" endtime="20201030 18:27:14.986"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:14.990" endtime="20201030 18:27:14.995"></status>
</kw>
<msg timestamp="20201030 18:27:14.996" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:14.987" endtime="20201030 18:27:14.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.006" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:15.004" endtime="20201030 18:27:15.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.010" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:15.008" endtime="20201030 18:27:15.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.998" endtime="20201030 18:27:15.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.022" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:15.020" endtime="20201030 18:27:15.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.027" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:15.024" endtime="20201030 18:27:15.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.014" endtime="20201030 18:27:15.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.046" endtime="20201030 18:27:15.392"></status>
</kw>
<msg timestamp="20201030 18:27:15.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148818431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148819833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.042" endtime="20201030 18:27:15.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148818431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148819833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.401" endtime="20201030 18:27:15.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.420" endtime="20201030 18:27:15.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.035" endtime="20201030 18:27:15.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.030" endtime="20201030 18:27:15.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:15.437" level="INFO">${RESULT} = [{'diff': 1.4020000000114496e-06}, {'diff': 1.2909999999866084e-06}, {'diff': 1.3330000000200126e-06}, {'diff': 1.318999999999626e-06}, {'diff': 1.3339999999917307e-06}, {'diff': 1.3479999999843617e-0...</msg>
<status status="PASS" starttime="20201030 18:27:15.429" endtime="20201030 18:27:15.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:15.449" level="INFO">${OVERHEAD} = {'diff': [1.4020000000114496e-06, 1.2909999999866084e-06, 1.3330000000200126e-06, 1.318999999999626e-06, 1.3339999999917307e-06, 1.3479999999843617e-06, 1.332999999992257e-06, 1.318999999999626e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:27:15.440" endtime="20201030 18:27:15.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.460" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:27:15.458" endtime="20201030 18:27:15.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.466" level="INFO">VALUE: [1.4020000000114496e-06, 1.2909999999866084e-06, 1.3330000000200126e-06, 1.318999999999626e-06, 1.3339999999917307e-06, 1.3479999999843617e-06, 1.332999999992257e-06, 1.318999999999626e-06, 1.3340000000194863e-06, 1.332999999992257e-06, 1.3060000000064687e-06, 1.332999999992257e-06, 1.3330000000200126e-06, 1.3330000000200126e-06, 1.318999999999626e-06, 1.346999999984888e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.332999999992257e-06, 1.3339999999917307e-06, 1.318999999999626e-06, 1.346999999984888e-06, 1.3330000000200126e-06, 1.332999999992257e-06, 1.318999999999626e-06, 1.3199999999990997e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.3339999999917307e-06, 1.3339999999917307e-06, 1.3060000000064687e-06, 1.346999999984888e-06, 1.3199999999990997e-06, 1.346999999984888e-06, 1.332999999992257e-06, 1.3339999999917307e-06, 1.3470000000126436e-06, 1.3470000000126436e-06, 1.3330000000200126e-06, 1.3339999999917307e-06, 1.3199999999990997e-06, 1.332999999992257e-06, 1.3199999999990997e-06, 1.3339999999917307e-06, 1.332999999992257e-06, 1.3470000000126436e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.3330000000200126e-06]</msg>
<status status="PASS" starttime="20201030 18:27:15.463" endtime="20201030 18:27:15.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.451" endtime="20201030 18:27:15.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.478" endtime="20201030 18:27:15.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.473" endtime="20201030 18:27:15.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.471" endtime="20201030 18:27:15.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:14.922" endtime="20201030 18:27:15.502"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:14.777" endtime="20201030 18:27:15.504" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:15.522" endtime="20201030 18:27:15.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.517" endtime="20201030 18:27:15.547"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.585" endtime="20201030 18:27:15.605"></status>
</kw>
<msg timestamp="20201030 18:27:15.606" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.582" endtime="20201030 18:27:15.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.613" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.609" endtime="20201030 18:27:15.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.619" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:15.615" endtime="20201030 18:27:15.620"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.575" endtime="20201030 18:27:15.622"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:15.567" endtime="20201030 18:27:15.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.563" endtime="20201030 18:27:15.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:15.632" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:15.631" endtime="20201030 18:27:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.626" endtime="20201030 18:27:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.561" endtime="20201030 18:27:15.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.559" endtime="20201030 18:27:15.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.636" endtime="20201030 18:27:15.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.554" endtime="20201030 18:27:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.548" endtime="20201030 18:27:15.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.514" endtime="20201030 18:27:15.643"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.665" endtime="20201030 18:27:15.748"></status>
</kw>
<msg timestamp="20201030 18:27:15.749" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.662" endtime="20201030 18:27:15.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.755" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:15.751" endtime="20201030 18:27:15.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.757" endtime="20201030 18:27:15.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.655" endtime="20201030 18:27:15.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.649" endtime="20201030 18:27:15.764"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.768" endtime="20201030 18:27:15.773"></status>
</kw>
<msg timestamp="20201030 18:27:15.774" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:15.766" endtime="20201030 18:27:15.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.784" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:15.782" endtime="20201030 18:27:15.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.789" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:15.787" endtime="20201030 18:27:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.776" endtime="20201030 18:27:15.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.801" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:15.798" endtime="20201030 18:27:15.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:15.805" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:15.803" endtime="20201030 18:27:15.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.792" endtime="20201030 18:27:15.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:15.824" endtime="20201030 18:27:16.176"></status>
</kw>
<msg timestamp="20201030 18:27:16.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137985528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137999806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:15.820" endtime="20201030 18:27:16.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137985528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137999806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.186" endtime="20201030 18:27:16.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.205" endtime="20201030 18:27:16.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.813" endtime="20201030 18:27:16.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.809" endtime="20201030 18:27:16.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:16.224" level="INFO">${RESULT} = [{'diff': 1.4278000000006452e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4277000000006979e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4264000000013821e-05}, {'diff': 1.4277999999978697e-...</msg>
<status status="PASS" starttime="20201030 18:27:16.213" endtime="20201030 18:27:16.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:16.235" level="INFO">${OVERHEAD} = {'diff': [1.4278000000006452e-05, 1.4278000000006452e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.4277999999978697e-05, 1.4221999999980417e-05, 1.4278000000006452e-05...</msg>
<status status="PASS" starttime="20201030 18:27:16.226" endtime="20201030 18:27:16.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.248" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:27:16.245" endtime="20201030 18:27:16.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.255" level="INFO">VALUE: [1.4278000000006452e-05, 1.4278000000006452e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.4277999999978697e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4249999999993435e-05, 1.4264000000013821e-05, 1.4334000000004732e-05, 1.4263999999986066e-05, 1.4208000000015542e-05, 1.4264000000013821e-05, 1.4263999999986066e-05, 1.430600000001947e-05, 1.4278000000006452e-05, 1.4276999999979223e-05, 1.4264000000013821e-05, 1.4264000000013821e-05, 1.4263999999986066e-05, 1.4235999999973048e-05, 1.4263000000014348e-05, 1.4278000000006452e-05, 1.4263999999986066e-05, 1.4264000000013821e-05, 1.4249999999993435e-05, 1.4263999999986066e-05, 1.4263999999986066e-05, 1.4264000000013821e-05, 1.4237000000000277e-05, 1.4249999999993435e-05, 1.4277000000006979e-05, 1.4263999999986066e-05, 1.4277999999978697e-05, 1.4264000000013821e-05, 1.4264000000013821e-05, 1.4194999999994629e-05, 1.4277999999978697e-05, 1.4276999999979223e-05, 1.4249999999993435e-05, 1.4278000000006452e-05, 1.4236000000000804e-05, 1.425000000002119e-05, 1.4277999999978697e-05, 1.4249999999993435e-05, 1.4278000000006452e-05, 1.4263999999986066e-05]</msg>
<status status="PASS" starttime="20201030 18:27:16.251" endtime="20201030 18:27:16.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.237" endtime="20201030 18:27:16.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.268" endtime="20201030 18:27:16.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.263" endtime="20201030 18:27:16.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.260" endtime="20201030 18:27:16.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:15.645" endtime="20201030 18:27:16.292"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:15.508" endtime="20201030 18:27:16.294" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:16.311" endtime="20201030 18:27:16.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.307" endtime="20201030 18:27:16.335"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.369" endtime="20201030 18:27:16.387"></status>
</kw>
<msg timestamp="20201030 18:27:16.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.366" endtime="20201030 18:27:16.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.395" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.391" endtime="20201030 18:27:16.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.401" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:16.397" endtime="20201030 18:27:16.402"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:16.359" endtime="20201030 18:27:16.404"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:16.352" endtime="20201030 18:27:16.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.348" endtime="20201030 18:27:16.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:16.414" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:16.412" endtime="20201030 18:27:16.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.408" endtime="20201030 18:27:16.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.346" endtime="20201030 18:27:16.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.344" endtime="20201030 18:27:16.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.418" endtime="20201030 18:27:16.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.340" endtime="20201030 18:27:16.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.336" endtime="20201030 18:27:16.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.305" endtime="20201030 18:27:16.425"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.447" endtime="20201030 18:27:16.688"></status>
</kw>
<msg timestamp="20201030 18:27:16.689" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.444" endtime="20201030 18:27:16.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.697" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:16.691" endtime="20201030 18:27:16.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.700" endtime="20201030 18:27:16.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.437" endtime="20201030 18:27:16.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.431" endtime="20201030 18:27:16.708"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.712" endtime="20201030 18:27:16.717"></status>
</kw>
<msg timestamp="20201030 18:27:16.718" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 18:27:16.709" endtime="20201030 18:27:16.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.728" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:27:16.726" endtime="20201030 18:27:16.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.733" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:27:16.730" endtime="20201030 18:27:16.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.720" endtime="20201030 18:27:16.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.745" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:27:16.742" endtime="20201030 18:27:16.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:16.749" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:27:16.747" endtime="20201030 18:27:16.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.736" endtime="20201030 18:27:16.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:16.770" endtime="20201030 18:27:17.117"></status>
</kw>
<msg timestamp="20201030 18:27:17.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133875458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:16.766" endtime="20201030 18:27:17.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133875458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133902917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:17.126" endtime="20201030 18:27:17.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.144" endtime="20201030 18:27:17.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.757" endtime="20201030 18:27:17.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.753" endtime="20201030 18:27:17.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:17.162" level="INFO">${RESULT} = [{'diff': 2.745900000000745e-05}, {'diff': 2.7458000000007976e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7486999999992712e-05}, {'diff': 2.7444000000015345e-05}, {'diff': 2.7472000000000607e-0...</msg>
<status status="PASS" starttime="20201030 18:27:17.153" endtime="20201030 18:27:17.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:17.171" level="INFO">${OVERHEAD} = {'diff': [2.745900000000745e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7486999999992712e-05, 2.7444000000015345e-05, 2.7472000000000607e-05, 2.745900000000745e-05, 2.7485999999993238e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:17.164" endtime="20201030 18:27:17.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.182" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:27:17.180" endtime="20201030 18:27:17.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.188" level="INFO">VALUE: [2.745900000000745e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7486999999992712e-05, 2.7444000000015345e-05, 2.7472000000000607e-05, 2.745900000000745e-05, 2.7485999999993238e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.745900000000745e-05, 2.7458000000007976e-05, 2.7486000000020994e-05, 2.745900000000745e-05, 2.7527999999998887e-05, 2.7374999999996152e-05, 2.7458999999979694e-05, 2.745799999998022e-05, 2.7444999999987063e-05, 2.7472000000000607e-05, 2.7458000000007976e-05, 2.7458999999979694e-05, 2.745900000000745e-05, 2.745900000000745e-05, 2.745900000000745e-05, 2.7444999999987063e-05, 2.7472000000000607e-05, 2.7472000000028363e-05, 2.7403000000036926e-05, 2.745900000000745e-05, 2.744500000001482e-05, 2.745900000000745e-05, 2.7472000000028363e-05, 2.744399999998759e-05, 2.745900000000745e-05, 2.745800000003573e-05, 2.745800000003573e-05, 2.745799999998022e-05, 2.7444999999959308e-05, 2.7472000000028363e-05, 2.74440000000431e-05, 2.747199999997285e-05, 2.747300000000008e-05, 2.745900000000745e-05, 2.7444999999959308e-05, 2.7472000000028363e-05, 2.747199999997285e-05, 2.745900000000745e-05, 2.744500000001482e-05, 2.744500000001482e-05]</msg>
<status status="PASS" starttime="20201030 18:27:17.185" endtime="20201030 18:27:17.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.173" endtime="20201030 18:27:17.190"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.199" endtime="20201030 18:27:17.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.195" endtime="20201030 18:27:17.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.193" endtime="20201030 18:27:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:16.426" endtime="20201030 18:27:17.225"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:16.298" endtime="20201030 18:27:17.227" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:17.248" endtime="20201030 18:27:17.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.244" endtime="20201030 18:27:17.273"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.310" endtime="20201030 18:27:17.330"></status>
</kw>
<msg timestamp="20201030 18:27:17.332" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.307" endtime="20201030 18:27:17.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:17.334" endtime="20201030 18:27:17.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.345" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:17.341" endtime="20201030 18:27:17.346"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:17.300" endtime="20201030 18:27:17.347"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:17.293" endtime="20201030 18:27:17.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.291" endtime="20201030 18:27:17.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:17.358" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:17.357" endtime="20201030 18:27:17.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.352" endtime="20201030 18:27:17.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.289" endtime="20201030 18:27:17.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.287" endtime="20201030 18:27:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:17.362" endtime="20201030 18:27:17.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.283" endtime="20201030 18:27:17.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.275" endtime="20201030 18:27:17.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.240" endtime="20201030 18:27:17.369"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:17.378" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:17.394" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:18.297" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:17.374" endtime="20201030 18:27:18.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.306" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:27:18.301" endtime="20201030 18:27:21.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:17.370" endtime="20201030 18:27:21.309"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.350" endtime="20201030 18:27:21.362"></status>
</kw>
<msg timestamp="20201030 18:27:21.363" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.337" endtime="20201030 18:27:21.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.370" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.366" endtime="20201030 18:27:21.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.372" endtime="20201030 18:27:21.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.326" endtime="20201030 18:27:21.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.320" endtime="20201030 18:27:21.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.400" endtime="20201030 18:27:21.832"></status>
</kw>
<msg timestamp="20201030 18:27:21.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.948460167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.023473681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.396" endtime="20201030 18:27:21.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.948460167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.023473681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:21.843" endtime="20201030 18:27:21.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.863" endtime="20201030 18:27:21.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.386" endtime="20201030 18:27:21.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.381" endtime="20201030 18:27:21.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:21.881" level="INFO">${PHILIP_RES} = [{'diff': 0.075013514}, {'diff': 4.485999999914725e-06}, {'diff': 4.45800000026253e-06}, {'diff': 4.500000000184912e-06}, {'diff': 4.4729999997272785e-06}, {'diff': 4.513000000372358e-06}, {'diff': 4....</msg>
<status status="PASS" starttime="20201030 18:27:21.872" endtime="20201030 18:27:21.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:21.891" level="INFO">${RESULT} = {'diff': [0.075013514, 4.485999999914725e-06, 4.45800000026253e-06, 4.500000000184912e-06, 4.4729999997272785e-06, 4.513000000372358e-06, 4.500000000184912e-06, 4.485999999914725e-06, 4.47200000053271...</msg>
<status status="PASS" starttime="20201030 18:27:21.883" endtime="20201030 18:27:21.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.903" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:21.901" endtime="20201030 18:27:21.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.909" level="INFO">VALUE: [0.075013514, 4.485999999914725e-06, 4.45800000026253e-06, 4.500000000184912e-06, 4.4729999997272785e-06, 4.513000000372358e-06, 4.500000000184912e-06, 4.485999999914725e-06, 4.4720000005327165e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.486999999997465e-06, 4.45900000034527e-06, 4.485999999914725e-06, 4.471999999644538e-06, 4.51399999956692e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.500000000184912e-06, 4.486999999997465e-06, 4.485999999914725e-06, 4.514000000455098e-06, 4.485999999914725e-06, 4.486000000802903e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.471999999644538e-06, 4.485999999914725e-06, 4.486999999997465e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.45800000026253e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.4720000005327165e-06, 4.486999999997465e-06, 4.485999999914725e-06, 4.486000000802903e-06, 4.4720000005327165e-06, 4.457999999374351e-06, 4.4720000005327165e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.485999999914725e-06, 4.45800000026253e-06]</msg>
<status status="PASS" starttime="20201030 18:27:21.906" endtime="20201030 18:27:21.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.894" endtime="20201030 18:27:21.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:21.921" endtime="20201030 18:27:21.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.917" endtime="20201030 18:27:21.945"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.914" endtime="20201030 18:27:21.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.314" endtime="20201030 18:27:21.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.312" endtime="20201030 18:27:21.947"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.972" endtime="20201030 18:27:21.983"></status>
</kw>
<msg timestamp="20201030 18:27:21.984" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.968" endtime="20201030 18:27:21.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:21.991" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:21.987" endtime="20201030 18:27:21.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:21.993" endtime="20201030 18:27:21.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.961" endtime="20201030 18:27:21.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.953" endtime="20201030 18:27:22.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.018" endtime="20201030 18:27:22.379"></status>
</kw>
<msg timestamp="20201030 18:27:22.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041028083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.015" endtime="20201030 18:27:22.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041028083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.389" endtime="20201030 18:27:22.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.407" endtime="20201030 18:27:22.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.007" endtime="20201030 18:27:22.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.002" endtime="20201030 18:27:22.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:22.424" level="INFO">${PHILIP_RES} = [{'diff': 8.846999999999328e-06}, {'diff': 8.832999999999758e-06}, {'diff': 8.874999999998467e-06}, {'diff': 8.778000000000952e-06}, {'diff': 8.833999999999231e-06}, {'diff': 8.819000000000188e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:22.416" endtime="20201030 18:27:22.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.434" level="INFO">${RESULT} = {'diff': [8.846999999999328e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.8340...</msg>
<status status="PASS" starttime="20201030 18:27:22.426" endtime="20201030 18:27:22.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.446" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:22.443" endtime="20201030 18:27:22.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.451" level="INFO">VALUE: [8.846999999999328e-06, 8.832999999999758e-06, 8.874999999998467e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.819000000000188e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.83400000000617e-06, 8.791000000001048e-06, 8.832999999999758e-06, 8.791000000001048e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.861000000005836e-06, 8.832999999999758e-06, 8.83400000000617e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.888999999998037e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.792000000000522e-06, 8.832999999999758e-06, 8.819999999999661e-06, 8.819000000000188e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.806000000000092e-06, 8.791000000001048e-06, 8.791999999993583e-06, 8.833999999999231e-06, 8.832999999999758e-06, 8.833999999999231e-06, 8.819000000000188e-06]</msg>
<status status="PASS" starttime="20201030 18:27:22.448" endtime="20201030 18:27:22.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.436" endtime="20201030 18:27:22.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.463" endtime="20201030 18:27:22.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.458" endtime="20201030 18:27:22.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.456" endtime="20201030 18:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.949" endtime="20201030 18:27:22.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.948" endtime="20201030 18:27:22.488"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.509" endtime="20201030 18:27:22.519"></status>
</kw>
<msg timestamp="20201030 18:27:22.520" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.506" endtime="20201030 18:27:22.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.527" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:22.523" endtime="20201030 18:27:22.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.529" endtime="20201030 18:27:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.499" endtime="20201030 18:27:22.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.493" endtime="20201030 18:27:22.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.552" endtime="20201030 18:27:22.895"></status>
</kw>
<msg timestamp="20201030 18:27:22.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036969597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036983542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.549" endtime="20201030 18:27:22.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036969597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036983542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:22.905" endtime="20201030 18:27:22.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:22.924" endtime="20201030 18:27:22.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.542" endtime="20201030 18:27:22.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.537" endtime="20201030 18:27:22.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:22.940" level="INFO">${PHILIP_RES} = [{'diff': 1.3945000000001317e-05}, {'diff': 1.3958000000001414e-05}, {'diff': 1.3930000000002274e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.3944000000001844e-05}, {'diff': 1.3944000000001844e-...</msg>
<status status="PASS" starttime="20201030 18:27:22.932" endtime="20201030 18:27:22.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:22.951" level="INFO">${RESULT} = {'diff': [1.3945000000001317e-05, 1.3958000000001414e-05, 1.3930000000002274e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3959000000000887e-05, 1.3959000000000887e-05...</msg>
<status status="PASS" starttime="20201030 18:27:22.942" endtime="20201030 18:27:22.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.962" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:22.959" endtime="20201030 18:27:22.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:22.967" level="INFO">VALUE: [1.3945000000001317e-05, 1.3958000000001414e-05, 1.3930000000002274e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3959000000000887e-05, 1.3959000000000887e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.3958000000001414e-05, 1.3958000000001414e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3987000000000027e-05, 1.3986000000000554e-05, 1.3945000000001317e-05, 1.3958000000001414e-05, 1.3943999999994905e-05, 1.3903000000002608e-05, 1.3972000000000984e-05, 1.3943999999994905e-05, 1.3944999999994379e-05, 1.3902999999995669e-05, 1.3930999999994809e-05, 1.3930999999994809e-05, 1.3986000000000554e-05, 1.3957999999994475e-05, 1.3916999999995239e-05, 1.3943999999994905e-05, 1.3944999999994379e-05, 1.4013999999999693e-05, 1.3944999999994379e-05, 1.3957999999994475e-05, 1.3943999999994905e-05, 1.3957999999994475e-05, 1.3957999999994475e-05, 1.3902999999995669e-05, 1.3945000000001317e-05, 1.3959000000000887e-05, 1.3931000000001748e-05, 1.3944000000001844e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3944000000001844e-05, 1.3958000000001414e-05, 1.3945000000001317e-05, 1.3888999999996099e-05, 1.3959000000000887e-05, 1.3986000000000554e-05]</msg>
<status status="PASS" starttime="20201030 18:27:22.964" endtime="20201030 18:27:22.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.953" endtime="20201030 18:27:22.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:22.979" endtime="20201030 18:27:23.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.974" endtime="20201030 18:27:23.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.972" endtime="20201030 18:27:23.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.490" endtime="20201030 18:27:23.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:22.488" endtime="20201030 18:27:23.004"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.025" endtime="20201030 18:27:23.036"></status>
</kw>
<msg timestamp="20201030 18:27:23.038" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.022" endtime="20201030 18:27:23.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.044" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.040" endtime="20201030 18:27:23.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.046" endtime="20201030 18:27:23.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.015" endtime="20201030 18:27:23.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.010" endtime="20201030 18:27:23.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.069" endtime="20201030 18:27:23.437"></status>
</kw>
<msg timestamp="20201030 18:27:23.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037048681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.066" endtime="20201030 18:27:23.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037028847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037048681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.447" endtime="20201030 18:27:23.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.467" endtime="20201030 18:27:23.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.059" endtime="20201030 18:27:23.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.054" endtime="20201030 18:27:23.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:23.485" level="INFO">${PHILIP_RES} = [{'diff': 1.9834000000003293e-05}, {'diff': 1.9819999999996785e-05}, {'diff': 1.9806000000004154e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 1.981899999999731e-05}, {'diff': 1.980500000000468e-05...</msg>
<status status="PASS" starttime="20201030 18:27:23.477" endtime="20201030 18:27:23.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:23.497" level="INFO">${RESULT} = {'diff': [1.9834000000003293e-05, 1.9819999999996785e-05, 1.9806000000004154e-05, 1.9763999999998505e-05, 1.981899999999731e-05, 1.980500000000468e-05, 1.983299999999688e-05, 1.981899999999731e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:27:23.487" endtime="20201030 18:27:23.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.508" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:23.506" endtime="20201030 18:27:23.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.514" level="INFO">VALUE: [1.9834000000003293e-05, 1.9819999999996785e-05, 1.9806000000004154e-05, 1.9763999999998505e-05, 1.981899999999731e-05, 1.980500000000468e-05, 1.983299999999688e-05, 1.981899999999731e-05, 1.980500000000468e-05, 1.981899999999731e-05, 1.9819999999996785e-05, 1.9820000000003724e-05, 1.980499999999774e-05, 1.9819999999996785e-05, 1.983300000000382e-05, 1.9887999999995687e-05, 1.983300000000382e-05, 1.981899999999731e-05, 1.9763999999998505e-05, 1.980500000000468e-05, 1.981899999999731e-05, 1.983299999999688e-05, 1.9820000000003724e-05, 1.9805999999997215e-05, 1.9834000000003293e-05, 1.9806000000004154e-05, 1.981899999999731e-05, 1.9791999999997645e-05, 1.983300000000382e-05, 1.983299999999688e-05, 1.983300000000382e-05, 1.980499999999774e-05, 1.9819999999996785e-05, 1.9806000000004154e-05, 1.9848000000002863e-05, 1.9777999999998075e-05, 1.9778000000005014e-05, 1.9805999999997215e-05, 1.9777999999998075e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.981899999999731e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.9834000000003293e-05, 1.9820000000003724e-05, 1.986099999999602e-05, 1.9806000000004154e-05, 1.981900000000425e-05, 1.9791999999997645e-05]</msg>
<status status="PASS" starttime="20201030 18:27:23.511" endtime="20201030 18:27:23.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.499" endtime="20201030 18:27:23.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:23.527" endtime="20201030 18:27:23.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.522" endtime="20201030 18:27:23.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.520" endtime="20201030 18:27:23.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.006" endtime="20201030 18:27:23.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.005" endtime="20201030 18:27:23.553"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.576" endtime="20201030 18:27:23.587"></status>
</kw>
<msg timestamp="20201030 18:27:23.589" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.572" endtime="20201030 18:27:23.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:23.595" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:23.591" endtime="20201030 18:27:23.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.598" endtime="20201030 18:27:23.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.564" endtime="20201030 18:27:23.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.559" endtime="20201030 18:27:23.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:23.622" endtime="20201030 18:27:23.984"></status>
</kw>
<msg timestamp="20201030 18:27:23.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039345514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.619" endtime="20201030 18:27:23.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039319056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039345514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:23.994" endtime="20201030 18:27:24.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.015" endtime="20201030 18:27:24.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.611" endtime="20201030 18:27:24.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.606" endtime="20201030 18:27:24.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:24.032" level="INFO">${PHILIP_RES} = [{'diff': 2.6458000000000037e-05}, {'diff': 2.6499999999998747e-05}, {'diff': 2.6444000000000467e-05}, {'diff': 2.645899999999951e-05}, {'diff': 2.644499999999994e-05}, {'diff': 2.640300000000123e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:24.024" endtime="20201030 18:27:24.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.042" level="INFO">${RESULT} = {'diff': [2.6458000000000037e-05, 2.6499999999998747e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.644499999999994e-05, 2.640300000000123e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:27:24.035" endtime="20201030 18:27:24.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.054" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:24.051" endtime="20201030 18:27:24.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.060" level="INFO">VALUE: [2.6458000000000037e-05, 2.6499999999998747e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.644499999999994e-05, 2.640300000000123e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.6485999999999177e-05, 2.643100000000037e-05, 2.6458000000000037e-05, 2.6513999999998317e-05, 2.6499999999998747e-05, 2.6458000000000037e-05, 2.644499999999994e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.6444000000000467e-05, 2.6471999999999607e-05, 2.648699999999865e-05, 2.643100000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6485999999999177e-05, 2.6416000000001327e-05, 2.644499999999994e-05, 2.648699999999865e-05, 2.6458000000000037e-05, 2.6444000000000467e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.6471999999999607e-05, 2.645899999999951e-05, 2.644499999999994e-05, 2.6471999999999607e-05, 2.64170000000008e-05, 2.6485999999999177e-05]</msg>
<status status="PASS" starttime="20201030 18:27:24.056" endtime="20201030 18:27:24.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.044" endtime="20201030 18:27:24.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.072" endtime="20201030 18:27:24.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.067" endtime="20201030 18:27:24.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.065" endtime="20201030 18:27:24.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.555" endtime="20201030 18:27:24.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:23.553" endtime="20201030 18:27:24.098"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.121" endtime="20201030 18:27:24.135"></status>
</kw>
<msg timestamp="20201030 18:27:24.136" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.117" endtime="20201030 18:27:24.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.143" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.138" endtime="20201030 18:27:24.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.145" endtime="20201030 18:27:24.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.110" endtime="20201030 18:27:24.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.104" endtime="20201030 18:27:24.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.170" endtime="20201030 18:27:24.524"></status>
</kw>
<msg timestamp="20201030 18:27:24.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041133319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.166" endtime="20201030 18:27:24.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041099458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041133319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.533" endtime="20201030 18:27:24.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.553" endtime="20201030 18:27:24.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.159" endtime="20201030 18:27:24.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.154" endtime="20201030 18:27:24.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:24.570" level="INFO">${PHILIP_RES} = [{'diff': 3.386100000000308e-05}, {'diff': 3.387500000000265e-05}, {'diff': 3.386100000000308e-05}, {'diff': 3.387500000000265e-05}, {'diff': 3.388900000000222e-05}, {'diff': 3.3846999999996574e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:27:24.561" endtime="20201030 18:27:24.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:24.580" level="INFO">${RESULT} = {'diff': [3.386100000000308e-05, 3.387500000000265e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.388900000000222e-05, 3.3846999999996574e-05, 3.3874999999995714e-05, 3.3874999999995714e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 18:27:24.572" endtime="20201030 18:27:24.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.591" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:24.588" endtime="20201030 18:27:24.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.596" level="INFO">VALUE: [3.386100000000308e-05, 3.387500000000265e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.388900000000222e-05, 3.3846999999996574e-05, 3.3874999999995714e-05, 3.3874999999995714e-05, 3.3832999999997004e-05, 3.37779999999982e-05, 3.391700000000136e-05, 3.3832999999997004e-05, 3.384700000000351e-05, 3.387500000000265e-05, 3.386100000000308e-05, 3.384700000000351e-05, 3.384800000000299e-05, 3.386100000000308e-05, 3.3860999999996144e-05, 3.3846999999996574e-05, 3.3874999999995714e-05, 3.3860999999996144e-05, 3.384799999999605e-05, 3.391599999999495e-05, 3.3846999999996574e-05, 3.3832999999997004e-05, 3.388900000000222e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.388900000000222e-05, 3.3874999999995714e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.3874999999995714e-05, 3.386100000000308e-05, 3.387500000000265e-05, 3.390300000000179e-05, 3.387500000000265e-05, 3.387500000000265e-05, 3.391600000000189e-05, 3.384700000000351e-05, 3.387500000000265e-05, 3.3860999999996144e-05, 3.3860999999996144e-05, 3.390199999999538e-05]</msg>
<status status="PASS" starttime="20201030 18:27:24.593" endtime="20201030 18:27:24.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.582" endtime="20201030 18:27:24.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:24.610" endtime="20201030 18:27:24.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.604" endtime="20201030 18:27:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.601" endtime="20201030 18:27:24.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.100" endtime="20201030 18:27:24.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.099" endtime="20201030 18:27:24.635"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.657" endtime="20201030 18:27:24.670"></status>
</kw>
<msg timestamp="20201030 18:27:24.672" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.654" endtime="20201030 18:27:24.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:24.678" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:24.674" endtime="20201030 18:27:24.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.680" endtime="20201030 18:27:24.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.647" endtime="20201030 18:27:24.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.641" endtime="20201030 18:27:24.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:24.705" endtime="20201030 18:27:25.077"></status>
</kw>
<msg timestamp="20201030 18:27:25.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037878167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037920236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:24.701" endtime="20201030 18:27:25.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037878167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037920236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.087" endtime="20201030 18:27:25.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.107" endtime="20201030 18:27:25.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.693" endtime="20201030 18:27:25.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.688" endtime="20201030 18:27:25.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:25.124" level="INFO">${PHILIP_RES} = [{'diff': 4.2069000000005685e-05}, {'diff': 4.2027000000000037e-05}, {'diff': 4.2054999999999176e-05}, {'diff': 4.2027000000000037e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.202799999999951e-05...</msg>
<status status="PASS" starttime="20201030 18:27:25.116" endtime="20201030 18:27:25.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.140" level="INFO">${RESULT} = {'diff': [4.2069000000005685e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.2027000000000037e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204200000000602e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:27:25.127" endtime="20201030 18:27:25.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.151" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:25.149" endtime="20201030 18:27:25.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.157" level="INFO">VALUE: [4.2069000000005685e-05, 4.2027000000000037e-05, 4.2054999999999176e-05, 4.2027000000000037e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.204200000000602e-05, 4.202800000000645e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.19860000000008e-05, 4.211199999999693e-05, 4.204199999999908e-05, 4.2083000000005255e-05, 4.2040999999999606e-05, 4.201300000000047e-05, 4.2054999999999176e-05, 4.201399999999994e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.2097000000004825e-05, 4.202799999999951e-05, 4.201399999999994e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.206999999999822e-05, 4.201399999999994e-05, 4.201399999999994e-05, 4.2027000000000037e-05, 4.2041000000006545e-05, 4.201300000000047e-05, 4.201399999999994e-05, 4.201399999999994e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.201399999999994e-05, 4.204200000000602e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.204199999999908e-05, 4.204199999999908e-05, 4.202799999999951e-05, 4.2027000000000037e-05, 4.2069000000005685e-05, 4.2027000000000037e-05, 4.2082999999998316e-05, 4.202799999999951e-05, 4.202799999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:27:25.154" endtime="20201030 18:27:25.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.142" endtime="20201030 18:27:25.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.170" endtime="20201030 18:27:25.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.165" endtime="20201030 18:27:25.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.162" endtime="20201030 18:27:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.637" endtime="20201030 18:27:25.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:24.636" endtime="20201030 18:27:25.195"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.218" endtime="20201030 18:27:25.232"></status>
</kw>
<msg timestamp="20201030 18:27:25.233" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.215" endtime="20201030 18:27:25.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.240" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.236" endtime="20201030 18:27:25.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.242" endtime="20201030 18:27:25.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.207" endtime="20201030 18:27:25.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.201" endtime="20201030 18:27:25.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.277" endtime="20201030 18:27:25.608"></status>
</kw>
<msg timestamp="20201030 18:27:25.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039258667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.274" endtime="20201030 18:27:25.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039258667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039309625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.617" endtime="20201030 18:27:25.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.637" endtime="20201030 18:27:25.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.266" endtime="20201030 18:27:25.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.252" endtime="20201030 18:27:25.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:25.653" level="INFO">${PHILIP_RES} = [{'diff': 5.095800000000372e-05}, {'diff': 5.0971999999996354e-05}, {'diff': 5.098600000000286e-05}, {'diff': 5.095800000000372e-05}, {'diff': 5.0957999999996784e-05}, {'diff': 5.0971999999996354e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:25.645" endtime="20201030 18:27:25.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:25.664" level="INFO">${RESULT} = {'diff': [5.095800000000372e-05, 5.0971999999996354e-05, 5.098600000000286e-05, 5.095800000000372e-05, 5.0957999999996784e-05, 5.0971999999996354e-05, 5.088900000000535e-05, 5.091699999999755e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 18:27:25.655" endtime="20201030 18:27:25.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.675" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:25.673" endtime="20201030 18:27:25.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.680" level="INFO">VALUE: [5.095800000000372e-05, 5.0971999999996354e-05, 5.098600000000286e-05, 5.095800000000372e-05, 5.0957999999996784e-05, 5.0971999999996354e-05, 5.088900000000535e-05, 5.091699999999755e-05, 5.095899999999626e-05, 5.0971999999996354e-05, 5.095800000000372e-05, 5.0971999999996354e-05, 5.0957999999996784e-05, 5.098600000000286e-05, 5.0959000000003196e-05, 5.099999999999549e-05, 5.0957999999996784e-05, 5.095800000000372e-05, 5.0943999999997214e-05, 5.094499999999669e-05, 5.0917000000004486e-05, 5.0945000000003626e-05, 5.0957999999996784e-05, 5.0957999999996784e-05, 5.095800000000372e-05, 5.097299999999583e-05, 5.097299999999583e-05, 5.0959000000003196e-05, 5.097200000000329e-05, 5.0971999999996354e-05, 5.097200000000329e-05, 5.100000000000243e-05, 5.097299999999583e-05, 5.094499999999669e-05, 5.1014000000002e-05, 5.0957999999996784e-05, 5.0971999999996354e-05, 5.095800000000372e-05, 5.0959000000003196e-05, 5.095899999999626e-05, 5.0971999999996354e-05, 5.093000000000458e-05, 5.097200000000329e-05, 5.0985999999995923e-05, 5.0973000000002766e-05, 5.098600000000286e-05, 5.0971999999996354e-05, 5.0971999999996354e-05, 5.100000000000243e-05, 5.097200000000329e-05]</msg>
<status status="PASS" starttime="20201030 18:27:25.677" endtime="20201030 18:27:25.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.666" endtime="20201030 18:27:25.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:25.692" endtime="20201030 18:27:25.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.688" endtime="20201030 18:27:25.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.685" endtime="20201030 18:27:25.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.197" endtime="20201030 18:27:25.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.196" endtime="20201030 18:27:25.717"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.738" endtime="20201030 18:27:25.752"></status>
</kw>
<msg timestamp="20201030 18:27:25.753" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.735" endtime="20201030 18:27:25.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:25.762" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:25.756" endtime="20201030 18:27:25.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.767" endtime="20201030 18:27:25.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.728" endtime="20201030 18:27:25.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.723" endtime="20201030 18:27:25.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:25.792" endtime="20201030 18:27:26.149"></status>
</kw>
<msg timestamp="20201030 18:27:26.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037112472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037173153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:25.788" endtime="20201030 18:27:26.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037112472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037173153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.159" endtime="20201030 18:27:26.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.179" endtime="20201030 18:27:26.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.781" endtime="20201030 18:27:26.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.776" endtime="20201030 18:27:26.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:26.196" level="INFO">${PHILIP_RES} = [{'diff': 6.068099999999993e-05}, {'diff': 6.063900000000122e-05}, {'diff': 6.066700000000036e-05}, {'diff': 6.0694000000000026e-05}, {'diff': 6.0736000000005674e-05}, {'diff': 6.0652000000001316e-05}...</msg>
<status status="PASS" starttime="20201030 18:27:26.188" endtime="20201030 18:27:26.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.205" level="INFO">${RESULT} = {'diff': [6.068099999999993e-05, 6.063900000000122e-05, 6.066700000000036e-05, 6.0694000000000026e-05, 6.0736000000005674e-05, 6.0652000000001316e-05, 6.062500000000165e-05, 6.0666000000000886e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:27:26.198" endtime="20201030 18:27:26.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.216" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:26.214" endtime="20201030 18:27:26.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.221" level="INFO">VALUE: [6.068099999999993e-05, 6.063900000000122e-05, 6.066700000000036e-05, 6.0694000000000026e-05, 6.0736000000005674e-05, 6.0652000000001316e-05, 6.062500000000165e-05, 6.0666000000000886e-05, 6.063900000000122e-05, 6.065300000000079e-05, 6.065300000000079e-05, 6.0680000000000456e-05, 6.065299999999385e-05, 6.0666000000000886e-05, 6.063900000000122e-05, 6.0666000000000886e-05, 6.066700000000036e-05, 6.063899999999428e-05, 6.0721999999999166e-05, 6.0652000000001316e-05, 6.066700000000036e-05, 6.063900000000122e-05, 6.065300000000079e-05, 6.0680000000000456e-05, 6.063900000000122e-05, 6.066599999999395e-05, 6.068099999999993e-05, 6.065300000000079e-05, 6.065300000000079e-05, 6.065300000000079e-05, 6.065299999999385e-05, 6.065300000000079e-05, 6.066700000000036e-05, 6.065300000000079e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.06949999999995e-05, 6.065300000000079e-05, 6.066700000000036e-05, 6.065300000000079e-05, 6.070899999999907e-05, 6.0680000000000456e-05, 6.066700000000036e-05, 6.061100000000208e-05, 6.065300000000079e-05, 6.0721999999999166e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.063900000000122e-05]</msg>
<status status="PASS" starttime="20201030 18:27:26.218" endtime="20201030 18:27:26.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.207" endtime="20201030 18:27:26.224"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.233" endtime="20201030 18:27:26.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.229" endtime="20201030 18:27:26.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.227" endtime="20201030 18:27:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.719" endtime="20201030 18:27:26.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:25.718" endtime="20201030 18:27:26.259"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.281" endtime="20201030 18:27:26.305"></status>
</kw>
<msg timestamp="20201030 18:27:26.307" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.278" endtime="20201030 18:27:26.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.315" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.310" endtime="20201030 18:27:26.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.319" endtime="20201030 18:27:26.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.270" endtime="20201030 18:27:26.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.265" endtime="20201030 18:27:26.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.352" endtime="20201030 18:27:26.720"></status>
</kw>
<msg timestamp="20201030 18:27:26.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046784861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.347" endtime="20201030 18:27:26.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046784861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046855958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:26.729" endtime="20201030 18:27:26.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.748" endtime="20201030 18:27:26.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.337" endtime="20201030 18:27:26.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.331" endtime="20201030 18:27:26.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:26.765" level="INFO">${PHILIP_RES} = [{'diff': 7.109700000000607e-05}, {'diff': 7.11109999999987e-05}, {'diff': 7.1069e-05}, {'diff': 7.113899999999784e-05}, {'diff': 7.111199999999818e-05}, {'diff': 7.111200000000512e-05}, {'diff': 7.11...</msg>
<status status="PASS" starttime="20201030 18:27:26.757" endtime="20201030 18:27:26.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:26.776" level="INFO">${RESULT} = {'diff': [7.109700000000607e-05, 7.11109999999987e-05, 7.1069e-05, 7.113899999999784e-05, 7.111199999999818e-05, 7.111200000000512e-05, 7.113799999999837e-05, 7.112500000000521e-05, 7.113899999999784e...</msg>
<status status="PASS" starttime="20201030 18:27:26.767" endtime="20201030 18:27:26.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.786" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:26.784" endtime="20201030 18:27:26.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.792" level="INFO">VALUE: [7.109700000000607e-05, 7.11109999999987e-05, 7.1069e-05, 7.113899999999784e-05, 7.111199999999818e-05, 7.111200000000512e-05, 7.113799999999837e-05, 7.112500000000521e-05, 7.113899999999784e-05, 7.115200000000488e-05, 7.11109999999987e-05, 7.11109999999987e-05, 7.112500000000521e-05, 7.109699999999913e-05, 7.112500000000521e-05, 7.116699999999698e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.115299999999741e-05, 7.113899999999784e-05, 7.112499999999827e-05, 7.111100000000564e-05, 7.112499999999827e-05, 7.112499999999827e-05, 7.112499999999827e-05, 7.112499999999827e-05, 7.11109999999987e-05, 7.109699999999913e-05, 7.111100000000564e-05, 7.113899999999784e-05, 7.10979999999986e-05, 7.112499999999827e-05, 7.113799999999837e-05, 7.10979999999986e-05, 7.11109999999987e-05, 7.118000000000402e-05, 7.109699999999913e-05, 7.118000000000402e-05, 7.11109999999987e-05, 7.11109999999987e-05, 7.112500000000521e-05, 7.108299999999956e-05, 7.118000000000402e-05, 7.11109999999987e-05, 7.11109999999987e-05, 7.11109999999987e-05, 7.113899999999784e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.115300000000435e-05]</msg>
<status status="PASS" starttime="20201030 18:27:26.789" endtime="20201030 18:27:26.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.777" endtime="20201030 18:27:26.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:26.805" endtime="20201030 18:27:26.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.799" endtime="20201030 18:27:26.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.797" endtime="20201030 18:27:26.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.261" endtime="20201030 18:27:26.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.260" endtime="20201030 18:27:26.830"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.853" endtime="20201030 18:27:26.867"></status>
</kw>
<msg timestamp="20201030 18:27:26.869" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.850" endtime="20201030 18:27:26.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.875" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:26.871" endtime="20201030 18:27:26.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.877" endtime="20201030 18:27:26.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.842" endtime="20201030 18:27:26.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.836" endtime="20201030 18:27:26.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:26.901" endtime="20201030 18:27:27.253"></status>
</kw>
<msg timestamp="20201030 18:27:27.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038719, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:26.897" endtime="20201030 18:27:27.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038636667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038719, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:27.263" endtime="20201030 18:27:27.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.282" endtime="20201030 18:27:27.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.890" endtime="20201030 18:27:27.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.885" endtime="20201030 18:27:27.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:27.299" level="INFO">${PHILIP_RES} = [{'diff': 8.233300000000388e-05}, {'diff': 8.240300000000172e-05}, {'diff': 8.236099999999608e-05}, {'diff': 8.233300000000388e-05}, {'diff': 8.231999999999684e-05}, {'diff': 8.236100000000302e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:27:27.291" endtime="20201030 18:27:27.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.310" level="INFO">${RESULT} = {'diff': [8.233300000000388e-05, 8.240300000000172e-05, 8.236099999999608e-05, 8.233300000000388e-05, 8.231999999999684e-05, 8.236100000000302e-05, 8.236099999999608e-05, 8.231899999999737e-05, 8.2348...</msg>
<status status="PASS" starttime="20201030 18:27:27.301" endtime="20201030 18:27:27.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.321" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:27.319" endtime="20201030 18:27:27.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.327" level="INFO">VALUE: [8.233300000000388e-05, 8.240300000000172e-05, 8.236099999999608e-05, 8.233300000000388e-05, 8.231999999999684e-05, 8.236100000000302e-05, 8.236099999999608e-05, 8.231899999999737e-05, 8.234800000000292e-05, 8.23469999999965e-05, 8.236200000000249e-05, 8.23049999999978e-05, 8.233400000000335e-05, 8.236099999999608e-05, 8.234799999999598e-05, 8.233300000000388e-05, 8.233399999999641e-05, 8.234700000000345e-05, 8.236099999999608e-05, 8.233300000000388e-05, 8.227699999999866e-05, 8.231999999999684e-05, 8.233300000000388e-05, 8.233299999999694e-05, 8.23190000000043e-05, 8.231999999999684e-05, 8.23469999999965e-05, 8.233400000000335e-05, 8.231899999999737e-05, 8.233400000000335e-05, 8.23469999999965e-05, 8.234700000000345e-05, 8.233300000000388e-05, 8.233399999999641e-05, 8.236100000000302e-05, 8.231999999999684e-05, 8.230600000000421e-05, 8.236100000000302e-05, 8.241600000000182e-05, 8.234700000000345e-05, 8.231999999999684e-05, 8.23190000000043e-05, 8.23469999999965e-05, 8.233300000000388e-05, 8.233400000000335e-05, 8.236099999999608e-05, 8.234800000000292e-05, 8.236099999999608e-05, 8.238900000000215e-05, 8.234700000000345e-05]</msg>
<status status="PASS" starttime="20201030 18:27:27.323" endtime="20201030 18:27:27.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.312" endtime="20201030 18:27:27.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.339" endtime="20201030 18:27:27.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.334" endtime="20201030 18:27:27.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.332" endtime="20201030 18:27:27.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.832" endtime="20201030 18:27:27.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.831" endtime="20201030 18:27:27.365"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.390" endtime="20201030 18:27:27.406"></status>
</kw>
<msg timestamp="20201030 18:27:27.407" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.386" endtime="20201030 18:27:27.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.413" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.409" endtime="20201030 18:27:27.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.416" endtime="20201030 18:27:27.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.379" endtime="20201030 18:27:27.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.373" endtime="20201030 18:27:27.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.440" endtime="20201030 18:27:27.792"></status>
</kw>
<msg timestamp="20201030 18:27:27.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.436" endtime="20201030 18:27:27.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041642333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.802" endtime="20201030 18:27:27.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.821" endtime="20201030 18:27:27.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.429" endtime="20201030 18:27:27.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.424" endtime="20201030 18:27:27.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:27.838" level="INFO">${PHILIP_RES} = [{'diff': 9.431899999999549e-05}, {'diff': 9.4333000000002e-05}, {'diff': 9.433299999999506e-05}, {'diff': 9.433400000000147e-05}, {'diff': 9.429200000000276e-05}, {'diff': 9.434699999999463e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:27.830" endtime="20201030 18:27:27.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:27.849" level="INFO">${RESULT} = {'diff': [9.431899999999549e-05, 9.4333000000002e-05, 9.433299999999506e-05, 9.433400000000147e-05, 9.429200000000276e-05, 9.434699999999463e-05, 9.4333000000002e-05, 9.4333000000002e-05, 9.4389000000...</msg>
<status status="PASS" starttime="20201030 18:27:27.840" endtime="20201030 18:27:27.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.860" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:27.858" endtime="20201030 18:27:27.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.866" level="INFO">VALUE: [9.431899999999549e-05, 9.4333000000002e-05, 9.433299999999506e-05, 9.433400000000147e-05, 9.429200000000276e-05, 9.434699999999463e-05, 9.4333000000002e-05, 9.4333000000002e-05, 9.438900000000028e-05, 9.4333000000002e-05, 9.441699999999942e-05, 9.431899999999549e-05, 9.437500000000071e-05, 9.433400000000147e-05, 9.433299999999506e-05, 9.431900000000243e-05, 9.434700000000157e-05, 9.433400000000147e-05, 9.43200000000019e-05, 9.430499999999592e-05, 9.427800000000319e-05, 9.4333000000002e-05, 9.429199999999582e-05, 9.427700000000372e-05, 9.431900000000243e-05, 9.433299999999506e-05, 9.4333000000002e-05, 9.43200000000019e-05, 9.431999999999496e-05, 9.4333000000002e-05, 9.441599999999994e-05, 9.43059999999954e-05, 9.43200000000019e-05, 9.433400000000147e-05, 9.434700000000157e-05, 9.4333000000002e-05, 9.431999999999496e-05, 9.43200000000019e-05, 9.4333000000002e-05, 9.431899999999549e-05, 9.4333000000002e-05, 9.4333000000002e-05, 9.43609999999942e-05, 9.4333000000002e-05, 9.431900000000243e-05, 9.429199999999582e-05, 9.43200000000019e-05, 9.436100000000114e-05, 9.426299999999721e-05, 9.431900000000243e-05]</msg>
<status status="PASS" starttime="20201030 18:27:27.862" endtime="20201030 18:27:27.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.851" endtime="20201030 18:27:27.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:27.877" endtime="20201030 18:27:27.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.873" endtime="20201030 18:27:27.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.871" endtime="20201030 18:27:27.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.368" endtime="20201030 18:27:27.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.366" endtime="20201030 18:27:27.903"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.926" endtime="20201030 18:27:27.942"></status>
</kw>
<msg timestamp="20201030 18:27:27.944" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.922" endtime="20201030 18:27:27.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:27.950" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:27.946" endtime="20201030 18:27:27.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.952" endtime="20201030 18:27:27.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.915" endtime="20201030 18:27:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.910" endtime="20201030 18:27:27.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:27.977" endtime="20201030 18:27:28.340"></status>
</kw>
<msg timestamp="20201030 18:27:28.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038240778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038347889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:27.974" endtime="20201030 18:27:28.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038240778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038347889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.350" endtime="20201030 18:27:28.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.369" endtime="20201030 18:27:28.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.966" endtime="20201030 18:27:28.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.961" endtime="20201030 18:27:28.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:28.386" level="INFO">${PHILIP_RES} = [{'diff': 0.00010711100000000001}, {'diff': 0.00010704100000000216}, {'diff': 0.00010711100000000001}, {'diff': 0.0001070690000000013}, {'diff': 0.0001070969999999935}, {'diff': 0.00010708300000000087...</msg>
<status status="PASS" starttime="20201030 18:27:28.378" endtime="20201030 18:27:28.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.396" level="INFO">${RESULT} = {'diff': [0.00010711100000000001, 0.00010704100000000216, 0.00010711100000000001, 0.0001070690000000013, 0.0001070969999999935, 0.00010708300000000087, 0.0001070690000000013, 0.00010708300000000087, 0...</msg>
<status status="PASS" starttime="20201030 18:27:28.388" endtime="20201030 18:27:28.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.407" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:28.404" endtime="20201030 18:27:28.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.413" level="INFO">VALUE: [0.00010711100000000001, 0.00010704100000000216, 0.00010711100000000001, 0.0001070690000000013, 0.0001070969999999935, 0.00010708300000000087, 0.0001070690000000013, 0.00010708300000000087, 0.00010709700000000044, 0.00010706899999999436, 0.0001070690000000013, 0.00010705500000000173, 0.0001070690000000013, 0.00010708299999999393, 0.0001070690000000013, 0.00010708300000000087, 0.0001070690000000013, 0.00010709700000000044, 0.00010713899999999915, 0.00010709700000000044, 0.00010708300000000087, 0.00010706899999999436, 0.00010708300000000087, 0.0001070690000000013, 0.00010708300000000087, 0.0001070690000000013, 0.00010709700000000044, 0.00010708300000000087, 0.00010712499999999958, 0.0001070690000000013, 0.00010708299999999393, 0.00010709700000000044, 0.00010705500000000173, 0.00010708300000000087, 0.00010709700000000044, 0.0001070140000000025, 0.00010708300000000087, 0.00010711100000000001, 0.00010705499999999479, 0.00010705499999999479, 0.0001070690000000013, 0.00010709700000000044, 0.0001070690000000013, 0.00010705499999999479, 0.0001070690000000013, 0.00010708300000000087, 0.00010708300000000087, 0.00010708299999999393, 0.0001070690000000013, 0.00010704100000000216]</msg>
<status status="PASS" starttime="20201030 18:27:28.409" endtime="20201030 18:27:28.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.398" endtime="20201030 18:27:28.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.426" endtime="20201030 18:27:28.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.421" endtime="20201030 18:27:28.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.419" endtime="20201030 18:27:28.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.906" endtime="20201030 18:27:28.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:27.904" endtime="20201030 18:27:28.451"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.474" endtime="20201030 18:27:28.491"></status>
</kw>
<msg timestamp="20201030 18:27:28.492" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.470" endtime="20201030 18:27:28.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.498" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:28.494" endtime="20201030 18:27:28.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.501" endtime="20201030 18:27:28.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.463" endtime="20201030 18:27:28.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.457" endtime="20201030 18:27:28.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.526" endtime="20201030 18:27:28.878"></status>
</kw>
<msg timestamp="20201030 18:27:28.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038300875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.523" endtime="20201030 18:27:28.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038180264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038300875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:28.888" endtime="20201030 18:27:28.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:28.906" endtime="20201030 18:27:28.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.516" endtime="20201030 18:27:28.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.511" endtime="20201030 18:27:28.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:28.923" level="INFO">${PHILIP_RES} = [{'diff': 0.00012061099999999964}, {'diff': 0.00012059700000000007}, {'diff': 0.0001205830000000005}, {'diff': 0.0001205830000000005}, {'diff': 0.00012061099999999964}, {'diff': 0.00012059800000000648...</msg>
<status status="PASS" starttime="20201030 18:27:28.915" endtime="20201030 18:27:28.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:28.932" level="INFO">${RESULT} = {'diff': [0.00012061099999999964, 0.00012059700000000007, 0.0001205830000000005, 0.0001205830000000005, 0.00012061099999999964, 0.00012059800000000648, 0.00012059799999999954, 0.00012059700000000007, ...</msg>
<status status="PASS" starttime="20201030 18:27:28.925" endtime="20201030 18:27:28.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.943" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:28.940" endtime="20201030 18:27:28.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:28.948" level="INFO">VALUE: [0.00012061099999999964, 0.00012059700000000007, 0.0001205830000000005, 0.0001205830000000005, 0.00012061099999999964, 0.00012059800000000648, 0.00012059799999999954, 0.00012059700000000007, 0.00012054200000000126, 0.0001205830000000005, 0.00012067999999999801, 0.00012061099999999964, 0.00012059700000000007, 0.00012061099999999964, 0.00012059799999999954, 0.00012059799999999954, 0.00012059700000000007, 0.00012054200000000126, 0.00012061099999999964, 0.00012051399999999518, 0.00012059700000000007, 0.00012059700000000007, 0.00012059700000000007, 0.00012063899999999877, 0.00012059799999999954, 0.00012061199999999911, 0.00012061099999999964, 0.0001206249999999992, 0.00012065299999999834, 0.00012061099999999964, 0.00012061099999999964, 0.00012059700000000007, 0.00012059700000000007, 0.00012063899999999877, 0.00012059700000000007, 0.00012058399999999997, 0.00012058399999999997, 0.00012058299999999356, 0.0001205830000000005, 0.0001205830000000005, 0.00012056900000000093, 0.0001205830000000005, 0.00012061099999999964, 0.00012059799999999954, 0.00012055600000000083, 0.00012059799999999954, 0.00012061199999999911, 0.00012065199999999887, 0.00012061099999999964, 0.00012061099999999964]</msg>
<status status="PASS" starttime="20201030 18:27:28.945" endtime="20201030 18:27:28.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.934" endtime="20201030 18:27:28.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:28.962" endtime="20201030 18:27:28.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.956" endtime="20201030 18:27:28.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.954" endtime="20201030 18:27:28.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.453" endtime="20201030 18:27:28.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.452" endtime="20201030 18:27:28.987"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.010" endtime="20201030 18:27:29.028"></status>
</kw>
<msg timestamp="20201030 18:27:29.029" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.006" endtime="20201030 18:27:29.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.035" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.031" endtime="20201030 18:27:29.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.037" endtime="20201030 18:27:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.999" endtime="20201030 18:27:29.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.993" endtime="20201030 18:27:29.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.061" endtime="20201030 18:27:29.414"></status>
</kw>
<msg timestamp="20201030 18:27:29.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037985972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038120847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.058" endtime="20201030 18:27:29.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037985972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038120847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.424" endtime="20201030 18:27:29.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.442" endtime="20201030 18:27:29.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.050" endtime="20201030 18:27:29.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.046" endtime="20201030 18:27:29.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:29.459" level="INFO">${PHILIP_RES} = [{'diff': 0.00013487499999999958}, {'diff': 0.00013488899999999915}, {'diff': 0.000134861}, {'diff': 0.00013488899999999915}, {'diff': 0.00013484700000000044}, {'diff': 0.000134861}, {'diff': 0.000134...</msg>
<status status="PASS" starttime="20201030 18:27:29.451" endtime="20201030 18:27:29.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:29.470" level="INFO">${RESULT} = {'diff': [0.00013487499999999958, 0.00013488899999999915, 0.000134861, 0.00013488899999999915, 0.00013484700000000044, 0.000134861, 0.00013491599999999881, 0.000134861, 0.000134861, 0.000134861, 0.000...</msg>
<status status="PASS" starttime="20201030 18:27:29.461" endtime="20201030 18:27:29.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.481" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:29.478" endtime="20201030 18:27:29.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.486" level="INFO">VALUE: [0.00013487499999999958, 0.00013488899999999915, 0.000134861, 0.00013488899999999915, 0.00013484700000000044, 0.000134861, 0.00013491599999999881, 0.000134861, 0.000134861, 0.000134861, 0.00013494500000000437, 0.00013487499999999958, 0.00013484700000000044, 0.00013487499999999958, 0.00013493099999999786, 0.00013487499999999958, 0.0001348479999999999, 0.00013484700000000044, 0.00013484700000000044, 0.00013487499999999958, 0.00013488899999999915, 0.00013483300000000087, 0.00013487500000000652, 0.00013487499999999958, 0.00013487499999999958, 0.00013487499999999958, 0.00013487499999999958, 0.00013487499999999958, 0.000134861, 0.00013488899999999915, 0.000134861, 0.00013490299999999872, 0.00013487499999999958, 0.00013487499999999958, 0.000134861, 0.00013487499999999958, 0.00013487499999999958, 0.00013488799999999967, 0.00013494399999999795, 0.00013487499999999958, 0.000134861, 0.000134861, 0.00013487499999999958, 0.000134861, 0.00013487499999999958, 0.0001349169999999983, 0.000134861, 0.00013490299999999872, 0.000134861, 0.00013486199999999948]</msg>
<status status="PASS" starttime="20201030 18:27:29.483" endtime="20201030 18:27:29.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.472" endtime="20201030 18:27:29.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:29.499" endtime="20201030 18:27:29.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.494" endtime="20201030 18:27:29.522"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.492" endtime="20201030 18:27:29.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.989" endtime="20201030 18:27:29.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:28.988" endtime="20201030 18:27:29.524"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.545" endtime="20201030 18:27:29.564"></status>
</kw>
<msg timestamp="20201030 18:27:29.565" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.542" endtime="20201030 18:27:29.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.571" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:29.567" endtime="20201030 18:27:29.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.573" endtime="20201030 18:27:29.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.535" endtime="20201030 18:27:29.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.529" endtime="20201030 18:27:29.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.597" endtime="20201030 18:27:29.948"></status>
</kw>
<msg timestamp="20201030 18:27:29.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036931417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037081319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.593" endtime="20201030 18:27:29.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:29.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036931417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037081319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:29.957" endtime="20201030 18:27:29.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:29.977" endtime="20201030 18:27:29.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.586" endtime="20201030 18:27:29.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.581" endtime="20201030 18:27:29.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:29.994" level="INFO">${PHILIP_RES} = [{'diff': 0.00014990200000000037}, {'diff': 0.0001499299999999995}, {'diff': 0.0001499299999999995}, {'diff': 0.00014993000000000645}, {'diff': 0.00014991599999999994}, {'diff': 0.00014994399999999908...</msg>
<status status="PASS" starttime="20201030 18:27:29.986" endtime="20201030 18:27:29.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.006" level="INFO">${RESULT} = {'diff': [0.00014990200000000037, 0.0001499299999999995, 0.0001499299999999995, 0.00014993000000000645, 0.00014991599999999994, 0.00014994399999999908, 0.0001499299999999995, 0.0001499859999999978, 0....</msg>
<status status="PASS" starttime="20201030 18:27:29.996" endtime="20201030 18:27:30.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.017" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:30.014" endtime="20201030 18:27:30.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.022" level="INFO">VALUE: [0.00014990200000000037, 0.0001499299999999995, 0.0001499299999999995, 0.00014993000000000645, 0.00014991599999999994, 0.00014994399999999908, 0.0001499299999999995, 0.0001499859999999978, 0.0001500000000000043, 0.00014990299999999984, 0.00014993099999999898, 0.0001499169999999994, 0.0001499169999999994, 0.00014984700000000156, 0.00014986100000000113, 0.00014990299999999984, 0.0001499169999999994, 0.00014994499999999855, 0.0001499169999999994, 0.00014993099999999898, 0.00014988900000000027, 0.00014993100000000592, 0.00014993099999999898, 0.00014991700000000635, 0.0001499169999999994, 0.00014990299999999984, 0.0001499169999999994, 0.00015827699999999834, 0.00014991700000000635, 0.0001499169999999994, 0.0001499299999999995, 0.00014991599999999994, 0.00014990200000000037, 0.00014990200000000037, 0.00014997199999999822, 0.0001499299999999995, 0.00014990299999999984, 0.00014991599999999994, 0.00014991599999999994, 0.00014994499999999855, 0.0001499169999999994, 0.0001499169999999994, 0.0001499169999999994, 0.00014990299999999984, 0.0001499169999999994, 0.00014990299999999984, 0.00014995900000000506, 0.00014995899999999812, 0.00014984700000000156, 0.00014984700000000156]</msg>
<status status="PASS" starttime="20201030 18:27:30.019" endtime="20201030 18:27:30.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.007" endtime="20201030 18:27:30.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.036" endtime="20201030 18:27:30.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.031" endtime="20201030 18:27:30.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.029" endtime="20201030 18:27:30.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.526" endtime="20201030 18:27:30.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:29.524" endtime="20201030 18:27:30.061"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.085" endtime="20201030 18:27:30.104"></status>
</kw>
<msg timestamp="20201030 18:27:30.105" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.081" endtime="20201030 18:27:30.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.112" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.108" endtime="20201030 18:27:30.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.114" endtime="20201030 18:27:30.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.074" endtime="20201030 18:27:30.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.068" endtime="20201030 18:27:30.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.139" endtime="20201030 18:27:30.521"></status>
</kw>
<msg timestamp="20201030 18:27:30.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039400097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.136" endtime="20201030 18:27:30.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039400097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039565819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.545" endtime="20201030 18:27:30.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.565" endtime="20201030 18:27:30.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.128" endtime="20201030 18:27:30.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.123" endtime="20201030 18:27:30.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:30.584" level="INFO">${PHILIP_RES} = [{'diff': 0.0001657220000000001}, {'diff': 0.00016573599999999966}, {'diff': 0.0001657220000000001}, {'diff': 0.0001657769999999989}, {'diff': 0.0001657220000000001}, {'diff': 0.00016574999999999923},...</msg>
<status status="PASS" starttime="20201030 18:27:30.576" endtime="20201030 18:27:30.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:30.593" level="INFO">${RESULT} = {'diff': [0.0001657220000000001, 0.00016573599999999966, 0.0001657220000000001, 0.0001657769999999989, 0.0001657220000000001, 0.00016574999999999923, 0.0001657220000000001, 0.000165709, 0.000165722000...</msg>
<status status="PASS" starttime="20201030 18:27:30.586" endtime="20201030 18:27:30.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.603" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:30.601" endtime="20201030 18:27:30.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.609" level="INFO">VALUE: [0.0001657220000000001, 0.00016573599999999966, 0.0001657220000000001, 0.0001657769999999989, 0.0001657220000000001, 0.00016574999999999923, 0.0001657220000000001, 0.000165709, 0.0001657220000000001, 0.00016563900000000215, 0.000165709, 0.00016572299999999957, 0.0001657220000000001, 0.0001657220000000001, 0.00016573699999999914, 0.00016573599999999966, 0.00016574999999999923, 0.00016573599999999966, 0.00016566700000000129, 0.0001657220000000001, 0.0001657220000000001, 0.00016573599999999966, 0.00016572299999999957, 0.00016573599999999966, 0.0001657220000000001, 0.00016573599999999966, 0.0001657220000000001, 0.00016566700000000129, 0.0001657220000000001, 0.00016573599999999966, 0.0001657220000000001, 0.0001657780000000053, 0.00016573599999999966, 0.000165709, 0.0001657220000000001, 0.0001657220000000001, 0.0001657230000000065, 0.00016570800000000052, 0.0001657639999999988, 0.00016570800000000052, 0.00016573699999999914, 0.00016570800000000052, 0.0001657220000000001, 0.00016565300000000172, 0.00016572299999999957, 0.00016570800000000052, 0.0001657220000000001, 0.00016573699999999914, 0.00016570800000000052, 0.00016570800000000052]</msg>
<status status="PASS" starttime="20201030 18:27:30.606" endtime="20201030 18:27:30.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.595" endtime="20201030 18:27:30.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.622" endtime="20201030 18:27:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.617" endtime="20201030 18:27:30.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.615" endtime="20201030 18:27:30.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.064" endtime="20201030 18:27:30.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.062" endtime="20201030 18:27:30.647"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.670" endtime="20201030 18:27:30.690"></status>
</kw>
<msg timestamp="20201030 18:27:30.691" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.666" endtime="20201030 18:27:30.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.697" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:30.693" endtime="20201030 18:27:30.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.699" endtime="20201030 18:27:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.658" endtime="20201030 18:27:30.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.653" endtime="20201030 18:27:30.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:30.723" endtime="20201030 18:27:31.090"></status>
</kw>
<msg timestamp="20201030 18:27:31.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038717097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:30.720" endtime="20201030 18:27:31.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038534819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038717097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.100" endtime="20201030 18:27:31.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.119" endtime="20201030 18:27:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.712" endtime="20201030 18:27:31.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.708" endtime="20201030 18:27:31.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:31.136" level="INFO">${PHILIP_RES} = [{'diff': 0.000182278000000001}, {'diff': 0.00018229200000000056}, {'diff': 0.00018229200000000056}, {'diff': 0.00018231900000000023}, {'diff': 0.00018229200000000056}, {'diff': 0.00018226399999999449...</msg>
<status status="PASS" starttime="20201030 18:27:31.128" endtime="20201030 18:27:31.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.145" level="INFO">${RESULT} = {'diff': [0.000182278000000001, 0.00018229200000000056, 0.00018229200000000056, 0.00018231900000000023, 0.00018229200000000056, 0.00018226399999999449, 0.0001823329999999998, 0.00018230600000000013, 0...</msg>
<status status="PASS" starttime="20201030 18:27:31.138" endtime="20201030 18:27:31.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.156" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:31.154" endtime="20201030 18:27:31.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.162" level="INFO">VALUE: [0.000182278000000001, 0.00018229200000000056, 0.00018229200000000056, 0.00018231900000000023, 0.00018229200000000056, 0.00018226399999999449, 0.0001823329999999998, 0.00018230600000000013, 0.00018230500000000066, 0.00018231900000000023, 0.00018229199999999363, 0.0001822910000000011, 0.00018230600000000013, 0.00018230600000000013, 0.0001822910000000011, 0.00018229200000000056, 0.00018231900000000023, 0.00018230500000000066, 0.00018230600000000013, 0.00018231900000000023, 0.00018229200000000056, 0.00018230600000000013, 0.000182262999999995, 0.00018229200000000056, 0.00018230500000000066, 0.00018223600000000229, 0.000182278000000001, 0.00018227699999999458, 0.00018229200000000056, 0.00018229200000000056, 0.0001822910000000011, 0.00018229200000000056, 0.00018229200000000056, 0.00018229200000000056, 0.00018229200000000056, 0.00018227700000000152, 0.000182278000000001, 0.0001823329999999998, 0.00018229200000000056, 0.00018236100000000588, 0.0001822910000000011, 0.00018230600000000013, 0.00018230600000000013, 0.00018226300000000195, 0.00018229200000000056, 0.0001822910000000011, 0.000182278000000001, 0.0001823199999999997, 0.0001822910000000011, 0.00018230600000000013]</msg>
<status status="PASS" starttime="20201030 18:27:31.159" endtime="20201030 18:27:31.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.147" endtime="20201030 18:27:31.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.177" endtime="20201030 18:27:31.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.171" endtime="20201030 18:27:31.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.168" endtime="20201030 18:27:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.649" endtime="20201030 18:27:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.648" endtime="20201030 18:27:31.203"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.227" endtime="20201030 18:27:31.248"></status>
</kw>
<msg timestamp="20201030 18:27:31.249" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.222" endtime="20201030 18:27:31.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.256" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.252" endtime="20201030 18:27:31.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.258" endtime="20201030 18:27:31.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.215" endtime="20201030 18:27:31.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.209" endtime="20201030 18:27:31.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.283" endtime="20201030 18:27:31.648"></status>
</kw>
<msg timestamp="20201030 18:27:31.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.280" endtime="20201030 18:27:31.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040518472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.658" endtime="20201030 18:27:31.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.677" endtime="20201030 18:27:31.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.272" endtime="20201030 18:27:31.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.267" endtime="20201030 18:27:31.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:31.694" level="INFO">${PHILIP_RES} = [{'diff': 0.00019965300000000102}, {'diff': 0.00019963900000000145}, {'diff': 0.00019963900000000145}, {'diff': 0.00019963900000000145}, {'diff': 0.00019962499999999495}, {'diff': 0.000199639000000001...</msg>
<status status="PASS" starttime="20201030 18:27:31.686" endtime="20201030 18:27:31.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:31.705" level="INFO">${RESULT} = {'diff': [0.00019965300000000102, 0.00019963900000000145, 0.00019963900000000145, 0.00019963900000000145, 0.00019962499999999495, 0.00019963900000000145, 0.00019965300000000102, 0.00019963900000000145...</msg>
<status status="PASS" starttime="20201030 18:27:31.696" endtime="20201030 18:27:31.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.716" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:31.714" endtime="20201030 18:27:31.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.722" level="INFO">VALUE: [0.00019965300000000102, 0.00019963900000000145, 0.00019963900000000145, 0.00019963900000000145, 0.00019962499999999495, 0.00019963900000000145, 0.00019965300000000102, 0.00019963900000000145, 0.0001996120000000018, 0.00019961099999999538, 0.00019962500000000188, 0.00019965300000000102, 0.00019958299999999624, 0.00019968100000000016, 0.00019962500000000188, 0.00019965300000000102, 0.00019963900000000145, 0.00019961099999999538, 0.00019966600000000112, 0.00019963900000000145, 0.00019962499999999495, 0.00019961100000000231, 0.00019963900000000145, 0.00019962500000000188, 0.00019962500000000188, 0.00019962499999999495, 0.00019965300000000102, 0.00019963900000000145, 0.00019962499999999495, 0.00019961100000000231, 0.00019963899999999452, 0.00019961100000000231, 0.00019962500000000188, 0.0001995969999999958, 0.00019959700000000274, 0.00019961100000000231, 0.00019961099999999538, 0.0001997089999999993, 0.00019965299999999409, 0.00019961100000000231, 0.00019961100000000231, 0.00019963900000000145, 0.00019963900000000145, 0.00019961099999999538, 0.0001996670000000006, 0.00019963900000000145, 0.00019969499999999973, 0.00019962500000000188, 0.00019963900000000145, 0.00019963899999999452]</msg>
<status status="PASS" starttime="20201030 18:27:31.719" endtime="20201030 18:27:31.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.707" endtime="20201030 18:27:31.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:31.742" endtime="20201030 18:27:31.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.737" endtime="20201030 18:27:31.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.734" endtime="20201030 18:27:31.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.205" endtime="20201030 18:27:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.204" endtime="20201030 18:27:31.767"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.791" endtime="20201030 18:27:31.813"></status>
</kw>
<msg timestamp="20201030 18:27:31.815" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.787" endtime="20201030 18:27:31.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:31.821" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.817" endtime="20201030 18:27:31.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.824" endtime="20201030 18:27:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.780" endtime="20201030 18:27:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.774" endtime="20201030 18:27:31.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.849" endtime="20201030 18:27:32.184"></status>
</kw>
<msg timestamp="20201030 18:27:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039737694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:31.845" endtime="20201030 18:27:32.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039519931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039737694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.193" endtime="20201030 18:27:32.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.212" endtime="20201030 18:27:32.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.837" endtime="20201030 18:27:32.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.832" endtime="20201030 18:27:32.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:32.228" level="INFO">${PHILIP_RES} = [{'diff': 0.00021776299999999582}, {'diff': 0.00021777799999999486}, {'diff': 0.00021767999999999788}, {'diff': 0.00021772200000000352}, {'diff': 0.0002177360000000031}, {'diff': 0.0002177360000000031...</msg>
<status status="PASS" starttime="20201030 18:27:32.220" endtime="20201030 18:27:32.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.238" level="INFO">${RESULT} = {'diff': [0.00021776299999999582, 0.00021777799999999486, 0.00021767999999999788, 0.00021772200000000352, 0.0002177360000000031, 0.0002177360000000031, 0.00021772200000000352, 0.00021775000000000266, ...</msg>
<status status="PASS" starttime="20201030 18:27:32.230" endtime="20201030 18:27:32.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.249" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:32.247" endtime="20201030 18:27:32.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.254" level="INFO">VALUE: [0.00021776299999999582, 0.00021777799999999486, 0.00021767999999999788, 0.00021772200000000352, 0.0002177360000000031, 0.0002177360000000031, 0.00021772200000000352, 0.00021775000000000266, 0.0002176659999999983, 0.00021773599999999615, 0.00021773599999999615, 0.0002177360000000031, 0.0002177360000000031, 0.00021770800000000395, 0.00021775000000000266, 0.00021775000000000266, 0.00021773599999999615, 0.00021768099999999735, 0.00021772199999999658, 0.00021773599999999615, 0.00021766699999999778, 0.00021775000000000266, 0.0002177360000000031, 0.00021773700000000257, 0.00021770800000000395, 0.00021773599999999615, 0.00021773599999999615, 0.00021766699999999778, 0.00021775000000000266, 0.00021770900000000343, 0.0002177910000000019, 0.00021772200000000352, 0.000217723000000003, 0.0002177360000000031, 0.00021774999999999572, 0.00021773599999999615, 0.00021773599999999615, 0.00021770799999999702, 0.0002177360000000031, 0.0002177360000000031, 0.00021770900000000343, 0.00021772200000000352, 0.00021770799999999702, 0.00021774999999999572, 0.00021773599999999615, 0.0002177360000000031, 0.0002177360000000031, 0.0002177780000000018, 0.0002177360000000031, 0.00021770800000000395]</msg>
<status status="PASS" starttime="20201030 18:27:32.251" endtime="20201030 18:27:32.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.240" endtime="20201030 18:27:32.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.267" endtime="20201030 18:27:32.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.262" endtime="20201030 18:27:32.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.260" endtime="20201030 18:27:32.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.770" endtime="20201030 18:27:32.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.768" endtime="20201030 18:27:32.292"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.313" endtime="20201030 18:27:32.336"></status>
</kw>
<msg timestamp="20201030 18:27:32.337" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.310" endtime="20201030 18:27:32.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.343" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.339" endtime="20201030 18:27:32.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.345" endtime="20201030 18:27:32.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.303" endtime="20201030 18:27:32.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.298" endtime="20201030 18:27:32.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.368" endtime="20201030 18:27:32.710"></status>
</kw>
<msg timestamp="20201030 18:27:32.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036961847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037198444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.365" endtime="20201030 18:27:32.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036961847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037198444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.719" endtime="20201030 18:27:32.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.738" endtime="20201030 18:27:32.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.358" endtime="20201030 18:27:32.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.353" endtime="20201030 18:27:32.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:32.754" level="INFO">${PHILIP_RES} = [{'diff': 0.00023659699999999811}, {'diff': 0.00023663900000000376}, {'diff': 0.00023658399999999802}, {'diff': 0.00023659699999999811}, {'diff': 0.00023659700000000505}, {'diff': 0.000236596999999998...</msg>
<status status="PASS" starttime="20201030 18:27:32.746" endtime="20201030 18:27:32.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:32.763" level="INFO">${RESULT} = {'diff': [0.00023659699999999811, 0.00023663900000000376, 0.00023658399999999802, 0.00023659699999999811, 0.00023659700000000505, 0.00023659699999999811, 0.00023661099999999768, 0.00023659700000000505...</msg>
<status status="PASS" starttime="20201030 18:27:32.756" endtime="20201030 18:27:32.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.773" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:32.771" endtime="20201030 18:27:32.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.779" level="INFO">VALUE: [0.00023659699999999811, 0.00023663900000000376, 0.00023658399999999802, 0.00023659699999999811, 0.00023659700000000505, 0.00023659699999999811, 0.00023661099999999768, 0.00023659700000000505, 0.0002365419999999993, 0.00023668100000000247, 0.00023658300000000548, 0.00023659699999999811, 0.00023659699999999811, 0.00023658300000000548, 0.00023652799999999974, 0.00023661099999999768, 0.0002365549999999994, 0.0002365979999999976, 0.00023659699999999811, 0.00023666600000000343, 0.0002365979999999976, 0.00023659699999999811, 0.0002366250000000042, 0.00023658399999999802, 0.00023659699999999811, 0.00023663900000000376, 0.0002365979999999976, 0.00023659699999999811, 0.00023661100000000462, 0.00023661199999999716, 0.00023658299999999854, 0.00023659700000000505, 0.0002365979999999976, 0.00023658299999999854, 0.00023659700000000505, 0.00023658399999999802, 0.00023665300000000333, 0.00023659700000000505, 0.0002365979999999976, 0.00023652799999999974, 0.00023658300000000548, 0.0002365979999999976, 0.00023659699999999811, 0.00023659700000000505, 0.0002365979999999976, 0.00023658299999999854, 0.00023658300000000548, 0.0002365979999999976, 0.00023659699999999811, 0.00023658300000000548]</msg>
<status status="PASS" starttime="20201030 18:27:32.776" endtime="20201030 18:27:32.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.764" endtime="20201030 18:27:32.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:32.791" endtime="20201030 18:27:32.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.787" endtime="20201030 18:27:32.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.784" endtime="20201030 18:27:32.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.294" endtime="20201030 18:27:32.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.292" endtime="20201030 18:27:32.816"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.838" endtime="20201030 18:27:32.863"></status>
</kw>
<msg timestamp="20201030 18:27:32.864" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.834" endtime="20201030 18:27:32.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:32.870" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:32.866" endtime="20201030 18:27:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.872" endtime="20201030 18:27:32.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.827" endtime="20201030 18:27:32.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.822" endtime="20201030 18:27:32.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:32.895" endtime="20201030 18:27:33.240"></status>
</kw>
<msg timestamp="20201030 18:27:33.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038615389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038871611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:32.892" endtime="20201030 18:27:33.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038615389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038871611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.249" endtime="20201030 18:27:33.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.280" endtime="20201030 18:27:33.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.885" endtime="20201030 18:27:33.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.880" endtime="20201030 18:27:33.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:33.312" level="INFO">${PHILIP_RES} = [{'diff': 0.0002562220000000004}, {'diff': 0.0002562080000000008}, {'diff': 0.00025623599999999996}, {'diff': 0.00025622299999999987}, {'diff': 0.00025622299999999987}, {'diff': 0.00025623599999999996...</msg>
<status status="PASS" starttime="20201030 18:27:33.301" endtime="20201030 18:27:33.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.323" level="INFO">${RESULT} = {'diff': [0.0002562220000000004, 0.0002562080000000008, 0.00025623599999999996, 0.00025622299999999987, 0.00025622299999999987, 0.00025623599999999996, 0.0002562220000000004, 0.0002562220000000004, 0....</msg>
<status status="PASS" starttime="20201030 18:27:33.315" endtime="20201030 18:27:33.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.334" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:33.331" endtime="20201030 18:27:33.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.339" level="INFO">VALUE: [0.0002562220000000004, 0.0002562080000000008, 0.00025623599999999996, 0.00025622299999999987, 0.00025622299999999987, 0.00025623599999999996, 0.0002562220000000004, 0.0002562220000000004, 0.00025618100000000116, 0.00025622199999999345, 0.00025623599999999996, 0.00025622299999999987, 0.00025619500000000073, 0.0002562220000000004, 0.00025619400000000125, 0.00025623599999999996, 0.00025616699999999465, 0.00025623599999999996, 0.0002562090000000003, 0.0002562639999999991, 0.0002562220000000004, 0.0002562220000000004, 0.0002562220000000004, 0.0002562080000000008, 0.00025623599999999996, 0.0002562080000000008, 0.00025622299999999987, 0.00025623599999999996, 0.00025623599999999996, 0.00025623599999999996, 0.0002562080000000008, 0.0002561939999999943, 0.0002562090000000003, 0.00025619500000000073, 0.0002562220000000004, 0.00025623599999999996, 0.0002562779999999987, 0.0002562080000000008, 0.0002561389999999955, 0.0002562080000000008, 0.00025624999999999953, 0.000256153000000002, 0.0002562220000000004, 0.0002562080000000008, 0.0002562080000000008, 0.00025616699999999465, 0.0002562220000000004, 0.0002562090000000003, 0.00025619500000000073, 0.00025622299999999987]</msg>
<status status="PASS" starttime="20201030 18:27:33.336" endtime="20201030 18:27:33.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.325" endtime="20201030 18:27:33.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.353" endtime="20201030 18:27:33.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.347" endtime="20201030 18:27:33.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.345" endtime="20201030 18:27:33.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.818" endtime="20201030 18:27:33.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:32.817" endtime="20201030 18:27:33.384"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.426" endtime="20201030 18:27:33.454"></status>
</kw>
<msg timestamp="20201030 18:27:33.456" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.420" endtime="20201030 18:27:33.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.464" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.459" endtime="20201030 18:27:33.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.467" endtime="20201030 18:27:33.472"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.407" endtime="20201030 18:27:33.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.398" endtime="20201030 18:27:33.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.495" endtime="20201030 18:27:33.834"></status>
</kw>
<msg timestamp="20201030 18:27:33.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065842694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066119292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.491" endtime="20201030 18:27:33.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065842694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066119292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:33.843" endtime="20201030 18:27:33.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.861" endtime="20201030 18:27:33.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.484" endtime="20201030 18:27:33.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.478" endtime="20201030 18:27:33.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:33.877" level="INFO">${PHILIP_RES} = [{'diff': 0.0002765980000000029}, {'diff': 0.00027662500000000256}, {'diff': 0.00027661199999999553}, {'diff': 0.0002765980000000029}, {'diff': 0.00027661099999999605}, {'diff': 0.00027661099999999605...</msg>
<status status="PASS" starttime="20201030 18:27:33.870" endtime="20201030 18:27:33.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:33.888" level="INFO">${RESULT} = {'diff': [0.0002765980000000029, 0.00027662500000000256, 0.00027661199999999553, 0.0002765980000000029, 0.00027661099999999605, 0.00027661099999999605, 0.00027661099999999605, 0.0002765829999999969, 0...</msg>
<status status="PASS" starttime="20201030 18:27:33.879" endtime="20201030 18:27:33.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.898" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:33.896" endtime="20201030 18:27:33.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.904" level="INFO">VALUE: [0.0002765980000000029, 0.00027662500000000256, 0.00027661199999999553, 0.0002765980000000029, 0.00027661099999999605, 0.00027661099999999605, 0.00027661099999999605, 0.0002765829999999969, 0.00027661099999999605, 0.00027662500000000256, 0.00027661100000000993, 0.00027661100000000993, 0.00027662500000000256, 0.00027662500000000256, 0.0002765690000000043, 0.0002765829999999969, 0.00027662500000000256, 0.00027661099999999605, 0.00027661099999999605, 0.0002765970000000034, 0.0002766389999999952, 0.0002765970000000034, 0.00027661099999999605, 0.00027662500000000256, 0.0002765839999999964, 0.00027668100000000084, 0.00027662500000000256, 0.00027661199999999553, 0.00027661100000000993, 0.00027662500000000256, 0.0002765970000000034, 0.0002765970000000034, 0.0002765970000000034, 0.00027661099999999605, 0.00027661099999999605, 0.00027661099999999605, 0.00027662500000000256, 0.00027659699999998955, 0.0002765970000000034, 0.00027661099999999605, 0.0002765970000000034, 0.00027662500000000256, 0.0002765970000000034, 0.0002765830000000108, 0.0002765970000000034, 0.00027657000000000376, 0.00027661100000000993, 0.0002765980000000029, 0.0002765980000000029, 0.000276597999999989]</msg>
<status status="PASS" starttime="20201030 18:27:33.901" endtime="20201030 18:27:33.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.890" endtime="20201030 18:27:33.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:33.916" endtime="20201030 18:27:33.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.912" endtime="20201030 18:27:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.909" endtime="20201030 18:27:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.389" endtime="20201030 18:27:33.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.386" endtime="20201030 18:27:33.941"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.963" endtime="20201030 18:27:33.989"></status>
</kw>
<msg timestamp="20201030 18:27:33.990" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.960" endtime="20201030 18:27:33.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:33.996" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:33.992" endtime="20201030 18:27:33.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:33.999" endtime="20201030 18:27:34.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.952" endtime="20201030 18:27:34.004"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.947" endtime="20201030 18:27:34.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.022" endtime="20201030 18:27:34.354"></status>
</kw>
<msg timestamp="20201030 18:27:34.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037405167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.019" endtime="20201030 18:27:34.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037107417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037405167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.364" endtime="20201030 18:27:34.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.382" endtime="20201030 18:27:34.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.011" endtime="20201030 18:27:34.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.007" endtime="20201030 18:27:34.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:34.398" level="INFO">${PHILIP_RES} = [{'diff': 0.00029775000000000634}, {'diff': 0.000297763999999999}, {'diff': 0.00029779099999999864}, {'diff': 0.0002977640000000059}, {'diff': 0.0002977629999999995}, {'diff': 0.0002977629999999995}, ...</msg>
<status status="PASS" starttime="20201030 18:27:34.390" endtime="20201030 18:27:34.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.408" level="INFO">${RESULT} = {'diff': [0.00029775000000000634, 0.000297763999999999, 0.00029779099999999864, 0.0002977640000000059, 0.0002977629999999995, 0.0002977629999999995, 0.00029773599999999983, 0.00029781999999999725, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:34.400" endtime="20201030 18:27:34.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.419" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:34.417" endtime="20201030 18:27:34.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.424" level="INFO">VALUE: [0.00029775000000000634, 0.000297763999999999, 0.00029779099999999864, 0.0002977640000000059, 0.0002977629999999995, 0.0002977629999999995, 0.00029773599999999983, 0.00029781999999999725, 0.0002977919999999981, 0.0002977780000000055, 0.00029777799999999854, 0.000297763999999999, 0.0002978469999999969, 0.00029777799999999854, 0.000297763999999999, 0.00029773599999999983, 0.00029777799999999854, 0.000297763999999999, 0.000297763999999999, 0.000297763999999999, 0.000297763999999999, 0.0002977629999999995, 0.0002977629999999995, 0.00029777799999999854, 0.0002977499999999994, 0.00029777799999999854, 0.000297763999999999, 0.0002978059999999977, 0.000297763999999999, 0.0002977640000000059, 0.000297763999999999, 0.0002977499999999994, 0.0003180550000000046, 0.00029777699999999907, 0.0002977629999999995, 0.0002977080000000007, 0.000297763999999999, 0.000297763999999999, 0.00029777799999999854, 0.0002977499999999994, 0.0002978330000000043, 0.000297763999999999, 0.00029777799999999854, 0.0002977640000000059, 0.0002977499999999994, 0.0002977919999999981, 0.00029772299999999974, 0.000297763999999999, 0.00029777699999999907, 0.0002977629999999995]</msg>
<status status="PASS" starttime="20201030 18:27:34.421" endtime="20201030 18:27:34.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.410" endtime="20201030 18:27:34.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.437" endtime="20201030 18:27:34.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.432" endtime="20201030 18:27:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.430" endtime="20201030 18:27:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.943" endtime="20201030 18:27:34.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:33.942" endtime="20201030 18:27:34.461"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.483" endtime="20201030 18:27:34.511"></status>
</kw>
<msg timestamp="20201030 18:27:34.512" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.480" endtime="20201030 18:27:34.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.519" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.514" endtime="20201030 18:27:34.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.521" endtime="20201030 18:27:34.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.473" endtime="20201030 18:27:34.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.467" endtime="20201030 18:27:34.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.544" endtime="20201030 18:27:34.879"></status>
</kw>
<msg timestamp="20201030 18:27:34.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037064847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037384528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.541" endtime="20201030 18:27:34.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037064847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037384528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:34.888" endtime="20201030 18:27:34.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.906" endtime="20201030 18:27:34.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.534" endtime="20201030 18:27:34.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.529" endtime="20201030 18:27:34.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:34.922" level="INFO">${PHILIP_RES} = [{'diff': 0.0003196810000000022}, {'diff': 0.0003196950000000018}, {'diff': 0.00031966599999999623}, {'diff': 0.00031968000000000274}, {'diff': 0.000319624999999997}, {'diff': 0.0003196950000000018}, ...</msg>
<status status="PASS" starttime="20201030 18:27:34.915" endtime="20201030 18:27:34.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:34.931" level="INFO">${RESULT} = {'diff': [0.0003196810000000022, 0.0003196950000000018, 0.00031966599999999623, 0.00031968000000000274, 0.000319624999999997, 0.0003196950000000018, 0.0003196809999999953, 0.00031968000000000274, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:34.924" endtime="20201030 18:27:34.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.941" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:34.939" endtime="20201030 18:27:34.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.947" level="INFO">VALUE: [0.0003196810000000022, 0.0003196950000000018, 0.00031966599999999623, 0.00031968000000000274, 0.000319624999999997, 0.0003196950000000018, 0.0003196809999999953, 0.00031968000000000274, 0.0003196940000000023, 0.0003196940000000023, 0.0003197230000000009, 0.00031969499999999484, 0.0003196940000000023, 0.00031972200000000145, 0.00031968000000000274, 0.00031966700000000264, 0.0003196950000000018, 0.0003196810000000022, 0.000319736000000001, 0.0003197500000000006, 0.0003196669999999957, 0.00031966700000000264, 0.00031966700000000264, 0.000319624999999997, 0.0003196940000000023, 0.0003196669999999957, 0.0003196109999999974, 0.0003196950000000018, 0.00031968000000000274, 0.0003196530000000031, 0.000319624999999997, 0.0003196950000000018, 0.0003196809999999953, 0.00031968000000000274, 0.0003197080000000019, 0.0003196940000000023, 0.0003196950000000018, 0.0003196809999999953, 0.0003196940000000023, 0.00031970799999999494, 0.0003196940000000023, 0.0003196950000000018, 0.0003356110000000065, 0.00031966599999999623, 0.00031961100000000436, 0.00031969499999999484, 0.0003196810000000022, 0.00031966599999999623, 0.00031968000000000274, 0.0003196940000000023]</msg>
<status status="PASS" starttime="20201030 18:27:34.944" endtime="20201030 18:27:34.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.933" endtime="20201030 18:27:34.950"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.959" endtime="20201030 18:27:34.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.955" endtime="20201030 18:27:34.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.952" endtime="20201030 18:27:34.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.463" endtime="20201030 18:27:34.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.462" endtime="20201030 18:27:34.984"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.006" endtime="20201030 18:27:35.036"></status>
</kw>
<msg timestamp="20201030 18:27:35.037" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.002" endtime="20201030 18:27:35.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.043" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.039" endtime="20201030 18:27:35.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.046" endtime="20201030 18:27:35.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.995" endtime="20201030 18:27:35.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.990" endtime="20201030 18:27:35.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.069" endtime="20201030 18:27:35.401"></status>
</kw>
<msg timestamp="20201030 18:27:35.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038638875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03898125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:35.065" endtime="20201030 18:27:35.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038638875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03898125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:35.410" endtime="20201030 18:27:35.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.428" endtime="20201030 18:27:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.058" endtime="20201030 18:27:35.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.054" endtime="20201030 18:27:35.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:35.444" level="INFO">${PHILIP_RES} = [{'diff': 0.00034237499999999893}, {'diff': 0.00034240200000000554}, {'diff': 0.00034237499999999893}, {'diff': 0.00034237499999999893}, {'diff': 0.0003424309999999972}, {'diff': 0.0003423200000000001...</msg>
<status status="PASS" starttime="20201030 18:27:35.436" endtime="20201030 18:27:35.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.453" level="INFO">${RESULT} = {'diff': [0.00034237499999999893, 0.00034240200000000554, 0.00034237499999999893, 0.00034237499999999893, 0.0003424309999999972, 0.0003423200000000001, 0.00034240299999999807, 0.00034237499999999893, ...</msg>
<status status="PASS" starttime="20201030 18:27:35.446" endtime="20201030 18:27:35.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.463" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:35.461" endtime="20201030 18:27:35.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.469" level="INFO">VALUE: [0.00034237499999999893, 0.00034240200000000554, 0.00034237499999999893, 0.00034237499999999893, 0.0003424309999999972, 0.0003423200000000001, 0.00034240299999999807, 0.00034237499999999893, 0.00034234799999999926, 0.00034237500000000587, 0.0003423889999999985, 0.00034236099999999936, 0.00034230600000000055, 0.00034237499999999893, 0.0003423889999999985, 0.0003423889999999985, 0.00034237499999999893, 0.00034237500000000587, 0.00034236099999999936, 0.00034236099999999936, 0.00034237499999999893, 0.0003423610000000063, 0.0003423889999999985, 0.00034237499999999893, 0.00034236199999999883, 0.0003424170000000046, 0.00034237499999999893, 0.00034237499999999893, 0.00034237499999999893, 0.00034238900000000544, 0.00034236099999999936, 0.0003423889999999985, 0.00034240299999999807, 0.0003423610000000063, 0.00034237499999999893, 0.00034236099999999936, 0.0003423330000000002, 0.00034236099999999936, 0.00034231900000000065, 0.00034237499999999893, 0.0003610689999999986, 0.00034236099999999936, 0.00034237499999999893, 0.00034240299999999807, 0.00034237499999999893, 0.00034236099999999936, 0.00034234799999999926, 0.0003423469999999998, 0.00034234799999999926, 0.00034237500000000587]</msg>
<status status="PASS" starttime="20201030 18:27:35.466" endtime="20201030 18:27:35.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.455" endtime="20201030 18:27:35.472"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:35.487" endtime="20201030 18:27:35.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.477" endtime="20201030 18:27:35.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.474" endtime="20201030 18:27:35.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.986" endtime="20201030 18:27:35.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.985" endtime="20201030 18:27:35.512"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.533" endtime="20201030 18:27:35.563"></status>
</kw>
<msg timestamp="20201030 18:27:35.564" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.530" endtime="20201030 18:27:35.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.571" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:35.567" endtime="20201030 18:27:35.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.573" endtime="20201030 18:27:35.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.523" endtime="20201030 18:27:35.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.518" endtime="20201030 18:27:35.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.596" endtime="20201030 18:27:35.930"></status>
</kw>
<msg timestamp="20201030 18:27:35.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036904694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037270542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.593" endtime="20201030 18:27:35.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036904694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037270542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:35.939" endtime="20201030 18:27:35.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:35.957" endtime="20201030 18:27:35.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.586" endtime="20201030 18:27:35.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.581" endtime="20201030 18:27:35.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:35.973" level="INFO">${PHILIP_RES} = [{'diff': 0.000365847999999995}, {'diff': 0.0003658189999999964}, {'diff': 0.00036583299999999597}, {'diff': 0.00036586100000000205}, {'diff': 0.0003658200000000028}, {'diff': 0.0003658200000000028}, ...</msg>
<status status="PASS" starttime="20201030 18:27:35.966" endtime="20201030 18:27:35.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:35.983" level="INFO">${RESULT} = {'diff': [0.000365847999999995, 0.0003658189999999964, 0.00036583299999999597, 0.00036586100000000205, 0.0003658200000000028, 0.0003658200000000028, 0.00036580500000000377, 0.0003657629999999981, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:35.975" endtime="20201030 18:27:35.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.994" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:35.991" endtime="20201030 18:27:35.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:35.999" level="INFO">VALUE: [0.000365847999999995, 0.0003658189999999964, 0.00036583299999999597, 0.00036586100000000205, 0.0003658200000000028, 0.0003658200000000028, 0.00036580500000000377, 0.0003657629999999981, 0.00036581999999999587, 0.0003658749999999947, 0.0003658189999999964, 0.00036581900000000334, 0.00036581900000000334, 0.00036576400000000453, 0.0003658200000000028, 0.00036580600000000324, 0.0003658189999999964, 0.00036584699999999554, 0.0003658059999999963, 0.00036580600000000324, 0.0003658330000000029, 0.0003657770000000046, 0.0003658200000000028, 0.00036583399999999544, 0.00036583399999999544, 0.0003658189999999964, 0.00036583299999999597, 0.0003658470000000025, 0.0003657780000000041, 0.0003658330000000029, 0.00036581900000000334, 0.0003658189999999964, 0.00036584699999999554, 0.00036581999999999587, 0.00036580600000000324, 0.00036580500000000377, 0.0003658189999999964, 0.00036581999999999587, 0.00036581999999999587, 0.0003658200000000028, 0.0003658330000000029, 0.0003658330000000029, 0.00036580600000000324, 0.0003658340000000024, 0.00036581999999999587, 0.00036583299999999597, 0.00036583299999999597, 0.0003658340000000024, 0.0003658200000000028, 0.00036581900000000334]</msg>
<status status="PASS" starttime="20201030 18:27:35.996" endtime="20201030 18:27:36.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.985" endtime="20201030 18:27:36.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.012" endtime="20201030 18:27:36.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.007" endtime="20201030 18:27:36.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.005" endtime="20201030 18:27:36.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.514" endtime="20201030 18:27:36.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:35.512" endtime="20201030 18:27:36.036"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.058" endtime="20201030 18:27:36.089"></status>
</kw>
<msg timestamp="20201030 18:27:36.090" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.055" endtime="20201030 18:27:36.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.096" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.092" endtime="20201030 18:27:36.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.099" endtime="20201030 18:27:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.048" endtime="20201030 18:27:36.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.042" endtime="20201030 18:27:36.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.122" endtime="20201030 18:27:36.455"></status>
</kw>
<msg timestamp="20201030 18:27:36.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03728225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.118" endtime="20201030 18:27:36.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036892208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03728225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:36.464" endtime="20201030 18:27:36.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.482" endtime="20201030 18:27:36.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.111" endtime="20201030 18:27:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.107" endtime="20201030 18:27:36.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:36.498" level="INFO">${PHILIP_RES} = [{'diff': 0.00039004200000000017}, {'diff': 0.00039004200000000017}, {'diff': 0.0003900280000000006}, {'diff': 0.0003900270000000011}, {'diff': 0.00039005599999999974}, {'diff': 0.00039000000000000146...</msg>
<status status="PASS" starttime="20201030 18:27:36.490" endtime="20201030 18:27:36.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:36.508" level="INFO">${RESULT} = {'diff': [0.00039004200000000017, 0.00039004200000000017, 0.0003900280000000006, 0.0003900270000000011, 0.00039005599999999974, 0.00039000000000000146, 0.0003900410000000007, 0.0003900410000000007, 0....</msg>
<status status="PASS" starttime="20201030 18:27:36.500" endtime="20201030 18:27:36.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.520" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:36.517" endtime="20201030 18:27:36.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.531" level="INFO">VALUE: [0.00039004200000000017, 0.00039004200000000017, 0.0003900280000000006, 0.0003900270000000011, 0.00039005599999999974, 0.00039000000000000146, 0.0003900410000000007, 0.0003900410000000007, 0.00039004200000000017, 0.0003900280000000006, 0.000390014000000001, 0.0003900270000000011, 0.00039004200000000017, 0.00039011099999999854, 0.0003900280000000006, 0.00039000000000000146, 0.000390014000000001, 0.000390014000000001, 0.0003900139999999941, 0.0003900280000000006, 0.00039004200000000017, 0.000390014000000001, 0.00039000000000000146, 0.0003900280000000006, 0.000390014000000001, 0.000390014000000001, 0.0003900270000000011, 0.0003900280000000006, 0.00039005599999999974, 0.00039004200000000017, 0.0003899720000000023, 0.00040379200000000004, 0.0003900280000000006, 0.00038995800000000275, 0.0003900280000000006, 0.00039000000000000146, 0.00039005500000000026, 0.0003900269999999942, 0.00039005599999999974, 0.0003899999999999945, 0.0003900139999999941, 0.0003900270000000011, 0.000390014000000001, 0.00039006899999999983, 0.0003900280000000006, 0.00039000000000000146, 0.000390014000000001, 0.0003900280000000006, 0.0003900270000000011, 0.00039004200000000017]</msg>
<status status="PASS" starttime="20201030 18:27:36.524" endtime="20201030 18:27:36.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.510" endtime="20201030 18:27:36.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:36.551" endtime="20201030 18:27:36.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.545" endtime="20201030 18:27:36.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.540" endtime="20201030 18:27:36.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.038" endtime="20201030 18:27:36.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.037" endtime="20201030 18:27:36.579"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.602" endtime="20201030 18:27:36.635"></status>
</kw>
<msg timestamp="20201030 18:27:36.636" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.599" endtime="20201030 18:27:36.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:36.642" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:36.638" endtime="20201030 18:27:36.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.644" endtime="20201030 18:27:36.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.592" endtime="20201030 18:27:36.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.586" endtime="20201030 18:27:36.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:36.669" endtime="20201030 18:27:37.029"></status>
</kw>
<msg timestamp="20201030 18:27:37.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041751958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:36.665" endtime="20201030 18:27:37.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041751958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.039" endtime="20201030 18:27:37.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.059" endtime="20201030 18:27:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.658" endtime="20201030 18:27:37.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.652" endtime="20201030 18:27:37.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.076" level="INFO">${PHILIP_RES} = [{'diff': 0.00041498599999999913}, {'diff': 0.00041498599999999913}, {'diff': 0.0004150139999999983}, {'diff': 0.0004150139999999983}, {'diff': 0.00041497199999999956}, {'diff': 0.00041498599999999913...</msg>
<status status="PASS" starttime="20201030 18:27:37.068" endtime="20201030 18:27:37.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.086" level="INFO">${RESULT} = {'diff': [0.00041498599999999913, 0.00041498599999999913, 0.0004150139999999983, 0.0004150139999999983, 0.00041497199999999956, 0.00041498599999999913, 0.0004149999999999987, 0.0004149999999999987, 0....</msg>
<status status="PASS" starttime="20201030 18:27:37.078" endtime="20201030 18:27:37.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.097" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.094" endtime="20201030 18:27:37.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.103" level="INFO">VALUE: [0.00041498599999999913, 0.00041498599999999913, 0.0004150139999999983, 0.0004150139999999983, 0.00041497199999999956, 0.00041498599999999913, 0.0004149999999999987, 0.0004149999999999987, 0.00041502799999999784, 0.00041493000000000085, 0.0004150419999999974, 0.0004149999999999987, 0.0004150549999999975, 0.00041500000000000564, 0.00041495899999999947, 0.00041504200000000435, 0.00041500000000000564, 0.00041497199999999956, 0.0004149999999999987, 0.000415069000000004, 0.00041498599999999913, 0.0004150560000000039, 0.00041498599999999913, 0.0004149999999999987, 0.0004150129999999988, 0.0004149999999999987, 0.00041498599999999913, 0.0004149999999999987, 0.0004149999999999987, 0.0004149999999999987, 0.0004149999999999987, 0.0004149999999999987, 0.0004149449999999999, 0.0004149440000000004, 0.0004149999999999987, 0.0004150560000000039, 0.00041500000000000564, 0.00041498599999999913, 0.00041500000000000564, 0.0004150280000000048, 0.0004149999999999987, 0.0004150139999999983, 0.0004149999999999987, 0.00041504099999999794, 0.0004149999999999987, 0.0004150139999999983, 0.0004149999999999987, 0.00041502799999999784, 0.00041498700000000555, 0.0004150410000000049]</msg>
<status status="PASS" starttime="20201030 18:27:37.099" endtime="20201030 18:27:37.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.088" endtime="20201030 18:27:37.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.123" endtime="20201030 18:27:37.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.118" endtime="20201030 18:27:37.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.115" endtime="20201030 18:27:37.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.582" endtime="20201030 18:27:37.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:36.580" endtime="20201030 18:27:37.148"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.171" endtime="20201030 18:27:37.207"></status>
</kw>
<msg timestamp="20201030 18:27:37.208" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.168" endtime="20201030 18:27:37.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.214" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.210" endtime="20201030 18:27:37.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.217" endtime="20201030 18:27:37.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.160" endtime="20201030 18:27:37.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.155" endtime="20201030 18:27:37.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.241" endtime="20201030 18:27:37.598"></status>
</kw>
<msg timestamp="20201030 18:27:37.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040933486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.238" endtime="20201030 18:27:37.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040933486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041374222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:37.608" endtime="20201030 18:27:37.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.627" endtime="20201030 18:27:37.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.230" endtime="20201030 18:27:37.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.225" endtime="20201030 18:27:37.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:37.645" level="INFO">${PHILIP_RES} = [{'diff': 0.00044073600000000407}, {'diff': 0.00044073600000000407}, {'diff': 0.00044073600000000407}, {'diff': 0.00044076300000000374}, {'diff': 0.0004407640000000032}, {'diff': 0.0004407369999999966...</msg>
<status status="PASS" starttime="20201030 18:27:37.637" endtime="20201030 18:27:37.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:37.654" level="INFO">${RESULT} = {'diff': [0.00044073600000000407, 0.00044073600000000407, 0.00044073600000000407, 0.00044076300000000374, 0.0004407640000000032, 0.0004407369999999966, 0.00044073599999999713, 0.0004407499999999967, 0...</msg>
<status status="PASS" starttime="20201030 18:27:37.647" endtime="20201030 18:27:37.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.665" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:37.663" endtime="20201030 18:27:37.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.671" level="INFO">VALUE: [0.00044073600000000407, 0.00044073600000000407, 0.00044073600000000407, 0.00044076300000000374, 0.0004407640000000032, 0.0004407369999999966, 0.00044073599999999713, 0.0004407499999999967, 0.000440707999999998, 0.00044076399999999627, 0.00044075000000000364, 0.00044073600000000407, 0.00044075000000000364, 0.00044075000000000364, 0.00044075000000000364, 0.00044072199999999756, 0.00044073599999999713, 0.0004407499999999967, 0.00044072199999999756, 0.0004407499999999967, 0.00044076399999999627, 0.0004407499999999967, 0.00044073600000000407, 0.00044075000000000364, 0.00044075000000000364, 0.0004610280000000022, 0.00044073600000000407, 0.0004407220000000045, 0.00044075000000000364, 0.00044073599999999713, 0.00044072199999999756, 0.0004407499999999967, 0.00044072199999999756, 0.00044073599999999713, 0.000440707999999998, 0.00044075000000000364, 0.00044075000000000364, 0.0004407780000000028, 0.00044073600000000407, 0.00044075000000000364, 0.00044079200000000235, 0.00044073599999999713, 0.0004407499999999967, 0.00044073599999999713, 0.00044072199999999756, 0.0004406800000000058, 0.00044075000000000364, 0.00044073599999999713, 0.00044075000000000364, 0.00044076399999999627]</msg>
<status status="PASS" starttime="20201030 18:27:37.668" endtime="20201030 18:27:37.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.656" endtime="20201030 18:27:37.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:37.686" endtime="20201030 18:27:37.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.680" endtime="20201030 18:27:37.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.677" endtime="20201030 18:27:37.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.150" endtime="20201030 18:27:37.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.149" endtime="20201030 18:27:37.712"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.736" endtime="20201030 18:27:37.772"></status>
</kw>
<msg timestamp="20201030 18:27:37.773" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.733" endtime="20201030 18:27:37.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.780" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.776" endtime="20201030 18:27:37.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.782" endtime="20201030 18:27:37.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.725" endtime="20201030 18:27:37.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.719" endtime="20201030 18:27:37.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.807" endtime="20201030 18:27:38.166"></status>
</kw>
<msg timestamp="20201030 18:27:38.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04130975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:37.804" endtime="20201030 18:27:38.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040842486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04130975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:38.175" endtime="20201030 18:27:38.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.195" endtime="20201030 18:27:38.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.796" endtime="20201030 18:27:38.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.791" endtime="20201030 18:27:38.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.212" level="INFO">${PHILIP_RES} = [{'diff': 0.00046726400000000196}, {'diff': 0.0004672360000000028}, {'diff': 0.0004672500000000024}, {'diff': 0.00046726400000000196}, {'diff': 0.0004672359999999959}, {'diff': 0.0004672500000000024},...</msg>
<status status="PASS" starttime="20201030 18:27:38.204" endtime="20201030 18:27:38.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.223" level="INFO">${RESULT} = {'diff': [0.00046726400000000196, 0.0004672360000000028, 0.0004672500000000024, 0.00046726400000000196, 0.0004672359999999959, 0.0004672500000000024, 0.0004672500000000024, 0.0004672360000000028, 0.00...</msg>
<status status="PASS" starttime="20201030 18:27:38.214" endtime="20201030 18:27:38.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.234" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.231" endtime="20201030 18:27:38.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.239" level="INFO">VALUE: [0.00046726400000000196, 0.0004672360000000028, 0.0004672500000000024, 0.00046726400000000196, 0.0004672359999999959, 0.0004672500000000024, 0.0004672500000000024, 0.0004672360000000028, 0.0004672500000000024, 0.0004672359999999959, 0.0004672089999999962, 0.000484235999999999, 0.0004672360000000028, 0.00046723699999999535, 0.0004672219999999963, 0.0004672229999999958, 0.0004672360000000028, 0.0004672360000000028, 0.0004672359999999959, 0.00046724999999999545, 0.00046720799999999674, 0.0004672500000000024, 0.0004672500000000024, 0.00046722200000000325, 0.00046724999999999545, 0.0004672359999999959, 0.00046722200000000325, 0.00046722200000000325, 0.00046727700000000205, 0.0004672359999999959, 0.0004672359999999959, 0.0004672359999999959, 0.00046722200000000325, 0.00046716700000000444, 0.00046731900000000076, 0.0004672920000000011, 0.0004672359999999959, 0.00046726400000000196, 0.0004672360000000028, 0.0004672360000000028, 0.00046726400000000196, 0.00046724999999999545, 0.0004672500000000024, 0.0004671950000000036, 0.0004672359999999959, 0.00046722200000000325, 0.0004672359999999959, 0.0004672500000000024, 0.00046722200000000325, 0.0004672359999999959]</msg>
<status status="PASS" starttime="20201030 18:27:38.236" endtime="20201030 18:27:38.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.224" endtime="20201030 18:27:38.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.253" endtime="20201030 18:27:38.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.248" endtime="20201030 18:27:38.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.245" endtime="20201030 18:27:38.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.715" endtime="20201030 18:27:38.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.713" endtime="20201030 18:27:38.278"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.301" endtime="20201030 18:27:38.338"></status>
</kw>
<msg timestamp="20201030 18:27:38.340" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.298" endtime="20201030 18:27:38.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.346" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.342" endtime="20201030 18:27:38.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.349" endtime="20201030 18:27:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.290" endtime="20201030 18:27:38.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.285" endtime="20201030 18:27:38.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.373" endtime="20201030 18:27:38.732"></status>
</kw>
<msg timestamp="20201030 18:27:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039504986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:38.370" endtime="20201030 18:27:38.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039504986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0399995, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:38.742" endtime="20201030 18:27:38.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.762" endtime="20201030 18:27:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.362" endtime="20201030 18:27:38.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.357" endtime="20201030 18:27:38.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:38.779" level="INFO">${PHILIP_RES} = [{'diff': 0.0004945140000000015}, {'diff': 0.0004945140000000015}, {'diff': 0.0004945269999999946}, {'diff': 0.0004945699999999997}, {'diff': 0.0004945140000000015}, {'diff': 0.0004944999999999949}, {...</msg>
<status status="PASS" starttime="20201030 18:27:38.771" endtime="20201030 18:27:38.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:38.790" level="INFO">${RESULT} = {'diff': [0.0004945140000000015, 0.0004945140000000015, 0.0004945269999999946, 0.0004945699999999997, 0.0004945140000000015, 0.0004944999999999949, 0.0004945140000000015, 0.000494528000000001, 0.00049...</msg>
<status status="PASS" starttime="20201030 18:27:38.781" endtime="20201030 18:27:38.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.802" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:38.799" endtime="20201030 18:27:38.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.807" level="INFO">VALUE: [0.0004945140000000015, 0.0004945140000000015, 0.0004945269999999946, 0.0004945699999999997, 0.0004945140000000015, 0.0004944999999999949, 0.0004945140000000015, 0.000494528000000001, 0.0004944859999999954, 0.0004945140000000015, 0.0004945140000000015, 0.0004944719999999958, 0.0004945140000000015, 0.0004945000000000019, 0.0004944999999999949, 0.000494528000000001, 0.0004945420000000006, 0.0004945279999999941, 0.0004945140000000015, 0.0004945140000000015, 0.0004945139999999945, 0.0004945000000000019, 0.0004945140000000015, 0.0004944439999999967, 0.0004945000000000019, 0.000494528000000001, 0.0004945139999999945, 0.000494513000000002, 0.0004945140000000015, 0.0004945829999999998, 0.0004945000000000019, 0.000494513000000002, 0.0004945279999999941, 0.0004945140000000015, 0.0004945140000000015, 0.0004944999999999949, 0.0004945000000000019, 0.0004945000000000019, 0.0004944590000000026, 0.0004944870000000018, 0.0004945140000000015, 0.0004944859999999954, 0.0004945140000000015, 0.0004944999999999949, 0.0004944999999999949, 0.0004945140000000015, 0.0004944999999999949, 0.0004945550000000076, 0.0004944999999999949, 0.0004945139999999876]</msg>
<status status="PASS" starttime="20201030 18:27:38.804" endtime="20201030 18:27:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.792" endtime="20201030 18:27:38.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:38.821" endtime="20201030 18:27:38.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.816" endtime="20201030 18:27:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.813" endtime="20201030 18:27:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.280" endtime="20201030 18:27:38.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.279" endtime="20201030 18:27:38.846"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.869" endtime="20201030 18:27:38.907"></status>
</kw>
<msg timestamp="20201030 18:27:38.908" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.866" endtime="20201030 18:27:38.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:38.915" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:38.911" endtime="20201030 18:27:38.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.918" endtime="20201030 18:27:38.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.858" endtime="20201030 18:27:38.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.853" endtime="20201030 18:27:38.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:38.942" endtime="20201030 18:27:39.304"></status>
</kw>
<msg timestamp="20201030 18:27:39.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:38.939" endtime="20201030 18:27:39.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039183597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039706125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.314" endtime="20201030 18:27:39.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.332" endtime="20201030 18:27:39.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.931" endtime="20201030 18:27:39.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.926" endtime="20201030 18:27:39.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.349" level="INFO">${PHILIP_RES} = [{'diff': 0.0005225280000000013}, {'diff': 0.0005225280000000013}, {'diff': 0.0005225410000000014}, {'diff': 0.0005225550000000009}, {'diff': 0.0005226109999999992}, {'diff': 0.0005225420000000008}, {...</msg>
<status status="PASS" starttime="20201030 18:27:39.341" endtime="20201030 18:27:39.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.358" level="INFO">${RESULT} = {'diff': [0.0005225280000000013, 0.0005225280000000013, 0.0005225410000000014, 0.0005225550000000009, 0.0005226109999999992, 0.0005225420000000008, 0.0005225550000000009, 0.0005225280000000013, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:39.351" endtime="20201030 18:27:39.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.369" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.366" endtime="20201030 18:27:39.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.374" level="INFO">VALUE: [0.0005225280000000013, 0.0005225280000000013, 0.0005225410000000014, 0.0005225550000000009, 0.0005226109999999992, 0.0005225420000000008, 0.0005225550000000009, 0.0005225280000000013, 0.0005225419999999939, 0.0005225420000000008, 0.0005225830000000001, 0.0005225420000000008, 0.0005225560000000004, 0.0005225830000000001, 0.0005225420000000008, 0.0005225420000000008, 0.0005225420000000008, 0.0005225410000000014, 0.0005225280000000013, 0.0005225560000000004, 0.0005225280000000013, 0.0005225420000000008, 0.0005225420000000008, 0.0005224859999999956, 0.0005225420000000008, 0.0005225409999999944, 0.0005225420000000008, 0.0005225419999999939, 0.0005226249999999988, 0.00052257, 0.0005225420000000008, 0.0005225690000000005, 0.0005225690000000005, 0.0005225280000000013, 0.0005225280000000013, 0.0005379720000000046, 0.0005225420000000008, 0.00052257, 0.0005225690000000005, 0.0005225419999999939, 0.0005225420000000008, 0.0005225560000000073, 0.0005225269999999949, 0.0005225560000000073, 0.0005225420000000008, 0.0005225280000000082, 0.0005225410000000014, 0.0005225420000000008, 0.0005226109999999923, 0.0005225420000000008]</msg>
<status status="PASS" starttime="20201030 18:27:39.371" endtime="20201030 18:27:39.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.359" endtime="20201030 18:27:39.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.387" endtime="20201030 18:27:39.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.382" endtime="20201030 18:27:39.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.380" endtime="20201030 18:27:39.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.849" endtime="20201030 18:27:39.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:38.847" endtime="20201030 18:27:39.412"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.434" endtime="20201030 18:27:39.475"></status>
</kw>
<msg timestamp="20201030 18:27:39.476" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.430" endtime="20201030 18:27:39.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.483" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.478" endtime="20201030 18:27:39.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.486" endtime="20201030 18:27:39.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.423" endtime="20201030 18:27:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.418" endtime="20201030 18:27:39.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.509" endtime="20201030 18:27:39.850"></status>
</kw>
<msg timestamp="20201030 18:27:39.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039262264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.506" endtime="20201030 18:27:39.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039262264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039813597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:39.859" endtime="20201030 18:27:39.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.878" endtime="20201030 18:27:39.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.499" endtime="20201030 18:27:39.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.494" endtime="20201030 18:27:39.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:39.895" level="INFO">${PHILIP_RES} = [{'diff': 0.0005513330000000011}, {'diff': 0.0005513330000000011}, {'diff': 0.0005513330000000011}, {'diff': 0.0005513470000000006}, {'diff': 0.0005512640000000027}, {'diff': 0.0005513330000000011}, {...</msg>
<status status="PASS" starttime="20201030 18:27:39.887" endtime="20201030 18:27:39.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:39.903" level="INFO">${RESULT} = {'diff': [0.0005513330000000011, 0.0005513330000000011, 0.0005513330000000011, 0.0005513470000000006, 0.0005512640000000027, 0.0005513330000000011, 0.0005513469999999937, 0.0005513749999999998, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:39.897" endtime="20201030 18:27:39.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.908" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:39.907" endtime="20201030 18:27:39.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.911" level="INFO">VALUE: [0.0005513330000000011, 0.0005513330000000011, 0.0005513330000000011, 0.0005513470000000006, 0.0005512640000000027, 0.0005513330000000011, 0.0005513469999999937, 0.0005513749999999998, 0.0005513470000000006, 0.0005513340000000005, 0.0005512779999999953, 0.0005513469999999937, 0.0005513330000000011, 0.0005513330000000011, 0.0005513889999999994, 0.0005513330000000011, 0.0005513480000000001, 0.0005513330000000011, 0.000574276999999998, 0.0005513330000000011, 0.0005513480000000001, 0.0005513470000000006, 0.0005513330000000011, 0.0005513470000000006, 0.0005513190000000015, 0.0005513480000000001, 0.0005513470000000006, 0.000551320000000001, 0.0005513610000000002, 0.0005513470000000006, 0.000551320000000001, 0.0005513470000000006, 0.0005513330000000011, 0.000551304999999995, 0.0005513470000000006, 0.0005513340000000005, 0.0005513190000000015, 0.0005513610000000002, 0.0005513470000000006, 0.0005513329999999941, 0.0005513340000000005, 0.0005513189999999946, 0.0005513469999999937, 0.0005513330000000011, 0.0005512780000000023, 0.0005513479999999932, 0.0005513190000000084, 0.0005513750000000067, 0.000551402999999992, 0.0005513330000000011]</msg>
<status status="PASS" starttime="20201030 18:27:39.909" endtime="20201030 18:27:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.904" endtime="20201030 18:27:39.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:39.918" endtime="20201030 18:27:39.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.915" endtime="20201030 18:27:39.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.914" endtime="20201030 18:27:39.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.414" endtime="20201030 18:27:39.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.413" endtime="20201030 18:27:39.939"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.949" endtime="20201030 18:27:39.988"></status>
</kw>
<msg timestamp="20201030 18:27:39.988" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.948" endtime="20201030 18:27:39.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:39.991" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:39.989" endtime="20201030 18:27:39.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:39.992" endtime="20201030 18:27:39.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.944" endtime="20201030 18:27:39.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.941" endtime="20201030 18:27:39.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.003" endtime="20201030 18:27:40.319"></status>
</kw>
<msg timestamp="20201030 18:27:40.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:40.002" endtime="20201030 18:27:40.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:40.328" endtime="20201030 18:27:40.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.346" endtime="20201030 18:27:40.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.999" endtime="20201030 18:27:40.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.996" endtime="20201030 18:27:40.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.362" level="INFO">${PHILIP_RES} = [{'diff': 0.0005808750000000015}, {'diff': 0.0005808189999999998}, {'diff': 0.0005808749999999981}, {'diff': 0.0005809450000000028}, {'diff': 0.0005808880000000016}, {'diff': 0.0005809030000000007}, {...</msg>
<status status="PASS" starttime="20201030 18:27:40.354" endtime="20201030 18:27:40.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.372" level="INFO">${RESULT} = {'diff': [0.0005808750000000015, 0.0005808189999999998, 0.0005808749999999981, 0.0005809450000000028, 0.0005808880000000016, 0.0005809030000000007, 0.0005808889999999976, 0.0005809159999999973, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:27:40.364" endtime="20201030 18:27:40.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.382" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.380" endtime="20201030 18:27:40.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.388" level="INFO">VALUE: [0.0005808750000000015, 0.0005808189999999998, 0.0005808749999999981, 0.0005809450000000028, 0.0005808880000000016, 0.0005809030000000007, 0.0005808889999999976, 0.0005809159999999973, 0.0005809029999999972, 0.000580958999999999, 0.0005808890000000011, 0.0005808889999999976, 0.0005809030000000007, 0.0005808890000000011, 0.0005808890000000011, 0.0005809169999999968, 0.0005809030000000007, 0.0005808890000000011, 0.0005808890000000011, 0.0005809030000000007, 0.0005808890000000011, 0.0005809020000000012, 0.0005809170000000002, 0.0005809029999999937, 0.0005809029999999937, 0.0005808890000000011, 0.0005809030000000007, 0.0005808880000000016, 0.0005808890000000011, 0.0005809030000000007, 0.0005809170000000002, 0.0005809030000000007, 0.0005808890000000011, 0.0005808889999999942, 0.0005808329999999959, 0.0005809030000000007, 0.0006050410000000006, 0.0005808890000000011, 0.0005809020000000012, 0.0005809170000000002, 0.0005809030000000007, 0.000580861000000002, 0.0005808749999999946, 0.0005809309999999998, 0.0005808890000000011, 0.0005808890000000011, 0.0005808890000000011, 0.0005808890000000011, 0.0005809030000000007, 0.0005809170000000002]</msg>
<status status="PASS" starttime="20201030 18:27:40.385" endtime="20201030 18:27:40.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.374" endtime="20201030 18:27:40.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.400" endtime="20201030 18:27:40.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.396" endtime="20201030 18:27:40.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.393" endtime="20201030 18:27:40.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.940" endtime="20201030 18:27:40.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:39.939" endtime="20201030 18:27:40.426"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.461" endtime="20201030 18:27:40.504"></status>
</kw>
<msg timestamp="20201030 18:27:40.505" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.456" endtime="20201030 18:27:40.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.511" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:40.507" endtime="20201030 18:27:40.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.513" endtime="20201030 18:27:40.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.447" endtime="20201030 18:27:40.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.437" endtime="20201030 18:27:40.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.537" endtime="20201030 18:27:40.876"></status>
</kw>
<msg timestamp="20201030 18:27:40.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051605139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052216347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.533" endtime="20201030 18:27:40.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051605139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052216347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:40.886" endtime="20201030 18:27:40.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:40.905" endtime="20201030 18:27:40.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.526" endtime="20201030 18:27:40.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.522" endtime="20201030 18:27:40.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:40.922" level="INFO">${PHILIP_RES} = [{'diff': 0.000611208000000002}, {'diff': 0.0006380139999999992}, {'diff': 0.0006112220000000015}, {'diff': 0.0006112360000000011}, {'diff': 0.0006112370000000006}, {'diff': 0.0006112360000000011}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:40.914" endtime="20201030 18:27:40.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:40.937" level="INFO">${RESULT} = {'diff': [0.000611208000000002, 0.0006380139999999992, 0.0006112220000000015, 0.0006112360000000011, 0.0006112370000000006, 0.0006112360000000011, 0.0006112090000000014, 0.000611125000000004, 0.000611...</msg>
<status status="PASS" starttime="20201030 18:27:40.924" endtime="20201030 18:27:40.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.949" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:40.946" endtime="20201030 18:27:40.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:40.954" level="INFO">VALUE: [0.000611208000000002, 0.0006380139999999992, 0.0006112220000000015, 0.0006112360000000011, 0.0006112370000000006, 0.0006112360000000011, 0.0006112090000000014, 0.000611125000000004, 0.0006112370000000006, 0.000611223000000001, 0.000611223000000001, 0.0006112370000000006, 0.0006111669999999958, 0.000611223000000001, 0.0006112089999999945, 0.000611223000000001, 0.0006111949999999949, 0.0006112229999999941, 0.0006112360000000011, 0.000611223000000008, 0.0006112360000000011, 0.0006112090000000014, 0.0006111800000000028, 0.0006112360000000011, 0.0006112090000000014, 0.0006112919999999994, 0.000611208000000002, 0.0006112219999999946, 0.0006112360000000011, 0.000611208000000002, 0.0006112219999999946, 0.0006111939999999955, 0.000611208000000002, 0.0006112360000000011, 0.0006111659999999963, 0.000611208000000002, 0.0006111519999999898, 0.0006111659999999963, 0.0006112640000000003, 0.000611208000000002, 0.000611208000000002, 0.000611208000000002, 0.0006112220000000085, 0.0006112219999999946, 0.0006111939999999955, 0.0006112220000000085, 0.0006111940000000093, 0.0006112499999999937, 0.0006112640000000003, 0.0006112640000000003]</msg>
<status status="PASS" starttime="20201030 18:27:40.951" endtime="20201030 18:27:40.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.939" endtime="20201030 18:27:40.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:40.967" endtime="20201030 18:27:40.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.963" endtime="20201030 18:27:40.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.960" endtime="20201030 18:27:40.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.433" endtime="20201030 18:27:40.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.428" endtime="20201030 18:27:40.993"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.017" endtime="20201030 18:27:41.061"></status>
</kw>
<msg timestamp="20201030 18:27:41.062" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.013" endtime="20201030 18:27:41.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.069" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.065" endtime="20201030 18:27:41.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.072" endtime="20201030 18:27:41.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.005" endtime="20201030 18:27:41.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.000" endtime="20201030 18:27:41.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.097" endtime="20201030 18:27:41.455"></status>
</kw>
<msg timestamp="20201030 18:27:41.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039912056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040554375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.093" endtime="20201030 18:27:41.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039912056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040554375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.465" endtime="20201030 18:27:41.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.485" endtime="20201030 18:27:41.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.086" endtime="20201030 18:27:41.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.080" endtime="20201030 18:27:41.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:41.502" level="INFO">${PHILIP_RES} = [{'diff': 0.0006423189999999954}, {'diff': 0.0006423060000000022}, {'diff': 0.0006423190000000023}, {'diff': 0.0006685830000000004}, {'diff': 0.0006423060000000022}, {'diff': 0.0006422769999999967}, {...</msg>
<status status="PASS" starttime="20201030 18:27:41.494" endtime="20201030 18:27:41.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:41.512" level="INFO">${RESULT} = {'diff': [0.0006423189999999954, 0.0006423060000000022, 0.0006423190000000023, 0.0006685830000000004, 0.0006423060000000022, 0.0006422769999999967, 0.0006423199999999948, 0.0006423060000000022, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:27:41.504" endtime="20201030 18:27:41.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.523" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:41.520" endtime="20201030 18:27:41.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.528" level="INFO">VALUE: [0.0006423189999999954, 0.0006423060000000022, 0.0006423190000000023, 0.0006685830000000004, 0.0006423060000000022, 0.0006422769999999967, 0.0006423199999999948, 0.0006423060000000022, 0.0006423050000000027, 0.0006423060000000022, 0.0006422920000000026, 0.0006423060000000022, 0.0006422780000000031, 0.0006423470000000014, 0.0006423049999999958, 0.0006423059999999953, 0.0006423190000000023, 0.0006423060000000022, 0.0006423050000000027, 0.0006422920000000026, 0.0006422500000000039, 0.0006422920000000026, 0.0006423049999999958, 0.0006423059999999953, 0.0006422769999999967, 0.0006423190000000023, 0.0006423050000000027, 0.0006422920000000026, 0.0006423190000000023, 0.0006423060000000022, 0.0006422910000000032, 0.0006423060000000022, 0.0006423049999999958, 0.0006423059999999953, 0.0006422219999999979, 0.0006423340000000083, 0.0006423049999999958, 0.0006423059999999953, 0.0006423049999999958, 0.0006422920000000026, 0.0006423059999999953, 0.0006423200000000018, 0.0006423060000000091, 0.0006423050000000097, 0.0006423190000000023, 0.0006423329999999949, 0.0006423059999999953, 0.0006423049999999958, 0.0006423059999999953, 0.0006423190000000023]</msg>
<status status="PASS" starttime="20201030 18:27:41.525" endtime="20201030 18:27:41.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.513" endtime="20201030 18:27:41.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.541" endtime="20201030 18:27:41.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.537" endtime="20201030 18:27:41.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.534" endtime="20201030 18:27:41.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.995" endtime="20201030 18:27:41.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:40.994" endtime="20201030 18:27:41.567"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.590" endtime="20201030 18:27:41.638"></status>
</kw>
<msg timestamp="20201030 18:27:41.639" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.587" endtime="20201030 18:27:41.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.646" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.641" endtime="20201030 18:27:41.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.648" endtime="20201030 18:27:41.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.579" endtime="20201030 18:27:41.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.573" endtime="20201030 18:27:41.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.673" endtime="20201030 18:27:42.031"></status>
</kw>
<msg timestamp="20201030 18:27:42.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:41.669" endtime="20201030 18:27:42.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040825681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.041" endtime="20201030 18:27:42.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.060" endtime="20201030 18:27:42.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.662" endtime="20201030 18:27:42.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.657" endtime="20201030 18:27:42.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.077" level="INFO">${PHILIP_RES} = [{'diff': 0.0006741519999999973}, {'diff': 0.0006741660000000038}, {'diff': 0.0006741659999999969}, {'diff': 0.0006741660000000038}, {'diff': 0.0006741529999999968}, {'diff': 0.0006741529999999968}, {...</msg>
<status status="PASS" starttime="20201030 18:27:42.069" endtime="20201030 18:27:42.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.087" level="INFO">${RESULT} = {'diff': [0.0006741519999999973, 0.0006741660000000038, 0.0006741659999999969, 0.0006741660000000038, 0.0006741529999999968, 0.0006741529999999968, 0.0006741530000000037, 0.0006741529999999968, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:27:42.079" endtime="20201030 18:27:42.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.098" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.096" endtime="20201030 18:27:42.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.103" level="INFO">VALUE: [0.0006741519999999973, 0.0006741660000000038, 0.0006741659999999969, 0.0006741660000000038, 0.0006741529999999968, 0.0006741529999999968, 0.0006741530000000037, 0.0006741529999999968, 0.0006741809999999959, 0.0006741530000000037, 0.0006741529999999968, 0.0006741529999999968, 0.0006741670000000033, 0.0006741529999999968, 0.0006741660000000038, 0.0006741519999999973, 0.0006741659999999969, 0.0006741520000000042, 0.0006741389999999972, 0.0006741669999999964, 0.0006741390000000042, 0.0006741529999999968, 0.0006741529999999968, 0.0006741670000000033, 0.0006960690000000005, 0.0006741659999999969, 0.0006741529999999968, 0.000674111000000005, 0.0006741109999999981, 0.0006741529999999968, 0.0006741529999999968, 0.0006741670000000033, 0.0006740839999999915, 0.0006741939999999891, 0.0006741390000000042, 0.0006741389999999903, 0.0006742220000000021, 0.0006741380000000047, 0.0006741519999999973, 0.0006741660000000038, 0.0006741389999999903, 0.0006741529999999968, 0.0006741530000000107, 0.0006740969999999985, 0.0006741669999999894, 0.0006741530000000107, 0.0006741670000000033, 0.0006741530000000107, 0.0006741250000000115, 0.0006741249999999976]</msg>
<status status="PASS" starttime="20201030 18:27:42.100" endtime="20201030 18:27:42.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.089" endtime="20201030 18:27:42.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.125" endtime="20201030 18:27:42.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.119" endtime="20201030 18:27:42.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.116" endtime="20201030 18:27:42.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.569" endtime="20201030 18:27:42.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.568" endtime="20201030 18:27:42.151"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.174" endtime="20201030 18:27:42.222"></status>
</kw>
<msg timestamp="20201030 18:27:42.224" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.170" endtime="20201030 18:27:42.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.230" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.226" endtime="20201030 18:27:42.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.232" endtime="20201030 18:27:42.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.162" endtime="20201030 18:27:42.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.157" endtime="20201030 18:27:42.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.258" endtime="20201030 18:27:42.615"></status>
</kw>
<msg timestamp="20201030 18:27:42.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.254" endtime="20201030 18:27:42.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039948514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.625" endtime="20201030 18:27:42.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.644" endtime="20201030 18:27:42.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.246" endtime="20201030 18:27:42.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.241" endtime="20201030 18:27:42.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:42.662" level="INFO">${PHILIP_RES} = [{'diff': 0.0007068199999999969}, {'diff': 0.0007067779999999982}, {'diff': 0.0007067779999999982}, {'diff': 0.0007067779999999982}, {'diff': 0.0007067780000000051}, {'diff': 0.000706749999999999}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:42.653" endtime="20201030 18:27:42.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:42.673" level="INFO">${RESULT} = {'diff': [0.0007068199999999969, 0.0007067779999999982, 0.0007067779999999982, 0.0007067779999999982, 0.0007067780000000051, 0.000706749999999999, 0.0007068049999999979, 0.0007067639999999986, 0.00070...</msg>
<status status="PASS" starttime="20201030 18:27:42.664" endtime="20201030 18:27:42.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.684" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:42.682" endtime="20201030 18:27:42.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.690" level="INFO">VALUE: [0.0007068199999999969, 0.0007067779999999982, 0.0007067779999999982, 0.0007067779999999982, 0.0007067780000000051, 0.000706749999999999, 0.0007068049999999979, 0.0007067639999999986, 0.000706749999999999, 0.0007067629999999991, 0.0007067919999999978, 0.0007067779999999982, 0.0007067779999999982, 0.0007067770000000057, 0.0007067780000000051, 0.0007067779999999982, 0.0007067639999999986, 0.000706749999999999, 0.000706832999999997, 0.0007067639999999986, 0.0007067639999999986, 0.0007067919999999978, 0.0007067910000000052, 0.0007068470000000035, 0.0007067640000000056, 0.000706749999999999, 0.0007067769999999987, 0.000706749999999999, 0.0007067639999999986, 0.0007067779999999982, 0.0007067770000000057, 0.0007067230000000063, 0.0007067780000000051, 0.0007341110000000095, 0.0007067780000000051, 0.0007067780000000051, 0.0007067779999999912, 0.0007067499999999921, 0.0007067639999999986, 0.0007067499999999921, 0.0007067639999999986, 0.0007067919999999978, 0.0007067909999999983, 0.0007067640000000125, 0.0007067639999999986, 0.0007067639999999986, 0.0007067629999999991, 0.0007067639999999986, 0.0007067499999999921, 0.0007067080000000003]</msg>
<status status="PASS" starttime="20201030 18:27:42.686" endtime="20201030 18:27:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.675" endtime="20201030 18:27:42.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:42.703" endtime="20201030 18:27:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.698" endtime="20201030 18:27:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.696" endtime="20201030 18:27:42.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.153" endtime="20201030 18:27:42.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.152" endtime="20201030 18:27:42.728"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.752" endtime="20201030 18:27:42.801"></status>
</kw>
<msg timestamp="20201030 18:27:42.802" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.748" endtime="20201030 18:27:42.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:42.809" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:42.805" endtime="20201030 18:27:42.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.811" endtime="20201030 18:27:42.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.740" endtime="20201030 18:27:42.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.735" endtime="20201030 18:27:42.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:42.836" endtime="20201030 18:27:43.197"></status>
</kw>
<msg timestamp="20201030 18:27:43.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:42.833" endtime="20201030 18:27:43.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039459944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040200097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.207" endtime="20201030 18:27:43.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.226" endtime="20201030 18:27:43.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.825" endtime="20201030 18:27:43.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.820" endtime="20201030 18:27:43.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.243" level="INFO">${PHILIP_RES} = [{'diff': 0.0007401530000000003}, {'diff': 0.0007401939999999996}, {'diff': 0.0007401530000000003}, {'diff': 0.0007401110000000016}, {'diff': 0.0007401389999999938}, {'diff': 0.000766929999999999}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:43.235" endtime="20201030 18:27:43.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.255" level="INFO">${RESULT} = {'diff': [0.0007401530000000003, 0.0007401939999999996, 0.0007401530000000003, 0.0007401110000000016, 0.0007401389999999938, 0.000766929999999999, 0.0007401520000000009, 0.0007401530000000003, 0.00074...</msg>
<status status="PASS" starttime="20201030 18:27:43.245" endtime="20201030 18:27:43.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.266" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.263" endtime="20201030 18:27:43.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.271" level="INFO">VALUE: [0.0007401530000000003, 0.0007401939999999996, 0.0007401530000000003, 0.0007401110000000016, 0.0007401389999999938, 0.000766929999999999, 0.0007401520000000009, 0.0007401530000000003, 0.0007401520000000009, 0.0007401530000000003, 0.0007400690000000029, 0.0007401389999999938, 0.0007401530000000003, 0.0007401519999999939, 0.0007401530000000003, 0.0007401520000000009, 0.0007401390000000008, 0.0007401530000000003, 0.0007401660000000004, 0.0007401390000000008, 0.0007401380000000013, 0.0007401669999999999, 0.0007401390000000008, 0.0007401390000000008, 0.0007401669999999999, 0.0007401530000000003, 0.0007400829999999955, 0.0007401660000000004, 0.0007401530000000003, 0.0007401389999999938, 0.0007401390000000008, 0.0007401529999999934, 0.0007401390000000008, 0.0007402089999999917, 0.0007401520000000078, 0.0007401250000000081, 0.0007401390000000008, 0.0007401530000000073, 0.0007401390000000008, 0.0007401660000000004, 0.000740194999999999, 0.0007400830000000025, 0.0007401390000000008, 0.0007401530000000073, 0.0007401530000000073, 0.0007401529999999934, 0.0007401660000000004, 0.0007588060000000008, 0.0007401799999999931, 0.0007401519999999939]</msg>
<status status="PASS" starttime="20201030 18:27:43.268" endtime="20201030 18:27:43.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.257" endtime="20201030 18:27:43.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.285" endtime="20201030 18:27:43.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.280" endtime="20201030 18:27:43.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.278" endtime="20201030 18:27:43.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.731" endtime="20201030 18:27:43.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:42.729" endtime="20201030 18:27:43.311"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.334" endtime="20201030 18:27:43.385"></status>
</kw>
<msg timestamp="20201030 18:27:43.387" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.330" endtime="20201030 18:27:43.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.393" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.389" endtime="20201030 18:27:43.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.395" endtime="20201030 18:27:43.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.322" endtime="20201030 18:27:43.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.317" endtime="20201030 18:27:43.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.420" endtime="20201030 18:27:43.769"></status>
</kw>
<msg timestamp="20201030 18:27:43.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.417" endtime="20201030 18:27:43.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.774" endtime="20201030 18:27:43.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.782" endtime="20201030 18:27:43.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.409" endtime="20201030 18:27:43.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.404" endtime="20201030 18:27:43.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:43.790" level="INFO">${PHILIP_RES} = [{'diff': 0.000774333000000002}, {'diff': 0.0007743060000000024}, {'diff': 0.0007743050000000029}, {'diff': 0.0007742910000000033}, {'diff': 0.0007742920000000028}, {'diff': 0.0007742779999999963}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:43.786" endtime="20201030 18:27:43.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:43.794" level="INFO">${RESULT} = {'diff': [0.000774333000000002, 0.0007743060000000024, 0.0007743050000000029, 0.0007742910000000033, 0.0007742920000000028, 0.0007742779999999963, 0.0007742919999999959, 0.0007742909999999964, 0.00077...</msg>
<status status="PASS" starttime="20201030 18:27:43.791" endtime="20201030 18:27:43.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.799" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:43.798" endtime="20201030 18:27:43.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.802" level="INFO">VALUE: [0.000774333000000002, 0.0007743060000000024, 0.0007743050000000029, 0.0007742910000000033, 0.0007742920000000028, 0.0007742779999999963, 0.0007742919999999959, 0.0007742909999999964, 0.0007742919999999959, 0.0007742910000000033, 0.0007743890000000003, 0.0007742910000000033, 0.0007742920000000028, 0.000774333000000002, 0.0007742919999999959, 0.0007880839999999945, 0.0007742919999999959, 0.0007742919999999959, 0.0007743050000000029, 0.0007742920000000028, 0.0007742920000000028, 0.0007742640000000037, 0.0007743190000000025, 0.0007743340000000015, 0.0007742779999999963, 0.0007742919999999959, 0.0007742779999999963, 0.0007742920000000028, 0.0007743189999999955, 0.0007742780000000032, 0.0007742779999999894, 0.0007742920000000098, 0.0007742920000000098, 0.0007742780000000032, 0.0007742919999999959, 0.0007742919999999959, 0.0007743060000000024, 0.0007743189999999955, 0.0007742919999999959, 0.0007742919999999959, 0.0007742919999999959, 0.0007742910000000103, 0.0007743190000000094, 0.0007743050000000029, 0.0007742920000000098, 0.0007742909999999964, 0.0007742359999999976, 0.0007742909999999964, 0.0007742919999999959, 0.0007742920000000098]</msg>
<status status="PASS" starttime="20201030 18:27:43.801" endtime="20201030 18:27:43.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.795" endtime="20201030 18:27:43.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:43.808" endtime="20201030 18:27:43.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.806" endtime="20201030 18:27:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.805" endtime="20201030 18:27:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.313" endtime="20201030 18:27:43.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.311" endtime="20201030 18:27:43.829"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.840" endtime="20201030 18:27:43.892"></status>
</kw>
<msg timestamp="20201030 18:27:43.893" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.839" endtime="20201030 18:27:43.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:43.896" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:43.894" endtime="20201030 18:27:43.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.898" endtime="20201030 18:27:43.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.835" endtime="20201030 18:27:43.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.832" endtime="20201030 18:27:43.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:43.910" endtime="20201030 18:27:44.256"></status>
</kw>
<msg timestamp="20201030 18:27:44.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:43.909" endtime="20201030 18:27:44.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.266" endtime="20201030 18:27:44.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.285" endtime="20201030 18:27:44.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.905" endtime="20201030 18:27:44.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.902" endtime="20201030 18:27:44.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.302" level="INFO">${PHILIP_RES} = [{'diff': 0.0008091799999999996}, {'diff': 0.000809153}, {'diff': 0.0008092080000000022}, {'diff': 0.0008092229999999978}, {'diff': 0.0008091249999999973}, {'diff': 0.0008091950000000021}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:27:44.294" endtime="20201030 18:27:44.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.311" level="INFO">${RESULT} = {'diff': [0.0008091799999999996, 0.000809153, 0.0008092080000000022, 0.0008092229999999978, 0.0008091249999999973, 0.0008091950000000021, 0.0008092079999999988, 0.000809153, 0.0008091939999999992, 0.0...</msg>
<status status="PASS" starttime="20201030 18:27:44.304" endtime="20201030 18:27:44.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.323" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.320" endtime="20201030 18:27:44.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.328" level="INFO">VALUE: [0.0008091799999999996, 0.000809153, 0.0008092080000000022, 0.0008092229999999978, 0.0008091249999999973, 0.0008091950000000021, 0.0008092079999999988, 0.000809153, 0.0008091939999999992, 0.0008091949999999987, 0.0008091390000000004, 0.0008092079999999988, 0.0008091669999999995, 0.000809166, 0.0008092370000000043, 0.0008091939999999992, 0.0008091949999999987, 0.000809166, 0.0008091809999999991, 0.000809166, 0.0008092229999999978, 0.000809166, 0.0008091949999999987, 0.0008091799999999996, 0.0008091950000000056, 0.0008092079999999988, 0.0008091809999999991, 0.0008092079999999988, 0.0008092219999999983, 0.0008091800000000066, 0.0008091949999999987, 0.0008092079999999988, 0.0008091939999999992, 0.0008091809999999991, 0.0008092080000000057, 0.0008091809999999991, 0.0008224579999999981, 0.0008092089999999982, 0.0008091799999999996, 0.0008092090000000052, 0.0008091799999999996, 0.0008092089999999982, 0.0008092079999999988, 0.0008091949999999987, 0.0008091799999999996, 0.0008092219999999983, 0.0008091940000000061, 0.0008091809999999922, 0.0008091939999999992, 0.000809166]</msg>
<status status="PASS" starttime="20201030 18:27:44.325" endtime="20201030 18:27:44.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.313" endtime="20201030 18:27:44.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.343" endtime="20201030 18:27:44.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.337" endtime="20201030 18:27:44.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.334" endtime="20201030 18:27:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.830" endtime="20201030 18:27:44.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:43.830" endtime="20201030 18:27:44.369"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.392" endtime="20201030 18:27:44.448"></status>
</kw>
<msg timestamp="20201030 18:27:44.449" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.388" endtime="20201030 18:27:44.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.456" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.451" endtime="20201030 18:27:44.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.458" endtime="20201030 18:27:44.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.381" endtime="20201030 18:27:44.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.375" endtime="20201030 18:27:44.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.483" endtime="20201030 18:27:44.843"></status>
</kw>
<msg timestamp="20201030 18:27:44.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.479" endtime="20201030 18:27:44.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039222611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:44.852" endtime="20201030 18:27:44.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.871" endtime="20201030 18:27:44.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.472" endtime="20201030 18:27:44.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.467" endtime="20201030 18:27:44.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:44.888" level="INFO">${PHILIP_RES} = [{'diff': 0.0008449449999999997}, {'diff': 0.0008448620000000018}, {'diff': 0.0008448200000000031}, {'diff': 0.0008629999999999957}, {'diff': 0.0008448890000000014}, {'diff': 0.0008448609999999954}, {...</msg>
<status status="PASS" starttime="20201030 18:27:44.880" endtime="20201030 18:27:44.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:44.899" level="INFO">${RESULT} = {'diff': [0.0008449449999999997, 0.0008448620000000018, 0.0008448200000000031, 0.0008629999999999957, 0.0008448890000000014, 0.0008448609999999954, 0.0008448890000000014, 0.0008448750000000019, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:27:44.891" endtime="20201030 18:27:44.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.911" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:44.908" endtime="20201030 18:27:44.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.917" level="INFO">VALUE: [0.0008449449999999997, 0.0008448620000000018, 0.0008448200000000031, 0.0008629999999999957, 0.0008448890000000014, 0.0008448609999999954, 0.0008448890000000014, 0.0008448750000000019, 0.0008448890000000014, 0.0008448750000000019, 0.0008448609999999954, 0.0008448750000000019, 0.0008449170000000006, 0.000844903000000001, 0.0008448609999999954, 0.0008448330000000032, 0.0008448890000000014, 0.0008448610000000023, 0.0008448750000000019, 0.0008448049999999971, 0.0008448890000000014, 0.0008448889999999945, 0.0008448750000000019, 0.0008448749999999949, 0.0008448750000000019, 0.0008448750000000019, 0.0008448749999999949, 0.0008448610000000023, 0.0008448329999999893, 0.0008448469999999958, 0.0008449310000000071, 0.0008448890000000014, 0.0008448890000000014, 0.0008449029999999941, 0.0008448890000000014, 0.0008448199999999961, 0.0008448750000000088, 0.0008448890000000014, 0.0008448890000000014, 0.0008727500000000055, 0.0008448890000000014, 0.0008448469999999958, 0.0008448469999999958, 0.0008448469999999958, 0.0008448610000000023, 0.0008448610000000023, 0.0008448610000000023, 0.0008448610000000023, 0.0008448749999999949, 0.0008448610000000023]</msg>
<status status="PASS" starttime="20201030 18:27:44.913" endtime="20201030 18:27:44.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.901" endtime="20201030 18:27:44.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.931" endtime="20201030 18:27:44.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.926" endtime="20201030 18:27:44.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.923" endtime="20201030 18:27:44.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.371" endtime="20201030 18:27:44.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.370" endtime="20201030 18:27:44.957"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.980" endtime="20201030 18:27:45.038"></status>
</kw>
<msg timestamp="20201030 18:27:45.039" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.977" endtime="20201030 18:27:45.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.045" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.041" endtime="20201030 18:27:45.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.048" endtime="20201030 18:27:45.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.969" endtime="20201030 18:27:45.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.963" endtime="20201030 18:27:45.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.073" endtime="20201030 18:27:45.418"></status>
</kw>
<msg timestamp="20201030 18:27:45.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039632597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040513903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.069" endtime="20201030 18:27:45.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039632597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040513903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.427" endtime="20201030 18:27:45.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.445" endtime="20201030 18:27:45.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.061" endtime="20201030 18:27:45.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.056" endtime="20201030 18:27:45.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:45.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0008813059999999984}, {'diff': 0.0008813339999999975}, {'diff': 0.0008813060000000053}, {'diff': 0.0008813340000000044}, {'diff': 0.0009113469999999999}, {'diff': 0.0008813060000000053}, {...</msg>
<status status="PASS" starttime="20201030 18:27:45.453" endtime="20201030 18:27:45.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:45.471" level="INFO">${RESULT} = {'diff': [0.0008813059999999984, 0.0008813339999999975, 0.0008813060000000053, 0.0008813340000000044, 0.0009113469999999999, 0.0008813060000000053, 0.0008813199999999979, 0.0008813059999999984, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:27:45.463" endtime="20201030 18:27:45.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.482" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:45.480" endtime="20201030 18:27:45.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.487" level="INFO">VALUE: [0.0008813059999999984, 0.0008813339999999975, 0.0008813060000000053, 0.0008813340000000044, 0.0009113469999999999, 0.0008813060000000053, 0.0008813199999999979, 0.0008813059999999984, 0.0008812919999999988, 0.0008812919999999988, 0.0008813049999999989, 0.0008813470000000045, 0.0008813469999999976, 0.0008813609999999972, 0.0008813059999999984, 0.0008812919999999988, 0.0008812919999999988, 0.0008813199999999979, 0.0008812919999999988, 0.0008813060000000053, 0.0008813479999999971, 0.0008813049999999989, 0.0008813050000000058, 0.0008812909999999993, 0.0008813189999999985, 0.0008813049999999989, 0.0008813050000000128, 0.0008813059999999984, 0.0008813059999999984, 0.0008812920000000057, 0.0008813059999999984, 0.0008813059999999984, 0.0008812920000000057, 0.000881319999999991, 0.0008813049999999989, 0.0008812909999999924, 0.0008813609999999972, 0.0008813749999999898, 0.0008813470000000045, 0.0009119029999999917, 0.0008812920000000057, 0.0008812639999999927, 0.0008813059999999984, 0.0008813050000000128, 0.0008813609999999972, 0.0008813189999999915, 0.0008813049999999989, 0.0008813049999999989, 0.0008812920000000057, 0.0008812910000000063]</msg>
<status status="PASS" starttime="20201030 18:27:45.484" endtime="20201030 18:27:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.473" endtime="20201030 18:27:45.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:45.500" endtime="20201030 18:27:45.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.495" endtime="20201030 18:27:45.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.493" endtime="20201030 18:27:45.523"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.959" endtime="20201030 18:27:45.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.958" endtime="20201030 18:27:45.524"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.546" endtime="20201030 18:27:45.605"></status>
</kw>
<msg timestamp="20201030 18:27:45.606" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.543" endtime="20201030 18:27:45.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.612" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:45.608" endtime="20201030 18:27:45.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.614" endtime="20201030 18:27:45.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.536" endtime="20201030 18:27:45.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.530" endtime="20201030 18:27:45.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:45.638" endtime="20201030 18:27:45.974"></status>
</kw>
<msg timestamp="20201030 18:27:45.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036705042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037623528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.634" endtime="20201030 18:27:45.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:45.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036705042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037623528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:45.983" endtime="20201030 18:27:46.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.002" endtime="20201030 18:27:46.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.627" endtime="20201030 18:27:46.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.623" endtime="20201030 18:27:46.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.019" level="INFO">${PHILIP_RES} = [{'diff': 0.0009184860000000031}, {'diff': 0.0009184999999999957}, {'diff': 0.0009185140000000022}, {'diff': 0.0009185000000000026}, {'diff': 0.0009185000000000026}, {'diff': 0.0009184999999999957}, {...</msg>
<status status="PASS" starttime="20201030 18:27:46.011" endtime="20201030 18:27:46.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.028" level="INFO">${RESULT} = {'diff': [0.0009184860000000031, 0.0009184999999999957, 0.0009185140000000022, 0.0009185000000000026, 0.0009185000000000026, 0.0009184999999999957, 0.000918457999999997, 0.0009185140000000022, 0.00091...</msg>
<status status="PASS" starttime="20201030 18:27:46.021" endtime="20201030 18:27:46.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.038" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.036" endtime="20201030 18:27:46.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.044" level="INFO">VALUE: [0.0009184860000000031, 0.0009184999999999957, 0.0009185140000000022, 0.0009185000000000026, 0.0009185000000000026, 0.0009184999999999957, 0.000918457999999997, 0.0009185140000000022, 0.0009185410000000019, 0.0009185000000000026, 0.0009185140000000022, 0.0009184859999999961, 0.0009185280000000018, 0.0009185280000000018, 0.0009185280000000018, 0.0009184999999999957, 0.0009184719999999966, 0.0009185280000000018, 0.0009185140000000022, 0.0009184720000000035, 0.0009184999999999957, 0.0009184999999999957, 0.0009185140000000022, 0.0009185140000000022, 0.0009185000000000026, 0.0009184999999999957, 0.0009184300000000048, 0.0009184439999999905, 0.0009185000000000026, 0.0009480000000000044, 0.0009185139999999953, 0.0009185420000000083, 0.0009185129999999958, 0.0009185000000000026, 0.0009185420000000083, 0.0009185270000000023, 0.0009184999999999888, 0.0009184999999999888, 0.0009185000000000026, 0.0009184870000000095, 0.00091848600000001, 0.0009185139999999953, 0.0009185139999999953, 0.00091848600000001, 0.0009185280000000018, 0.0009185000000000026, 0.0009184999999999888, 0.0009185140000000092, 0.0009185140000000092, 0.0009185689999999941]</msg>
<status status="PASS" starttime="20201030 18:27:46.041" endtime="20201030 18:27:46.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.030" endtime="20201030 18:27:46.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.057" endtime="20201030 18:27:46.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.052" endtime="20201030 18:27:46.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.050" endtime="20201030 18:27:46.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.527" endtime="20201030 18:27:46.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:45.525" endtime="20201030 18:27:46.083"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.105" endtime="20201030 18:27:46.173"></status>
</kw>
<msg timestamp="20201030 18:27:46.174" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.102" endtime="20201030 18:27:46.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.181" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.177" endtime="20201030 18:27:46.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.183" endtime="20201030 18:27:46.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.094" endtime="20201030 18:27:46.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.089" endtime="20201030 18:27:46.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.207" endtime="20201030 18:27:46.560"></status>
</kw>
<msg timestamp="20201030 18:27:46.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044774917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045731403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.203" endtime="20201030 18:27:46.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044774917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045731403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.569" endtime="20201030 18:27:46.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.588" endtime="20201030 18:27:46.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.196" endtime="20201030 18:27:46.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.191" endtime="20201030 18:27:46.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:46.604" level="INFO">${PHILIP_RES} = [{'diff': 0.0009564859999999994}, {'diff': 0.0009564719999999999}, {'diff': 0.0009564589999999998}, {'diff': 0.0009564450000000002}, {'diff': 0.0009564859999999994}, {'diff': 0.0009564859999999994}, {...</msg>
<status status="PASS" starttime="20201030 18:27:46.596" endtime="20201030 18:27:46.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:46.613" level="INFO">${RESULT} = {'diff': [0.0009564859999999994, 0.0009564719999999999, 0.0009564589999999998, 0.0009564450000000002, 0.0009564859999999994, 0.0009564859999999994, 0.0009564300000000012, 0.0009564730000000063, 0.0009...</msg>
<status status="PASS" starttime="20201030 18:27:46.606" endtime="20201030 18:27:46.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.624" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:46.621" endtime="20201030 18:27:46.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.629" level="INFO">VALUE: [0.0009564859999999994, 0.0009564719999999999, 0.0009564589999999998, 0.0009564450000000002, 0.0009564859999999994, 0.0009564859999999994, 0.0009564300000000012, 0.0009564730000000063, 0.0009564029999999946, 0.0009564580000000003, 0.0009564440000000007, 0.0009564450000000002, 0.0009564580000000003, 0.0009564580000000003, 0.0009564160000000016, 0.0009564729999999994, 0.0009564589999999998, 0.0009564720000000068, 0.0009564580000000072, 0.0009564859999999925, 0.0009838199999999964, 0.0009564579999999934, 0.0009564590000000067, 0.0009564309999999937, 0.0009564870000000059, 0.0009564579999999934, 0.0009564440000000007, 0.0009564590000000067, 0.0009564719999999999, 0.0009564299999999942, 0.0009564860000000064, 0.0009564589999999928, 0.0009564450000000002, 0.0009564439999999869, 0.0009564579999999934, 0.0009564719999999999, 0.0009564729999999994, 0.0009564440000000007, 0.0009564579999999934, 0.0009565279999999982, 0.0009564729999999994, 0.0009564860000000064, 0.0009564579999999934, 0.0009564719999999999, 0.0009564589999999928, 0.0009564579999999934, 0.0009565140000000055, 0.0009564579999999934, 0.0009564729999999994, 0.0009564860000000064]</msg>
<status status="PASS" starttime="20201030 18:27:46.626" endtime="20201030 18:27:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.615" endtime="20201030 18:27:46.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:46.643" endtime="20201030 18:27:46.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.638" endtime="20201030 18:27:46.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.635" endtime="20201030 18:27:46.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.085" endtime="20201030 18:27:46.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.084" endtime="20201030 18:27:46.669"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.692" endtime="20201030 18:27:46.755"></status>
</kw>
<msg timestamp="20201030 18:27:46.756" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.688" endtime="20201030 18:27:46.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:46.762" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:46.758" endtime="20201030 18:27:46.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.765" endtime="20201030 18:27:46.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.681" endtime="20201030 18:27:46.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.675" endtime="20201030 18:27:46.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:46.788" endtime="20201030 18:27:47.130"></status>
</kw>
<msg timestamp="20201030 18:27:47.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038768597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:46.785" endtime="20201030 18:27:47.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038768597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039763764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.140" endtime="20201030 18:27:47.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.158" endtime="20201030 18:27:47.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.778" endtime="20201030 18:27:47.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.773" endtime="20201030 18:27:47.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.173" level="INFO">${PHILIP_RES} = [{'diff': 0.0009951669999999982}, {'diff': 0.0009952359999999966}, {'diff': 0.0009952079999999974}, {'diff': 0.0009951950000000043}, {'diff': 0.0009951800000000052}, {'diff': 0.0009951670000000051}, {...</msg>
<status status="PASS" starttime="20201030 18:27:47.166" endtime="20201030 18:27:47.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.184" level="INFO">${RESULT} = {'diff': [0.0009951669999999982, 0.0009952359999999966, 0.0009952079999999974, 0.0009951950000000043, 0.0009951800000000052, 0.0009951670000000051, 0.000995139000000006, 0.0009951939999999979, 0.00099...</msg>
<status status="PASS" starttime="20201030 18:27:47.176" endtime="20201030 18:27:47.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.194" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.192" endtime="20201030 18:27:47.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.199" level="INFO">VALUE: [0.0009951669999999982, 0.0009952359999999966, 0.0009952079999999974, 0.0009951950000000043, 0.0009951800000000052, 0.0009951670000000051, 0.000995139000000006, 0.0009951939999999979, 0.0009952079999999974, 0.0009952079999999974, 0.0009951939999999979, 0.0009951809999999978, 0.0009951939999999979, 0.0009951799999999983, 0.000995208999999997, 0.0009951799999999983, 0.0009951940000000048, 0.0009951810000000047, 0.0009951940000000048, 0.0009951670000000051, 0.0009951950000000043, 0.0009951939999999979, 0.0009952080000000044, 0.0009951810000000116, 0.0009951799999999983, 0.0009951950000000043, 0.0009951950000000043, 0.0009951799999999983, 0.0010214169999999967, 0.0009951799999999983, 0.0009951940000000048, 0.0009951529999999986, 0.0009951519999999991, 0.0009951940000000048, 0.0009951950000000043, 0.0009951799999999983, 0.0009951949999999904, 0.0009951949999999904, 0.0009951529999999986, 0.0009952090000000108, 0.0009951950000000043, 0.0009951660000000057, 0.0009951809999999978, 0.0009951799999999983, 0.000995222000000004, 0.0009951809999999978, 0.0009951659999999918, 0.0009952079999999974, 0.0009951950000000043, 0.0009952079999999974]</msg>
<status status="PASS" starttime="20201030 18:27:47.197" endtime="20201030 18:27:47.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.186" endtime="20201030 18:27:47.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.218" endtime="20201030 18:27:47.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.214" endtime="20201030 18:27:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.211" endtime="20201030 18:27:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.671" endtime="20201030 18:27:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:46.670" endtime="20201030 18:27:47.243"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.265" endtime="20201030 18:27:47.329"></status>
</kw>
<msg timestamp="20201030 18:27:47.331" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.261" endtime="20201030 18:27:47.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.337" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.333" endtime="20201030 18:27:47.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.339" endtime="20201030 18:27:47.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.254" endtime="20201030 18:27:47.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.249" endtime="20201030 18:27:47.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.362" endtime="20201030 18:27:47.705"></status>
</kw>
<msg timestamp="20201030 18:27:47.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037160361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.359" endtime="20201030 18:27:47.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037160361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038195042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.715" endtime="20201030 18:27:47.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.733" endtime="20201030 18:27:47.737"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.352" endtime="20201030 18:27:47.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.347" endtime="20201030 18:27:47.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:47.749" level="INFO">${PHILIP_RES} = [{'diff': 0.0010346809999999956}, {'diff': 0.0010346810000000026}, {'diff': 0.0010346950000000021}, {'diff': 0.0010346810000000026}, {'diff': 0.0010346810000000026}, {'diff': 0.001034750000000001}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:47.741" endtime="20201030 18:27:47.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:47.760" level="INFO">${RESULT} = {'diff': [0.0010346809999999956, 0.0010346810000000026, 0.0010346950000000021, 0.0010346810000000026, 0.0010346810000000026, 0.001034750000000001, 0.001034680000000003, 0.0010346939999999957, 0.001034...</msg>
<status status="PASS" starttime="20201030 18:27:47.751" endtime="20201030 18:27:47.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.770" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:47.768" endtime="20201030 18:27:47.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.775" level="INFO">VALUE: [0.0010346809999999956, 0.0010346810000000026, 0.0010346950000000021, 0.0010346810000000026, 0.0010346810000000026, 0.001034750000000001, 0.001034680000000003, 0.0010346939999999957, 0.0010346809999999956, 0.0010346799999999962, 0.0010346659999999966, 0.001034680000000003, 0.0010346660000000035, 0.0010346530000000034, 0.0010347370000000009, 0.0010346949999999952, 0.0010347229999999943, 0.0010347089999999948, 0.001034666999999996, 0.0010346530000000034, 0.001034667000000003, 0.001034667000000003, 0.001034680000000003, 0.001034680000000003, 0.0010346940000000027, 0.0010347639999999936, 0.0010346799999999962, 0.0010347079999999953, 0.0010346940000000027, 0.0010346940000000027, 0.0010346249999999974, 0.0010347230000000013, 0.0010346950000000021, 0.0010346529999999965, 0.001034667000000003, 0.0010346950000000021, 0.0010346529999999965, 0.0010346950000000021, 0.0010346809999999956, 0.0010346809999999956, 0.001034750000000001, 0.0010346799999999962, 0.0010680690000000048, 0.0010346810000000095, 0.0010346390000000039, 0.0010346390000000039, 0.0010346809999999956, 0.0010346809999999956, 0.0010346809999999956, 0.0010346809999999956]</msg>
<status status="PASS" starttime="20201030 18:27:47.772" endtime="20201030 18:27:47.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.761" endtime="20201030 18:27:47.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:47.788" endtime="20201030 18:27:47.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.783" endtime="20201030 18:27:47.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.781" endtime="20201030 18:27:47.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.245" endtime="20201030 18:27:47.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.244" endtime="20201030 18:27:47.813"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.834" endtime="20201030 18:27:47.901"></status>
</kw>
<msg timestamp="20201030 18:27:47.902" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.831" endtime="20201030 18:27:47.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.908" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.904" endtime="20201030 18:27:47.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.910" endtime="20201030 18:27:47.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.824" endtime="20201030 18:27:47.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.819" endtime="20201030 18:27:47.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.933" endtime="20201030 18:27:48.264"></status>
</kw>
<msg timestamp="20201030 18:27:48.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036957556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038032486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:47.930" endtime="20201030 18:27:48.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036957556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038032486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.268" endtime="20201030 18:27:48.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.276" endtime="20201030 18:27:48.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.923" endtime="20201030 18:27:48.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.918" endtime="20201030 18:27:48.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.284" level="INFO">${PHILIP_RES} = [{'diff': 0.0010749299999999948}, {'diff': 0.0010749029999999951}, {'diff': 0.001074874999999996}, {'diff': 0.0010749450000000008}, {'diff': 0.0010749450000000008}, {'diff': 0.0010749450000000008}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:48.280" endtime="20201030 18:27:48.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.288" level="INFO">${RESULT} = {'diff': [0.0010749299999999948, 0.0010749029999999951, 0.001074874999999996, 0.0010749450000000008, 0.0010749450000000008, 0.0010749450000000008, 0.0010749309999999943, 0.0010749439999999943, 0.00107...</msg>
<status status="PASS" starttime="20201030 18:27:48.285" endtime="20201030 18:27:48.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.293" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.292" endtime="20201030 18:27:48.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.296" level="INFO">VALUE: [0.0010749299999999948, 0.0010749029999999951, 0.001074874999999996, 0.0010749450000000008, 0.0010749450000000008, 0.0010749450000000008, 0.0010749309999999943, 0.0010749439999999943, 0.0010749300000000017, 0.0010749300000000017, 0.0010749440000000013, 0.0010749590000000003, 0.0010749449999999938, 0.0010749310000000012, 0.0010749170000000016, 0.0010749440000000013, 0.0010749160000000021, 0.0010749440000000013, 0.0010749309999999943, 0.0010749310000000012, 0.0010749310000000012, 0.0010749450000000008, 0.001074986, 0.0010749719999999935, 0.0010749440000000082, 0.0010749440000000082, 0.0010749310000000012, 0.0010749169999999947, 0.0010749449999999938, 0.0010749310000000012, 0.0011066379999999931, 0.0010749310000000012, 0.0010749590000000003, 0.0010749440000000082, 0.0010749310000000012, 0.0010749300000000017, 0.0010749300000000017, 0.0010749310000000012, 0.0010749310000000012, 0.0010749590000000003, 0.0010749310000000012, 0.0010749300000000017, 0.0010749300000000017, 0.001074916000000009, 0.0010749440000000082, 0.0010749310000000012, 0.0010749590000000003, 0.0010749310000000012, 0.0010749310000000012, 0.0010749300000000017]</msg>
<status status="PASS" starttime="20201030 18:27:48.294" endtime="20201030 18:27:48.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.289" endtime="20201030 18:27:48.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.302" endtime="20201030 18:27:48.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.300" endtime="20201030 18:27:48.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.298" endtime="20201030 18:27:48.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.815" endtime="20201030 18:27:48.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.813" endtime="20201030 18:27:48.327"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.349" endtime="20201030 18:27:48.420"></status>
</kw>
<msg timestamp="20201030 18:27:48.421" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.346" endtime="20201030 18:27:48.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.427" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.423" endtime="20201030 18:27:48.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.429" endtime="20201030 18:27:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.339" endtime="20201030 18:27:48.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.333" endtime="20201030 18:27:48.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.452" endtime="20201030 18:27:48.786"></status>
</kw>
<msg timestamp="20201030 18:27:48.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040128361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.449" endtime="20201030 18:27:48.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040128361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.795" endtime="20201030 18:27:48.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.813" endtime="20201030 18:27:48.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.442" endtime="20201030 18:27:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.438" endtime="20201030 18:27:48.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:27:48.829" level="INFO">${PHILIP_RES} = [{'diff': 0.0011159450000000001}, {'diff': 0.001115888999999995}, {'diff': 0.0011159440000000007}, {'diff': 0.0011159580000000002}, {'diff': 0.0011159580000000002}, {'diff': 0.0011159159999999946}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:48.821" endtime="20201030 18:27:48.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.838" level="INFO">${RESULT} = {'diff': [0.0011159450000000001, 0.001115888999999995, 0.0011159440000000007, 0.0011159580000000002, 0.0011159580000000002, 0.0011159159999999946, 0.0011159589999999997, 0.0011159440000000007, 0.00114...</msg>
<status status="PASS" starttime="20201030 18:27:48.831" endtime="20201030 18:27:48.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.848" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:27:48.846" endtime="20201030 18:27:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.853" level="INFO">VALUE: [0.0011159450000000001, 0.001115888999999995, 0.0011159440000000007, 0.0011159580000000002, 0.0011159580000000002, 0.0011159159999999946, 0.0011159589999999997, 0.0011159440000000007, 0.001141652, 0.0011159450000000001, 0.0011159589999999997, 0.001115930000000001, 0.0011159440000000007, 0.0011159580000000002, 0.0011159589999999997, 0.0011159580000000002, 0.0011159580000000002, 0.0011159440000000007, 0.0011159440000000007, 0.0011159449999999932, 0.001115945000000007, 0.0011159580000000002, 0.0011159580000000002, 0.0011159439999999937, 0.001115916999999994, 0.0011159730000000062, 0.0011159720000000067, 0.0011159580000000002, 0.0011159310000000006, 0.0011159449999999932, 0.0011159310000000006, 0.0011159580000000002, 0.0011159580000000002, 0.0011159310000000006, 0.0011159589999999997, 0.0011159440000000076, 0.0011378469999999974, 0.0011159719999999929, 0.0011159440000000076, 0.0011159439999999937, 0.001115945000000007, 0.0011159589999999997, 0.001115917000000008, 0.0011159719999999929, 0.0011159859999999994, 0.0011159310000000006, 0.0011159729999999923, 0.0011159580000000002, 0.0011159859999999994, 0.0011160000000000059]</msg>
<status status="PASS" starttime="20201030 18:27:48.850" endtime="20201030 18:27:48.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.839" endtime="20201030 18:27:48.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.867" endtime="20201030 18:27:48.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.861" endtime="20201030 18:27:48.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.859" endtime="20201030 18:27:48.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.329" endtime="20201030 18:27:48.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.328" endtime="20201030 18:27:48.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:21.310" endtime="20201030 18:27:48.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.902" endtime="20201030 18:27:48.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.898" endtime="20201030 18:27:48.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.895" endtime="20201030 18:27:48.926"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:17.233" endtime="20201030 18:27:48.926" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:26:44.184" endtime="20201030 18:27:48.949"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.127" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:49.143" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:49.962" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:49.123" endtime="20201030 18:27:49.963"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.969" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:27:49.966" endtime="20201030 18:27:52.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.121" endtime="20201030 18:27:52.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.977" endtime="20201030 18:27:53.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.974" endtime="20201030 18:27:53.321"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.351" endtime="20201030 18:27:53.374"></status>
</kw>
<msg timestamp="20201030 18:27:53.375" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:27:53.347" endtime="20201030 18:27:53.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.382" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 18:27:53.378" endtime="20201030 18:27:53.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:53.385" endtime="20201030 18:27:53.390"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:53.341" endtime="20201030 18:27:53.392"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:53.335" endtime="20201030 18:27:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.333" endtime="20201030 18:27:53.395"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:53.403" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:53.402" endtime="20201030 18:27:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.397" endtime="20201030 18:27:53.404"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.331" endtime="20201030 18:27:53.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.329" endtime="20201030 18:27:53.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.407" endtime="20201030 18:27:53.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.326" endtime="20201030 18:27:53.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.415" endtime="20201030 18:27:53.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.322" endtime="20201030 18:27:53.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.118" endtime="20201030 18:27:53.421"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.439" endtime="20201030 18:27:53.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.432" endtime="20201030 18:27:53.463"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.498" endtime="20201030 18:27:53.520"></status>
</kw>
<msg timestamp="20201030 18:27:53.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.494" endtime="20201030 18:27:53.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.524" endtime="20201030 18:27:53.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.537" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:53.532" endtime="20201030 18:27:53.538"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:53.487" endtime="20201030 18:27:53.540"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:53.480" endtime="20201030 18:27:53.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.477" endtime="20201030 18:27:53.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:53.553" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:53.551" endtime="20201030 18:27:53.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.545" endtime="20201030 18:27:53.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.475" endtime="20201030 18:27:53.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.473" endtime="20201030 18:27:53.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.557" endtime="20201030 18:27:53.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.469" endtime="20201030 18:27:53.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.464" endtime="20201030 18:27:53.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.429" endtime="20201030 18:27:53.566"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.592" endtime="20201030 18:27:53.609"></status>
</kw>
<msg timestamp="20201030 18:27:53.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.588" endtime="20201030 18:27:53.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.612" endtime="20201030 18:27:53.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.618" endtime="20201030 18:27:53.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.581" endtime="20201030 18:27:53.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.575" endtime="20201030 18:27:53.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.645" endtime="20201030 18:27:54.011"></status>
</kw>
<msg timestamp="20201030 18:27:54.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.642" endtime="20201030 18:27:54.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146028861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.021" endtime="20201030 18:27:54.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.039" endtime="20201030 18:27:54.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.634" endtime="20201030 18:27:54.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.630" endtime="20201030 18:27:54.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.057" level="INFO">${RESULT} = [{'diff': 2.9170000000189322e-06}, {'diff': 2.9719999999899827e-06}, {'diff': 2.9719999999899827e-06}, {'diff': 2.929999999984334e-06}, {'diff': 3.500000000017378e-06}, {'diff': 3.459000000011203e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:54.048" endtime="20201030 18:27:54.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:54.066" level="INFO">${ACCURACY} = {'diff': [2.9170000000189322e-06, 2.9719999999899827e-06, 2.9719999999899827e-06, 2.929999999984334e-06, 3.500000000017378e-06, 3.459000000011203e-06, 2.9029999999985456e-06, 2.9309999999838077e-06, 2...</msg>
<status status="PASS" starttime="20201030 18:27:54.059" endtime="20201030 18:27:54.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.077" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:27:54.075" endtime="20201030 18:27:54.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.082" level="INFO">VALUE: [2.9170000000189322e-06, 2.9719999999899827e-06, 2.9719999999899827e-06, 2.929999999984334e-06, 3.500000000017378e-06, 3.459000000011203e-06, 2.9029999999985456e-06, 2.9309999999838077e-06, 2.9309999999838077e-06, 3.445000000018572e-06, 2.9169999999911767e-06, 3.459000000011203e-06, 2.901999999999072e-06, 3.443999999991343e-06, 3.457999999983974e-06, 3.443999999991343e-06, 3.4309999999981855e-06, 3.459000000011203e-06, 2.9580000000251072e-06, 2.9169999999911767e-06, 3.4449999999908165e-06, 3.388999999992537e-06, 3.374999999999906e-06, 3.4309999999981855e-06, 2.9029999999985456e-06, 3.388999999992537e-06, 3.4580000000117295e-06, 2.9169999999911767e-06, 3.4309999999981855e-06, 2.9169999999911767e-06, 3.4309999999981855e-06, 2.915999999991703e-06, 2.9029999999985456e-06, 3.4309999999981855e-06, 3.443999999991343e-06, 2.9300000000120896e-06, 3.4440000000190985e-06, 2.9169999999911767e-06, 3.457999999983974e-06, 3.4449999999908165e-06, 2.901999999999072e-06, 2.9170000000189322e-06, 2.9029999999985456e-06, 3.457999999983974e-06, 2.9029999999985456e-06, 3.4440000000190985e-06, 2.9029999999985456e-06, 2.9310000000115632e-06, 2.9169999999911767e-06, 3.4449999999908165e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.079" endtime="20201030 18:27:54.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.068" endtime="20201030 18:27:54.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.095" endtime="20201030 18:27:54.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.090" endtime="20201030 18:27:54.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.087" endtime="20201030 18:27:54.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.571" endtime="20201030 18:27:54.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.569" endtime="20201030 18:27:54.120"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.143" endtime="20201030 18:27:54.160"></status>
</kw>
<msg timestamp="20201030 18:27:54.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.140" endtime="20201030 18:27:54.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.163" endtime="20201030 18:27:54.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.170" endtime="20201030 18:27:54.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.132" endtime="20201030 18:27:54.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.127" endtime="20201030 18:27:54.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.193" endtime="20201030 18:27:54.537"></status>
</kw>
<msg timestamp="20201030 18:27:54.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040821042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.190" endtime="20201030 18:27:54.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040817083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040821042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.546" endtime="20201030 18:27:54.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.565" endtime="20201030 18:27:54.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.183" endtime="20201030 18:27:54.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.178" endtime="20201030 18:27:54.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.582" level="INFO">${RESULT} = [{'diff': 3.959000000004764e-06}, {'diff': 3.971999999997922e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.4860000000049305e-06}, {'diff': 4.5000000000045e-06}, {'diff': 4.429999999999712e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:54.573" endtime="20201030 18:27:54.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:54.593" level="INFO">${ACCURACY} = {'diff': [3.959000000004764e-06, 3.971999999997922e-06, 4.485999999997992e-06, 4.4860000000049305e-06, 4.5000000000045e-06, 4.429999999999712e-06, 4.51400000000407e-06, 3.972999999997395e-06, 3.958999...</msg>
<status status="PASS" starttime="20201030 18:27:54.584" endtime="20201030 18:27:54.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.604" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:27:54.602" endtime="20201030 18:27:54.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.610" level="INFO">VALUE: [3.959000000004764e-06, 3.971999999997922e-06, 4.485999999997992e-06, 4.4860000000049305e-06, 4.5000000000045e-06, 4.429999999999712e-06, 4.51400000000407e-06, 3.972999999997395e-06, 3.958999999997825e-06, 4.4449999999987555e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 3.971999999997922e-06, 3.9999999999970615e-06, 3.9859999999974915e-06, 4.4860000000049305e-06, 3.958999999997825e-06, 4.5000000000045e-06, 3.971999999997922e-06, 4.513999999997131e-06, 3.9860000000044304e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 4.51400000000407e-06, 4.457999999998852e-06, 3.971999999997922e-06, 4.4999999999975615e-06, 3.972999999997395e-06, 4.54200000000321e-06, 4.569000000002876e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.4310000000061245e-06, 3.958000000005291e-06, 3.971999999997922e-06, 4.4999999999975615e-06, 3.957999999998352e-06, 4.055999999995341e-06, 3.9859999999974915e-06, 3.971999999997922e-06, 3.971999999997922e-06, 4.485999999997992e-06, 4.01400000000357e-06, 3.9720000000048605e-06, 3.971999999997922e-06, 3.888999999999976e-06, 3.916999999999116e-06, 3.971999999997922e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.607" endtime="20201030 18:27:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.595" endtime="20201030 18:27:54.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.621" endtime="20201030 18:27:54.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.617" endtime="20201030 18:27:54.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.615" endtime="20201030 18:27:54.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.122" endtime="20201030 18:27:54.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.121" endtime="20201030 18:27:54.650"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.683" endtime="20201030 18:27:54.701"></status>
</kw>
<msg timestamp="20201030 18:27:54.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.679" endtime="20201030 18:27:54.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.704" endtime="20201030 18:27:54.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.710" endtime="20201030 18:27:54.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.670" endtime="20201030 18:27:54.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.661" endtime="20201030 18:27:54.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.733" endtime="20201030 18:27:55.064"></status>
</kw>
<msg timestamp="20201030 18:27:55.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055442056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055447083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.730" endtime="20201030 18:27:55.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055442056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055447083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.074" endtime="20201030 18:27:55.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.092" endtime="20201030 18:27:55.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.723" endtime="20201030 18:27:55.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.718" endtime="20201030 18:27:55.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.110" level="INFO">${RESULT} = [{'diff': 5.026999999997728e-06}, {'diff': 4.513999999997131e-06}, {'diff': 5.027999999997201e-06}, {'diff': 5.54200000000421e-06}, {'diff': 4.972000000005861e-06}, {'diff': 5.57000000000335e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:55.101" endtime="20201030 18:27:55.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:55.126" level="INFO">${ACCURACY} = {'diff': [5.026999999997728e-06, 4.513999999997131e-06, 5.027999999997201e-06, 5.54200000000421e-06, 4.972000000005861e-06, 5.57000000000335e-06, 5.0139999999976315e-06, 5.5550000000043065e-06, 5.0269...</msg>
<status status="PASS" starttime="20201030 18:27:55.112" endtime="20201030 18:27:55.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.143" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:27:55.139" endtime="20201030 18:27:55.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.151" level="INFO">VALUE: [5.026999999997728e-06, 4.513999999997131e-06, 5.027999999997201e-06, 5.54200000000421e-06, 4.972000000005861e-06, 5.57000000000335e-06, 5.0139999999976315e-06, 5.5550000000043065e-06, 5.026999999997728e-06, 5.0139999999976315e-06, 5.554999999997368e-06, 5.027999999997201e-06, 5.027000000004667e-06, 5.555999999996841e-06, 5.02800000000414e-06, 5.027999999997201e-06, 5.541999999997271e-06, 5.55600000000378e-06, 4.513999999997131e-06, 5.54200000000421e-06, 5.569999999996411e-06, 5.55600000000378e-06, 4.4999999999975615e-06, 5.569999999996411e-06, 5.55600000000378e-06, 5.541999999997271e-06, 5.554999999997368e-06, 5.02800000000414e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.540999999997798e-06, 5.027999999997201e-06, 4.957999999999352e-06, 5.554999999997368e-06, 5.57000000000335e-06, 5.041999999996771e-06, 5.027000000004667e-06, 5.554999999997368e-06, 4.930999999999686e-06, 5.55600000000378e-06, 5.027999999997201e-06, 5.04200000000371e-06, 5.55600000000378e-06, 5.041999999996771e-06, 5.5689999999969375e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.02800000000414e-06, 5.57000000000335e-06, 4.9999999999980616e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.146" endtime="20201030 18:27:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.128" endtime="20201030 18:27:55.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.168" endtime="20201030 18:27:55.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.163" endtime="20201030 18:27:55.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.159" endtime="20201030 18:27:55.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.655" endtime="20201030 18:27:55.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.652" endtime="20201030 18:27:55.193"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.216" endtime="20201030 18:27:55.234"></status>
</kw>
<msg timestamp="20201030 18:27:55.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.213" endtime="20201030 18:27:55.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.238" endtime="20201030 18:27:55.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.244" endtime="20201030 18:27:55.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.206" endtime="20201030 18:27:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.200" endtime="20201030 18:27:55.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.268" endtime="20201030 18:27:55.602"></status>
</kw>
<msg timestamp="20201030 18:27:55.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.265" endtime="20201030 18:27:55.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041788722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.611" endtime="20201030 18:27:55.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.630" endtime="20201030 18:27:55.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.257" endtime="20201030 18:27:55.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.252" endtime="20201030 18:27:55.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.648" level="INFO">${RESULT} = [{'diff': 6.5969999999970774e-06}, {'diff': 6.04200000000471e-06}, {'diff': 6.09800000000299e-06}, {'diff': 6.639000000002726e-06}, {'diff': 6.610999999996647e-06}, {'diff': 6.61200000000306e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:27:55.639" endtime="20201030 18:27:55.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:55.657" level="INFO">${ACCURACY} = {'diff': [6.5969999999970774e-06, 6.04200000000471e-06, 6.09800000000299e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.61200000000306e-06, 6.083000000003946e-06, 6.111999999995621e-06, 6.555000...</msg>
<status status="PASS" starttime="20201030 18:27:55.650" endtime="20201030 18:27:55.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.668" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:27:55.666" endtime="20201030 18:27:55.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.673" level="INFO">VALUE: [6.5969999999970774e-06, 6.04200000000471e-06, 6.09800000000299e-06, 6.639000000002726e-06, 6.610999999996647e-06, 6.61200000000306e-06, 6.083000000003946e-06, 6.111999999995621e-06, 6.555000000005307e-06, 6.124999999995717e-06, 6.597999999996551e-06, 6.083000000003946e-06, 6.07000000000385e-06, 6.08400000000342e-06, 6.083000000003946e-06, 6.61200000000306e-06, 6.610999999996647e-06, 6.097000000003516e-06, 6.61200000000306e-06, 6.611000000003586e-06, 6.610999999996647e-06, 6.097000000003516e-06, 6.611000000003586e-06, 5.55600000000378e-06, 6.054999999997868e-06, 6.610999999996647e-06, 6.124999999995717e-06, 6.681000000001436e-06, 6.083999999996481e-06, 6.083000000003946e-06, 5.554999999997368e-06, 6.08400000000342e-06, 6.610999999996647e-06, 6.610999999996647e-06, 6.625000000003156e-06, 6.638999999995787e-06, 6.0690000000043764e-06, 6.0689999999974376e-06, 6.083000000003946e-06, 6.097000000003516e-06, 6.5969999999970774e-06, 6.069999999996911e-06, 6.611000000003586e-06, 6.61200000000306e-06, 6.610999999996647e-06, 6.610999999996647e-06, 5.5139999999981315e-06, 6.041000000005237e-06, 6.054999999997868e-06, 6.611000000003586e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.670" endtime="20201030 18:27:55.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.659" endtime="20201030 18:27:55.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.687" endtime="20201030 18:27:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.681" endtime="20201030 18:27:55.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.678" endtime="20201030 18:27:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.195" endtime="20201030 18:27:55.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.194" endtime="20201030 18:27:55.718"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.755" endtime="20201030 18:27:55.775"></status>
</kw>
<msg timestamp="20201030 18:27:55.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.747" endtime="20201030 18:27:55.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.779" endtime="20201030 18:27:55.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.786" endtime="20201030 18:27:55.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.736" endtime="20201030 18:27:55.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.728" endtime="20201030 18:27:55.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.812" endtime="20201030 18:27:56.197"></status>
</kw>
<msg timestamp="20201030 18:27:56.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062829264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062836403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.809" endtime="20201030 18:27:56.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062829264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062836403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.206" endtime="20201030 18:27:56.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.225" endtime="20201030 18:27:56.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.801" endtime="20201030 18:27:56.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.796" endtime="20201030 18:27:56.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.242" level="INFO">${RESULT} = [{'diff': 7.139000000003226e-06}, {'diff': 6.611000000003586e-06}, {'diff': 7.139000000003226e-06}, {'diff': 7.680999999995497e-06}, {'diff': 7.708000000009041e-06}, {'diff': 7.652999999996357e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:56.233" endtime="20201030 18:27:56.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.251" level="INFO">${ACCURACY} = {'diff': [7.139000000003226e-06, 6.611000000003586e-06, 7.139000000003226e-06, 7.680999999995497e-06, 7.708000000009041e-06, 7.652999999996357e-06, 7.167000000002366e-06, 7.139000000003226e-06, 6.6110...</msg>
<status status="PASS" starttime="20201030 18:27:56.244" endtime="20201030 18:27:56.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.262" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.260" endtime="20201030 18:27:56.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.268" level="INFO">VALUE: [7.139000000003226e-06, 6.611000000003586e-06, 7.139000000003226e-06, 7.680999999995497e-06, 7.708000000009041e-06, 7.652999999996357e-06, 7.167000000002366e-06, 7.139000000003226e-06, 6.611000000003586e-06, 7.139000000003226e-06, 7.124999999996717e-06, 7.667000000002866e-06, 7.639000000003726e-06, 7.139000000003226e-06, 7.152999999995857e-06, 7.138999999989348e-06, 7.653000000010235e-06, 7.138999999989348e-06, 7.666000000003392e-06, 7.179999999995523e-06, 7.666999999988988e-06, 7.666999999988988e-06, 7.153000000009735e-06, 7.222000000001172e-06, 6.597999999996551e-06, 7.652999999996357e-06, 7.667000000002866e-06, 7.2230000000006456e-06, 7.666000000003392e-06, 7.681000000009375e-06, 7.1380000000037525e-06, 7.652999999996357e-06, 7.653000000010235e-06, 6.583999999990042e-06, 7.124999999996717e-06, 7.139000000003226e-06, 7.611000000004586e-06, 7.653000000010235e-06, 7.139000000003226e-06, 7.139000000003226e-06, 7.667000000002866e-06, 7.153000000009735e-06, 6.568999999997938e-06, 7.681000000009375e-06, 7.139000000003226e-06, 7.666000000003392e-06, 7.694999999988128e-06, 7.124999999996717e-06, 7.666000000003392e-06, 7.139000000003226e-06]</msg>
<status status="PASS" starttime="20201030 18:27:56.264" endtime="20201030 18:27:56.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.253" endtime="20201030 18:27:56.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.281" endtime="20201030 18:27:56.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.276" endtime="20201030 18:27:56.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.273" endtime="20201030 18:27:56.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.722" endtime="20201030 18:27:56.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.720" endtime="20201030 18:27:56.307"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.330" endtime="20201030 18:27:56.348"></status>
</kw>
<msg timestamp="20201030 18:27:56.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.327" endtime="20201030 18:27:56.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.351" endtime="20201030 18:27:56.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.358" endtime="20201030 18:27:56.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.320" endtime="20201030 18:27:56.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.314" endtime="20201030 18:27:56.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.381" endtime="20201030 18:27:56.750"></status>
</kw>
<msg timestamp="20201030 18:27:56.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041717194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041725917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.378" endtime="20201030 18:27:56.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041717194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041725917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.760" endtime="20201030 18:27:56.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.780" endtime="20201030 18:27:56.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.371" endtime="20201030 18:27:56.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.366" endtime="20201030 18:27:56.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:56.799" level="INFO">${RESULT} = [{'diff': 8.723000000002146e-06}, {'diff': 8.736000000002242e-06}, {'diff': 7.680999999995497e-06}, {'diff': 8.181000000002936e-06}, {'diff': 8.181000000002936e-06}, {'diff': 7.679999999996023e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:56.789" endtime="20201030 18:27:56.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:56.810" level="INFO">${ACCURACY} = {'diff': [8.723000000002146e-06, 8.736000000002242e-06, 7.680999999995497e-06, 8.181000000002936e-06, 8.181000000002936e-06, 7.679999999996023e-06, 7.679999999996023e-06, 8.707999999996163e-06, 8.6940...</msg>
<status status="PASS" starttime="20201030 18:27:56.801" endtime="20201030 18:27:56.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.821" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:27:56.819" endtime="20201030 18:27:56.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.827" level="INFO">VALUE: [8.723000000002146e-06, 8.736000000002242e-06, 7.680999999995497e-06, 8.181000000002936e-06, 8.181000000002936e-06, 7.679999999996023e-06, 7.679999999996023e-06, 8.707999999996163e-06, 8.694000000003532e-06, 8.194000000003032e-06, 7.665999999996453e-06, 8.750000000001812e-06, 8.195000000002506e-06, 8.750000000001812e-06, 8.138999999997287e-06, 8.180000000003462e-06, 8.209000000002076e-06, 8.708000000003102e-06, 8.153000000003796e-06, 8.708000000003102e-06, 8.721999999995733e-06, 8.195000000002506e-06, 7.651999999996884e-06, 8.209000000002076e-06, 8.125000000004656e-06, 7.653000000003296e-06, 8.194000000003032e-06, 8.166999999996427e-06, 8.208000000002602e-06, 8.722999999995207e-06, 7.638999999996787e-06, 7.652999999996357e-06, 8.207999999995663e-06, 7.681000000002436e-06, 8.193999999996093e-06, 8.194000000003032e-06, 7.638999999996787e-06, 8.208000000002602e-06, 8.208000000002602e-06, 7.666999999995927e-06, 8.193999999996093e-06, 8.722000000002672e-06, 8.665999999997454e-06, 8.236000000001742e-06, 8.236000000001742e-06, 8.195000000002506e-06, 8.180000000003462e-06, 8.194999999995567e-06, 8.223000000001646e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201030 18:27:56.824" endtime="20201030 18:27:56.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.812" endtime="20201030 18:27:56.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:56.840" endtime="20201030 18:27:56.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.836" endtime="20201030 18:27:56.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.833" endtime="20201030 18:27:56.865"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.309" endtime="20201030 18:27:56.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.308" endtime="20201030 18:27:56.866"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.890" endtime="20201030 18:27:56.909"></status>
</kw>
<msg timestamp="20201030 18:27:56.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.887" endtime="20201030 18:27:56.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:56.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:56.913" endtime="20201030 18:27:56.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.919" endtime="20201030 18:27:56.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.879" endtime="20201030 18:27:56.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.873" endtime="20201030 18:27:56.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:56.944" endtime="20201030 18:27:57.319"></status>
</kw>
<msg timestamp="20201030 18:27:57.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043038722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043047972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:56.941" endtime="20201030 18:27:57.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043038722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043047972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.329" endtime="20201030 18:27:57.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.350" endtime="20201030 18:27:57.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.933" endtime="20201030 18:27:57.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.928" endtime="20201030 18:27:57.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.370" level="INFO">${RESULT} = [{'diff': 9.249999999995373e-06}, {'diff': 9.792000000001522e-06}, {'diff': 9.250000000002312e-06}, {'diff': 8.722000000002672e-06}, {'diff': 9.250000000002312e-06}, {'diff': 8.721999999995733e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:57.361" endtime="20201030 18:27:57.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.382" level="INFO">${ACCURACY} = {'diff': [9.249999999995373e-06, 9.792000000001522e-06, 9.250000000002312e-06, 8.722000000002672e-06, 9.250000000002312e-06, 8.721999999995733e-06, 9.221999999996233e-06, 9.264000000001882e-06, 9.7500...</msg>
<status status="PASS" starttime="20201030 18:27:57.372" endtime="20201030 18:27:57.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.394" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.391" endtime="20201030 18:27:57.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.399" level="INFO">VALUE: [9.249999999995373e-06, 9.792000000001522e-06, 9.250000000002312e-06, 8.722000000002672e-06, 9.250000000002312e-06, 8.721999999995733e-06, 9.221999999996233e-06, 9.264000000001882e-06, 9.750000000002812e-06, 9.235999999995803e-06, 9.763999999995443e-06, 9.306000000000592e-06, 9.249999999995373e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.77699999999554e-06, 8.750000000001812e-06, 9.236000000002742e-06, 8.721999999995733e-06, 9.235999999995803e-06, 9.264000000001882e-06, 9.249999999995373e-06, 9.306000000000592e-06, 9.26299999999547e-06, 9.264000000001882e-06, 8.721999999995733e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.236000000002742e-06, 8.735999999995303e-06, 9.778000000001952e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.235999999995803e-06, 8.723000000002146e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.263000000002408e-06, 9.208000000003602e-06, 9.250000000002312e-06, 8.708000000003102e-06, 9.778000000001952e-06, 9.250000000002312e-06, 8.721999999995733e-06, 8.722000000002672e-06, 9.777000000002478e-06, 9.792000000001522e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.396" endtime="20201030 18:27:57.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.384" endtime="20201030 18:27:57.403"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.413" endtime="20201030 18:27:57.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.408" endtime="20201030 18:27:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.406" endtime="20201030 18:27:57.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.868" endtime="20201030 18:27:57.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:56.867" endtime="20201030 18:27:57.438"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.462" endtime="20201030 18:27:57.481"></status>
</kw>
<msg timestamp="20201030 18:27:57.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.459" endtime="20201030 18:27:57.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:57.484" endtime="20201030 18:27:57.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.491" endtime="20201030 18:27:57.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.451" endtime="20201030 18:27:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.445" endtime="20201030 18:27:57.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.516" endtime="20201030 18:27:57.875"></status>
</kw>
<msg timestamp="20201030 18:27:57.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043153625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043163944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.513" endtime="20201030 18:27:57.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043153625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043163944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:57.885" endtime="20201030 18:27:57.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:57.905" endtime="20201030 18:27:57.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.505" endtime="20201030 18:27:57.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.500" endtime="20201030 18:27:57.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:57.924" level="INFO">${RESULT} = [{'diff': 1.0319000000001688e-05}, {'diff': 9.806000000001092e-06}, {'diff': 1.0305999999994653e-05}, {'diff': 1.0832999999994819e-05}, {'diff': 9.777000000002478e-06}, {'diff': 1.0292000000002022e-05...</msg>
<status status="PASS" starttime="20201030 18:27:57.914" endtime="20201030 18:27:57.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:57.934" level="INFO">${ACCURACY} = {'diff': [1.0319000000001688e-05, 9.806000000001092e-06, 1.0305999999994653e-05, 1.0832999999994819e-05, 9.777000000002478e-06, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, ...</msg>
<status status="PASS" starttime="20201030 18:27:57.926" endtime="20201030 18:27:57.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.945" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:27:57.943" endtime="20201030 18:27:57.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:57.951" level="INFO">VALUE: [1.0319000000001688e-05, 9.806000000001092e-06, 1.0305999999994653e-05, 1.0832999999994819e-05, 9.777000000002478e-06, 1.0292000000002022e-05, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0306000000001592e-05, 1.0306000000001592e-05, 1.0320000000001162e-05, 1.0236000000003742e-05, 1.0848000000000801e-05, 1.0306000000001592e-05, 1.0320000000001162e-05, 1.0306000000001592e-05, 9.778000000001952e-06, 1.0250000000003312e-05, 1.0306000000001592e-05, 1.0834000000001232e-05, 1.0833000000001758e-05, 1.0861000000000898e-05, 1.029099999999561e-05, 9.764000000002382e-06, 1.0249999999996373e-05, 1.0305000000002118e-05, 9.778000000001952e-06, 1.0834000000001232e-05, 1.0306000000001592e-05, 1.0833000000001758e-05, 1.0847000000001328e-05, 1.0306000000001592e-05, 1.0819000000002188e-05, 1.0320000000001162e-05, 9.792000000001522e-06, 1.0306000000001592e-05, 1.0305000000002118e-05, 1.0764000000003382e-05, 9.764000000002382e-06, 9.778000000001952e-06, 1.0848000000000801e-05, 9.778000000001952e-06, 1.0319000000001688e-05, 1.0304999999995179e-05, 9.778000000001952e-06, 9.778000000001952e-06, 9.749999999995873e-06, 9.778000000001952e-06, 1.0291999999995083e-05, 9.709000000003576e-06]</msg>
<status status="PASS" starttime="20201030 18:27:57.948" endtime="20201030 18:27:57.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.936" endtime="20201030 18:27:57.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:57.964" endtime="20201030 18:27:57.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.960" endtime="20201030 18:27:57.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.957" endtime="20201030 18:27:57.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.441" endtime="20201030 18:27:57.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.439" endtime="20201030 18:27:57.990"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.014" endtime="20201030 18:27:58.034"></status>
</kw>
<msg timestamp="20201030 18:27:58.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.011" endtime="20201030 18:27:58.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.038" endtime="20201030 18:27:58.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.044" endtime="20201030 18:27:58.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.003" endtime="20201030 18:27:58.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.997" endtime="20201030 18:27:58.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.069" endtime="20201030 18:27:58.442"></status>
</kw>
<msg timestamp="20201030 18:27:58.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045036819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.066" endtime="20201030 18:27:58.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045024944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045036819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.452" endtime="20201030 18:27:58.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.472" endtime="20201030 18:27:58.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.058" endtime="20201030 18:27:58.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.053" endtime="20201030 18:27:58.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:58.491" level="INFO">${RESULT} = [{'diff': 1.1875000000001468e-05}, {'diff': 1.1362000000000871e-05}, {'diff': 1.1332999999995319e-05}, {'diff': 1.1361000000001398e-05}, {'diff': 1.0847000000001328e-05}, {'diff': 1.1375000000000968e-...</msg>
<status status="PASS" starttime="20201030 18:27:58.481" endtime="20201030 18:27:58.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:58.501" level="INFO">${ACCURACY} = {'diff': [1.1875000000001468e-05, 1.1362000000000871e-05, 1.1332999999995319e-05, 1.1361000000001398e-05, 1.0847000000001328e-05, 1.1375000000000968e-05, 1.0875000000000468e-05, 1.1334000000001732e-05...</msg>
<status status="PASS" starttime="20201030 18:27:58.493" endtime="20201030 18:27:58.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.512" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:27:58.510" endtime="20201030 18:27:58.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.518" level="INFO">VALUE: [1.1875000000001468e-05, 1.1362000000000871e-05, 1.1332999999995319e-05, 1.1361000000001398e-05, 1.0847000000001328e-05, 1.1375000000000968e-05, 1.0875000000000468e-05, 1.1334000000001732e-05, 1.0833000000001758e-05, 1.1360999999994459e-05, 1.0847000000001328e-05, 1.1375000000000968e-05, 1.0832999999994819e-05, 1.1888999999994099e-05, 1.0833000000001758e-05, 1.1806000000003092e-05, 1.0834000000001232e-05, 1.0833000000001758e-05, 1.0832999999994819e-05, 1.1902000000001134e-05, 1.1347000000001828e-05, 1.1875000000001468e-05, 1.1875000000001468e-05, 1.1347000000001828e-05, 1.1361000000001398e-05, 1.0833000000001758e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.0834000000001232e-05, 1.1375000000000968e-05, 1.1305999999995653e-05, 1.0833000000001758e-05, 1.1375000000000968e-05, 1.1348000000001301e-05, 1.1888999999994099e-05, 1.1820000000002662e-05, 1.0847000000001328e-05, 1.1361000000001398e-05, 1.0819000000002188e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.0819000000002188e-05, 1.1361000000001398e-05, 1.0819999999994723e-05, 1.1375000000000968e-05, 1.0834000000001232e-05, 1.1889000000001038e-05, 1.1389000000000538e-05, 1.0861000000000898e-05]</msg>
<status status="PASS" starttime="20201030 18:27:58.515" endtime="20201030 18:27:58.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.503" endtime="20201030 18:27:58.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:58.539" endtime="20201030 18:27:58.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.532" endtime="20201030 18:27:58.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.530" endtime="20201030 18:27:58.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.992" endtime="20201030 18:27:58.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:57.991" endtime="20201030 18:27:58.564"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.589" endtime="20201030 18:27:58.608"></status>
</kw>
<msg timestamp="20201030 18:27:58.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.585" endtime="20201030 18:27:58.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.611" endtime="20201030 18:27:58.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.618" endtime="20201030 18:27:58.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.578" endtime="20201030 18:27:58.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.571" endtime="20201030 18:27:58.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.643" endtime="20201030 18:27:59.002"></status>
</kw>
<msg timestamp="20201030 18:27:59.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043363986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043375889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.640" endtime="20201030 18:27:59.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043363986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043375889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.012" endtime="20201030 18:27:59.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.031" endtime="20201030 18:27:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.632" endtime="20201030 18:27:59.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.627" endtime="20201030 18:27:59.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.050" level="INFO">${RESULT} = [{'diff': 1.1903000000000608e-05}, {'diff': 1.1889000000001038e-05}, {'diff': 1.1889000000001038e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.2431000000000247e-05}, {'diff': 1.1889000000001038e-...</msg>
<status status="PASS" starttime="20201030 18:27:59.040" endtime="20201030 18:27:59.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.061" level="INFO">${ACCURACY} = {'diff': [1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.2417000000000677e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.2403000000001108e-05, 1.1889000000001038e-05...</msg>
<status status="PASS" starttime="20201030 18:27:59.052" endtime="20201030 18:27:59.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.073" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.071" endtime="20201030 18:27:59.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.079" level="INFO">VALUE: [1.1903000000000608e-05, 1.1889000000001038e-05, 1.1889000000001038e-05, 1.2417000000000677e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.2403000000001108e-05, 1.1889000000001038e-05, 1.2471999999999483e-05, 1.2374999999995029e-05, 1.2333000000003258e-05, 1.1875000000001468e-05, 1.2431000000000247e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1834000000002232e-05, 1.2485999999999053e-05, 1.2431000000000247e-05, 1.1875000000001468e-05, 1.2457999999999914e-05, 1.1889000000001038e-05, 1.2417000000000677e-05, 1.1944999999999317e-05, 1.1874999999994529e-05, 1.1889000000001038e-05, 1.2917000000001178e-05, 1.2417000000000677e-05, 1.2417000000000677e-05, 1.2416000000001204e-05, 1.2416000000001204e-05, 1.2944999999993378e-05, 1.2402000000001634e-05, 1.1832999999995819e-05, 1.2417000000000677e-05, 1.2431000000000247e-05, 1.1888000000001564e-05, 1.1916000000000704e-05, 1.2431000000000247e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2985999999999553e-05, 1.2416000000001204e-05, 1.1903000000000608e-05, 1.2417000000000677e-05, 1.1888999999994099e-05, 1.1889000000001038e-05, 1.2417000000000677e-05, 1.1889000000001038e-05, 1.2417000000000677e-05, 1.2417000000000677e-05]</msg>
<status status="PASS" starttime="20201030 18:27:59.076" endtime="20201030 18:27:59.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.063" endtime="20201030 18:27:59.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.092" endtime="20201030 18:27:59.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.088" endtime="20201030 18:27:59.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.085" endtime="20201030 18:27:59.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.567" endtime="20201030 18:27:59.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.565" endtime="20201030 18:27:59.118"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.142" endtime="20201030 18:27:59.161"></status>
</kw>
<msg timestamp="20201030 18:27:59.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.139" endtime="20201030 18:27:59.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.165" endtime="20201030 18:27:59.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.171" endtime="20201030 18:27:59.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.131" endtime="20201030 18:27:59.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.125" endtime="20201030 18:27:59.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.196" endtime="20201030 18:27:59.561"></status>
</kw>
<msg timestamp="20201030 18:27:59.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043324375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.193" endtime="20201030 18:27:59.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043324375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.570" endtime="20201030 18:27:59.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.590" endtime="20201030 18:27:59.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.185" endtime="20201030 18:27:59.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.180" endtime="20201030 18:27:59.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.607" level="INFO">${RESULT} = [{'diff': 1.2944000000000844e-05}, {'diff': 1.3499999999999623e-05}, {'diff': 1.3458000000000914e-05}, {'diff': 1.3472999999999957e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.2930000000001274e-...</msg>
<status status="PASS" starttime="20201030 18:27:59.598" endtime="20201030 18:27:59.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:27:59.618" level="INFO">${ACCURACY} = {'diff': [1.2944000000000844e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.3458000000000914e-05, 1.3458000000000914e-05...</msg>
<status status="PASS" starttime="20201030 18:27:59.609" endtime="20201030 18:27:59.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.630" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:27:59.627" endtime="20201030 18:27:59.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.635" level="INFO">VALUE: [1.2944000000000844e-05, 1.3499999999999623e-05, 1.3458000000000914e-05, 1.3472999999999957e-05, 1.2917000000001178e-05, 1.2930000000001274e-05, 1.3458000000000914e-05, 1.3458000000000914e-05, 1.2943999999993905e-05, 1.2945000000000317e-05, 1.3486000000000054e-05, 1.3486999999999527e-05, 1.3486000000000054e-05, 1.3431000000001247e-05, 1.3471999999993545e-05, 1.2958999999999887e-05, 1.3458000000000914e-05, 1.3486000000000054e-05, 1.3472999999999957e-05, 1.3472000000000484e-05, 1.3486999999999527e-05, 1.2944000000000844e-05, 1.3445000000000817e-05, 1.3472000000000484e-05, 1.2958999999999887e-05, 1.2931000000000747e-05, 1.3542000000005272e-05, 1.2944000000000844e-05, 1.3486000000000054e-05, 1.2999999999999123e-05, 1.3513999999999193e-05, 1.2917000000001178e-05, 1.2958000000000414e-05, 1.3472000000000484e-05, 1.3499999999999623e-05, 1.2931000000000747e-05, 1.2943999999993905e-05, 1.2945000000000317e-05, 1.3513999999999193e-05, 1.3472999999999957e-05, 1.3459000000000387e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.2930000000001274e-05, 1.2929999999994335e-05, 1.3486000000000054e-05, 1.3457999999993975e-05, 1.3472000000000484e-05, 1.3472000000000484e-05]</msg>
<status status="PASS" starttime="20201030 18:27:59.632" endtime="20201030 18:27:59.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.620" endtime="20201030 18:27:59.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.648" endtime="20201030 18:27:59.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.644" endtime="20201030 18:27:59.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.641" endtime="20201030 18:27:59.672"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.120" endtime="20201030 18:27:59.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.119" endtime="20201030 18:27:59.673"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.697" endtime="20201030 18:27:59.715"></status>
</kw>
<msg timestamp="20201030 18:27:59.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.693" endtime="20201030 18:27:59.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.718" endtime="20201030 18:27:59.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.724" endtime="20201030 18:27:59.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.686" endtime="20201030 18:27:59.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.680" endtime="20201030 18:27:59.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.748" endtime="20201030 18:28:00.106"></status>
</kw>
<msg timestamp="20201030 18:28:00.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042046056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.745" endtime="20201030 18:28:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042031528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042046056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.116" endtime="20201030 18:28:00.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.135" endtime="20201030 18:28:00.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.737" endtime="20201030 18:28:00.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.733" endtime="20201030 18:28:00.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.152" level="INFO">${RESULT} = [{'diff': 1.4527999999999763e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.3986000000000554e-05}, {'diff': 1.4514000000000193e-05}, {'diff': 1.458299999999857e-0...</msg>
<status status="PASS" starttime="20201030 18:28:00.143" endtime="20201030 18:28:00.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.162" level="INFO">${ACCURACY} = {'diff': [1.4527999999999763e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.458299999999857e-05, 1.4569999999998473e-05, 1.4514000000000193e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:00.154" endtime="20201030 18:28:00.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.173" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.171" endtime="20201030 18:28:00.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.178" level="INFO">VALUE: [1.4527999999999763e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.458299999999857e-05, 1.4569999999998473e-05, 1.4514000000000193e-05, 1.4527999999999763e-05, 1.3986000000000554e-05, 1.454099999999986e-05, 1.452700000000029e-05, 1.4555999999998903e-05, 1.452700000000029e-05, 1.4013999999999693e-05, 1.4514000000000193e-05, 1.454099999999986e-05, 1.4569999999998473e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.404099999999936e-05, 1.4000000000000123e-05, 1.4527999999999763e-05, 1.4000000000000123e-05, 1.4527999999999763e-05, 1.3972000000000984e-05, 1.3958000000001414e-05, 1.4000000000000123e-05, 1.4000000000000123e-05, 1.4514000000000193e-05, 1.452700000000029e-05, 1.4000000000000123e-05, 1.3930000000002274e-05, 1.3986000000000554e-05, 1.459699999999814e-05, 1.4527999999999763e-05, 1.4527999999999763e-05, 1.452700000000029e-05, 1.4486999999993588e-05, 1.4570000000005412e-05, 1.452700000000029e-05, 1.4000000000000123e-05, 1.4568999999999e-05, 1.3987000000000027e-05, 1.4555999999998903e-05, 1.4514000000000193e-05, 1.4000000000000123e-05, 1.3987000000000027e-05, 1.451300000000072e-05, 1.454099999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.175" endtime="20201030 18:28:00.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.164" endtime="20201030 18:28:00.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.191" endtime="20201030 18:28:00.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.187" endtime="20201030 18:28:00.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.184" endtime="20201030 18:28:00.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.676" endtime="20201030 18:28:00.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.674" endtime="20201030 18:28:00.216"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.239" endtime="20201030 18:28:00.261"></status>
</kw>
<msg timestamp="20201030 18:28:00.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.236" endtime="20201030 18:28:00.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.264" endtime="20201030 18:28:00.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.270" endtime="20201030 18:28:00.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.229" endtime="20201030 18:28:00.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.223" endtime="20201030 18:28:00.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.294" endtime="20201030 18:28:00.649"></status>
</kw>
<msg timestamp="20201030 18:28:00.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043117556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:00.291" endtime="20201030 18:28:00.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043102, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043117556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:00.658" endtime="20201030 18:28:00.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.678" endtime="20201030 18:28:00.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.283" endtime="20201030 18:28:00.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.278" endtime="20201030 18:28:00.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.695" level="INFO">${RESULT} = [{'diff': 1.5555999999999903e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.552699999999435e-05}, {'diff': 1.558299999999957e-05}, {'diff': 1.5569999999999473e-05}, {'diff': 1.50689999999995e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:00.686" endtime="20201030 18:28:00.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:00.705" level="INFO">${ACCURACY} = {'diff': [1.5555999999999903e-05, 1.50689999999995e-05, 1.552699999999435e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.5069999999998973e-05, 1.505...</msg>
<status status="PASS" starttime="20201030 18:28:00.697" endtime="20201030 18:28:00.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.716" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:00.713" endtime="20201030 18:28:00.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.722" level="INFO">VALUE: [1.5555999999999903e-05, 1.50689999999995e-05, 1.552699999999435e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.5069999999998973e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.5084000000005482e-05, 1.559699999999914e-05, 1.558299999999957e-05, 1.50689999999995e-05, 1.561099999999871e-05, 1.5055000000006868e-05, 1.5028000000000263e-05, 1.5055999999999403e-05, 1.5597999999998613e-05, 1.5055999999999403e-05, 1.555500000000043e-05, 1.559699999999914e-05, 1.502700000000079e-05, 1.5514000000001194e-05, 1.5584000000005982e-05, 1.555499999999349e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.5584000000005982e-05, 1.5583999999999043e-05, 1.4514000000000193e-05, 1.505499999999993e-05, 1.5069999999998973e-05, 1.558299999999957e-05, 1.5569e-05, 1.505499999999993e-05, 1.558299999999957e-05, 1.501300000000122e-05, 1.559699999999914e-05, 1.5041999999999833e-05, 1.502700000000079e-05, 1.505499999999993e-05, 1.5555999999999903e-05, 1.558299999999957e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.5041999999999833e-05]</msg>
<status status="PASS" starttime="20201030 18:28:00.718" endtime="20201030 18:28:00.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.707" endtime="20201030 18:28:00.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.736" endtime="20201030 18:28:00.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.730" endtime="20201030 18:28:00.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.727" endtime="20201030 18:28:00.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.218" endtime="20201030 18:28:00.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.217" endtime="20201030 18:28:00.761"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.784" endtime="20201030 18:28:00.803"></status>
</kw>
<msg timestamp="20201030 18:28:00.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.781" endtime="20201030 18:28:00.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.806" endtime="20201030 18:28:00.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.812" endtime="20201030 18:28:00.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.773" endtime="20201030 18:28:00.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.768" endtime="20201030 18:28:00.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.836" endtime="20201030 18:28:01.174"></status>
</kw>
<msg timestamp="20201030 18:28:01.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041882222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.833" endtime="20201030 18:28:01.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041882222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.183" endtime="20201030 18:28:01.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.203" endtime="20201030 18:28:01.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.825" endtime="20201030 18:28:01.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.821" endtime="20201030 18:28:01.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.220" level="INFO">${RESULT} = [{'diff': 1.612499999999878e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.5583999999999043e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.609699999999964e-05}, {'diff': 1.662499999999928e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:01.211" endtime="20201030 18:28:01.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.231" level="INFO">${ACCURACY} = {'diff': [1.612499999999878e-05, 1.611099999999921e-05, 1.5583999999999043e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.60690000000005e-05, 1.5612...</msg>
<status status="PASS" starttime="20201030 18:28:01.222" endtime="20201030 18:28:01.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.242" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.240" endtime="20201030 18:28:01.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.248" level="INFO">VALUE: [1.612499999999878e-05, 1.611099999999921e-05, 1.5583999999999043e-05, 1.611099999999921e-05, 1.609699999999964e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.60690000000005e-05, 1.5612000000005122e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.661099999999971e-05, 1.668099999999756e-05, 1.669499999999713e-05, 1.611099999999921e-05, 1.662499999999928e-05, 1.613899999999835e-05, 1.662499999999928e-05, 1.666699999999799e-05, 1.609699999999964e-05, 1.6111999999998683e-05, 1.6639000000005788e-05, 1.665299999999842e-05, 1.6569000000001e-05, 1.559699999999914e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.663899999999885e-05, 1.616699999999749e-05, 1.663899999999885e-05, 1.608300000000007e-05, 1.665299999999842e-05, 1.5597000000006078e-05, 1.611099999999921e-05, 1.6137999999998875e-05, 1.665299999999842e-05, 1.6125000000005718e-05, 1.611099999999921e-05, 1.665299999999842e-05, 1.6111000000006148e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.6651999999998945e-05, 1.6637999999999376e-05, 1.6111999999998683e-05, 1.6056000000000403e-05, 1.6625000000006218e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.244" endtime="20201030 18:28:01.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.233" endtime="20201030 18:28:01.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.261" endtime="20201030 18:28:01.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.256" endtime="20201030 18:28:01.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.253" endtime="20201030 18:28:01.284"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.763" endtime="20201030 18:28:01.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.762" endtime="20201030 18:28:01.286"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.309" endtime="20201030 18:28:01.327"></status>
</kw>
<msg timestamp="20201030 18:28:01.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.305" endtime="20201030 18:28:01.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.331" endtime="20201030 18:28:01.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.337" endtime="20201030 18:28:01.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.298" endtime="20201030 18:28:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.292" endtime="20201030 18:28:01.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.361" endtime="20201030 18:28:01.704"></status>
</kw>
<msg timestamp="20201030 18:28:01.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.358" endtime="20201030 18:28:01.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.715" endtime="20201030 18:28:01.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.740" endtime="20201030 18:28:01.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.350" endtime="20201030 18:28:01.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.345" endtime="20201030 18:28:01.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.762" level="INFO">${RESULT} = [{'diff': 1.7693999999998655e-05}, {'diff': 1.6639000000005788e-05}, {'diff': 1.7165999999999015e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.6597999999999613e-05}, {'diff': 1.6667000000004928e-0...</msg>
<status status="PASS" starttime="20201030 18:28:01.752" endtime="20201030 18:28:01.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:01.776" level="INFO">${ACCURACY} = {'diff': [1.7693999999998655e-05, 1.6639000000005788e-05, 1.7165999999999015e-05, 1.716699999999849e-05, 1.6597999999999613e-05, 1.6667000000004928e-05, 1.772299999999727e-05, 1.7749999999996935e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:01.764" endtime="20201030 18:28:01.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.789" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:01.786" endtime="20201030 18:28:01.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.795" level="INFO">VALUE: [1.7693999999998655e-05, 1.6639000000005788e-05, 1.7165999999999015e-05, 1.716699999999849e-05, 1.6597999999999613e-05, 1.6667000000004928e-05, 1.772299999999727e-05, 1.7749999999996935e-05, 1.7165999999999015e-05, 1.7750000000003874e-05, 1.7165999999999015e-05, 1.718099999999806e-05, 1.718099999999806e-05, 1.7709000000004638e-05, 1.7179999999998585e-05, 1.769499999999813e-05, 1.7693999999998655e-05, 1.718099999999806e-05, 1.716699999999849e-05, 1.7180000000005524e-05, 1.716699999999849e-05, 1.7707999999998225e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.7180000000005524e-05, 1.7167000000005428e-05, 1.718099999999806e-05, 1.7165999999999015e-05, 1.716699999999849e-05, 1.768099999999856e-05, 1.716699999999849e-05, 1.7735999999997365e-05, 1.716699999999849e-05, 1.769499999999813e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.7694000000005594e-05, 1.7193999999998155e-05, 1.715299999999892e-05, 1.715299999999892e-05, 1.769499999999813e-05, 1.7165999999999015e-05, 1.7139000000006288e-05, 1.7221999999997295e-05, 1.716699999999849e-05, 1.7165999999999015e-05, 1.718099999999806e-05, 1.716699999999849e-05, 1.718099999999806e-05, 1.663899999999885e-05]</msg>
<status status="PASS" starttime="20201030 18:28:01.791" endtime="20201030 18:28:01.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.778" endtime="20201030 18:28:01.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.809" endtime="20201030 18:28:01.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.804" endtime="20201030 18:28:01.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.802" endtime="20201030 18:28:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.288" endtime="20201030 18:28:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.287" endtime="20201030 18:28:01.834"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.857" endtime="20201030 18:28:01.876"></status>
</kw>
<msg timestamp="20201030 18:28:01.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.854" endtime="20201030 18:28:01.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.880" endtime="20201030 18:28:01.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.886" endtime="20201030 18:28:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.846" endtime="20201030 18:28:01.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.841" endtime="20201030 18:28:01.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.910" endtime="20201030 18:28:02.257"></status>
</kw>
<msg timestamp="20201030 18:28:02.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.907" endtime="20201030 18:28:02.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.267" endtime="20201030 18:28:02.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.286" endtime="20201030 18:28:02.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.899" endtime="20201030 18:28:02.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.894" endtime="20201030 18:28:02.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.304" level="INFO">${RESULT} = [{'diff': 1.8749999999997935e-05}, {'diff': 1.8207999999998725e-05}, {'diff': 1.8749999999997935e-05}, {'diff': 1.816699999999949e-05}, {'diff': 1.8236000000004804e-05}, {'diff': 1.8778000000004014e-0...</msg>
<status status="PASS" starttime="20201030 18:28:02.295" endtime="20201030 18:28:02.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.313" level="INFO">${ACCURACY} = {'diff': [1.8749999999997935e-05, 1.8207999999998725e-05, 1.8749999999997935e-05, 1.816699999999949e-05, 1.8236000000004804e-05, 1.8778000000004014e-05, 1.8749999999997935e-05, 1.82089999999982e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:28:02.306" endtime="20201030 18:28:02.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.324" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.322" endtime="20201030 18:28:02.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.330" level="INFO">VALUE: [1.8749999999997935e-05, 1.8207999999998725e-05, 1.8749999999997935e-05, 1.816699999999949e-05, 1.8236000000004804e-05, 1.8778000000004014e-05, 1.8749999999997935e-05, 1.82089999999982e-05, 1.816699999999949e-05, 1.8749999999997935e-05, 1.7763999999996505e-05, 1.8735999999998365e-05, 1.7693999999998655e-05, 1.8249999999997435e-05, 1.8207999999998725e-05, 1.7694000000005594e-05, 1.7693999999998655e-05, 1.8221999999998295e-05, 1.829100000000361e-05, 1.8235999999997865e-05, 1.8222000000005234e-05, 1.7693999999998655e-05, 1.7695000000005068e-05, 1.8764000000004444e-05, 1.8707999999999225e-05, 1.8209000000005138e-05, 1.8235999999997865e-05, 1.8749999999997935e-05, 1.7693999999998655e-05, 1.768099999999856e-05, 1.7679999999999085e-05, 1.8236000000004804e-05, 1.768099999999856e-05, 1.7707999999998225e-05, 1.82089999999982e-05, 1.8235999999997865e-05, 1.8249999999997435e-05, 1.8221999999998295e-05, 1.8221999999998295e-05, 1.8763999999997505e-05, 1.8208000000005664e-05, 1.8221999999998295e-05, 1.8735999999998365e-05, 1.816699999999949e-05, 1.7680000000006024e-05, 1.769499999999813e-05, 1.82089999999982e-05, 1.7721999999997795e-05, 1.8735999999998365e-05, 1.8222000000005234e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.327" endtime="20201030 18:28:02.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.315" endtime="20201030 18:28:02.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.343" endtime="20201030 18:28:02.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.338" endtime="20201030 18:28:02.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.336" endtime="20201030 18:28:02.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.836" endtime="20201030 18:28:02.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.835" endtime="20201030 18:28:02.368"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.391" endtime="20201030 18:28:02.411"></status>
</kw>
<msg timestamp="20201030 18:28:02.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.387" endtime="20201030 18:28:02.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.415" endtime="20201030 18:28:02.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.421" endtime="20201030 18:28:02.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.380" endtime="20201030 18:28:02.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.374" endtime="20201030 18:28:02.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.445" endtime="20201030 18:28:02.784"></status>
</kw>
<msg timestamp="20201030 18:28:02.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043471306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.442" endtime="20201030 18:28:02.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043471306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.793" endtime="20201030 18:28:02.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.813" endtime="20201030 18:28:02.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.434" endtime="20201030 18:28:02.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.430" endtime="20201030 18:28:02.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.830" level="INFO">${RESULT} = [{'diff': 1.8749999999997935e-05}, {'diff': 1.9763999999998505e-05}, {'diff': 1.92769999999981e-05}, {'diff': 1.933300000000332e-05}, {'diff': 1.986100000000296e-05}, {'diff': 1.8750000000004874e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:02.821" endtime="20201030 18:28:02.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:02.840" level="INFO">${ACCURACY} = {'diff': [1.8749999999997935e-05, 1.9763999999998505e-05, 1.92769999999981e-05, 1.933300000000332e-05, 1.986100000000296e-05, 1.8750000000004874e-05, 1.983299999999688e-05, 1.926299999999853e-05, 1.92...</msg>
<status status="PASS" starttime="20201030 18:28:02.832" endtime="20201030 18:28:02.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.851" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:02.849" endtime="20201030 18:28:02.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.857" level="INFO">VALUE: [1.8749999999997935e-05, 1.9763999999998505e-05, 1.92769999999981e-05, 1.933300000000332e-05, 1.986100000000296e-05, 1.8750000000004874e-05, 1.983299999999688e-05, 1.926299999999853e-05, 1.9292000000004084e-05, 1.9278000000004514e-05, 1.8763999999997505e-05, 1.981900000000425e-05, 1.9806000000004154e-05, 1.987499999999559e-05, 1.8750000000004874e-05, 1.9263999999998005e-05, 1.8763999999997505e-05, 1.980500000000468e-05, 1.9235999999998865e-05, 1.980499999999774e-05, 1.9263999999998005e-05, 1.9291999999997145e-05, 1.8735999999998365e-05, 1.9805999999997215e-05, 1.8749999999997935e-05, 1.877700000000454e-05, 1.9806000000004154e-05, 1.9721999999999795e-05, 1.9777999999998075e-05, 1.9277999999997575e-05, 1.8763999999997505e-05, 1.9805999999997215e-05, 1.9277999999997575e-05, 1.9277999999997575e-05, 1.981900000000425e-05, 1.9305999999996715e-05, 1.930500000000418e-05, 1.880500000000368e-05, 1.9263999999998005e-05, 1.9277999999997575e-05, 1.9278000000004514e-05, 1.9263999999998005e-05, 1.9277999999997575e-05, 1.8749999999997935e-05, 1.9221999999999295e-05, 1.9250000000005374e-05, 1.8749999999997935e-05, 1.8763999999997505e-05, 1.9291999999997145e-05, 1.8750000000004874e-05]</msg>
<status status="PASS" starttime="20201030 18:28:02.854" endtime="20201030 18:28:02.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.842" endtime="20201030 18:28:02.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.871" endtime="20201030 18:28:02.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.865" endtime="20201030 18:28:02.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.862" endtime="20201030 18:28:02.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.370" endtime="20201030 18:28:02.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.369" endtime="20201030 18:28:02.896"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.919" endtime="20201030 18:28:02.938"></status>
</kw>
<msg timestamp="20201030 18:28:02.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.916" endtime="20201030 18:28:02.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.941" endtime="20201030 18:28:02.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.948" endtime="20201030 18:28:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.909" endtime="20201030 18:28:02.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.903" endtime="20201030 18:28:02.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.972" endtime="20201030 18:28:03.310"></status>
</kw>
<msg timestamp="20201030 18:28:03.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:02.968" endtime="20201030 18:28:03.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041976625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0419975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:03.320" endtime="20201030 18:28:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.338" endtime="20201030 18:28:03.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.961" endtime="20201030 18:28:03.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.956" endtime="20201030 18:28:03.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.356" level="INFO">${RESULT} = [{'diff': 2.087500000000353e-05}, {'diff': 1.981899999999731e-05}, {'diff': 1.9806000000004154e-05}, {'diff': 2.036099999999652e-05}, {'diff': 2.084699999999745e-05}, {'diff': 2.086099999999702e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:03.347" endtime="20201030 18:28:03.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.368" level="INFO">${ACCURACY} = {'diff': [2.087500000000353e-05, 1.981899999999731e-05, 1.9806000000004154e-05, 2.036099999999652e-05, 2.084699999999745e-05, 2.086099999999702e-05, 2.037500000000303e-05, 2.0333999999996855e-05, 1.97...</msg>
<status status="PASS" starttime="20201030 18:28:03.358" endtime="20201030 18:28:03.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.380" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.378" endtime="20201030 18:28:03.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.386" level="INFO">VALUE: [2.087500000000353e-05, 1.981899999999731e-05, 1.9806000000004154e-05, 2.036099999999652e-05, 2.084699999999745e-05, 2.086099999999702e-05, 2.037500000000303e-05, 2.0333999999996855e-05, 1.979099999999817e-05, 2.086100000000396e-05, 2.086100000000396e-05, 1.9791999999997645e-05, 2.033299999999738e-05, 1.9791999999997645e-05, 2.0334000000003793e-05, 1.9834000000003293e-05, 2.03890000000026e-05, 2.0319999999997285e-05, 2.087499999999659e-05, 2.084699999999745e-05, 2.033300000000432e-05, 2.0347999999996425e-05, 2.0333999999996855e-05, 2.037500000000303e-05, 1.9806000000004154e-05, 2.0334000000003793e-05, 2.0333999999996855e-05, 2.034699999999695e-05, 2.0319999999997285e-05, 2.034699999999695e-05, 2.0861999999996494e-05, 1.9806000000004154e-05, 1.984699999999645e-05, 2.087499999999659e-05, 2.036100000000346e-05, 1.9805999999997215e-05, 2.087500000000353e-05, 2.087500000000353e-05, 2.034699999999695e-05, 1.9820000000003724e-05, 2.033299999999738e-05, 1.9792000000004584e-05, 1.9805999999997215e-05, 2.0319999999997285e-05, 2.030499999999824e-05, 1.9777999999998075e-05, 2.0320000000004224e-05, 2.086100000000396e-05, 2.0861999999996494e-05, 2.0862000000003433e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.383" endtime="20201030 18:28:03.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.370" endtime="20201030 18:28:03.389"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.399" endtime="20201030 18:28:03.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.394" endtime="20201030 18:28:03.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.392" endtime="20201030 18:28:03.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.898" endtime="20201030 18:28:03.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.897" endtime="20201030 18:28:03.424"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.447" endtime="20201030 18:28:03.466"></status>
</kw>
<msg timestamp="20201030 18:28:03.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.444" endtime="20201030 18:28:03.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.470" endtime="20201030 18:28:03.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.476" endtime="20201030 18:28:03.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.436" endtime="20201030 18:28:03.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.430" endtime="20201030 18:28:03.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.500" endtime="20201030 18:28:03.839"></status>
</kw>
<msg timestamp="20201030 18:28:03.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.496" endtime="20201030 18:28:03.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041519306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.849" endtime="20201030 18:28:03.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.868" endtime="20201030 18:28:03.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.489" endtime="20201030 18:28:03.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.484" endtime="20201030 18:28:03.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.885" level="INFO">${RESULT} = [{'diff': 2.388899999999916e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.3957999999997537e-05}, {'diff': 2.383300000000088e-05}, {'diff': 2.4040999999995483e-05}, {'diff': 2.3929999999998397e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:03.876" endtime="20201030 18:28:03.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:03.897" level="INFO">${ACCURACY} = {'diff': [2.388899999999916e-05, 2.406900000000156e-05, 2.3957999999997537e-05, 2.383300000000088e-05, 2.4040999999995483e-05, 2.3929999999998397e-05, 2.3943999999997967e-05, 2.3943999999997967e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:03.887" endtime="20201030 18:28:03.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.908" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:03.906" endtime="20201030 18:28:03.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.913" level="INFO">VALUE: [2.388899999999916e-05, 2.406900000000156e-05, 2.3957999999997537e-05, 2.383300000000088e-05, 2.4040999999995483e-05, 2.3929999999998397e-05, 2.3943999999997967e-05, 2.3943999999997967e-05, 2.45970000000012e-05, 2.4054999999995053e-05, 2.3944000000004906e-05, 2.4278000000002575e-05, 2.4068999999994622e-05, 2.4278000000002575e-05, 2.4042000000001895e-05, 2.461100000000077e-05, 2.4292000000002145e-05, 2.4485999999997177e-05, 2.4652000000000007e-05, 2.39169999999983e-05, 2.3832999999993942e-05, 2.394499999999744e-05, 2.4069999999994096e-05, 2.418099999999812e-05, 2.418099999999812e-05, 2.3834000000000355e-05, 2.437500000000009e-05, 2.394499999999744e-05, 2.3834000000000355e-05, 2.413899999999941e-05, 2.3820000000000785e-05, 2.4222000000004296e-05, 2.4056000000001465e-05, 2.3846999999993512e-05, 2.4165999999999077e-05, 2.4276999999996163e-05, 2.405500000000199e-05, 2.383300000000088e-05, 2.4013999999995816e-05, 2.440299999999923e-05, 2.3846999999993512e-05, 2.416699999999855e-05, 2.381900000000131e-05, 2.383300000000088e-05, 2.416699999999855e-05, 2.4291999999995206e-05, 2.4542000000002395e-05, 2.3943999999997967e-05, 2.383300000000088e-05, 2.461100000000077e-05]</msg>
<status status="PASS" starttime="20201030 18:28:03.910" endtime="20201030 18:28:03.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.899" endtime="20201030 18:28:03.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.933" endtime="20201030 18:28:03.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.928" endtime="20201030 18:28:03.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.926" endtime="20201030 18:28:03.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.426" endtime="20201030 18:28:03.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.425" endtime="20201030 18:28:03.958"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.981" endtime="20201030 18:28:04.000"></status>
</kw>
<msg timestamp="20201030 18:28:04.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.978" endtime="20201030 18:28:04.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.004" endtime="20201030 18:28:04.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.010" endtime="20201030 18:28:04.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.970" endtime="20201030 18:28:04.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.964" endtime="20201030 18:28:04.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.034" endtime="20201030 18:28:04.375"></status>
</kw>
<msg timestamp="20201030 18:28:04.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041524944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.030" endtime="20201030 18:28:04.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041499819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041524944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.385" endtime="20201030 18:28:04.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.404" endtime="20201030 18:28:04.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.023" endtime="20201030 18:28:04.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.019" endtime="20201030 18:28:04.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.422" level="INFO">${RESULT} = [{'diff': 2.512500000000084e-05}, {'diff': 2.5374999999994152e-05}, {'diff': 2.55970000000022e-05}, {'diff': 2.5013999999996817e-05}, {'diff': 2.486100000000102e-05}, {'diff': 2.5485999999998177e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:04.413" endtime="20201030 18:28:04.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.431" level="INFO">${ACCURACY} = {'diff': [2.512500000000084e-05, 2.5374999999994152e-05, 2.55970000000022e-05, 2.5013999999996817e-05, 2.486100000000102e-05, 2.5485999999998177e-05, 2.537500000000109e-05, 2.4985999999997677e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:28:04.424" endtime="20201030 18:28:04.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.442" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.440" endtime="20201030 18:28:04.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.448" level="INFO">VALUE: [2.512500000000084e-05, 2.5374999999994152e-05, 2.55970000000022e-05, 2.5013999999996817e-05, 2.486100000000102e-05, 2.5485999999998177e-05, 2.537500000000109e-05, 2.4985999999997677e-05, 2.483300000000188e-05, 2.505500000000299e-05, 2.4999999999997247e-05, 2.538900000000066e-05, 2.5278000000003575e-05, 2.515299999999998e-05, 2.5235999999997927e-05, 2.561100000000177e-05, 2.5055999999995526e-05, 2.519499999999869e-05, 2.5499999999997747e-05, 2.494499999999844e-05, 2.5056000000002465e-05, 2.493099999999887e-05, 2.5278000000003575e-05, 2.5347999999994486e-05, 2.515299999999998e-05, 2.5541999999996456e-05, 2.472299999999733e-05, 2.4764000000003505e-05, 2.472299999999733e-05, 2.4999999999997247e-05, 2.538900000000066e-05, 2.4722000000004796e-05, 2.4943999999998967e-05, 2.5262999999997593e-05, 2.4735999999997427e-05, 2.4722000000004796e-05, 2.5110999999994332e-05, 2.483300000000188e-05, 2.562500000000134e-05, 2.5528000000003825e-05, 2.537500000000109e-05, 2.505500000000299e-05, 2.5042000000002895e-05, 2.4929999999999397e-05, 2.484700000000145e-05, 2.4985999999997677e-05, 2.5624999999994402e-05, 2.540300000000023e-05, 2.561100000000177e-05, 2.5472000000005546e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.444" endtime="20201030 18:28:04.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.433" endtime="20201030 18:28:04.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.461" endtime="20201030 18:28:04.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.456" endtime="20201030 18:28:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.453" endtime="20201030 18:28:04.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.960" endtime="20201030 18:28:04.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.959" endtime="20201030 18:28:04.486"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.509" endtime="20201030 18:28:04.529"></status>
</kw>
<msg timestamp="20201030 18:28:04.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.506" endtime="20201030 18:28:04.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.532" endtime="20201030 18:28:04.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.539" endtime="20201030 18:28:04.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.498" endtime="20201030 18:28:04.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.492" endtime="20201030 18:28:04.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.563" endtime="20201030 18:28:04.901"></status>
</kw>
<msg timestamp="20201030 18:28:04.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043207903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.560" endtime="20201030 18:28:04.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043207903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.911" endtime="20201030 18:28:04.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.929" endtime="20201030 18:28:04.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.552" endtime="20201030 18:28:04.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.547" endtime="20201030 18:28:04.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.946" level="INFO">${RESULT} = [{'diff': 2.6360999999995582e-05}, {'diff': 2.583300000000288e-05}, {'diff': 2.6263999999998067e-05}, {'diff': 2.6513999999998317e-05}, {'diff': 2.638900000000166e-05}, {'diff': 2.6055999999996526e-05...</msg>
<status status="PASS" starttime="20201030 18:28:04.937" endtime="20201030 18:28:04.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:04.955" level="INFO">${ACCURACY} = {'diff': [2.6360999999995582e-05, 2.583300000000288e-05, 2.6263999999998067e-05, 2.6513999999998317e-05, 2.638900000000166e-05, 2.6055999999996526e-05, 2.5834000000002355e-05, 2.6499999999998747e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:04.948" endtime="20201030 18:28:04.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.966" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:04.964" endtime="20201030 18:28:04.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.972" level="INFO">VALUE: [2.6360999999995582e-05, 2.583300000000288e-05, 2.6263999999998067e-05, 2.6513999999998317e-05, 2.638900000000166e-05, 2.6055999999996526e-05, 2.5834000000002355e-05, 2.6499999999998747e-05, 2.595899999999901e-05, 2.6055999999996526e-05, 2.6542000000004395e-05, 2.5680000000000147e-05, 2.6068999999996623e-05, 2.6290999999997733e-05, 2.6277000000005102e-05, 2.6180000000000647e-05, 2.5721999999998857e-05, 2.5943999999999967e-05, 2.583300000000288e-05, 2.584700000000245e-05, 2.6596999999996263e-05, 2.606900000000356e-05, 2.584700000000245e-05, 2.6110999999995332e-05, 2.640300000000123e-05, 2.5957999999999537e-05, 2.6320000000003285e-05, 2.5943999999999967e-05, 2.6499999999998747e-05, 2.6263999999998067e-05, 2.619499999999969e-05, 2.594499999999944e-05, 2.5721999999998857e-05, 2.5735999999998427e-05, 2.6291999999997206e-05, 2.615300000000098e-05, 2.572299999999833e-05, 2.6513999999998317e-05, 2.616700000000055e-05, 2.5833999999995416e-05, 2.631900000000381e-05, 2.5762999999998093e-05, 2.6166000000001077e-05, 2.5721999999998857e-05, 2.6388999999994722e-05, 2.6276999999998163e-05, 2.6318999999996873e-05, 2.606900000000356e-05, 2.5943999999999967e-05, 2.6499999999998747e-05]</msg>
<status status="PASS" starttime="20201030 18:28:04.969" endtime="20201030 18:28:04.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.957" endtime="20201030 18:28:04.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.990" endtime="20201030 18:28:05.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.980" endtime="20201030 18:28:05.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.977" endtime="20201030 18:28:05.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.488" endtime="20201030 18:28:05.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.487" endtime="20201030 18:28:05.015"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.037" endtime="20201030 18:28:05.056"></status>
</kw>
<msg timestamp="20201030 18:28:05.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.034" endtime="20201030 18:28:05.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.059" endtime="20201030 18:28:05.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.065" endtime="20201030 18:28:05.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.027" endtime="20201030 18:28:05.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.021" endtime="20201030 18:28:05.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.088" endtime="20201030 18:28:05.420"></status>
</kw>
<msg timestamp="20201030 18:28:05.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040597625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04062525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:05.085" endtime="20201030 18:28:05.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040597625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04062525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:05.429" endtime="20201030 18:28:05.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.448" endtime="20201030 18:28:05.452"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.078" endtime="20201030 18:28:05.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.073" endtime="20201030 18:28:05.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.465" level="INFO">${RESULT} = [{'diff': 2.762500000000334e-05}, {'diff': 2.7458000000001037e-05}, {'diff': 2.7596999999997263e-05}, {'diff': 2.716700000000155e-05}, {'diff': 2.761100000000377e-05}, {'diff': 2.7055999999997526e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:05.456" endtime="20201030 18:28:05.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.476" level="INFO">${ACCURACY} = {'diff': [2.762500000000334e-05, 2.7458000000001037e-05, 2.7596999999997263e-05, 2.716700000000155e-05, 2.761100000000377e-05, 2.7055999999997526e-05, 2.7486000000000177e-05, 2.6749999999998997e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:05.467" endtime="20201030 18:28:05.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.487" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:05.484" endtime="20201030 18:28:05.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.492" level="INFO">VALUE: [2.762500000000334e-05, 2.7458000000001037e-05, 2.7596999999997263e-05, 2.716700000000155e-05, 2.761100000000377e-05, 2.7055999999997526e-05, 2.7486000000000177e-05, 2.6749999999998997e-05, 2.7056000000004465e-05, 2.7194000000001217e-05, 2.695900000000001e-05, 2.715300000000198e-05, 2.7499999999999747e-05, 2.7512999999999843e-05, 2.683300000000388e-05, 2.6958000000000537e-05, 2.7499999999999747e-05, 2.6832999999996943e-05, 2.7222000000000357e-05, 2.6721999999999857e-05, 2.7513999999999317e-05, 2.7499999999999747e-05, 2.7388999999995722e-05, 2.7068999999997623e-05, 2.7486000000000177e-05, 2.762500000000334e-05, 2.6943999999994028e-05, 2.7528000000005826e-05, 2.7235999999999927e-05, 2.74170000000018e-05, 2.718100000000112e-05, 2.7055999999997526e-05, 2.738900000000266e-05, 2.761100000000377e-05, 2.7277999999998637e-05, 2.6721999999999857e-05, 2.6764000000005506e-05, 2.67090000000067e-05, 2.738900000000266e-05, 2.715300000000198e-05, 2.7027999999998387e-05, 2.7041999999997957e-05, 2.6860999999996082e-05, 2.7013999999998817e-05, 2.7166000000002077e-05, 2.734700000000395e-05, 2.7180000000001647e-05, 2.716599999999514e-05, 2.763900000000291e-05, 2.738900000000266e-05]</msg>
<status status="PASS" starttime="20201030 18:28:05.489" endtime="20201030 18:28:05.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.478" endtime="20201030 18:28:05.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.504" endtime="20201030 18:28:05.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.500" endtime="20201030 18:28:05.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.498" endtime="20201030 18:28:05.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.017" endtime="20201030 18:28:05.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.016" endtime="20201030 18:28:05.529"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.552" endtime="20201030 18:28:05.571"></status>
</kw>
<msg timestamp="20201030 18:28:05.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.548" endtime="20201030 18:28:05.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.574" endtime="20201030 18:28:05.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.580" endtime="20201030 18:28:05.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.541" endtime="20201030 18:28:05.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.535" endtime="20201030 18:28:05.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.604" endtime="20201030 18:28:05.940"></status>
</kw>
<msg timestamp="20201030 18:28:05.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040576431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040604306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.601" endtime="20201030 18:28:05.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040576431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040604306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.949" endtime="20201030 18:28:05.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.968" endtime="20201030 18:28:05.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.593" endtime="20201030 18:28:05.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.588" endtime="20201030 18:28:05.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.985" level="INFO">${RESULT} = [{'diff': 2.7874999999996652e-05}, {'diff': 2.8054999999999053e-05}, {'diff': 2.813900000000341e-05}, {'diff': 2.8277000000000163e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.8166000000003077e-0...</msg>
<status status="PASS" starttime="20201030 18:28:05.977" endtime="20201030 18:28:05.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:05.997" level="INFO">${ACCURACY} = {'diff': [2.7874999999996652e-05, 2.8054999999999053e-05, 2.813900000000341e-05, 2.8277000000000163e-05, 2.7680000000002147e-05, 2.8166000000003077e-05, 2.7736000000000427e-05, 2.7722000000000857e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:05.987" endtime="20201030 18:28:05.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.007" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.005" endtime="20201030 18:28:06.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.013" level="INFO">VALUE: [2.7874999999996652e-05, 2.8054999999999053e-05, 2.813900000000341e-05, 2.8277000000000163e-05, 2.7680000000002147e-05, 2.8166000000003077e-05, 2.7736000000000427e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7957999999994598e-05, 2.8180000000002647e-05, 2.8055000000005992e-05, 2.783300000000488e-05, 2.8277999999999637e-05, 2.7958000000001537e-05, 2.8264000000000067e-05, 2.816700000000255e-05, 2.8042000000005896e-05, 2.7958999999994072e-05, 2.8180999999995182e-05, 2.8292000000006146e-05, 2.818100000000212e-05, 2.8402999999996292e-05, 2.795900000000101e-05, 2.8055999999998527e-05, 2.793100000000187e-05, 2.795900000000101e-05, 2.816700000000255e-05, 2.7833999999997416e-05, 2.7944000000001967e-05, 2.8541999999999457e-05, 2.8388999999996722e-05, 2.794399999999503e-05, 2.819399999999528e-05, 2.7818999999998373e-05, 2.8514000000000317e-05, 2.8054999999999053e-05, 2.8180000000002647e-05, 2.838900000000366e-05, 2.8291999999999207e-05, 2.8013999999999817e-05, 2.8500000000000747e-05, 2.8027999999999387e-05, 2.783300000000488e-05, 2.8277999999999637e-05, 2.7820000000004785e-05, 2.8290999999999733e-05, 2.838900000000366e-05, 2.8277999999999637e-05, 2.7834000000004355e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.010" endtime="20201030 18:28:06.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.998" endtime="20201030 18:28:06.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.026" endtime="20201030 18:28:06.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.021" endtime="20201030 18:28:06.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.019" endtime="20201030 18:28:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.531" endtime="20201030 18:28:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.530" endtime="20201030 18:28:06.051"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.073" endtime="20201030 18:28:06.092"></status>
</kw>
<msg timestamp="20201030 18:28:06.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.070" endtime="20201030 18:28:06.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.096" endtime="20201030 18:28:06.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.102" endtime="20201030 18:28:06.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.063" endtime="20201030 18:28:06.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.057" endtime="20201030 18:28:06.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.125" endtime="20201030 18:28:06.467"></status>
</kw>
<msg timestamp="20201030 18:28:06.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.122" endtime="20201030 18:28:06.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041104931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.477" endtime="20201030 18:28:06.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.496" endtime="20201030 18:28:06.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.114" endtime="20201030 18:28:06.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.110" endtime="20201030 18:28:06.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.514" level="INFO">${RESULT} = [{'diff': 2.9638000000005438e-05}, {'diff': 2.9222000000002357e-05}, {'diff': 2.9208000000002787e-05}, {'diff': 2.9305000000000303e-05}, {'diff': 2.9180000000003647e-05}, {'diff': 2.916599999999714e-0...</msg>
<status status="PASS" starttime="20201030 18:28:06.505" endtime="20201030 18:28:06.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:06.523" level="INFO">${ACCURACY} = {'diff': [2.9638000000005438e-05, 2.9222000000002357e-05, 2.9208000000002787e-05, 2.9305000000000303e-05, 2.9180000000003647e-05, 2.916599999999714e-05, 2.9374999999998153e-05, 2.8916999999996362e-05,...</msg>
<status status="PASS" starttime="20201030 18:28:06.516" endtime="20201030 18:28:06.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.534" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:06.532" endtime="20201030 18:28:06.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.540" level="INFO">VALUE: [2.9638000000005438e-05, 2.9222000000002357e-05, 2.9208000000002787e-05, 2.9305000000000303e-05, 2.9180000000003647e-05, 2.916599999999714e-05, 2.9374999999998153e-05, 2.8916999999996362e-05, 2.8958000000002537e-05, 2.9041999999999957e-05, 2.9500000000001747e-05, 2.8818999999999373e-05, 2.9514000000001317e-05, 2.9610999999998833e-05, 2.915300000000398e-05, 2.894500000000244e-05, 2.9388999999997723e-05, 2.9360999999998583e-05, 2.9486000000002177e-05, 2.9666000000004578e-05, 2.9402999999997292e-05, 2.9292000000000207e-05, 2.9152999999997042e-05, 2.9041999999999957e-05, 2.9444000000003467e-05, 2.872300000000133e-05, 2.912500000000484e-05, 2.9485999999995238e-05, 2.9555000000000553e-05, 2.9277000000001163e-05, 2.9055000000000053e-05, 2.912500000000484e-05, 2.9485999999995238e-05, 2.9291000000000733e-05, 2.9541000000000983e-05, 2.894399999999603e-05, 2.89579999999956e-05, 2.9055000000000053e-05, 2.9402999999997292e-05, 2.9569000000000123e-05, 2.9610999999998833e-05, 2.915300000000398e-05, 2.884700000000545e-05, 2.9500000000001747e-05, 2.9055999999999527e-05, 2.9416999999996862e-05, 2.9152999999997042e-05, 2.8819999999998847e-05, 2.918100000000312e-05, 2.8736999999993962e-05]</msg>
<status status="PASS" starttime="20201030 18:28:06.537" endtime="20201030 18:28:06.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.525" endtime="20201030 18:28:06.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.552" endtime="20201030 18:28:06.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.548" endtime="20201030 18:28:06.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.546" endtime="20201030 18:28:06.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.053" endtime="20201030 18:28:06.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.051" endtime="20201030 18:28:06.614"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.673" endtime="20201030 18:28:06.704"></status>
</kw>
<msg timestamp="20201030 18:28:06.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.667" endtime="20201030 18:28:06.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.708" endtime="20201030 18:28:06.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.714" endtime="20201030 18:28:06.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.651" endtime="20201030 18:28:06.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.638" endtime="20201030 18:28:06.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.737" endtime="20201030 18:28:07.081"></status>
</kw>
<msg timestamp="20201030 18:28:07.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.120418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.734" endtime="20201030 18:28:07.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.120388444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.120418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.090" endtime="20201030 18:28:07.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.109" endtime="20201030 18:28:07.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.727" endtime="20201030 18:28:07.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.722" endtime="20201030 18:28:07.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.127" level="INFO">${RESULT} = [{'diff': 3.0278000000008576e-05}, {'diff': 2.9819000000000373e-05}, {'diff': 3.019399999999728e-05}, {'diff': 3.052800000000189e-05}, {'diff': 2.994399999999009e-05}, {'diff': 3.0264000000002067e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:07.118" endtime="20201030 18:28:07.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.136" level="INFO">${ACCURACY} = {'diff': [3.0278000000008576e-05, 2.9819000000000373e-05, 3.019399999999728e-05, 3.052800000000189e-05, 2.994399999999009e-05, 3.0264000000002067e-05, 2.992999999999746e-05, 3.016599999999814e-05, 2.9...</msg>
<status status="PASS" starttime="20201030 18:28:07.129" endtime="20201030 18:28:07.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.147" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.144" endtime="20201030 18:28:07.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.152" level="INFO">VALUE: [3.0278000000008576e-05, 2.9819000000000373e-05, 3.019399999999728e-05, 3.052800000000189e-05, 2.994399999999009e-05, 3.0264000000002067e-05, 2.992999999999746e-05, 3.016599999999814e-05, 2.992999999999746e-05, 2.990300000001167e-05, 3.0194999999996752e-05, 2.9777999999994198e-05, 3.0194999999996752e-05, 3.0056000000000527e-05, 2.9832999999993004e-05, 3.0070000000007036e-05, 2.994500000000344e-05, 2.9722000000009796e-05, 3.0194999999996752e-05, 3.0278000000008576e-05, 2.994500000000344e-05, 2.9736000000002427e-05, 3.0416000000005328e-05, 3.0402999999998293e-05, 3.0069000000007562e-05, 3.0040999999994544e-05, 3.0055000000001053e-05, 3.0291000000001733e-05, 3.0040999999994544e-05, 3.062500000000634e-05, 2.9846999999999513e-05, 3.066699999999811e-05, 3.0055000000001053e-05, 2.997199999998923e-05, 3.0360999999992644e-05, 2.9777999999994198e-05, 2.99579999999966e-05, 3.0277999999994698e-05, 2.992999999999746e-05, 3.038900000000566e-05, 2.968100000000362e-05, 3.0320000000000347e-05, 3.0166999999997612e-05, 2.972199999999592e-05, 3.0264000000002067e-05, 2.994500000000344e-05, 3.061099999999983e-05, 2.9722000000009796e-05, 3.0056000000000527e-05, 2.9848000000012864e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.149" endtime="20201030 18:28:07.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.138" endtime="20201030 18:28:07.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.166" endtime="20201030 18:28:07.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.160" endtime="20201030 18:28:07.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.158" endtime="20201030 18:28:07.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.626" endtime="20201030 18:28:07.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.618" endtime="20201030 18:28:07.191"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.214" endtime="20201030 18:28:07.233"></status>
</kw>
<msg timestamp="20201030 18:28:07.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.210" endtime="20201030 18:28:07.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.237" endtime="20201030 18:28:07.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.243" endtime="20201030 18:28:07.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.203" endtime="20201030 18:28:07.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.197" endtime="20201030 18:28:07.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.266" endtime="20201030 18:28:07.597"></status>
</kw>
<msg timestamp="20201030 18:28:07.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040891903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.263" endtime="20201030 18:28:07.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040891903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040922819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.607" endtime="20201030 18:28:07.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.626" endtime="20201030 18:28:07.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.256" endtime="20201030 18:28:07.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.251" endtime="20201030 18:28:07.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:07.643" level="INFO">${RESULT} = [{'diff': 3.091599999999889e-05}, {'diff': 3.116700000000555e-05}, {'diff': 3.073599999999649e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.093100000000487e-05}, {'diff': 3.116599999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:07.634" endtime="20201030 18:28:07.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:07.653" level="INFO">${ACCURACY} = {'diff': [3.091599999999889e-05, 3.116700000000555e-05, 3.073599999999649e-05, 3.116699999999861e-05, 3.093100000000487e-05, 3.116599999999914e-05, 3.105500000000205e-05, 3.1040999999995544e-05, 3.106...</msg>
<status status="PASS" starttime="20201030 18:28:07.645" endtime="20201030 18:28:07.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.670" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:28:07.667" endtime="20201030 18:28:07.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.675" level="INFO">VALUE: [3.091599999999889e-05, 3.116700000000555e-05, 3.073599999999649e-05, 3.116699999999861e-05, 3.093100000000487e-05, 3.116599999999914e-05, 3.105500000000205e-05, 3.1040999999995544e-05, 3.1068999999994684e-05, 3.138899999999972e-05, 3.083300000000094e-05, 3.094399999999803e-05, 3.066599999999864e-05, 3.129199999999527e-05, 3.116699999999861e-05, 3.138899999999972e-05, 3.127800000000264e-05, 3.158300000000169e-05, 3.106999999999416e-05, 3.084700000000051e-05, 3.09449999999975e-05, 3.14579999999981e-05, 3.073600000000343e-05, 3.120799999999785e-05, 3.151400000000332e-05, 3.073599999999649e-05, 3.126400000000307e-05, 3.127800000000264e-05, 3.102800000000239e-05, 3.093099999999793e-05, 3.083400000000042e-05, 3.072200000000386e-05, 3.083300000000094e-05, 3.138800000000025e-05, 3.11249999999999e-05, 3.129100000000273e-05, 3.148599999999724e-05, 3.134700000000101e-05, 3.083300000000094e-05, 3.094400000000497e-05, 3.108300000000119e-05, 3.090299999999879e-05, 3.084700000000051e-05, 3.151399999999638e-05, 3.095800000000454e-05, 3.165299999999954e-05, 3.091699999999836e-05, 3.126399999999613e-05, 3.150000000000375e-05, 3.070899999999682e-05]</msg>
<status status="PASS" starttime="20201030 18:28:07.672" endtime="20201030 18:28:07.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.655" endtime="20201030 18:28:07.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:07.689" endtime="20201030 18:28:07.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.684" endtime="20201030 18:28:07.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.681" endtime="20201030 18:28:07.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.193" endtime="20201030 18:28:07.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.192" endtime="20201030 18:28:07.714"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.738" endtime="20201030 18:28:07.757"></status>
</kw>
<msg timestamp="20201030 18:28:07.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.734" endtime="20201030 18:28:07.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:07.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:07.760" endtime="20201030 18:28:07.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.767" endtime="20201030 18:28:07.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.727" endtime="20201030 18:28:07.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.721" endtime="20201030 18:28:07.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:07.790" endtime="20201030 18:28:08.139"></status>
</kw>
<msg timestamp="20201030 18:28:08.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:07.787" endtime="20201030 18:28:08.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.149" endtime="20201030 18:28:08.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.168" endtime="20201030 18:28:08.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.780" endtime="20201030 18:28:08.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.775" endtime="20201030 18:28:08.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.185" level="INFO">${RESULT} = [{'diff': 3.272299999999839e-05}, {'diff': 3.205600000000253e-05}, {'diff': 3.195899999999807e-05}, {'diff': 3.248600000000518e-05}, {'diff': 3.25979999999948e-05}, {'diff': 3.194500000000544e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:08.176" endtime="20201030 18:28:08.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.197" level="INFO">${ACCURACY} = {'diff': [3.272299999999839e-05, 3.205600000000253e-05, 3.195899999999807e-05, 3.248600000000518e-05, 3.25979999999948e-05, 3.194500000000544e-05, 3.182000000000185e-05, 3.183400000000142e-05, 3.24999...</msg>
<status status="PASS" starttime="20201030 18:28:08.187" endtime="20201030 18:28:08.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.208" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.205" endtime="20201030 18:28:08.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.213" level="INFO">VALUE: [3.272299999999839e-05, 3.205600000000253e-05, 3.195899999999807e-05, 3.248600000000518e-05, 3.25979999999948e-05, 3.194500000000544e-05, 3.182000000000185e-05, 3.183400000000142e-05, 3.249999999999781e-05, 3.238900000000072e-05, 3.206900000000262e-05, 3.1832999999995004e-05, 3.184700000000151e-05, 3.183300000000194e-05, 3.217999999999971e-05, 3.234700000000201e-05, 3.2290999999996794e-05, 3.205500000000305e-05, 3.1832999999995004e-05, 3.251399999999738e-05, 3.2596999999995324e-05, 3.215300000000004e-05, 3.193099999999893e-05, 3.2610999999994894e-05, 3.234700000000201e-05, 3.199999999999731e-05, 3.172200000000486e-05, 3.197299999999764e-05, 3.22779999999967e-05, 3.229199999999627e-05, 3.240300000000029e-05, 3.218099999999918e-05, 3.22779999999967e-05, 3.22779999999967e-05, 3.22500000000045e-05, 3.183400000000142e-05, 3.2582999999995754e-05, 3.26250000000014e-05, 3.259700000000226e-05, 3.216600000000014e-05, 3.237500000000115e-05, 3.192999999999946e-05, 3.229199999999627e-05, 3.22779999999967e-05, 3.226399999999713e-05, 3.1750000000004e-05, 3.18050000000028e-05, 3.22370000000044e-05, 3.22779999999967e-05, 3.216699999999961e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.210" endtime="20201030 18:28:08.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.198" endtime="20201030 18:28:08.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.226" endtime="20201030 18:28:08.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.221" endtime="20201030 18:28:08.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.219" endtime="20201030 18:28:08.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.717" endtime="20201030 18:28:08.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:07.716" endtime="20201030 18:28:08.251"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.274" endtime="20201030 18:28:08.294"></status>
</kw>
<msg timestamp="20201030 18:28:08.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.271" endtime="20201030 18:28:08.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.297" endtime="20201030 18:28:08.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.304" endtime="20201030 18:28:08.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.263" endtime="20201030 18:28:08.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.258" endtime="20201030 18:28:08.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.327" endtime="20201030 18:28:08.680"></status>
</kw>
<msg timestamp="20201030 18:28:08.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041988375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.324" endtime="20201030 18:28:08.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041988375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042021736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.689" endtime="20201030 18:28:08.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.709" endtime="20201030 18:28:08.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.317" endtime="20201030 18:28:08.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.312" endtime="20201030 18:28:08.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:08.727" level="INFO">${RESULT} = [{'diff': 3.3360999999995644e-05}, {'diff': 3.276399999999763e-05}, {'diff': 3.3166999999993674e-05}, {'diff': 3.279199999999677e-05}, {'diff': 3.294400000000003e-05}, {'diff': 3.2666999999993174e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:08.718" endtime="20201030 18:28:08.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:08.737" level="INFO">${ACCURACY} = {'diff': [3.3360999999995644e-05, 3.276399999999763e-05, 3.3166999999993674e-05, 3.279199999999677e-05, 3.294400000000003e-05, 3.2666999999993174e-05, 3.302799999999745e-05, 3.2832999999996004e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:08.730" endtime="20201030 18:28:08.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.748" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:28:08.746" endtime="20201030 18:28:08.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.754" level="INFO">VALUE: [3.3360999999995644e-05, 3.276399999999763e-05, 3.3166999999993674e-05, 3.279199999999677e-05, 3.294400000000003e-05, 3.2666999999993174e-05, 3.302799999999745e-05, 3.2832999999996004e-05, 3.295900000000601e-05, 3.295899999999907e-05, 3.341700000000086e-05, 3.330600000000378e-05, 3.343000000000096e-05, 3.326399999999813e-05, 3.293099999999993e-05, 3.337500000000215e-05, 3.293099999999993e-05, 3.2776999999997725e-05, 3.2804999999996864e-05, 3.336100000000258e-05, 3.349999999999881e-05, 3.3596999999996324e-05, 3.273600000000543e-05, 3.283300000000294e-05, 3.3596999999996324e-05, 3.351399999999838e-05, 3.306900000000362e-05, 3.2818999999996434e-05, 3.32779999999977e-05, 3.270800000000629e-05, 3.349999999999881e-05, 3.304199999999702e-05, 3.329199999999727e-05, 3.30700000000031e-05, 3.349999999999881e-05, 3.3374999999995214e-05, 3.351399999999838e-05, 3.283399999999548e-05, 3.281999999999591e-05, 3.351400000000532e-05, 3.272299999999839e-05, 3.297199999999917e-05, 3.351399999999838e-05, 3.272199999999892e-05, 3.361100000000283e-05, 3.337500000000215e-05, 3.349999999999881e-05, 3.366700000000111e-05, 3.281900000000337e-05, 3.32779999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:28:08.750" endtime="20201030 18:28:08.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.739" endtime="20201030 18:28:08.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:08.766" endtime="20201030 18:28:08.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.762" endtime="20201030 18:28:08.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.759" endtime="20201030 18:28:08.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.253" endtime="20201030 18:28:08.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.252" endtime="20201030 18:28:08.792"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.815" endtime="20201030 18:28:08.837"></status>
</kw>
<msg timestamp="20201030 18:28:08.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.812" endtime="20201030 18:28:08.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:08.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:08.840" endtime="20201030 18:28:08.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.846" endtime="20201030 18:28:08.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.805" endtime="20201030 18:28:08.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.799" endtime="20201030 18:28:08.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:08.870" endtime="20201030 18:28:09.214"></status>
</kw>
<msg timestamp="20201030 18:28:09.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044067083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044101306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:08.867" endtime="20201030 18:28:09.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044067083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044101306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.224" endtime="20201030 18:28:09.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.243" endtime="20201030 18:28:09.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.859" endtime="20201030 18:28:09.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.855" endtime="20201030 18:28:09.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.260" level="INFO">${RESULT} = [{'diff': 3.422299999999989e-05}, {'diff': 3.422299999999989e-05}, {'diff': 3.4596999999997324e-05}, {'diff': 3.4596999999997324e-05}, {'diff': 3.3860999999996144e-05}, {'diff': 3.4276999999999225e-05...</msg>
<status status="PASS" starttime="20201030 18:28:09.252" endtime="20201030 18:28:09.261"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.270" level="INFO">${ACCURACY} = {'diff': [3.422299999999989e-05, 3.422299999999989e-05, 3.4596999999997324e-05, 3.4596999999997324e-05, 3.3860999999996144e-05, 3.4276999999999225e-05, 3.415200000000257e-05, 3.4332999999997504e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:09.262" endtime="20201030 18:28:09.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.281" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.279" endtime="20201030 18:28:09.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.287" level="INFO">VALUE: [3.422299999999989e-05, 3.422299999999989e-05, 3.4596999999997324e-05, 3.4596999999997324e-05, 3.3860999999996144e-05, 3.4276999999999225e-05, 3.415200000000257e-05, 3.4332999999997504e-05, 3.426400000000607e-05, 3.418000000000171e-05, 3.44580000000011e-05, 3.415300000000204e-05, 3.4082999999997254e-05, 3.41250000000029e-05, 3.3832999999997004e-05, 3.404199999999802e-05, 3.42779999999987e-05, 3.405600000000453e-05, 3.408399999999673e-05, 3.42779999999987e-05, 3.4318999999997934e-05, 3.416700000000161e-05, 3.381999999999691e-05, 3.397200000000017e-05, 3.415300000000204e-05, 3.449999999999981e-05, 3.374999999999906e-05, 3.383300000000394e-05, 3.394400000000103e-05, 3.444400000000153e-05, 3.4388999999995784e-05, 3.406900000000462e-05, 3.413900000000247e-05, 3.42779999999987e-05, 3.4624999999996464e-05, 3.4610999999996894e-05, 3.406999999999716e-05, 3.393100000000093e-05, 3.404199999999802e-05, 3.3846999999996574e-05, 3.4624999999996464e-05, 3.448600000000024e-05, 3.373599999999949e-05, 3.416700000000161e-05, 3.372199999999992e-05, 3.390300000000179e-05, 3.42779999999987e-05, 3.373699999999896e-05, 3.438799999999631e-05, 3.373599999999949e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.283" endtime="20201030 18:28:09.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.272" endtime="20201030 18:28:09.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.301" endtime="20201030 18:28:09.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.295" endtime="20201030 18:28:09.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.292" endtime="20201030 18:28:09.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.794" endtime="20201030 18:28:09.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:08.793" endtime="20201030 18:28:09.326"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.349" endtime="20201030 18:28:09.368"></status>
</kw>
<msg timestamp="20201030 18:28:09.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.345" endtime="20201030 18:28:09.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.372" endtime="20201030 18:28:09.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.378" endtime="20201030 18:28:09.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.338" endtime="20201030 18:28:09.383"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.332" endtime="20201030 18:28:09.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.401" endtime="20201030 18:28:09.741"></status>
</kw>
<msg timestamp="20201030 18:28:09.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041458722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.398" endtime="20201030 18:28:09.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041458722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041494292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.750" endtime="20201030 18:28:09.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.770" endtime="20201030 18:28:09.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.391" endtime="20201030 18:28:09.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.386" endtime="20201030 18:28:09.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.787" level="INFO">${RESULT} = [{'diff': 3.556999999999866e-05}, {'diff': 3.540300000000329e-05}, {'diff': 3.550000000000081e-05}, {'diff': 3.493100000000193e-05}, {'diff': 3.518000000000271e-05}, {'diff': 3.483300000000494e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:09.778" endtime="20201030 18:28:09.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:09.798" level="INFO">${ACCURACY} = {'diff': [3.556999999999866e-05, 3.540300000000329e-05, 3.550000000000081e-05, 3.493100000000193e-05, 3.518000000000271e-05, 3.483300000000494e-05, 3.548600000000124e-05, 3.483300000000494e-05, 3.5624...</msg>
<status status="PASS" starttime="20201030 18:28:09.789" endtime="20201030 18:28:09.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.809" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:28:09.807" endtime="20201030 18:28:09.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.815" level="INFO">VALUE: [3.556999999999866e-05, 3.540300000000329e-05, 3.550000000000081e-05, 3.493100000000193e-05, 3.518000000000271e-05, 3.483300000000494e-05, 3.548600000000124e-05, 3.483300000000494e-05, 3.5624999999997464e-05, 3.472200000000092e-05, 3.473600000000049e-05, 3.5374999999997214e-05, 3.5610999999997894e-05, 3.472200000000092e-05, 3.495799999999466e-05, 3.494400000000203e-05, 3.5416999999995924e-05, 3.5624999999997464e-05, 3.518100000000218e-05, 3.505599999999859e-05, 3.486199999999662e-05, 3.519500000000175e-05, 3.470900000000082e-05, 3.520900000000132e-05, 3.4874999999996714e-05, 3.4930999999994994e-05, 3.495900000000107e-05, 3.520800000000185e-05, 3.559800000000474e-05, 3.5069000000005623e-05, 3.470800000000135e-05, 3.5374999999997214e-05, 3.5082999999998254e-05, 3.516600000000314e-05, 3.5290999999999795e-05, 3.552799999999995e-05, 3.529199999999927e-05, 3.517999999999577e-05, 3.5068999999998685e-05, 3.504200000000596e-05, 3.475000000000006e-05, 3.472200000000092e-05, 3.494399999999509e-05, 3.475000000000006e-05, 3.470800000000135e-05, 3.497300000000064e-05, 3.5610999999997894e-05, 3.483399999999748e-05, 3.515300000000304e-05, 3.520900000000132e-05]</msg>
<status status="PASS" starttime="20201030 18:28:09.812" endtime="20201030 18:28:09.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.800" endtime="20201030 18:28:09.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.828" endtime="20201030 18:28:09.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.823" endtime="20201030 18:28:09.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.821" endtime="20201030 18:28:09.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.328" endtime="20201030 18:28:09.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.327" endtime="20201030 18:28:09.853"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.876" endtime="20201030 18:28:09.896"></status>
</kw>
<msg timestamp="20201030 18:28:09.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.873" endtime="20201030 18:28:09.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.899" endtime="20201030 18:28:09.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.905" endtime="20201030 18:28:09.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.865" endtime="20201030 18:28:09.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.859" endtime="20201030 18:28:09.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.929" endtime="20201030 18:28:10.266"></status>
</kw>
<msg timestamp="20201030 18:28:10.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0419255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041961625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:09.926" endtime="20201030 18:28:10.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0419255, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041961625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:10.276" endtime="20201030 18:28:10.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.294" endtime="20201030 18:28:10.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.918" endtime="20201030 18:28:10.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.913" endtime="20201030 18:28:10.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.312" level="INFO">${RESULT} = [{'diff': 3.61250000000049e-05}, {'diff': 3.582000000000585e-05}, {'diff': 3.651400000000138e-05}, {'diff': 3.5832999999999005e-05}, {'diff': 3.6180999999996244e-05}, {'diff': 3.6180999999996244e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:10.303" endtime="20201030 18:28:10.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.328" level="INFO">${ACCURACY} = {'diff': [3.61250000000049e-05, 3.582000000000585e-05, 3.651400000000138e-05, 3.5832999999999005e-05, 3.6180999999996244e-05, 3.6180999999996244e-05, 3.618100000000318e-05, 3.616700000000361e-05, 3.59...</msg>
<status status="PASS" starttime="20201030 18:28:10.314" endtime="20201030 18:28:10.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.339" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.337" endtime="20201030 18:28:10.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.344" level="INFO">VALUE: [3.61250000000049e-05, 3.582000000000585e-05, 3.651400000000138e-05, 3.5832999999999005e-05, 3.6180999999996244e-05, 3.6180999999996244e-05, 3.618100000000318e-05, 3.616700000000361e-05, 3.595900000000207e-05, 3.609800000000524e-05, 3.649999999999487e-05, 3.6624999999998464e-05, 3.5708999999994884e-05, 3.617999999999677e-05, 3.5819000000006374e-05, 3.638799999999831e-05, 3.6596999999999325e-05, 3.6610999999998894e-05, 3.618000000000371e-05, 3.5833000000005943e-05, 3.651400000000138e-05, 3.600000000000131e-05, 3.6055000000000115e-05, 3.5888999999997284e-05, 3.5846999999998574e-05, 3.62780000000007e-05, 3.5958999999995134e-05, 3.655600000000009e-05, 3.616700000000361e-05, 3.6596999999999325e-05, 3.616700000000361e-05, 3.597300000000164e-05, 3.5930999999995994e-05, 3.619400000000328e-05, 3.640199999999788e-05, 3.62780000000007e-05, 3.6305000000000365e-05, 3.638799999999831e-05, 3.6276999999994286e-05, 3.5846999999998574e-05, 3.61659999999972e-05, 3.6610999999998894e-05, 3.575000000000106e-05, 3.625000000000156e-05, 3.5832999999999005e-05, 3.594400000000303e-05, 3.66250000000054e-05, 3.64859999999953e-05, 3.62780000000007e-05, 3.650000000000181e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.341" endtime="20201030 18:28:10.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.330" endtime="20201030 18:28:10.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.357" endtime="20201030 18:28:10.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.352" endtime="20201030 18:28:10.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.350" endtime="20201030 18:28:10.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.855" endtime="20201030 18:28:10.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.854" endtime="20201030 18:28:10.382"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.405" endtime="20201030 18:28:10.424"></status>
</kw>
<msg timestamp="20201030 18:28:10.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.401" endtime="20201030 18:28:10.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.428" endtime="20201030 18:28:10.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.434" endtime="20201030 18:28:10.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.394" endtime="20201030 18:28:10.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.388" endtime="20201030 18:28:10.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.457" endtime="20201030 18:28:10.799"></status>
</kw>
<msg timestamp="20201030 18:28:10.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041376653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.454" endtime="20201030 18:28:10.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041376653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041413569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.808" endtime="20201030 18:28:10.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.828" endtime="20201030 18:28:10.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.447" endtime="20201030 18:28:10.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.442" endtime="20201030 18:28:10.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:10.845" level="INFO">${RESULT} = [{'diff': 3.691599999999795e-05}, {'diff': 3.672199999999598e-05}, {'diff': 3.717999999999777e-05}, {'diff': 3.741600000000539e-05}, {'diff': 3.7290999999994856e-05}, {'diff': 3.7305000000001365e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:10.836" endtime="20201030 18:28:10.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:10.855" level="INFO">${ACCURACY} = {'diff': [3.691599999999795e-05, 3.672199999999598e-05, 3.717999999999777e-05, 3.741600000000539e-05, 3.7290999999994856e-05, 3.7305000000001365e-05, 3.672200000000292e-05, 3.717999999999777e-05, 3.74...</msg>
<status status="PASS" starttime="20201030 18:28:10.847" endtime="20201030 18:28:10.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.866" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:28:10.863" endtime="20201030 18:28:10.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.871" level="INFO">VALUE: [3.691599999999795e-05, 3.672199999999598e-05, 3.717999999999777e-05, 3.741600000000539e-05, 3.7290999999994856e-05, 3.7305000000001365e-05, 3.672200000000292e-05, 3.717999999999777e-05, 3.7402999999998354e-05, 3.6833000000000005e-05, 3.676400000000163e-05, 3.6944999999996564e-05, 3.7388999999998784e-05, 3.673600000000249e-05, 3.7402999999998354e-05, 3.727799999999476e-05, 3.705600000000059e-05, 3.72780000000017e-05, 3.6958999999996134e-05, 3.6860999999999144e-05, 3.6902999999997854e-05, 3.72780000000017e-05, 3.6874999999998714e-05, 3.740199999999888e-05, 3.690199999999838e-05, 3.741600000000539e-05, 3.749999999999587e-05, 3.7277000000002225e-05, 3.768100000000468e-05, 3.687500000000565e-05, 3.7055000000001115e-05, 3.751400000000238e-05, 3.750000000000281e-05, 3.694399999999709e-05, 3.705600000000059e-05, 3.7124999999998964e-05, 3.6944999999996564e-05, 3.7374999999999214e-05, 3.672200000000292e-05, 3.723600000000299e-05, 3.745799999999716e-05, 3.7388999999998784e-05, 3.702800000000145e-05, 3.72780000000017e-05, 3.7512999999995966e-05, 3.750000000000281e-05, 3.715199999999863e-05, 3.7597000000000325e-05, 3.720800000000385e-05, 3.715200000000557e-05]</msg>
<status status="PASS" starttime="20201030 18:28:10.868" endtime="20201030 18:28:10.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.857" endtime="20201030 18:28:10.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:10.884" endtime="20201030 18:28:10.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.880" endtime="20201030 18:28:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.877" endtime="20201030 18:28:10.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.384" endtime="20201030 18:28:10.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.383" endtime="20201030 18:28:10.909"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.932" endtime="20201030 18:28:10.953"></status>
</kw>
<msg timestamp="20201030 18:28:10.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.929" endtime="20201030 18:28:10.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:10.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.956" endtime="20201030 18:28:10.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.963" endtime="20201030 18:28:10.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.921" endtime="20201030 18:28:10.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.916" endtime="20201030 18:28:10.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.987" endtime="20201030 18:28:11.325"></status>
</kw>
<msg timestamp="20201030 18:28:11.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:10.983" endtime="20201030 18:28:11.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043037111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.334" endtime="20201030 18:28:11.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.353" endtime="20201030 18:28:11.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.976" endtime="20201030 18:28:11.359"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.971" endtime="20201030 18:28:11.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.371" level="INFO">${RESULT} = [{'diff': 3.78059999999944e-05}, {'diff': 3.8152999999999104e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.8152999999999104e-05}, {'diff': 3.8625000000000465e-05}, {'diff': 3.8083000000001255e-05...</msg>
<status status="PASS" starttime="20201030 18:28:11.362" endtime="20201030 18:28:11.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.380" level="INFO">${ACCURACY} = {'diff': [3.78059999999944e-05, 3.8152999999999104e-05, 3.8416999999998924e-05, 3.8152999999999104e-05, 3.8625000000000465e-05, 3.8083000000001255e-05, 3.7846999999993636e-05, 3.792999999999852e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:28:11.373" endtime="20201030 18:28:11.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.391" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.389" endtime="20201030 18:28:11.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.397" level="INFO">VALUE: [3.78059999999944e-05, 3.8152999999999104e-05, 3.8416999999998924e-05, 3.8152999999999104e-05, 3.8625000000000465e-05, 3.8083000000001255e-05, 3.7846999999993636e-05, 3.792999999999852e-05, 3.838800000000031e-05, 3.840199999999988e-05, 3.854199999999558e-05, 3.8402999999999354e-05, 3.780600000000134e-05, 3.794400000000503e-05, 3.829199999999533e-05, 3.794399999999809e-05, 3.772199999999698e-05, 3.8680999999998744e-05, 3.7861000000000145e-05, 3.8194999999997814e-05, 3.805600000000159e-05, 3.827799999999576e-05, 3.8194999999997814e-05, 3.8166999999998674e-05, 3.844399999999859e-05, 3.8388999999999784e-05, 3.8166999999998674e-05, 3.8319000000001935e-05, 3.805600000000159e-05, 3.8069000000001685e-05, 3.770799999999741e-05, 3.770800000000435e-05, 3.7861000000000145e-05, 3.8069000000001685e-05, 3.82780000000027e-05, 3.84859999999973e-05, 3.7888999999999284e-05, 3.8444999999998064e-05, 3.824999999999662e-05, 3.7916999999998424e-05, 3.7819000000001435e-05, 3.7833000000001005e-05, 3.851399999999644e-05, 3.8375000000000214e-05, 3.818100000000518e-05, 3.7916999999998424e-05, 3.8138999999999534e-05, 3.8152999999999104e-05, 3.8611000000000895e-05, 3.829200000000227e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.394" endtime="20201030 18:28:11.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.382" endtime="20201030 18:28:11.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.411" endtime="20201030 18:28:11.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.405" endtime="20201030 18:28:11.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.403" endtime="20201030 18:28:11.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.911" endtime="20201030 18:28:11.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.910" endtime="20201030 18:28:11.436"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.459" endtime="20201030 18:28:11.479"></status>
</kw>
<msg timestamp="20201030 18:28:11.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.455" endtime="20201030 18:28:11.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.482" endtime="20201030 18:28:11.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.488" endtime="20201030 18:28:11.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.448" endtime="20201030 18:28:11.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.442" endtime="20201030 18:28:11.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.512" endtime="20201030 18:28:11.853"></status>
</kw>
<msg timestamp="20201030 18:28:11.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041223556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041262444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.509" endtime="20201030 18:28:11.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041223556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041262444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:11.863" endtime="20201030 18:28:11.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.882" endtime="20201030 18:28:11.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.501" endtime="20201030 18:28:11.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.497" endtime="20201030 18:28:11.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:11.900" level="INFO">${RESULT} = [{'diff': 3.888800000000081e-05}, {'diff': 3.91660000000002e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.9596999999995386e-05}, {'diff': 3.894400000000603e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:11.891" endtime="20201030 18:28:11.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:11.911" level="INFO">${ACCURACY} = {'diff': [3.888800000000081e-05, 3.91660000000002e-05, 3.9597000000002325e-05, 3.8875000000000715e-05, 3.9596999999995386e-05, 3.894400000000603e-05, 3.901400000000388e-05, 3.894400000000603e-05, 3.94...</msg>
<status status="PASS" starttime="20201030 18:28:11.902" endtime="20201030 18:28:11.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.922" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:28:11.920" endtime="20201030 18:28:11.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:11.928" level="INFO">VALUE: [3.888800000000081e-05, 3.91660000000002e-05, 3.9597000000002325e-05, 3.8875000000000715e-05, 3.9596999999995386e-05, 3.894400000000603e-05, 3.901400000000388e-05, 3.894400000000603e-05, 3.947199999999873e-05, 3.899999999999737e-05, 3.9194999999998814e-05, 3.905599999999565e-05, 3.926400000000413e-05, 3.927799999999676e-05, 3.8944999999998564e-05, 3.9403000000000354e-05, 3.882000000000191e-05, 3.902799999999651e-05, 3.9625000000001465e-05, 3.8916999999999424e-05, 3.929200000000327e-05, 3.905600000000259e-05, 3.88059999999954e-05, 3.873599999999755e-05, 3.919400000000628e-05, 3.8833000000002005e-05, 3.916599999999326e-05, 3.951399999999744e-05, 3.952799999999701e-05, 3.892999999999952e-05, 3.927799999999676e-05, 3.8832999999995066e-05, 3.89580000000056e-05, 3.9194999999998814e-05, 3.895799999999866e-05, 3.9583000000002755e-05, 3.879200000000277e-05, 3.954200000000352e-05, 3.944399999999959e-05, 3.9180999999999244e-05, 3.8722999999997454e-05, 3.927799999999676e-05, 3.907000000000216e-05, 3.9153000000000104e-05, 3.875000000000406e-05, 3.9262999999997716e-05, 3.895799999999866e-05, 3.895799999999866e-05, 3.9054999999996176e-05, 3.9055000000003115e-05]</msg>
<status status="PASS" starttime="20201030 18:28:11.924" endtime="20201030 18:28:11.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.913" endtime="20201030 18:28:11.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:11.940" endtime="20201030 18:28:11.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.936" endtime="20201030 18:28:11.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.933" endtime="20201030 18:28:11.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.438" endtime="20201030 18:28:11.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.437" endtime="20201030 18:28:11.965"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:11.989" endtime="20201030 18:28:12.009"></status>
</kw>
<msg timestamp="20201030 18:28:12.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:11.985" endtime="20201030 18:28:12.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.012" endtime="20201030 18:28:12.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.019" endtime="20201030 18:28:12.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.978" endtime="20201030 18:28:12.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.972" endtime="20201030 18:28:12.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.042" endtime="20201030 18:28:12.381"></status>
</kw>
<msg timestamp="20201030 18:28:12.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.039" endtime="20201030 18:28:12.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.391" endtime="20201030 18:28:12.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.412" endtime="20201030 18:28:12.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.032" endtime="20201030 18:28:12.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.027" endtime="20201030 18:28:12.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.435" level="INFO">${RESULT} = [{'diff': 4.0681000000000744e-05}, {'diff': 4.055600000000409e-05}, {'diff': 4.0610999999995956e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 3.9944999999999564e-05}, {'diff': 4.023599999999905e-05...</msg>
<status status="PASS" starttime="20201030 18:28:12.425" endtime="20201030 18:28:12.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.446" level="INFO">${ACCURACY} = {'diff': [4.0681000000000744e-05, 4.055600000000409e-05, 4.0610999999995956e-05, 4.0167000000000674e-05, 3.9944999999999564e-05, 4.023599999999905e-05, 3.972300000000539e-05, 4.026400000000513e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:28:12.437" endtime="20201030 18:28:12.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.457" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.455" endtime="20201030 18:28:12.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.463" level="INFO">VALUE: [4.0681000000000744e-05, 4.055600000000409e-05, 4.0610999999995956e-05, 4.0167000000000674e-05, 3.9944999999999564e-05, 4.023599999999905e-05, 3.972300000000539e-05, 4.026400000000513e-05, 4.005600000000359e-05, 3.994400000000009e-05, 3.973599999999855e-05, 3.973599999999855e-05, 4.049999999999887e-05, 4.0332999999996566e-05, 4.02780000000047e-05, 3.9903000000000854e-05, 3.970799999999941e-05, 3.994400000000009e-05, 4.0194999999999814e-05, 3.9889000000001285e-05, 4.0167000000000674e-05, 3.9832999999996066e-05, 3.9958999999999134e-05, 4.0417000000000924e-05, 4.026399999999819e-05, 4.03059999999969e-05, 4.050000000000581e-05, 3.9722999999998454e-05, 4.01660000000012e-05, 4.0125000000001965e-05, 3.9875000000001715e-05, 4.0611000000002895e-05, 3.9818999999996496e-05, 4.050000000000581e-05, 4.0389000000001785e-05, 4.0417000000000924e-05, 4.02780000000047e-05, 3.973599999999855e-05, 4.02780000000047e-05, 4.0569000000004185e-05, 4.0166999999993735e-05, 4.0375000000002215e-05, 4.008399999999579e-05, 4.0597000000003325e-05, 3.982000000000291e-05, 4.0610999999995956e-05, 4.0611000000002895e-05, 4.02780000000047e-05, 4.0125000000001965e-05, 4.029199999999733e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.460" endtime="20201030 18:28:12.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.448" endtime="20201030 18:28:12.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:12.476" endtime="20201030 18:28:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.471" endtime="20201030 18:28:12.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.469" endtime="20201030 18:28:12.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.968" endtime="20201030 18:28:12.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:11.966" endtime="20201030 18:28:12.501"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.524" endtime="20201030 18:28:12.543"></status>
</kw>
<msg timestamp="20201030 18:28:12.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.520" endtime="20201030 18:28:12.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:12.547" endtime="20201030 18:28:12.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.553" endtime="20201030 18:28:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.513" endtime="20201030 18:28:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.507" endtime="20201030 18:28:12.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.577" endtime="20201030 18:28:12.919"></status>
</kw>
<msg timestamp="20201030 18:28:12.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.573" endtime="20201030 18:28:12.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:12.928" endtime="20201030 18:28:12.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:12.947" endtime="20201030 18:28:12.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.566" endtime="20201030 18:28:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.561" endtime="20201030 18:28:12.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:12.965" level="INFO">${RESULT} = [{'diff': 4.113799999999612e-05}, {'diff': 4.142999999999508e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.1625000000003465e-05}, {'diff': 4.1054999999998176e-05}, {'diff': 4.1054999999998176e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:12.956" endtime="20201030 18:28:12.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:12.974" level="INFO">${ACCURACY} = {'diff': [4.113799999999612e-05, 4.142999999999508e-05, 4.151399999999944e-05, 4.1625000000003465e-05, 4.1054999999998176e-05, 4.1054999999998176e-05, 4.149999999999987e-05, 4.094400000000109e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:28:12.967" endtime="20201030 18:28:12.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.986" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:28:12.983" endtime="20201030 18:28:12.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:12.991" level="INFO">VALUE: [4.113799999999612e-05, 4.142999999999508e-05, 4.151399999999944e-05, 4.1625000000003465e-05, 4.1054999999998176e-05, 4.1054999999998176e-05, 4.149999999999987e-05, 4.094400000000109e-05, 4.118000000000177e-05, 4.104199999999808e-05, 4.1596999999997386e-05, 4.070800000000041e-05, 4.14860000000003e-05, 4.070800000000041e-05, 4.1625000000003465e-05, 4.084799999999611e-05, 4.073599999999955e-05, 4.0930999999994055e-05, 4.105600000000459e-05, 4.0945000000000564e-05, 4.101400000000588e-05, 4.083400000000348e-05, 4.0847000000003575e-05, 4.151399999999944e-05, 4.094400000000109e-05, 4.0861000000003145e-05, 4.1638999999996096e-05, 4.147200000000073e-05, 4.14860000000003e-05, 4.118000000000177e-05, 4.070800000000041e-05, 4.102799999999851e-05, 4.0902999999994916e-05, 4.104199999999808e-05, 4.095800000000066e-05, 4.1417000000001924e-05, 4.073599999999955e-05, 4.1596999999997386e-05, 4.074999999999912e-05, 4.1332999999997566e-05, 4.105600000000459e-05, 4.129199999999833e-05, 4.0666999999994236e-05, 4.1068999999997746e-05, 4.093000000000152e-05, 4.138799999999637e-05, 4.1653000000002605e-05, 4.1276999999999286e-05, 4.0847000000003575e-05, 4.079199999999783e-05]</msg>
<status status="PASS" starttime="20201030 18:28:12.988" endtime="20201030 18:28:12.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.976" endtime="20201030 18:28:12.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.004" endtime="20201030 18:28:13.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.999" endtime="20201030 18:28:13.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.997" endtime="20201030 18:28:13.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.503" endtime="20201030 18:28:13.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:12.502" endtime="20201030 18:28:13.029"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.052" endtime="20201030 18:28:13.074"></status>
</kw>
<msg timestamp="20201030 18:28:13.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.049" endtime="20201030 18:28:13.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.077" endtime="20201030 18:28:13.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.084" endtime="20201030 18:28:13.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.042" endtime="20201030 18:28:13.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.036" endtime="20201030 18:28:13.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.107" endtime="20201030 18:28:13.444"></status>
</kw>
<msg timestamp="20201030 18:28:13.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043128556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043171139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.104" endtime="20201030 18:28:13.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043128556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043171139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.454" endtime="20201030 18:28:13.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.473" endtime="20201030 18:28:13.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.097" endtime="20201030 18:28:13.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.092" endtime="20201030 18:28:13.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.491" level="INFO">${RESULT} = [{'diff': 4.2582999999998816e-05}, {'diff': 4.2166999999995736e-05}, {'diff': 4.1959000000001134e-05}, {'diff': 4.2625000000004465e-05}, {'diff': 4.250000000000087e-05}, {'diff': 4.2209000000001384e-0...</msg>
<status status="PASS" starttime="20201030 18:28:13.482" endtime="20201030 18:28:13.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:13.500" level="INFO">${ACCURACY} = {'diff': [4.2582999999998816e-05, 4.2166999999995736e-05, 4.1959000000001134e-05, 4.2625000000004465e-05, 4.250000000000087e-05, 4.2209000000001384e-05, 4.241600000000345e-05, 4.1945000000001564e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:13.493" endtime="20201030 18:28:13.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.511" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:28:13.509" endtime="20201030 18:28:13.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.517" level="INFO">VALUE: [4.2582999999998816e-05, 4.2166999999995736e-05, 4.1959000000001134e-05, 4.2625000000004465e-05, 4.250000000000087e-05, 4.2209000000001384e-05, 4.241600000000345e-05, 4.1945000000001564e-05, 4.226300000000072e-05, 4.2290999999999856e-05, 4.238799999999737e-05, 4.2402999999996416e-05, 4.172200000000098e-05, 4.192999999999558e-05, 4.2639000000004035e-05, 4.227799999999976e-05, 4.254199999999958e-05, 4.2624999999997526e-05, 4.1846999999997636e-05, 4.2610999999997956e-05, 4.194400000000209e-05, 4.2402999999996416e-05, 4.205599999999865e-05, 4.1959000000001134e-05, 4.1681000000001744e-05, 4.205599999999865e-05, 4.1737000000000024e-05, 4.183399999999754e-05, 4.1846999999997636e-05, 4.183399999999754e-05, 4.2527000000000537e-05, 4.216599999999626e-05, 4.18059999999984e-05, 4.1847000000004575e-05, 4.2445000000002064e-05, 4.2041000000006545e-05, 4.19860000000008e-05, 4.251400000000044e-05, 4.2068999999998746e-05, 4.225000000000062e-05, 4.205599999999865e-05, 4.195800000000166e-05, 4.1945000000001564e-05, 4.2388999999996846e-05, 4.1930999999995056e-05, 4.184799999999711e-05, 4.1959000000001134e-05, 4.249999999999393e-05, 4.2167000000002675e-05, 4.1889000000003285e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.514" endtime="20201030 18:28:13.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.502" endtime="20201030 18:28:13.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.531" endtime="20201030 18:28:13.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.525" endtime="20201030 18:28:13.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.523" endtime="20201030 18:28:13.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.031" endtime="20201030 18:28:13.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.030" endtime="20201030 18:28:13.557"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.580" endtime="20201030 18:28:13.601"></status>
</kw>
<msg timestamp="20201030 18:28:13.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.576" endtime="20201030 18:28:13.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.604" endtime="20201030 18:28:13.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.611" endtime="20201030 18:28:13.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.569" endtime="20201030 18:28:13.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.563" endtime="20201030 18:28:13.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.635" endtime="20201030 18:28:13.991"></status>
</kw>
<msg timestamp="20201030 18:28:13.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042016042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.631" endtime="20201030 18:28:13.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042016042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.001" endtime="20201030 18:28:14.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.020" endtime="20201030 18:28:14.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.624" endtime="20201030 18:28:14.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.619" endtime="20201030 18:28:14.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.038" level="INFO">${RESULT} = [{'diff': 4.334800000000555e-05}, {'diff': 4.350000000000187e-05}, {'diff': 4.350000000000187e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.31660000000042e-05}, {'diff': 4.3346999999999136e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:14.028" endtime="20201030 18:28:14.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.050" level="INFO">${ACCURACY} = {'diff': [4.334800000000555e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.279199999999983e-05, 4.31660000000042e-05, 4.3346999999999136e-05, 4.340199999999794e-05, 4.3055000000000176e-05, 4.333...</msg>
<status status="PASS" starttime="20201030 18:28:14.041" endtime="20201030 18:28:14.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.062" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.059" endtime="20201030 18:28:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.067" level="INFO">VALUE: [4.334800000000555e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.279199999999983e-05, 4.31660000000042e-05, 4.3346999999999136e-05, 4.340199999999794e-05, 4.3055000000000176e-05, 4.333399999999904e-05, 4.2804999999999926e-05, 4.327800000000076e-05, 4.350000000000187e-05, 4.2666999999996236e-05, 4.327800000000076e-05, 4.3624999999998526e-05, 4.33059999999999e-05, 4.2832999999999066e-05, 4.3388999999997846e-05, 4.358399999999929e-05, 4.3223000000001954e-05, 4.281999999999897e-05, 4.2945000000002564e-05, 4.294400000000309e-05, 4.327800000000076e-05, 4.315200000000463e-05, 4.298599999999486e-05, 4.29860000000018e-05, 4.31660000000042e-05, 4.3611000000005895e-05, 4.327800000000076e-05, 4.323599999999511e-05, 4.273600000000155e-05, 4.329200000000033e-05, 4.350000000000187e-05, 4.348599999999536e-05, 4.277800000000026e-05, 4.349999999999493e-05, 4.3166999999996736e-05, 4.3153000000004105e-05, 4.2959000000002134e-05, 4.3403000000004355e-05, 4.2944999999995626e-05, 4.3097000000005825e-05, 4.3388999999997846e-05, 4.3068999999999746e-05, 4.3055000000000176e-05, 4.327700000000129e-05, 4.355600000000015e-05, 4.3388999999997846e-05, 4.2846999999998636e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.064" endtime="20201030 18:28:14.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.052" endtime="20201030 18:28:14.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.080" endtime="20201030 18:28:14.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.075" endtime="20201030 18:28:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.073" endtime="20201030 18:28:14.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.559" endtime="20201030 18:28:14.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.558" endtime="20201030 18:28:14.105"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.128" endtime="20201030 18:28:14.147"></status>
</kw>
<msg timestamp="20201030 18:28:14.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.124" endtime="20201030 18:28:14.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.151" endtime="20201030 18:28:14.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.157" endtime="20201030 18:28:14.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.117" endtime="20201030 18:28:14.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.111" endtime="20201030 18:28:14.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.181" endtime="20201030 18:28:14.519"></status>
</kw>
<msg timestamp="20201030 18:28:14.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041272403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.177" endtime="20201030 18:28:14.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041272403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.529" endtime="20201030 18:28:14.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.548" endtime="20201030 18:28:14.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.170" endtime="20201030 18:28:14.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.165" endtime="20201030 18:28:14.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:14.565" level="INFO">${RESULT} = [{'diff': 4.404100000000161e-05}, {'diff': 4.405600000000065e-05}, {'diff': 4.417999999999783e-05}, {'diff': 4.41660000000052e-05}, {'diff': 4.429100000000186e-05}, {'diff': 4.4610999999999956e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:14.557" endtime="20201030 18:28:14.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:14.577" level="INFO">${ACCURACY} = {'diff': [4.404100000000161e-05, 4.405600000000065e-05, 4.417999999999783e-05, 4.41660000000052e-05, 4.429100000000186e-05, 4.4610999999999956e-05, 4.3819000000000496e-05, 4.4388999999998846e-05, 4.37...</msg>
<status status="PASS" starttime="20201030 18:28:14.567" endtime="20201030 18:28:14.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.588" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:28:14.586" endtime="20201030 18:28:14.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.593" level="INFO">VALUE: [4.404100000000161e-05, 4.405600000000065e-05, 4.417999999999783e-05, 4.41660000000052e-05, 4.429100000000186e-05, 4.4610999999999956e-05, 4.3819000000000496e-05, 4.4388999999998846e-05, 4.372200000000298e-05, 4.394400000000409e-05, 4.449999999999593e-05, 4.4194999999996876e-05, 4.394399999999715e-05, 4.4124999999999026e-05, 4.3833000000000066e-05, 4.4181000000004245e-05, 4.407000000000022e-05, 4.3888999999998346e-05, 4.455600000000115e-05, 4.3709000000002884e-05, 4.4096999999999886e-05, 4.443000000000502e-05, 4.405499999999424e-05, 4.438799999999937e-05, 4.4055000000001177e-05, 4.426399999999525e-05, 4.416599999999826e-05, 4.3833000000000066e-05, 4.426400000000219e-05, 4.3860999999999206e-05, 4.4166999999997736e-05, 4.372200000000298e-05, 4.429200000000133e-05, 4.4180999999997306e-05, 4.3959000000003134e-05, 4.4195000000003815e-05, 4.4374999999999276e-05, 4.4180999999997306e-05, 4.426400000000219e-05, 4.4388999999998846e-05, 4.45139999999955e-05, 4.383399999999954e-05, 4.4305000000001427e-05, 4.3833000000000066e-05, 4.3846999999999636e-05, 4.3888999999998346e-05, 4.452800000000201e-05, 4.405499999999424e-05, 4.392999999999758e-05, 4.45139999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:28:14.590" endtime="20201030 18:28:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.578" endtime="20201030 18:28:14.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:14.611" endtime="20201030 18:28:14.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.607" endtime="20201030 18:28:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.604" endtime="20201030 18:28:14.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.107" endtime="20201030 18:28:14.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.106" endtime="20201030 18:28:14.637"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.660" endtime="20201030 18:28:14.680"></status>
</kw>
<msg timestamp="20201030 18:28:14.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.657" endtime="20201030 18:28:14.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:14.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:14.683" endtime="20201030 18:28:14.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.690" endtime="20201030 18:28:14.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.650" endtime="20201030 18:28:14.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.644" endtime="20201030 18:28:14.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:14.713" endtime="20201030 18:28:15.053"></status>
</kw>
<msg timestamp="20201030 18:28:15.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042565458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042610681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:14.710" endtime="20201030 18:28:15.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042565458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042610681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.063" endtime="20201030 18:28:15.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.082" endtime="20201030 18:28:15.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.703" endtime="20201030 18:28:15.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.698" endtime="20201030 18:28:15.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.099" level="INFO">${RESULT} = [{'diff': 4.5222999999997016e-05}, {'diff': 4.467999999999833e-05}, {'diff': 4.540199999999994e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.5444999999998126e-05}, {'diff': 4.4833000000001066e-05...</msg>
<status status="PASS" starttime="20201030 18:28:15.090" endtime="20201030 18:28:15.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.109" level="INFO">${ACCURACY} = {'diff': [4.5222999999997016e-05, 4.467999999999833e-05, 4.540199999999994e-05, 4.5597000000001386e-05, 4.5444999999998126e-05, 4.4833000000001066e-05, 4.552800000000301e-05, 4.51939999999984e-05, 4.5...</msg>
<status status="PASS" starttime="20201030 18:28:15.102" endtime="20201030 18:28:15.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.120" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.118" endtime="20201030 18:28:15.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.125" level="INFO">VALUE: [4.5222999999997016e-05, 4.467999999999833e-05, 4.540199999999994e-05, 4.5597000000001386e-05, 4.5444999999998126e-05, 4.4833000000001066e-05, 4.552800000000301e-05, 4.51939999999984e-05, 4.517999999999883e-05, 4.4833000000001066e-05, 4.5402999999999416e-05, 4.561099999999402e-05, 4.494399999999815e-05, 4.472199999999704e-05, 4.557000000000172e-05, 4.5639000000000096e-05, 4.545799999999822e-05, 4.5375000000000276e-05, 4.550000000000387e-05, 4.5236999999996585e-05, 4.5111000000000456e-05, 4.4819000000001497e-05, 4.5387999999993434e-05, 4.517999999999883e-05, 4.516599999999926e-05, 4.523599999999711e-05, 4.492999999999858e-05, 4.5375000000000276e-05, 4.552800000000301e-05, 4.5388999999999846e-05, 4.552799999999607e-05, 4.4847000000000636e-05, 4.4930999999998056e-05, 4.4833000000001066e-05, 4.4930999999998056e-05, 4.5152999999999166e-05, 4.483400000000054e-05, 4.4736999999996085e-05, 4.5611000000000956e-05, 4.5153000000006105e-05, 4.4888999999999346e-05, 4.477800000000226e-05, 4.504099999999567e-05, 4.5708999999997946e-05, 4.474999999999618e-05, 4.5639000000000096e-05, 4.477800000000226e-05, 4.494399999999815e-05, 4.5402999999999416e-05, 4.505500000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.122" endtime="20201030 18:28:15.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.111" endtime="20201030 18:28:15.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.138" endtime="20201030 18:28:15.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.134" endtime="20201030 18:28:15.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.131" endtime="20201030 18:28:15.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.640" endtime="20201030 18:28:15.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:14.638" endtime="20201030 18:28:15.163"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.186" endtime="20201030 18:28:15.214"></status>
</kw>
<msg timestamp="20201030 18:28:15.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.183" endtime="20201030 18:28:15.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.217" endtime="20201030 18:28:15.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.224" endtime="20201030 18:28:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.176" endtime="20201030 18:28:15.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.170" endtime="20201030 18:28:15.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.248" endtime="20201030 18:28:15.586"></status>
</kw>
<msg timestamp="20201030 18:28:15.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047589931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047636403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.244" endtime="20201030 18:28:15.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047589931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047636403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.596" endtime="20201030 18:28:15.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.615" endtime="20201030 18:28:15.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.237" endtime="20201030 18:28:15.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.232" endtime="20201030 18:28:15.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:15.632" level="INFO">${RESULT} = [{'diff': 4.647199999999879e-05}, {'diff': 4.5833000000002067e-05}, {'diff': 4.5930999999999056e-05}, {'diff': 4.572199999999804e-05}, {'diff': 4.659800000000186e-05}, {'diff': 4.6375000000001276e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:15.623" endtime="20201030 18:28:15.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:15.642" level="INFO">${ACCURACY} = {'diff': [4.647199999999879e-05, 4.5833000000002067e-05, 4.5930999999999056e-05, 4.572199999999804e-05, 4.659800000000186e-05, 4.6375000000001276e-05, 4.627799999999682e-05, 4.651300000000497e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 18:28:15.634" endtime="20201030 18:28:15.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.653" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:28:15.651" endtime="20201030 18:28:15.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.658" level="INFO">VALUE: [4.647199999999879e-05, 4.5833000000002067e-05, 4.5930999999999056e-05, 4.572199999999804e-05, 4.659800000000186e-05, 4.6375000000001276e-05, 4.627799999999682e-05, 4.651300000000497e-05, 4.623599999999811e-05, 4.592999999999958e-05, 4.629099999999692e-05, 4.626400000000419e-05, 4.629099999999692e-05, 4.617999999999983e-05, 4.6611000000001956e-05, 4.572199999999804e-05, 4.605500000000318e-05, 4.6389000000000846e-05, 4.572200000000498e-05, 4.6403000000000416e-05, 4.582000000000197e-05, 4.624999999999768e-05, 4.650000000000487e-05, 4.607000000000222e-05, 4.5944999999998626e-05, 4.5737000000004024e-05, 4.662499999999459e-05, 4.573600000000455e-05, 4.605500000000318e-05, 4.594399999999915e-05, 4.645799999999922e-05, 4.59860000000048e-05, 4.648599999999836e-05, 4.573600000000455e-05, 4.6166999999999736e-05, 4.627800000000376e-05, 4.5889000000000346e-05, 4.629199999999639e-05, 4.5958999999998196e-05, 4.605600000000265e-05, 4.608400000000179e-05, 4.5945000000005565e-05, 4.6180999999999306e-05, 4.583400000000154e-05, 4.58339999999946e-05, 4.5847000000001636e-05, 4.5944999999998626e-05, 4.58469999999947e-05, 4.604100000000361e-05, 4.595799999999872e-05]</msg>
<status status="PASS" starttime="20201030 18:28:15.655" endtime="20201030 18:28:15.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.644" endtime="20201030 18:28:15.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:15.672" endtime="20201030 18:28:15.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.667" endtime="20201030 18:28:15.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.664" endtime="20201030 18:28:15.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.165" endtime="20201030 18:28:15.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.164" endtime="20201030 18:28:15.698"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.720" endtime="20201030 18:28:15.739"></status>
</kw>
<msg timestamp="20201030 18:28:15.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.717" endtime="20201030 18:28:15.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:15.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:15.741" endtime="20201030 18:28:15.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.744" endtime="20201030 18:28:15.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.710" endtime="20201030 18:28:15.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.704" endtime="20201030 18:28:15.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:15.755" endtime="20201030 18:28:16.062"></status>
</kw>
<msg timestamp="20201030 18:28:16.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041660389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041707972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:15.753" endtime="20201030 18:28:16.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041660389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041707972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.072" endtime="20201030 18:28:16.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.091" endtime="20201030 18:28:16.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.750" endtime="20201030 18:28:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.748" endtime="20201030 18:28:16.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.109" level="INFO">${RESULT} = [{'diff': 4.758300000000382e-05}, {'diff': 4.695799999999972e-05}, {'diff': 4.727799999999782e-05}, {'diff': 4.705499999999724e-05}, {'diff': 4.731999999999653e-05}, {'diff': 4.687499999999484e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:16.100" endtime="20201030 18:28:16.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.119" level="INFO">${ACCURACY} = {'diff': [4.758300000000382e-05, 4.695799999999972e-05, 4.727799999999782e-05, 4.705499999999724e-05, 4.731999999999653e-05, 4.687499999999484e-05, 4.729200000000433e-05, 4.727799999999782e-05, 4.6958...</msg>
<status status="PASS" starttime="20201030 18:28:16.111" endtime="20201030 18:28:16.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.130" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.128" endtime="20201030 18:28:16.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.136" level="INFO">VALUE: [4.758300000000382e-05, 4.695799999999972e-05, 4.727799999999782e-05, 4.705499999999724e-05, 4.731999999999653e-05, 4.687499999999484e-05, 4.729200000000433e-05, 4.727799999999782e-05, 4.6958999999999196e-05, 4.6901999999994504e-05, 4.726399999999825e-05, 4.754100000000511e-05, 4.7403000000001416e-05, 4.762499999999559e-05, 4.6958999999999196e-05, 4.7167000000000736e-05, 4.729099999999792e-05, 4.749999999999893e-05, 4.706900000000375e-05, 4.7681000000000806e-05, 4.7417000000000986e-05, 4.694400000000015e-05, 4.693000000000058e-05, 4.7167000000000736e-05, 4.7153000000001166e-05, 4.74860000000063e-05, 4.683300000000307e-05, 4.681999999999603e-05, 4.670799999999947e-05, 4.723599999999911e-05, 4.761099999999602e-05, 4.6931000000000056e-05, 4.6889000000001346e-05, 4.729199999999739e-05, 4.729100000000486e-05, 4.708300000000332e-05, 4.741600000000151e-05, 4.7611000000002957e-05, 4.687499999999484e-05, 4.718000000000083e-05, 4.738899999999491e-05, 4.7653000000001666e-05, 4.672199999999904e-05, 4.705499999999724e-05, 4.6667000000000236e-05, 4.6889000000001346e-05, 4.7389000000001846e-05, 4.670800000000641e-05, 4.7403000000001416e-05, 4.722199999999954e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.133" endtime="20201030 18:28:16.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.121" endtime="20201030 18:28:16.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.149" endtime="20201030 18:28:16.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.144" endtime="20201030 18:28:16.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.142" endtime="20201030 18:28:16.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.700" endtime="20201030 18:28:16.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:15.699" endtime="20201030 18:28:16.174"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.197" endtime="20201030 18:28:16.217"></status>
</kw>
<msg timestamp="20201030 18:28:16.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.194" endtime="20201030 18:28:16.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.221" endtime="20201030 18:28:16.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.227" endtime="20201030 18:28:16.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.186" endtime="20201030 18:28:16.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.180" endtime="20201030 18:28:16.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.251" endtime="20201030 18:28:16.592"></status>
</kw>
<msg timestamp="20201030 18:28:16.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041633861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.247" endtime="20201030 18:28:16.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041633861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.601" endtime="20201030 18:28:16.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.620" endtime="20201030 18:28:16.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.240" endtime="20201030 18:28:16.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.235" endtime="20201030 18:28:16.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:16.638" level="INFO">${RESULT} = [{'diff': 4.854199999999864e-05}, {'diff': 4.861099999999702e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.7737000000006025e-05}, {'diff': 4.7736999999999086e-05}, {'diff': 4.829099999999892e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:16.629" endtime="20201030 18:28:16.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:16.649" level="INFO">${ACCURACY} = {'diff': [4.854199999999864e-05, 4.861099999999702e-05, 4.85139999999995e-05, 4.7737000000006025e-05, 4.7736999999999086e-05, 4.829099999999892e-05, 4.773599999999961e-05, 4.806899999999781e-05, 4.849...</msg>
<status status="PASS" starttime="20201030 18:28:16.640" endtime="20201030 18:28:16.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.660" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:28:16.658" endtime="20201030 18:28:16.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.666" level="INFO">VALUE: [4.854199999999864e-05, 4.861099999999702e-05, 4.85139999999995e-05, 4.7737000000006025e-05, 4.7736999999999086e-05, 4.829099999999892e-05, 4.773599999999961e-05, 4.806899999999781e-05, 4.849999999999993e-05, 4.780500000000493e-05, 4.784700000000364e-05, 4.784700000000364e-05, 4.8153000000002166e-05, 4.818000000000183e-05, 4.782000000000397e-05, 4.859700000000439e-05, 4.824999999999968e-05, 4.808399999999685e-05, 4.840299999999548e-05, 4.7973000000006705e-05, 4.849999999999993e-05, 4.8611000000003957e-05, 4.827799999999882e-05, 4.8403000000002416e-05, 4.8167000000001736e-05, 4.855499999999874e-05, 4.8401999999996004e-05, 4.804099999999867e-05, 4.8389000000002846e-05, 4.8139000000002596e-05, 4.791600000000201e-05, 4.795800000000072e-05, 4.794400000000115e-05, 4.805500000000518e-05, 4.8625000000003527e-05, 4.855599999999821e-05, 4.7931000000001056e-05, 4.815299999999523e-05, 4.807000000000422e-05, 4.8459000000000696e-05, 4.773599999999961e-05, 4.7945000000000626e-05, 4.8181000000001306e-05, 4.8611000000003957e-05, 4.7861000000003207e-05, 4.849999999999993e-05, 4.795800000000072e-05, 4.826399999999925e-05, 4.81940000000014e-05, 4.784700000000364e-05]</msg>
<status status="PASS" starttime="20201030 18:28:16.662" endtime="20201030 18:28:16.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.651" endtime="20201030 18:28:16.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:16.678" endtime="20201030 18:28:16.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.674" endtime="20201030 18:28:16.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.671" endtime="20201030 18:28:16.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.176" endtime="20201030 18:28:16.703"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.175" endtime="20201030 18:28:16.703"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.726" endtime="20201030 18:28:16.746"></status>
</kw>
<msg timestamp="20201030 18:28:16.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.723" endtime="20201030 18:28:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.750" endtime="20201030 18:28:16.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.756" endtime="20201030 18:28:16.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.716" endtime="20201030 18:28:16.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.710" endtime="20201030 18:28:16.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.779" endtime="20201030 18:28:17.119"></status>
</kw>
<msg timestamp="20201030 18:28:17.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.776" endtime="20201030 18:28:17.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041600278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.128" endtime="20201030 18:28:17.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.148" endtime="20201030 18:28:17.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.769" endtime="20201030 18:28:17.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.764" endtime="20201030 18:28:17.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.165" level="INFO">${RESULT} = [{'diff': 4.9153000000003166e-05}, {'diff': 4.954100000000017e-05}, {'diff': 4.897200000000129e-05}, {'diff': 4.936200000000418e-05}, {'diff': 4.872200000000104e-05}, {'diff': 4.904099999999967e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:17.156" endtime="20201030 18:28:17.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.174" level="INFO">${ACCURACY} = {'diff': [4.9153000000003166e-05, 4.954100000000017e-05, 4.897200000000129e-05, 4.936200000000418e-05, 4.872200000000104e-05, 4.904099999999967e-05, 4.945800000000222e-05, 4.926400000000025e-05, 4.952...</msg>
<status status="PASS" starttime="20201030 18:28:17.167" endtime="20201030 18:28:17.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.185" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.183" endtime="20201030 18:28:17.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.191" level="INFO">VALUE: [4.9153000000003166e-05, 4.954100000000017e-05, 4.897200000000129e-05, 4.936200000000418e-05, 4.872200000000104e-05, 4.904099999999967e-05, 4.945800000000222e-05, 4.926400000000025e-05, 4.952800000000007e-05, 4.916600000000326e-05, 4.929199999999939e-05, 4.931999999999853e-05, 4.9195000000001876e-05, 4.95140000000005e-05, 4.88469999999977e-05, 4.9389000000003846e-05, 4.9375000000004277e-05, 4.948599999999442e-05, 4.9139000000003596e-05, 4.929199999999939e-05, 4.924999999999374e-05, 4.961199999999749e-05, 4.9443999999995714e-05, 4.876300000000028e-05, 4.940200000000394e-05, 4.918000000000283e-05, 4.872200000000104e-05, 4.886099999999727e-05, 4.895800000000172e-05, 4.897200000000129e-05, 4.962499999999759e-05, 4.88469999999977e-05, 4.9389000000003846e-05, 4.927799999999982e-05, 4.88469999999977e-05, 4.95140000000005e-05, 4.9401999999997004e-05, 4.884799999999717e-05, 4.927799999999982e-05, 4.931899999999906e-05, 4.893099999999512e-05, 4.9681000000002806e-05, 4.9151999999996754e-05, 4.9165999999996324e-05, 4.927700000000035e-05, 4.931999999999853e-05, 4.894400000000215e-05, 4.897200000000129e-05, 4.950000000000093e-05, 4.941699999999605e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.188" endtime="20201030 18:28:17.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.176" endtime="20201030 18:28:17.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.204" endtime="20201030 18:28:17.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.199" endtime="20201030 18:28:17.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.197" endtime="20201030 18:28:17.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.706" endtime="20201030 18:28:17.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.704" endtime="20201030 18:28:17.229"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.252" endtime="20201030 18:28:17.273"></status>
</kw>
<msg timestamp="20201030 18:28:17.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.248" endtime="20201030 18:28:17.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.277" endtime="20201030 18:28:17.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.283" endtime="20201030 18:28:17.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.241" endtime="20201030 18:28:17.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.235" endtime="20201030 18:28:17.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.307" endtime="20201030 18:28:17.645"></status>
</kw>
<msg timestamp="20201030 18:28:17.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.304" endtime="20201030 18:28:17.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043090944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043140792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.654" endtime="20201030 18:28:17.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.673" endtime="20201030 18:28:17.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.296" endtime="20201030 18:28:17.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.292" endtime="20201030 18:28:17.680"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.691" level="INFO">${RESULT} = [{'diff': 4.984799999999817e-05}, {'diff': 5.009699999999895e-05}, {'diff': 4.9959000000002196e-05}, {'diff': 5.050000000000193e-05}, {'diff': 5.041600000000451e-05}, {'diff': 5.015299999999723e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:17.682" endtime="20201030 18:28:17.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:17.700" level="INFO">${ACCURACY} = {'diff': [4.984799999999817e-05, 5.009699999999895e-05, 4.9959000000002196e-05, 5.050000000000193e-05, 5.041600000000451e-05, 5.015299999999723e-05, 4.9957999999995784e-05, 5.0471999999995854e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 18:28:17.693" endtime="20201030 18:28:17.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.711" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:28:17.709" endtime="20201030 18:28:17.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.717" level="INFO">VALUE: [4.984799999999817e-05, 5.009699999999895e-05, 4.9959000000002196e-05, 5.050000000000193e-05, 5.041600000000451e-05, 5.015299999999723e-05, 4.9957999999995784e-05, 5.0471999999995854e-05, 5.063899999999816e-05, 4.9943999999996214e-05, 5.015299999999723e-05, 4.980499999999999e-05, 4.98469999999987e-05, 5.048600000000236e-05, 4.986100000000521e-05, 5.050000000000193e-05, 4.995800000000272e-05, 4.972200000000204e-05, 4.987499999999784e-05, 5.0195000000002876e-05, 5.062500000000553e-05, 4.983400000000554e-05, 5.029200000000039e-05, 4.9957999999995784e-05, 5.062499999999859e-05, 4.9889000000004347e-05, 4.986100000000521e-05, 5.0139000000004597e-05, 5.040299999999748e-05, 5.050000000000193e-05, 5.040299999999748e-05, 5.0195000000002876e-05, 5.0693999999996964e-05, 5.056900000000031e-05, 4.9889000000004347e-05, 5.049999999999499e-05, 5.041699999999705e-05, 4.9945000000002626e-05, 5.063899999999816e-05, 5.005599999999971e-05, 5.006899999999981e-05, 5.049999999999499e-05, 5.005500000000024e-05, 5.049999999999499e-05, 5.0415999999997574e-05, 5.026400000000125e-05, 5.05140000000015e-05, 5.031999999999953e-05, 5.0193999999996464e-05, 5.004200000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.714" endtime="20201030 18:28:17.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.702" endtime="20201030 18:28:17.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.731" endtime="20201030 18:28:17.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.725" endtime="20201030 18:28:17.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.723" endtime="20201030 18:28:17.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.231" endtime="20201030 18:28:17.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.229" endtime="20201030 18:28:17.756"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.779" endtime="20201030 18:28:17.799"></status>
</kw>
<msg timestamp="20201030 18:28:17.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.776" endtime="20201030 18:28:17.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.802" endtime="20201030 18:28:17.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.809" endtime="20201030 18:28:17.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.768" endtime="20201030 18:28:17.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.762" endtime="20201030 18:28:17.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.832" endtime="20201030 18:28:18.170"></status>
</kw>
<msg timestamp="20201030 18:28:18.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.829" endtime="20201030 18:28:18.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041122722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041173528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.180" endtime="20201030 18:28:18.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.199" endtime="20201030 18:28:18.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.822" endtime="20201030 18:28:18.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.817" endtime="20201030 18:28:18.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.216" level="INFO">${RESULT} = [{'diff': 5.080600000000046e-05}, {'diff': 5.122200000000354e-05}, {'diff': 5.080600000000046e-05}, {'diff': 5.1167000000004736e-05}, {'diff': 5.107000000000028e-05}, {'diff': 5.1387999999999434e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:18.207" endtime="20201030 18:28:18.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.227" level="INFO">${ACCURACY} = {'diff': [5.080600000000046e-05, 5.122200000000354e-05, 5.080600000000046e-05, 5.1167000000004736e-05, 5.107000000000028e-05, 5.1387999999999434e-05, 5.0957999999996784e-05, 5.1387999999999434e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:18.218" endtime="20201030 18:28:18.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.238" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.236" endtime="20201030 18:28:18.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.244" level="INFO">VALUE: [5.080600000000046e-05, 5.122200000000354e-05, 5.080600000000046e-05, 5.1167000000004736e-05, 5.107000000000028e-05, 5.1387999999999434e-05, 5.0957999999996784e-05, 5.1387999999999434e-05, 5.073600000000261e-05, 5.126400000000225e-05, 5.118000000000483e-05, 5.083300000000013e-05, 5.162499999999959e-05, 5.073600000000261e-05, 5.11669999999978e-05, 5.130599999999402e-05, 5.072200000000304e-05, 5.107000000000028e-05, 5.140299999999848e-05, 5.08339999999996e-05, 5.1457999999997284e-05, 5.08469999999997e-05, 5.073600000000261e-05, 5.11669999999978e-05, 5.157000000000078e-05, 5.1151999999998754e-05, 5.0957999999996784e-05, 5.118000000000483e-05, 5.137499999999934e-05, 5.10549999999943e-05, 5.090299999999798e-05, 5.138899999999891e-05, 5.162499999999959e-05, 5.150000000000293e-05, 5.1667000000005237e-05, 5.159700000000045e-05, 5.0959000000003196e-05, 5.138899999999891e-05, 5.138899999999891e-05, 5.088899999999841e-05, 5.107000000000028e-05, 5.136199999999924e-05, 5.070800000000347e-05, 5.101299999999559e-05, 5.0943999999997214e-05, 5.106900000000081e-05, 5.120800000000397e-05, 5.083300000000013e-05, 5.105500000000124e-05, 5.072200000000304e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.240" endtime="20201030 18:28:18.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.229" endtime="20201030 18:28:18.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.256" endtime="20201030 18:28:18.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.252" endtime="20201030 18:28:18.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.250" endtime="20201030 18:28:18.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.758" endtime="20201030 18:28:18.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.757" endtime="20201030 18:28:18.281"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.305" endtime="20201030 18:28:18.325"></status>
</kw>
<msg timestamp="20201030 18:28:18.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.301" endtime="20201030 18:28:18.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.328" endtime="20201030 18:28:18.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.334" endtime="20201030 18:28:18.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.294" endtime="20201030 18:28:18.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.288" endtime="20201030 18:28:18.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.358" endtime="20201030 18:28:18.696"></status>
</kw>
<msg timestamp="20201030 18:28:18.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041743417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.355" endtime="20201030 18:28:18.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041743417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.706" endtime="20201030 18:28:18.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.725" endtime="20201030 18:28:18.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.348" endtime="20201030 18:28:18.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.343" endtime="20201030 18:28:18.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:18.743" level="INFO">${RESULT} = [{'diff': 5.245800000000522e-05}, {'diff': 5.227799999999588e-05}, {'diff': 5.236099999999383e-05}, {'diff': 5.2415999999999574e-05}, {'diff': 5.262500000000059e-05}, {'diff': 5.208400000000085e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:18.734" endtime="20201030 18:28:18.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:18.754" level="INFO">${ACCURACY} = {'diff': [5.245800000000522e-05, 5.227799999999588e-05, 5.236099999999383e-05, 5.2415999999999574e-05, 5.262500000000059e-05, 5.208400000000085e-05, 5.175000000000318e-05, 5.207000000000128e-05, 5.219...</msg>
<status status="PASS" starttime="20201030 18:28:18.745" endtime="20201030 18:28:18.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.765" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:28:18.763" endtime="20201030 18:28:18.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.771" level="INFO">VALUE: [5.245800000000522e-05, 5.227799999999588e-05, 5.236099999999383e-05, 5.2415999999999574e-05, 5.262500000000059e-05, 5.208400000000085e-05, 5.175000000000318e-05, 5.207000000000128e-05, 5.21940000000054e-05, 5.2388000000000434e-05, 5.194400000000515e-05, 5.1971999999997354e-05, 5.18470000000007e-05, 5.183299999999419e-05, 5.1971999999997354e-05, 5.229200000000239e-05, 5.258299999999494e-05, 5.1929999999998644e-05, 5.220899999999751e-05, 5.173600000000361e-05, 5.226400000000325e-05, 5.209700000000095e-05, 5.238899999999991e-05, 5.223600000000411e-05, 5.2429999999999144e-05, 5.1945000000004626e-05, 5.2402000000000004e-05, 5.205500000000224e-05, 5.1971999999997354e-05, 5.2388000000000434e-05, 5.204099999999573e-05, 5.1929999999998644e-05, 5.2165999999999324e-05, 5.183300000000113e-05, 5.2499999999996994e-05, 5.25140000000035e-05, 5.212500000000009e-05, 5.262500000000059e-05, 5.2249999999996743e-05, 5.197299999999683e-05, 5.227800000000282e-05, 5.172299999999658e-05, 5.233299999999469e-05, 5.1709000000003946e-05, 5.198600000000386e-05, 5.2193999999998464e-05, 5.172200000000404e-05, 5.2193999999998464e-05, 5.18470000000007e-05, 5.268099999999887e-05]</msg>
<status status="PASS" starttime="20201030 18:28:18.767" endtime="20201030 18:28:18.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.756" endtime="20201030 18:28:18.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:18.784" endtime="20201030 18:28:18.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.779" endtime="20201030 18:28:18.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.776" endtime="20201030 18:28:18.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.284" endtime="20201030 18:28:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.282" endtime="20201030 18:28:18.809"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.832" endtime="20201030 18:28:18.852"></status>
</kw>
<msg timestamp="20201030 18:28:18.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.828" endtime="20201030 18:28:18.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:18.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:18.856" endtime="20201030 18:28:18.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.862" endtime="20201030 18:28:18.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.821" endtime="20201030 18:28:18.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.815" endtime="20201030 18:28:18.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:18.886" endtime="20201030 18:28:19.226"></status>
</kw>
<msg timestamp="20201030 18:28:19.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041192764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041246222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:18.882" endtime="20201030 18:28:19.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041192764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041246222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.236" endtime="20201030 18:28:19.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.255" endtime="20201030 18:28:19.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.875" endtime="20201030 18:28:19.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.870" endtime="20201030 18:28:19.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.273" level="INFO">${RESULT} = [{'diff': 5.3457999999999284e-05}, {'diff': 5.3207999999999034e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.31669999999998e-05}, {'diff': 5.3249999999997744e-05}, {'diff': 5.31669999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:19.264" endtime="20201030 18:28:19.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.282" level="INFO">${ACCURACY} = {'diff': [5.3457999999999284e-05, 5.3207999999999034e-05, 5.31669999999998e-05, 5.31669999999998e-05, 5.3249999999997744e-05, 5.31669999999998e-05, 5.2721999999998104e-05, 5.3277999999996883e-05, 5.31...</msg>
<status status="PASS" starttime="20201030 18:28:19.275" endtime="20201030 18:28:19.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.293" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.291" endtime="20201030 18:28:19.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.299" level="INFO">VALUE: [5.3457999999999284e-05, 5.3207999999999034e-05, 5.31669999999998e-05, 5.31669999999998e-05, 5.3249999999997744e-05, 5.31669999999998e-05, 5.2721999999998104e-05, 5.3277999999996883e-05, 5.318099999999937e-05, 5.3513999999997564e-05, 5.275000000000418e-05, 5.295899999999826e-05, 5.3207999999999034e-05, 5.351300000000503e-05, 5.283299999999519e-05, 5.2749999999997244e-05, 5.283299999999519e-05, 5.3221999999998604e-05, 5.2943999999999214e-05, 5.283300000000213e-05, 5.3513999999997564e-05, 5.31669999999998e-05, 5.362500000000159e-05, 5.282000000000203e-05, 5.2735999999997674e-05, 5.337500000000134e-05, 5.318099999999937e-05, 5.337500000000134e-05, 5.306999999999534e-05, 5.28340000000016e-05, 5.28470000000017e-05, 5.272200000000504e-05, 5.309700000000195e-05, 5.286099999999433e-05, 5.3193999999999464e-05, 5.326400000000425e-05, 5.362500000000159e-05, 5.309700000000195e-05, 5.306900000000281e-05, 5.2999999999997494e-05, 5.2735999999997674e-05, 5.358299999999594e-05, 5.3459000000005696e-05, 5.359800000000192e-05, 5.272299999999758e-05, 5.338899999999397e-05, 5.315300000000023e-05, 5.329100000000392e-05, 5.361100000000202e-05, 5.311099999999458e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.296" endtime="20201030 18:28:19.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.284" endtime="20201030 18:28:19.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.312" endtime="20201030 18:28:19.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.307" endtime="20201030 18:28:19.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.305" endtime="20201030 18:28:19.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.811" endtime="20201030 18:28:19.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:18.810" endtime="20201030 18:28:19.337"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.360" endtime="20201030 18:28:19.382"></status>
</kw>
<msg timestamp="20201030 18:28:19.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.356" endtime="20201030 18:28:19.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.386" endtime="20201030 18:28:19.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.392" endtime="20201030 18:28:19.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.349" endtime="20201030 18:28:19.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.343" endtime="20201030 18:28:19.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.416" endtime="20201030 18:28:19.724"></status>
</kw>
<msg timestamp="20201030 18:28:19.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.412" endtime="20201030 18:28:19.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.728" endtime="20201030 18:28:19.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.737" endtime="20201030 18:28:19.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.405" endtime="20201030 18:28:19.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.400" endtime="20201030 18:28:19.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:19.745" level="INFO">${RESULT} = [{'diff': 5.445899999999976e-05}, {'diff': 5.4444000000000714e-05}, {'diff': 5.3959000000006196e-05}, {'diff': 5.3999999999998494e-05}, {'diff': 5.41670000000008e-05}, {'diff': 5.427700000000535e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:19.740" endtime="20201030 18:28:19.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:19.749" level="INFO">${ACCURACY} = {'diff': [5.445899999999976e-05, 5.4444000000000714e-05, 5.3959000000006196e-05, 5.3999999999998494e-05, 5.41670000000008e-05, 5.427700000000535e-05, 5.3707999999999534e-05, 5.3916000000001074e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:19.746" endtime="20201030 18:28:19.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.754" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:28:19.753" endtime="20201030 18:28:19.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.757" level="INFO">VALUE: [5.445899999999976e-05, 5.4444000000000714e-05, 5.3959000000006196e-05, 5.3999999999998494e-05, 5.41670000000008e-05, 5.427700000000535e-05, 5.3707999999999534e-05, 5.3916000000001074e-05, 5.381899999999662e-05, 5.38470000000027e-05, 5.3707999999999534e-05, 5.463900000000216e-05, 5.406900000000381e-05, 5.383300000000313e-05, 5.3707999999999534e-05, 5.461099999999608e-05, 5.4513999999998564e-05, 5.40419999999972e-05, 5.418100000000037e-05, 5.394499999999969e-05, 5.384800000000217e-05, 5.372299999999858e-05, 5.4388000000002434e-05, 5.4388000000002434e-05, 5.4416000000001574e-05, 5.406899999999687e-05, 5.441700000000105e-05, 5.3944000000000214e-05, 5.415300000000123e-05, 5.459699999999651e-05, 5.4277999999997883e-05, 5.384699999999576e-05, 5.450000000000593e-05, 5.429200000000439e-05, 5.440300000000148e-05, 5.429200000000439e-05, 5.386100000000227e-05, 5.4499999999998994e-05, 5.422299999999908e-05, 5.4499999999998994e-05, 5.404099999999773e-05, 5.4499999999998994e-05, 5.3944000000000214e-05, 5.4180000000000894e-05, 5.405500000000424e-05, 5.443100000000062e-05, 5.461100000000302e-05, 5.4485999999999424e-05, 5.405600000000371e-05, 5.4277999999997883e-05]</msg>
<status status="PASS" starttime="20201030 18:28:19.756" endtime="20201030 18:28:19.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.750" endtime="20201030 18:28:19.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:19.768" endtime="20201030 18:28:19.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.766" endtime="20201030 18:28:19.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.764" endtime="20201030 18:28:19.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.339" endtime="20201030 18:28:19.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.338" endtime="20201030 18:28:19.793"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.816" endtime="20201030 18:28:19.837"></status>
</kw>
<msg timestamp="20201030 18:28:19.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.813" endtime="20201030 18:28:19.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:19.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:19.840" endtime="20201030 18:28:19.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.846" endtime="20201030 18:28:19.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.805" endtime="20201030 18:28:19.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.800" endtime="20201030 18:28:19.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:19.870" endtime="20201030 18:28:20.207"></status>
</kw>
<msg timestamp="20201030 18:28:20.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041553889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:19.867" endtime="20201030 18:28:20.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041498778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041553889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.217" endtime="20201030 18:28:20.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.236" endtime="20201030 18:28:20.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.860" endtime="20201030 18:28:20.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.855" endtime="20201030 18:28:20.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.253" level="INFO">${RESULT} = [{'diff': 5.511099999999658e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.533399999999716e-05}, {'diff': 5.513899999999572e-05}, {'diff': 5.5277999999998884e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:20.244" endtime="20201030 18:28:20.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.269" level="INFO">${ACCURACY} = {'diff': [5.511099999999658e-05, 5.5513999999999564e-05, 5.495900000000026e-05, 5.533399999999716e-05, 5.513899999999572e-05, 5.5277999999998884e-05, 5.483399999999666e-05, 5.527699999999941e-05, 5.55...</msg>
<status status="PASS" starttime="20201030 18:28:20.256" endtime="20201030 18:28:20.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.280" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.277" endtime="20201030 18:28:20.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.285" level="INFO">VALUE: [5.511099999999658e-05, 5.5513999999999564e-05, 5.495900000000026e-05, 5.533399999999716e-05, 5.513899999999572e-05, 5.5277999999998884e-05, 5.483399999999666e-05, 5.527699999999941e-05, 5.5527999999999134e-05, 5.559700000000445e-05, 5.483300000000413e-05, 5.5277999999998884e-05, 5.5180000000001894e-05, 5.4901999999995565e-05, 5.516699999999486e-05, 5.559699999999751e-05, 5.529200000000539e-05, 5.469500000000044e-05, 5.505599999999777e-05, 5.494500000000069e-05, 5.493100000000112e-05, 5.537500000000334e-05, 5.5499999999999994e-05, 5.484699999999676e-05, 5.4999999999999494e-05, 5.484699999999676e-05, 5.566699999999536e-05, 5.5180000000001894e-05, 5.465299999999479e-05, 5.561100000000402e-05, 5.5277999999998884e-05, 5.51670000000018e-05, 5.504200000000514e-05, 5.4735999999999674e-05, 5.483299999999719e-05, 5.507000000000428e-05, 5.4999999999999494e-05, 5.494500000000069e-05, 5.5513999999999564e-05, 5.505599999999777e-05, 5.5513999999999564e-05, 5.506899999999787e-05, 5.48470000000037e-05, 5.504099999999873e-05, 5.5179999999994955e-05, 5.538899999999597e-05, 5.5263999999999314e-05, 5.4943999999994275e-05, 5.4708000000000534e-05, 5.505600000000471e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.282" endtime="20201030 18:28:20.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.270" endtime="20201030 18:28:20.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.298" endtime="20201030 18:28:20.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.293" endtime="20201030 18:28:20.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.291" endtime="20201030 18:28:20.322"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.795" endtime="20201030 18:28:20.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:19.794" endtime="20201030 18:28:20.323"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.346" endtime="20201030 18:28:20.367"></status>
</kw>
<msg timestamp="20201030 18:28:20.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.342" endtime="20201030 18:28:20.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.370" endtime="20201030 18:28:20.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.376" endtime="20201030 18:28:20.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.335" endtime="20201030 18:28:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.329" endtime="20201030 18:28:20.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.400" endtime="20201030 18:28:20.738"></status>
</kw>
<msg timestamp="20201030 18:28:20.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041237514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041293306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.397" endtime="20201030 18:28:20.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041237514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041293306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.748" endtime="20201030 18:28:20.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.767" endtime="20201030 18:28:20.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.389" endtime="20201030 18:28:20.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.384" endtime="20201030 18:28:20.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.784" level="INFO">${RESULT} = [{'diff': 5.5791999999998954e-05}, {'diff': 5.627699999999347e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.640300000000348e-05}, {'diff': 5.583300000000513e-05}, {'diff': 5.58470000000047e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.775" endtime="20201030 18:28:20.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:20.795" level="INFO">${ACCURACY} = {'diff': [5.5791999999998954e-05, 5.627699999999347e-05, 5.5708000000001534e-05, 5.640300000000348e-05, 5.583300000000513e-05, 5.58470000000047e-05, 5.638899999999697e-05, 5.612499999999715e-05, 5.615...</msg>
<status status="PASS" starttime="20201030 18:28:20.786" endtime="20201030 18:28:20.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.807" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:28:20.804" endtime="20201030 18:28:20.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.812" level="INFO">VALUE: [5.5791999999998954e-05, 5.627699999999347e-05, 5.5708000000001534e-05, 5.640300000000348e-05, 5.583300000000513e-05, 5.58470000000047e-05, 5.638899999999697e-05, 5.612499999999715e-05, 5.615299999999629e-05, 5.608400000000485e-05, 5.608399999999791e-05, 5.640300000000348e-05, 5.572300000000058e-05, 5.6277999999999884e-05, 5.615300000000323e-05, 5.583399999999766e-05, 5.5722000000001104e-05, 5.606899999999887e-05, 5.5958000000001784e-05, 5.604099999999973e-05, 5.5930000000002644e-05, 5.631899999999912e-05, 5.666699999999636e-05, 5.640300000000348e-05, 5.638900000000391e-05, 5.662500000000459e-05, 5.593100000000212e-05, 5.609800000000442e-05, 5.638899999999697e-05, 5.5721999999994165e-05, 5.615299999999629e-05, 5.572299999999364e-05, 5.618099999999543e-05, 5.583299999999819e-05, 5.661099999999808e-05, 5.5901999999996566e-05, 5.5958000000001784e-05, 5.6250000000000744e-05, 5.586099999999733e-05, 5.583299999999819e-05, 5.606899999999887e-05, 5.619500000000194e-05, 5.609799999999748e-05, 5.616699999999586e-05, 5.606999999999834e-05, 5.6319999999998593e-05, 5.581999999999809e-05, 5.6305999999999023e-05, 5.6277999999999884e-05, 5.606999999999834e-05]</msg>
<status status="PASS" starttime="20201030 18:28:20.809" endtime="20201030 18:28:20.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.797" endtime="20201030 18:28:20.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.825" endtime="20201030 18:28:20.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.820" endtime="20201030 18:28:20.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.818" endtime="20201030 18:28:20.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.325" endtime="20201030 18:28:20.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.324" endtime="20201030 18:28:20.850"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.873" endtime="20201030 18:28:20.894"></status>
</kw>
<msg timestamp="20201030 18:28:20.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.870" endtime="20201030 18:28:20.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.898" endtime="20201030 18:28:20.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.904" endtime="20201030 18:28:20.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.862" endtime="20201030 18:28:20.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.856" endtime="20201030 18:28:20.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.929" endtime="20201030 18:28:21.272"></status>
</kw>
<msg timestamp="20201030 18:28:21.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041594181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.925" endtime="20201030 18:28:21.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041594181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.282" endtime="20201030 18:28:21.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.301" endtime="20201030 18:28:21.305"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.917" endtime="20201030 18:28:21.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.913" endtime="20201030 18:28:21.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.318" level="INFO">${RESULT} = [{'diff': 5.723700000000165e-05}, {'diff': 5.6999999999994555e-05}, {'diff': 5.702700000000116e-05}, {'diff': 5.7500000000001994e-05}, {'diff': 5.763899999999822e-05}, {'diff': 5.68470000000057e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:21.309" endtime="20201030 18:28:21.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.328" level="INFO">${ACCURACY} = {'diff': [5.723700000000165e-05, 5.6999999999994555e-05, 5.702700000000116e-05, 5.7500000000001994e-05, 5.763899999999822e-05, 5.68470000000057e-05, 5.7264000000001314e-05, 5.7292000000000454e-05, 5.6...</msg>
<status status="PASS" starttime="20201030 18:28:21.320" endtime="20201030 18:28:21.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.339" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.336" endtime="20201030 18:28:21.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.344" level="INFO">VALUE: [5.723700000000165e-05, 5.6999999999994555e-05, 5.702700000000116e-05, 5.7500000000001994e-05, 5.763899999999822e-05, 5.68470000000057e-05, 5.7264000000001314e-05, 5.7292000000000454e-05, 5.6708000000002534e-05, 5.681899999999962e-05, 5.7278000000000884e-05, 5.718100000000337e-05, 5.677700000000091e-05, 5.6778000000000384e-05, 5.695900000000226e-05, 5.7042000000000204e-05, 5.694500000000269e-05, 5.684699999999876e-05, 5.751300000000209e-05, 5.681899999999962e-05, 5.7014000000001064e-05, 5.763899999999822e-05, 5.6943999999996275e-05, 5.738899999999797e-05, 5.684699999999876e-05, 5.686100000000527e-05, 5.7500000000001994e-05, 5.740299999999754e-05, 5.73749999999984e-05, 5.697300000000183e-05, 5.7264000000001314e-05, 5.738900000000491e-05, 5.708299999999944e-05, 5.7402000000005005e-05, 5.6735999999994735e-05, 5.706899999999987e-05, 5.6735999999994735e-05, 5.704100000000073e-05, 5.730500000000055e-05, 5.7165999999997386e-05, 5.7528000000001134e-05, 5.6957999999995845e-05, 5.684699999999876e-05, 5.738899999999797e-05, 5.697300000000183e-05, 5.695899999999532e-05, 5.7041999999993265e-05, 5.673700000000115e-05, 5.708300000000638e-05, 5.7415999999997636e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.341" endtime="20201030 18:28:21.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.330" endtime="20201030 18:28:21.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.357" endtime="20201030 18:28:21.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.353" endtime="20201030 18:28:21.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.350" endtime="20201030 18:28:21.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.852" endtime="20201030 18:28:21.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.851" endtime="20201030 18:28:21.382"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.405" endtime="20201030 18:28:21.428"></status>
</kw>
<msg timestamp="20201030 18:28:21.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.402" endtime="20201030 18:28:21.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.432" endtime="20201030 18:28:21.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.438" endtime="20201030 18:28:21.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.394" endtime="20201030 18:28:21.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.389" endtime="20201030 18:28:21.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.464" endtime="20201030 18:28:21.802"></status>
</kw>
<msg timestamp="20201030 18:28:21.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.460" endtime="20201030 18:28:21.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043413681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.812" endtime="20201030 18:28:21.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.831" endtime="20201030 18:28:21.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.451" endtime="20201030 18:28:21.836"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.446" endtime="20201030 18:28:21.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:21.848" level="INFO">${RESULT} = [{'diff': 5.8457999999997345e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.8056000000000774e-05}, {'diff': 5.840299999999854e-05}, {'diff': 5.794499999999675e-05}, {'diff': 5.7833999999999663e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:21.839" endtime="20201030 18:28:21.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:21.858" level="INFO">${ACCURACY} = {'diff': [5.8457999999997345e-05, 5.83749999999994e-05, 5.8056000000000774e-05, 5.840299999999854e-05, 5.794499999999675e-05, 5.7833999999999663e-05, 5.806899999999393e-05, 5.827699999999547e-05, 5.83...</msg>
<status status="PASS" starttime="20201030 18:28:21.850" endtime="20201030 18:28:21.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.869" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:28:21.867" endtime="20201030 18:28:21.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.874" level="INFO">VALUE: [5.8457999999997345e-05, 5.83749999999994e-05, 5.8056000000000774e-05, 5.840299999999854e-05, 5.794499999999675e-05, 5.7833999999999663e-05, 5.806899999999393e-05, 5.827699999999547e-05, 5.831899999999418e-05, 5.8165999999998386e-05, 5.8597999999999983e-05, 5.8499999999996055e-05, 5.841699999999811e-05, 5.780500000000105e-05, 5.83749999999994e-05, 5.8278000000001884e-05, 5.861100000000008e-05, 5.8070000000000344e-05, 5.81670000000048e-05, 5.862499999999965e-05, 5.7820000000000094e-05, 5.840299999999854e-05, 5.838899999999897e-05, 5.8471999999996915e-05, 5.8401999999999066e-05, 5.836099999999983e-05, 5.7792000000000954e-05, 5.8556000000001274e-05, 5.7708000000003534e-05, 5.8471999999996915e-05, 5.818099999999743e-05, 5.784699999999976e-05, 5.813899999999872e-05, 5.862499999999965e-05, 5.8278000000001884e-05, 5.78340000000066e-05, 5.815299999999829e-05, 5.7972000000003354e-05, 5.806900000000087e-05, 5.804100000000173e-05, 5.83749999999994e-05, 5.8486000000003424e-05, 5.829100000000198e-05, 5.804100000000173e-05, 5.7736000000002674e-05, 5.7957999999996845e-05, 5.7722000000003104e-05, 5.7708000000003534e-05, 5.8070000000000344e-05, 5.795899999999632e-05]</msg>
<status status="PASS" starttime="20201030 18:28:21.871" endtime="20201030 18:28:21.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.860" endtime="20201030 18:28:21.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:21.889" endtime="20201030 18:28:21.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.883" endtime="20201030 18:28:21.912"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.880" endtime="20201030 18:28:21.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.384" endtime="20201030 18:28:21.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.383" endtime="20201030 18:28:21.914"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.936" endtime="20201030 18:28:21.957"></status>
</kw>
<msg timestamp="20201030 18:28:21.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.933" endtime="20201030 18:28:21.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:21.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:21.961" endtime="20201030 18:28:21.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.967" endtime="20201030 18:28:21.971"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.926" endtime="20201030 18:28:21.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.920" endtime="20201030 18:28:21.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:21.991" endtime="20201030 18:28:22.328"></status>
</kw>
<msg timestamp="20201030 18:28:22.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041457833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:21.987" endtime="20201030 18:28:22.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041457833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041517389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.338" endtime="20201030 18:28:22.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.357" endtime="20201030 18:28:22.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.980" endtime="20201030 18:28:22.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.975" endtime="20201030 18:28:22.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.375" level="INFO">${RESULT} = [{'diff': 5.9556000000002274e-05}, {'diff': 5.941699999999911e-05}, {'diff': 5.895900000000426e-05}, {'diff': 5.9499999999997055e-05}, {'diff': 5.894499999999775e-05}, {'diff': 5.9193999999998526e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:22.366" endtime="20201030 18:28:22.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.385" level="INFO">${ACCURACY} = {'diff': [5.9556000000002274e-05, 5.941699999999911e-05, 5.895900000000426e-05, 5.9499999999997055e-05, 5.894499999999775e-05, 5.9193999999998526e-05, 5.922299999999714e-05, 5.9416000000006575e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:28:22.377" endtime="20201030 18:28:22.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.396" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.394" endtime="20201030 18:28:22.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.402" level="INFO">VALUE: [5.9556000000002274e-05, 5.941699999999911e-05, 5.895900000000426e-05, 5.9499999999997055e-05, 5.894499999999775e-05, 5.9193999999998526e-05, 5.922299999999714e-05, 5.9416000000006575e-05, 5.9179999999998956e-05, 5.927700000000341e-05, 5.884700000000076e-05, 5.881900000000162e-05, 5.922300000000408e-05, 5.906899999999493e-05, 5.9292000000002454e-05, 5.9263999999996375e-05, 5.9194999999998e-05, 5.916699999999886e-05, 5.9041999999995265e-05, 5.9291999999995515e-05, 5.872300000000358e-05, 5.88749999999999e-05, 5.8763999999995875e-05, 5.8736000000003674e-05, 5.886100000000033e-05, 5.8957999999997845e-05, 5.90550000000023e-05, 5.8721999999997165e-05, 5.8971999999997415e-05, 5.923700000000365e-05, 5.9527999999996195e-05, 5.9112000000000053e-05, 5.869500000000444e-05, 5.9291999999995515e-05, 5.915299999999929e-05, 5.879100000000248e-05, 5.912500000000015e-05, 5.951299999999715e-05, 5.9236000000004174e-05, 5.9013999999996125e-05, 5.9443999999998776e-05, 5.962500000000065e-05, 5.8929999999998706e-05, 5.8722000000004104e-05, 5.8943999999998276e-05, 5.916699999999886e-05, 5.8736000000003674e-05, 5.961100000000108e-05, 5.9556000000002274e-05, 5.961099999999414e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.399" endtime="20201030 18:28:22.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.387" endtime="20201030 18:28:22.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.415" endtime="20201030 18:28:22.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.411" endtime="20201030 18:28:22.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.408" endtime="20201030 18:28:22.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.916" endtime="20201030 18:28:22.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:21.914" endtime="20201030 18:28:22.440"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.463" endtime="20201030 18:28:22.484"></status>
</kw>
<msg timestamp="20201030 18:28:22.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.460" endtime="20201030 18:28:22.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.488" endtime="20201030 18:28:22.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.494" endtime="20201030 18:28:22.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.452" endtime="20201030 18:28:22.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.447" endtime="20201030 18:28:22.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.518" endtime="20201030 18:28:22.854"></status>
</kw>
<msg timestamp="20201030 18:28:22.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041600125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.514" endtime="20201030 18:28:22.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041600125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:22.864" endtime="20201030 18:28:22.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.883" endtime="20201030 18:28:22.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.507" endtime="20201030 18:28:22.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.502" endtime="20201030 18:28:22.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:22.901" level="INFO">${RESULT} = [{'diff': 6.0555999999996335e-05}, {'diff': 5.984700000000176e-05}, {'diff': 6.056900000000337e-05}, {'diff': 6.059699999999557e-05}, {'diff': 6.0292000000003454e-05}, {'diff': 6.016699999999986e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:22.892" endtime="20201030 18:28:22.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:22.912" level="INFO">${ACCURACY} = {'diff': [6.0555999999996335e-05, 5.984700000000176e-05, 6.056900000000337e-05, 6.059699999999557e-05, 6.0292000000003454e-05, 6.016699999999986e-05, 5.9735999999997735e-05, 6.0027999999996695e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:28:22.903" endtime="20201030 18:28:22.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.923" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:28:22.921" endtime="20201030 18:28:22.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:22.929" level="INFO">VALUE: [6.0555999999996335e-05, 5.984700000000176e-05, 6.056900000000337e-05, 6.059699999999557e-05, 6.0292000000003454e-05, 6.016699999999986e-05, 5.9735999999997735e-05, 6.0027999999996695e-05, 6.018099999999943e-05, 6.0263999999997375e-05, 6.061100000000208e-05, 6.038900000000097e-05, 6.016699999999986e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 5.995899999999832e-05, 6.0402000000001066e-05, 6.0514000000004564e-05, 6.0471999999998916e-05, 5.9721999999998165e-05, 5.9985999999997985e-05, 6.0277999999996945e-05, 6.0514000000004564e-05, 6.0278000000003884e-05, 6.037499999999446e-05, 6.0070000000002344e-05, 6.061100000000208e-05, 6.016699999999986e-05, 6.018099999999943e-05, 6.0027999999996695e-05, 6.016699999999986e-05, 6.0013999999997125e-05, 6.005499999999636e-05, 6.0166000000000386e-05, 6.0166000000000386e-05, 5.983300000000219e-05, 6.055499999999686e-05, 6.0471999999998916e-05, 6.036100000000183e-05, 6.016699999999986e-05, 6.061100000000208e-05, 6.0194999999999e-05, 6.0013999999997125e-05, 6.041700000000011e-05, 6.041700000000011e-05, 5.993099999999918e-05, 5.973700000000415e-05, 5.986100000000133e-05, 6.0402000000001066e-05, 6.0179999999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:28:22.926" endtime="20201030 18:28:22.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.914" endtime="20201030 18:28:22.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:22.942" endtime="20201030 18:28:22.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.937" endtime="20201030 18:28:22.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.935" endtime="20201030 18:28:22.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.442" endtime="20201030 18:28:22.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.441" endtime="20201030 18:28:22.967"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:22.990" endtime="20201030 18:28:23.011"></status>
</kw>
<msg timestamp="20201030 18:28:23.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:22.986" endtime="20201030 18:28:23.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.015" endtime="20201030 18:28:23.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.021" endtime="20201030 18:28:23.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.979" endtime="20201030 18:28:23.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.973" endtime="20201030 18:28:23.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.044" endtime="20201030 18:28:23.385"></status>
</kw>
<msg timestamp="20201030 18:28:23.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041559264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.041" endtime="20201030 18:28:23.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041559264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.394" endtime="20201030 18:28:23.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.413" endtime="20201030 18:28:23.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.034" endtime="20201030 18:28:23.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.029" endtime="20201030 18:28:23.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.431" level="INFO">${RESULT} = [{'diff': 6.145800000000035e-05}, {'diff': 6.084700000000276e-05}, {'diff': 6.1013999999998125e-05}, {'diff': 6.073700000000515e-05}, {'diff': 6.0848000000002234e-05}, {'diff': 6.155499999999786e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:23.422" endtime="20201030 18:28:23.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.440" level="INFO">${ACCURACY} = {'diff': [6.145800000000035e-05, 6.084700000000276e-05, 6.1013999999998125e-05, 6.073700000000515e-05, 6.0848000000002234e-05, 6.155499999999786e-05, 6.118000000000096e-05, 6.0805999999996585e-05, 6.1...</msg>
<status status="PASS" starttime="20201030 18:28:23.433" endtime="20201030 18:28:23.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.451" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.449" endtime="20201030 18:28:23.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.457" level="INFO">VALUE: [6.145800000000035e-05, 6.084700000000276e-05, 6.1013999999998125e-05, 6.073700000000515e-05, 6.0848000000002234e-05, 6.155499999999786e-05, 6.118000000000096e-05, 6.0805999999996585e-05, 6.129099999999804e-05, 6.113900000000172e-05, 6.0721999999999166e-05, 6.083299999999625e-05, 6.129200000000445e-05, 6.0735999999998735e-05, 6.116699999999392e-05, 6.162500000000265e-05, 6.10420000000042e-05, 6.138900000000197e-05, 6.0834000000002664e-05, 6.105600000000377e-05, 6.073699999999821e-05, 6.09029999999941e-05, 6.108300000000344e-05, 6.145800000000035e-05, 6.115200000000182e-05, 6.118000000000096e-05, 6.126400000000531e-05, 6.162500000000265e-05, 6.113899999999478e-05, 6.105600000000377e-05, 6.122199999999967e-05, 6.129199999999752e-05, 6.163899999999528e-05, 6.097300000000583e-05, 6.140300000000154e-05, 6.107000000000334e-05, 6.072299999999864e-05, 6.0957999999999846e-05, 6.0735999999998735e-05, 6.12499999999988e-05, 6.0721999999999166e-05, 6.104199999999727e-05, 6.12080000000001e-05, 6.0944000000000276e-05, 6.138900000000197e-05, 6.0971999999999416e-05, 6.140300000000154e-05, 6.107000000000334e-05, 6.115300000000129e-05, 6.129199999999752e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.454" endtime="20201030 18:28:23.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.442" endtime="20201030 18:28:23.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.470" endtime="20201030 18:28:23.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.465" endtime="20201030 18:28:23.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.463" endtime="20201030 18:28:23.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.969" endtime="20201030 18:28:23.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:22.968" endtime="20201030 18:28:23.495"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.518" endtime="20201030 18:28:23.541"></status>
</kw>
<msg timestamp="20201030 18:28:23.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.515" endtime="20201030 18:28:23.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.544" endtime="20201030 18:28:23.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.551" endtime="20201030 18:28:23.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.507" endtime="20201030 18:28:23.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.501" endtime="20201030 18:28:23.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.575" endtime="20201030 18:28:23.912"></status>
</kw>
<msg timestamp="20201030 18:28:23.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043645014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043707625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.571" endtime="20201030 18:28:23.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043645014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043707625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:23.921" endtime="20201030 18:28:23.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.940" endtime="20201030 18:28:23.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.564" endtime="20201030 18:28:23.946"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.559" endtime="20201030 18:28:23.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:23.958" level="INFO">${RESULT} = [{'diff': 6.261099999999714e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.229199999999852e-05}, {'diff': 6.259699999999757e-05}, {'diff': 6.231999999999766e-05}, {'diff': 6.183299999999725e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:23.949" endtime="20201030 18:28:23.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:23.968" level="INFO">${ACCURACY} = {'diff': [6.261099999999714e-05, 6.194400000000128e-05, 6.229199999999852e-05, 6.259699999999757e-05, 6.231999999999766e-05, 6.183299999999725e-05, 6.172199999999323e-05, 6.184699999999682e-05, 6.1972...</msg>
<status status="PASS" starttime="20201030 18:28:23.960" endtime="20201030 18:28:23.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.978" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:28:23.976" endtime="20201030 18:28:23.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.984" level="INFO">VALUE: [6.261099999999714e-05, 6.194400000000128e-05, 6.229199999999852e-05, 6.259699999999757e-05, 6.231999999999766e-05, 6.183299999999725e-05, 6.172199999999323e-05, 6.184699999999682e-05, 6.197299999999989e-05, 6.172299999999964e-05, 6.172299999999964e-05, 6.251399999999963e-05, 6.206900000000487e-05, 6.244400000000178e-05, 6.177799999999845e-05, 6.238899999999603e-05, 6.16950000000005e-05, 6.250000000000006e-05, 6.238900000000297e-05, 6.195800000000085e-05, 6.194400000000128e-05, 6.2195000000001e-05, 6.262499999999671e-05, 6.172200000000017e-05, 6.227799999999895e-05, 6.197199999999348e-05, 6.229200000000545e-05, 6.215300000000229e-05, 6.23750000000034e-05, 6.240200000000307e-05, 6.197200000000042e-05, 6.262499999999671e-05, 6.215300000000229e-05, 6.199999999999956e-05, 6.262499999999671e-05, 6.177799999999845e-05, 6.262499999999671e-05, 6.227799999999895e-05, 6.216700000000186e-05, 6.229199999999852e-05, 6.22629999999999e-05, 6.186100000000333e-05, 6.250000000000006e-05, 6.251399999999963e-05, 6.230499999999861e-05, 6.255599999999834e-05, 6.197200000000042e-05, 6.218000000000196e-05, 6.217999999999502e-05, 6.216700000000186e-05]</msg>
<status status="PASS" starttime="20201030 18:28:23.981" endtime="20201030 18:28:23.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.969" endtime="20201030 18:28:23.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:23.998" endtime="20201030 18:28:24.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.992" endtime="20201030 18:28:24.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.990" endtime="20201030 18:28:24.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.497" endtime="20201030 18:28:24.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.496" endtime="20201030 18:28:24.023"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.046" endtime="20201030 18:28:24.068"></status>
</kw>
<msg timestamp="20201030 18:28:24.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.043" endtime="20201030 18:28:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.071" endtime="20201030 18:28:24.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.077" endtime="20201030 18:28:24.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.036" endtime="20201030 18:28:24.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.030" endtime="20201030 18:28:24.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.101" endtime="20201030 18:28:24.438"></status>
</kw>
<msg timestamp="20201030 18:28:24.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041451167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.097" endtime="20201030 18:28:24.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041451167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.448" endtime="20201030 18:28:24.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.468" endtime="20201030 18:28:24.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.090" endtime="20201030 18:28:24.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.085" endtime="20201030 18:28:24.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.487" level="INFO">${RESULT} = [{'diff': 6.352700000000072e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.273600000000074e-05}, {'diff': 6.284699999999782e-05}, {'diff': 6.305599999999884e-05}, {'diff': 6.361199999999761e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:24.478" endtime="20201030 18:28:24.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:24.498" level="INFO">${ACCURACY} = {'diff': [6.352700000000072e-05, 6.351400000000063e-05, 6.273600000000074e-05, 6.284699999999782e-05, 6.305599999999884e-05, 6.361199999999761e-05, 6.30699999999984e-05, 6.318000000000296e-05, 6.36110...</msg>
<status status="PASS" starttime="20201030 18:28:24.489" endtime="20201030 18:28:24.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.509" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:28:24.506" endtime="20201030 18:28:24.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.514" level="INFO">VALUE: [6.352700000000072e-05, 6.351400000000063e-05, 6.273600000000074e-05, 6.284699999999782e-05, 6.305599999999884e-05, 6.361199999999761e-05, 6.30699999999984e-05, 6.318000000000296e-05, 6.361100000000508e-05, 6.347199999999498e-05, 6.362499999999771e-05, 6.317999999999602e-05, 6.345799999999541e-05, 6.284699999999782e-05, 6.316699999999592e-05, 6.348600000000149e-05, 6.34029999999966e-05, 6.315299999999635e-05, 6.35280000000002e-05, 6.361099999999814e-05, 6.295900000000132e-05, 6.329199999999952e-05, 6.361099999999814e-05, 6.342999999999627e-05, 6.306899999999893e-05, 6.336100000000483e-05, 6.341699999999617e-05, 6.284700000000476e-05, 6.283299999999825e-05, 6.283300000000519e-05, 6.272200000000117e-05, 6.301400000000013e-05, 6.283299999999825e-05, 6.316699999999592e-05, 6.327799999999995e-05, 6.273600000000074e-05, 6.318100000000243e-05, 6.316599999999645e-05, 6.294400000000228e-05, 6.365299999999685e-05, 6.270799999999466e-05, 6.281899999999868e-05, 6.305499999999936e-05, 6.362499999999771e-05, 6.323600000000124e-05, 6.284700000000476e-05, 6.362499999999771e-05, 6.316700000000286e-05, 6.295899999999438e-05, 6.318100000000243e-05]</msg>
<status status="PASS" starttime="20201030 18:28:24.511" endtime="20201030 18:28:24.516"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.499" endtime="20201030 18:28:24.518"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.527" endtime="20201030 18:28:24.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.523" endtime="20201030 18:28:24.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.520" endtime="20201030 18:28:24.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.026" endtime="20201030 18:28:24.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.024" endtime="20201030 18:28:24.552"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.576" endtime="20201030 18:28:24.597"></status>
</kw>
<msg timestamp="20201030 18:28:24.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.572" endtime="20201030 18:28:24.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.600" endtime="20201030 18:28:24.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.607" endtime="20201030 18:28:24.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.565" endtime="20201030 18:28:24.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.559" endtime="20201030 18:28:24.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.630" endtime="20201030 18:28:24.968"></status>
</kw>
<msg timestamp="20201030 18:28:24.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.627" endtime="20201030 18:28:24.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041723875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.977" endtime="20201030 18:28:24.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.996" endtime="20201030 18:28:25.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.620" endtime="20201030 18:28:25.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.615" endtime="20201030 18:28:25.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.014" level="INFO">${RESULT} = [{'diff': 6.39029999999971e-05}, {'diff': 6.40699999999994e-05}, {'diff': 6.418100000000343e-05}, {'diff': 6.44159999999977e-05}, {'diff': 6.380599999999959e-05}, {'diff': 6.409699999999907e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:25.005" endtime="20201030 18:28:25.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.026" level="INFO">${ACCURACY} = {'diff': [6.39029999999971e-05, 6.40699999999994e-05, 6.418100000000343e-05, 6.44159999999977e-05, 6.380599999999959e-05, 6.409699999999907e-05, 6.422200000000267e-05, 6.383299999999925e-05, 6.4291000...</msg>
<status status="PASS" starttime="20201030 18:28:25.016" endtime="20201030 18:28:25.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.037" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.034" endtime="20201030 18:28:25.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.042" level="INFO">VALUE: [6.39029999999971e-05, 6.40699999999994e-05, 6.418100000000343e-05, 6.44159999999977e-05, 6.380599999999959e-05, 6.409699999999907e-05, 6.422200000000267e-05, 6.383299999999925e-05, 6.429100000000104e-05, 6.461099999999914e-05, 6.450000000000206e-05, 6.406899999999993e-05, 6.422199999999573e-05, 6.395800000000285e-05, 6.397300000000189e-05, 6.451400000000163e-05, 6.418100000000343e-05, 6.384800000000523e-05, 6.438799999999856e-05, 6.427700000000147e-05, 6.413899999999778e-05, 6.45280000000012e-05, 6.37080000000026e-05, 6.398600000000199e-05, 6.437499999999846e-05, 6.383299999999925e-05, 6.405599999999984e-05, 6.434699999999932e-05, 6.383299999999925e-05, 6.377700000000097e-05, 6.416699999999692e-05, 6.436099999999889e-05, 6.411099999999864e-05, 6.404100000000079e-05, 6.383300000000619e-05, 6.4277999999994e-05, 6.373600000000174e-05, 6.455600000000034e-05, 6.395800000000285e-05, 6.394400000000328e-05, 6.404200000000027e-05, 6.415300000000429e-05, 6.45280000000012e-05, 6.408399999999898e-05, 6.4277999999994e-05, 6.418099999999649e-05, 6.459699999999957e-05, 6.405599999999984e-05, 6.44159999999977e-05, 6.384699999999882e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.039" endtime="20201030 18:28:25.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.027" endtime="20201030 18:28:25.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.059" endtime="20201030 18:28:25.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.055" endtime="20201030 18:28:25.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.052" endtime="20201030 18:28:25.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.554" endtime="20201030 18:28:25.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.553" endtime="20201030 18:28:25.084"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.107" endtime="20201030 18:28:25.128"></status>
</kw>
<msg timestamp="20201030 18:28:25.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.104" endtime="20201030 18:28:25.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.131" endtime="20201030 18:28:25.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.137" endtime="20201030 18:28:25.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.096" endtime="20201030 18:28:25.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.091" endtime="20201030 18:28:25.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.161" endtime="20201030 18:28:25.478"></status>
</kw>
<msg timestamp="20201030 18:28:25.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041399611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.158" endtime="20201030 18:28:25.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041399611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.483" endtime="20201030 18:28:25.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.491" endtime="20201030 18:28:25.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.150" endtime="20201030 18:28:25.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.146" endtime="20201030 18:28:25.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.499" level="INFO">${RESULT} = [{'diff': 6.513900000000572e-05}, {'diff': 6.476399999999494e-05}, {'diff': 6.530600000000109e-05}, {'diff': 6.567999999999852e-05}, {'diff': 6.495799999999691e-05}, {'diff': 6.50700000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:25.495" endtime="20201030 18:28:25.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:25.503" level="INFO">${ACCURACY} = {'diff': [6.513900000000572e-05, 6.476399999999494e-05, 6.530600000000109e-05, 6.567999999999852e-05, 6.495799999999691e-05, 6.50700000000004e-05, 6.472200000000317e-05, 6.530599999999415e-05, 6.52639...</msg>
<status status="PASS" starttime="20201030 18:28:25.500" endtime="20201030 18:28:25.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.509" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:28:25.508" endtime="20201030 18:28:25.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.511" level="INFO">VALUE: [6.513900000000572e-05, 6.476399999999494e-05, 6.530600000000109e-05, 6.567999999999852e-05, 6.495799999999691e-05, 6.50700000000004e-05, 6.472200000000317e-05, 6.530599999999415e-05, 6.526399999999544e-05, 6.552700000000272e-05, 6.538900000000597e-05, 6.527700000000247e-05, 6.486099999999939e-05, 6.550000000000306e-05, 6.500000000000256e-05, 6.47500000000023e-05, 6.527800000000195e-05, 6.495800000000385e-05, 6.480600000000059e-05, 6.50559999999939e-05, 6.548599999999655e-05, 6.512499999999921e-05, 6.472300000000264e-05, 6.561100000000014e-05, 6.506900000000093e-05, 6.561100000000014e-05, 6.488899999999853e-05, 6.484699999999982e-05, 6.527700000000247e-05, 6.538899999999903e-05, 6.497199999999648e-05, 6.494400000000428e-05, 6.497200000000342e-05, 6.484699999999982e-05, 6.515299999999835e-05, 6.54029999999986e-05, 6.494500000000375e-05, 6.5195000000004e-05, 6.47359999999958e-05, 6.519499999999706e-05, 6.494400000000428e-05, 6.500000000000256e-05, 6.517999999999802e-05, 6.506900000000093e-05, 6.506900000000093e-05, 6.530600000000109e-05, 6.55280000000022e-05, 6.527800000000195e-05, 6.550000000000306e-05, 6.561100000000014e-05]</msg>
<status status="PASS" starttime="20201030 18:28:25.510" endtime="20201030 18:28:25.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.504" endtime="20201030 18:28:25.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:25.518" endtime="20201030 18:28:25.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.516" endtime="20201030 18:28:25.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.514" endtime="20201030 18:28:25.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.086" endtime="20201030 18:28:25.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.085" endtime="20201030 18:28:25.538"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.558" endtime="20201030 18:28:25.580"></status>
</kw>
<msg timestamp="20201030 18:28:25.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.554" endtime="20201030 18:28:25.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:25.584" endtime="20201030 18:28:25.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.590" endtime="20201030 18:28:25.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.547" endtime="20201030 18:28:25.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.542" endtime="20201030 18:28:25.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.614" endtime="20201030 18:28:25.951"></status>
</kw>
<msg timestamp="20201030 18:28:25.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035790542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.610" endtime="20201030 18:28:25.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:25.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035790542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035856333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:25.961" endtime="20201030 18:28:25.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:25.980" endtime="20201030 18:28:25.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.603" endtime="20201030 18:28:25.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.598" endtime="20201030 18:28:25.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:25.997" level="INFO">${RESULT} = [{'diff': 6.57909999999956e-05}, {'diff': 6.649999999999712e-05}, {'diff': 6.62909999999961e-05}, {'diff': 6.624999999999687e-05}, {'diff': 6.644500000000525e-05}, {'diff': 6.57359999999968e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:25.988" endtime="20201030 18:28:25.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.007" level="INFO">${ACCURACY} = {'diff': [6.57909999999956e-05, 6.649999999999712e-05, 6.62909999999961e-05, 6.624999999999687e-05, 6.644500000000525e-05, 6.57359999999968e-05, 6.630600000000209e-05, 6.649999999999712e-05, 6.5846999...</msg>
<status status="PASS" starttime="20201030 18:28:25.999" endtime="20201030 18:28:26.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.018" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.016" endtime="20201030 18:28:26.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.024" level="INFO">VALUE: [6.57909999999956e-05, 6.649999999999712e-05, 6.62909999999961e-05, 6.624999999999687e-05, 6.644500000000525e-05, 6.57359999999968e-05, 6.630600000000209e-05, 6.649999999999712e-05, 6.584699999999388e-05, 6.57359999999968e-05, 6.627800000000295e-05, 6.595899999999738e-05, 6.619399999999859e-05, 6.572300000000364e-05, 6.584700000000082e-05, 6.583300000000125e-05, 6.633300000000175e-05, 6.594399999999834e-05, 6.59300000000057e-05, 6.606900000000193e-05, 6.649999999999712e-05, 6.630600000000209e-05, 6.583300000000125e-05, 6.594500000000475e-05, 6.57359999999968e-05, 6.572199999999723e-05, 6.593100000000518e-05, 6.665200000000038e-05, 6.661200000000062e-05, 6.663900000000028e-05, 6.583299999999431e-05, 6.581900000000168e-05, 6.62359999999973e-05, 6.663900000000028e-05, 6.604200000000227e-05, 6.616700000000586e-05, 6.570799999999766e-05, 6.650000000000406e-05, 6.572199999999723e-05, 6.594499999999781e-05, 6.598600000000399e-05, 6.650000000000406e-05, 6.58480000000003e-05, 6.608299999999456e-05, 6.637500000000046e-05, 6.605499999999542e-05, 6.602699999999628e-05, 6.62080000000051e-05, 6.643099999999874e-05, 6.594400000000528e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.020" endtime="20201030 18:28:26.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.009" endtime="20201030 18:28:26.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.038" endtime="20201030 18:28:26.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.032" endtime="20201030 18:28:26.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.030" endtime="20201030 18:28:26.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.540" endtime="20201030 18:28:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:25.539" endtime="20201030 18:28:26.063"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.086" endtime="20201030 18:28:26.107"></status>
</kw>
<msg timestamp="20201030 18:28:26.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.083" endtime="20201030 18:28:26.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.111" endtime="20201030 18:28:26.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.117" endtime="20201030 18:28:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.076" endtime="20201030 18:28:26.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.070" endtime="20201030 18:28:26.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.141" endtime="20201030 18:28:26.480"></status>
</kw>
<msg timestamp="20201030 18:28:26.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.137" endtime="20201030 18:28:26.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041749292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.490" endtime="20201030 18:28:26.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.510" endtime="20201030 18:28:26.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.130" endtime="20201030 18:28:26.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.126" endtime="20201030 18:28:26.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:26.531" level="INFO">${RESULT} = [{'diff': 6.70280000000037e-05}, {'diff': 6.729199999999658e-05}, {'diff': 6.67229999999977e-05}, {'diff': 6.69160000000002e-05}, {'diff': 6.715200000000088e-05}, {'diff': 6.672199999999823e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:26.521" endtime="20201030 18:28:26.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:26.544" level="INFO">${ACCURACY} = {'diff': [6.70280000000037e-05, 6.729199999999658e-05, 6.67229999999977e-05, 6.69160000000002e-05, 6.715200000000088e-05, 6.672199999999823e-05, 6.719399999999959e-05, 6.747199999999898e-05, 6.6749999...</msg>
<status status="PASS" starttime="20201030 18:28:26.534" endtime="20201030 18:28:26.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.557" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:28:26.555" endtime="20201030 18:28:26.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.563" level="INFO">VALUE: [6.70280000000037e-05, 6.729199999999658e-05, 6.67229999999977e-05, 6.69160000000002e-05, 6.715200000000088e-05, 6.672199999999823e-05, 6.719399999999959e-05, 6.747199999999898e-05, 6.674999999999737e-05, 6.686100000000139e-05, 6.715300000000035e-05, 6.729200000000352e-05, 6.694499999999881e-05, 6.747299999999845e-05, 6.67500000000043e-05, 6.736100000000189e-05, 6.737500000000146e-05, 6.751299999999821e-05, 6.712500000000121e-05, 6.719399999999959e-05, 6.684699999999488e-05, 6.683300000000225e-05, 6.736100000000189e-05, 6.761100000000214e-05, 6.682000000000216e-05, 6.716699999999992e-05, 6.672199999999823e-05, 6.761100000000214e-05, 6.694499999999881e-05, 6.738900000000103e-05, 6.686100000000139e-05, 6.761200000000162e-05, 6.730500000000361e-05, 6.729100000000404e-05, 6.738900000000103e-05, 6.762500000000171e-05, 6.711100000000164e-05, 6.677800000000345e-05, 6.751399999999769e-05, 6.694499999999881e-05, 6.670799999999866e-05, 6.683400000000173e-05, 6.67500000000043e-05, 6.676399999999694e-05, 6.66950000000055e-05, 6.67359999999978e-05, 6.718000000000002e-05, 6.718000000000002e-05, 6.704099999999685e-05, 6.697199999999848e-05]</msg>
<status status="PASS" starttime="20201030 18:28:26.560" endtime="20201030 18:28:26.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.546" endtime="20201030 18:28:26.566"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:26.576" endtime="20201030 18:28:26.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.571" endtime="20201030 18:28:26.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.569" endtime="20201030 18:28:26.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.065" endtime="20201030 18:28:26.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.064" endtime="20201030 18:28:26.601"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.624" endtime="20201030 18:28:26.646"></status>
</kw>
<msg timestamp="20201030 18:28:26.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.621" endtime="20201030 18:28:26.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:26.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:26.649" endtime="20201030 18:28:26.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.655" endtime="20201030 18:28:26.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.613" endtime="20201030 18:28:26.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.607" endtime="20201030 18:28:26.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:26.679" endtime="20201030 18:28:27.015"></status>
</kw>
<msg timestamp="20201030 18:28:27.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041560278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:26.676" endtime="20201030 18:28:27.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041560278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.024" endtime="20201030 18:28:27.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.043" endtime="20201030 18:28:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.668" endtime="20201030 18:28:27.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.663" endtime="20201030 18:28:27.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.061" level="INFO">${RESULT} = [{'diff': 6.777799999999751e-05}, {'diff': 6.786100000000239e-05}, {'diff': 6.77359999999988e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.77359999999988e-05}, {'diff': 6.788900000000153e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:27.052" endtime="20201030 18:28:27.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.072" level="INFO">${ACCURACY} = {'diff': [6.777799999999751e-05, 6.786100000000239e-05, 6.77359999999988e-05, 6.794400000000034e-05, 6.77359999999988e-05, 6.788900000000153e-05, 6.830599999999715e-05, 6.863900000000228e-05, 6.774999...</msg>
<status status="PASS" starttime="20201030 18:28:27.063" endtime="20201030 18:28:27.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.083" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.081" endtime="20201030 18:28:27.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.089" level="INFO">VALUE: [6.777799999999751e-05, 6.786100000000239e-05, 6.77359999999988e-05, 6.794400000000034e-05, 6.77359999999988e-05, 6.788900000000153e-05, 6.830599999999715e-05, 6.863900000000228e-05, 6.774999999999837e-05, 6.783299999999631e-05, 6.788900000000153e-05, 6.805600000000384e-05, 6.861100000000314e-05, 6.793100000000024e-05, 6.83480000000028e-05, 6.802700000000522e-05, 6.859700000000357e-05, 6.772199999999923e-05, 6.788899999999459e-05, 6.805500000000436e-05, 6.768099999999999e-05, 6.845800000000041e-05, 6.818100000000049e-05, 6.849999999999912e-05, 6.794499999999981e-05, 6.797299999999895e-05, 6.80700000000034e-05, 6.797199999999948e-05, 6.799999999999862e-05, 6.858399999999654e-05, 6.783299999999631e-05, 6.784700000000282e-05, 6.816600000000145e-05, 6.86109999999962e-05, 6.862500000000271e-05, 6.794400000000034e-05, 6.841699999999423e-05, 6.80700000000034e-05, 6.783399999999579e-05, 6.783400000000273e-05, 6.804199999999733e-05, 6.77229999999987e-05, 6.78480000000023e-05, 6.783400000000273e-05, 6.795800000000685e-05, 6.849999999999912e-05, 6.780600000000359e-05, 6.816600000000145e-05, 6.804099999999785e-05, 6.783299999999631e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.086" endtime="20201030 18:28:27.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.074" endtime="20201030 18:28:27.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.101" endtime="20201030 18:28:27.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.097" endtime="20201030 18:28:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.094" endtime="20201030 18:28:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.603" endtime="20201030 18:28:27.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:26.602" endtime="20201030 18:28:27.126"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.149" endtime="20201030 18:28:27.171"></status>
</kw>
<msg timestamp="20201030 18:28:27.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.146" endtime="20201030 18:28:27.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.174" endtime="20201030 18:28:27.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.180" endtime="20201030 18:28:27.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.139" endtime="20201030 18:28:27.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.133" endtime="20201030 18:28:27.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.204" endtime="20201030 18:28:27.546"></status>
</kw>
<msg timestamp="20201030 18:28:27.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041369514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041438972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.201" endtime="20201030 18:28:27.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041369514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041438972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.556" endtime="20201030 18:28:27.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.575" endtime="20201030 18:28:27.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.193" endtime="20201030 18:28:27.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.189" endtime="20201030 18:28:27.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:27.593" level="INFO">${RESULT} = [{'diff': 6.945799999999447e-05}, {'diff': 6.901400000000613e-05}, {'diff': 6.906899999999799e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.913900000000278e-05}, {'diff': 6.872200000000023e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:27.584" endtime="20201030 18:28:27.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:27.602" level="INFO">${ACCURACY} = {'diff': [6.945799999999447e-05, 6.901400000000613e-05, 6.906899999999799e-05, 6.894400000000134e-05, 6.913900000000278e-05, 6.872200000000023e-05, 6.89309999999943e-05, 6.876299999999946e-05, 6.94020...</msg>
<status status="PASS" starttime="20201030 18:28:27.595" endtime="20201030 18:28:27.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.613" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:28:27.611" endtime="20201030 18:28:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.619" level="INFO">VALUE: [6.945799999999447e-05, 6.901400000000613e-05, 6.906899999999799e-05, 6.894400000000134e-05, 6.913900000000278e-05, 6.872200000000023e-05, 6.89309999999943e-05, 6.876299999999946e-05, 6.940200000000313e-05, 6.927799999999901e-05, 6.897199999999354e-05, 6.891599999999526e-05, 6.883299999999731e-05, 6.895799999999397e-05, 6.899999999999962e-05, 6.94030000000026e-05, 6.901399999999919e-05, 6.950000000000012e-05, 6.930599999999815e-05, 6.952799999999926e-05, 6.874999999999937e-05, 6.874999999999937e-05, 6.915300000000235e-05, 6.927700000000647e-05, 6.940200000000313e-05, 6.895800000000091e-05, 6.918000000000202e-05, 6.906900000000493e-05, 6.920800000000116e-05, 6.872200000000023e-05, 6.87359999999998e-05, 6.915299999999541e-05, 6.938900000000303e-05, 6.938900000000303e-05, 6.872200000000023e-05, 6.906999999999747e-05, 6.884700000000382e-05, 6.918000000000202e-05, 6.961100000000414e-05, 6.895800000000091e-05, 6.872200000000023e-05, 6.933299999999781e-05, 6.872200000000023e-05, 6.90559999999979e-05, 6.902799999999876e-05, 6.938899999999609e-05, 6.906999999999747e-05, 6.922200000000073e-05, 6.950000000000012e-05, 6.918100000000149e-05]</msg>
<status status="PASS" starttime="20201030 18:28:27.615" endtime="20201030 18:28:27.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.604" endtime="20201030 18:28:27.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:27.632" endtime="20201030 18:28:27.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.627" endtime="20201030 18:28:27.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.625" endtime="20201030 18:28:27.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.129" endtime="20201030 18:28:27.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.127" endtime="20201030 18:28:27.657"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.680" endtime="20201030 18:28:27.703"></status>
</kw>
<msg timestamp="20201030 18:28:27.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.676" endtime="20201030 18:28:27.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.706" endtime="20201030 18:28:27.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.712" endtime="20201030 18:28:27.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.669" endtime="20201030 18:28:27.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.663" endtime="20201030 18:28:27.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.736" endtime="20201030 18:28:28.075"></status>
</kw>
<msg timestamp="20201030 18:28:28.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.733" endtime="20201030 18:28:28.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043481403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.084" endtime="20201030 18:28:28.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.103" endtime="20201030 18:28:28.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.726" endtime="20201030 18:28:28.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.721" endtime="20201030 18:28:28.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.121" level="INFO">${RESULT} = [{'diff': 7.036099999999795e-05}, {'diff': 7.006899999999899e-05}, {'diff': 7.062499999999777e-05}, {'diff': 7.050000000000112e-05}, {'diff': 6.97360000000008e-05}, {'diff': 7.006999999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:28.112" endtime="20201030 18:28:28.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.130" level="INFO">${ACCURACY} = {'diff': [7.036099999999795e-05, 7.006899999999899e-05, 7.062499999999777e-05, 7.050000000000112e-05, 6.97360000000008e-05, 7.006999999999847e-05, 6.97230000000007e-05, 7.040299999999666e-05, 7.012500...</msg>
<status status="PASS" starttime="20201030 18:28:28.123" endtime="20201030 18:28:28.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.141" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.139" endtime="20201030 18:28:28.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.147" level="INFO">VALUE: [7.036099999999795e-05, 7.006899999999899e-05, 7.062499999999777e-05, 7.050000000000112e-05, 6.97360000000008e-05, 7.006999999999847e-05, 6.97230000000007e-05, 7.040299999999666e-05, 7.012500000000421e-05, 7.047200000000198e-05, 7.062499999999777e-05, 7.016600000000345e-05, 7.005499999999942e-05, 7.061100000000514e-05, 6.983299999999831e-05, 7.026400000000044e-05, 7.04439999999959e-05, 6.983299999999831e-05, 7.00559999999989e-05, 7.006999999999847e-05, 7.00559999999989e-05, 7.016699999999598e-05, 7.038899999999709e-05, 7.002799999999976e-05, 6.995800000000191e-05, 7.040200000000413e-05, 7.061100000000514e-05, 6.991699999999573e-05, 7.038899999999709e-05, 7.016700000000292e-05, 7.027800000000001e-05, 6.984699999999788e-05, 7.052800000000026e-05, 6.995900000000138e-05, 7.026400000000044e-05, 7.004199999999933e-05, 6.986100000000439e-05, 7.016700000000292e-05, 7.016600000000345e-05, 7.033299999999881e-05, 7.02910000000001e-05, 6.970800000000166e-05, 7.029199999999958e-05, 6.972200000000123e-05, 7.018099999999555e-05, 6.984699999999788e-05, 6.968099999999505e-05, 7.002799999999976e-05, 6.97360000000008e-05, 6.982000000000516e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.144" endtime="20201030 18:28:28.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.132" endtime="20201030 18:28:28.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.161" endtime="20201030 18:28:28.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.155" endtime="20201030 18:28:28.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.153" endtime="20201030 18:28:28.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.659" endtime="20201030 18:28:28.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.658" endtime="20201030 18:28:28.186"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.209" endtime="20201030 18:28:28.231"></status>
</kw>
<msg timestamp="20201030 18:28:28.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.206" endtime="20201030 18:28:28.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.235" endtime="20201030 18:28:28.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.241" endtime="20201030 18:28:28.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.198" endtime="20201030 18:28:28.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.192" endtime="20201030 18:28:28.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.265" endtime="20201030 18:28:28.603"></status>
</kw>
<msg timestamp="20201030 18:28:28.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041308639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041379681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.261" endtime="20201030 18:28:28.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041308639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041379681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.613" endtime="20201030 18:28:28.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.632" endtime="20201030 18:28:28.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.254" endtime="20201030 18:28:28.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.249" endtime="20201030 18:28:28.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.649" level="INFO">${RESULT} = [{'diff': 7.104200000000033e-05}, {'diff': 7.095900000000238e-05}, {'diff': 7.119399999999665e-05}, {'diff': 7.161199999999868e-05}, {'diff': 7.091699999999673e-05}, {'diff': 7.105500000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:28.641" endtime="20201030 18:28:28.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:28.660" level="INFO">${ACCURACY} = {'diff': [7.104200000000033e-05, 7.095900000000238e-05, 7.119399999999665e-05, 7.161199999999868e-05, 7.091699999999673e-05, 7.105500000000042e-05, 7.09439999999964e-05, 7.097199999999554e-05, 7.14590...</msg>
<status status="PASS" starttime="20201030 18:28:28.651" endtime="20201030 18:28:28.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.671" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:28:28.669" endtime="20201030 18:28:28.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.677" level="INFO">VALUE: [7.104200000000033e-05, 7.095900000000238e-05, 7.119399999999665e-05, 7.161199999999868e-05, 7.091699999999673e-05, 7.105500000000042e-05, 7.09439999999964e-05, 7.097199999999554e-05, 7.145900000000288e-05, 7.148599999999561e-05, 7.084699999999888e-05, 7.07360000000018e-05, 7.150000000000212e-05, 7.118099999999655e-05, 7.069500000000256e-05, 7.162499999999877e-05, 7.087499999999802e-05, 7.111200000000512e-05, 7.140199999999819e-05, 7.09439999999964e-05, 7.12910000000011e-05, 7.156999999999997e-05, 7.162499999999877e-05, 7.151400000000169e-05, 7.119500000000306e-05, 7.16109999999992e-05, 7.122199999999579e-05, 7.108399999999904e-05, 7.161199999999868e-05, 7.104200000000033e-05, 7.080599999999965e-05, 7.152700000000178e-05, 7.129099999999416e-05, 7.072199999999529e-05, 7.084699999999888e-05, 7.083299999999931e-05, 7.104200000000033e-05, 7.133399999999929e-05, 7.127800000000101e-05, 7.084700000000582e-05, 7.113899999999784e-05, 7.151400000000169e-05, 7.118099999999655e-05, 7.151400000000169e-05, 7.083299999999931e-05, 7.120800000000316e-05, 7.084699999999888e-05, 7.117999999999708e-05, 7.116599999999751e-05, 7.072200000000223e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.674" endtime="20201030 18:28:28.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.662" endtime="20201030 18:28:28.680"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.690" endtime="20201030 18:28:28.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.685" endtime="20201030 18:28:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.683" endtime="20201030 18:28:28.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.188" endtime="20201030 18:28:28.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.187" endtime="20201030 18:28:28.714"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.738" endtime="20201030 18:28:28.760"></status>
</kw>
<msg timestamp="20201030 18:28:28.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.734" endtime="20201030 18:28:28.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.763" endtime="20201030 18:28:28.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.769" endtime="20201030 18:28:28.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.727" endtime="20201030 18:28:28.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.721" endtime="20201030 18:28:28.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.793" endtime="20201030 18:28:29.131"></status>
</kw>
<msg timestamp="20201030 18:28:29.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.790" endtime="20201030 18:28:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041506944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041579028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.140" endtime="20201030 18:28:29.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.159" endtime="20201030 18:28:29.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.782" endtime="20201030 18:28:29.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.778" endtime="20201030 18:28:29.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.177" level="INFO">${RESULT} = [{'diff': 7.208400000000004e-05}, {'diff': 7.222200000000373e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.242999999999833e-05}, {'diff': 7.177800000000151e-05}, {'diff': 7.26110000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:29.168" endtime="20201030 18:28:29.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.188" level="INFO">${ACCURACY} = {'diff': [7.208400000000004e-05, 7.222200000000373e-05, 7.209700000000013e-05, 7.242999999999833e-05, 7.177800000000151e-05, 7.26110000000002e-05, 7.230499999999473e-05, 7.2069000000001e-05, 7.2500000...</msg>
<status status="PASS" starttime="20201030 18:28:29.179" endtime="20201030 18:28:29.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.199" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.197" endtime="20201030 18:28:29.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.205" level="INFO">VALUE: [7.208400000000004e-05, 7.222200000000373e-05, 7.209700000000013e-05, 7.242999999999833e-05, 7.177800000000151e-05, 7.26110000000002e-05, 7.230499999999473e-05, 7.2069000000001e-05, 7.250000000000312e-05, 7.251400000000269e-05, 7.216699999999798e-05, 7.248599999999661e-05, 7.240299999999866e-05, 7.183300000000031e-05, 7.198599999999611e-05, 7.231900000000124e-05, 7.22910000000021e-05, 7.20560000000009e-05, 7.21109999999997e-05, 7.22910000000021e-05, 7.22769999999956e-05, 7.240299999999866e-05, 7.250000000000312e-05, 7.216699999999798e-05, 7.262499999999977e-05, 7.247200000000398e-05, 7.238800000000656e-05, 7.197299999999601e-05, 7.229200000000158e-05, 7.251400000000269e-05, 7.179200000000108e-05, 7.173599999999586e-05, 7.192999999999783e-05, 7.241599999999876e-05, 7.217999999999808e-05, 7.238899999999909e-05, 7.219400000000459e-05, 7.19439999999974e-05, 7.20560000000009e-05, 7.205599999999396e-05, 7.230600000000115e-05, 7.226400000000244e-05, 7.216699999999798e-05, 7.262499999999977e-05, 7.216699999999798e-05, 7.230500000000167e-05, 7.172199999999629e-05, 7.186099999999945e-05, 7.198600000000305e-05, 7.262499999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.202" endtime="20201030 18:28:29.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.190" endtime="20201030 18:28:29.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.217" endtime="20201030 18:28:29.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.213" endtime="20201030 18:28:29.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.210" endtime="20201030 18:28:29.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.717" endtime="20201030 18:28:29.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.716" endtime="20201030 18:28:29.242"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.265" endtime="20201030 18:28:29.287"></status>
</kw>
<msg timestamp="20201030 18:28:29.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.262" endtime="20201030 18:28:29.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.290" endtime="20201030 18:28:29.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.297" endtime="20201030 18:28:29.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.255" endtime="20201030 18:28:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.249" endtime="20201030 18:28:29.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.320" endtime="20201030 18:28:29.659"></status>
</kw>
<msg timestamp="20201030 18:28:29.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041584, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:29.317" endtime="20201030 18:28:29.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041584, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041657569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:29.669" endtime="20201030 18:28:29.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.688" endtime="20201030 18:28:29.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.310" endtime="20201030 18:28:29.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.305" endtime="20201030 18:28:29.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:29.705" level="INFO">${RESULT} = [{'diff': 7.356899999999555e-05}, {'diff': 7.270800000000466e-05}, {'diff': 7.284699999999394e-05}, {'diff': 7.273599999999686e-05}, {'diff': 7.317999999999908e-05}, {'diff': 7.293000000000577e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:29.697" endtime="20201030 18:28:29.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:29.715" level="INFO">${ACCURACY} = {'diff': [7.356899999999555e-05, 7.270800000000466e-05, 7.284699999999394e-05, 7.273599999999686e-05, 7.317999999999908e-05, 7.293000000000577e-05, 7.316699999999898e-05, 7.332000000000172e-05, 7.3166...</msg>
<status status="PASS" starttime="20201030 18:28:29.708" endtime="20201030 18:28:29.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.726" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:28:29.724" endtime="20201030 18:28:29.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.732" level="INFO">VALUE: [7.356899999999555e-05, 7.270800000000466e-05, 7.284699999999394e-05, 7.273599999999686e-05, 7.317999999999908e-05, 7.293000000000577e-05, 7.316699999999898e-05, 7.332000000000172e-05, 7.316699999999898e-05, 7.337500000000052e-05, 7.352799999999632e-05, 7.316699999999898e-05, 7.337500000000052e-05, 7.336100000000095e-05, 7.3069000000002e-05, 7.27360000000038e-05, 7.351399999999675e-05, 7.286100000000045e-05, 7.338900000000009e-05, 7.32360000000043e-05, 7.284699999999394e-05, 7.30560000000019e-05, 7.356899999999555e-05, 7.307000000000147e-05, 7.354100000000335e-05, 7.349999999999718e-05, 7.275000000000337e-05, 7.361200000000068e-05, 7.284700000000088e-05, 7.2763999999996e-05, 7.293000000000577e-05, 7.331999999999478e-05, 7.322200000000473e-05, 7.327799999999607e-05, 7.283299999999437e-05, 7.359700000000163e-05, 7.316699999999898e-05, 7.34439999999989e-05, 7.35690000000025e-05, 7.272299999999676e-05, 7.327799999999607e-05, 7.319399999999865e-05, 7.341599999999976e-05, 7.306899999999505e-05, 7.32910000000031e-05, 7.330599999999521e-05, 7.287500000000002e-05, 7.284700000000088e-05, 7.284699999999394e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201030 18:28:29.728" endtime="20201030 18:28:29.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.717" endtime="20201030 18:28:29.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:29.744" endtime="20201030 18:28:29.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.740" endtime="20201030 18:28:29.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.737" endtime="20201030 18:28:29.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.244" endtime="20201030 18:28:29.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.243" endtime="20201030 18:28:29.769"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.792" endtime="20201030 18:28:29.812"></status>
</kw>
<msg timestamp="20201030 18:28:29.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.789" endtime="20201030 18:28:29.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:29.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:29.814" endtime="20201030 18:28:29.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.817" endtime="20201030 18:28:29.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.782" endtime="20201030 18:28:29.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.776" endtime="20201030 18:28:29.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:29.828" endtime="20201030 18:28:30.136"></status>
</kw>
<msg timestamp="20201030 18:28:30.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040826625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040901222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:29.826" endtime="20201030 18:28:30.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040826625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040901222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.146" endtime="20201030 18:28:30.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.165" endtime="20201030 18:28:30.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.823" endtime="20201030 18:28:30.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.821" endtime="20201030 18:28:30.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.182" level="INFO">${RESULT} = [{'diff': 7.459700000000263e-05}, {'diff': 7.406899999999605e-05}, {'diff': 7.38189999999958e-05}, {'diff': 7.40560000000029e-05}, {'diff': 7.372199999999829e-05}, {'diff': 7.426400000000444e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:30.173" endtime="20201030 18:28:30.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.192" level="INFO">${ACCURACY} = {'diff': [7.459700000000263e-05, 7.406899999999605e-05, 7.38189999999958e-05, 7.40560000000029e-05, 7.372199999999829e-05, 7.426400000000444e-05, 7.372199999999829e-05, 7.372199999999829e-05, 7.404200...</msg>
<status status="PASS" starttime="20201030 18:28:30.184" endtime="20201030 18:28:30.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.203" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.201" endtime="20201030 18:28:30.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.208" level="INFO">VALUE: [7.459700000000263e-05, 7.406899999999605e-05, 7.38189999999958e-05, 7.40560000000029e-05, 7.372199999999829e-05, 7.426400000000444e-05, 7.372199999999829e-05, 7.372199999999829e-05, 7.404200000000333e-05, 7.451399999999775e-05, 7.469400000000015e-05, 7.440200000000119e-05, 7.374999999999743e-05, 7.418000000000008e-05, 7.448600000000555e-05, 7.39439999999994e-05, 7.429199999999664e-05, 7.392999999999983e-05, 7.40560000000029e-05, 7.395799999999897e-05, 7.448599999999861e-05, 7.407000000000247e-05, 7.452799999999732e-05, 7.418099999999955e-05, 7.384700000000188e-05, 7.429099999999716e-05, 7.42910000000041e-05, 7.42769999999976e-05, 7.46110000000022e-05, 7.429199999999664e-05, 7.386100000000145e-05, 7.440300000000066e-05, 7.452799999999732e-05, 7.372200000000523e-05, 7.433300000000281e-05, 7.388900000000059e-05, 7.37230000000047e-05, 7.449999999999818e-05, 7.418000000000008e-05, 7.373599999999786e-05, 7.448599999999861e-05, 7.408300000000256e-05, 7.440300000000066e-05, 7.39439999999994e-05, 7.415300000000041e-05, 7.429199999999664e-05, 7.437500000000152e-05, 7.416699999999998e-05, 7.44439999999999e-05, 7.37230000000047e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.205" endtime="20201030 18:28:30.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.194" endtime="20201030 18:28:30.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.232" endtime="20201030 18:28:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.221" endtime="20201030 18:28:30.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.219" endtime="20201030 18:28:30.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.771" endtime="20201030 18:28:30.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:29.770" endtime="20201030 18:28:30.257"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.280" endtime="20201030 18:28:30.301"></status>
</kw>
<msg timestamp="20201030 18:28:30.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.276" endtime="20201030 18:28:30.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.305" endtime="20201030 18:28:30.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.311" endtime="20201030 18:28:30.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.269" endtime="20201030 18:28:30.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.263" endtime="20201030 18:28:30.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.335" endtime="20201030 18:28:30.674"></status>
</kw>
<msg timestamp="20201030 18:28:30.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041378917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.332" endtime="20201030 18:28:30.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041378917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:30.684" endtime="20201030 18:28:30.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.703" endtime="20201030 18:28:30.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.324" endtime="20201030 18:28:30.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.319" endtime="20201030 18:28:30.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:30.721" level="INFO">${RESULT} = [{'diff': 7.55969999999967e-05}, {'diff': 7.484699999999594e-05}, {'diff': 7.495899999999944e-05}, {'diff': 7.470899999999919e-05}, {'diff': 7.518100000000055e-05}, {'diff': 7.505599999999696e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:30.711" endtime="20201030 18:28:30.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:30.732" level="INFO">${ACCURACY} = {'diff': [7.55969999999967e-05, 7.484699999999594e-05, 7.495899999999944e-05, 7.470899999999919e-05, 7.518100000000055e-05, 7.505599999999696e-05, 7.538899999999515e-05, 7.484699999999594e-05, 7.47640...</msg>
<status status="PASS" starttime="20201030 18:28:30.723" endtime="20201030 18:28:30.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.743" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:28:30.741" endtime="20201030 18:28:30.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.748" level="INFO">VALUE: [7.55969999999967e-05, 7.484699999999594e-05, 7.495899999999944e-05, 7.470899999999919e-05, 7.518100000000055e-05, 7.505599999999696e-05, 7.538899999999515e-05, 7.484699999999594e-05, 7.476400000000494e-05, 7.483300000000331e-05, 7.562499999999583e-05, 7.493000000000083e-05, 7.529199999999764e-05, 7.495799999999997e-05, 7.497199999999954e-05, 7.473599999999886e-05, 7.549999999999918e-05, 7.505599999999696e-05, 7.561200000000268e-05, 7.529099999999816e-05, 7.506899999999705e-05, 7.516599999999457e-05, 7.481900000000374e-05, 7.529099999999816e-05, 7.515299999999447e-05, 7.53890000000021e-05, 7.551400000000569e-05, 7.491700000000073e-05, 7.516700000000098e-05, 7.507000000000347e-05, 7.533300000000381e-05, 7.50560000000039e-05, 7.502699999999835e-05, 7.5069000000004e-05, 7.518000000000108e-05, 7.48189999999968e-05, 7.538899999999515e-05, 7.530600000000415e-05, 7.483300000000331e-05, 7.556999999999703e-05, 7.549999999999918e-05, 7.516700000000098e-05, 7.518100000000055e-05, 7.472299999999876e-05, 7.562500000000277e-05, 7.499999999999868e-05, 7.473599999999886e-05, 7.483300000000331e-05, 7.568100000000105e-05, 7.495799999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:28:30.745" endtime="20201030 18:28:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.734" endtime="20201030 18:28:30.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:30.761" endtime="20201030 18:28:30.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.757" endtime="20201030 18:28:30.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.754" endtime="20201030 18:28:30.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.259" endtime="20201030 18:28:30.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.258" endtime="20201030 18:28:30.786"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.809" endtime="20201030 18:28:30.831"></status>
</kw>
<msg timestamp="20201030 18:28:30.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.806" endtime="20201030 18:28:30.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:30.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:30.835" endtime="20201030 18:28:30.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.841" endtime="20201030 18:28:30.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.799" endtime="20201030 18:28:30.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.793" endtime="20201030 18:28:30.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:30.864" endtime="20201030 18:28:31.201"></status>
</kw>
<msg timestamp="20201030 18:28:31.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041740639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041817, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:30.861" endtime="20201030 18:28:31.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041740639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041817, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:31.211" endtime="20201030 18:28:31.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.230" endtime="20201030 18:28:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.854" endtime="20201030 18:28:31.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.849" endtime="20201030 18:28:31.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.248" level="INFO">${RESULT} = [{'diff': 7.636099999999701e-05}, {'diff': 7.59440000000014e-05}, {'diff': 7.588799999999618e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.60969999999972e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:31.239" endtime="20201030 18:28:31.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.259" level="INFO">${ACCURACY} = {'diff': [7.636099999999701e-05, 7.59440000000014e-05, 7.588799999999618e-05, 7.651399999999975e-05, 7.574999999999943e-05, 7.60969999999972e-05, 7.64719999999941e-05, 7.630600000000515e-05, 7.5846999...</msg>
<status status="PASS" starttime="20201030 18:28:31.250" endtime="20201030 18:28:31.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.270" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.268" endtime="20201030 18:28:31.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.276" level="INFO">VALUE: [7.636099999999701e-05, 7.59440000000014e-05, 7.588799999999618e-05, 7.651399999999975e-05, 7.574999999999943e-05, 7.60969999999972e-05, 7.64719999999941e-05, 7.630600000000515e-05, 7.584699999999694e-05, 7.640199999999625e-05, 7.662500000000377e-05, 7.583300000000431e-05, 7.583299999999737e-05, 7.599999999999968e-05, 7.570800000000072e-05, 7.65839999999976e-05, 7.608400000000404e-05, 7.591700000000173e-05, 7.5763999999999e-05, 7.629199999999864e-05, 7.583300000000431e-05, 7.583299999999737e-05, 7.62769999999996e-05, 7.591599999999532e-05, 7.583300000000431e-05, 7.58189999999978e-05, 7.640299999999572e-05, 7.605599999999796e-05, 7.661099999999726e-05, 7.618100000000155e-05, 7.630600000000515e-05, 7.624999999999993e-05, 7.634700000000438e-05, 7.6069000000005e-05, 7.605500000000542e-05, 7.645800000000147e-05, 7.629099999999917e-05, 7.63890000000031e-05, 7.618100000000155e-05, 7.595800000000097e-05, 7.597200000000054e-05, 7.605599999999796e-05, 7.583399999999685e-05, 7.637500000000352e-05, 7.648600000000061e-05, 7.62769999999996e-05, 7.651300000000028e-05, 7.640199999999625e-05, 7.650000000000018e-05, 7.640300000000266e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.272" endtime="20201030 18:28:31.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.261" endtime="20201030 18:28:31.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.288" endtime="20201030 18:28:31.310"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.284" endtime="20201030 18:28:31.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.282" endtime="20201030 18:28:31.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.788" endtime="20201030 18:28:31.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:30.787" endtime="20201030 18:28:31.313"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.337" endtime="20201030 18:28:31.358"></status>
</kw>
<msg timestamp="20201030 18:28:31.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.333" endtime="20201030 18:28:31.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.362" endtime="20201030 18:28:31.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.368" endtime="20201030 18:28:31.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.326" endtime="20201030 18:28:31.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.320" endtime="20201030 18:28:31.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.392" endtime="20201030 18:28:31.733"></status>
</kw>
<msg timestamp="20201030 18:28:31.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041577542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.388" endtime="20201030 18:28:31.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041500403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041577542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.742" endtime="20201030 18:28:31.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.761" endtime="20201030 18:28:31.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.381" endtime="20201030 18:28:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.376" endtime="20201030 18:28:31.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:31.779" level="INFO">${RESULT} = [{'diff': 7.713900000000384e-05}, {'diff': 7.716700000000298e-05}, {'diff': 7.683399999999785e-05}, {'diff': 7.750000000000118e-05}, {'diff': 7.695800000000197e-05}, {'diff': 7.75969999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:31.770" endtime="20201030 18:28:31.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:31.789" level="INFO">${ACCURACY} = {'diff': [7.713900000000384e-05, 7.716700000000298e-05, 7.683399999999785e-05, 7.750000000000118e-05, 7.695800000000197e-05, 7.75969999999987e-05, 7.761099999999826e-05, 7.673600000000086e-05, 7.75140...</msg>
<status status="PASS" starttime="20201030 18:28:31.781" endtime="20201030 18:28:31.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.799" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:28:31.797" endtime="20201030 18:28:31.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.805" level="INFO">VALUE: [7.713900000000384e-05, 7.716700000000298e-05, 7.683399999999785e-05, 7.750000000000118e-05, 7.695800000000197e-05, 7.75969999999987e-05, 7.761099999999826e-05, 7.673600000000086e-05, 7.751400000000075e-05, 7.750000000000118e-05, 7.708299999999862e-05, 7.683299999999837e-05, 7.684699999999794e-05, 7.69589999999945e-05, 7.759799999999817e-05, 7.726300000000103e-05, 7.759799999999817e-05, 7.692999999999589e-05, 7.729100000000017e-05, 7.732000000000572e-05, 7.762499999999783e-05, 7.69440000000024e-05, 7.750000000000118e-05, 7.734799999999792e-05, 7.695900000000144e-05, 7.666700000000248e-05, 7.76110000000052e-05, 7.684799999999742e-05, 7.669500000000162e-05, 7.726300000000103e-05, 7.672200000000129e-05, 7.673600000000086e-05, 7.738899999999715e-05, 7.716599999999657e-05, 7.751400000000075e-05, 7.705499999999949e-05, 7.716700000000298e-05, 7.697200000000154e-05, 7.70560000000059e-05, 7.727800000000007e-05, 7.750000000000118e-05, 7.680599999999871e-05, 7.677799999999957e-05, 7.705499999999949e-05, 7.684699999999794e-05, 7.729100000000017e-05, 7.75969999999987e-05, 7.729199999999964e-05, 7.755599999999946e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201030 18:28:31.802" endtime="20201030 18:28:31.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.790" endtime="20201030 18:28:31.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:31.818" endtime="20201030 18:28:31.839"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.813" endtime="20201030 18:28:31.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.811" endtime="20201030 18:28:31.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.316" endtime="20201030 18:28:31.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.314" endtime="20201030 18:28:31.843"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.866" endtime="20201030 18:28:31.889"></status>
</kw>
<msg timestamp="20201030 18:28:31.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.862" endtime="20201030 18:28:31.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.893" endtime="20201030 18:28:31.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.899" endtime="20201030 18:28:31.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.855" endtime="20201030 18:28:31.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.849" endtime="20201030 18:28:31.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.922" endtime="20201030 18:28:32.261"></status>
</kw>
<msg timestamp="20201030 18:28:32.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:31.919" endtime="20201030 18:28:32.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043120375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043198458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.270" endtime="20201030 18:28:32.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.290" endtime="20201030 18:28:32.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.912" endtime="20201030 18:28:32.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.907" endtime="20201030 18:28:32.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.307" level="INFO">${RESULT} = [{'diff': 7.808299999999962e-05}, {'diff': 7.806999999999953e-05}, {'diff': 7.822199999999585e-05}, {'diff': 7.794500000000287e-05}, {'diff': 7.840299999999772e-05}, {'diff': 7.837499999999858e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:32.298" endtime="20201030 18:28:32.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.317" level="INFO">${ACCURACY} = {'diff': [7.808299999999962e-05, 7.806999999999953e-05, 7.822199999999585e-05, 7.794500000000287e-05, 7.840299999999772e-05, 7.837499999999858e-05, 7.837499999999858e-05, 7.816599999999757e-05, 7.7750...</msg>
<status status="PASS" starttime="20201030 18:28:32.309" endtime="20201030 18:28:32.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.327" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.325" endtime="20201030 18:28:32.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.333" level="INFO">VALUE: [7.808299999999962e-05, 7.806999999999953e-05, 7.822199999999585e-05, 7.794500000000287e-05, 7.840299999999772e-05, 7.837499999999858e-05, 7.837499999999858e-05, 7.816599999999757e-05, 7.775000000000143e-05, 7.797200000000254e-05, 7.795800000000297e-05, 7.797200000000254e-05, 7.783300000000631e-05, 7.793099999999636e-05, 7.784799999999842e-05, 7.806999999999953e-05, 7.775000000000143e-05, 7.840200000000519e-05, 7.812500000000527e-05, 7.808299999999962e-05, 7.84719999999961e-05, 7.79719999999956e-05, 7.786099999999851e-05, 7.829200000000064e-05, 7.84169999999973e-05, 7.784699999999894e-05, 7.773600000000186e-05, 7.80839999999991e-05, 7.852700000000185e-05, 7.855600000000046e-05, 7.819399999999671e-05, 7.829099999999423e-05, 7.854200000000089e-05, 7.829100000000117e-05, 7.815300000000441e-05, 7.784699999999894e-05, 7.825000000000193e-05, 7.841700000000423e-05, 7.838899999999815e-05, 7.825000000000193e-05, 7.862499999999883e-05, 7.797200000000254e-05, 7.805599999999996e-05, 7.833299999999987e-05, 7.82770000000016e-05, 7.772200000000229e-05, 7.862499999999883e-05, 7.837499999999858e-05, 7.804200000000039e-05, 7.794500000000287e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.330" endtime="20201030 18:28:32.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.318" endtime="20201030 18:28:32.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.347" endtime="20201030 18:28:32.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.341" endtime="20201030 18:28:32.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.339" endtime="20201030 18:28:32.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.845" endtime="20201030 18:28:32.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.843" endtime="20201030 18:28:32.372"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.396" endtime="20201030 18:28:32.417"></status>
</kw>
<msg timestamp="20201030 18:28:32.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.392" endtime="20201030 18:28:32.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.421" endtime="20201030 18:28:32.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.427" endtime="20201030 18:28:32.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.385" endtime="20201030 18:28:32.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.379" endtime="20201030 18:28:32.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.451" endtime="20201030 18:28:32.788"></status>
</kw>
<msg timestamp="20201030 18:28:32.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041603833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.448" endtime="20201030 18:28:32.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041524361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041603833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.797" endtime="20201030 18:28:32.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.816" endtime="20201030 18:28:32.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.440" endtime="20201030 18:28:32.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.435" endtime="20201030 18:28:32.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:32.833" level="INFO">${RESULT} = [{'diff': 7.94719999999971e-05}, {'diff': 7.887499999999908e-05}, {'diff': 7.917999999999814e-05}, {'diff': 7.873599999999592e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.905600000000096e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:32.824" endtime="20201030 18:28:32.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:32.844" level="INFO">${ACCURACY} = {'diff': [7.94719999999971e-05, 7.887499999999908e-05, 7.917999999999814e-05, 7.873599999999592e-05, 7.879200000000114e-05, 7.905600000000096e-05, 7.907000000000053e-05, 7.95970000000007e-05, 7.962499...</msg>
<status status="PASS" starttime="20201030 18:28:32.836" endtime="20201030 18:28:32.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.856" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:28:32.853" endtime="20201030 18:28:32.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.861" level="INFO">VALUE: [7.94719999999971e-05, 7.887499999999908e-05, 7.917999999999814e-05, 7.873599999999592e-05, 7.879200000000114e-05, 7.905600000000096e-05, 7.907000000000053e-05, 7.95970000000007e-05, 7.962499999999983e-05, 7.93190000000013e-05, 7.875000000000243e-05, 7.938899999999915e-05, 7.93049999999948e-05, 7.944399999999796e-05, 7.873600000000286e-05, 7.884699999999994e-05, 7.915300000000541e-05, 7.92919999999947e-05, 7.875000000000243e-05, 7.894500000000387e-05, 7.929200000000164e-05, 7.915299999999847e-05, 7.894500000000387e-05, 7.950000000000318e-05, 7.908300000000063e-05, 7.901399999999531e-05, 7.937499999999958e-05, 7.962499999999983e-05, 7.895799999999703e-05, 7.916700000000498e-05, 7.961100000000026e-05, 7.954199999999495e-05, 7.927800000000207e-05, 7.890299999999822e-05, 7.95269999999959e-05, 7.942999999999839e-05, 7.951400000000275e-05, 7.894399999999746e-05, 7.895799999999703e-05, 7.912499999999933e-05, 7.902800000000182e-05, 7.905499999999455e-05, 7.930600000000121e-05, 7.875000000000243e-05, 7.959699999999376e-05, 7.918099999999761e-05, 7.952800000000232e-05, 7.918100000000455e-05, 7.866600000000501e-05, 7.92770000000026e-05]</msg>
<status status="PASS" starttime="20201030 18:28:32.858" endtime="20201030 18:28:32.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.846" endtime="20201030 18:28:32.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:32.873" endtime="20201030 18:28:32.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.869" endtime="20201030 18:28:32.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.867" endtime="20201030 18:28:32.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.375" endtime="20201030 18:28:32.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.373" endtime="20201030 18:28:32.899"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.921" endtime="20201030 18:28:32.943"></status>
</kw>
<msg timestamp="20201030 18:28:32.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.918" endtime="20201030 18:28:32.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:32.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:32.947" endtime="20201030 18:28:32.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.953" endtime="20201030 18:28:32.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.911" endtime="20201030 18:28:32.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.905" endtime="20201030 18:28:32.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:32.977" endtime="20201030 18:28:33.318"></status>
</kw>
<msg timestamp="20201030 18:28:33.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:32.973" endtime="20201030 18:28:33.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.327" endtime="20201030 18:28:33.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.347" endtime="20201030 18:28:33.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.966" endtime="20201030 18:28:33.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.961" endtime="20201030 18:28:33.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.364" level="INFO">${RESULT} = [{'diff': 8.004200000000239e-05}, {'diff': 8.038900000000015e-05}, {'diff': 8.030600000000221e-05}, {'diff': 8.052799999999638e-05}, {'diff': 8.038900000000015e-05}, {'diff': 7.973599999999692e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.355" endtime="20201030 18:28:33.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.375" level="INFO">${ACCURACY} = {'diff': [8.004200000000239e-05, 8.038900000000015e-05, 8.030600000000221e-05, 8.052799999999638e-05, 8.038900000000015e-05, 7.973599999999692e-05, 7.986199999999999e-05, 7.987500000000008e-05, 8.0262...</msg>
<status status="PASS" starttime="20201030 18:28:33.366" endtime="20201030 18:28:33.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.386" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.384" endtime="20201030 18:28:33.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.392" level="INFO">VALUE: [8.004200000000239e-05, 8.038900000000015e-05, 8.030600000000221e-05, 8.052799999999638e-05, 8.038900000000015e-05, 7.973599999999692e-05, 7.986199999999999e-05, 7.987500000000008e-05, 8.026299999999709e-05, 7.973600000000386e-05, 8.006899999999512e-05, 8.040299999999972e-05, 8.018000000000608e-05, 7.994399999999846e-05, 8.019500000000512e-05, 7.976399999999606e-05, 7.979200000000214e-05, 7.972199999999735e-05, 7.995900000000444e-05, 8.004200000000239e-05, 8.005599999999502e-05, 8.019399999999871e-05, 8.022200000000479e-05, 8.004099999999598e-05, 8.017999999999914e-05, 7.994399999999846e-05, 8.038900000000015e-05, 8.015299999999947e-05, 7.972200000000429e-05, 7.995900000000444e-05, 8.027799999999613e-05, 8.026399999999656e-05, 8.05269999999969e-05, 8.036100000000101e-05, 8.05970000000017e-05, 8.025000000000393e-05, 7.983299999999444e-05, 8.017999999999914e-05, 8.005500000000249e-05, 8.02640000000035e-05, 8.033399999999441e-05, 7.970800000000472e-05, 8.027799999999613e-05, 8.038900000000015e-05, 8.05269999999969e-05, 8.029100000000317e-05, 8.001299999999684e-05, 8.006900000000206e-05, 8.040299999999972e-05, 7.984700000000094e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.389" endtime="20201030 18:28:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.377" endtime="20201030 18:28:33.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.405" endtime="20201030 18:28:33.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.400" endtime="20201030 18:28:33.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.398" endtime="20201030 18:28:33.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.901" endtime="20201030 18:28:33.429"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:32.899" endtime="20201030 18:28:33.430"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.453" endtime="20201030 18:28:33.474"></status>
</kw>
<msg timestamp="20201030 18:28:33.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.449" endtime="20201030 18:28:33.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.477" endtime="20201030 18:28:33.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.484" endtime="20201030 18:28:33.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.442" endtime="20201030 18:28:33.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.436" endtime="20201030 18:28:33.491"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.510" endtime="20201030 18:28:33.853"></status>
</kw>
<msg timestamp="20201030 18:28:33.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041461083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.506" endtime="20201030 18:28:33.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041379514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041461083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:33.862" endtime="20201030 18:28:33.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.881" endtime="20201030 18:28:33.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.498" endtime="20201030 18:28:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.492" endtime="20201030 18:28:33.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:33.900" level="INFO">${RESULT} = [{'diff': 8.156900000000356e-05}, {'diff': 8.152799999999738e-05}, {'diff': 8.083300000000238e-05}, {'diff': 8.072199999999835e-05}, {'diff': 8.068099999999911e-05}, {'diff': 8.138900000000115e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:33.891" endtime="20201030 18:28:33.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:33.910" level="INFO">${ACCURACY} = {'diff': [8.156900000000356e-05, 8.152799999999738e-05, 8.083300000000238e-05, 8.072199999999835e-05, 8.068099999999911e-05, 8.138900000000115e-05, 8.094499999999893e-05, 8.159699999999576e-05, 8.0736...</msg>
<status status="PASS" starttime="20201030 18:28:33.902" endtime="20201030 18:28:33.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.921" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:28:33.918" endtime="20201030 18:28:33.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:33.927" level="INFO">VALUE: [8.156900000000356e-05, 8.152799999999738e-05, 8.083300000000238e-05, 8.072199999999835e-05, 8.068099999999911e-05, 8.138900000000115e-05, 8.094499999999893e-05, 8.159699999999576e-05, 8.073600000000486e-05, 8.122299999999832e-05, 8.161200000000174e-05, 8.08190000000028e-05, 8.087500000000108e-05, 8.169499999999968e-05, 8.072199999999835e-05, 8.149999999999824e-05, 8.163899999999447e-05, 8.127799999999713e-05, 8.094499999999893e-05, 8.140300000000072e-05, 8.083399999999491e-05, 8.072300000000476e-05, 8.131899999999637e-05, 8.108299999999569e-05, 8.12770000000046e-05, 8.106899999999612e-05, 8.116600000000057e-05, 8.140300000000072e-05, 8.106900000000306e-05, 8.14170000000003e-05, 8.090300000000022e-05, 8.084700000000195e-05, 8.105600000000296e-05, 8.151399999999781e-05, 8.149999999999824e-05, 8.074999999999749e-05, 8.161100000000227e-05, 8.08190000000028e-05, 8.104099999999698e-05, 8.16390000000014e-05, 8.119499999999918e-05, 8.083300000000238e-05, 8.10840000000021e-05, 8.136099999999508e-05, 8.094500000000587e-05, 8.09169999999998e-05, 8.106999999999559e-05, 8.084700000000195e-05, 8.140200000000125e-05, 8.072199999999835e-05]</msg>
<status status="PASS" starttime="20201030 18:28:33.923" endtime="20201030 18:28:33.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.911" endtime="20201030 18:28:33.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:33.939" endtime="20201030 18:28:33.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.935" endtime="20201030 18:28:33.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.932" endtime="20201030 18:28:33.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.432" endtime="20201030 18:28:33.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.431" endtime="20201030 18:28:33.964"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:33.987" endtime="20201030 18:28:34.011"></status>
</kw>
<msg timestamp="20201030 18:28:34.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:33.984" endtime="20201030 18:28:34.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.015" endtime="20201030 18:28:34.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.022" endtime="20201030 18:28:34.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.977" endtime="20201030 18:28:34.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.971" endtime="20201030 18:28:34.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.047" endtime="20201030 18:28:34.385"></status>
</kw>
<msg timestamp="20201030 18:28:34.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.043" endtime="20201030 18:28:34.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.394" endtime="20201030 18:28:34.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.414" endtime="20201030 18:28:34.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.036" endtime="20201030 18:28:34.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.031" endtime="20201030 18:28:34.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.432" level="INFO">${RESULT} = [{'diff': 8.269500000000068e-05}, {'diff': 8.19589999999995e-05}, {'diff': 8.24720000000001e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.238900000000215e-05}, {'diff': 8.194400000000046e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:34.423" endtime="20201030 18:28:34.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.442" level="INFO">${ACCURACY} = {'diff': [8.269500000000068e-05, 8.19589999999995e-05, 8.24720000000001e-05, 8.249999999999924e-05, 8.238900000000215e-05, 8.194400000000046e-05, 8.229099999999823e-05, 8.261099999999633e-05, 8.254200...</msg>
<status status="PASS" starttime="20201030 18:28:34.434" endtime="20201030 18:28:34.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.453" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.451" endtime="20201030 18:28:34.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.459" level="INFO">VALUE: [8.269500000000068e-05, 8.19589999999995e-05, 8.24720000000001e-05, 8.249999999999924e-05, 8.238900000000215e-05, 8.194400000000046e-05, 8.229099999999823e-05, 8.261099999999633e-05, 8.254200000000489e-05, 8.234800000000292e-05, 8.216700000000104e-05, 8.261099999999633e-05, 8.251399999999881e-05, 8.179100000000467e-05, 8.207000000000353e-05, 8.219400000000071e-05, 8.240300000000172e-05, 8.1764000000005e-05, 8.18190000000038e-05, 8.199999999999874e-05, 8.206899999999712e-05, 8.195800000000003e-05, 8.170799999999978e-05, 8.229200000000464e-05, 8.195800000000003e-05, 8.21669999999941e-05, 8.202800000000482e-05, 8.224999999999899e-05, 8.19589999999995e-05, 8.205600000000396e-05, 8.268100000000111e-05, 8.186099999999558e-05, 8.252800000000532e-05, 8.181899999999687e-05, 8.259699999999676e-05, 8.183299999999644e-05, 8.229200000000464e-05, 8.207000000000353e-05, 8.204199999999745e-05, 8.216700000000104e-05, 8.19589999999995e-05, 8.259799999999623e-05, 8.238799999999574e-05, 8.19719999999996e-05, 8.183299999999644e-05, 8.240299999999479e-05, 8.262500000000284e-05, 8.252799999999838e-05, 8.174999999999849e-05, 8.181999999999634e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.456" endtime="20201030 18:28:34.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.444" endtime="20201030 18:28:34.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:34.473" endtime="20201030 18:28:34.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.467" endtime="20201030 18:28:34.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.464" endtime="20201030 18:28:34.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.967" endtime="20201030 18:28:34.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:33.965" endtime="20201030 18:28:34.498"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.521" endtime="20201030 18:28:34.543"></status>
</kw>
<msg timestamp="20201030 18:28:34.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.518" endtime="20201030 18:28:34.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:34.547" endtime="20201030 18:28:34.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.553" endtime="20201030 18:28:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.510" endtime="20201030 18:28:34.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.505" endtime="20201030 18:28:34.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.579" endtime="20201030 18:28:34.917"></status>
</kw>
<msg timestamp="20201030 18:28:34.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041746667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041830264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.575" endtime="20201030 18:28:34.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041746667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041830264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:34.926" endtime="20201030 18:28:34.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:34.945" endtime="20201030 18:28:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.567" endtime="20201030 18:28:34.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.562" endtime="20201030 18:28:34.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:34.963" level="INFO">${RESULT} = [{'diff': 8.359699999999776e-05}, {'diff': 8.318099999999468e-05}, {'diff': 8.2944999999994e-05}, {'diff': 8.34170000000023e-05}, {'diff': 8.307000000000453e-05}, {'diff': 8.27919999999982e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:28:34.954" endtime="20201030 18:28:34.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:34.974" level="INFO">${ACCURACY} = {'diff': [8.359699999999776e-05, 8.318099999999468e-05, 8.2944999999994e-05, 8.34170000000023e-05, 8.307000000000453e-05, 8.27919999999982e-05, 8.355499999999905e-05, 8.277699999999916e-05, 8.30689999...</msg>
<status status="PASS" starttime="20201030 18:28:34.965" endtime="20201030 18:28:34.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.985" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:28:34.982" endtime="20201030 18:28:34.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:34.990" level="INFO">VALUE: [8.359699999999776e-05, 8.318099999999468e-05, 8.2944999999994e-05, 8.34170000000023e-05, 8.307000000000453e-05, 8.27919999999982e-05, 8.355499999999905e-05, 8.277699999999916e-05, 8.306899999999812e-05, 8.354199999999895e-05, 8.2846999999997e-05, 8.363899999999647e-05, 8.299999999999974e-05, 8.306999999999759e-05, 8.281999999999734e-05, 8.32919999999987e-05, 8.286199999999605e-05, 8.326399999999956e-05, 8.304199999999845e-05, 8.329099999999923e-05, 8.340199999999631e-05, 8.28049999999983e-05, 8.350000000000024e-05, 8.283299999999744e-05, 8.295799999999409e-05, 8.31669999999951e-05, 8.326399999999956e-05, 8.298600000000017e-05, 8.324999999999999e-05, 8.320800000000128e-05, 8.280599999999777e-05, 8.292999999999495e-05, 8.350000000000024e-05, 8.272200000000035e-05, 8.326399999999956e-05, 8.294400000000146e-05, 8.34170000000023e-05, 8.2846999999997e-05, 8.359699999999776e-05, 8.281999999999734e-05, 8.318099999999468e-05, 8.324999999999999e-05, 8.329099999999923e-05, 8.284700000000395e-05, 8.2846999999997e-05, 8.273599999999992e-05, 8.315299999999554e-05, 8.32919999999987e-05, 8.283300000000438e-05, 8.288899999999572e-05]</msg>
<status status="PASS" starttime="20201030 18:28:34.987" endtime="20201030 18:28:34.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.975" endtime="20201030 18:28:34.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.003" endtime="20201030 18:28:35.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.999" endtime="20201030 18:28:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.996" endtime="20201030 18:28:35.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.500" endtime="20201030 18:28:35.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:34.499" endtime="20201030 18:28:35.028"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.051" endtime="20201030 18:28:35.073"></status>
</kw>
<msg timestamp="20201030 18:28:35.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.048" endtime="20201030 18:28:35.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.077" endtime="20201030 18:28:35.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.083" endtime="20201030 18:28:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.041" endtime="20201030 18:28:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.035" endtime="20201030 18:28:35.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.107" endtime="20201030 18:28:35.444"></status>
</kw>
<msg timestamp="20201030 18:28:35.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.103" endtime="20201030 18:28:35.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041376528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.454" endtime="20201030 18:28:35.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.473" endtime="20201030 18:28:35.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.096" endtime="20201030 18:28:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.091" endtime="20201030 18:28:35.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.490" level="INFO">${RESULT} = [{'diff': 8.41390000000039e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.397299999999414e-05}, {'diff': 8.382000000000528e-05}, {'diff': 8.437499999999765e-05}, {'diff': 8.44999999999943e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:35.481" endtime="20201030 18:28:35.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:35.506" level="INFO">${ACCURACY} = {'diff': [8.41390000000039e-05, 8.433299999999894e-05, 8.397299999999414e-05, 8.382000000000528e-05, 8.437499999999765e-05, 8.44999999999943e-05, 8.429099999999329e-05, 8.427800000000013e-05, 8.427800...</msg>
<status status="PASS" starttime="20201030 18:28:35.493" endtime="20201030 18:28:35.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.517" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:28:35.515" endtime="20201030 18:28:35.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.522" level="INFO">VALUE: [8.41390000000039e-05, 8.433299999999894e-05, 8.397299999999414e-05, 8.382000000000528e-05, 8.437499999999765e-05, 8.44999999999943e-05, 8.429099999999329e-05, 8.427800000000013e-05, 8.427800000000013e-05, 8.397199999999466e-05, 8.383299999999844e-05, 8.46249999999979e-05, 8.427800000000013e-05, 8.375000000000049e-05, 8.404199999999945e-05, 8.39590000000015e-05, 8.438900000000416e-05, 8.427700000000066e-05, 8.465300000000398e-05, 8.448600000000167e-05, 8.372200000000135e-05, 8.466700000000354e-05, 8.372200000000135e-05, 8.406999999999859e-05, 8.39590000000015e-05, 8.440300000000373e-05, 8.42919999999997e-05, 8.46249999999979e-05, 8.405599999999902e-05, 8.418000000000314e-05, 8.412500000000434e-05, 8.451400000000081e-05, 8.418000000000314e-05, 8.373600000000092e-05, 8.45970000000057e-05, 8.413899999999697e-05, 8.383400000000485e-05, 8.441699999999636e-05, 8.393099999999543e-05, 8.394500000000193e-05, 8.386099999999758e-05, 8.372200000000135e-05, 8.459699999999876e-05, 8.427800000000013e-05, 8.440300000000373e-05, 8.39720000000016e-05, 8.406999999999859e-05, 8.423600000000142e-05, 8.384700000000495e-05, 8.427800000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:28:35.519" endtime="20201030 18:28:35.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.508" endtime="20201030 18:28:35.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.540" endtime="20201030 18:28:35.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.535" endtime="20201030 18:28:35.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.533" endtime="20201030 18:28:35.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.031" endtime="20201030 18:28:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.029" endtime="20201030 18:28:35.564"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.588" endtime="20201030 18:28:35.610"></status>
</kw>
<msg timestamp="20201030 18:28:35.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.585" endtime="20201030 18:28:35.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.614" endtime="20201030 18:28:35.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.620" endtime="20201030 18:28:35.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.577" endtime="20201030 18:28:35.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.571" endtime="20201030 18:28:35.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.644" endtime="20201030 18:28:35.983"></status>
</kw>
<msg timestamp="20201030 18:28:35.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042318833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.640" endtime="20201030 18:28:35.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042318833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.993" endtime="20201030 18:28:36.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.012" endtime="20201030 18:28:36.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.633" endtime="20201030 18:28:36.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.628" endtime="20201030 18:28:36.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.030" level="INFO">${RESULT} = [{'diff': 8.523600000000242e-05}, {'diff': 8.502800000000088e-05}, {'diff': 8.505500000000055e-05}, {'diff': 8.481899999999987e-05}, {'diff': 8.540300000000473e-05}, {'diff': 8.505600000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.020" endtime="20201030 18:28:36.030"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.039" level="INFO">${ACCURACY} = {'diff': [8.523600000000242e-05, 8.502800000000088e-05, 8.505500000000055e-05, 8.481899999999987e-05, 8.540300000000473e-05, 8.505600000000002e-05, 8.552799999999444e-05, 8.558399999999966e-05, 8.5124...</msg>
<status status="PASS" starttime="20201030 18:28:36.032" endtime="20201030 18:28:36.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.050" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.048" endtime="20201030 18:28:36.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.056" level="INFO">VALUE: [8.523600000000242e-05, 8.502800000000088e-05, 8.505500000000055e-05, 8.481899999999987e-05, 8.540300000000473e-05, 8.505600000000002e-05, 8.552799999999444e-05, 8.558399999999966e-05, 8.51249999999984e-05, 8.56249999999989e-05, 8.495800000000303e-05, 8.483299999999944e-05, 8.494399999999652e-05, 8.488899999999772e-05, 8.501400000000131e-05, 8.506999999999959e-05, 8.494500000000293e-05, 8.530600000000027e-05, 8.501400000000131e-05, 8.486200000000499e-05, 8.486099999999858e-05, 8.4846999999999e-05, 8.529100000000123e-05, 8.552800000000138e-05, 8.505500000000055e-05, 8.516599999999763e-05, 8.551400000000181e-05, 8.551400000000181e-05, 8.493100000000336e-05, 8.505600000000002e-05, 8.473599999999498e-05, 8.4944999999996e-05, 8.495899999999557e-05, 8.527800000000113e-05, 8.561099999999933e-05, 8.554200000000095e-05, 8.520799999999634e-05, 8.483299999999944e-05, 8.505500000000055e-05, 8.488900000000466e-05, 8.52920000000007e-05, 8.495899999999557e-05, 8.52920000000007e-05, 8.519500000000318e-05, 8.56249999999989e-05, 8.563899999999847e-05, 8.550000000000224e-05, 8.56249999999989e-05, 8.506900000000012e-05, 8.475000000000149e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.052" endtime="20201030 18:28:36.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.041" endtime="20201030 18:28:36.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.068" endtime="20201030 18:28:36.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.064" endtime="20201030 18:28:36.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.061" endtime="20201030 18:28:36.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.567" endtime="20201030 18:28:36.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.565" endtime="20201030 18:28:36.093"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.116" endtime="20201030 18:28:36.140"></status>
</kw>
<msg timestamp="20201030 18:28:36.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.113" endtime="20201030 18:28:36.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.143" endtime="20201030 18:28:36.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.150" endtime="20201030 18:28:36.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.106" endtime="20201030 18:28:36.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.100" endtime="20201030 18:28:36.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.173" endtime="20201030 18:28:36.504"></status>
</kw>
<msg timestamp="20201030 18:28:36.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042993708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043080375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.170" endtime="20201030 18:28:36.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042993708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043080375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.509" endtime="20201030 18:28:36.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.518" endtime="20201030 18:28:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.163" endtime="20201030 18:28:36.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.158" endtime="20201030 18:28:36.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.526" level="INFO">${RESULT} = [{'diff': 8.66669999999986e-05}, {'diff': 8.587499999999915e-05}, {'diff': 8.616700000000505e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.608400000000016e-05}, {'diff': 8.593099999999743e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:36.522" endtime="20201030 18:28:36.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:36.530" level="INFO">${ACCURACY} = {'diff': [8.66669999999986e-05, 8.587499999999915e-05, 8.616700000000505e-05, 8.583300000000044e-05, 8.608400000000016e-05, 8.593099999999743e-05, 8.616700000000505e-05, 8.642999999999845e-05, 8.62910...</msg>
<status status="PASS" starttime="20201030 18:28:36.527" endtime="20201030 18:28:36.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.536" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:28:36.535" endtime="20201030 18:28:36.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.538" level="INFO">VALUE: [8.66669999999986e-05, 8.587499999999915e-05, 8.616700000000505e-05, 8.583300000000044e-05, 8.608400000000016e-05, 8.593099999999743e-05, 8.616700000000505e-05, 8.642999999999845e-05, 8.629100000000223e-05, 8.66249999999999e-05, 8.573599999999598e-05, 8.640299999999879e-05, 8.64999999999963e-05, 8.591699999999786e-05, 8.627799999999519e-05, 8.627800000000213e-05, 8.640300000000573e-05, 8.593099999999743e-05, 8.66119999999998e-05, 8.583300000000044e-05, 8.661100000000033e-05, 8.661100000000033e-05, 8.595799999999709e-05, 8.66249999999999e-05, 8.5847e-05, 8.605599999999408e-05, 8.62920000000017e-05, 8.607000000000059e-05, 8.597299999999614e-05, 8.638899999999922e-05, 8.604199999999451e-05, 8.586099999999958e-05, 8.598600000000317e-05, 8.573599999999598e-05, 8.583300000000044e-05, 8.572200000000335e-05, 8.583300000000044e-05, 8.641699999999836e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.651399999999587e-05, 8.626300000000309e-05, 8.619400000000471e-05, 8.605499999999461e-05, 8.650000000000324e-05, 8.59720000000036e-05, 8.5847e-05, 8.62920000000017e-05, 8.633300000000094e-05, 8.66249999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.537" endtime="20201030 18:28:36.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.531" endtime="20201030 18:28:36.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.545" endtime="20201030 18:28:36.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.542" endtime="20201030 18:28:36.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.541" endtime="20201030 18:28:36.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.096" endtime="20201030 18:28:36.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.094" endtime="20201030 18:28:36.566"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.583" endtime="20201030 18:28:36.604"></status>
</kw>
<msg timestamp="20201030 18:28:36.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.579" endtime="20201030 18:28:36.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.608" endtime="20201030 18:28:36.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.614" endtime="20201030 18:28:36.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.572" endtime="20201030 18:28:36.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.569" endtime="20201030 18:28:36.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.640" endtime="20201030 18:28:36.980"></status>
</kw>
<msg timestamp="20201030 18:28:36.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031459583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.636" endtime="20201030 18:28:36.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031459583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.990" endtime="20201030 18:28:37.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.009" endtime="20201030 18:28:37.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.628" endtime="20201030 18:28:37.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.623" endtime="20201030 18:28:37.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.026" level="INFO">${RESULT} = [{'diff': 8.702699999999647e-05}, {'diff': 8.752800000000338e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.705500000000255e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.740299999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:37.017" endtime="20201030 18:28:37.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.037" level="INFO">${ACCURACY} = {'diff': [8.702699999999647e-05, 8.752800000000338e-05, 8.71669999999991e-05, 8.705500000000255e-05, 8.756900000000262e-05, 8.740299999999979e-05, 8.674999999999655e-05, 8.708400000000116e-05, 8.74029...</msg>
<status status="PASS" starttime="20201030 18:28:37.028" endtime="20201030 18:28:37.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.048" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.046" endtime="20201030 18:28:37.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.054" level="INFO">VALUE: [8.702699999999647e-05, 8.752800000000338e-05, 8.71669999999991e-05, 8.705500000000255e-05, 8.756900000000262e-05, 8.740299999999979e-05, 8.674999999999655e-05, 8.708400000000116e-05, 8.740299999999979e-05, 8.706900000000212e-05, 8.71799999999992e-05, 8.686100000000058e-05, 8.751400000000381e-05, 8.694399999999852e-05, 8.672199999999741e-05, 8.673600000000392e-05, 8.763900000000047e-05, 8.727800000000313e-05, 8.694500000000494e-05, 8.713899999999997e-05, 8.673600000000392e-05, 8.695799999999809e-05, 8.694399999999852e-05, 8.686099999999364e-05, 8.73050000000028e-05, 8.740299999999979e-05, 8.727800000000313e-05, 8.727799999999619e-05, 8.718100000000562e-05, 8.672199999999741e-05, 8.726400000000356e-05, 8.727799999999619e-05, 8.727800000000313e-05, 8.695799999999809e-05, 8.731900000000237e-05, 8.694400000000546e-05, 8.708300000000169e-05, 8.683300000000144e-05, 8.69720000000046e-05, 8.686100000000058e-05, 8.709800000000073e-05, 8.738900000000022e-05, 8.707000000000159e-05, 8.695800000000503e-05, 8.729100000000323e-05, 8.727699999999672e-05, 8.694399999999852e-05, 8.769499999999875e-05, 8.672199999999741e-05, 8.681900000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.051" endtime="20201030 18:28:37.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.039" endtime="20201030 18:28:37.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.067" endtime="20201030 18:28:37.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.062" endtime="20201030 18:28:37.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.060" endtime="20201030 18:28:37.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.567" endtime="20201030 18:28:37.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.567" endtime="20201030 18:28:37.092"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.115" endtime="20201030 18:28:37.137"></status>
</kw>
<msg timestamp="20201030 18:28:37.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.112" endtime="20201030 18:28:37.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.141" endtime="20201030 18:28:37.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.147" endtime="20201030 18:28:37.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.105" endtime="20201030 18:28:37.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.099" endtime="20201030 18:28:37.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.171" endtime="20201030 18:28:37.513"></status>
</kw>
<msg timestamp="20201030 18:28:37.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042084153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.167" endtime="20201030 18:28:37.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041996139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042084153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.522" endtime="20201030 18:28:37.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.541" endtime="20201030 18:28:37.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.160" endtime="20201030 18:28:37.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.155" endtime="20201030 18:28:37.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.559" level="INFO">${RESULT} = [{'diff': 8.801399999999737e-05}, {'diff': 8.801400000000431e-05}, {'diff': 8.86250000000019e-05}, {'diff': 8.791600000000038e-05}, {'diff': 8.838800000000174e-05}, {'diff': 8.795799999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:37.550" endtime="20201030 18:28:37.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:37.570" level="INFO">${ACCURACY} = {'diff': [8.801399999999737e-05, 8.801400000000431e-05, 8.86250000000019e-05, 8.791600000000038e-05, 8.838800000000174e-05, 8.795799999999909e-05, 8.840300000000079e-05, 8.81800000000002e-05, 8.818099...</msg>
<status status="PASS" starttime="20201030 18:28:37.561" endtime="20201030 18:28:37.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.581" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:28:37.579" endtime="20201030 18:28:37.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.586" level="INFO">VALUE: [8.801399999999737e-05, 8.801400000000431e-05, 8.86250000000019e-05, 8.791600000000038e-05, 8.838800000000174e-05, 8.795799999999909e-05, 8.840300000000079e-05, 8.81800000000002e-05, 8.818099999999968e-05, 8.802800000000388e-05, 8.791699999999986e-05, 8.863900000000147e-05, 8.827799999999719e-05, 8.81670000000001e-05, 8.811099999999489e-05, 8.834699999999557e-05, 8.79720000000056e-05, 8.840300000000079e-05, 8.845799999999959e-05, 8.84999999999983e-05, 8.788900000000072e-05, 8.813900000000097e-05, 8.772199999999841e-05, 8.784799999999454e-05, 8.837499999999471e-05, 8.772299999999789e-05, 8.806900000000312e-05, 8.815200000000106e-05, 8.806900000000312e-05, 8.826399999999762e-05, 8.820899999999882e-05, 8.829199999999676e-05, 8.786100000000158e-05, 8.787500000000115e-05, 8.805599999999608e-05, 8.772299999999789e-05, 8.806899999999618e-05, 8.784700000000201e-05, 8.806899999999618e-05, 8.781899999999593e-05, 8.798599999999823e-05, 8.784699999999507e-05, 8.772199999999841e-05, 8.78329999999955e-05, 8.81670000000001e-05, 8.840300000000079e-05, 8.851399999999787e-05, 8.822199999999891e-05, 8.804200000000345e-05, 8.858299999999625e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.583" endtime="20201030 18:28:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.572" endtime="20201030 18:28:37.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.599" endtime="20201030 18:28:37.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.595" endtime="20201030 18:28:37.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.592" endtime="20201030 18:28:37.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.094" endtime="20201030 18:28:37.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.093" endtime="20201030 18:28:37.624"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.648" endtime="20201030 18:28:37.670"></status>
</kw>
<msg timestamp="20201030 18:28:37.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.644" endtime="20201030 18:28:37.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.674" endtime="20201030 18:28:37.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.680" endtime="20201030 18:28:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.637" endtime="20201030 18:28:37.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.631" endtime="20201030 18:28:37.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.704" endtime="20201030 18:28:38.046"></status>
</kw>
<msg timestamp="20201030 18:28:38.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.701" endtime="20201030 18:28:38.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042033125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.056" endtime="20201030 18:28:38.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.075" endtime="20201030 18:28:38.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.693" endtime="20201030 18:28:38.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.689" endtime="20201030 18:28:38.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.092" level="INFO">${RESULT} = [{'diff': 8.923599999999948e-05}, {'diff': 8.94999999999993e-05}, {'diff': 8.907000000000359e-05}, {'diff': 8.884700000000301e-05}, {'diff': 8.895899999999957e-05}, {'diff': 8.908399999999622e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:38.084" endtime="20201030 18:28:38.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.102" level="INFO">${ACCURACY} = {'diff': [8.923599999999948e-05, 8.94999999999993e-05, 8.907000000000359e-05, 8.884700000000301e-05, 8.895899999999957e-05, 8.908399999999622e-05, 8.895899999999957e-05, 8.915300000000154e-05, 8.89020...</msg>
<status status="PASS" starttime="20201030 18:28:38.095" endtime="20201030 18:28:38.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.113" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.111" endtime="20201030 18:28:38.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.119" level="INFO">VALUE: [8.923599999999948e-05, 8.94999999999993e-05, 8.907000000000359e-05, 8.884700000000301e-05, 8.895899999999957e-05, 8.908399999999622e-05, 8.895899999999957e-05, 8.915300000000154e-05, 8.890200000000181e-05, 8.941599999999494e-05, 8.891599999999444e-05, 8.940300000000179e-05, 8.941700000000136e-05, 8.894400000000052e-05, 8.948599999999973e-05, 8.913900000000197e-05, 8.872299999999889e-05, 8.905599999999708e-05, 8.906900000000412e-05, 8.891600000000138e-05, 8.884699999999607e-05, 8.96250000000029e-05, 8.96250000000029e-05, 8.894400000000052e-05, 8.951399999999887e-05, 8.948599999999973e-05, 8.924999999999905e-05, 8.872199999999941e-05, 8.92920000000047e-05, 8.874999999999855e-05, 8.877800000000463e-05, 8.965300000000204e-05, 8.883300000000344e-05, 8.940300000000179e-05, 8.952799999999844e-05, 8.927799999999819e-05, 8.940300000000179e-05, 8.927799999999819e-05, 8.895899999999957e-05, 8.962499999999596e-05, 8.876399999999812e-05, 8.936099999999614e-05, 8.958299999999725e-05, 8.961100000000333e-05, 8.902799999999794e-05, 8.908299999999675e-05, 8.895800000000009e-05, 8.874999999999855e-05, 8.893100000000043e-05, 8.951400000000581e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.116" endtime="20201030 18:28:38.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.104" endtime="20201030 18:28:38.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.131" endtime="20201030 18:28:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.127" endtime="20201030 18:28:38.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.124" endtime="20201030 18:28:38.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.626" endtime="20201030 18:28:38.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.625" endtime="20201030 18:28:38.157"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.179" endtime="20201030 18:28:38.204"></status>
</kw>
<msg timestamp="20201030 18:28:38.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.176" endtime="20201030 18:28:38.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.208" endtime="20201030 18:28:38.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.214" endtime="20201030 18:28:38.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.169" endtime="20201030 18:28:38.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.163" endtime="20201030 18:28:38.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.237" endtime="20201030 18:28:38.574"></status>
</kw>
<msg timestamp="20201030 18:28:38.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043340764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043431347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.234" endtime="20201030 18:28:38.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043340764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043431347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.584" endtime="20201030 18:28:38.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.603" endtime="20201030 18:28:38.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.227" endtime="20201030 18:28:38.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.222" endtime="20201030 18:28:38.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.621" level="INFO">${RESULT} = [{'diff': 9.058300000000519e-05}, {'diff': 8.984700000000401e-05}, {'diff': 9.019400000000177e-05}, {'diff': 8.992999999999501e-05}, {'diff': 9.040300000000279e-05}, {'diff': 8.994499999999406e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.612" endtime="20201030 18:28:38.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:38.630" level="INFO">${ACCURACY} = {'diff': [9.058300000000519e-05, 8.984700000000401e-05, 9.019400000000177e-05, 8.992999999999501e-05, 9.040300000000279e-05, 8.994499999999406e-05, 8.995900000000057e-05, 9.006999999999765e-05, 9.0487...</msg>
<status status="PASS" starttime="20201030 18:28:38.623" endtime="20201030 18:28:38.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.641" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:28:38.639" endtime="20201030 18:28:38.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.646" level="INFO">VALUE: [9.058300000000519e-05, 8.984700000000401e-05, 9.019400000000177e-05, 8.992999999999501e-05, 9.040300000000279e-05, 8.994499999999406e-05, 8.995900000000057e-05, 9.006999999999765e-05, 9.04870000000002e-05, 9.027799999999919e-05, 8.988899999999578e-05, 8.979100000000573e-05, 9.038899999999628e-05, 9.051399999999987e-05, 8.99999999999998e-05, 9.036099999999714e-05, 8.995800000000109e-05, 9.030600000000527e-05, 9.025000000000005e-05, 9.05000000000003e-05, 9.004199999999851e-05, 9.05130000000004e-05, 8.98329999999975e-05, 9.058299999999825e-05, 8.984700000000401e-05, 8.988900000000272e-05, 9.036100000000408e-05, 9.018100000000168e-05, 9.019500000000125e-05, 8.972200000000041e-05, 9.059799999999729e-05, 8.98329999999975e-05, 9.055499999999911e-05, 8.995800000000109e-05, 8.973599999999998e-05, 8.972200000000041e-05, 8.979199999999826e-05, 9.045800000000159e-05, 9.048600000000073e-05, 9.048600000000073e-05, 9.045900000000107e-05, 8.998600000000023e-05, 9.059699999999782e-05, 9.031899999999843e-05, 9.040199999999637e-05, 8.972200000000041e-05, 8.995800000000109e-05, 9.019400000000177e-05, 8.995800000000109e-05, 9.007000000000459e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.643" endtime="20201030 18:28:38.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.632" endtime="20201030 18:28:38.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.661" endtime="20201030 18:28:38.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.655" endtime="20201030 18:28:38.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.652" endtime="20201030 18:28:38.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.159" endtime="20201030 18:28:38.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.157" endtime="20201030 18:28:38.686"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.711" endtime="20201030 18:28:38.734"></status>
</kw>
<msg timestamp="20201030 18:28:38.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.707" endtime="20201030 18:28:38.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.737" endtime="20201030 18:28:38.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.743" endtime="20201030 18:28:38.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.699" endtime="20201030 18:28:38.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.693" endtime="20201030 18:28:38.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.767" endtime="20201030 18:28:39.104"></status>
</kw>
<msg timestamp="20201030 18:28:39.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043648097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.764" endtime="20201030 18:28:39.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043557333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043648097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.114" endtime="20201030 18:28:39.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.133" endtime="20201030 18:28:39.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.757" endtime="20201030 18:28:39.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.752" endtime="20201030 18:28:39.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.150" level="INFO">${RESULT} = [{'diff': 9.076400000000012e-05}, {'diff': 9.158299999999925e-05}, {'diff': 9.094399999999558e-05}, {'diff': 9.108299999999875e-05}, {'diff': 9.140299999999685e-05}, {'diff': 9.154200000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:39.141" endtime="20201030 18:28:39.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.161" level="INFO">${ACCURACY} = {'diff': [9.076400000000012e-05, 9.158299999999925e-05, 9.094399999999558e-05, 9.108299999999875e-05, 9.140299999999685e-05, 9.154200000000001e-05, 9.147200000000216e-05, 9.137499999999771e-05, 9.1249...</msg>
<status status="PASS" starttime="20201030 18:28:39.152" endtime="20201030 18:28:39.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.172" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.170" endtime="20201030 18:28:39.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.178" level="INFO">VALUE: [9.076400000000012e-05, 9.158299999999925e-05, 9.094399999999558e-05, 9.108299999999875e-05, 9.140299999999685e-05, 9.154200000000001e-05, 9.147200000000216e-05, 9.137499999999771e-05, 9.124999999999411e-05, 9.158399999999872e-05, 9.152700000000097e-05, 9.106899999999918e-05, 9.151400000000087e-05, 9.138900000000422e-05, 9.127800000000019e-05, 9.161099999999839e-05, 9.130599999999933e-05, 9.151400000000087e-05, 9.141699999999642e-05, 9.11670000000031e-05, 9.097200000000166e-05, 9.073700000000046e-05, 9.087499999999721e-05, 9.090200000000381e-05, 9.088899999999678e-05, 9.152800000000044e-05, 9.140299999999685e-05, 9.095800000000209e-05, 9.162499999999796e-05, 9.072200000000141e-05, 9.148600000000173e-05, 9.095900000000157e-05, 9.080600000000577e-05, 9.094400000000252e-05, 9.138800000000474e-05, 9.116600000000363e-05, 9.151400000000087e-05, 9.129199999999976e-05, 9.095800000000209e-05, 9.075000000000055e-05, 9.138900000000422e-05, 9.09729999999942e-05, 9.106999999999865e-05, 9.075000000000055e-05, 9.092999999999601e-05, 9.111100000000483e-05, 9.091599999999644e-05, 9.138899999999728e-05, 9.095800000000209e-05, 9.129199999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.174" endtime="20201030 18:28:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.163" endtime="20201030 18:28:39.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.190" endtime="20201030 18:28:39.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.186" endtime="20201030 18:28:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.183" endtime="20201030 18:28:39.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.689" endtime="20201030 18:28:39.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.687" endtime="20201030 18:28:39.215"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.238" endtime="20201030 18:28:39.261"></status>
</kw>
<msg timestamp="20201030 18:28:39.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.235" endtime="20201030 18:28:39.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.264" endtime="20201030 18:28:39.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.270" endtime="20201030 18:28:39.274"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.228" endtime="20201030 18:28:39.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.222" endtime="20201030 18:28:39.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.294" endtime="20201030 18:28:39.632"></status>
</kw>
<msg timestamp="20201030 18:28:39.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041300764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.290" endtime="20201030 18:28:39.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041300764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.641" endtime="20201030 18:28:39.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.660" endtime="20201030 18:28:39.664"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.283" endtime="20201030 18:28:39.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.279" endtime="20201030 18:28:39.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.678" level="INFO">${RESULT} = [{'diff': 9.247200000000316e-05}, {'diff': 9.172200000000241e-05}, {'diff': 9.202800000000094e-05}, {'diff': 9.263900000000547e-05}, {'diff': 9.236099999999914e-05}, {'diff': 9.25000000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:39.669" endtime="20201030 18:28:39.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:39.689" level="INFO">${ACCURACY} = {'diff': [9.247200000000316e-05, 9.172200000000241e-05, 9.202800000000094e-05, 9.263900000000547e-05, 9.236099999999914e-05, 9.25000000000023e-05, 9.216699999999717e-05, 9.238899999999828e-05, 9.19439...</msg>
<status status="PASS" starttime="20201030 18:28:39.680" endtime="20201030 18:28:39.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.700" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:28:39.698" endtime="20201030 18:28:39.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.706" level="INFO">VALUE: [9.247200000000316e-05, 9.172200000000241e-05, 9.202800000000094e-05, 9.263900000000547e-05, 9.236099999999914e-05, 9.25000000000023e-05, 9.216699999999717e-05, 9.238899999999828e-05, 9.194399999999658e-05, 9.172200000000241e-05, 9.262499999999896e-05, 9.226400000000162e-05, 9.218100000000368e-05, 9.173600000000198e-05, 9.218100000000368e-05, 9.193000000000395e-05, 9.218100000000368e-05, 9.258399999999972e-05, 9.25000000000023e-05, 9.206900000000018e-05, 9.169399999999633e-05, 9.205500000000061e-05, 9.18329999999995e-05, 9.194399999999658e-05, 9.240299999999785e-05, 9.208399999999922e-05, 9.223599999999554e-05, 9.205600000000008e-05, 9.205600000000008e-05, 9.2333e-05, 9.173600000000198e-05, 9.198600000000223e-05, 9.173599999999504e-05, 9.175000000000155e-05, 9.186099999999864e-05, 9.243099999999699e-05, 9.219499999999631e-05, 9.261099999999939e-05, 9.205600000000008e-05, 9.25000000000023e-05, 9.186099999999864e-05, 9.205500000000061e-05, 9.21800000000042e-05, 9.208299999999975e-05, 9.184700000000601e-05, 9.177800000000069e-05, 9.261100000000633e-05, 9.229200000000076e-05, 9.229200000000076e-05, 9.240299999999785e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.702" endtime="20201030 18:28:39.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.691" endtime="20201030 18:28:39.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.719" endtime="20201030 18:28:39.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.714" endtime="20201030 18:28:39.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.712" endtime="20201030 18:28:39.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.217" endtime="20201030 18:28:39.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.216" endtime="20201030 18:28:39.744"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.768" endtime="20201030 18:28:39.791"></status>
</kw>
<msg timestamp="20201030 18:28:39.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.765" endtime="20201030 18:28:39.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.794" endtime="20201030 18:28:39.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.800" endtime="20201030 18:28:39.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.758" endtime="20201030 18:28:39.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.751" endtime="20201030 18:28:39.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.817" endtime="20201030 18:28:40.140"></status>
</kw>
<msg timestamp="20201030 18:28:40.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042405486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042498236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.816" endtime="20201030 18:28:40.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042405486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042498236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.150" endtime="20201030 18:28:40.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.169" endtime="20201030 18:28:40.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.812" endtime="20201030 18:28:40.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.809" endtime="20201030 18:28:40.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.186" level="INFO">${RESULT} = [{'diff': 9.275000000000255e-05}, {'diff': 9.369500000000475e-05}, {'diff': 9.31529999999986e-05}, {'diff': 9.324999999999611e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.318099999999774e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.177" endtime="20201030 18:28:40.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.196" level="INFO">${ACCURACY} = {'diff': [9.275000000000255e-05, 9.369500000000475e-05, 9.31529999999986e-05, 9.324999999999611e-05, 9.284700000000007e-05, 9.318099999999774e-05, 9.323600000000348e-05, 9.284700000000007e-05, 9.28470...</msg>
<status status="PASS" starttime="20201030 18:28:40.188" endtime="20201030 18:28:40.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.207" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.204" endtime="20201030 18:28:40.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.212" level="INFO">VALUE: [9.275000000000255e-05, 9.369500000000475e-05, 9.31529999999986e-05, 9.324999999999611e-05, 9.284700000000007e-05, 9.318099999999774e-05, 9.323600000000348e-05, 9.284700000000007e-05, 9.284700000000007e-05, 9.273600000000298e-05, 9.351400000000287e-05, 9.34859999999968e-05, 9.308300000000075e-05, 9.301399999999543e-05, 9.295899999999663e-05, 9.31529999999986e-05, 9.288899999999878e-05, 9.331899999999449e-05, 9.306900000000118e-05, 9.340199999999937e-05, 9.340299999999885e-05, 9.272200000000341e-05, 9.284700000000007e-05, 9.337499999999971e-05, 9.295799999999715e-05, 9.290199999999887e-05, 9.316699999999817e-05, 9.304200000000151e-05, 9.351399999999593e-05, 9.32079999999974e-05, 9.28330000000005e-05, 9.331900000000143e-05, 9.304200000000151e-05, 9.341700000000536e-05, 9.324999999999611e-05, 9.284700000000007e-05, 9.362499999999996e-05, 9.311099999999989e-05, 9.35000000000033e-05, 9.338900000000622e-05, 9.295799999999715e-05, 9.363899999999953e-05, 9.284700000000007e-05, 9.363899999999953e-05, 9.354200000000201e-05, 9.341700000000536e-05, 9.309799999999979e-05, 9.308400000000022e-05, 9.313899999999903e-05, 9.327799999999525e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.209" endtime="20201030 18:28:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.197" endtime="20201030 18:28:40.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.225" endtime="20201030 18:28:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.221" endtime="20201030 18:28:40.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.218" endtime="20201030 18:28:40.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.747" endtime="20201030 18:28:40.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.746" endtime="20201030 18:28:40.250"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.273" endtime="20201030 18:28:40.302"></status>
</kw>
<msg timestamp="20201030 18:28:40.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.270" endtime="20201030 18:28:40.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.306" endtime="20201030 18:28:40.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.312" endtime="20201030 18:28:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.263" endtime="20201030 18:28:40.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.257" endtime="20201030 18:28:40.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.336" endtime="20201030 18:28:40.674"></status>
</kw>
<msg timestamp="20201030 18:28:40.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047518528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.332" endtime="20201030 18:28:40.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047518528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047613153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.683" endtime="20201030 18:28:40.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.702" endtime="20201030 18:28:40.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.325" endtime="20201030 18:28:40.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.320" endtime="20201030 18:28:40.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.720" level="INFO">${RESULT} = [{'diff': 9.462500000000096e-05}, {'diff': 9.368100000000518e-05}, {'diff': 9.384700000000107e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.440299999999985e-05}, {'diff': 9.370899999999738e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:40.711" endtime="20201030 18:28:40.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:40.730" level="INFO">${ACCURACY} = {'diff': [9.462500000000096e-05, 9.368100000000518e-05, 9.384700000000107e-05, 9.393099999999849e-05, 9.440299999999985e-05, 9.370899999999738e-05, 9.402800000000294e-05, 9.384699999999413e-05, 9.4055...</msg>
<status status="PASS" starttime="20201030 18:28:40.723" endtime="20201030 18:28:40.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.741" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:28:40.739" endtime="20201030 18:28:40.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.746" level="INFO">VALUE: [9.462500000000096e-05, 9.368100000000518e-05, 9.384700000000107e-05, 9.393099999999849e-05, 9.440299999999985e-05, 9.370899999999738e-05, 9.402800000000294e-05, 9.384699999999413e-05, 9.405500000000261e-05, 9.451399999999693e-05, 9.401400000000337e-05, 9.401400000000337e-05, 9.38330000000015e-05, 9.430600000000233e-05, 9.461099999999445e-05, 9.440299999999985e-05, 9.370900000000432e-05, 9.417999999999926e-05, 9.422199999999797e-05, 9.423599999999754e-05, 9.447199999999822e-05, 9.440299999999985e-05, 9.429200000000276e-05, 9.405600000000208e-05, 9.384699999999413e-05, 9.395900000000457e-05, 9.419499999999831e-05, 9.451400000000387e-05, 9.449999999999736e-05, 9.405500000000261e-05, 9.417999999999926e-05, 9.412500000000046e-05, 9.440299999999985e-05, 9.405599999999514e-05, 9.459700000000182e-05, 9.41529999999996e-05, 9.394499999999806e-05, 9.438900000000028e-05, 9.426400000000362e-05, 9.433299999999506e-05, 9.373600000000398e-05, 9.372200000000441e-05, 9.390299999999935e-05, 9.38330000000015e-05, 9.462500000000096e-05, 9.407000000000165e-05, 9.407000000000165e-05, 9.393099999999849e-05, 9.370899999999738e-05, 9.42079999999984e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.743" endtime="20201030 18:28:40.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.732" endtime="20201030 18:28:40.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.766" endtime="20201030 18:28:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.760" endtime="20201030 18:28:40.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.757" endtime="20201030 18:28:40.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.252" endtime="20201030 18:28:40.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.251" endtime="20201030 18:28:40.791"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.815" endtime="20201030 18:28:40.838"></status>
</kw>
<msg timestamp="20201030 18:28:40.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.811" endtime="20201030 18:28:40.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.841" endtime="20201030 18:28:40.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.847" endtime="20201030 18:28:40.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.804" endtime="20201030 18:28:40.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.798" endtime="20201030 18:28:40.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.871" endtime="20201030 18:28:41.209"></status>
</kw>
<msg timestamp="20201030 18:28:41.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041886583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041982153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.868" endtime="20201030 18:28:41.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041886583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041982153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.220" endtime="20201030 18:28:41.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.240" endtime="20201030 18:28:41.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.861" endtime="20201030 18:28:41.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.856" endtime="20201030 18:28:41.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.261" level="INFO">${RESULT} = [{'diff': 9.557000000000315e-05}, {'diff': 9.494499999999906e-05}, {'diff': 9.538899999999434e-05}, {'diff': 9.518000000000026e-05}, {'diff': 9.527699999999778e-05}, {'diff': 9.475000000000455e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:41.251" endtime="20201030 18:28:41.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.276" level="INFO">${ACCURACY} = {'diff': [9.557000000000315e-05, 9.494499999999906e-05, 9.538899999999434e-05, 9.518000000000026e-05, 9.527699999999778e-05, 9.475000000000455e-05, 9.473599999999804e-05, 9.53200000000029e-05, 9.48470...</msg>
<status status="PASS" starttime="20201030 18:28:41.264" endtime="20201030 18:28:41.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.288" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.286" endtime="20201030 18:28:41.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.294" level="INFO">VALUE: [9.557000000000315e-05, 9.494499999999906e-05, 9.538899999999434e-05, 9.518000000000026e-05, 9.527699999999778e-05, 9.475000000000455e-05, 9.473599999999804e-05, 9.53200000000029e-05, 9.484700000000207e-05, 9.519499999999931e-05, 9.562500000000196e-05, 9.563900000000153e-05, 9.551399999999793e-05, 9.483399999999503e-05, 9.552699999999803e-05, 9.544400000000008e-05, 9.472200000000541e-05, 9.540300000000085e-05, 9.562500000000196e-05, 9.495799999999915e-05, 9.559700000000282e-05, 9.483299999999556e-05, 9.483400000000197e-05, 9.508299999999581e-05, 9.529100000000429e-05, 9.506899999999624e-05, 9.50409999999971e-05, 9.518000000000026e-05, 9.544499999999956e-05, 9.48609999999947e-05, 9.484700000000207e-05, 9.516700000000017e-05, 9.483400000000197e-05, 9.494499999999906e-05, 9.493099999999949e-05, 9.509699999999538e-05, 9.512500000000146e-05, 9.476399999999718e-05, 9.49859999999983e-05, 9.483299999999556e-05, 9.470899999999838e-05, 9.538900000000128e-05, 9.483299999999556e-05, 9.540300000000085e-05, 9.494499999999906e-05, 9.524999999999811e-05, 9.473599999999804e-05, 9.515200000000112e-05, 9.527700000000472e-05, 9.513900000000103e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.291" endtime="20201030 18:28:41.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.279" endtime="20201030 18:28:41.297"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.308" endtime="20201030 18:28:41.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.302" endtime="20201030 18:28:41.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.300" endtime="20201030 18:28:41.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.794" endtime="20201030 18:28:41.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.792" endtime="20201030 18:28:41.336"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.363" endtime="20201030 18:28:41.388"></status>
</kw>
<msg timestamp="20201030 18:28:41.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.359" endtime="20201030 18:28:41.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.392" endtime="20201030 18:28:41.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.400" endtime="20201030 18:28:41.405"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.351" endtime="20201030 18:28:41.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.344" endtime="20201030 18:28:41.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.430" endtime="20201030 18:28:41.765"></status>
</kw>
<msg timestamp="20201030 18:28:41.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049047375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049143806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.425" endtime="20201030 18:28:41.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049047375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049143806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.775" endtime="20201030 18:28:41.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.797" endtime="20201030 18:28:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.417" endtime="20201030 18:28:41.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.411" endtime="20201030 18:28:41.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.815" level="INFO">${RESULT} = [{'diff': 9.643100000000099e-05}, {'diff': 9.638900000000228e-05}, {'diff': 9.605599999999714e-05}, {'diff': 9.669400000000133e-05}, {'diff': 9.629199999999782e-05}, {'diff': 9.619500000000031e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:41.806" endtime="20201030 18:28:41.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:41.827" level="INFO">${ACCURACY} = {'diff': [9.643100000000099e-05, 9.638900000000228e-05, 9.605599999999714e-05, 9.669400000000133e-05, 9.629199999999782e-05, 9.619500000000031e-05, 9.617999999999433e-05, 9.659799999999635e-05, 9.6611...</msg>
<status status="PASS" starttime="20201030 18:28:41.817" endtime="20201030 18:28:41.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.837" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:28:41.835" endtime="20201030 18:28:41.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.843" level="INFO">VALUE: [9.643100000000099e-05, 9.638900000000228e-05, 9.605599999999714e-05, 9.669400000000133e-05, 9.629199999999782e-05, 9.619500000000031e-05, 9.617999999999433e-05, 9.659799999999635e-05, 9.661100000000339e-05, 9.595800000000015e-05, 9.584699999999613e-05, 9.606900000000418e-05, 9.606999999999671e-05, 9.629199999999782e-05, 9.588799999999537e-05, 9.616699999999423e-05, 9.584800000000254e-05, 9.645800000000065e-05, 9.619400000000083e-05, 9.595800000000015e-05, 9.661099999999645e-05, 9.64859999999998e-05, 9.643000000000151e-05, 9.638899999999534e-05, 9.663900000000253e-05, 9.616700000000117e-05, 9.662499999999602e-05, 9.665200000000262e-05, 9.619400000000083e-05, 9.572199999999947e-05, 9.662499999999602e-05, 9.587500000000221e-05, 9.629200000000476e-05, 9.572199999999947e-05, 9.605599999999714e-05, 9.583399999999603e-05, 9.605600000000408e-05, 9.583400000000297e-05, 9.640300000000185e-05, 9.580499999999742e-05, 9.626399999999868e-05, 9.662500000000296e-05, 9.605499999999767e-05, 9.659699999999688e-05, 9.594400000000058e-05, 9.616700000000117e-05, 9.618100000000074e-05, 9.606999999999671e-05, 9.641600000000194e-05, 9.618000000000126e-05]</msg>
<status status="PASS" starttime="20201030 18:28:41.840" endtime="20201030 18:28:41.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.828" endtime="20201030 18:28:41.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.855" endtime="20201030 18:28:41.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.851" endtime="20201030 18:28:41.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.848" endtime="20201030 18:28:41.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.338" endtime="20201030 18:28:41.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.337" endtime="20201030 18:28:41.880"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.903" endtime="20201030 18:28:41.925"></status>
</kw>
<msg timestamp="20201030 18:28:41.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.899" endtime="20201030 18:28:41.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.929" endtime="20201030 18:28:41.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.935" endtime="20201030 18:28:41.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.892" endtime="20201030 18:28:41.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.887" endtime="20201030 18:28:41.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.958" endtime="20201030 18:28:42.313"></status>
</kw>
<msg timestamp="20201030 18:28:42.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040819944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040917194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.955" endtime="20201030 18:28:42.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040819944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040917194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.323" endtime="20201030 18:28:42.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.343" endtime="20201030 18:28:42.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.948" endtime="20201030 18:28:42.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.943" endtime="20201030 18:28:42.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.362" level="INFO">${RESULT} = [{'diff': 9.725000000000011e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.762500000000396e-05}, {'diff': 9.718000000000226e-05}, {'diff': 9.684699999999713e-05}, {'diff': 9.684699999999713e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:42.353" endtime="20201030 18:28:42.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.372" level="INFO">${ACCURACY} = {'diff': [9.725000000000011e-05, 9.673600000000004e-05, 9.762500000000396e-05, 9.718000000000226e-05, 9.684699999999713e-05, 9.684699999999713e-05, 9.751399999999993e-05, 9.729199999999882e-05, 9.7277...</msg>
<status status="PASS" starttime="20201030 18:28:42.364" endtime="20201030 18:28:42.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.384" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.381" endtime="20201030 18:28:42.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.389" level="INFO">VALUE: [9.725000000000011e-05, 9.673600000000004e-05, 9.762500000000396e-05, 9.718000000000226e-05, 9.684699999999713e-05, 9.684699999999713e-05, 9.751399999999993e-05, 9.729199999999882e-05, 9.727799999999925e-05, 9.716700000000217e-05, 9.762500000000396e-05, 9.668000000000176e-05, 9.66660000000022e-05, 9.727699999999978e-05, 9.684700000000407e-05, 9.704199999999857e-05, 9.68330000000045e-05, 9.705599999999814e-05, 9.73059999999984e-05, 9.750000000000036e-05, 9.715299999999566e-05, 9.677799999999875e-05, 9.769500000000181e-05, 9.718000000000226e-05, 9.723600000000054e-05, 9.695800000000115e-05, 9.751399999999993e-05, 9.679200000000526e-05, 9.729200000000576e-05, 9.683400000000397e-05, 9.762500000000396e-05, 9.68479999999966e-05, 9.684699999999713e-05, 9.705500000000561e-05, 9.681899999999799e-05, 9.74860000000008e-05, 9.673600000000004e-05, 9.718100000000174e-05, 9.695800000000115e-05, 9.719500000000131e-05, 9.718100000000174e-05, 9.705599999999814e-05, 9.727699999999978e-05, 9.699999999999986e-05, 9.719400000000183e-05, 9.706899999999824e-05, 9.688900000000278e-05, 9.699999999999986e-05, 9.738900000000328e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.386" endtime="20201030 18:28:42.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.374" endtime="20201030 18:28:42.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.403" endtime="20201030 18:28:42.425"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.398" endtime="20201030 18:28:42.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.395" endtime="20201030 18:28:42.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.882" endtime="20201030 18:28:42.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.881" endtime="20201030 18:28:42.428"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.453" endtime="20201030 18:28:42.477"></status>
</kw>
<msg timestamp="20201030 18:28:42.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.449" endtime="20201030 18:28:42.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.481" endtime="20201030 18:28:42.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.488" endtime="20201030 18:28:42.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.442" endtime="20201030 18:28:42.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.435" endtime="20201030 18:28:42.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.513" endtime="20201030 18:28:42.872"></status>
</kw>
<msg timestamp="20201030 18:28:42.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045242028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.509" endtime="20201030 18:28:42.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045242028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045340472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.882" endtime="20201030 18:28:42.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.902" endtime="20201030 18:28:42.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.501" endtime="20201030 18:28:42.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.496" endtime="20201030 18:28:42.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.920" level="INFO">${RESULT} = [{'diff': 9.844400000000308e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.818100000000274e-05}, {'diff': 9.784700000000507e-05}, {'diff': 9.827800000000025e-05}, {'diff': 9.851400000000093e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:42.911" endtime="20201030 18:28:42.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:42.930" level="INFO">${ACCURACY} = {'diff': [9.844400000000308e-05, 9.784699999999813e-05, 9.818100000000274e-05, 9.784700000000507e-05, 9.827800000000025e-05, 9.851400000000093e-05, 9.850000000000136e-05, 9.848700000000127e-05, 9.8596...</msg>
<status status="PASS" starttime="20201030 18:28:42.922" endtime="20201030 18:28:42.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.942" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:28:42.939" endtime="20201030 18:28:42.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.947" level="INFO">VALUE: [9.844400000000308e-05, 9.784699999999813e-05, 9.818100000000274e-05, 9.784700000000507e-05, 9.827800000000025e-05, 9.851400000000093e-05, 9.850000000000136e-05, 9.848700000000127e-05, 9.859699999999888e-05, 9.769400000000233e-05, 9.838899999999734e-05, 9.806899999999924e-05, 9.851400000000093e-05, 9.772200000000147e-05, 9.829199999999982e-05, 9.770900000000138e-05, 9.861099999999845e-05, 9.772300000000095e-05, 9.8028e-05, 9.806899999999924e-05, 9.854200000000007e-05, 9.784700000000507e-05, 9.81530000000036e-05, 9.829200000000676e-05, 9.8028e-05, 9.81809999999958e-05, 9.8513999999994e-05, 9.866599999999726e-05, 9.866699999999673e-05, 9.83880000000048e-05, 9.80410000000001e-05, 9.772200000000147e-05, 9.84730000000017e-05, 9.797200000000172e-05, 9.845800000000265e-05, 9.824999999999418e-05, 9.818100000000274e-05, 9.804200000000651e-05, 9.818000000000326e-05, 9.783299999999856e-05, 9.786100000000464e-05, 9.840299999999691e-05, 9.851400000000093e-05, 9.78609999999977e-05, 9.858399999999878e-05, 9.804199999999957e-05, 9.859699999999888e-05, 9.818000000000326e-05, 9.773700000000052e-05, 9.806899999999924e-05]</msg>
<status status="PASS" starttime="20201030 18:28:42.944" endtime="20201030 18:28:42.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.932" endtime="20201030 18:28:42.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.962" endtime="20201030 18:28:42.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.956" endtime="20201030 18:28:42.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.954" endtime="20201030 18:28:42.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.430" endtime="20201030 18:28:42.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.429" endtime="20201030 18:28:42.988"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.012" endtime="20201030 18:28:43.035"></status>
</kw>
<msg timestamp="20201030 18:28:43.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.009" endtime="20201030 18:28:43.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.039" endtime="20201030 18:28:43.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.046" endtime="20201030 18:28:43.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.001" endtime="20201030 18:28:43.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.995" endtime="20201030 18:28:43.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.071" endtime="20201030 18:28:43.428"></status>
</kw>
<msg timestamp="20201030 18:28:43.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.067" endtime="20201030 18:28:43.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043814083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.438" endtime="20201030 18:28:43.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.458" endtime="20201030 18:28:43.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.059" endtime="20201030 18:28:43.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.054" endtime="20201030 18:28:43.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.477" level="INFO">${RESULT} = [{'diff': 9.969500000000381e-05}, {'diff': 9.950000000000236e-05}, {'diff': 9.897199999999579e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.940200000000537e-05}, {'diff': 9.930500000000092e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:43.467" endtime="20201030 18:28:43.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:43.488" level="INFO">${ACCURACY} = {'diff': [9.969500000000381e-05, 9.950000000000236e-05, 9.897199999999579e-05, 9.908299999999981e-05, 9.940200000000537e-05, 9.930500000000092e-05, 9.917999999999733e-05, 9.961099999999945e-05, 9.9056...</msg>
<status status="PASS" starttime="20201030 18:28:43.479" endtime="20201030 18:28:43.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.500" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:28:43.497" endtime="20201030 18:28:43.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.505" level="INFO">VALUE: [9.969500000000381e-05, 9.950000000000236e-05, 9.897199999999579e-05, 9.908299999999981e-05, 9.940200000000537e-05, 9.930500000000092e-05, 9.917999999999733e-05, 9.961099999999945e-05, 9.905600000000014e-05, 9.927800000000125e-05, 9.916700000000417e-05, 9.88479999999986e-05, 9.915299999999766e-05, 9.951400000000193e-05, 9.895800000000315e-05, 9.955600000000064e-05, 9.949999999999543e-05, 9.912499999999852e-05, 9.919499999999637e-05, 9.95280000000015e-05, 9.883399999999903e-05, 9.912499999999852e-05, 9.963899999999859e-05, 9.905600000000014e-05, 9.918000000000426e-05, 9.887499999999827e-05, 9.941699999999748e-05, 9.890299999999741e-05, 9.873600000000204e-05, 9.916700000000417e-05, 9.898700000000177e-05, 9.938899999999834e-05, 9.894400000000358e-05, 9.894499999999612e-05, 9.87080000000029e-05, 9.930500000000092e-05, 9.884699999999913e-05, 9.906900000000024e-05, 9.91809999999968e-05, 9.929200000000082e-05, 9.881999999999946e-05, 9.95280000000015e-05, 9.908399999999928e-05, 9.909699999999938e-05, 9.895800000000315e-05, 9.963900000000553e-05, 9.938899999999834e-05, 9.961099999999945e-05, 9.916700000000417e-05, 9.883299999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:28:43.502" endtime="20201030 18:28:43.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.490" endtime="20201030 18:28:43.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.519" endtime="20201030 18:28:43.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.514" endtime="20201030 18:28:43.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.512" endtime="20201030 18:28:43.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.990" endtime="20201030 18:28:43.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.989" endtime="20201030 18:28:43.544"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.569" endtime="20201030 18:28:43.591"></status>
</kw>
<msg timestamp="20201030 18:28:43.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.565" endtime="20201030 18:28:43.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.595" endtime="20201030 18:28:43.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.602" endtime="20201030 18:28:43.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.557" endtime="20201030 18:28:43.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.551" endtime="20201030 18:28:43.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.627" endtime="20201030 18:28:43.985"></status>
</kw>
<msg timestamp="20201030 18:28:43.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0431175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043218069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:43.623" endtime="20201030 18:28:43.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0431175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043218069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:28:43.995" endtime="20201030 18:28:44.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.014" endtime="20201030 18:28:44.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.616" endtime="20201030 18:28:44.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.611" endtime="20201030 18:28:44.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.033" level="INFO">${RESULT} = [{'diff': 0.0001005689999999948}, {'diff': 9.983300000000056e-05}, {'diff': 0.00010029200000000182}, {'diff': 0.0001003060000000014}, {'diff': 9.995799999999722e-05}, {'diff': 0.00010027800000000225},...</msg>
<status status="PASS" starttime="20201030 18:28:44.023" endtime="20201030 18:28:44.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.044" level="INFO">${ACCURACY} = {'diff': [0.0001005689999999948, 9.983300000000056e-05, 0.00010029200000000182, 0.0001003060000000014, 9.995799999999722e-05, 0.00010027800000000225, 9.995800000000415e-05, 0.00010040300000000585, 9.9...</msg>
<status status="PASS" starttime="20201030 18:28:44.035" endtime="20201030 18:28:44.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.056" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.053" endtime="20201030 18:28:44.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.062" level="INFO">VALUE: [0.0001005689999999948, 9.983300000000056e-05, 0.00010029200000000182, 0.0001003060000000014, 9.995799999999722e-05, 0.00010027800000000225, 9.995800000000415e-05, 0.00010040300000000585, 9.98479999999996e-05, 0.000100415999999999, 0.00010017999999999833, 0.00010030500000000192, 9.97359999999961e-05, 0.00010038899999999934, 0.00010048599999999686, 0.0001003480000000001, 0.0001001809999999978, 0.00010007000000000071, 0.00010019500000000431, 9.983400000000003e-05, 0.00010062500000000002, 9.97359999999961e-05, 0.00010005500000000167, 0.00010027800000000225, 0.00010029199999999489, 9.995799999999722e-05, 9.997199999999679e-05, 0.00010029200000000182, 0.00010057000000000121, 0.00010040299999999891, 0.00010016700000000517, 9.976299999999577e-05, 9.97359999999961e-05, 0.00010037499999999977, 0.00010045799999999772, 0.00010008299999999387, 9.990199999999894e-05, 0.00010050000000000336, 0.00010007000000000071, 0.00010005600000000114, 9.973600000000304e-05, 0.0001001660000000057, 9.997199999999679e-05, 0.00010017999999999833, 0.00010029200000000182, 0.0001001809999999978, 0.00010040299999999891, 0.0001001809999999978, 0.00010007000000000071, 9.983400000000003e-05]</msg>
<status status="PASS" starttime="20201030 18:28:44.058" endtime="20201030 18:28:44.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.046" endtime="20201030 18:28:44.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.075" endtime="20201030 18:28:44.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.070" endtime="20201030 18:28:44.099"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.068" endtime="20201030 18:28:44.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.547" endtime="20201030 18:28:44.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.546" endtime="20201030 18:28:44.101"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.125" endtime="20201030 18:28:44.148"></status>
</kw>
<msg timestamp="20201030 18:28:44.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.121" endtime="20201030 18:28:44.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.152" endtime="20201030 18:28:44.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.159" endtime="20201030 18:28:44.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.114" endtime="20201030 18:28:44.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.108" endtime="20201030 18:28:44.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.183" endtime="20201030 18:28:44.543"></status>
</kw>
<msg timestamp="20201030 18:28:44.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.180" endtime="20201030 18:28:44.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043472986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.553" endtime="20201030 18:28:44.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.570" endtime="20201030 18:28:44.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.172" endtime="20201030 18:28:44.573"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.167" endtime="20201030 18:28:44.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.579" level="INFO">${RESULT} = [{'diff': 0.00010145799999999872}, {'diff': 0.00010132000000000196}, {'diff': 0.00010163900000000059}, {'diff': 0.0001015280000000035}, {'diff': 0.00010138900000000034}, {'diff': 0.0001007089999999974...</msg>
<status status="PASS" starttime="20201030 18:28:44.574" endtime="20201030 18:28:44.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:44.583" level="INFO">${ACCURACY} = {'diff': [0.00010145799999999872, 0.00010132000000000196, 0.00010163900000000059, 0.0001015280000000035, 0.00010138900000000034, 0.00010070899999999744, 0.00010106999999999478, 0.00010120799999999847,...</msg>
<status status="PASS" starttime="20201030 18:28:44.580" endtime="20201030 18:28:44.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.588" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:28:44.587" endtime="20201030 18:28:44.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.591" level="INFO">VALUE: [0.00010145799999999872, 0.00010132000000000196, 0.00010163900000000059, 0.0001015280000000035, 0.00010138900000000034, 0.00010070899999999744, 0.00010106999999999478, 0.00010120799999999847, 0.00010095800000000515, 0.00010106900000000224, 0.0001015280000000035, 0.00010076400000000318, 0.00010115299999999966, 0.00010127800000000325, 0.00010141699999999948, 0.00010106999999999478, 0.00010131900000000249, 0.00010097199999999779, 0.0001010689999999953, 0.00010072199999999754, 0.0001013060000000024, 0.0001010689999999953, 0.00010129200000000282, 0.0001007080000000049, 0.00010127799999999632, 0.00010108400000000128, 0.00010124999999999718, 0.00010131900000000249, 0.00010144499999999862, 0.00010116599999999976, 0.00010109700000000138, 0.00010072199999999754, 0.00010094400000000558, 0.00010116699999999923, 0.00010079200000000232, 0.00010094499999999812, 0.00010163800000000112, 0.00010084700000000113, 0.000101513999999997, 0.00010108300000000181, 0.0001007359999999971, 0.00010161100000000145, 0.00010072199999999754, 0.00010161100000000145, 0.00010087500000000027, 0.00010095900000000463, 0.00010117999999999933, 0.00010144400000000608, 0.00010162500000000102, 0.00010116599999999976]</msg>
<status status="PASS" starttime="20201030 18:28:44.589" endtime="20201030 18:28:44.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.584" endtime="20201030 18:28:44.593"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.597" endtime="20201030 18:28:44.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.595" endtime="20201030 18:28:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.594" endtime="20201030 18:28:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.103" endtime="20201030 18:28:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.102" endtime="20201030 18:28:44.618"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.629" endtime="20201030 18:28:44.650"></status>
</kw>
<msg timestamp="20201030 18:28:44.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.628" endtime="20201030 18:28:44.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.652" endtime="20201030 18:28:44.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.655" endtime="20201030 18:28:44.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.624" endtime="20201030 18:28:44.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.621" endtime="20201030 18:28:44.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.666" endtime="20201030 18:28:44.998"></status>
</kw>
<msg timestamp="20201030 18:28:45.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025696903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.665" endtime="20201030 18:28:45.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025696903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.008" endtime="20201030 18:28:45.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.027" endtime="20201030 18:28:45.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.661" endtime="20201030 18:28:45.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.659" endtime="20201030 18:28:45.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.045" level="INFO">${RESULT} = [{'diff': 0.00010256900000000027}, {'diff': 0.00010245800000000319}, {'diff': 0.00010230599999999992}, {'diff': 0.0001020420000000001}, {'diff': 0.00010240299999999744}, {'diff': 0.0001020559999999996...</msg>
<status status="PASS" starttime="20201030 18:28:45.036" endtime="20201030 18:28:45.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.055" level="INFO">${ACCURACY} = {'diff': [0.00010256900000000027, 0.00010245800000000319, 0.00010230599999999992, 0.0001020420000000001, 0.00010240299999999744, 0.00010205599999999967, 0.00010187500000000127, 0.00010173699999999758,...</msg>
<status status="PASS" starttime="20201030 18:28:45.048" endtime="20201030 18:28:45.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.067" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.064" endtime="20201030 18:28:45.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.072" level="INFO">VALUE: [0.00010256900000000027, 0.00010245800000000319, 0.00010230599999999992, 0.0001020420000000001, 0.00010240299999999744, 0.00010205599999999967, 0.00010187500000000127, 0.00010173699999999758, 0.00010184700000000213, 0.00010173600000000158, 0.0001018610000000017, 0.0001025000000000019, 0.00010194399999999965, 0.00010180499999999995, 0.00010205599999999967, 0.00010216700000000023, 0.0001025000000000019, 0.00010173699999999758, 0.00010215200000000119, 0.00010183300000000256, 0.00010206899999999977, 0.00010249999999999843, 0.0001023749999999983, 0.00010227800000000078, 0.000101722000000002, 0.00010249999999999843, 0.00010231900000000002, 0.00010194499999999912, 0.00010183299999999909, 0.00010227700000000131, 0.00010243100000000005, 0.00010262500000000202, 0.00010198599999999836, 0.00010206999999999924, 0.00010205599999999967, 0.00010215299999999719, 0.00010172299999999801, 0.00010172299999999801, 0.0001021939999999999, 0.00010194399999999965, 0.00010186099999999823, 0.00010206899999999977, 0.0001021809999999998, 0.0001018610000000017, 0.00010204199999999664, 0.00010229200000000035, 0.0001020420000000001, 0.00010263799999999865, 0.00010229099999999741, 0.00010206900000000324]</msg>
<status status="PASS" starttime="20201030 18:28:45.069" endtime="20201030 18:28:45.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.057" endtime="20201030 18:28:45.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.087" endtime="20201030 18:28:45.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.081" endtime="20201030 18:28:45.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.079" endtime="20201030 18:28:45.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.619" endtime="20201030 18:28:45.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.619" endtime="20201030 18:28:45.113"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.137" endtime="20201030 18:28:45.164"></status>
</kw>
<msg timestamp="20201030 18:28:45.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.134" endtime="20201030 18:28:45.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.168" endtime="20201030 18:28:45.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.175" endtime="20201030 18:28:45.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.126" endtime="20201030 18:28:45.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.120" endtime="20201030 18:28:45.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.199" endtime="20201030 18:28:45.559"></status>
</kw>
<msg timestamp="20201030 18:28:45.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043628681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04373225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:45.196" endtime="20201030 18:28:45.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043628681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04373225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:45.569" endtime="20201030 18:28:45.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.588" endtime="20201030 18:28:45.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.188" endtime="20201030 18:28:45.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.183" endtime="20201030 18:28:45.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.606" level="INFO">${RESULT} = [{'diff': 0.0001035689999999978}, {'diff': 0.0001027359999999991}, {'diff': 0.00010316700000000123}, {'diff': 0.0001030139999999985}, {'diff': 0.00010294500000000012}, {'diff': 0.00010315199999999525}...</msg>
<status status="PASS" starttime="20201030 18:28:45.597" endtime="20201030 18:28:45.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:45.622" level="INFO">${ACCURACY} = {'diff': [0.0001035689999999978, 0.0001027359999999991, 0.00010316700000000123, 0.0001030139999999985, 0.00010294500000000012, 0.00010315199999999525, 0.00010351400000000593, 0.00010337499999999583, 0...</msg>
<status status="PASS" starttime="20201030 18:28:45.609" endtime="20201030 18:28:45.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.634" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:28:45.631" endtime="20201030 18:28:45.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.640" level="INFO">VALUE: [0.0001035689999999978, 0.0001027359999999991, 0.00010316700000000123, 0.0001030139999999985, 0.00010294500000000012, 0.00010315199999999525, 0.00010351400000000593, 0.00010337499999999583, 0.00010329199999999789, 0.00010316699999999429, 0.00010293100000000055, 0.00010297299999999926, 0.00010294500000000012, 0.0001033889999999954, 0.00010294500000000012, 0.00010351299999999952, 0.00010318000000000133, 0.0001035559999999977, 0.00010306900000000424, 0.00010287500000000227, 0.00010329199999999789, 0.00010295899999999969, 0.00010272199999999954, 0.0001028610000000027, 0.00010294500000000012, 0.00010338900000000234, 0.00010272199999999954, 0.00010341699999999454, 0.00010319399999999396, 0.0001030139999999985, 0.00010281999999999653, 0.0001033060000000044, 0.0001030559999999972, 0.00010306999999999678, 0.00010343000000000158, 0.00010279199999999739, 0.00010297199999999979, 0.0001032359999999996, 0.00010361100000000345, 0.00010340299999999497, 0.00010274999999999868, 0.00010306999999999678, 0.00010315299999999472, 0.00010273700000000552, 0.00010340200000000244, 0.00010291700000000098, 0.00010337500000000277, 0.000103513999999999, 0.00010318000000000133, 0.00010284700000000313]</msg>
<status status="PASS" starttime="20201030 18:28:45.636" endtime="20201030 18:28:45.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.624" endtime="20201030 18:28:45.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.653" endtime="20201030 18:28:45.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.648" endtime="20201030 18:28:45.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.646" endtime="20201030 18:28:45.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.115" endtime="20201030 18:28:45.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.114" endtime="20201030 18:28:45.678"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.702" endtime="20201030 18:28:45.726"></status>
</kw>
<msg timestamp="20201030 18:28:45.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.699" endtime="20201030 18:28:45.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.730" endtime="20201030 18:28:45.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.737" endtime="20201030 18:28:45.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.691" endtime="20201030 18:28:45.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.685" endtime="20201030 18:28:45.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.761" endtime="20201030 18:28:46.120"></status>
</kw>
<msg timestamp="20201030 18:28:46.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.758" endtime="20201030 18:28:46.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.130" endtime="20201030 18:28:46.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.149" endtime="20201030 18:28:46.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.750" endtime="20201030 18:28:46.155"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.745" endtime="20201030 18:28:46.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.168" level="INFO">${RESULT} = [{'diff': 0.00010448600000000086}, {'diff': 0.00010440300000000291}, {'diff': 0.00010413799999999668}, {'diff': 0.00010443099999999511}, {'diff': 0.00010387499999999633}, {'diff': 0.000104471999999994...</msg>
<status status="PASS" starttime="20201030 18:28:46.158" endtime="20201030 18:28:46.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.179" level="INFO">${ACCURACY} = {'diff': [0.00010448600000000086, 0.00010440300000000291, 0.00010413799999999668, 0.00010443099999999511, 0.00010387499999999633, 0.00010447199999999435, 0.00010426399999999975, 0.00010450000000000043...</msg>
<status status="PASS" starttime="20201030 18:28:46.170" endtime="20201030 18:28:46.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.191" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.188" endtime="20201030 18:28:46.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.197" level="INFO">VALUE: [0.00010448600000000086, 0.00010440300000000291, 0.00010413799999999668, 0.00010443099999999511, 0.00010387499999999633, 0.00010447199999999435, 0.00010426399999999975, 0.00010450000000000043, 0.00010429099999999941, 0.00010419399999999496, 0.00010463899999999665, 0.00010443099999999511, 0.0001038610000000037, 0.00010370800000000097, 0.0001040559999999982, 0.00010427799999999932, 0.00010445900000000119, 0.00010416699999999529, 0.00010429099999999941, 0.00010418000000000233, 0.00010461100000000445, 0.00010437500000000377, 0.00010376399999999925, 0.0001038889999999959, 0.0001037219999999936, 0.00010448600000000086, 0.00010395900000000069, 0.00010450000000000043, 0.00010431899999999855, 0.00010406900000000524, 0.0001041940000000019, 0.00010408299999999787, 0.00010461099999999751, 0.00010437499999999683, 0.0001038889999999959, 0.00010398699999999983, 0.00010462499999999708, 0.0001041810000000018, 0.00010440200000000344, 0.000104514, 0.00010384700000000413, 0.00010450000000000043, 0.00010394400000000165, 0.00010393099999999461, 0.00010419500000000137, 0.00010394500000000112, 0.00010417999999999539, 0.00010390300000000241, 0.00010427699999999984, 0.00010462500000000402]</msg>
<status status="PASS" starttime="20201030 18:28:46.193" endtime="20201030 18:28:46.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.181" endtime="20201030 18:28:46.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.241" endtime="20201030 18:28:46.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.237" endtime="20201030 18:28:46.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.234" endtime="20201030 18:28:46.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.681" endtime="20201030 18:28:46.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.679" endtime="20201030 18:28:46.267"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.291" endtime="20201030 18:28:46.315"></status>
</kw>
<msg timestamp="20201030 18:28:46.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.288" endtime="20201030 18:28:46.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.319" endtime="20201030 18:28:46.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.325" endtime="20201030 18:28:46.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.280" endtime="20201030 18:28:46.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.274" endtime="20201030 18:28:46.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.350" endtime="20201030 18:28:46.711"></status>
</kw>
<msg timestamp="20201030 18:28:46.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043436583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.347" endtime="20201030 18:28:46.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043436583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043541458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.722" endtime="20201030 18:28:46.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.741" endtime="20201030 18:28:46.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.339" endtime="20201030 18:28:46.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.334" endtime="20201030 18:28:46.748"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.759" level="INFO">${RESULT} = [{'diff': 0.00010487499999999733}, {'diff': 0.00010498600000000136}, {'diff': 0.00010517999999999639}, {'diff': 0.00010562499999999808}, {'diff': 0.00010506999999999878}, {'diff': 0.000105610999999998...</msg>
<status status="PASS" starttime="20201030 18:28:46.750" endtime="20201030 18:28:46.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:46.769" level="INFO">${ACCURACY} = {'diff': [0.00010487499999999733, 0.00010498600000000136, 0.00010517999999999639, 0.00010562499999999808, 0.00010506999999999878, 0.00010561099999999851, 0.00010529199999999989, 0.0001054019999999975,...</msg>
<status status="PASS" starttime="20201030 18:28:46.761" endtime="20201030 18:28:46.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.780" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:28:46.778" endtime="20201030 18:28:46.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.786" level="INFO">VALUE: [0.00010487499999999733, 0.00010498600000000136, 0.00010517999999999639, 0.00010562499999999808, 0.00010506999999999878, 0.00010561099999999851, 0.00010529199999999989, 0.0001054019999999975, 0.00010495800000000222, 0.000105514000000001, 0.00010529100000000041, 0.00010529200000000682, 0.00010537499999999783, 0.00010506999999999878, 0.0001051810000000028, 0.00010527800000000032, 0.00010540300000000391, 0.00010508299999999887, 0.0001047360000000011, 0.00010481899999999905, 0.0001051940000000029, 0.0001047360000000011, 0.0001050559999999992, 0.0001047360000000011, 0.00010545799999999578, 0.00010472200000000154, 0.00010506999999999878, 0.00010494499999999518, 0.00010517999999999639, 0.00010505500000000667, 0.00010483299999999862, 0.00010495800000000222, 0.00010556900000000674, 0.00010506999999999878, 0.0001047360000000011, 0.00010495900000000169, 0.00010518000000000333, 0.0001048339999999981, 0.00010484699999999819, 0.00010554200000000014, 0.00010561099999999851, 0.00010556999999999928, 0.00010484699999999819, 0.00010516699999999629, 0.00010515300000000366, 0.00010531899999999955, 0.00010518099999999586, 0.00010475000000000068, 0.00010550000000000143, 0.00010494400000000265]</msg>
<status status="PASS" starttime="20201030 18:28:46.783" endtime="20201030 18:28:46.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.771" endtime="20201030 18:28:46.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.799" endtime="20201030 18:28:46.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.795" endtime="20201030 18:28:46.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.792" endtime="20201030 18:28:46.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.269" endtime="20201030 18:28:46.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.268" endtime="20201030 18:28:46.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.567" endtime="20201030 18:28:46.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.836" endtime="20201030 18:28:46.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.831" endtime="20201030 18:28:46.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.828" endtime="20201030 18:28:46.860"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:53.422" endtime="20201030 18:28:46.861" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.879" endtime="20201030 18:28:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.875" endtime="20201030 18:28:46.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.940" endtime="20201030 18:28:46.959"></status>
</kw>
<msg timestamp="20201030 18:28:46.960" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.936" endtime="20201030 18:28:46.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.968" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.963" endtime="20201030 18:28:46.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.975" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:46.970" endtime="20201030 18:28:46.976"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:46.929" endtime="20201030 18:28:46.978"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:46.922" endtime="20201030 18:28:46.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.919" endtime="20201030 18:28:46.981"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:46.989" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:46.988" endtime="20201030 18:28:46.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.983" endtime="20201030 18:28:46.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.917" endtime="20201030 18:28:46.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.915" endtime="20201030 18:28:46.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.993" endtime="20201030 18:28:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.909" endtime="20201030 18:28:46.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.904" endtime="20201030 18:28:47.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.872" endtime="20201030 18:28:47.001"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.027" endtime="20201030 18:28:47.046"></status>
</kw>
<msg timestamp="20201030 18:28:47.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.023" endtime="20201030 18:28:47.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.050" endtime="20201030 18:28:47.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.056" endtime="20201030 18:28:47.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.016" endtime="20201030 18:28:47.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.010" endtime="20201030 18:28:47.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.084" endtime="20201030 18:28:47.453"></status>
</kw>
<msg timestamp="20201030 18:28:47.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142992458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.078" endtime="20201030 18:28:47.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142987028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142992458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.463" endtime="20201030 18:28:47.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.483" endtime="20201030 18:28:47.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.071" endtime="20201030 18:28:47.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.065" endtime="20201030 18:28:47.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.502" level="INFO">${RESULT} = [{'diff': 5.430000000000712e-06}, {'diff': 6.514000000013009e-06}, {'diff': 5.514000000012009e-06}, {'diff': 5.999999999978245e-06}, {'diff': 5.971999999992983e-06}, {'diff': 5.471999999978605e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.492" endtime="20201030 18:28:47.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:47.512" level="INFO">${ACCURACY} = {'diff': [5.430000000000712e-06, 6.514000000013009e-06, 5.514000000012009e-06, 5.999999999978245e-06, 5.971999999992983e-06, 5.471999999978605e-06, 5.986999999985088e-06, 5.9860000000133695e-06, 5.985...</msg>
<status status="PASS" starttime="20201030 18:28:47.504" endtime="20201030 18:28:47.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.523" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:28:47.521" endtime="20201030 18:28:47.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.529" level="INFO">VALUE: [5.430000000000712e-06, 6.514000000013009e-06, 5.514000000012009e-06, 5.999999999978245e-06, 5.971999999992983e-06, 5.471999999978605e-06, 5.986999999985088e-06, 5.9860000000133695e-06, 5.985999999985614e-06, 5.971999999992983e-06, 6.0000000000060005e-06, 5.9860000000133695e-06, 5.443999999993343e-06, 5.45800000001373e-06, 6.0000000000060005e-06, 5.45800000001373e-06, 5.458999999985448e-06, 5.971999999992983e-06, 5.985999999985614e-06, 5.445000000020572e-06, 5.431000000000186e-06, 5.9860000000133695e-06, 5.514000000012009e-06, 6.0000000000060005e-06, 5.985999999985614e-06, 5.459000000013203e-06, 6.51299999998578e-06, 5.472000000006361e-06, 5.971999999992983e-06, 6.0139999999986316e-06, 5.443999999993343e-06, 5.457999999985974e-06, 6.0139999999986316e-06, 5.459000000013203e-06, 5.999999999978245e-06, 5.985999999985614e-06, 5.9860000000133695e-06, 6.012999999999158e-06, 5.45800000001373e-06, 6.0000000000060005e-06, 5.45800000001373e-06, 6.0000000000060005e-06, 5.9860000000133695e-06, 5.985999999985614e-06, 5.985999999985614e-06, 5.971999999992983e-06, 5.9450000000071945e-06, 5.458999999985448e-06, 5.472000000006361e-06, 5.417000000007555e-06]</msg>
<status status="PASS" starttime="20201030 18:28:47.526" endtime="20201030 18:28:47.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.514" endtime="20201030 18:28:47.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.542" endtime="20201030 18:28:47.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.537" endtime="20201030 18:28:47.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.534" endtime="20201030 18:28:47.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.005" endtime="20201030 18:28:47.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.004" endtime="20201030 18:28:47.567"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.594" endtime="20201030 18:28:47.612"></status>
</kw>
<msg timestamp="20201030 18:28:47.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.590" endtime="20201030 18:28:47.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.616" endtime="20201030 18:28:47.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.622" endtime="20201030 18:28:47.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.581" endtime="20201030 18:28:47.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.574" endtime="20201030 18:28:47.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.647" endtime="20201030 18:28:48.008"></status>
</kw>
<msg timestamp="20201030 18:28:48.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045775653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.644" endtime="20201030 18:28:48.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045769153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045775653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.013" endtime="20201030 18:28:48.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.022" endtime="20201030 18:28:48.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.636" endtime="20201030 18:28:48.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.631" endtime="20201030 18:28:48.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.031" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-06}, {'diff': 6.459000000000326e-06}, {'diff': 6.513999999999132e-06}, {'diff': 6.512999999999658e-06}, {'diff': 7.040999999999298e-06}, {'diff': 6.526999999999228e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.027" endtime="20201030 18:28:48.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.035" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.512999999999658e-06, 7.040999999999298e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.58400000000392e-06, 6.51399...</msg>
<status status="PASS" starttime="20201030 18:28:48.032" endtime="20201030 18:28:48.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.040" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.039" endtime="20201030 18:28:48.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.043" level="INFO">VALUE: [6.499999999999562e-06, 6.459000000000326e-06, 6.513999999999132e-06, 6.512999999999658e-06, 7.040999999999298e-06, 6.526999999999228e-06, 6.513999999999132e-06, 6.58400000000392e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 6.513999999999132e-06, 7.054999999998868e-06, 7.07000000000485e-06, 6.526999999999228e-06, 6.513999999999132e-06, 7.05600000000528e-06, 7.000000000000062e-06, 6.513999999999132e-06, 7.0279999999992016e-06, 7.0419999999987715e-06, 7.04200000000571e-06, 7.055999999998341e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 6.445000000000756e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.485999999999992e-06, 7.040999999999298e-06, 6.512999999999658e-06, 6.472000000000422e-06, 7.013000000000158e-06, 7.054999999998868e-06, 7.0419999999987715e-06, 7.054999999998868e-06, 7.000000000000062e-06, 7.0419999999987715e-06, 7.040999999999298e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.5279999999987015e-06, 7.0279999999992016e-06, 7.0829999999980076e-06, 6.499999999999562e-06, 6.513999999999132e-06, 7.04200000000571e-06, 6.5279999999987015e-06]</msg>
<status status="PASS" starttime="20201030 18:28:48.041" endtime="20201030 18:28:48.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.036" endtime="20201030 18:28:48.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.049" endtime="20201030 18:28:48.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.047" endtime="20201030 18:28:48.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.045" endtime="20201030 18:28:48.070"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.570" endtime="20201030 18:28:48.071"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.568" endtime="20201030 18:28:48.071"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.081" endtime="20201030 18:28:48.096"></status>
</kw>
<msg timestamp="20201030 18:28:48.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.080" endtime="20201030 18:28:48.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.098" endtime="20201030 18:28:48.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.101" endtime="20201030 18:28:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.077" endtime="20201030 18:28:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.074" endtime="20201030 18:28:48.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.112" endtime="20201030 18:28:48.443"></status>
</kw>
<msg timestamp="20201030 18:28:48.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.110" endtime="20201030 18:28:48.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025149667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025157764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.453" endtime="20201030 18:28:48.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.471" endtime="20201030 18:28:48.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.107" endtime="20201030 18:28:48.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.105" endtime="20201030 18:28:48.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.489" level="INFO">${RESULT} = [{'diff': 8.096999999998578e-06}, {'diff': 7.5419999999992715e-06}, {'diff': 8.069999999998911e-06}, {'diff': 7.570000000001881e-06}, {'diff': 7.556000000002311e-06}, {'diff': 7.570000000001881e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:48.480" endtime="20201030 18:28:48.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:48.500" level="INFO">${ACCURACY} = {'diff': [8.096999999998578e-06, 7.5419999999992715e-06, 8.069999999998911e-06, 7.570000000001881e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.554999999999368e-06, 7.528000000003171e-06, 7.568...</msg>
<status status="PASS" starttime="20201030 18:28:48.491" endtime="20201030 18:28:48.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.510" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:28:48.508" endtime="20201030 18:28:48.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.516" level="INFO">VALUE: [8.096999999998578e-06, 7.5419999999992715e-06, 8.069999999998911e-06, 7.570000000001881e-06, 7.556000000002311e-06, 7.570000000001881e-06, 7.554999999999368e-06, 7.528000000003171e-06, 7.568999999998938e-06, 7.568999999998938e-06, 8.125000000001187e-06, 7.555999999998841e-06, 7.570000000001881e-06, 8.096999999998578e-06, 7.555999999998841e-06, 8.041999999999772e-06, 7.500000000000562e-06, 8.110999999998147e-06, 7.555999999998841e-06, 7.568999999998938e-06, 7.582999999998508e-06, 7.5969999999980775e-06, 8.096999999998578e-06, 7.569000000002407e-06, 7.569999999998411e-06, 8.082999999999008e-06, 7.569999999998411e-06, 8.082999999999008e-06, 7.570000000001881e-06, 7.570000000001881e-06, 8.069999999998911e-06, 8.082999999999008e-06, 7.570000000001881e-06, 7.570000000001881e-06, 8.111000000001617e-06, 8.110999999998147e-06, 7.598000000001021e-06, 7.570000000001881e-06, 8.096999999998578e-06, 7.569999999998411e-06, 8.055999999999341e-06, 7.528000000003171e-06, 7.569999999998411e-06, 8.097999999998051e-06, 7.555999999998841e-06, 8.083999999998481e-06, 7.582999999998508e-06, 7.556000000002311e-06, 8.096999999998578e-06, 7.568999999998938e-06]</msg>
<status status="PASS" starttime="20201030 18:28:48.513" endtime="20201030 18:28:48.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.501" endtime="20201030 18:28:48.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.528" endtime="20201030 18:28:48.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.524" endtime="20201030 18:28:48.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.522" endtime="20201030 18:28:48.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.072" endtime="20201030 18:28:48.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.071" endtime="20201030 18:28:48.554"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.577" endtime="20201030 18:28:48.594"></status>
</kw>
<msg timestamp="20201030 18:28:48.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.573" endtime="20201030 18:28:48.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.598" endtime="20201030 18:28:48.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.604" endtime="20201030 18:28:48.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.566" endtime="20201030 18:28:48.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.561" endtime="20201030 18:28:48.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.628" endtime="20201030 18:28:48.962"></status>
</kw>
<msg timestamp="20201030 18:28:48.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042028139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.624" endtime="20201030 18:28:48.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042018972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042028139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.971" endtime="20201030 18:28:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.990" endtime="20201030 18:28:48.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.617" endtime="20201030 18:28:48.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.612" endtime="20201030 18:28:48.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.007" level="INFO">${RESULT} = [{'diff': 9.166999999997427e-06}, {'diff': 8.611000000005586e-06}, {'diff': 9.236000000002742e-06}, {'diff': 8.625000000005156e-06}, {'diff': 8.638999999997787e-06}, {'diff': 8.638999999997787e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.999" endtime="20201030 18:28:49.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.020" level="INFO">${ACCURACY} = {'diff': [9.166999999997427e-06, 8.611000000005586e-06, 9.236000000002742e-06, 8.625000000005156e-06, 8.638999999997787e-06, 8.638999999997787e-06, 9.138999999998287e-06, 8.610999999998648e-06, 8.6249...</msg>
<status status="PASS" starttime="20201030 18:28:49.010" endtime="20201030 18:28:49.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.032" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.029" endtime="20201030 18:28:49.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.038" level="INFO">VALUE: [9.166999999997427e-06, 8.611000000005586e-06, 9.236000000002742e-06, 8.625000000005156e-06, 8.638999999997787e-06, 8.638999999997787e-06, 9.138999999998287e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.639000000004726e-06, 9.195000000003506e-06, 8.624999999998217e-06, 9.165999999997954e-06, 8.624999999998217e-06, 9.139000000005226e-06, 9.110999999999148e-06, 9.180000000004462e-06, 8.097000000005516e-06, 9.180999999996997e-06, 8.610999999998648e-06, 9.152999999997857e-06, 8.610999999998648e-06, 9.152999999997857e-06, 8.624999999998217e-06, 8.624999999998217e-06, 9.153000000004796e-06, 8.096999999998578e-06, 9.153000000004796e-06, 9.153000000004796e-06, 9.138999999998287e-06, 9.153000000004796e-06, 8.624999999998217e-06, 8.638999999997787e-06, 9.180000000004462e-06, 9.153000000004796e-06, 8.624999999998217e-06, 9.138999999998287e-06, 8.708999999995637e-06, 8.624999999998217e-06, 9.180999999996997e-06, 9.138999999998287e-06, 8.638999999997787e-06, 8.610999999998648e-06, 9.166999999997427e-06, 9.138999999998287e-06, 8.110999999998147e-06, 8.639000000004726e-06, 9.152999999997857e-06, 8.611000000005586e-06, 8.625000000005156e-06]</msg>
<status status="PASS" starttime="20201030 18:28:49.034" endtime="20201030 18:28:49.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.022" endtime="20201030 18:28:49.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.051" endtime="20201030 18:28:49.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.046" endtime="20201030 18:28:49.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.044" endtime="20201030 18:28:49.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.556" endtime="20201030 18:28:49.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.555" endtime="20201030 18:28:49.076"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.099" endtime="20201030 18:28:49.118"></status>
</kw>
<msg timestamp="20201030 18:28:49.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.096" endtime="20201030 18:28:49.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.121" endtime="20201030 18:28:49.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.128" endtime="20201030 18:28:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.089" endtime="20201030 18:28:49.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.083" endtime="20201030 18:28:49.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.151" endtime="20201030 18:28:49.491"></status>
</kw>
<msg timestamp="20201030 18:28:49.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.148" endtime="20201030 18:28:49.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041949708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041959417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.501" endtime="20201030 18:28:49.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.520" endtime="20201030 18:28:49.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.141" endtime="20201030 18:28:49.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.136" endtime="20201030 18:28:49.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.537" level="INFO">${RESULT} = [{'diff': 9.708999999996637e-06}, {'diff': 9.693999999997593e-06}, {'diff': 9.681000000004436e-06}, {'diff': 1.0207999999997663e-05}, {'diff': 9.667000000004866e-06}, {'diff': 9.680999999997497e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:49.528" endtime="20201030 18:28:49.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:49.547" level="INFO">${ACCURACY} = {'diff': [9.708999999996637e-06, 9.693999999997593e-06, 9.681000000004436e-06, 1.0207999999997663e-05, 9.667000000004866e-06, 9.680999999997497e-06, 9.153000000004796e-06, 9.707999999997163e-06, 9.665...</msg>
<status status="PASS" starttime="20201030 18:28:49.539" endtime="20201030 18:28:49.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.558" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:28:49.556" endtime="20201030 18:28:49.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.563" level="INFO">VALUE: [9.708999999996637e-06, 9.693999999997593e-06, 9.681000000004436e-06, 1.0207999999997663e-05, 9.667000000004866e-06, 9.680999999997497e-06, 9.153000000004796e-06, 9.707999999997163e-06, 9.665999999998454e-06, 9.667000000004866e-06, 9.680999999997497e-06, 9.165999999997954e-06, 9.693999999997593e-06, 9.694000000004532e-06, 1.0208999999997137e-05, 9.680000000004962e-06, 9.694000000004532e-06, 9.695000000004006e-06, 1.0250000000003312e-05, 1.0221999999997233e-05, 1.0207999999997663e-05, 1.0208000000004602e-05, 9.680999999997497e-06, 9.681000000004436e-06, 9.694999999997067e-06, 9.695000000004006e-06, 9.153000000004796e-06, 9.679999999998024e-06, 9.750000000002812e-06, 9.666999999997927e-06, 9.722000000003672e-06, 1.0207999999997663e-05, 9.735999999996303e-06, 9.666999999997927e-06, 9.693999999997593e-06, 9.679999999998024e-06, 9.665999999998454e-06, 9.153000000004796e-06, 9.166999999997427e-06, 9.680000000004962e-06, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0208999999997137e-05, 1.0208999999997137e-05, 9.166999999997427e-06, 9.680000000004962e-06, 9.749999999995873e-06, 9.138999999998287e-06, 1.0249999999996373e-05, 9.681000000004436e-06]</msg>
<status status="PASS" starttime="20201030 18:28:49.560" endtime="20201030 18:28:49.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.549" endtime="20201030 18:28:49.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.576" endtime="20201030 18:28:49.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.572" endtime="20201030 18:28:49.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.569" endtime="20201030 18:28:49.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.079" endtime="20201030 18:28:49.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.077" endtime="20201030 18:28:49.601"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.624" endtime="20201030 18:28:49.643"></status>
</kw>
<msg timestamp="20201030 18:28:49.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.621" endtime="20201030 18:28:49.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.646" endtime="20201030 18:28:49.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.653" endtime="20201030 18:28:49.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.613" endtime="20201030 18:28:49.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.608" endtime="20201030 18:28:49.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.676" endtime="20201030 18:28:50.016"></status>
</kw>
<msg timestamp="20201030 18:28:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.673" endtime="20201030 18:28:50.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041430153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041440889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.025" endtime="20201030 18:28:50.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.045" endtime="20201030 18:28:50.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.666" endtime="20201030 18:28:50.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.661" endtime="20201030 18:28:50.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.063" level="INFO">${RESULT} = [{'diff': 1.0736000000004242e-05}, {'diff': 1.0735999999997303e-05}, {'diff': 1.0250000000003312e-05}, {'diff': 1.1264000000003882e-05}, {'diff': 1.0721999999997733e-05}, {'diff': 1.0750000000003812e-...</msg>
<status status="PASS" starttime="20201030 18:28:50.054" endtime="20201030 18:28:50.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.073" level="INFO">${ACCURACY} = {'diff': [1.0736000000004242e-05, 1.0735999999997303e-05, 1.0250000000003312e-05, 1.1264000000003882e-05, 1.0721999999997733e-05, 1.0750000000003812e-05, 1.0749999999996873e-05, 1.0223000000003646e-05...</msg>
<status status="PASS" starttime="20201030 18:28:50.065" endtime="20201030 18:28:50.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.084" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.082" endtime="20201030 18:28:50.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.090" level="INFO">VALUE: [1.0736000000004242e-05, 1.0735999999997303e-05, 1.0250000000003312e-05, 1.1264000000003882e-05, 1.0721999999997733e-05, 1.0750000000003812e-05, 1.0749999999996873e-05, 1.0223000000003646e-05, 1.0736000000004242e-05, 1.1264000000003882e-05, 1.1250000000004312e-05, 1.0735999999997303e-05, 1.0181000000004936e-05, 1.0680999999998497e-05, 1.0750000000003812e-05, 1.0736000000004242e-05, 1.0736000000004242e-05, 1.0723000000004146e-05, 1.1194000000006032e-05, 1.1221999999998233e-05, 1.0707999999998163e-05, 1.0722000000004672e-05, 1.0209000000004076e-05, 1.1263999999996943e-05, 1.1249999999997373e-05, 1.1332999999995319e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.1264000000003882e-05, 1.0207999999997663e-05, 1.1264000000003882e-05, 1.1221999999998233e-05, 1.0735999999997303e-05, 1.1221999999998233e-05, 1.0735999999997303e-05, 1.0208999999997137e-05, 1.126299999999747e-05, 1.0236000000003742e-05, 1.0806000000002092e-05, 1.0735999999997303e-05, 1.0207999999997663e-05, 1.0750000000003812e-05, 1.126299999999747e-05, 1.1249999999997373e-05, 1.127699999999704e-05, 1.0222000000004172e-05, 1.0736000000004242e-05, 1.0736000000004242e-05, 1.0263999999995943e-05, 1.0749999999996873e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.087" endtime="20201030 18:28:50.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.075" endtime="20201030 18:28:50.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.104" endtime="20201030 18:28:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.098" endtime="20201030 18:28:50.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.096" endtime="20201030 18:28:50.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.603" endtime="20201030 18:28:50.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.602" endtime="20201030 18:28:50.129"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.152" endtime="20201030 18:28:50.171"></status>
</kw>
<msg timestamp="20201030 18:28:50.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.149" endtime="20201030 18:28:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.174" endtime="20201030 18:28:50.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.181" endtime="20201030 18:28:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.142" endtime="20201030 18:28:50.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.136" endtime="20201030 18:28:50.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.204" endtime="20201030 18:28:50.542"></status>
</kw>
<msg timestamp="20201030 18:28:50.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041655431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.201" endtime="20201030 18:28:50.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041644139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041655431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.551" endtime="20201030 18:28:50.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.570" endtime="20201030 18:28:50.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.194" endtime="20201030 18:28:50.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.189" endtime="20201030 18:28:50.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.588" level="INFO">${RESULT} = [{'diff': 1.1292000000003022e-05}, {'diff': 1.1264000000003882e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.2332999999996319e-05}, {'diff': 1.1806000000003092e-...</msg>
<status status="PASS" starttime="20201030 18:28:50.579" endtime="20201030 18:28:50.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:50.603" level="INFO">${ACCURACY} = {'diff': [1.1292000000003022e-05, 1.1264000000003882e-05, 1.1263999999996943e-05, 1.1263999999996943e-05, 1.2332999999996319e-05, 1.1806000000003092e-05, 1.1278000000003452e-05, 1.1791999999996583e-05...</msg>
<status status="PASS" starttime="20201030 18:28:50.590" endtime="20201030 18:28:50.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.614" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:28:50.612" endtime="20201030 18:28:50.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.620" level="INFO">VALUE: [1.1292000000003022e-05, 1.1264000000003882e-05, 1.1263999999996943e-05, 1.1263999999996943e-05, 1.2332999999996319e-05, 1.1806000000003092e-05, 1.1278000000003452e-05, 1.1791999999996583e-05, 1.2319999999996223e-05, 1.1792000000003522e-05, 1.179099999999711e-05, 1.1278000000003452e-05, 1.1791999999996583e-05, 1.1777999999997013e-05, 1.180499999999668e-05, 1.1263999999996943e-05, 1.1805999999996153e-05, 1.1791999999996583e-05, 1.1263999999996943e-05, 1.2333000000003258e-05, 1.2306000000003592e-05, 1.1777999999997013e-05, 1.1832999999995819e-05, 1.1806000000003092e-05, 1.1791999999996583e-05, 1.1249999999997373e-05, 1.2389000000001538e-05, 1.1791999999996583e-05, 1.1791999999996583e-05, 1.177699999999754e-05, 1.1792000000003522e-05, 1.1791999999996583e-05, 1.127699999999704e-05, 1.179099999999711e-05, 1.1819000000003188e-05, 1.1264000000003882e-05, 1.2319000000003688e-05, 1.1291999999996083e-05, 1.179099999999711e-05, 1.1264000000003882e-05, 1.1792000000003522e-05, 1.230499999999718e-05, 1.1735999999998303e-05, 1.1792000000003522e-05, 1.2347000000002828e-05, 1.1777999999997013e-05, 1.2333000000003258e-05, 1.2319000000003688e-05, 1.1264000000003882e-05, 1.1792000000003522e-05]</msg>
<status status="PASS" starttime="20201030 18:28:50.616" endtime="20201030 18:28:50.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.605" endtime="20201030 18:28:50.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.632" endtime="20201030 18:28:50.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.628" endtime="20201030 18:28:50.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.625" endtime="20201030 18:28:50.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.132" endtime="20201030 18:28:50.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.130" endtime="20201030 18:28:50.658"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.681" endtime="20201030 18:28:50.698"></status>
</kw>
<msg timestamp="20201030 18:28:50.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.677" endtime="20201030 18:28:50.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.702" endtime="20201030 18:28:50.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.708" endtime="20201030 18:28:50.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.670" endtime="20201030 18:28:50.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.664" endtime="20201030 18:28:50.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.732" endtime="20201030 18:28:51.097"></status>
</kw>
<msg timestamp="20201030 18:28:51.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.729" endtime="20201030 18:28:51.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041665917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.107" endtime="20201030 18:28:51.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.130" endtime="20201030 18:28:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.721" endtime="20201030 18:28:51.140"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.716" endtime="20201030 18:28:51.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.160" level="INFO">${RESULT} = [{'diff': 1.2847000000003328e-05}, {'diff': 1.2320000000003162e-05}, {'diff': 1.2847000000003328e-05}, {'diff': 1.231899999999675e-05}, {'diff': 1.2862000000002372e-05}, {'diff': 1.3375000000002968e-0...</msg>
<status status="PASS" starttime="20201030 18:28:51.145" endtime="20201030 18:28:51.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.175" level="INFO">${ACCURACY} = {'diff': [1.2847000000003328e-05, 1.2320000000003162e-05, 1.2847000000003328e-05, 1.231899999999675e-05, 1.2862000000002372e-05, 1.3375000000002968e-05, 1.2847999999995863e-05, 1.283299999999682e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:51.163" endtime="20201030 18:28:51.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.187" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.185" endtime="20201030 18:28:51.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.193" level="INFO">VALUE: [1.2847000000003328e-05, 1.2320000000003162e-05, 1.2847000000003328e-05, 1.231899999999675e-05, 1.2862000000002372e-05, 1.3375000000002968e-05, 1.2847999999995863e-05, 1.283299999999682e-05, 1.2805999999997153e-05, 1.2320000000003162e-05, 1.2306000000003592e-05, 1.2333999999995793e-05, 1.2847000000003328e-05, 1.2833999999996293e-05, 1.2819000000004188e-05, 1.2846999999996389e-05, 1.231899999999675e-05, 1.2847000000003328e-05, 1.2319999999996223e-05, 1.2306000000003592e-05, 1.2291999999997083e-05, 1.3402999999995169e-05, 1.2846999999996389e-05, 1.2763999999998443e-05, 1.2319000000003688e-05, 1.2875000000002468e-05, 1.2861000000002898e-05, 1.2903000000001608e-05, 1.2847000000003328e-05, 1.2306000000003592e-05, 1.2833999999996293e-05, 1.3403000000002108e-05, 1.2848000000002802e-05, 1.3375000000002968e-05, 1.2291999999997083e-05, 1.2846999999996389e-05, 1.2332999999996319e-05, 1.230499999999718e-05, 1.2320000000003162e-05, 1.2819000000004188e-05, 1.2847000000003328e-05, 1.283299999999682e-05, 1.2846999999996389e-05, 1.280499999999768e-05, 1.283299999999682e-05, 1.2846999999996389e-05, 1.231899999999675e-05, 1.2862000000002372e-05, 1.2320000000003162e-05, 1.3416000000002204e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.190" endtime="20201030 18:28:51.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.177" endtime="20201030 18:28:51.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.206" endtime="20201030 18:28:51.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.202" endtime="20201030 18:28:51.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.199" endtime="20201030 18:28:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.660" endtime="20201030 18:28:51.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.658" endtime="20201030 18:28:51.232"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.256" endtime="20201030 18:28:51.276"></status>
</kw>
<msg timestamp="20201030 18:28:51.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.253" endtime="20201030 18:28:51.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.279" endtime="20201030 18:28:51.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.286" endtime="20201030 18:28:51.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.245" endtime="20201030 18:28:51.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.239" endtime="20201030 18:28:51.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.311" endtime="20201030 18:28:51.668"></status>
</kw>
<msg timestamp="20201030 18:28:51.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043607847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.307" endtime="20201030 18:28:51.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043607847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.677" endtime="20201030 18:28:51.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.696" endtime="20201030 18:28:51.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.299" endtime="20201030 18:28:51.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.294" endtime="20201030 18:28:51.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.714" level="INFO">${RESULT} = [{'diff': 1.4445000000001817e-05}, {'diff': 1.3888999999996099e-05}, {'diff': 1.3347000000003828e-05}, {'diff': 1.3375000000002968e-05}, {'diff': 1.3875000000003468e-05}, {'diff': 1.4416999999995739e-...</msg>
<status status="PASS" starttime="20201030 18:28:51.705" endtime="20201030 18:28:51.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:51.723" level="INFO">${ACCURACY} = {'diff': [1.4445000000001817e-05, 1.3888999999996099e-05, 1.3347000000003828e-05, 1.3375000000002968e-05, 1.3875000000003468e-05, 1.4416999999995739e-05, 1.3929999999995335e-05, 1.3889000000003038e-05...</msg>
<status status="PASS" starttime="20201030 18:28:51.716" endtime="20201030 18:28:51.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.734" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:28:51.732" endtime="20201030 18:28:51.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.739" level="INFO">VALUE: [1.4445000000001817e-05, 1.3888999999996099e-05, 1.3347000000003828e-05, 1.3375000000002968e-05, 1.3875000000003468e-05, 1.4416999999995739e-05, 1.3929999999995335e-05, 1.3889000000003038e-05, 1.3902999999995669e-05, 1.3444000000001344e-05, 1.3374999999996029e-05, 1.331899999999775e-05, 1.4486000000001054e-05, 1.4444000000002344e-05, 1.3916999999995239e-05, 1.3902999999995669e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.3916000000002704e-05, 1.4431000000002248e-05, 1.3361000000003398e-05, 1.4431000000002248e-05, 1.3889000000003038e-05, 1.3402999999995169e-05, 1.3916000000002704e-05, 1.4431000000002248e-05, 1.3388999999995599e-05, 1.3389000000002538e-05, 1.4471999999994545e-05, 1.3903000000002608e-05, 1.3902999999995669e-05, 1.3916000000002704e-05, 1.3291999999998083e-05, 1.3901999999996195e-05, 1.3902999999995669e-05, 1.3430000000001774e-05, 1.3916000000002704e-05, 1.3903000000002608e-05, 1.3931000000001748e-05, 1.3347000000003828e-05, 1.3874999999996529e-05, 1.3902999999995669e-05, 1.3389000000002538e-05, 1.3333999999996793e-05, 1.3360999999996459e-05, 1.3917000000002178e-05, 1.3360999999996459e-05, 1.3902999999995669e-05, 1.3915999999995765e-05, 1.4431000000002248e-05]</msg>
<status status="PASS" starttime="20201030 18:28:51.736" endtime="20201030 18:28:51.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.725" endtime="20201030 18:28:51.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.752" endtime="20201030 18:28:51.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.747" endtime="20201030 18:28:51.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.745" endtime="20201030 18:28:51.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.234" endtime="20201030 18:28:51.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.233" endtime="20201030 18:28:51.777"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.799" endtime="20201030 18:28:51.818"></status>
</kw>
<msg timestamp="20201030 18:28:51.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.796" endtime="20201030 18:28:51.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.822" endtime="20201030 18:28:51.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.828" endtime="20201030 18:28:51.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.789" endtime="20201030 18:28:51.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.783" endtime="20201030 18:28:51.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.853" endtime="20201030 18:28:52.198"></status>
</kw>
<msg timestamp="20201030 18:28:52.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041620278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041635222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.850" endtime="20201030 18:28:52.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041620278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041635222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.208" endtime="20201030 18:28:52.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.228" endtime="20201030 18:28:52.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.842" endtime="20201030 18:28:52.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.838" endtime="20201030 18:28:52.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.246" level="INFO">${RESULT} = [{'diff': 1.4944000000002844e-05}, {'diff': 1.4430000000002774e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.4957999999995475e-05}, {'diff': 1.4444000000002344e-05}, {'diff': 1.4874999999997529e-...</msg>
<status status="PASS" starttime="20201030 18:28:52.237" endtime="20201030 18:28:52.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.256" level="INFO">${ACCURACY} = {'diff': [1.4944000000002844e-05, 1.4430000000002774e-05, 1.4958000000002414e-05, 1.4957999999995475e-05, 1.4444000000002344e-05, 1.4874999999997529e-05, 1.4459000000001387e-05, 1.4403000000003108e-05...</msg>
<status status="PASS" starttime="20201030 18:28:52.249" endtime="20201030 18:28:52.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.268" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.266" endtime="20201030 18:28:52.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.274" level="INFO">VALUE: [1.4944000000002844e-05, 1.4430000000002774e-05, 1.4958000000002414e-05, 1.4957999999995475e-05, 1.4444000000002344e-05, 1.4874999999997529e-05, 1.4459000000001387e-05, 1.4403000000003108e-05, 1.4443999999995405e-05, 1.4889000000004038e-05, 1.4500000000000624e-05, 1.4444000000002344e-05, 1.5473000000001957e-05, 1.4429999999995835e-05, 1.4445000000001817e-05, 1.4943999999995905e-05, 1.4958000000002414e-05, 1.4944999999995379e-05, 1.5486000000002054e-05, 1.4429999999995835e-05, 1.4959000000001887e-05, 1.5000000000001124e-05, 1.4944000000002844e-05, 1.4972000000001984e-05, 1.4958000000002414e-05, 1.4389000000003538e-05, 1.4972000000001984e-05, 1.4958000000002414e-05, 1.4417000000002678e-05, 1.5014000000000693e-05, 1.4959000000001887e-05, 1.4957999999995475e-05, 1.4943999999995905e-05, 1.4416000000003204e-05, 1.4431000000002248e-05, 1.4930999999995809e-05, 1.4416999999995739e-05, 1.4431000000002248e-05, 1.5041999999999833e-05, 1.4445000000001817e-05, 1.4459000000001387e-05, 1.4944000000002844e-05, 1.4973000000001457e-05, 1.4944000000002844e-05, 1.4958000000002414e-05, 1.4444000000002344e-05, 1.4945000000002318e-05, 1.4958000000002414e-05, 1.4958000000002414e-05, 1.4458000000001914e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.270" endtime="20201030 18:28:52.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.258" endtime="20201030 18:28:52.277"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.289" endtime="20201030 18:28:52.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.282" endtime="20201030 18:28:52.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.280" endtime="20201030 18:28:52.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.779" endtime="20201030 18:28:52.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.778" endtime="20201030 18:28:52.314"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.339" endtime="20201030 18:28:52.358"></status>
</kw>
<msg timestamp="20201030 18:28:52.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.335" endtime="20201030 18:28:52.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.362" endtime="20201030 18:28:52.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.368" endtime="20201030 18:28:52.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.327" endtime="20201030 18:28:52.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.321" endtime="20201030 18:28:52.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.410" endtime="20201030 18:28:52.769"></status>
</kw>
<msg timestamp="20201030 18:28:52.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043828139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043844153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.404" endtime="20201030 18:28:52.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043828139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043844153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.779" endtime="20201030 18:28:52.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.799" endtime="20201030 18:28:52.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.391" endtime="20201030 18:28:52.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.384" endtime="20201030 18:28:52.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.818" level="INFO">${RESULT} = [{'diff': 1.6013999999994755e-05}, {'diff': 1.6000000000002124e-05}, {'diff': 1.5417000000003678e-05}, {'diff': 1.6000000000002124e-05}, {'diff': 1.6028000000001263e-05}, {'diff': 1.5486000000002054e-...</msg>
<status status="PASS" starttime="20201030 18:28:52.808" endtime="20201030 18:28:52.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:52.829" level="INFO">${ACCURACY} = {'diff': [1.6013999999994755e-05, 1.6000000000002124e-05, 1.5417000000003678e-05, 1.6000000000002124e-05, 1.6028000000001263e-05, 1.5486000000002054e-05, 1.5485999999995115e-05, 1.5500000000001624e-05...</msg>
<status status="PASS" starttime="20201030 18:28:52.820" endtime="20201030 18:28:52.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.841" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:28:52.838" endtime="20201030 18:28:52.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.847" level="INFO">VALUE: [1.6013999999994755e-05, 1.6000000000002124e-05, 1.5417000000003678e-05, 1.6000000000002124e-05, 1.6028000000001263e-05, 1.5486000000002054e-05, 1.5485999999995115e-05, 1.5500000000001624e-05, 1.5415999999997265e-05, 1.5972000000002984e-05, 1.5986000000002554e-05, 1.604100000000136e-05, 1.6014000000001694e-05, 1.5457999999995975e-05, 1.6042000000000833e-05, 1.554100000000086e-05, 1.5486000000002054e-05, 1.6013999999994755e-05, 1.5499999999994685e-05, 1.5513999999994255e-05, 1.5957999999996475e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5486000000002054e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.5487000000001527e-05, 1.5487000000001527e-05, 1.5500000000001624e-05, 1.605500000000093e-05, 1.6056000000000403e-05, 1.5957999999996475e-05, 1.6000000000002124e-05, 1.6028000000001263e-05, 1.6014000000001694e-05, 1.540299999999717e-05, 1.5486000000002054e-05, 1.6027999999994325e-05, 1.5528000000000763e-05, 1.5500000000001624e-05, 1.5500000000001624e-05, 1.6000000000002124e-05, 1.6028000000001263e-05, 1.6014000000001694e-05, 1.5485999999995115e-05, 1.5473000000001957e-05, 1.6014000000001694e-05, 1.6028000000001263e-05, 1.5500000000001624e-05, 1.6028000000001263e-05]</msg>
<status status="PASS" starttime="20201030 18:28:52.843" endtime="20201030 18:28:52.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.831" endtime="20201030 18:28:52.850"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.860" endtime="20201030 18:28:52.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.855" endtime="20201030 18:28:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.853" endtime="20201030 18:28:52.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.317" endtime="20201030 18:28:52.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.315" endtime="20201030 18:28:52.886"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.910" endtime="20201030 18:28:52.929"></status>
</kw>
<msg timestamp="20201030 18:28:52.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.906" endtime="20201030 18:28:52.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.932" endtime="20201030 18:28:52.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.939" endtime="20201030 18:28:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.899" endtime="20201030 18:28:52.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.892" endtime="20201030 18:28:52.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.976" endtime="20201030 18:28:53.345"></status>
</kw>
<msg timestamp="20201030 18:28:53.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.970" endtime="20201030 18:28:53.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043339792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.355" endtime="20201030 18:28:53.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.375" endtime="20201030 18:28:53.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.958" endtime="20201030 18:28:53.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.950" endtime="20201030 18:28:53.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.393" level="INFO">${RESULT} = [{'diff': 1.6597999999999613e-05}, {'diff': 1.6485999999996115e-05}, {'diff': 1.6569000000001e-05}, {'diff': 1.708299999999413e-05}, {'diff': 1.655500000000143e-05}, {'diff': 1.6541999999994395e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:53.384" endtime="20201030 18:28:53.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.405" level="INFO">${ACCURACY} = {'diff': [1.6597999999999613e-05, 1.6485999999996115e-05, 1.6569000000001e-05, 1.708299999999413e-05, 1.655500000000143e-05, 1.6541999999994395e-05, 1.7084000000000543e-05, 1.6542000000001333e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 18:28:53.396" endtime="20201030 18:28:53.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.417" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.415" endtime="20201030 18:28:53.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.423" level="INFO">VALUE: [1.6597999999999613e-05, 1.6485999999996115e-05, 1.6569000000001e-05, 1.708299999999413e-05, 1.655500000000143e-05, 1.6541999999994395e-05, 1.7084000000000543e-05, 1.6542000000001333e-05, 1.7070000000000973e-05, 1.70690000000015e-05, 1.652700000000229e-05, 1.712499999999978e-05, 1.7084000000000543e-05, 1.706899999999456e-05, 1.7055999999994464e-05, 1.70690000000015e-05, 1.6542000000001333e-05, 1.7055999999994464e-05, 1.654100000000186e-05, 1.6527999999994825e-05, 1.655500000000143e-05, 1.70690000000015e-05, 1.6542000000001333e-05, 1.705500000000193e-05, 1.659700000000014e-05, 1.708299999999413e-05, 1.654100000000186e-05, 1.6570000000000473e-05, 1.708299999999413e-05, 1.658300000000057e-05, 1.7042000000001833e-05, 1.7041999999994895e-05, 1.654099999999492e-05, 1.708300000000107e-05, 1.6542000000001333e-05, 1.6528000000001764e-05, 1.654100000000186e-05, 1.7014000000002694e-05, 1.708300000000107e-05, 1.712499999999978e-05, 1.6485999999996115e-05, 1.6570000000000473e-05, 1.704100000000236e-05, 1.706899999999456e-05, 1.6542000000001333e-05, 1.6556000000000903e-05, 1.706899999999456e-05, 1.6542000000001333e-05, 1.70690000000015e-05, 1.7042000000001833e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.419" endtime="20201030 18:28:53.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.407" endtime="20201030 18:28:53.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.436" endtime="20201030 18:28:53.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.431" endtime="20201030 18:28:53.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.429" endtime="20201030 18:28:53.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.888" endtime="20201030 18:28:53.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.887" endtime="20201030 18:28:53.462"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.486" endtime="20201030 18:28:53.504"></status>
</kw>
<msg timestamp="20201030 18:28:53.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.482" endtime="20201030 18:28:53.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.508" endtime="20201030 18:28:53.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.515" endtime="20201030 18:28:53.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.475" endtime="20201030 18:28:53.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.468" endtime="20201030 18:28:53.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.540" endtime="20201030 18:28:53.907"></status>
</kw>
<msg timestamp="20201030 18:28:53.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043621653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043639236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.536" endtime="20201030 18:28:53.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043621653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043639236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.916" endtime="20201030 18:28:53.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.935" endtime="20201030 18:28:53.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.528" endtime="20201030 18:28:53.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.523" endtime="20201030 18:28:53.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.953" level="INFO">${RESULT} = [{'diff': 1.758299999999463e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.813900000000035e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:53.944" endtime="20201030 18:28:53.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:53.962" level="INFO">${ACCURACY} = {'diff': [1.758299999999463e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.813900000000035e-05, 1.7584000000001043e-05, 1.7584000000001043e-05, 1.81...</msg>
<status status="PASS" starttime="20201030 18:28:53.955" endtime="20201030 18:28:53.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.973" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:28:53.971" endtime="20201030 18:28:53.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.979" level="INFO">VALUE: [1.758299999999463e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.813900000000035e-05, 1.7584000000001043e-05, 1.7584000000001043e-05, 1.812500000000078e-05, 1.761100000000071e-05, 1.7638000000000376e-05, 1.759700000000114e-05, 1.808300000000207e-05, 1.7570000000001473e-05, 1.761099999999377e-05, 1.813900000000035e-05, 1.7583999999994104e-05, 1.758300000000157e-05, 1.759700000000114e-05, 1.813900000000035e-05, 1.8084000000001543e-05, 1.7569000000002e-05, 1.812500000000078e-05, 1.7570000000001473e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.7598000000000613e-05, 1.756899999999506e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.812500000000078e-05, 1.808300000000207e-05, 1.761100000000071e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.813900000000035e-05, 1.7570000000001473e-05, 1.758300000000157e-05, 1.759700000000114e-05, 1.7598000000000613e-05, 1.755499999999549e-05, 1.811100000000121e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.7598000000000613e-05, 1.812500000000078e-05, 1.813900000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:28:53.976" endtime="20201030 18:28:53.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.964" endtime="20201030 18:28:53.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.992" endtime="20201030 18:28:54.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.987" endtime="20201030 18:28:54.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.985" endtime="20201030 18:28:54.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.464" endtime="20201030 18:28:54.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.463" endtime="20201030 18:28:54.017"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.040" endtime="20201030 18:28:54.059"></status>
</kw>
<msg timestamp="20201030 18:28:54.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.037" endtime="20201030 18:28:54.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.063" endtime="20201030 18:28:54.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.069" endtime="20201030 18:28:54.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.029" endtime="20201030 18:28:54.075"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.024" endtime="20201030 18:28:54.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.094" endtime="20201030 18:28:54.440"></status>
</kw>
<msg timestamp="20201030 18:28:54.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042005889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042025125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.091" endtime="20201030 18:28:54.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042005889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042025125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.452" endtime="20201030 18:28:54.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.476" endtime="20201030 18:28:54.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.083" endtime="20201030 18:28:54.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.078" endtime="20201030 18:28:54.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.502" level="INFO">${RESULT} = [{'diff': 1.9236000000005804e-05}, {'diff': 1.8666000000000516e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.8721999999998795e-05}, {'diff': 1.913900000000135e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:54.492" endtime="20201030 18:28:54.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:54.514" level="INFO">${ACCURACY} = {'diff': [1.9236000000005804e-05, 1.8666000000000516e-05, 1.812500000000078e-05, 1.919499999999963e-05, 1.8721999999998795e-05, 1.913900000000135e-05, 1.918100000000006e-05, 1.8666000000000516e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:54.505" endtime="20201030 18:28:54.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.527" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:28:54.524" endtime="20201030 18:28:54.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.534" level="INFO">VALUE: [1.9236000000005804e-05, 1.8666000000000516e-05, 1.812500000000078e-05, 1.919499999999963e-05, 1.8721999999998795e-05, 1.913900000000135e-05, 1.918100000000006e-05, 1.8666000000000516e-05, 1.865299999999348e-05, 1.9180000000000585e-05, 1.8666000000000516e-05, 1.918100000000006e-05, 1.8652000000000946e-05, 1.866699999999999e-05, 1.812500000000078e-05, 1.865300000000042e-05, 1.9221999999999295e-05, 1.8693999999999655e-05, 1.918100000000006e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.865300000000042e-05, 1.868099999999956e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.9194000000000155e-05, 1.868099999999956e-05, 1.8666000000000516e-05, 1.918100000000006e-05, 1.865300000000042e-05, 1.909700000000264e-05, 1.8097999999994174e-05, 1.865300000000042e-05, 1.868099999999956e-05, 1.812500000000078e-05, 1.866699999999999e-05, 1.8098000000001113e-05, 1.9207999999999725e-05, 1.866699999999999e-05, 1.8652000000000946e-05, 1.8680000000000085e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.865300000000042e-05, 1.92089999999992e-05, 1.865300000000042e-05, 1.911100000000221e-05]</msg>
<status status="PASS" starttime="20201030 18:28:54.530" endtime="20201030 18:28:54.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.516" endtime="20201030 18:28:54.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.552" endtime="20201030 18:28:54.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.545" endtime="20201030 18:28:54.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.542" endtime="20201030 18:28:54.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.019" endtime="20201030 18:28:54.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.018" endtime="20201030 18:28:54.579"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.607" endtime="20201030 18:28:54.627"></status>
</kw>
<msg timestamp="20201030 18:28:54.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.603" endtime="20201030 18:28:54.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.632" endtime="20201030 18:28:54.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.640" endtime="20201030 18:28:54.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.594" endtime="20201030 18:28:54.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.587" endtime="20201030 18:28:54.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.670" endtime="20201030 18:28:55.006"></status>
</kw>
<msg timestamp="20201030 18:28:55.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049426181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.666" endtime="20201030 18:28:55.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049405944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049426181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.015" endtime="20201030 18:28:55.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.034" endtime="20201030 18:28:55.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.658" endtime="20201030 18:28:55.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.652" endtime="20201030 18:28:55.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.051" level="INFO">${RESULT} = [{'diff': 2.023699999999934e-05}, {'diff': 1.918100000000006e-05}, {'diff': 1.969500000000013e-05}, {'diff': 2.026299999999953e-05}, {'diff': 1.9693999999993717e-05}, {'diff': 2.0235999999999865e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:55.042" endtime="20201030 18:28:55.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.062" level="INFO">${ACCURACY} = {'diff': [2.023699999999934e-05, 1.918100000000006e-05, 1.969500000000013e-05, 2.026299999999953e-05, 1.9693999999993717e-05, 2.0235999999999865e-05, 1.969500000000013e-05, 1.9708000000000225e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 18:28:55.053" endtime="20201030 18:28:55.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.073" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.070" endtime="20201030 18:28:55.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.078" level="INFO">VALUE: [2.023699999999934e-05, 1.918100000000006e-05, 1.969500000000013e-05, 2.026299999999953e-05, 1.9693999999993717e-05, 2.0235999999999865e-05, 1.969500000000013e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0194000000001155e-05, 1.966700000000099e-05, 1.966700000000099e-05, 2.0235999999999865e-05, 1.9694000000000655e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 2.0249999999999435e-05, 1.9723000000006208e-05, 1.916700000000049e-05, 1.972299999999927e-05, 1.918100000000006e-05, 1.97089999999997e-05, 2.0235999999999865e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0166000000002016e-05, 1.9708000000000225e-05, 1.969500000000013e-05, 2.022299999999977e-05, 1.976299999999903e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9709000000006638e-05, 1.9708000000000225e-05, 1.9708000000000225e-05, 2.0222000000000295e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 2.023699999999934e-05, 1.9694000000000655e-05, 2.0235999999999865e-05, 1.9179999999993647e-05, 1.9723000000006208e-05, 1.9708000000000225e-05, 1.97089999999997e-05, 1.9180000000000585e-05, 1.9721999999999795e-05, 1.97089999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.075" endtime="20201030 18:28:55.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.064" endtime="20201030 18:28:55.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.091" endtime="20201030 18:28:55.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.086" endtime="20201030 18:28:55.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.084" endtime="20201030 18:28:55.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.582" endtime="20201030 18:28:55.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.580" endtime="20201030 18:28:55.115"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.138" endtime="20201030 18:28:55.156"></status>
</kw>
<msg timestamp="20201030 18:28:55.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.134" endtime="20201030 18:28:55.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.159" endtime="20201030 18:28:55.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.166" endtime="20201030 18:28:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.127" endtime="20201030 18:28:55.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.122" endtime="20201030 18:28:55.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.189" endtime="20201030 18:28:55.547"></status>
</kw>
<msg timestamp="20201030 18:28:55.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040879528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.186" endtime="20201030 18:28:55.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040879528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040900278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.556" endtime="20201030 18:28:55.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.575" endtime="20201030 18:28:55.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.179" endtime="20201030 18:28:55.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.174" endtime="20201030 18:28:55.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.592" level="INFO">${RESULT} = [{'diff': 2.0749999999999935e-05}, {'diff': 2.130499999999924e-05}, {'diff': 2.0777999999999075e-05}, {'diff': 2.080499999999874e-05}, {'diff': 2.076300000000003e-05}, {'diff': 2.1277999999999575e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:55.583" endtime="20201030 18:28:55.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:55.604" level="INFO">${ACCURACY} = {'diff': [2.0749999999999935e-05, 2.130499999999924e-05, 2.0777999999999075e-05, 2.080499999999874e-05, 2.076300000000003e-05, 2.1277999999999575e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:55.595" endtime="20201030 18:28:55.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.615" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:28:55.613" endtime="20201030 18:28:55.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.621" level="INFO">VALUE: [2.0749999999999935e-05, 2.130499999999924e-05, 2.0777999999999075e-05, 2.080499999999874e-05, 2.076300000000003e-05, 2.1277999999999575e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2.0263999999999005e-05, 2.0763999999999505e-05, 2.0180000000001586e-05, 2.0763999999999505e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.133299999999838e-05, 2.0777999999999075e-05, 2.0735999999993426e-05, 2.0764000000006444e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0263999999999005e-05, 2.022299999999977e-05, 2.0749999999999935e-05, 2.129099999999967e-05, 2.1291999999999145e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0736000000000365e-05, 2.023699999999934e-05, 2.0805999999998215e-05, 2.0736000000000365e-05, 2.129099999999967e-05, 2.137499999999709e-05, 2.129099999999967e-05, 2.0749999999999935e-05, 2.130499999999924e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0735999999993426e-05, 2.0777999999999075e-05, 2.0764000000006444e-05, 2.129099999999967e-05, 2.07769999999996e-05, 2.0763999999999505e-05, 2.0763999999999505e-05, 2.0235999999999865e-05, 2.0763999999999505e-05, 2.0249999999999435e-05, 2.1277999999999575e-05, 2.0777999999999075e-05]</msg>
<status status="PASS" starttime="20201030 18:28:55.617" endtime="20201030 18:28:55.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.606" endtime="20201030 18:28:55.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.633" endtime="20201030 18:28:55.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.629" endtime="20201030 18:28:55.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.626" endtime="20201030 18:28:55.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.117" endtime="20201030 18:28:55.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.116" endtime="20201030 18:28:55.658"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.681" endtime="20201030 18:28:55.700"></status>
</kw>
<msg timestamp="20201030 18:28:55.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.678" endtime="20201030 18:28:55.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.704" endtime="20201030 18:28:55.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.710" endtime="20201030 18:28:55.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.671" endtime="20201030 18:28:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.665" endtime="20201030 18:28:55.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.734" endtime="20201030 18:28:56.077"></status>
</kw>
<msg timestamp="20201030 18:28:56.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041637236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.730" endtime="20201030 18:28:56.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041637236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041658556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.087" endtime="20201030 18:28:56.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.106" endtime="20201030 18:28:56.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.723" endtime="20201030 18:28:56.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.718" endtime="20201030 18:28:56.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.123" level="INFO">${RESULT} = [{'diff': 2.1319999999998285e-05}, {'diff': 2.1820000000005724e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.1791999999999645e-05}, {'diff': 2.1805999999999215e-05}, {'diff': 2.181900000000625e-05...</msg>
<status status="PASS" starttime="20201030 18:28:56.115" endtime="20201030 18:28:56.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.133" level="INFO">${ACCURACY} = {'diff': [2.1319999999998285e-05, 2.1820000000005724e-05, 2.181899999999931e-05, 2.1791999999999645e-05, 2.1805999999999215e-05, 2.181900000000625e-05, 2.1819999999998785e-05, 2.183299999999888e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:28:56.126" endtime="20201030 18:28:56.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.144" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.142" endtime="20201030 18:28:56.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.150" level="INFO">VALUE: [2.1319999999998285e-05, 2.1820000000005724e-05, 2.181899999999931e-05, 2.1791999999999645e-05, 2.1805999999999215e-05, 2.181900000000625e-05, 2.1819999999998785e-05, 2.183299999999888e-05, 2.234700000000589e-05, 2.1819999999998785e-05, 2.183300000000582e-05, 2.1805999999999215e-05, 2.1277999999999575e-05, 2.184699999999845e-05, 2.1291999999999145e-05, 2.12770000000001e-05, 2.1291999999999145e-05, 2.234699999999895e-05, 2.181900000000625e-05, 2.234700000000589e-05, 2.234699999999895e-05, 2.1805999999999215e-05, 2.1291999999999145e-05, 2.1833999999998355e-05, 2.1333999999997855e-05, 2.1764000000000505e-05, 2.181899999999931e-05, 2.129099999999967e-05, 2.130500000000618e-05, 2.180499999999974e-05, 2.1291999999999145e-05, 2.181899999999931e-05, 2.183299999999888e-05, 2.1277999999999575e-05, 2.234699999999895e-05, 2.130499999999924e-05, 2.1305999999998715e-05, 2.1277999999999575e-05, 2.1834000000005294e-05, 2.1819999999998785e-05, 2.181899999999931e-05, 2.1819999999998785e-05, 2.181899999999931e-05, 2.234699999999895e-05, 2.231899999999981e-05, 2.1277999999999575e-05, 2.234699999999895e-05, 2.1833999999998355e-05, 2.1291999999999145e-05, 2.1819999999998785e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.147" endtime="20201030 18:28:56.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.135" endtime="20201030 18:28:56.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.162" endtime="20201030 18:28:56.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.158" endtime="20201030 18:28:56.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.156" endtime="20201030 18:28:56.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.661" endtime="20201030 18:28:56.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.659" endtime="20201030 18:28:56.187"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.210" endtime="20201030 18:28:56.231"></status>
</kw>
<msg timestamp="20201030 18:28:56.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.207" endtime="20201030 18:28:56.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.235" endtime="20201030 18:28:56.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.241" endtime="20201030 18:28:56.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.200" endtime="20201030 18:28:56.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.194" endtime="20201030 18:28:56.248"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.266" endtime="20201030 18:28:56.607"></status>
</kw>
<msg timestamp="20201030 18:28:56.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.262" endtime="20201030 18:28:56.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.617" endtime="20201030 18:28:56.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.636" endtime="20201030 18:28:56.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.254" endtime="20201030 18:28:56.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.249" endtime="20201030 18:28:56.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:56.653" level="INFO">${RESULT} = [{'diff': 2.288899999999816e-05}, {'diff': 2.284699999999945e-05}, {'diff': 2.2347999999998425e-05}, {'diff': 2.2334000000005794e-05}, {'diff': 2.286100000000596e-05}, {'diff': 2.340300000000517e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:56.644" endtime="20201030 18:28:56.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:56.663" level="INFO">${ACCURACY} = {'diff': [2.288899999999816e-05, 2.284699999999945e-05, 2.2347999999998425e-05, 2.2334000000005794e-05, 2.286100000000596e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.24169999999968e-05, 2.2887...</msg>
<status status="PASS" starttime="20201030 18:28:56.656" endtime="20201030 18:28:56.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.674" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:28:56.672" endtime="20201030 18:28:56.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.679" level="INFO">VALUE: [2.288899999999816e-05, 2.284699999999945e-05, 2.2347999999998425e-05, 2.2334000000005794e-05, 2.286100000000596e-05, 2.340300000000517e-05, 2.34169999999978e-05, 2.24169999999968e-05, 2.2887999999998687e-05, 2.234699999999895e-05, 2.287500000000553e-05, 2.234699999999895e-05, 2.288899999999816e-05, 2.23890000000046e-05, 2.286099999999902e-05, 2.234699999999895e-05, 2.290299999999773e-05, 2.2333999999998855e-05, 2.236099999999852e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.2334000000005794e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2416000000004266e-05, 2.2347999999998425e-05, 2.341700000000474e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.287499999999859e-05, 2.2347999999998425e-05, 2.287499999999859e-05, 2.2929999999997397e-05, 2.288899999999816e-05, 2.3443999999997467e-05, 2.287499999999859e-05, 2.234699999999895e-05, 2.288899999999816e-05, 2.288899999999816e-05, 2.236100000000546e-05, 2.287500000000553e-05, 2.28890000000051e-05, 2.238899999999766e-05, 2.34169999999978e-05, 2.2333999999998855e-05, 2.2361999999997995e-05, 2.2929999999997397e-05, 2.234700000000589e-05, 2.233299999999938e-05, 2.2861999999998495e-05]</msg>
<status status="PASS" starttime="20201030 18:28:56.676" endtime="20201030 18:28:56.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.665" endtime="20201030 18:28:56.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:56.694" endtime="20201030 18:28:56.715"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.688" endtime="20201030 18:28:56.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.685" endtime="20201030 18:28:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.189" endtime="20201030 18:28:56.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.188" endtime="20201030 18:28:56.719"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.742" endtime="20201030 18:28:56.760"></status>
</kw>
<msg timestamp="20201030 18:28:56.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.738" endtime="20201030 18:28:56.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:56.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:56.764" endtime="20201030 18:28:56.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.770" endtime="20201030 18:28:56.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.731" endtime="20201030 18:28:56.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.725" endtime="20201030 18:28:56.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:56.794" endtime="20201030 18:28:57.131"></status>
</kw>
<msg timestamp="20201030 18:28:57.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:56.790" endtime="20201030 18:28:57.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041312875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.141" endtime="20201030 18:28:57.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.160" endtime="20201030 18:28:57.164"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.783" endtime="20201030 18:28:57.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.778" endtime="20201030 18:28:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.178" level="INFO">${RESULT} = [{'diff': 3.4652999999995604e-05}, {'diff': 3.511100000000433e-05}, {'diff': 3.4582999999997754e-05}, {'diff': 3.522200000000142e-05}, {'diff': 3.522200000000142e-05}, {'diff': 3.5374999999997214e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:57.169" endtime="20201030 18:28:57.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.189" level="INFO">${ACCURACY} = {'diff': [3.4652999999995604e-05, 3.511100000000433e-05, 3.4582999999997754e-05, 3.522200000000142e-05, 3.522200000000142e-05, 3.5374999999997214e-05, 3.5124999999996964e-05, 3.477800000000614e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:28:57.180" endtime="20201030 18:28:57.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.200" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.197" endtime="20201030 18:28:57.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.206" level="INFO">VALUE: [3.4652999999995604e-05, 3.511100000000433e-05, 3.4582999999997754e-05, 3.522200000000142e-05, 3.522200000000142e-05, 3.5374999999997214e-05, 3.5124999999996964e-05, 3.477800000000614e-05, 3.501399999999988e-05, 3.544399999999559e-05, 3.454199999999852e-05, 3.5374999999997214e-05, 3.455599999999809e-05, 3.511100000000433e-05, 3.522300000000089e-05, 3.509700000000476e-05, 3.4874999999996714e-05, 3.5277000000000225e-05, 3.501399999999988e-05, 3.494400000000203e-05, 3.491600000000289e-05, 3.544400000000253e-05, 3.523600000000099e-05, 3.5346999999998074e-05, 3.54580000000021e-05, 3.533300000000544e-05, 3.490199999999638e-05, 3.465199999999613e-05, 3.4818999999998435e-05, 3.467999999999527e-05, 3.4832999999998004e-05, 3.4568999999998185e-05, 3.4554999999998615e-05, 3.522200000000142e-05, 3.477800000000614e-05, 3.522199999999448e-05, 3.454199999999852e-05, 3.522200000000142e-05, 3.523600000000099e-05, 3.51250000000039e-05, 3.4666999999995174e-05, 3.5458999999994634e-05, 3.492999999999552e-05, 3.500000000000031e-05, 3.522300000000089e-05, 3.511100000000433e-05, 3.520900000000132e-05, 3.4666999999995174e-05, 3.547200000000167e-05, 3.511199999999687e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.202" endtime="20201030 18:28:57.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.190" endtime="20201030 18:28:57.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.218" endtime="20201030 18:28:57.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.214" endtime="20201030 18:28:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.211" endtime="20201030 18:28:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.721" endtime="20201030 18:28:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:56.720" endtime="20201030 18:28:57.243"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.266" endtime="20201030 18:28:57.286"></status>
</kw>
<msg timestamp="20201030 18:28:57.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.263" endtime="20201030 18:28:57.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.289" endtime="20201030 18:28:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.296" endtime="20201030 18:28:57.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.256" endtime="20201030 18:28:57.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.250" endtime="20201030 18:28:57.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.321" endtime="20201030 18:28:57.661"></status>
</kw>
<msg timestamp="20201030 18:28:57.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.317" endtime="20201030 18:28:57.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041879097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:57.670" endtime="20201030 18:28:57.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.689" endtime="20201030 18:28:57.693"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.310" endtime="20201030 18:28:57.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.305" endtime="20201030 18:28:57.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:57.707" level="INFO">${RESULT} = [{'diff': 3.6402999999997354e-05}, {'diff': 3.56659999999967e-05}, {'diff': 3.5874999999997714e-05}, {'diff': 3.568100000000268e-05}, {'diff': 3.579199999999977e-05}, {'diff': 3.57780000000002e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:57.698" endtime="20201030 18:28:57.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:57.718" level="INFO">${ACCURACY} = {'diff': [3.6402999999997354e-05, 3.56659999999967e-05, 3.5874999999997714e-05, 3.568100000000268e-05, 3.579199999999977e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.5888999999997284e-05, 3.568...</msg>
<status status="PASS" starttime="20201030 18:28:57.709" endtime="20201030 18:28:57.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.729" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:28:57.727" endtime="20201030 18:28:57.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.735" level="INFO">VALUE: [3.6402999999997354e-05, 3.56659999999967e-05, 3.5874999999997714e-05, 3.568100000000268e-05, 3.579199999999977e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.5888999999997284e-05, 3.568100000000268e-05, 3.568100000000268e-05, 3.5652999999996604e-05, 3.600000000000131e-05, 3.586100000000508e-05, 3.5666999999996174e-05, 3.600000000000131e-05, 3.600000000000131e-05, 3.5680999999995744e-05, 3.5888999999997284e-05, 3.5666999999996174e-05, 3.6027000000000975e-05, 3.588800000000475e-05, 3.5776999999993786e-05, 3.601400000000088e-05, 3.604200000000002e-05, 3.5791000000000295e-05, 3.600000000000131e-05, 3.644400000000353e-05, 3.57780000000002e-05, 3.6333000000006443e-05, 3.601399999999394e-05, 3.6360999999998644e-05, 3.569500000000225e-05, 3.611100000000533e-05, 3.588900000000422e-05, 3.623600000000199e-05, 3.600000000000131e-05, 3.555599999999909e-05, 3.5888999999997284e-05, 3.631999999999941e-05, 3.6096999999998824e-05, 3.556999999999866e-05, 3.6110999999998394e-05, 3.5666999999996174e-05, 3.554199999999952e-05, 3.5818999999999435e-05, 3.570800000000235e-05, 3.5833000000005943e-05, 3.6166999999996674e-05, 3.573600000000149e-05, 3.5568999999999185e-05]</msg>
<status status="PASS" starttime="20201030 18:28:57.732" endtime="20201030 18:28:57.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.720" endtime="20201030 18:28:57.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:57.747" endtime="20201030 18:28:57.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.743" endtime="20201030 18:28:57.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.740" endtime="20201030 18:28:57.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.245" endtime="20201030 18:28:57.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.244" endtime="20201030 18:28:57.772"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.795" endtime="20201030 18:28:57.815"></status>
</kw>
<msg timestamp="20201030 18:28:57.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.792" endtime="20201030 18:28:57.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:57.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:57.818" endtime="20201030 18:28:57.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.824" endtime="20201030 18:28:57.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.785" endtime="20201030 18:28:57.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.779" endtime="20201030 18:28:57.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:57.848" endtime="20201030 18:28:58.192"></status>
</kw>
<msg timestamp="20201030 18:28:58.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04161225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:57.845" endtime="20201030 18:28:58.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04161225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:58.202" endtime="20201030 18:28:58.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.221" endtime="20201030 18:28:58.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.837" endtime="20201030 18:28:58.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.833" endtime="20201030 18:28:58.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.238" level="INFO">${RESULT} = [{'diff': 3.6846999999999575e-05}, {'diff': 3.7416999999997924e-05}, {'diff': 3.6888999999998284e-05}, {'diff': 3.720799999999691e-05}, {'diff': 3.668100000000368e-05}, {'diff': 3.668100000000368e-05}...</msg>
<status status="PASS" starttime="20201030 18:28:58.229" endtime="20201030 18:28:58.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.248" level="INFO">${ACCURACY} = {'diff': [3.6846999999999575e-05, 3.7416999999997924e-05, 3.6888999999998284e-05, 3.720799999999691e-05, 3.668100000000368e-05, 3.668100000000368e-05, 3.744399999999759e-05, 3.697200000000317e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 18:28:58.240" endtime="20201030 18:28:58.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.259" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.257" endtime="20201030 18:28:58.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.264" level="INFO">VALUE: [3.6846999999999575e-05, 3.7416999999997924e-05, 3.6888999999998284e-05, 3.720799999999691e-05, 3.668100000000368e-05, 3.668100000000368e-05, 3.744399999999759e-05, 3.697200000000317e-05, 3.733399999999998e-05, 3.699999999999537e-05, 3.658399999999923e-05, 3.6819000000000435e-05, 3.666700000000411e-05, 3.7124999999998964e-05, 3.669399999999684e-05, 3.725000000000256e-05, 3.6582999999999755e-05, 3.723600000000299e-05, 3.655600000000009e-05, 3.667999999999727e-05, 3.7347000000000075e-05, 3.745799999999716e-05, 3.6569000000000185e-05, 3.6888999999998284e-05, 3.701400000000188e-05, 3.711100000000633e-05, 3.669399999999684e-05, 3.699999999999537e-05, 3.720799999999691e-05, 3.744400000000453e-05, 3.7416999999997924e-05, 3.7333000000000505e-05, 3.7333000000000505e-05, 3.680600000000034e-05, 3.677799999999426e-05, 3.6708999999995884e-05, 3.656999999999966e-05, 3.7110999999999394e-05, 3.655600000000009e-05, 3.7305000000001365e-05, 3.700000000000231e-05, 3.7208999999996384e-05, 3.681999999999991e-05, 3.701400000000188e-05, 3.654200000000052e-05, 3.6569000000000185e-05, 3.665199999999813e-05, 3.723600000000299e-05, 3.7347000000000075e-05, 3.66659999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.261" endtime="20201030 18:28:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.249" endtime="20201030 18:28:58.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.277" endtime="20201030 18:28:58.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.273" endtime="20201030 18:28:58.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.270" endtime="20201030 18:28:58.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.775" endtime="20201030 18:28:58.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:57.773" endtime="20201030 18:28:58.302"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.326" endtime="20201030 18:28:58.347"></status>
</kw>
<msg timestamp="20201030 18:28:58.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.322" endtime="20201030 18:28:58.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.351" endtime="20201030 18:28:58.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.358" endtime="20201030 18:28:58.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.315" endtime="20201030 18:28:58.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.309" endtime="20201030 18:28:58.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.381" endtime="20201030 18:28:58.719"></status>
</kw>
<msg timestamp="20201030 18:28:58.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044143764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044182153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.378" endtime="20201030 18:28:58.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044143764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044182153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.728" endtime="20201030 18:28:58.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.747" endtime="20201030 18:28:58.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.371" endtime="20201030 18:28:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.366" endtime="20201030 18:28:58.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:58.765" level="INFO">${RESULT} = [{'diff': 3.8388999999999784e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.78059999999944e-05}, {'diff': 3.811199999999987e-05}, {'diff': 3.834800000000055e-05}, {'diff': 3.777799999999526e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:58.756" endtime="20201030 18:28:58.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:58.774" level="INFO">${ACCURACY} = {'diff': [3.8388999999999784e-05, 3.7888999999999284e-05, 3.78059999999944e-05, 3.811199999999987e-05, 3.834800000000055e-05, 3.777799999999526e-05, 3.80980000000003e-05, 3.8333000000001505e-05, 3.790...</msg>
<status status="PASS" starttime="20201030 18:28:58.767" endtime="20201030 18:28:58.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.786" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:28:58.783" endtime="20201030 18:28:58.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.791" level="INFO">VALUE: [3.8388999999999784e-05, 3.7888999999999284e-05, 3.78059999999944e-05, 3.811199999999987e-05, 3.834800000000055e-05, 3.777799999999526e-05, 3.80980000000003e-05, 3.8333000000001505e-05, 3.790199999999938e-05, 3.798600000000374e-05, 3.8111000000000395e-05, 3.7902999999998854e-05, 3.774999999999612e-05, 3.800000000000331e-05, 3.79859999999968e-05, 3.822199999999748e-05, 3.7861000000000145e-05, 3.822199999999748e-05, 3.754200000000152e-05, 3.8124999999999964e-05, 3.7666999999998174e-05, 3.755600000000109e-05, 3.7666999999998174e-05, 3.8111000000000395e-05, 3.757000000000066e-05, 3.7610999999999895e-05, 3.84859999999973e-05, 3.7902999999998854e-05, 3.798600000000374e-05, 3.8124999999999964e-05, 3.7902999999998854e-05, 3.820799999999791e-05, 3.8333000000001505e-05, 3.8347000000001075e-05, 3.769400000000478e-05, 3.7847000000000575e-05, 3.7541000000002045e-05, 3.7569000000001185e-05, 3.8388999999999784e-05, 3.7861000000000145e-05, 3.79859999999968e-05, 3.7569000000001185e-05, 3.7888999999999284e-05, 3.79859999999968e-05, 3.7722999999996454e-05, 3.8096999999993886e-05, 3.780600000000134e-05, 3.8444999999998064e-05, 3.8111000000000395e-05, 3.7888999999999284e-05]</msg>
<status status="PASS" starttime="20201030 18:28:58.788" endtime="20201030 18:28:58.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.776" endtime="20201030 18:28:58.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:58.806" endtime="20201030 18:28:58.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.800" endtime="20201030 18:28:58.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.797" endtime="20201030 18:28:58.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.304" endtime="20201030 18:28:58.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.303" endtime="20201030 18:28:58.831"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.854" endtime="20201030 18:28:58.873"></status>
</kw>
<msg timestamp="20201030 18:28:58.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.851" endtime="20201030 18:28:58.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:58.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:58.877" endtime="20201030 18:28:58.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.883" endtime="20201030 18:28:58.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.843" endtime="20201030 18:28:58.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.838" endtime="20201030 18:28:58.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:58.907" endtime="20201030 18:28:59.244"></status>
</kw>
<msg timestamp="20201030 18:28:59.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:58.903" endtime="20201030 18:28:59.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041621847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041660639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.254" endtime="20201030 18:28:59.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.273" endtime="20201030 18:28:59.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.896" endtime="20201030 18:28:59.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.891" endtime="20201030 18:28:59.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.290" level="INFO">${RESULT} = [{'diff': 3.879200000000277e-05}, {'diff': 3.9110999999994456e-05}, {'diff': 3.900000000000431e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.9111000000001395e-05}, {'diff': 3.87780000000032e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:59.281" endtime="20201030 18:28:59.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.301" level="INFO">${ACCURACY} = {'diff': [3.879200000000277e-05, 3.9110999999994456e-05, 3.900000000000431e-05, 3.8902999999999854e-05, 3.9111000000001395e-05, 3.87780000000032e-05, 3.900000000000431e-05, 3.901399999999694e-05, 3.86...</msg>
<status status="PASS" starttime="20201030 18:28:59.292" endtime="20201030 18:28:59.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.312" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.310" endtime="20201030 18:28:59.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.318" level="INFO">VALUE: [3.879200000000277e-05, 3.9110999999994456e-05, 3.900000000000431e-05, 3.8902999999999854e-05, 3.9111000000001395e-05, 3.87780000000032e-05, 3.900000000000431e-05, 3.901399999999694e-05, 3.8639000000000034e-05, 3.94580000000061e-05, 3.865200000000013e-05, 3.9332999999995566e-05, 3.8875000000000715e-05, 3.8819000000002435e-05, 3.86659999999997e-05, 3.877799999999626e-05, 3.869399999999884e-05, 3.8569000000002185e-05, 3.8833000000002005e-05, 3.897199999999823e-05, 3.8666999999999174e-05, 3.9125000000000965e-05, 3.8902999999999854e-05, 3.8680999999998744e-05, 3.8666999999999174e-05, 3.879199999999583e-05, 3.8680999999998744e-05, 3.872199999999798e-05, 3.87780000000032e-05, 3.9403000000000354e-05, 3.9430999999999494e-05, 3.920900000000532e-05, 3.857000000000166e-05, 3.9139000000000534e-05, 3.926399999999719e-05, 3.8875000000000715e-05, 3.8791000000003295e-05, 3.8777000000003725e-05, 3.879200000000277e-05, 3.86659999999997e-05, 3.8791000000003295e-05, 3.8652999999999604e-05, 3.8875000000000715e-05, 3.9111000000001395e-05, 3.8875000000000715e-05, 3.879199999999583e-05, 3.9111000000001395e-05, 3.9430999999999494e-05, 3.880600000000234e-05, 3.947300000000514e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.315" endtime="20201030 18:28:59.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.303" endtime="20201030 18:28:59.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.331" endtime="20201030 18:28:59.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.326" endtime="20201030 18:28:59.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.323" endtime="20201030 18:28:59.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.833" endtime="20201030 18:28:59.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:58.832" endtime="20201030 18:28:59.356"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.380" endtime="20201030 18:28:59.400"></status>
</kw>
<msg timestamp="20201030 18:28:59.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.376" endtime="20201030 18:28:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.403" endtime="20201030 18:28:59.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.410" endtime="20201030 18:28:59.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.369" endtime="20201030 18:28:59.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.363" endtime="20201030 18:28:59.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.434" endtime="20201030 18:28:59.773"></status>
</kw>
<msg timestamp="20201030 18:28:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043262347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.430" endtime="20201030 18:28:59.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043262347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.782" endtime="20201030 18:28:59.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.801" endtime="20201030 18:28:59.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.423" endtime="20201030 18:28:59.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.418" endtime="20201030 18:28:59.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:59.818" level="INFO">${RESULT} = [{'diff': 4.0403000000001354e-05}, {'diff': 4.0096999999995886e-05}, {'diff': 4.047199999999973e-05}, {'diff': 3.9555000000003615e-05}, {'diff': 4.000000000000531e-05}, {'diff': 4.0111000000002395e-05...</msg>
<status status="PASS" starttime="20201030 18:28:59.809" endtime="20201030 18:28:59.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:28:59.829" level="INFO">${ACCURACY} = {'diff': [4.0403000000001354e-05, 4.0096999999995886e-05, 4.047199999999973e-05, 3.9555000000003615e-05, 4.000000000000531e-05, 4.0111000000002395e-05, 4.0125000000001965e-05, 3.9888999999994346e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:59.820" endtime="20201030 18:28:59.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.840" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:28:59.838" endtime="20201030 18:28:59.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.845" level="INFO">VALUE: [4.0403000000001354e-05, 4.0096999999995886e-05, 4.047199999999973e-05, 3.9555000000003615e-05, 4.000000000000531e-05, 4.0111000000002395e-05, 4.0125000000001965e-05, 3.9888999999994346e-05, 3.9680999999999744e-05, 4.002799999999751e-05, 3.9680999999999744e-05, 3.984799999999511e-05, 4.0431000000000494e-05, 3.9694999999999314e-05, 3.9667000000000174e-05, 3.955600000000309e-05, 3.9694999999999314e-05, 3.9611000000001895e-05, 4.033400000000298e-05, 3.9667000000000174e-05, 4.031999999999647e-05, 3.988799999999487e-05, 3.991600000000095e-05, 3.988800000000181e-05, 4.001400000000488e-05, 3.9903000000000854e-05, 3.9889000000001285e-05, 3.9541000000004045e-05, 4.023599999999905e-05, 3.9903000000000854e-05, 3.9944999999999564e-05, 4.0346999999996136e-05, 3.9583000000002755e-05, 3.9889000000001285e-05, 4.0125000000001965e-05, 3.952799999999701e-05, 3.999999999999837e-05, 4.001399999999794e-05, 3.954199999999658e-05, 3.9694999999999314e-05, 3.9847000000002575e-05, 3.9889000000001285e-05, 3.955600000000309e-05, 3.968000000000027e-05, 4.051400000000538e-05, 3.991600000000095e-05, 3.988799999999487e-05, 3.9776999999997786e-05, 3.9555000000003615e-05, 3.993000000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:28:59.842" endtime="20201030 18:28:59.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.831" endtime="20201030 18:28:59.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.858" endtime="20201030 18:28:59.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.853" endtime="20201030 18:28:59.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.851" endtime="20201030 18:28:59.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.358" endtime="20201030 18:28:59.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.357" endtime="20201030 18:28:59.883"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.905" endtime="20201030 18:28:59.925"></status>
</kw>
<msg timestamp="20201030 18:28:59.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.902" endtime="20201030 18:28:59.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:59.928" endtime="20201030 18:28:59.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.934" endtime="20201030 18:28:59.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.895" endtime="20201030 18:28:59.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.889" endtime="20201030 18:28:59.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:59.957" endtime="20201030 18:29:00.292"></status>
</kw>
<msg timestamp="20201030 18:29:00.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:59.954" endtime="20201030 18:29:00.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040720042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.301" endtime="20201030 18:29:00.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.320" endtime="20201030 18:29:00.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.947" endtime="20201030 18:29:00.325"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.942" endtime="20201030 18:29:00.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.337" level="INFO">${RESULT} = [{'diff': 4.065200000000213e-05}, {'diff': 4.055600000000409e-05}, {'diff': 4.069400000000084e-05}, {'diff': 4.0625000000002465e-05}, {'diff': 4.057000000000366e-05}, {'diff': 4.1012999999999467e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:00.328" endtime="20201030 18:29:00.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.346" level="INFO">${ACCURACY} = {'diff': [4.065200000000213e-05, 4.055600000000409e-05, 4.069400000000084e-05, 4.0625000000002465e-05, 4.057000000000366e-05, 4.1012999999999467e-05, 4.0889000000002285e-05, 4.122200000000048e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 18:29:00.339" endtime="20201030 18:29:00.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.357" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.355" endtime="20201030 18:29:00.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.362" level="INFO">VALUE: [4.065200000000213e-05, 4.055600000000409e-05, 4.069400000000084e-05, 4.0625000000002465e-05, 4.057000000000366e-05, 4.1012999999999467e-05, 4.0889000000002285e-05, 4.122200000000048e-05, 4.088800000000281e-05, 4.0790999999998356e-05, 4.123600000000005e-05, 4.144400000000159e-05, 4.147200000000073e-05, 4.119400000000134e-05, 4.0569000000004185e-05, 4.0554999999997676e-05, 4.099999999999937e-05, 4.124999999999962e-05, 4.0888999999995346e-05, 4.13059999999979e-05, 4.09859999999998e-05, 4.0681000000000744e-05, 4.1346999999997136e-05, 4.1444999999994125e-05, 4.0903000000001855e-05, 4.0861000000003145e-05, 4.091599999999501e-05, 4.0902999999994916e-05, 4.0972999999999704e-05, 4.052800000000495e-05, 4.1012999999999467e-05, 4.126399999999919e-05, 4.140200000000288e-05, 4.145800000000116e-05, 4.1347000000004075e-05, 4.0889000000002285e-05, 4.144400000000159e-05, 4.120800000000091e-05, 4.144400000000159e-05, 4.122200000000048e-05, 4.0569000000004185e-05, 4.0903000000001855e-05, 4.124999999999962e-05, 4.1332999999997566e-05, 4.056999999999672e-05, 4.1346999999997136e-05, 4.1124999999996026e-05, 4.134799999999661e-05, 4.052799999999801e-05, 4.08059999999974e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.359" endtime="20201030 18:29:00.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.348" endtime="20201030 18:29:00.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.375" endtime="20201030 18:29:00.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.371" endtime="20201030 18:29:00.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.368" endtime="20201030 18:29:00.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.885" endtime="20201030 18:29:00.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.883" endtime="20201030 18:29:00.401"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.427" endtime="20201030 18:29:00.449"></status>
</kw>
<msg timestamp="20201030 18:29:00.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.423" endtime="20201030 18:29:00.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.452" endtime="20201030 18:29:00.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.459" endtime="20201030 18:29:00.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.415" endtime="20201030 18:29:00.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.408" endtime="20201030 18:29:00.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.484" endtime="20201030 18:29:00.843"></status>
</kw>
<msg timestamp="20201030 18:29:00.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047172167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.480" endtime="20201030 18:29:00.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047172167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047214347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:00.854" endtime="20201030 18:29:00.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.873" endtime="20201030 18:29:00.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.473" endtime="20201030 18:29:00.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.468" endtime="20201030 18:29:00.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:00.892" level="INFO">${RESULT} = [{'diff': 4.217999999999583e-05}, {'diff': 4.206999999999822e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.2125000000003965e-05}, {'diff': 4.23059999999989e-05}, {'diff': 4.1888999999996346e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:00.882" endtime="20201030 18:29:00.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:00.902" level="INFO">${ACCURACY} = {'diff': [4.217999999999583e-05, 4.206999999999822e-05, 4.200000000000037e-05, 4.2125000000003965e-05, 4.23059999999989e-05, 4.1888999999996346e-05, 4.177799999999926e-05, 4.1652999999995666e-05, 4.16...</msg>
<status status="PASS" starttime="20201030 18:29:00.894" endtime="20201030 18:29:00.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.913" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:00.911" endtime="20201030 18:29:00.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:00.919" level="INFO">VALUE: [4.217999999999583e-05, 4.206999999999822e-05, 4.200000000000037e-05, 4.2125000000003965e-05, 4.23059999999989e-05, 4.1888999999996346e-05, 4.177799999999926e-05, 4.1652999999995666e-05, 4.1680999999994806e-05, 4.200000000000037e-05, 4.152800000000595e-05, 4.202799999999951e-05, 4.155599999999815e-05, 4.233399999999804e-05, 4.200000000000037e-05, 4.1888999999996346e-05, 4.222200000000148e-05, 4.2346999999998136e-05, 4.16660000000027e-05, 4.2124999999997026e-05, 4.1639000000003035e-05, 4.1917000000002425e-05, 4.200000000000037e-05, 4.1874999999996776e-05, 4.1554999999998676e-05, 4.200000000000037e-05, 4.229199999999933e-05, 4.2110999999997456e-05, 4.155599999999815e-05, 4.205600000000559e-05, 4.222200000000148e-05, 4.2445000000002064e-05, 4.179199999999883e-05, 4.1666999999995236e-05, 4.201399999999994e-05, 4.177799999999926e-05, 4.156999999999772e-05, 4.23059999999989e-05, 4.200000000000037e-05, 4.1987000000000274e-05, 4.1860999999997206e-05, 4.2054999999999176e-05, 4.200000000000037e-05, 4.1555000000005615e-05, 4.176399999999969e-05, 4.2139000000003535e-05, 4.2139000000003535e-05, 4.167999999999533e-05, 4.154199999999858e-05, 4.2110999999997456e-05]</msg>
<status status="PASS" starttime="20201030 18:29:00.916" endtime="20201030 18:29:00.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.904" endtime="20201030 18:29:00.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:00.939" endtime="20201030 18:29:00.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.928" endtime="20201030 18:29:00.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.925" endtime="20201030 18:29:00.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.403" endtime="20201030 18:29:00.964"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.402" endtime="20201030 18:29:00.964"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.988" endtime="20201030 18:29:01.009"></status>
</kw>
<msg timestamp="20201030 18:29:01.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.985" endtime="20201030 18:29:01.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.012" endtime="20201030 18:29:01.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.019" endtime="20201030 18:29:01.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.977" endtime="20201030 18:29:01.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.971" endtime="20201030 18:29:01.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.044" endtime="20201030 18:29:01.418"></status>
</kw>
<msg timestamp="20201030 18:29:01.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.040" endtime="20201030 18:29:01.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043251486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043294722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.439" endtime="20201030 18:29:01.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.469" endtime="20201030 18:29:01.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.033" endtime="20201030 18:29:01.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.028" endtime="20201030 18:29:01.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:01.487" level="INFO">${RESULT} = [{'diff': 4.323600000000205e-05}, {'diff': 4.277700000000079e-05}, {'diff': 4.3346999999999136e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.3111000000005395e-05}, {'diff': 4.2874999999997776e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:01.478" endtime="20201030 18:29:01.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:01.574" level="INFO">${ACCURACY} = {'diff': [4.323600000000205e-05, 4.277700000000079e-05, 4.3346999999999136e-05, 4.277800000000026e-05, 4.3111000000005395e-05, 4.2874999999997776e-05, 4.344400000000359e-05, 4.3444999999996126e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:01.489" endtime="20201030 18:29:01.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.585" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:01.583" endtime="20201030 18:29:01.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.591" level="INFO">VALUE: [4.323600000000205e-05, 4.277700000000079e-05, 4.3346999999999136e-05, 4.277800000000026e-05, 4.3111000000005395e-05, 4.2874999999997776e-05, 4.344400000000359e-05, 4.3444999999996126e-05, 4.3110999999998456e-05, 4.279199999999983e-05, 4.256999999999872e-05, 4.3430999999996556e-05, 4.322200000000248e-05, 4.2902999999996916e-05, 4.28059999999994e-05, 4.255600000000609e-05, 4.2681000000002745e-05, 4.3445000000003064e-05, 4.2666999999996236e-05, 4.3124999999998026e-05, 4.3125000000004965e-05, 4.300000000000137e-05, 4.319400000000334e-05, 4.300000000000137e-05, 4.279199999999983e-05, 4.26660000000037e-05, 4.2653000000003605e-05, 4.324999999999468e-05, 4.3110999999998456e-05, 4.3459000000002634e-05, 4.323599999999511e-05, 4.3096999999998886e-05, 4.301400000000094e-05, 4.299999999999443e-05, 4.3374999999998276e-05, 4.2653000000003605e-05, 4.33059999999999e-05, 4.2888999999997346e-05, 4.300000000000137e-05, 4.300000000000137e-05, 4.2818999999999496e-05, 4.331999999999947e-05, 4.322200000000248e-05, 4.3347000000006075e-05, 4.2846999999998636e-05, 4.277700000000079e-05, 4.3055000000000176e-05, 4.281999999999897e-05, 4.3124999999998026e-05, 4.301400000000094e-05]</msg>
<status status="PASS" starttime="20201030 18:29:01.587" endtime="20201030 18:29:01.592"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.576" endtime="20201030 18:29:01.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:01.603" endtime="20201030 18:29:01.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.599" endtime="20201030 18:29:01.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.596" endtime="20201030 18:29:01.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.967" endtime="20201030 18:29:01.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.965" endtime="20201030 18:29:01.628"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.651" endtime="20201030 18:29:01.671"></status>
</kw>
<msg timestamp="20201030 18:29:01.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.648" endtime="20201030 18:29:01.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:01.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:01.674" endtime="20201030 18:29:01.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.680" endtime="20201030 18:29:01.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.641" endtime="20201030 18:29:01.686"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.635" endtime="20201030 18:29:01.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:01.704" endtime="20201030 18:29:02.065"></status>
</kw>
<msg timestamp="20201030 18:29:02.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041704722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:01.700" endtime="20201030 18:29:02.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041661097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041704722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.075" endtime="20201030 18:29:02.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.094" endtime="20201030 18:29:02.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.693" endtime="20201030 18:29:02.100"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.689" endtime="20201030 18:29:02.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.111" level="INFO">${RESULT} = [{'diff': 4.3624999999998526e-05}, {'diff': 4.3596999999999386e-05}, {'diff': 4.444400000000459e-05}, {'diff': 4.3582999999999816e-05}, {'diff': 4.400000000000237e-05}, {'diff': 4.4347000000000136e-05...</msg>
<status status="PASS" starttime="20201030 18:29:02.102" endtime="20201030 18:29:02.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.121" level="INFO">${ACCURACY} = {'diff': [4.3624999999998526e-05, 4.3596999999999386e-05, 4.444400000000459e-05, 4.3582999999999816e-05, 4.400000000000237e-05, 4.4347000000000136e-05, 4.354200000000058e-05, 4.3888999999998346e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:29:02.114" endtime="20201030 18:29:02.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.132" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.130" endtime="20201030 18:29:02.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.138" level="INFO">VALUE: [4.3624999999998526e-05, 4.3596999999999386e-05, 4.444400000000459e-05, 4.3582999999999816e-05, 4.400000000000237e-05, 4.4347000000000136e-05, 4.354200000000058e-05, 4.3888999999998346e-05, 4.379200000000083e-05, 4.3889000000005285e-05, 4.3902999999997916e-05, 4.4459000000003635e-05, 4.355600000000015e-05, 4.4124999999999026e-05, 4.411199999999893e-05, 4.401300000000247e-05, 4.3569000000000246e-05, 4.4110999999999456e-05, 4.402800000000151e-05, 4.423600000000305e-05, 4.4374999999999276e-05, 4.3889000000005285e-05, 4.4096999999999886e-05, 4.4138999999998596e-05, 4.4110999999999456e-05, 4.4347000000000136e-05, 4.3680999999996806e-05, 4.405600000000065e-05, 4.4013999999995e-05, 4.355600000000015e-05, 4.358399999999929e-05, 4.4459000000003635e-05, 4.405600000000065e-05, 4.3681000000003745e-05, 4.395799999999672e-05, 4.391599999999801e-05, 4.390199999999844e-05, 4.409799999999936e-05, 4.366599999999776e-05, 4.376299999999528e-05, 4.426400000000219e-05, 4.366599999999776e-05, 4.429100000000186e-05, 4.423599999999611e-05, 4.39860000000028e-05, 4.420800000000391e-05, 4.4416999999997986e-05, 4.3667000000004175e-05, 4.3889000000005285e-05, 4.4319000000000996e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.134" endtime="20201030 18:29:02.139"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.123" endtime="20201030 18:29:02.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.150" endtime="20201030 18:29:02.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.146" endtime="20201030 18:29:02.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.143" endtime="20201030 18:29:02.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.630" endtime="20201030 18:29:02.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:01.629" endtime="20201030 18:29:02.176"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.200" endtime="20201030 18:29:02.220"></status>
</kw>
<msg timestamp="20201030 18:29:02.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.197" endtime="20201030 18:29:02.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.224" endtime="20201030 18:29:02.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.230" endtime="20201030 18:29:02.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.188" endtime="20201030 18:29:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.182" endtime="20201030 18:29:02.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.253" endtime="20201030 18:29:02.592"></status>
</kw>
<msg timestamp="20201030 18:29:02.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04308525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:02.250" endtime="20201030 18:29:02.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04308525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:02.602" endtime="20201030 18:29:02.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.621" endtime="20201030 18:29:02.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.243" endtime="20201030 18:29:02.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.238" endtime="20201030 18:29:02.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:02.639" level="INFO">${RESULT} = [{'diff': 4.5375000000000276e-05}, {'diff': 4.4833000000001066e-05}, {'diff': 4.455600000000115e-05}, {'diff': 4.467999999999833e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.4569000000001247e-05...</msg>
<status status="PASS" starttime="20201030 18:29:02.630" endtime="20201030 18:29:02.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:02.648" level="INFO">${ACCURACY} = {'diff': [4.5375000000000276e-05, 4.4833000000001066e-05, 4.455600000000115e-05, 4.467999999999833e-05, 4.5333000000001566e-05, 4.4569000000001247e-05, 4.5138999999999596e-05, 4.545799999999822e-05, 4...</msg>
<status status="PASS" starttime="20201030 18:29:02.641" endtime="20201030 18:29:02.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.660" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:02.657" endtime="20201030 18:29:02.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.666" level="INFO">VALUE: [4.5375000000000276e-05, 4.4833000000001066e-05, 4.455600000000115e-05, 4.467999999999833e-05, 4.5333000000001566e-05, 4.4569000000001247e-05, 4.5138999999999596e-05, 4.545799999999822e-05, 4.522199999999754e-05, 4.500000000000337e-05, 4.476400000000269e-05, 4.4902999999998916e-05, 4.4666999999998236e-05, 4.456899999999431e-05, 4.527800000000276e-05, 4.5333000000001566e-05, 4.48060000000014e-05, 4.5444999999998126e-05, 4.4902999999998916e-05, 4.477800000000226e-05, 4.502800000000251e-05, 4.4666999999998236e-05, 4.470799999999747e-05, 4.5431000000005495e-05, 4.4888999999999346e-05, 4.5125000000000026e-05, 4.46660000000057e-05, 4.499999999999643e-05, 4.4583000000000816e-05, 4.545799999999822e-05, 4.4653000000005605e-05, 4.4597000000000386e-05, 4.522200000000448e-05, 4.5361000000000706e-05, 4.5138999999999596e-05, 4.479200000000183e-05, 4.544399999999865e-05, 4.545799999999822e-05, 4.4888999999999346e-05, 4.4667000000005175e-05, 4.527699999999635e-05, 4.4597000000000386e-05, 4.5125000000000026e-05, 4.50269999999961e-05, 4.5181000000005245e-05, 4.46939999999979e-05, 4.467999999999833e-05, 4.5347000000001136e-05, 4.5333000000001566e-05, 4.454100000000211e-05]</msg>
<status status="PASS" starttime="20201030 18:29:02.663" endtime="20201030 18:29:02.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.650" endtime="20201030 18:29:02.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:02.703" endtime="20201030 18:29:02.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.699" endtime="20201030 18:29:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.696" endtime="20201030 18:29:02.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.178" endtime="20201030 18:29:02.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.176" endtime="20201030 18:29:02.728"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.751" endtime="20201030 18:29:02.772"></status>
</kw>
<msg timestamp="20201030 18:29:02.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.748" endtime="20201030 18:29:02.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:02.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:02.775" endtime="20201030 18:29:02.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.782" endtime="20201030 18:29:02.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.741" endtime="20201030 18:29:02.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.735" endtime="20201030 18:29:02.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:02.805" endtime="20201030 18:29:03.148"></status>
</kw>
<msg timestamp="20201030 18:29:03.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042039125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042084778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:02.802" endtime="20201030 18:29:03.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042039125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042084778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.157" endtime="20201030 18:29:03.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.176" endtime="20201030 18:29:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.795" endtime="20201030 18:29:03.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.790" endtime="20201030 18:29:03.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.193" level="INFO">${RESULT} = [{'diff': 4.5653000000006605e-05}, {'diff': 4.555600000000215e-05}, {'diff': 4.6013999999997e-05}, {'diff': 4.6389000000000846e-05}, {'diff': 4.63339999999951e-05}, {'diff': 4.612499999999409e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:03.184" endtime="20201030 18:29:03.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.204" level="INFO">${ACCURACY} = {'diff': [4.5653000000006605e-05, 4.555600000000215e-05, 4.6013999999997e-05, 4.6389000000000846e-05, 4.63339999999951e-05, 4.612499999999409e-05, 4.577799999999632e-05, 4.5861000000001206e-05, 4.6111...</msg>
<status status="PASS" starttime="20201030 18:29:03.195" endtime="20201030 18:29:03.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.214" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.212" endtime="20201030 18:29:03.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.220" level="INFO">VALUE: [4.5653000000006605e-05, 4.555600000000215e-05, 4.6013999999997e-05, 4.6389000000000846e-05, 4.63339999999951e-05, 4.612499999999409e-05, 4.577799999999632e-05, 4.5861000000001206e-05, 4.6111000000001456e-05, 4.579199999999589e-05, 4.600000000000437e-05, 4.555600000000215e-05, 4.566599999999976e-05, 4.604200000000308e-05, 4.644399999999965e-05, 4.6111000000001456e-05, 4.576400000000369e-05, 4.5875000000000776e-05, 4.579199999999589e-05, 4.577800000000326e-05, 4.5680999999998806e-05, 4.558299999999488e-05, 4.5889000000000346e-05, 4.579199999999589e-05, 4.5652999999999666e-05, 4.5889000000000346e-05, 4.6444999999999126e-05, 4.595799999999872e-05, 4.5666999999999236e-05, 4.6236999999997586e-05, 4.601400000000394e-05, 4.5666999999999236e-05, 4.601299999999753e-05, 4.591600000000001e-05, 4.588800000000087e-05, 4.648599999999836e-05, 4.566599999999976e-05, 4.555500000000268e-05, 4.5902999999999916e-05, 4.622200000000548e-05, 4.600000000000437e-05, 4.5625000000000526e-05, 4.576399999999675e-05, 4.5652999999999666e-05, 4.6333000000002567e-05, 4.599999999999743e-05, 4.631999999999553e-05, 4.627700000000429e-05, 4.5875000000000776e-05, 4.633400000000204e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.217" endtime="20201030 18:29:03.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.205" endtime="20201030 18:29:03.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.232" endtime="20201030 18:29:03.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.228" endtime="20201030 18:29:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.226" endtime="20201030 18:29:03.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.730" endtime="20201030 18:29:03.257"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:02.729" endtime="20201030 18:29:03.257"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.280" endtime="20201030 18:29:03.300"></status>
</kw>
<msg timestamp="20201030 18:29:03.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.276" endtime="20201030 18:29:03.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.304" endtime="20201030 18:29:03.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.310" endtime="20201030 18:29:03.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.269" endtime="20201030 18:29:03.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.263" endtime="20201030 18:29:03.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.334" endtime="20201030 18:29:03.677"></status>
</kw>
<msg timestamp="20201030 18:29:03.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040887153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.331" endtime="20201030 18:29:03.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040840069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040887153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.688" endtime="20201030 18:29:03.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.708" endtime="20201030 18:29:03.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.324" endtime="20201030 18:29:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.318" endtime="20201030 18:29:03.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:03.726" level="INFO">${RESULT} = [{'diff': 4.708400000000279e-05}, {'diff': 4.6903000000000916e-05}, {'diff': 4.733400000000304e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.7125000000002026e-05}, {'diff': 4.7208999999999446e-05...</msg>
<status status="PASS" starttime="20201030 18:29:03.717" endtime="20201030 18:29:03.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:03.737" level="INFO">${ACCURACY} = {'diff': [4.708400000000279e-05, 4.6903000000000916e-05, 4.733400000000304e-05, 4.7445000000000126e-05, 4.7125000000002026e-05, 4.7208999999999446e-05, 4.7013999999998e-05, 4.699999999999843e-05, 4.69...</msg>
<status status="PASS" starttime="20201030 18:29:03.728" endtime="20201030 18:29:03.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.748" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:03.746" endtime="20201030 18:29:03.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.754" level="INFO">VALUE: [4.708400000000279e-05, 4.6903000000000916e-05, 4.733400000000304e-05, 4.7445000000000126e-05, 4.7125000000002026e-05, 4.7208999999999446e-05, 4.7013999999998e-05, 4.699999999999843e-05, 4.694400000000015e-05, 4.666600000000076e-05, 4.6889000000001346e-05, 4.7139000000001596e-05, 4.676399999999775e-05, 4.745800000000022e-05, 4.747199999999979e-05, 4.723599999999911e-05, 4.731899999999706e-05, 4.6667000000000236e-05, 4.655600000000315e-05, 4.6875000000001776e-05, 4.658400000000229e-05, 4.7445000000000126e-05, 4.656999999999578e-05, 4.73339999999961e-05, 4.655599999999621e-05, 4.655600000000315e-05, 4.6611000000001956e-05, 4.679200000000383e-05, 4.655500000000368e-05, 4.656899999999631e-05, 4.655499999999674e-05, 4.699999999999843e-05, 4.6915999999994074e-05, 4.722199999999954e-05, 4.666600000000076e-05, 4.668000000000033e-05, 4.7347000000003137e-05, 4.698599999999886e-05, 4.702799999999757e-05, 4.7013999999998e-05, 4.7165999999994324e-05, 4.697199999999929e-05, 4.682000000000297e-05, 4.732000000000347e-05, 4.722199999999954e-05, 4.679200000000383e-05, 4.6875000000001776e-05, 4.7013999999998e-05, 4.6889000000001346e-05, 4.677800000000426e-05]</msg>
<status status="PASS" starttime="20201030 18:29:03.751" endtime="20201030 18:29:03.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.739" endtime="20201030 18:29:03.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.767" endtime="20201030 18:29:03.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.762" endtime="20201030 18:29:03.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.760" endtime="20201030 18:29:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.259" endtime="20201030 18:29:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.258" endtime="20201030 18:29:03.792"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.815" endtime="20201030 18:29:03.836"></status>
</kw>
<msg timestamp="20201030 18:29:03.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.811" endtime="20201030 18:29:03.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.839" endtime="20201030 18:29:03.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.845" endtime="20201030 18:29:03.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.804" endtime="20201030 18:29:03.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.798" endtime="20201030 18:29:03.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.869" endtime="20201030 18:29:04.209"></status>
</kw>
<msg timestamp="20201030 18:29:04.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041831153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041878792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:03.865" endtime="20201030 18:29:04.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041831153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041878792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.219" endtime="20201030 18:29:04.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.238" endtime="20201030 18:29:04.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.858" endtime="20201030 18:29:04.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.853" endtime="20201030 18:29:04.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.255" level="INFO">${RESULT} = [{'diff': 4.763899999999516e-05}, {'diff': 4.76940000000009e-05}, {'diff': 4.8473000000000266e-05}, {'diff': 4.779199999999789e-05}, {'diff': 4.762499999999559e-05}, {'diff': 4.8431000000001556e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:04.246" endtime="20201030 18:29:04.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.264" level="INFO">${ACCURACY} = {'diff': [4.763899999999516e-05, 4.76940000000009e-05, 4.8473000000000266e-05, 4.779199999999789e-05, 4.762499999999559e-05, 4.8431000000001556e-05, 4.823600000000011e-05, 4.770800000000047e-05, 4.787...</msg>
<status status="PASS" starttime="20201030 18:29:04.257" endtime="20201030 18:29:04.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.276" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.274" endtime="20201030 18:29:04.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.281" level="INFO">VALUE: [4.763899999999516e-05, 4.76940000000009e-05, 4.8473000000000266e-05, 4.779199999999789e-05, 4.762499999999559e-05, 4.8431000000001556e-05, 4.823600000000011e-05, 4.770800000000047e-05, 4.7875000000002776e-05, 4.7597000000003387e-05, 4.7889000000002346e-05, 4.775000000000612e-05, 4.799999999999943e-05, 4.779200000000483e-05, 4.8111000000003457e-05, 4.809699999999695e-05, 4.777799999999832e-05, 4.788899999999541e-05, 4.812499999999609e-05, 4.7917000000001486e-05, 4.7708999999999946e-05, 4.7667000000001236e-05, 4.7681000000000806e-05, 4.809799999999642e-05, 4.754199999999764e-05, 4.847200000000079e-05, 4.784799999999617e-05, 4.755499999999774e-05, 4.7901999999995504e-05, 4.756900000000425e-05, 4.756899999999731e-05, 4.802799999999857e-05, 4.749999999999893e-05, 4.755499999999774e-05, 4.758299999999688e-05, 4.7681000000000806e-05, 4.797200000000029e-05, 4.7861000000003207e-05, 4.799999999999943e-05, 4.813899999999566e-05, 4.7667000000001236e-05, 4.812499999999609e-05, 4.799999999999943e-05, 4.75139999999985e-05, 4.8111000000003457e-05, 4.824999999999968e-05, 4.833400000000404e-05, 4.799999999999943e-05, 4.801299999999953e-05, 4.755499999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.278" endtime="20201030 18:29:04.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.266" endtime="20201030 18:29:04.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.294" endtime="20201030 18:29:04.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.290" endtime="20201030 18:29:04.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.287" endtime="20201030 18:29:04.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.794" endtime="20201030 18:29:04.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.793" endtime="20201030 18:29:04.319"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.344" endtime="20201030 18:29:04.364"></status>
</kw>
<msg timestamp="20201030 18:29:04.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.339" endtime="20201030 18:29:04.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.368" endtime="20201030 18:29:04.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.374" endtime="20201030 18:29:04.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.332" endtime="20201030 18:29:04.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.326" endtime="20201030 18:29:04.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.398" endtime="20201030 18:29:04.737"></status>
</kw>
<msg timestamp="20201030 18:29:04.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043553278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043601917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.395" endtime="20201030 18:29:04.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043553278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043601917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.746" endtime="20201030 18:29:04.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.765" endtime="20201030 18:29:04.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.387" endtime="20201030 18:29:04.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.383" endtime="20201030 18:29:04.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:04.783" level="INFO">${RESULT} = [{'diff': 4.863899999999616e-05}, {'diff': 4.88060000000054e-05}, {'diff': 4.8693999999994964e-05}, {'diff': 4.9209000000001446e-05}, {'diff': 4.9167000000002736e-05}, {'diff': 4.945800000000222e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:04.774" endtime="20201030 18:29:04.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:04.792" level="INFO">${ACCURACY} = {'diff': [4.863899999999616e-05, 4.88060000000054e-05, 4.8693999999994964e-05, 4.9209000000001446e-05, 4.9167000000002736e-05, 4.945800000000222e-05, 4.8903000000002916e-05, 4.923600000000111e-05, 4.8...</msg>
<status status="PASS" starttime="20201030 18:29:04.785" endtime="20201030 18:29:04.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.803" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:29:04.801" endtime="20201030 18:29:04.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.809" level="INFO">VALUE: [4.863899999999616e-05, 4.88060000000054e-05, 4.8693999999994964e-05, 4.9209000000001446e-05, 4.9167000000002736e-05, 4.945800000000222e-05, 4.8903000000002916e-05, 4.923600000000111e-05, 4.866600000000276e-05, 4.856899999999831e-05, 4.9429999999996144e-05, 4.9014e-05, 4.904199999999914e-05, 4.856899999999831e-05, 4.8667000000002236e-05, 4.933299999999863e-05, 4.902799999999957e-05, 4.890299999999598e-05, 4.9014e-05, 4.881899999999856e-05, 4.9445000000002126e-05, 4.854200000000558e-05, 4.9223000000001016e-05, 4.8887999999996934e-05, 4.855599999999821e-05, 4.8901999999996504e-05, 4.855499999999874e-05, 4.880499999999899e-05, 4.8903000000002916e-05, 4.8889000000003346e-05, 4.8889000000003346e-05, 4.877799999999932e-05, 4.890299999999598e-05, 4.905599999999871e-05, 4.880599999999846e-05, 4.879199999999889e-05, 4.934700000000514e-05, 4.9221999999994603e-05, 4.8695000000001376e-05, 4.888899999999641e-05, 4.9445000000002126e-05, 4.857000000000472e-05, 4.886100000000421e-05, 4.900000000000043e-05, 4.861099999999702e-05, 4.86940000000019e-05, 4.856900000000525e-05, 4.9429999999996144e-05, 4.944400000000265e-05, 4.887499999999684e-05]</msg>
<status status="PASS" starttime="20201030 18:29:04.805" endtime="20201030 18:29:04.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.794" endtime="20201030 18:29:04.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:04.823" endtime="20201030 18:29:04.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.817" endtime="20201030 18:29:04.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.814" endtime="20201030 18:29:04.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.321" endtime="20201030 18:29:04.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.320" endtime="20201030 18:29:04.848"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.871" endtime="20201030 18:29:04.891"></status>
</kw>
<msg timestamp="20201030 18:29:04.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.868" endtime="20201030 18:29:04.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:04.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:04.895" endtime="20201030 18:29:04.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.901" endtime="20201030 18:29:04.905"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.860" endtime="20201030 18:29:04.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.854" endtime="20201030 18:29:04.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:04.925" endtime="20201030 18:29:05.262"></status>
</kw>
<msg timestamp="20201030 18:29:05.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041836306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:04.922" endtime="20201030 18:29:05.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041836306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.272" endtime="20201030 18:29:05.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.290" endtime="20201030 18:29:05.294"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.914" endtime="20201030 18:29:05.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.909" endtime="20201030 18:29:05.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.308" level="INFO">${RESULT} = [{'diff': 4.952800000000007e-05}, {'diff': 5.037499999999834e-05}, {'diff': 5.001300000000153e-05}, {'diff': 4.988800000000487e-05}, {'diff': 4.9693999999995964e-05}, {'diff': 5.000000000000143e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:05.299" endtime="20201030 18:29:05.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.318" level="INFO">${ACCURACY} = {'diff': [4.952800000000007e-05, 5.037499999999834e-05, 5.001300000000153e-05, 4.988800000000487e-05, 4.9693999999995964e-05, 5.000000000000143e-05, 4.9679999999996394e-05, 5.000000000000143e-05, 5.03...</msg>
<status status="PASS" starttime="20201030 18:29:05.310" endtime="20201030 18:29:05.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.330" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.327" endtime="20201030 18:29:05.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.335" level="INFO">VALUE: [4.952800000000007e-05, 5.037499999999834e-05, 5.001300000000153e-05, 4.988800000000487e-05, 4.9693999999995964e-05, 5.000000000000143e-05, 4.9679999999996394e-05, 5.000000000000143e-05, 5.036100000000571e-05, 4.966600000000376e-05, 4.977800000000032e-05, 4.977800000000032e-05, 4.9681000000002806e-05, 5.000000000000143e-05, 4.9681000000002806e-05, 4.9709000000001946e-05, 4.999999999999449e-05, 4.991699999999655e-05, 4.987500000000478e-05, 4.979199999999989e-05, 5.002699999999416e-05, 4.988899999999741e-05, 4.990299999999698e-05, 5.000000000000143e-05, 4.96940000000029e-05, 5.0443999999996714e-05, 5.045800000000322e-05, 5.000000000000143e-05, 4.9693999999995964e-05, 4.952800000000007e-05, 5.033299999999963e-05, 5.0443999999996714e-05, 4.9889000000004347e-05, 5.0221999999995603e-05, 4.977800000000032e-05, 4.979199999999989e-05, 4.9667000000003236e-05, 5.044499999999619e-05, 5.0459000000002696e-05, 5.002800000000057e-05, 4.988899999999741e-05, 5.031999999999953e-05, 4.9667000000003236e-05, 4.9889000000004347e-05, 4.999999999999449e-05, 4.981899999999956e-05, 4.979100000000042e-05, 4.977699999999391e-05, 4.9679999999996394e-05, 5.031900000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.332" endtime="20201030 18:29:05.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.320" endtime="20201030 18:29:05.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.348" endtime="20201030 18:29:05.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.343" endtime="20201030 18:29:05.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.341" endtime="20201030 18:29:05.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.850" endtime="20201030 18:29:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:04.849" endtime="20201030 18:29:05.373"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.396" endtime="20201030 18:29:05.417"></status>
</kw>
<msg timestamp="20201030 18:29:05.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.393" endtime="20201030 18:29:05.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.420" endtime="20201030 18:29:05.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.427" endtime="20201030 18:29:05.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.385" endtime="20201030 18:29:05.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.380" endtime="20201030 18:29:05.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.450" endtime="20201030 18:29:05.788"></status>
</kw>
<msg timestamp="20201030 18:29:05.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042012708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042063806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.447" endtime="20201030 18:29:05.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042012708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042063806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.797" endtime="20201030 18:29:05.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.816" endtime="20201030 18:29:05.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.440" endtime="20201030 18:29:05.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.435" endtime="20201030 18:29:05.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:05.834" level="INFO">${RESULT} = [{'diff': 5.109799999999942e-05}, {'diff': 5.090299999999798e-05}, {'diff': 5.104100000000167e-05}, {'diff': 5.111099999999952e-05}, {'diff': 5.054200000000064e-05}, {'diff': 5.120899999999651e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:05.825" endtime="20201030 18:29:05.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:05.845" level="INFO">${ACCURACY} = {'diff': [5.109799999999942e-05, 5.090299999999798e-05, 5.104100000000167e-05, 5.111099999999952e-05, 5.054200000000064e-05, 5.120899999999651e-05, 5.122200000000354e-05, 5.1429999999998144e-05, 5.101...</msg>
<status status="PASS" starttime="20201030 18:29:05.836" endtime="20201030 18:29:05.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.856" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:29:05.854" endtime="20201030 18:29:05.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.861" level="INFO">VALUE: [5.109799999999942e-05, 5.090299999999798e-05, 5.104100000000167e-05, 5.111099999999952e-05, 5.054200000000064e-05, 5.120899999999651e-05, 5.122200000000354e-05, 5.1429999999998144e-05, 5.1014000000002e-05, 5.131900000000106e-05, 5.062499999999859e-05, 5.112499999999909e-05, 5.091699999999755e-05, 5.055500000000074e-05, 5.101399999999506e-05, 5.055600000000021e-05, 5.108300000000038e-05, 5.133300000000063e-05, 5.100000000000243e-05, 5.100000000000243e-05, 5.088899999999841e-05, 5.083300000000013e-05, 5.108399999999985e-05, 5.1137999999999184e-05, 5.077800000000132e-05, 5.095800000000372e-05, 5.126400000000225e-05, 5.056900000000031e-05, 5.076400000000175e-05, 5.079100000000142e-05, 5.0679999999997394e-05, 5.111100000000646e-05, 5.065299999999773e-05, 5.123600000000311e-05, 5.091699999999755e-05, 5.0943999999997214e-05, 5.125000000000268e-05, 5.077800000000132e-05, 5.1459000000003696e-05, 5.076400000000175e-05, 5.134799999999967e-05, 5.13340000000001e-05, 5.065299999999773e-05, 5.055600000000021e-05, 5.065299999999773e-05, 5.100000000000243e-05, 5.1443999999997714e-05, 5.1014000000002e-05, 5.055500000000074e-05, 5.075000000000218e-05]</msg>
<status status="PASS" starttime="20201030 18:29:05.858" endtime="20201030 18:29:05.863"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.847" endtime="20201030 18:29:05.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:05.874" endtime="20201030 18:29:05.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.870" endtime="20201030 18:29:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.867" endtime="20201030 18:29:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.375" endtime="20201030 18:29:05.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.374" endtime="20201030 18:29:05.899"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.922" endtime="20201030 18:29:05.942"></status>
</kw>
<msg timestamp="20201030 18:29:05.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.919" endtime="20201030 18:29:05.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:05.946" endtime="20201030 18:29:05.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.952" endtime="20201030 18:29:05.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.912" endtime="20201030 18:29:05.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.906" endtime="20201030 18:29:05.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:05.976" endtime="20201030 18:29:06.317"></status>
</kw>
<msg timestamp="20201030 18:29:06.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041805889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:05.972" endtime="20201030 18:29:06.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041805889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.327" endtime="20201030 18:29:06.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.346" endtime="20201030 18:29:06.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.965" endtime="20201030 18:29:06.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.960" endtime="20201030 18:29:06.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.363" level="INFO">${RESULT} = [{'diff': 5.240299999999948e-05}, {'diff': 5.2221999999997604e-05}, {'diff': 5.244499999999819e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.2459000000004696e-05}, {'diff': 5.163899999999916e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:06.355" endtime="20201030 18:29:06.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.373" level="INFO">${ACCURACY} = {'diff': [5.240299999999948e-05, 5.2221999999997604e-05, 5.244499999999819e-05, 5.212500000000009e-05, 5.2459000000004696e-05, 5.163899999999916e-05, 5.1693999999997964e-05, 5.237500000000034e-05, 5.1...</msg>
<status status="PASS" starttime="20201030 18:29:06.366" endtime="20201030 18:29:06.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.387" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.383" endtime="20201030 18:29:06.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.393" level="INFO">VALUE: [5.240299999999948e-05, 5.2221999999997604e-05, 5.244499999999819e-05, 5.212500000000009e-05, 5.2459000000004696e-05, 5.163899999999916e-05, 5.1693999999997964e-05, 5.237500000000034e-05, 5.155500000000174e-05, 5.212500000000009e-05, 5.15270000000026e-05, 5.155500000000174e-05, 5.155500000000174e-05, 5.1665999999998824e-05, 5.156900000000131e-05, 5.209700000000095e-05, 5.168099999999787e-05, 5.180599999999452e-05, 5.1735999999996674e-05, 5.16669999999983e-05, 5.2445000000005126e-05, 5.232000000000153e-05, 5.188899999999941e-05, 5.158400000000035e-05, 5.1957999999997784e-05, 5.190299999999898e-05, 5.165299999999873e-05, 5.1679999999998394e-05, 5.2014000000003e-05, 5.177699999999591e-05, 5.177700000000285e-05, 5.179199999999495e-05, 5.244400000000565e-05, 5.2471999999997854e-05, 5.157000000000078e-05, 5.156900000000131e-05, 5.240299999999948e-05, 5.188900000000635e-05, 5.1943999999998214e-05, 5.244499999999819e-05, 5.168099999999787e-05, 5.177800000000232e-05, 5.201399999999606e-05, 5.187499999999984e-05, 5.212500000000009e-05, 5.156900000000131e-05, 5.1915999999999074e-05, 5.200000000000343e-05, 5.1693999999997964e-05, 5.211100000000052e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.389" endtime="20201030 18:29:06.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.375" endtime="20201030 18:29:06.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.409" endtime="20201030 18:29:06.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.404" endtime="20201030 18:29:06.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.401" endtime="20201030 18:29:06.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.901" endtime="20201030 18:29:06.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:05.900" endtime="20201030 18:29:06.436"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.459" endtime="20201030 18:29:06.484"></status>
</kw>
<msg timestamp="20201030 18:29:06.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.455" endtime="20201030 18:29:06.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.488" endtime="20201030 18:29:06.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.494" endtime="20201030 18:29:06.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.448" endtime="20201030 18:29:06.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.442" endtime="20201030 18:29:06.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.518" endtime="20201030 18:29:06.862"></status>
</kw>
<msg timestamp="20201030 18:29:06.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048580736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:06.514" endtime="20201030 18:29:06.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048580736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:06.871" endtime="20201030 18:29:06.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.890" endtime="20201030 18:29:06.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.507" endtime="20201030 18:29:06.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.502" endtime="20201030 18:29:06.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.908" level="INFO">${RESULT} = [{'diff': 5.2735999999997674e-05}, {'diff': 5.312499999999415e-05}, {'diff': 5.320800000000597e-05}, {'diff': 5.3457999999999284e-05}, {'diff': 5.33340000000021e-05}, {'diff': 5.263900000000016e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:06.899" endtime="20201030 18:29:06.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.917" level="INFO">${ACCURACY} = {'diff': [5.2735999999997674e-05, 5.312499999999415e-05, 5.320800000000597e-05, 5.3457999999999284e-05, 5.33340000000021e-05, 5.263900000000016e-05, 5.254200000000264e-05, 5.279199999999595e-05, 5.256...</msg>
<status status="PASS" starttime="20201030 18:29:06.910" endtime="20201030 18:29:06.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.929" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.926" endtime="20201030 18:29:06.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.934" level="INFO">VALUE: [5.2735999999997674e-05, 5.312499999999415e-05, 5.320800000000597e-05, 5.3457999999999284e-05, 5.33340000000021e-05, 5.263900000000016e-05, 5.254200000000264e-05, 5.279199999999595e-05, 5.256999999999484e-05, 5.319499999999894e-05, 5.33470000000022e-05, 5.279099999999648e-05, 5.333299999999569e-05, 5.263900000000016e-05, 5.2665999999999824e-05, 5.3430000000000144e-05, 5.331899999999612e-05, 5.277800000000332e-05, 5.256899999999537e-05, 5.25140000000035e-05, 5.255600000000221e-05, 5.25419999999957e-05, 5.302800000000357e-05, 5.291699999999955e-05, 5.312500000000109e-05, 5.277799999999638e-05, 5.337500000000134e-05, 5.311200000000099e-05, 5.3263999999997313e-05, 5.255599999999527e-05, 5.336100000000177e-05, 5.33470000000022e-05, 5.276400000000375e-05, 5.313899999999372e-05, 5.2652000000000254e-05, 5.277799999999638e-05, 5.287500000000084e-05, 5.279199999999595e-05, 5.279200000000289e-05, 5.256900000000231e-05, 5.26669999999993e-05, 5.3457999999999284e-05, 5.265299999999973e-05, 5.329199999999645e-05, 5.255600000000221e-05, 5.334799999999473e-05, 5.290299999999998e-05, 5.279199999999595e-05, 5.3249999999997744e-05, 5.25549999999958e-05]</msg>
<status status="PASS" starttime="20201030 18:29:06.931" endtime="20201030 18:29:06.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.919" endtime="20201030 18:29:06.937"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.948" endtime="20201030 18:29:06.970"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.942" endtime="20201030 18:29:06.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.940" endtime="20201030 18:29:06.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.438" endtime="20201030 18:29:06.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.437" endtime="20201030 18:29:06.973"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.996" endtime="20201030 18:29:07.017"></status>
</kw>
<msg timestamp="20201030 18:29:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.993" endtime="20201030 18:29:07.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.021" endtime="20201030 18:29:07.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.027" endtime="20201030 18:29:07.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.986" endtime="20201030 18:29:07.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.980" endtime="20201030 18:29:07.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.051" endtime="20201030 18:29:07.388"></status>
</kw>
<msg timestamp="20201030 18:29:07.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041840694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.047" endtime="20201030 18:29:07.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041786528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041840694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.398" endtime="20201030 18:29:07.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.417" endtime="20201030 18:29:07.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.040" endtime="20201030 18:29:07.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.035" endtime="20201030 18:29:07.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.435" level="INFO">${RESULT} = [{'diff': 5.4165999999994385e-05}, {'diff': 5.388900000000141e-05}, {'diff': 5.383299999999619e-05}, {'diff': 5.356900000000331e-05}, {'diff': 5.381900000000356e-05}, {'diff': 5.380600000000346e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:07.425" endtime="20201030 18:29:07.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.445" level="INFO">${ACCURACY} = {'diff': [5.4165999999994385e-05, 5.388900000000141e-05, 5.383299999999619e-05, 5.356900000000331e-05, 5.381900000000356e-05, 5.380600000000346e-05, 5.3777999999997383e-05, 5.359799999999498e-05, 5.42...</msg>
<status status="PASS" starttime="20201030 18:29:07.437" endtime="20201030 18:29:07.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.456" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.454" endtime="20201030 18:29:07.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.462" level="INFO">VALUE: [5.4165999999994385e-05, 5.388900000000141e-05, 5.383299999999619e-05, 5.356900000000331e-05, 5.381900000000356e-05, 5.380600000000346e-05, 5.3777999999997383e-05, 5.359799999999498e-05, 5.4221999999999604e-05, 5.429100000000492e-05, 5.376400000000475e-05, 5.4166000000001324e-05, 5.445899999999976e-05, 5.43619999999953e-05, 5.444500000000019e-05, 5.363900000000116e-05, 5.401300000000553e-05, 5.3679999999993455e-05, 5.356899999999637e-05, 5.3902000000001504e-05, 5.388900000000141e-05, 5.43470000000032e-05, 5.3680000000000394e-05, 5.379199999999695e-05, 5.4221999999999604e-05, 5.431899999999712e-05, 5.388900000000141e-05, 5.422200000000654e-05, 5.444499999999325e-05, 5.388900000000141e-05, 5.3902000000001504e-05, 5.391700000000055e-05, 5.358400000000235e-05, 5.384800000000217e-05, 5.379199999999695e-05, 5.3999999999998494e-05, 5.3680000000000394e-05, 5.4444000000000714e-05, 5.358300000000288e-05, 5.381900000000356e-05, 5.4471999999999854e-05, 5.354099999999723e-05, 5.3721999999999104e-05, 5.4027999999997633e-05, 5.431899999999712e-05, 5.36670000000003e-05, 5.400000000000543e-05, 5.390300000000098e-05, 5.368099999999987e-05, 5.408399999999591e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.459" endtime="20201030 18:29:07.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.447" endtime="20201030 18:29:07.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.474" endtime="20201030 18:29:07.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.470" endtime="20201030 18:29:07.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.468" endtime="20201030 18:29:07.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.975" endtime="20201030 18:29:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.974" endtime="20201030 18:29:07.499"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.522" endtime="20201030 18:29:07.543"></status>
</kw>
<msg timestamp="20201030 18:29:07.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.519" endtime="20201030 18:29:07.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.547" endtime="20201030 18:29:07.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.553" endtime="20201030 18:29:07.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.512" endtime="20201030 18:29:07.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.506" endtime="20201030 18:29:07.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.577" endtime="20201030 18:29:07.915"></status>
</kw>
<msg timestamp="20201030 18:29:07.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041665306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.573" endtime="20201030 18:29:07.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041665306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.925" endtime="20201030 18:29:07.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.944" endtime="20201030 18:29:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.566" endtime="20201030 18:29:07.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.561" endtime="20201030 18:29:07.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.962" level="INFO">${RESULT} = [{'diff': 5.508399999999691e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.4680000000001394e-05}, {'diff': 5.458299999999694e-05}, {'diff': 5.511099999999658e-05}, {'diff': 5.4722000000000104e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:07.953" endtime="20201030 18:29:07.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.973" level="INFO">${ACCURACY} = {'diff': [5.508399999999691e-05, 5.5472000000000854e-05, 5.4680000000001394e-05, 5.458299999999694e-05, 5.511099999999658e-05, 5.4722000000000104e-05, 5.511099999999658e-05, 5.511099999999658e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 18:29:07.964" endtime="20201030 18:29:07.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.984" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.982" endtime="20201030 18:29:07.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.990" level="INFO">VALUE: [5.508399999999691e-05, 5.5472000000000854e-05, 5.4680000000001394e-05, 5.458299999999694e-05, 5.511099999999658e-05, 5.4722000000000104e-05, 5.511099999999658e-05, 5.511099999999658e-05, 5.5429999999995205e-05, 5.5429999999995205e-05, 5.4763999999998814e-05, 5.5222000000000604e-05, 5.509699999999701e-05, 5.5444000000001714e-05, 5.5222000000000604e-05, 5.4999999999999494e-05, 5.4999999999999494e-05, 5.530499999999855e-05, 5.4763999999998814e-05, 5.53340000000041e-05, 5.4902000000002504e-05, 5.4902000000002504e-05, 5.480499999999805e-05, 5.5430000000002144e-05, 5.5222000000000604e-05, 5.5208000000001034e-05, 5.455500000000474e-05, 5.5208000000001034e-05, 5.512500000000309e-05, 5.51670000000018e-05, 5.4999999999999494e-05, 5.488900000000241e-05, 5.488899999999547e-05, 5.488900000000241e-05, 5.4999999999999494e-05, 5.515299999999529e-05, 5.511099999999658e-05, 5.488899999999547e-05, 5.468099999999393e-05, 5.544499999999425e-05, 5.484699999999676e-05, 5.511099999999658e-05, 5.5236000000000174e-05, 5.45549999999978e-05, 5.490300000000198e-05, 5.5236000000000174e-05, 5.534699999999726e-05, 5.5013999999999064e-05, 5.488899999999547e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 18:29:07.987" endtime="20201030 18:29:07.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.975" endtime="20201030 18:29:07.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.008" endtime="20201030 18:29:08.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.004" endtime="20201030 18:29:08.032"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.001" endtime="20201030 18:29:08.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.502" endtime="20201030 18:29:08.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.500" endtime="20201030 18:29:08.034"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.057" endtime="20201030 18:29:08.077"></status>
</kw>
<msg timestamp="20201030 18:29:08.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.053" endtime="20201030 18:29:08.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.081" endtime="20201030 18:29:08.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.087" endtime="20201030 18:29:08.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.046" endtime="20201030 18:29:08.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.040" endtime="20201030 18:29:08.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.111" endtime="20201030 18:29:08.450"></status>
</kw>
<msg timestamp="20201030 18:29:08.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041870639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041926944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.108" endtime="20201030 18:29:08.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041870639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041926944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.460" endtime="20201030 18:29:08.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.479" endtime="20201030 18:29:08.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.100" endtime="20201030 18:29:08.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.096" endtime="20201030 18:29:08.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.497" level="INFO">${RESULT} = [{'diff': 5.630499999999955e-05}, {'diff': 5.611200000000399e-05}, {'diff': 5.5999999999993555e-05}, {'diff': 5.6415999999996636e-05}, {'diff': 5.6458000000002284e-05}, {'diff': 5.593099999999518e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:08.488" endtime="20201030 18:29:08.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.506" level="INFO">${ACCURACY} = {'diff': [5.630499999999955e-05, 5.611200000000399e-05, 5.5999999999993555e-05, 5.6415999999996636e-05, 5.6458000000002284e-05, 5.593099999999518e-05, 5.5541999999998704e-05, 5.587500000000384e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:29:08.499" endtime="20201030 18:29:08.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.517" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.515" endtime="20201030 18:29:08.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.523" level="INFO">VALUE: [5.630499999999955e-05, 5.611200000000399e-05, 5.5999999999993555e-05, 5.6415999999996636e-05, 5.6458000000002284e-05, 5.593099999999518e-05, 5.5541999999998704e-05, 5.587500000000384e-05, 5.6444000000002714e-05, 5.5777999999999384e-05, 5.634699999999826e-05, 5.6222000000001604e-05, 5.5777999999999384e-05, 5.633300000000563e-05, 5.558400000000435e-05, 5.5555999999998273e-05, 5.555600000000521e-05, 5.60549999999993e-05, 5.601300000000059e-05, 5.5999999999993555e-05, 5.556899999999837e-05, 5.6222000000001604e-05, 5.6014000000000064e-05, 5.580499999999905e-05, 5.56670000000023e-05, 5.6180000000002894e-05, 5.590300000000298e-05, 5.611100000000452e-05, 5.590299999999604e-05, 5.559700000000445e-05, 5.590299999999604e-05, 5.6319999999998593e-05, 5.6014000000000064e-05, 5.5930000000002644e-05, 5.579200000000589e-05, 5.5777999999999384e-05, 5.5555999999998273e-05, 5.6319999999998593e-05, 5.581899999999862e-05, 5.5888000000003935e-05, 5.5680000000002394e-05, 5.55549999999988e-05, 5.6430000000003144e-05, 5.55549999999988e-05, 5.556900000000531e-05, 5.609699999999801e-05, 5.588900000000341e-05, 5.56670000000023e-05, 5.584699999999776e-05, 5.568100000000187e-05]</msg>
<status status="PASS" starttime="20201030 18:29:08.520" endtime="20201030 18:29:08.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.508" endtime="20201030 18:29:08.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.536" endtime="20201030 18:29:08.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.531" endtime="20201030 18:29:08.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.528" endtime="20201030 18:29:08.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.036" endtime="20201030 18:29:08.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.035" endtime="20201030 18:29:08.561"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.584" endtime="20201030 18:29:08.606"></status>
</kw>
<msg timestamp="20201030 18:29:08.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.581" endtime="20201030 18:29:08.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.610" endtime="20201030 18:29:08.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.616" endtime="20201030 18:29:08.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.573" endtime="20201030 18:29:08.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.567" endtime="20201030 18:29:08.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.640" endtime="20201030 18:29:08.979"></status>
</kw>
<msg timestamp="20201030 18:29:08.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:08.637" endtime="20201030 18:29:08.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043551639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:08.989" endtime="20201030 18:29:09.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.008" endtime="20201030 18:29:09.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.629" endtime="20201030 18:29:09.013"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.624" endtime="20201030 18:29:09.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.026" level="INFO">${RESULT} = [{'diff': 5.663900000000416e-05}, {'diff': 5.7236000000002174e-05}, {'diff': 5.709699999999901e-05}, {'diff': 5.66949999999955e-05}, {'diff': 5.666699999999636e-05}, {'diff': 5.7250000000001744e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:09.017" endtime="20201030 18:29:09.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.035" level="INFO">${ACCURACY} = {'diff': [5.663900000000416e-05, 5.7236000000002174e-05, 5.709699999999901e-05, 5.66949999999955e-05, 5.666699999999636e-05, 5.7250000000001744e-05, 5.668100000000287e-05, 5.7333999999999163e-05, 5.65...</msg>
<status status="PASS" starttime="20201030 18:29:09.028" endtime="20201030 18:29:09.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.046" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.044" endtime="20201030 18:29:09.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.052" level="INFO">VALUE: [5.663900000000416e-05, 5.7236000000002174e-05, 5.709699999999901e-05, 5.66949999999955e-05, 5.666699999999636e-05, 5.7250000000001744e-05, 5.668100000000287e-05, 5.7333999999999163e-05, 5.65549999999998e-05, 5.734699999999926e-05, 5.7236000000002174e-05, 5.6902000000004505e-05, 5.734699999999926e-05, 5.7292000000000454e-05, 5.7444000000003714e-05, 5.7014000000001064e-05, 5.6528000000000134e-05, 5.7013999999994125e-05, 5.6986000000001924e-05, 5.66949999999955e-05, 5.711099999999858e-05, 5.6569999999998843e-05, 5.6500000000000994e-05, 5.669500000000244e-05, 5.6999999999994555e-05, 5.745900000000276e-05, 5.6778000000000384e-05, 5.683299999999919e-05, 5.6887999999997996e-05, 5.6805999999999524e-05, 5.6665999999996886e-05, 5.7208000000003034e-05, 5.7236000000002174e-05, 5.683299999999919e-05, 5.709699999999901e-05, 5.6778000000000384e-05, 5.6736000000001674e-05, 5.7055999999999774e-05, 5.6569999999998843e-05, 5.6778000000000384e-05, 5.712499999999815e-05, 5.662499999999765e-05, 5.690300000000398e-05, 5.679100000000048e-05, 5.656899999999937e-05, 5.6665999999996886e-05, 5.7000000000001494e-05, 5.7014000000001064e-05, 5.680500000000005e-05, 5.711099999999858e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.049" endtime="20201030 18:29:09.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.037" endtime="20201030 18:29:09.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.066" endtime="20201030 18:29:09.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.060" endtime="20201030 18:29:09.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.058" endtime="20201030 18:29:09.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.563" endtime="20201030 18:29:09.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.562" endtime="20201030 18:29:09.091"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.114" endtime="20201030 18:29:09.135"></status>
</kw>
<msg timestamp="20201030 18:29:09.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.111" endtime="20201030 18:29:09.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.138" endtime="20201030 18:29:09.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.144" endtime="20201030 18:29:09.148"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.103" endtime="20201030 18:29:09.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.098" endtime="20201030 18:29:09.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.168" endtime="20201030 18:29:09.505"></status>
</kw>
<msg timestamp="20201030 18:29:09.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.165" endtime="20201030 18:29:09.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041569097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041627444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.515" endtime="20201030 18:29:09.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.534" endtime="20201030 18:29:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.157" endtime="20201030 18:29:09.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.153" endtime="20201030 18:29:09.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.551" level="INFO">${RESULT} = [{'diff': 5.834700000000026e-05}, {'diff': 5.811099999999958e-05}, {'diff': 5.8429999999998206e-05}, {'diff': 5.8194000000004464e-05}, {'diff': 5.813899999999872e-05}, {'diff': 5.7763999999994875e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:09.542" endtime="20201030 18:29:09.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.562" level="INFO">${ACCURACY} = {'diff': [5.834700000000026e-05, 5.811099999999958e-05, 5.8429999999998206e-05, 5.8194000000004464e-05, 5.813899999999872e-05, 5.7763999999994875e-05, 5.78749999999989e-05, 5.8222000000003604e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 18:29:09.554" endtime="20201030 18:29:09.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.573" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.571" endtime="20201030 18:29:09.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.579" level="INFO">VALUE: [5.834700000000026e-05, 5.811099999999958e-05, 5.8429999999998206e-05, 5.8194000000004464e-05, 5.813899999999872e-05, 5.7763999999994875e-05, 5.78749999999989e-05, 5.8222000000003604e-05, 5.8471999999996915e-05, 5.8236000000003174e-05, 5.811099999999958e-05, 5.7707999999996595e-05, 5.788900000000541e-05, 5.8000000000002494e-05, 5.7778000000001384e-05, 5.766699999999736e-05, 5.8179999999997956e-05, 5.8000000000002494e-05, 5.759699999999951e-05, 5.833300000000069e-05, 5.8000000000002494e-05, 5.7763999999994875e-05, 5.8014000000002064e-05, 5.7665999999997886e-05, 5.7778000000001384e-05, 5.790299999999804e-05, 5.8000000000002494e-05, 5.7999999999995555e-05, 5.784699999999976e-05, 5.791699999999761e-05, 5.8305999999994085e-05, 5.845899999999682e-05, 5.844500000000419e-05, 5.766699999999736e-05, 5.756900000000037e-05, 5.8458000000004284e-05, 5.794500000000369e-05, 5.836099999999983e-05, 5.790300000000498e-05, 5.834700000000026e-05, 5.8444000000004714e-05, 5.811099999999958e-05, 5.8236000000003174e-05, 5.790299999999804e-05, 5.8458000000004284e-05, 5.7999999999995555e-05, 5.8000000000002494e-05, 5.7556000000000274e-05, 5.8014000000002064e-05, 5.7569999999999844e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.576" endtime="20201030 18:29:09.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.564" endtime="20201030 18:29:09.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.592" endtime="20201030 18:29:09.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.587" endtime="20201030 18:29:09.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.585" endtime="20201030 18:29:09.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.093" endtime="20201030 18:29:09.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.092" endtime="20201030 18:29:09.617"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.644" endtime="20201030 18:29:09.667"></status>
</kw>
<msg timestamp="20201030 18:29:09.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.640" endtime="20201030 18:29:09.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.670" endtime="20201030 18:29:09.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.678" endtime="20201030 18:29:09.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.632" endtime="20201030 18:29:09.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.625" endtime="20201030 18:29:09.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.705" endtime="20201030 18:29:10.101"></status>
</kw>
<msg timestamp="20201030 18:29:10.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046760375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:09.702" endtime="20201030 18:29:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046760375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:10.111" endtime="20201030 18:29:10.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.129" endtime="20201030 18:29:10.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.693" endtime="20201030 18:29:10.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.688" endtime="20201030 18:29:10.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.146" level="INFO">${RESULT} = [{'diff': 5.862499999999965e-05}, {'diff': 5.8943999999998276e-05}, {'diff': 5.9221999999997665e-05}, {'diff': 5.86949999999975e-05}, {'diff': 5.865299999999879e-05}, {'diff': 5.944500000000519e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:10.138" endtime="20201030 18:29:10.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.157" level="INFO">${ACCURACY} = {'diff': [5.862499999999965e-05, 5.8943999999998276e-05, 5.9221999999997665e-05, 5.86949999999975e-05, 5.865299999999879e-05, 5.944500000000519e-05, 5.8791999999995015e-05, 5.858300000000094e-05, 5.88...</msg>
<status status="PASS" starttime="20201030 18:29:10.148" endtime="20201030 18:29:10.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.168" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.166" endtime="20201030 18:29:10.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.173" level="INFO">VALUE: [5.862499999999965e-05, 5.8943999999998276e-05, 5.9221999999997665e-05, 5.86949999999975e-05, 5.865299999999879e-05, 5.944500000000519e-05, 5.8791999999995015e-05, 5.858300000000094e-05, 5.881900000000162e-05, 5.911100000000058e-05, 5.880500000000205e-05, 5.877700000000291e-05, 5.8792000000001954e-05, 5.931900000000212e-05, 5.8792000000001954e-05, 5.9486000000004424e-05, 5.8570000000000844e-05, 5.940299999999954e-05, 5.890299999999904e-05, 5.9000000000003494e-05, 5.9235999999997235e-05, 5.863900000000616e-05, 5.9014000000003064e-05, 5.866699999999836e-05, 5.8778000000002384e-05, 5.9334000000001164e-05, 5.9429999999999206e-05, 5.8985999999996985e-05, 5.9457999999998346e-05, 5.8666000000005825e-05, 5.9000000000003494e-05, 5.912500000000015e-05, 5.934700000000126e-05, 5.9471999999997915e-05, 5.8555999999994335e-05, 5.8806000000001524e-05, 5.866699999999836e-05, 5.936100000000083e-05, 5.861100000000008e-05, 5.926300000000384e-05, 5.9263999999996375e-05, 5.9151999999999816e-05, 5.888899999999947e-05, 5.8735999999996735e-05, 5.911100000000058e-05, 5.9194000000005464e-05, 5.933300000000169e-05, 5.9013999999996125e-05, 5.886100000000033e-05, 5.9429999999999206e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.170" endtime="20201030 18:29:10.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.159" endtime="20201030 18:29:10.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.186" endtime="20201030 18:29:10.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.182" endtime="20201030 18:29:10.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.179" endtime="20201030 18:29:10.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.619" endtime="20201030 18:29:10.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.618" endtime="20201030 18:29:10.211"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.233" endtime="20201030 18:29:10.254"></status>
</kw>
<msg timestamp="20201030 18:29:10.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.230" endtime="20201030 18:29:10.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.258" endtime="20201030 18:29:10.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.264" endtime="20201030 18:29:10.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.223" endtime="20201030 18:29:10.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.217" endtime="20201030 18:29:10.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.287" endtime="20201030 18:29:10.634"></status>
</kw>
<msg timestamp="20201030 18:29:10.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040966458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.283" endtime="20201030 18:29:10.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040966458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041026208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.643" endtime="20201030 18:29:10.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.662" endtime="20201030 18:29:10.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.276" endtime="20201030 18:29:10.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.272" endtime="20201030 18:29:10.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.680" level="INFO">${RESULT} = [{'diff': 5.9750000000004244e-05}, {'diff': 5.9777999999996445e-05}, {'diff': 5.956900000000237e-05}, {'diff': 5.9985999999997985e-05}, {'diff': 6.034700000000226e-05}, {'diff': 5.990300000000004e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:10.671" endtime="20201030 18:29:10.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.689" level="INFO">${ACCURACY} = {'diff': [5.9750000000004244e-05, 5.9777999999996445e-05, 5.956900000000237e-05, 5.9985999999997985e-05, 6.034700000000226e-05, 5.990300000000004e-05, 5.9792000000002954e-05, 5.9985999999997985e-05, 6...</msg>
<status status="PASS" starttime="20201030 18:29:10.682" endtime="20201030 18:29:10.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.700" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.698" endtime="20201030 18:29:10.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.705" level="INFO">VALUE: [5.9750000000004244e-05, 5.9777999999996445e-05, 5.956900000000237e-05, 5.9985999999997985e-05, 6.034700000000226e-05, 5.990300000000004e-05, 5.9792000000002954e-05, 5.9985999999997985e-05, 6.0027999999996695e-05, 5.966699999999936e-05, 5.9805999999995585e-05, 6.0235999999998235e-05, 5.98750000000009e-05, 6.0250000000004744e-05, 5.9778000000003384e-05, 6.0457999999999346e-05, 5.979100000000348e-05, 6.0235999999998235e-05, 5.979099999999654e-05, 6.0056000000002774e-05, 6.0443999999999776e-05, 5.9556000000002274e-05, 6.0235999999998235e-05, 6.0500000000004994e-05, 6.0443999999999776e-05, 5.9806000000002524e-05, 5.988900000000047e-05, 5.9528000000003134e-05, 6.0013999999997125e-05, 6.0334000000002164e-05, 5.9999999999997555e-05, 5.9778000000003384e-05, 5.9665999999999886e-05, 5.983300000000219e-05, 6.0014000000004064e-05, 5.977699999999697e-05, 5.9693999999999026e-05, 5.9999999999997555e-05, 6.0235999999998235e-05, 5.962500000000065e-05, 6.037499999999446e-05, 6.0249999999997805e-05, 5.965299999999979e-05, 5.9486000000004424e-05, 5.9777999999996445e-05, 6.047300000000533e-05, 6.0000000000004494e-05, 6.0348000000001734e-05, 6.034700000000226e-05, 6.001299999999765e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.702" endtime="20201030 18:29:10.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.691" endtime="20201030 18:29:10.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.718" endtime="20201030 18:29:10.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.714" endtime="20201030 18:29:10.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.711" endtime="20201030 18:29:10.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.213" endtime="20201030 18:29:10.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.212" endtime="20201030 18:29:10.743"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.767" endtime="20201030 18:29:10.790"></status>
</kw>
<msg timestamp="20201030 18:29:10.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.764" endtime="20201030 18:29:10.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.793" endtime="20201030 18:29:10.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.799" endtime="20201030 18:29:10.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.756" endtime="20201030 18:29:10.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.750" endtime="20201030 18:29:10.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.822" endtime="20201030 18:29:11.168"></status>
</kw>
<msg timestamp="20201030 18:29:11.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044922111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044983069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.819" endtime="20201030 18:29:11.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044922111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044983069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.178" endtime="20201030 18:29:11.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.196" endtime="20201030 18:29:11.200"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.812" endtime="20201030 18:29:11.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.807" endtime="20201030 18:29:11.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.213" level="INFO">${RESULT} = [{'diff': 6.0957999999999846e-05}, {'diff': 6.0902000000001566e-05}, {'diff': 6.0652000000001316e-05}, {'diff': 6.088899999999453e-05}, {'diff': 6.0972000000006354e-05}, {'diff': 6.111099999999564e-05...</msg>
<status status="PASS" starttime="20201030 18:29:11.205" endtime="20201030 18:29:11.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.223" level="INFO">${ACCURACY} = {'diff': [6.0957999999999846e-05, 6.0902000000001566e-05, 6.0652000000001316e-05, 6.088899999999453e-05, 6.0972000000006354e-05, 6.111099999999564e-05, 6.066599999999395e-05, 6.104199999999727e-05, 6....</msg>
<status status="PASS" starttime="20201030 18:29:11.216" endtime="20201030 18:29:11.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.233" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.231" endtime="20201030 18:29:11.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.239" level="INFO">VALUE: [6.0957999999999846e-05, 6.0902000000001566e-05, 6.0652000000001316e-05, 6.088899999999453e-05, 6.0972000000006354e-05, 6.111099999999564e-05, 6.066599999999395e-05, 6.104199999999727e-05, 6.088900000000147e-05, 6.116599999999445e-05, 6.12080000000001e-05, 6.109699999999607e-05, 6.1013999999998125e-05, 6.088900000000147e-05, 6.0957999999999846e-05, 6.131999999999665e-05, 6.136099999999589e-05, 6.111199999999511e-05, 6.079099999999754e-05, 6.0652000000001316e-05, 6.0680000000000456e-05, 6.12499999999988e-05, 6.056900000000337e-05, 6.145800000000035e-05, 6.058300000000294e-05, 6.131900000000412e-05, 6.0986000000005924e-05, 6.1014000000005064e-05, 6.084700000000276e-05, 6.107000000000334e-05, 6.123599999999924e-05, 6.104099999999779e-05, 6.145899999999982e-05, 6.0680000000000456e-05, 6.0500000000004994e-05, 6.0680000000000456e-05, 6.0666000000000886e-05, 6.0680000000000456e-05, 6.05550000000038e-05, 6.134700000000326e-05, 6.0999999999998555e-05, 6.065300000000079e-05, 6.147199999999992e-05, 6.0791999999997015e-05, 6.113899999999478e-05, 6.112499999999521e-05, 6.0735999999998735e-05, 6.091700000000061e-05, 6.058300000000294e-05, 6.1013999999998125e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.236" endtime="20201030 18:29:11.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.225" endtime="20201030 18:29:11.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.253" endtime="20201030 18:29:11.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.247" endtime="20201030 18:29:11.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.245" endtime="20201030 18:29:11.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.746" endtime="20201030 18:29:11.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.744" endtime="20201030 18:29:11.278"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.300" endtime="20201030 18:29:11.321"></status>
</kw>
<msg timestamp="20201030 18:29:11.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.297" endtime="20201030 18:29:11.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.324" endtime="20201030 18:29:11.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.331" endtime="20201030 18:29:11.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.290" endtime="20201030 18:29:11.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.284" endtime="20201030 18:29:11.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.354" endtime="20201030 18:29:11.698"></status>
</kw>
<msg timestamp="20201030 18:29:11.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.351" endtime="20201030 18:29:11.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040985514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041047111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.708" endtime="20201030 18:29:11.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.726" endtime="20201030 18:29:11.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.343" endtime="20201030 18:29:11.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.339" endtime="20201030 18:29:11.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.743" level="INFO">${RESULT} = [{'diff': 6.159699999999657e-05}, {'diff': 6.188899999999553e-05}, {'diff': 6.168099999999399e-05}, {'diff': 6.166700000000136e-05}, {'diff': 6.190300000000204e-05}, {'diff': 6.199999999999956e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:11.735" endtime="20201030 18:29:11.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.758" level="INFO">${ACCURACY} = {'diff': [6.159699999999657e-05, 6.188899999999553e-05, 6.168099999999399e-05, 6.166700000000136e-05, 6.190300000000204e-05, 6.199999999999956e-05, 6.222300000000014e-05, 6.213900000000272e-05, 6.2111...</msg>
<status status="PASS" starttime="20201030 18:29:11.746" endtime="20201030 18:29:11.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.769" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.767" endtime="20201030 18:29:11.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.774" level="INFO">VALUE: [6.159699999999657e-05, 6.188899999999553e-05, 6.168099999999399e-05, 6.166700000000136e-05, 6.190300000000204e-05, 6.199999999999956e-05, 6.222300000000014e-05, 6.213900000000272e-05, 6.211100000000358e-05, 6.190200000000257e-05, 6.169400000000103e-05, 6.201299999999965e-05, 6.166600000000189e-05, 6.211100000000358e-05, 6.188900000000247e-05, 6.201399999999913e-05, 6.245800000000135e-05, 6.231899999999818e-05, 6.166700000000136e-05, 6.177800000000538e-05, 6.212500000000315e-05, 6.216700000000186e-05, 6.234700000000426e-05, 6.223600000000024e-05, 6.15699999999969e-05, 6.212500000000315e-05, 6.198699999999946e-05, 6.186100000000333e-05, 6.233299999999775e-05, 6.207000000000434e-05, 6.201400000000606e-05, 6.20000000000065e-05, 6.211100000000358e-05, 6.229199999999852e-05, 6.20000000000065e-05, 6.148599999999949e-05, 6.188899999999553e-05, 6.188899999999553e-05, 6.247300000000039e-05, 6.190300000000204e-05, 6.194400000000128e-05, 6.188899999999553e-05, 6.233399999999722e-05, 6.205499999999836e-05, 6.179099999999854e-05, 6.211099999999664e-05, 6.184699999999682e-05, 6.247200000000092e-05, 6.18750000000029e-05, 6.168000000000146e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.771" endtime="20201030 18:29:11.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.760" endtime="20201030 18:29:11.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.787" endtime="20201030 18:29:11.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.783" endtime="20201030 18:29:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.780" endtime="20201030 18:29:11.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.280" endtime="20201030 18:29:11.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.279" endtime="20201030 18:29:11.813"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.835" endtime="20201030 18:29:11.856"></status>
</kw>
<msg timestamp="20201030 18:29:11.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.832" endtime="20201030 18:29:11.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.859" endtime="20201030 18:29:11.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.866" endtime="20201030 18:29:11.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.825" endtime="20201030 18:29:11.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.819" endtime="20201030 18:29:11.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.889" endtime="20201030 18:29:12.233"></status>
</kw>
<msg timestamp="20201030 18:29:12.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.885" endtime="20201030 18:29:12.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041199819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041263236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.243" endtime="20201030 18:29:12.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.261" endtime="20201030 18:29:12.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.878" endtime="20201030 18:29:12.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.873" endtime="20201030 18:29:12.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.278" level="INFO">${RESULT} = [{'diff': 6.341700000000311e-05}, {'diff': 6.265299999999585e-05}, {'diff': 6.256899999999843e-05}, {'diff': 6.277799999999945e-05}, {'diff': 6.345799999999541e-05}, {'diff': 6.266700000000236e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:12.269" endtime="20201030 18:29:12.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.289" level="INFO">${ACCURACY} = {'diff': [6.341700000000311e-05, 6.265299999999585e-05, 6.256899999999843e-05, 6.277799999999945e-05, 6.345799999999541e-05, 6.266700000000236e-05, 6.334699999999832e-05, 6.32080000000021e-05, 6.27919...</msg>
<status status="PASS" starttime="20201030 18:29:12.280" endtime="20201030 18:29:12.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.300" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.298" endtime="20201030 18:29:12.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.305" level="INFO">VALUE: [6.341700000000311e-05, 6.265299999999585e-05, 6.256899999999843e-05, 6.277799999999945e-05, 6.345799999999541e-05, 6.266700000000236e-05, 6.334699999999832e-05, 6.32080000000021e-05, 6.279199999999902e-05, 6.283299999999825e-05, 6.265300000000279e-05, 6.300000000000056e-05, 6.312499999999721e-05, 6.259699999999757e-05, 6.268000000000246e-05, 6.279099999999954e-05, 6.301400000000013e-05, 6.29029999999961e-05, 6.277799999999945e-05, 6.301400000000013e-05, 6.294400000000228e-05, 6.344400000000278e-05, 6.291700000000261e-05, 6.288900000000347e-05, 6.25699999999979e-05, 6.255599999999834e-05, 6.344500000000225e-05, 6.283300000000519e-05, 6.255600000000527e-05, 6.288899999999653e-05, 6.300000000000056e-05, 6.301400000000013e-05, 6.255499999999886e-05, 6.267999999999552e-05, 6.322200000000167e-05, 6.255499999999886e-05, 6.300000000000056e-05, 6.256899999999843e-05, 6.301400000000013e-05, 6.334700000000526e-05, 6.300000000000056e-05, 6.25420000000057e-05, 6.345899999999488e-05, 6.29029999999961e-05, 6.312499999999721e-05, 6.311199999999711e-05, 6.256899999999843e-05, 6.298600000000099e-05, 6.256899999999843e-05, 6.280599999999859e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.302" endtime="20201030 18:29:12.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.291" endtime="20201030 18:29:12.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.318" endtime="20201030 18:29:12.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.313" endtime="20201030 18:29:12.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.311" endtime="20201030 18:29:12.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.815" endtime="20201030 18:29:12.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.814" endtime="20201030 18:29:12.343"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.366" endtime="20201030 18:29:12.387"></status>
</kw>
<msg timestamp="20201030 18:29:12.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.363" endtime="20201030 18:29:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.390" endtime="20201030 18:29:12.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.396" endtime="20201030 18:29:12.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.356" endtime="20201030 18:29:12.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.350" endtime="20201030 18:29:12.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.419" endtime="20201030 18:29:12.775"></status>
</kw>
<msg timestamp="20201030 18:29:12.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042268375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042332222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.416" endtime="20201030 18:29:12.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042268375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042332222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.785" endtime="20201030 18:29:12.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.805" endtime="20201030 18:29:12.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.409" endtime="20201030 18:29:12.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.404" endtime="20201030 18:29:12.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.825" level="INFO">${RESULT} = [{'diff': 6.384700000000576e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.37080000000026e-05}, {'diff': 6.412499999999821e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.366699999999642e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:12.815" endtime="20201030 18:29:12.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.835" level="INFO">${ACCURACY} = {'diff': [6.384700000000576e-05, 6.377800000000045e-05, 6.37080000000026e-05, 6.412499999999821e-05, 6.379200000000002e-05, 6.366699999999642e-05, 6.354199999999977e-05, 6.358400000000541e-05, 6.39860...</msg>
<status status="PASS" starttime="20201030 18:29:12.827" endtime="20201030 18:29:12.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.847" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.845" endtime="20201030 18:29:12.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.853" level="INFO">VALUE: [6.384700000000576e-05, 6.377800000000045e-05, 6.37080000000026e-05, 6.412499999999821e-05, 6.379200000000002e-05, 6.366699999999642e-05, 6.354199999999977e-05, 6.358400000000541e-05, 6.398600000000199e-05, 6.411099999999864e-05, 6.37500000000013e-05, 6.366699999999642e-05, 6.384699999999882e-05, 6.366600000000389e-05, 6.368000000000346e-05, 6.400000000000156e-05, 6.437499999999846e-05, 6.40280000000007e-05, 6.444399999999684e-05, 6.416699999999692e-05, 6.388900000000447e-05, 6.400000000000156e-05, 6.422200000000267e-05, 6.43750000000054e-05, 6.422199999999573e-05, 6.422300000000214e-05, 6.401400000000113e-05, 6.377800000000045e-05, 6.434699999999932e-05, 6.363800000000475e-05, 6.433299999999975e-05, 6.391700000000361e-05, 6.3582999999999e-05, 6.436199999999836e-05, 6.366700000000336e-05, 6.401400000000113e-05, 6.363900000000422e-05, 6.447199999999598e-05, 6.355599999999934e-05, 6.445899999999588e-05, 6.413899999999778e-05, 6.416699999999692e-05, 6.401400000000113e-05, 6.366700000000336e-05, 6.356899999999943e-05, 6.400000000000156e-05, 6.390199999999763e-05, 6.373600000000174e-05, 6.379100000000054e-05, 6.355499999999986e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.850" endtime="20201030 18:29:12.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.837" endtime="20201030 18:29:12.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.866" endtime="20201030 18:29:12.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.862" endtime="20201030 18:29:12.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.859" endtime="20201030 18:29:12.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.345" endtime="20201030 18:29:12.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.344" endtime="20201030 18:29:12.892"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.916" endtime="20201030 18:29:12.940"></status>
</kw>
<msg timestamp="20201030 18:29:12.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.913" endtime="20201030 18:29:12.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.943" endtime="20201030 18:29:12.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.950" endtime="20201030 18:29:12.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.905" endtime="20201030 18:29:12.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.899" endtime="20201030 18:29:12.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.975" endtime="20201030 18:29:13.303"></status>
</kw>
<msg timestamp="20201030 18:29:13.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045325931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045391014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.971" endtime="20201030 18:29:13.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045325931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045391014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.307" endtime="20201030 18:29:13.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.316" endtime="20201030 18:29:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.964" endtime="20201030 18:29:13.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.959" endtime="20201030 18:29:13.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.324" level="INFO">${RESULT} = [{'diff': 6.50830000000005e-05}, {'diff': 6.480600000000059e-05}, {'diff': 6.544399999999784e-05}, {'diff': 6.547300000000339e-05}, {'diff': 6.501399999999519e-05}, {'diff': 6.516599999999845e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:13.320" endtime="20201030 18:29:13.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.329" level="INFO">${ACCURACY} = {'diff': [6.50830000000005e-05, 6.480600000000059e-05, 6.544399999999784e-05, 6.547300000000339e-05, 6.501399999999519e-05, 6.516599999999845e-05, 6.533400000000023e-05, 6.502699999999528e-05, 6.48890...</msg>
<status status="PASS" starttime="20201030 18:29:13.325" endtime="20201030 18:29:13.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.334" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.333" endtime="20201030 18:29:13.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.337" level="INFO">VALUE: [6.50830000000005e-05, 6.480600000000059e-05, 6.544399999999784e-05, 6.547300000000339e-05, 6.501399999999519e-05, 6.516599999999845e-05, 6.533400000000023e-05, 6.502699999999528e-05, 6.488900000000547e-05, 6.465299999999785e-05, 6.523600000000324e-05, 6.465200000000532e-05, 6.497199999999648e-05, 6.500000000000256e-05, 6.527800000000195e-05, 6.523600000000324e-05, 6.466699999999742e-05, 6.526400000000238e-05, 6.499999999999562e-05, 6.523600000000324e-05, 6.450000000000206e-05, 6.49029999999981e-05, 6.513899999999878e-05, 6.498600000000299e-05, 6.480500000000111e-05, 6.541699999999817e-05, 6.52359999999963e-05, 6.488799999999906e-05, 6.49029999999981e-05, 6.468000000000446e-05, 6.450000000000206e-05, 6.533299999999381e-05, 6.506900000000093e-05, 6.49029999999981e-05, 6.498599999999605e-05, 6.52500000000028e-05, 6.477800000000145e-05, 6.52359999999963e-05, 6.522300000000314e-05, 6.511099999999964e-05, 6.477800000000145e-05, 6.545799999999741e-05, 6.487499999999896e-05, 6.480500000000111e-05, 6.456900000000043e-05, 6.47909999999946e-05, 6.492999999999777e-05, 6.456900000000043e-05, 6.498600000000299e-05, 6.479200000000102e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.335" endtime="20201030 18:29:13.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.330" endtime="20201030 18:29:13.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.350" endtime="20201030 18:29:13.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.347" endtime="20201030 18:29:13.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.346" endtime="20201030 18:29:13.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.894" endtime="20201030 18:29:13.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.893" endtime="20201030 18:29:13.371"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.383" endtime="20201030 18:29:13.400"></status>
</kw>
<msg timestamp="20201030 18:29:13.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.381" endtime="20201030 18:29:13.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.402" endtime="20201030 18:29:13.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.405" endtime="20201030 18:29:13.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.378" endtime="20201030 18:29:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.375" endtime="20201030 18:29:13.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.417" endtime="20201030 18:29:13.722"></status>
</kw>
<msg timestamp="20201030 18:29:13.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.415" endtime="20201030 18:29:13.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025110806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.731" endtime="20201030 18:29:13.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.755" endtime="20201030 18:29:13.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.412" endtime="20201030 18:29:13.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.409" endtime="20201030 18:29:13.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.775" level="INFO">${RESULT} = [{'diff': 6.569500000000103e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.622300000000067e-05}, {'diff': 6.642999999999927e-05}, {'diff': 6.647200000000145e-05}, {'diff': 6.559700000000057e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:13.766" endtime="20201030 18:29:13.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.787" level="INFO">${ACCURACY} = {'diff': [6.569500000000103e-05, 6.612500000000021e-05, 6.622300000000067e-05, 6.642999999999927e-05, 6.647200000000145e-05, 6.559700000000057e-05, 6.601399999999966e-05, 6.633299999999828e-05, 6.6013...</msg>
<status status="PASS" starttime="20201030 18:29:13.777" endtime="20201030 18:29:13.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.798" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.796" endtime="20201030 18:29:13.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.805" level="INFO">VALUE: [6.569500000000103e-05, 6.612500000000021e-05, 6.622300000000067e-05, 6.642999999999927e-05, 6.647200000000145e-05, 6.559700000000057e-05, 6.601399999999966e-05, 6.633299999999828e-05, 6.601399999999966e-05, 6.648600000000102e-05, 6.577800000000245e-05, 6.634699999999785e-05, 6.600000000000009e-05, 6.645900000000135e-05, 6.62220000000012e-05, 6.60280000000027e-05, 6.55419999999983e-05, 6.611200000000012e-05, 6.579099999999907e-05, 6.633299999999828e-05, 6.629200000000252e-05, 6.619400000000206e-05, 6.634700000000132e-05, 6.623600000000077e-05, 6.588899999999953e-05, 6.633299999999828e-05, 6.633300000000175e-05, 6.602799999999923e-05, 6.62359999999973e-05, 6.623600000000077e-05, 6.580500000000211e-05, 6.55419999999983e-05, 6.579199999999855e-05, 6.629099999999957e-05, 6.601300000000018e-05, 6.594399999999834e-05, 6.601399999999966e-05, 6.645799999999841e-05, 6.588899999999953e-05, 6.612500000000021e-05, 6.555599999999787e-05, 6.595900000000085e-05, 6.59029999999991e-05, 6.612500000000021e-05, 6.586100000000039e-05, 6.644500000000178e-05, 6.587499999999996e-05, 6.625000000000034e-05, 6.613800000000031e-05, 6.555599999999787e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.801" endtime="20201030 18:29:13.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.789" endtime="20201030 18:29:13.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.819" endtime="20201030 18:29:13.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.814" endtime="20201030 18:29:13.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.812" endtime="20201030 18:29:13.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.372" endtime="20201030 18:29:13.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.372" endtime="20201030 18:29:13.845"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.871" endtime="20201030 18:29:13.894"></status>
</kw>
<msg timestamp="20201030 18:29:13.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.868" endtime="20201030 18:29:13.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.898" endtime="20201030 18:29:13.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.904" endtime="20201030 18:29:13.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.859" endtime="20201030 18:29:13.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.853" endtime="20201030 18:29:13.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.929" endtime="20201030 18:29:14.302"></status>
</kw>
<msg timestamp="20201030 18:29:14.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0465135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046580583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:13.926" endtime="20201030 18:29:14.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0465135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046580583, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:14.312" endtime="20201030 18:29:14.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.332" endtime="20201030 18:29:14.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.918" endtime="20201030 18:29:14.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.913" endtime="20201030 18:29:14.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.350" level="INFO">${RESULT} = [{'diff': 6.70830000000025e-05}, {'diff': 6.694399999999934e-05}, {'diff': 6.733300000000275e-05}, {'diff': 6.652799999999626e-05}, {'diff': 6.677800000000345e-05}, {'diff': 6.716699999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:14.341" endtime="20201030 18:29:14.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.362" level="INFO">${ACCURACY} = {'diff': [6.70830000000025e-05, 6.694399999999934e-05, 6.733300000000275e-05, 6.652799999999626e-05, 6.677800000000345e-05, 6.716699999999992e-05, 6.70280000000037e-05, 6.712500000000121e-05, 6.747199...</msg>
<status status="PASS" starttime="20201030 18:29:14.352" endtime="20201030 18:29:14.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.374" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.371" endtime="20201030 18:29:14.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.379" level="INFO">VALUE: [6.70830000000025e-05, 6.694399999999934e-05, 6.733300000000275e-05, 6.652799999999626e-05, 6.677800000000345e-05, 6.716699999999992e-05, 6.70280000000037e-05, 6.712500000000121e-05, 6.747199999999898e-05, 6.694399999999934e-05, 6.679199999999608e-05, 6.668099999999899e-05, 6.701400000000413e-05, 6.679200000000302e-05, 6.701299999999771e-05, 6.677699999999703e-05, 6.688800000000106e-05, 6.679199999999608e-05, 6.679100000000354e-05, 6.69030000000001e-05, 6.684699999999488e-05, 6.688900000000053e-05, 6.668099999999899e-05, 6.666699999999942e-05, 6.668099999999899e-05, 6.72359999999983e-05, 6.676400000000388e-05, 6.733400000000223e-05, 6.677799999999651e-05, 6.733399999999529e-05, 6.656900000000243e-05, 6.652700000000372e-05, 6.701399999999719e-05, 6.698599999999805e-05, 6.734699999999538e-05, 6.688900000000053e-05, 6.701399999999719e-05, 6.734700000000232e-05, 6.734699999999538e-05, 6.712499999999427e-05, 6.65700000000019e-05, 6.720899999999863e-05, 6.713900000000078e-05, 6.699999999999762e-05, 6.6583000000002e-05, 6.733300000000275e-05, 6.713900000000078e-05, 6.701400000000413e-05, 6.666599999999995e-05, 6.70280000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.376" endtime="20201030 18:29:14.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.364" endtime="20201030 18:29:14.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.393" endtime="20201030 18:29:14.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.388" endtime="20201030 18:29:14.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.385" endtime="20201030 18:29:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.848" endtime="20201030 18:29:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.846" endtime="20201030 18:29:14.419"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.443" endtime="20201030 18:29:14.464"></status>
</kw>
<msg timestamp="20201030 18:29:14.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.439" endtime="20201030 18:29:14.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.468" endtime="20201030 18:29:14.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.474" endtime="20201030 18:29:14.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.432" endtime="20201030 18:29:14.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.426" endtime="20201030 18:29:14.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.500" endtime="20201030 18:29:14.871"></status>
</kw>
<msg timestamp="20201030 18:29:14.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04382, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043887458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:14.496" endtime="20201030 18:29:14.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04382, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043887458, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:14.881" endtime="20201030 18:29:14.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.902" endtime="20201030 18:29:14.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.488" endtime="20201030 18:29:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.483" endtime="20201030 18:29:14.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.921" level="INFO">${RESULT} = [{'diff': 6.745799999999941e-05}, {'diff': 6.827799999999801e-05}, {'diff': 6.79030000000011e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.797199999999948e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:14.911" endtime="20201030 18:29:14.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.931" level="INFO">${ACCURACY} = {'diff': [6.745799999999941e-05, 6.827799999999801e-05, 6.79030000000011e-05, 6.845800000000041e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.786099999999545e-05, 6.824999999999887e-05, 6.84450...</msg>
<status status="PASS" starttime="20201030 18:29:14.923" endtime="20201030 18:29:14.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.942" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.940" endtime="20201030 18:29:14.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.949" level="INFO">VALUE: [6.745799999999941e-05, 6.827799999999801e-05, 6.79030000000011e-05, 6.845800000000041e-05, 6.847199999999998e-05, 6.797199999999948e-05, 6.786099999999545e-05, 6.824999999999887e-05, 6.844500000000031e-05, 6.81109999999957e-05, 6.820899999999963e-05, 6.800000000000556e-05, 6.781900000000368e-05, 6.784699999999588e-05, 6.76109999999952e-05, 6.834699999999638e-05, 6.804200000000427e-05, 6.767999999999358e-05, 6.801399999999819e-05, 6.768000000000052e-05, 6.79030000000011e-05, 6.811100000000264e-05, 6.762499999999477e-05, 6.776399999999794e-05, 6.801399999999819e-05, 6.804099999999785e-05, 6.79030000000011e-05, 6.83480000000028e-05, 6.755600000000334e-05, 6.77909999999976e-05, 6.768000000000052e-05, 6.777700000000497e-05, 6.770799999999966e-05, 6.798599999999905e-05, 6.79030000000011e-05, 6.777799999999751e-05, 6.818100000000049e-05, 6.801399999999819e-05, 6.798599999999905e-05, 6.784700000000282e-05, 6.797199999999948e-05, 6.762499999999477e-05, 6.777799999999751e-05, 6.798700000000546e-05, 6.819500000000006e-05, 6.809700000000307e-05, 6.766600000000095e-05, 6.77909999999976e-05, 6.751399999999769e-05, 6.833299999999681e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.945" endtime="20201030 18:29:14.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.933" endtime="20201030 18:29:14.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.962" endtime="20201030 18:29:14.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.957" endtime="20201030 18:29:14.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.955" endtime="20201030 18:29:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.421" endtime="20201030 18:29:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.420" endtime="20201030 18:29:14.988"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.012" endtime="20201030 18:29:15.036"></status>
</kw>
<msg timestamp="20201030 18:29:15.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.009" endtime="20201030 18:29:15.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.040" endtime="20201030 18:29:15.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.046" endtime="20201030 18:29:15.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.001" endtime="20201030 18:29:15.052"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.995" endtime="20201030 18:29:15.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.071" endtime="20201030 18:29:15.442"></status>
</kw>
<msg timestamp="20201030 18:29:15.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045490319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045559, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:15.068" endtime="20201030 18:29:15.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045490319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045559, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:15.452" endtime="20201030 18:29:15.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.472" endtime="20201030 18:29:15.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.060" endtime="20201030 18:29:15.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.055" endtime="20201030 18:29:15.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.490" level="INFO">${RESULT} = [{'diff': 6.868100000000099e-05}, {'diff': 6.876400000000588e-05}, {'diff': 6.92360000000003e-05}, {'diff': 6.866700000000142e-05}, {'diff': 6.85559999999974e-05}, {'diff': 6.92360000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:15.481" endtime="20201030 18:29:15.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.500" level="INFO">${ACCURACY} = {'diff': [6.868100000000099e-05, 6.876400000000588e-05, 6.92360000000003e-05, 6.866700000000142e-05, 6.85559999999974e-05, 6.92360000000003e-05, 6.877799999999851e-05, 6.917999999999508e-05, 6.8541999...</msg>
<status status="PASS" starttime="20201030 18:29:15.493" endtime="20201030 18:29:15.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.512" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.510" endtime="20201030 18:29:15.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.518" level="INFO">VALUE: [6.868100000000099e-05, 6.876400000000588e-05, 6.92360000000003e-05, 6.866700000000142e-05, 6.85559999999974e-05, 6.92360000000003e-05, 6.877799999999851e-05, 6.917999999999508e-05, 6.854199999999783e-05, 6.866599999999501e-05, 6.872200000000023e-05, 6.888800000000306e-05, 6.89030000000021e-05, 6.877699999999903e-05, 6.89030000000021e-05, 6.934699999999738e-05, 6.866699999999448e-05, 6.879200000000502e-05, 6.888900000000253e-05, 6.944500000000131e-05, 6.934700000000432e-05, 6.89030000000021e-05, 6.856999999999697e-05, 6.877799999999851e-05, 6.854199999999783e-05, 6.901299999999971e-05, 6.869400000000109e-05, 6.934699999999738e-05, 6.854100000000529e-05, 6.933300000000475e-05, 6.879199999999808e-05, 6.856900000000443e-05, 6.912500000000321e-05, 6.877799999999851e-05, 6.865299999999491e-05, 6.89030000000021e-05, 6.944500000000131e-05, 6.89030000000021e-05, 6.929200000000552e-05, 6.945900000000088e-05, 6.912500000000321e-05, 6.891599999999526e-05, 6.868000000000152e-05, 6.901399999999919e-05, 6.869400000000109e-05, 6.855499999999792e-05, 6.944400000000184e-05, 6.934700000000432e-05, 6.944500000000131e-05, 6.920900000000063e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.514" endtime="20201030 18:29:15.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.502" endtime="20201030 18:29:15.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.533" endtime="20201030 18:29:15.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.526" endtime="20201030 18:29:15.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.524" endtime="20201030 18:29:15.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.990" endtime="20201030 18:29:15.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.989" endtime="20201030 18:29:15.559"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.583" endtime="20201030 18:29:15.605"></status>
</kw>
<msg timestamp="20201030 18:29:15.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.579" endtime="20201030 18:29:15.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.608" endtime="20201030 18:29:15.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.615" endtime="20201030 18:29:15.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.572" endtime="20201030 18:29:15.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.566" endtime="20201030 18:29:15.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.641" endtime="20201030 18:29:16.012"></status>
</kw>
<msg timestamp="20201030 18:29:16.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043890153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.637" endtime="20201030 18:29:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043890153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.022" endtime="20201030 18:29:16.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.042" endtime="20201030 18:29:16.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.629" endtime="20201030 18:29:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.624" endtime="20201030 18:29:16.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.060" level="INFO">${RESULT} = [{'diff': 6.993100000000224e-05}, {'diff': 6.955499999999892e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.988899999999659e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.012499999999727e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:16.051" endtime="20201030 18:29:16.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.072" level="INFO">${ACCURACY} = {'diff': [6.993100000000224e-05, 6.955499999999892e-05, 7.001400000000019e-05, 6.988899999999659e-05, 6.998600000000105e-05, 7.012499999999727e-05, 6.95559999999984e-05, 6.956999999999797e-05, 7.01249...</msg>
<status status="PASS" starttime="20201030 18:29:16.062" endtime="20201030 18:29:16.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.083" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.081" endtime="20201030 18:29:16.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.089" level="INFO">VALUE: [6.993100000000224e-05, 6.955499999999892e-05, 7.001400000000019e-05, 6.988899999999659e-05, 6.998600000000105e-05, 7.012499999999727e-05, 6.95559999999984e-05, 6.956999999999797e-05, 7.012499999999727e-05, 7.011100000000464e-05, 7.015199999999694e-05, 7.023700000000077e-05, 7.000000000000062e-05, 7.000000000000062e-05, 6.968000000000252e-05, 6.9583000000005e-05, 6.988900000000353e-05, 6.987500000000396e-05, 6.977799999999951e-05, 6.977799999999951e-05, 7.022200000000173e-05, 6.954200000000577e-05, 6.963899999999634e-05, 6.979199999999908e-05, 7.048600000000155e-05, 6.992999999999583e-05, 7.044500000000231e-05, 6.956999999999797e-05, 7.001300000000071e-05, 6.955499999999892e-05, 7.008399999999804e-05, 6.988899999999659e-05, 7.023599999999436e-05, 7.000000000000062e-05, 6.995800000000191e-05, 6.99309999999953e-05, 7.034699999999838e-05, 7.02360000000013e-05, 7.001400000000019e-05, 6.955600000000534e-05, 6.99030000000031e-05, 6.955600000000534e-05, 6.95559999999984e-05, 7.045799999999547e-05, 7.044400000000284e-05, 6.955499999999892e-05, 6.975000000000037e-05, 7.001400000000019e-05, 6.951399999999969e-05, 7.022200000000173e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.086" endtime="20201030 18:29:16.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.074" endtime="20201030 18:29:16.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.102" endtime="20201030 18:29:16.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.098" endtime="20201030 18:29:16.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.095" endtime="20201030 18:29:16.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.561" endtime="20201030 18:29:16.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.560" endtime="20201030 18:29:16.128"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.152" endtime="20201030 18:29:16.174"></status>
</kw>
<msg timestamp="20201030 18:29:16.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.149" endtime="20201030 18:29:16.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.178" endtime="20201030 18:29:16.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.185" endtime="20201030 18:29:16.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.141" endtime="20201030 18:29:16.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.135" endtime="20201030 18:29:16.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.209" endtime="20201030 18:29:16.578"></status>
</kw>
<msg timestamp="20201030 18:29:16.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043688389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.206" endtime="20201030 18:29:16.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043688389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.588" endtime="20201030 18:29:16.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.608" endtime="20201030 18:29:16.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.198" endtime="20201030 18:29:16.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.193" endtime="20201030 18:29:16.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.626" level="INFO">${RESULT} = [{'diff': 7.097200000000248e-05}, {'diff': 7.099999999999468e-05}, {'diff': 7.090299999999716e-05}, {'diff': 7.130600000000015e-05}, {'diff': 7.090299999999716e-05}, {'diff': 7.101400000000119e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:16.617" endtime="20201030 18:29:16.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.641" level="INFO">${ACCURACY} = {'diff': [7.097200000000248e-05, 7.099999999999468e-05, 7.090299999999716e-05, 7.130600000000015e-05, 7.090299999999716e-05, 7.101400000000119e-05, 7.131900000000024e-05, 7.124999999999493e-05, 7.1319...</msg>
<status status="PASS" starttime="20201030 18:29:16.628" endtime="20201030 18:29:16.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.653" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.650" endtime="20201030 18:29:16.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.658" level="INFO">VALUE: [7.097200000000248e-05, 7.099999999999468e-05, 7.090299999999716e-05, 7.130600000000015e-05, 7.090299999999716e-05, 7.101400000000119e-05, 7.131900000000024e-05, 7.124999999999493e-05, 7.131900000000024e-05, 7.066700000000342e-05, 7.124999999999493e-05, 7.119400000000359e-05, 7.145799999999647e-05, 7.133299999999981e-05, 7.14439999999969e-05, 7.095899999999544e-05, 7.10559999999999e-05, 7.09030000000041e-05, 7.10559999999999e-05, 7.094400000000334e-05, 7.068100000000299e-05, 7.126400000000144e-05, 7.12360000000023e-05, 7.09160000000042e-05, 7.065199999999744e-05, 7.066600000000395e-05, 7.090299999999716e-05, 7.077800000000051e-05, 7.079200000000008e-05, 7.065299999999691e-05, 7.087500000000496e-05, 7.138899999999809e-05, 7.076400000000094e-05, 7.134799999999886e-05, 7.102700000000128e-05, 7.100000000000162e-05, 7.120799999999622e-05, 7.066599999999701e-05, 7.100000000000162e-05, 7.101400000000119e-05, 7.055499999999992e-05, 7.134699999999938e-05, 7.141699999999723e-05, 7.111100000000564e-05, 7.134699999999938e-05, 7.077800000000051e-05, 7.134799999999886e-05, 7.12360000000023e-05, 7.05559999999994e-05, 7.079200000000008e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.655" endtime="20201030 18:29:16.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.643" endtime="20201030 18:29:16.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.672" endtime="20201030 18:29:16.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.667" endtime="20201030 18:29:16.696"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.664" endtime="20201030 18:29:16.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.130" endtime="20201030 18:29:16.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.129" endtime="20201030 18:29:16.698"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.722" endtime="20201030 18:29:16.743"></status>
</kw>
<msg timestamp="20201030 18:29:16.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.718" endtime="20201030 18:29:16.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.747" endtime="20201030 18:29:16.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.754" endtime="20201030 18:29:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.711" endtime="20201030 18:29:16.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.704" endtime="20201030 18:29:16.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.779" endtime="20201030 18:29:17.113"></status>
</kw>
<msg timestamp="20201030 18:29:17.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.775" endtime="20201030 18:29:17.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043482708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043554792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.123" endtime="20201030 18:29:17.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.143" endtime="20201030 18:29:17.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.768" endtime="20201030 18:29:17.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.763" endtime="20201030 18:29:17.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.161" level="INFO">${RESULT} = [{'diff': 7.208400000000004e-05}, {'diff': 7.156999999999997e-05}, {'diff': 7.219500000000406e-05}, {'diff': 7.234700000000038e-05}, {'diff': 7.222200000000373e-05}, {'diff': 7.158300000000006e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:17.152" endtime="20201030 18:29:17.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.172" level="INFO">${ACCURACY} = {'diff': [7.208400000000004e-05, 7.156999999999997e-05, 7.219500000000406e-05, 7.234700000000038e-05, 7.222200000000373e-05, 7.158300000000006e-05, 7.152700000000178e-05, 7.212499999999927e-05, 7.2347...</msg>
<status status="PASS" starttime="20201030 18:29:17.164" endtime="20201030 18:29:17.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.183" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.181" endtime="20201030 18:29:17.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.189" level="INFO">VALUE: [7.208400000000004e-05, 7.156999999999997e-05, 7.219500000000406e-05, 7.234700000000038e-05, 7.222200000000373e-05, 7.158300000000006e-05, 7.152700000000178e-05, 7.212499999999927e-05, 7.234700000000038e-05, 7.216699999999798e-05, 7.215300000000535e-05, 7.204200000000133e-05, 7.166699999999748e-05, 7.191699999999773e-05, 7.168099999999705e-05, 7.200000000000262e-05, 7.24309999999978e-05, 7.244499999999737e-05, 7.180500000000117e-05, 7.233300000000081e-05, 7.237499999999952e-05, 7.24160000000057e-05, 7.162499999999877e-05, 7.19309999999973e-05, 7.22360000000033e-05, 7.177800000000151e-05, 7.156999999999997e-05, 7.176400000000194e-05, 7.212499999999927e-05, 7.251399999999575e-05, 7.22360000000033e-05, 7.245899999999694e-05, 7.201299999999577e-05, 7.229199999999464e-05, 7.219499999999712e-05, 7.166599999999801e-05, 7.190299999999816e-05, 7.216699999999798e-05, 7.155500000000092e-05, 7.202800000000176e-05, 7.191699999999773e-05, 7.156999999999997e-05, 7.168099999999705e-05, 7.177800000000151e-05, 7.179200000000108e-05, 7.15690000000005e-05, 7.180499999999423e-05, 7.168000000000452e-05, 7.231900000000124e-05, 7.188900000000553e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.186" endtime="20201030 18:29:17.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.173" endtime="20201030 18:29:17.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.202" endtime="20201030 18:29:17.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.198" endtime="20201030 18:29:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.195" endtime="20201030 18:29:17.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.700" endtime="20201030 18:29:17.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.699" endtime="20201030 18:29:17.228"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.252" endtime="20201030 18:29:17.275"></status>
</kw>
<msg timestamp="20201030 18:29:17.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.249" endtime="20201030 18:29:17.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.278" endtime="20201030 18:29:17.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.285" endtime="20201030 18:29:17.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.241" endtime="20201030 18:29:17.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.235" endtime="20201030 18:29:17.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.310" endtime="20201030 18:29:17.668"></status>
</kw>
<msg timestamp="20201030 18:29:17.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045059903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045132861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.307" endtime="20201030 18:29:17.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045059903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045132861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.678" endtime="20201030 18:29:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.698" endtime="20201030 18:29:17.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.299" endtime="20201030 18:29:17.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.294" endtime="20201030 18:29:17.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.717" level="INFO">${RESULT} = [{'diff': 7.295800000000491e-05}, {'diff': 7.250000000000312e-05}, {'diff': 7.333299999999487e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.277799999999557e-05}, {'diff': 7.301400000000319e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:17.707" endtime="20201030 18:29:17.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.726" level="INFO">${ACCURACY} = {'diff': [7.295800000000491e-05, 7.250000000000312e-05, 7.333299999999487e-05, 7.312500000000027e-05, 7.277799999999557e-05, 7.301400000000319e-05, 7.279199999999514e-05, 7.26110000000002e-05, 7.30979...</msg>
<status status="PASS" starttime="20201030 18:29:17.719" endtime="20201030 18:29:17.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.738" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.736" endtime="20201030 18:29:17.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.744" level="INFO">VALUE: [7.295800000000491e-05, 7.250000000000312e-05, 7.333299999999487e-05, 7.312500000000027e-05, 7.277799999999557e-05, 7.301400000000319e-05, 7.279199999999514e-05, 7.26110000000002e-05, 7.309799999999367e-05, 7.322200000000473e-05, 7.254099999999541e-05, 7.334700000000138e-05, 7.266599999999901e-05, 7.348599999999761e-05, 7.29030000000061e-05, 7.279200000000208e-05, 7.312500000000027e-05, 7.345900000000488e-05, 7.277799999999557e-05, 7.259800000000011e-05, 7.30560000000019e-05, 7.344499999999837e-05, 7.334799999999392e-05, 7.277800000000251e-05, 7.280499999999523e-05, 7.258300000000106e-05, 7.34439999999989e-05, 7.272200000000423e-05, 7.334700000000138e-05, 7.266700000000542e-05, 7.258300000000106e-05, 7.279200000000208e-05, 7.345799999999847e-05, 7.277799999999557e-05, 7.345899999999794e-05, 7.317999999999908e-05, 7.333299999999487e-05, 7.254200000000183e-05, 7.279099999999566e-05, 7.31110000000007e-05, 7.269399999999815e-05, 7.333299999999487e-05, 7.347199999999804e-05, 7.302799999999582e-05, 7.29439999999984e-05, 7.316699999999898e-05, 7.301400000000319e-05, 7.320799999999822e-05, 7.345900000000488e-05, 7.257000000000097e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.740" endtime="20201030 18:29:17.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.728" endtime="20201030 18:29:17.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.759" endtime="20201030 18:29:17.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.752" endtime="20201030 18:29:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.750" endtime="20201030 18:29:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.230" endtime="20201030 18:29:17.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.229" endtime="20201030 18:29:17.784"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.809" endtime="20201030 18:29:17.830"></status>
</kw>
<msg timestamp="20201030 18:29:17.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.805" endtime="20201030 18:29:17.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.834" endtime="20201030 18:29:17.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.840" endtime="20201030 18:29:17.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.797" endtime="20201030 18:29:17.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.791" endtime="20201030 18:29:17.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.865" endtime="20201030 18:29:18.228"></status>
</kw>
<msg timestamp="20201030 18:29:18.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043610111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043684125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.862" endtime="20201030 18:29:18.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043610111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043684125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.238" endtime="20201030 18:29:18.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.257" endtime="20201030 18:29:18.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.854" endtime="20201030 18:29:18.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.849" endtime="20201030 18:29:18.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.274" level="INFO">${RESULT} = [{'diff': 7.401399999999725e-05}, {'diff': 7.357000000000197e-05}, {'diff': 7.37360000000048e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.422299999999826e-05}, {'diff': 7.399999999999768e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:18.265" endtime="20201030 18:29:18.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.285" level="INFO">${ACCURACY} = {'diff': [7.401399999999725e-05, 7.357000000000197e-05, 7.37360000000048e-05, 7.388900000000059e-05, 7.422299999999826e-05, 7.399999999999768e-05, 7.427799999999707e-05, 7.445799999999947e-05, 7.35410...</msg>
<status status="PASS" starttime="20201030 18:29:18.276" endtime="20201030 18:29:18.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.296" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.293" endtime="20201030 18:29:18.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.301" level="INFO">VALUE: [7.401399999999725e-05, 7.357000000000197e-05, 7.37360000000048e-05, 7.388900000000059e-05, 7.422299999999826e-05, 7.399999999999768e-05, 7.427799999999707e-05, 7.445799999999947e-05, 7.354100000000335e-05, 7.3763999999997e-05, 7.402799999999682e-05, 7.366699999999948e-05, 7.367999999999958e-05, 7.44309999999998e-05, 7.431900000000324e-05, 7.433300000000281e-05, 7.366699999999948e-05, 7.387500000000102e-05, 7.397299999999801e-05, 7.395899999999844e-05, 7.401400000000419e-05, 7.423599999999836e-05, 7.436100000000195e-05, 7.440200000000119e-05, 7.445799999999947e-05, 7.387500000000102e-05, 7.413900000000084e-05, 7.423599999999836e-05, 7.376400000000394e-05, 7.401399999999725e-05, 7.349999999999718e-05, 7.368099999999905e-05, 7.425000000000487e-05, 7.398599999999811e-05, 7.379199999999614e-05, 7.388899999999365e-05, 7.423599999999836e-05, 7.365200000000044e-05, 7.412500000000127e-05, 7.401400000000419e-05, 7.434700000000238e-05, 7.411099999999476e-05, 7.433299999999587e-05, 7.402800000000376e-05, 7.380599999999571e-05, 7.391699999999973e-05, 7.445899999999894e-05, 7.40560000000029e-05, 7.38189999999958e-05, 7.41389999999939e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.298" endtime="20201030 18:29:18.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.287" endtime="20201030 18:29:18.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.313" endtime="20201030 18:29:18.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.309" endtime="20201030 18:29:18.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.307" endtime="20201030 18:29:18.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.787" endtime="20201030 18:29:18.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.785" endtime="20201030 18:29:18.338"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.361" endtime="20201030 18:29:18.381"></status>
</kw>
<msg timestamp="20201030 18:29:18.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.357" endtime="20201030 18:29:18.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.385" endtime="20201030 18:29:18.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.391" endtime="20201030 18:29:18.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.350" endtime="20201030 18:29:18.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.344" endtime="20201030 18:29:18.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.414" endtime="20201030 18:29:18.749"></status>
</kw>
<msg timestamp="20201030 18:29:18.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.411" endtime="20201030 18:29:18.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040707653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040782597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.759" endtime="20201030 18:29:18.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.777" endtime="20201030 18:29:18.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.404" endtime="20201030 18:29:18.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.399" endtime="20201030 18:29:18.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.794" level="INFO">${RESULT} = [{'diff': 7.494399999999346e-05}, {'diff': 7.495799999999997e-05}, {'diff': 7.468100000000005e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.531999999999678e-05}, {'diff': 7.468100000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:18.786" endtime="20201030 18:29:18.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.805" level="INFO">${ACCURACY} = {'diff': [7.494399999999346e-05, 7.495799999999997e-05, 7.468100000000005e-05, 7.501399999999825e-05, 7.531999999999678e-05, 7.468100000000005e-05, 7.477799999999757e-05, 7.490300000000116e-05, 7.5124...</msg>
<status status="PASS" starttime="20201030 18:29:18.796" endtime="20201030 18:29:18.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.816" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.814" endtime="20201030 18:29:18.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.821" level="INFO">VALUE: [7.494399999999346e-05, 7.495799999999997e-05, 7.468100000000005e-05, 7.501399999999825e-05, 7.531999999999678e-05, 7.468100000000005e-05, 7.477799999999757e-05, 7.490300000000116e-05, 7.512499999999533e-05, 7.54310000000008e-05, 7.545800000000047e-05, 7.523599999999936e-05, 7.493000000000083e-05, 7.547200000000004e-05, 7.455500000000392e-05, 7.484700000000288e-05, 7.45690000000035e-05, 7.541700000000123e-05, 7.490300000000116e-05, 7.548699999999908e-05, 7.499999999999868e-05, 7.456999999999603e-05, 7.490300000000116e-05, 7.511200000000218e-05, 7.490200000000169e-05, 7.465200000000144e-05, 7.455499999999698e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.470899999999919e-05, 7.52360000000063e-05, 7.495799999999997e-05, 7.491700000000073e-05, 7.490300000000116e-05, 7.458400000000254e-05, 7.534800000000286e-05, 7.523699999999883e-05, 7.4763999999998e-05, 7.545800000000047e-05, 7.512500000000227e-05, 7.47769999999981e-05, 7.545800000000047e-05, 7.468000000000058e-05, 7.45690000000035e-05, 7.468100000000005e-05, 7.506899999999705e-05, 7.522199999999979e-05, 7.480600000000365e-05, 7.501399999999825e-05, 7.534800000000286e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.818" endtime="20201030 18:29:18.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.807" endtime="20201030 18:29:18.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.834" endtime="20201030 18:29:18.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.830" endtime="20201030 18:29:18.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.827" endtime="20201030 18:29:18.858"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.340" endtime="20201030 18:29:18.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.339" endtime="20201030 18:29:18.859"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.881" endtime="20201030 18:29:18.902"></status>
</kw>
<msg timestamp="20201030 18:29:18.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.878" endtime="20201030 18:29:18.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.906" endtime="20201030 18:29:18.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.912" endtime="20201030 18:29:18.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.871" endtime="20201030 18:29:18.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.865" endtime="20201030 18:29:18.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.935" endtime="20201030 18:29:19.281"></status>
</kw>
<msg timestamp="20201030 18:29:19.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041055139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041130986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.932" endtime="20201030 18:29:19.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041055139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041130986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.290" endtime="20201030 18:29:19.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.309" endtime="20201030 18:29:19.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.925" endtime="20201030 18:29:19.314"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.920" endtime="20201030 18:29:19.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.326" level="INFO">${RESULT} = [{'diff': 7.584700000000388e-05}, {'diff': 7.555599999999746e-05}, {'diff': 7.606999999999753e-05}, {'diff': 7.554199999999789e-05}, {'diff': 7.647300000000051e-05}, {'diff': 7.557000000000397e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:19.317" endtime="20201030 18:29:19.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.335" level="INFO">${ACCURACY} = {'diff': [7.584700000000388e-05, 7.555599999999746e-05, 7.606999999999753e-05, 7.554199999999789e-05, 7.647300000000051e-05, 7.557000000000397e-05, 7.577799999999857e-05, 7.552699999999885e-05, 7.5680...</msg>
<status status="PASS" starttime="20201030 18:29:19.328" endtime="20201030 18:29:19.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.346" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.344" endtime="20201030 18:29:19.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.351" level="INFO">VALUE: [7.584700000000388e-05, 7.555599999999746e-05, 7.606999999999753e-05, 7.554199999999789e-05, 7.647300000000051e-05, 7.557000000000397e-05, 7.577799999999857e-05, 7.552699999999885e-05, 7.568000000000158e-05, 7.61110000000037e-05, 7.57769999999991e-05, 7.565300000000191e-05, 7.55690000000045e-05, 7.599999999999968e-05, 7.552800000000526e-05, 7.612499999999633e-05, 7.579199999999814e-05, 7.590300000000216e-05, 7.580600000000465e-05, 7.588899999999565e-05, 7.590200000000269e-05, 7.587500000000302e-05, 7.613900000000284e-05, 7.556899999999755e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.619400000000165e-05, 7.601399999999925e-05, 7.623600000000036e-05, 7.590300000000216e-05, 7.554199999999789e-05, 7.569500000000062e-05, 7.619500000000112e-05, 7.55839999999966e-05, 7.620900000000069e-05, 7.634700000000438e-05, 7.599999999999968e-05, 7.583300000000431e-05, 7.577700000000603e-05, 7.602800000000576e-05, 7.601399999999925e-05, 7.588899999999565e-05, 7.566700000000148e-05, 7.580599999999771e-05, 7.593000000000183e-05, 7.577799999999857e-05, 7.630599999999821e-05, 7.622300000000026e-05, 7.58890000000026e-05, 7.64310000000018e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.348" endtime="20201030 18:29:19.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.337" endtime="20201030 18:29:19.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.364" endtime="20201030 18:29:19.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.360" endtime="20201030 18:29:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.357" endtime="20201030 18:29:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.861" endtime="20201030 18:29:19.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.860" endtime="20201030 18:29:19.389"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.412" endtime="20201030 18:29:19.435"></status>
</kw>
<msg timestamp="20201030 18:29:19.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.408" endtime="20201030 18:29:19.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.438" endtime="20201030 18:29:19.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.444" endtime="20201030 18:29:19.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.401" endtime="20201030 18:29:19.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.396" endtime="20201030 18:29:19.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.467" endtime="20201030 18:29:19.812"></status>
</kw>
<msg timestamp="20201030 18:29:19.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042884319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:19.464" endtime="20201030 18:29:19.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042807, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042884319, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:19.821" endtime="20201030 18:29:19.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.840" endtime="20201030 18:29:19.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.457" endtime="20201030 18:29:19.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.452" endtime="20201030 18:29:19.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.857" level="INFO">${RESULT} = [{'diff': 7.73189999999993e-05}, {'diff': 7.744499999999543e-05}, {'diff': 7.679099999999967e-05}, {'diff': 7.667999999999564e-05}, {'diff': 7.74440000000029e-05}, {'diff': 7.658300000000506e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:19.848" endtime="20201030 18:29:19.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.866" level="INFO">${ACCURACY} = {'diff': [7.73189999999993e-05, 7.744499999999543e-05, 7.679099999999967e-05, 7.667999999999564e-05, 7.74440000000029e-05, 7.658300000000506e-05, 7.720799999999528e-05, 7.648600000000061e-05, 7.725000...</msg>
<status status="PASS" starttime="20201030 18:29:19.859" endtime="20201030 18:29:19.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.877" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.875" endtime="20201030 18:29:19.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.882" level="INFO">VALUE: [7.73189999999993e-05, 7.744499999999543e-05, 7.679099999999967e-05, 7.667999999999564e-05, 7.74440000000029e-05, 7.658300000000506e-05, 7.720799999999528e-05, 7.648600000000061e-05, 7.725000000000093e-05, 7.668100000000205e-05, 7.657000000000497e-05, 7.690299999999622e-05, 7.686099999999751e-05, 7.654199999999889e-05, 7.680499999999923e-05, 7.680499999999923e-05, 7.712500000000427e-05, 7.656899999999855e-05, 7.700000000000068e-05, 7.700000000000068e-05, 7.658299999999812e-05, 7.662499999999683e-05, 7.6764e-05, 7.657000000000497e-05, 7.687500000000402e-05, 7.659700000000463e-05, 7.73890000000041e-05, 7.7458999999995e-05, 7.666700000000248e-05, 7.712499999999733e-05, 7.688799999999718e-05, 7.656899999999855e-05, 7.656899999999855e-05, 7.74440000000029e-05, 7.666700000000248e-05, 7.745800000000247e-05, 7.730599999999921e-05, 7.677799999999957e-05, 7.65969999999977e-05, 7.690300000000316e-05, 7.709800000000461e-05, 7.701400000000025e-05, 7.719399999999571e-05, 7.701300000000078e-05, 7.67770000000001e-05, 7.700000000000068e-05, 7.666700000000248e-05, 7.727800000000007e-05, 7.681900000000574e-05, 7.668099999999511e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.879" endtime="20201030 18:29:19.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.868" endtime="20201030 18:29:19.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.896" endtime="20201030 18:29:19.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.890" endtime="20201030 18:29:19.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.888" endtime="20201030 18:29:19.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.391" endtime="20201030 18:29:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.390" endtime="20201030 18:29:19.921"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.944" endtime="20201030 18:29:19.966"></status>
</kw>
<msg timestamp="20201030 18:29:19.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.940" endtime="20201030 18:29:19.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.969" endtime="20201030 18:29:19.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.976" endtime="20201030 18:29:19.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.933" endtime="20201030 18:29:19.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.928" endtime="20201030 18:29:19.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.999" endtime="20201030 18:29:20.339"></status>
</kw>
<msg timestamp="20201030 18:29:20.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.995" endtime="20201030 18:29:20.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041336556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041414653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.348" endtime="20201030 18:29:20.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.367" endtime="20201030 18:29:20.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.988" endtime="20201030 18:29:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.984" endtime="20201030 18:29:20.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.384" level="INFO">${RESULT} = [{'diff': 7.80969999999992e-05}, {'diff': 7.766699999999654e-05}, {'diff': 7.825000000000193e-05}, {'diff': 7.833399999999935e-05}, {'diff': 7.78890000000046e-05}, {'diff': 7.8458999999996e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 18:29:20.375" endtime="20201030 18:29:20.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.394" level="INFO">${ACCURACY} = {'diff': [7.80969999999992e-05, 7.766699999999654e-05, 7.825000000000193e-05, 7.833399999999935e-05, 7.78890000000046e-05, 7.8458999999996e-05, 7.845800000000347e-05, 7.755499999999999e-05, 7.74859999...</msg>
<status status="PASS" starttime="20201030 18:29:20.386" endtime="20201030 18:29:20.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.405" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.403" endtime="20201030 18:29:20.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.410" level="INFO">VALUE: [7.80969999999992e-05, 7.766699999999654e-05, 7.825000000000193e-05, 7.833399999999935e-05, 7.78890000000046e-05, 7.8458999999996e-05, 7.845800000000347e-05, 7.755499999999999e-05, 7.748599999999467e-05, 7.790299999999722e-05, 7.818000000000408e-05, 7.756899999999955e-05, 7.75969999999987e-05, 7.816700000000398e-05, 7.756999999999903e-05, 7.787499999999808e-05, 7.788899999999765e-05, 7.822299999999532e-05, 7.847200000000304e-05, 7.780500000000024e-05, 7.78890000000046e-05, 7.852799999999438e-05, 7.823600000000236e-05, 7.806900000000006e-05, 7.833299999999987e-05, 7.756899999999955e-05, 7.816699999999704e-05, 7.790299999999722e-05, 7.815300000000441e-05, 7.837499999999858e-05, 7.852800000000132e-05, 7.755599999999946e-05, 7.765300000000391e-05, 7.790199999999775e-05, 7.77770000000011e-05, 7.81389999999979e-05, 7.800000000000168e-05, 7.793000000000383e-05, 7.823600000000236e-05, 7.780599999999971e-05, 7.80969999999992e-05, 7.802800000000082e-05, 7.8458999999996e-05, 7.833399999999935e-05, 7.833400000000629e-05, 7.802700000000135e-05, 7.779100000000067e-05, 7.833299999999987e-05, 7.841599999999782e-05, 7.780500000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.407" endtime="20201030 18:29:20.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.396" endtime="20201030 18:29:20.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.423" endtime="20201030 18:29:20.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.419" endtime="20201030 18:29:20.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.416" endtime="20201030 18:29:20.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.923" endtime="20201030 18:29:20.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.922" endtime="20201030 18:29:20.448"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.470" endtime="20201030 18:29:20.492"></status>
</kw>
<msg timestamp="20201030 18:29:20.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.467" endtime="20201030 18:29:20.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.495" endtime="20201030 18:29:20.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.501" endtime="20201030 18:29:20.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.460" endtime="20201030 18:29:20.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.454" endtime="20201030 18:29:20.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.524" endtime="20201030 18:29:20.860"></status>
</kw>
<msg timestamp="20201030 18:29:20.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040841472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.521" endtime="20201030 18:29:20.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040762833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040841472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.869" endtime="20201030 18:29:20.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.888" endtime="20201030 18:29:20.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.514" endtime="20201030 18:29:20.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.509" endtime="20201030 18:29:20.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.905" level="INFO">${RESULT} = [{'diff': 7.86389999999984e-05}, {'diff': 7.897299999999607e-05}, {'diff': 7.890300000000516e-05}, {'diff': 7.922199999999685e-05}, {'diff': 7.8764000000002e-05}, {'diff': 7.857000000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:20.896" endtime="20201030 18:29:20.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.916" level="INFO">${ACCURACY} = {'diff': [7.86389999999984e-05, 7.897299999999607e-05, 7.890300000000516e-05, 7.922199999999685e-05, 7.8764000000002e-05, 7.857000000000003e-05, 7.90970000000002e-05, 7.922200000000379e-05, 7.89869999...</msg>
<status status="PASS" starttime="20201030 18:29:20.907" endtime="20201030 18:29:20.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.927" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.925" endtime="20201030 18:29:20.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.932" level="INFO">VALUE: [7.86389999999984e-05, 7.897299999999607e-05, 7.890300000000516e-05, 7.922199999999685e-05, 7.8764000000002e-05, 7.857000000000003e-05, 7.90970000000002e-05, 7.922200000000379e-05, 7.898699999999564e-05, 7.918000000000508e-05, 7.920899999999675e-05, 7.890199999999875e-05, 7.879100000000167e-05, 7.85969999999997e-05, 7.890299999999822e-05, 7.869500000000362e-05, 7.88190000000008e-05, 7.923600000000336e-05, 7.8764000000002e-05, 7.933299999999394e-05, 7.901399999999531e-05, 7.891700000000473e-05, 7.899999999999574e-05, 7.879200000000114e-05, 7.866599999999807e-05, 7.901400000000225e-05, 7.901400000000225e-05, 7.89169999999978e-05, 7.898600000000311e-05, 7.944399999999796e-05, 7.868100000000405e-05, 7.866699999999754e-05, 7.855600000000046e-05, 7.930600000000121e-05, 7.899999999999574e-05, 7.900000000000268e-05, 7.855600000000046e-05, 7.855499999999405e-05, 7.934700000000044e-05, 7.872200000000329e-05, 7.863900000000534e-05, 7.922199999999685e-05, 7.934700000000044e-05, 7.873600000000286e-05, 7.945799999999753e-05, 7.933300000000088e-05, 7.9458999999997e-05, 7.911099999999976e-05, 7.89169999999978e-05, 7.934700000000044e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.929" endtime="20201030 18:29:20.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.918" endtime="20201030 18:29:20.936"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.945" endtime="20201030 18:29:20.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.940" endtime="20201030 18:29:20.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.938" endtime="20201030 18:29:20.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.450" endtime="20201030 18:29:20.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.449" endtime="20201030 18:29:20.970"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.992" endtime="20201030 18:29:21.014"></status>
</kw>
<msg timestamp="20201030 18:29:21.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.989" endtime="20201030 18:29:21.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.018" endtime="20201030 18:29:21.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.024" endtime="20201030 18:29:21.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.982" endtime="20201030 18:29:21.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.976" endtime="20201030 18:29:21.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.047" endtime="20201030 18:29:21.383"></status>
</kw>
<msg timestamp="20201030 18:29:21.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.044" endtime="20201030 18:29:21.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041385806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.393" endtime="20201030 18:29:21.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.411" endtime="20201030 18:29:21.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.037" endtime="20201030 18:29:21.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.032" endtime="20201030 18:29:21.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.428" level="INFO">${RESULT} = [{'diff': 8.040200000000025e-05}, {'diff': 8.04169999999993e-05}, {'diff': 7.980600000000171e-05}, {'diff': 8.036100000000101e-05}, {'diff': 7.969500000000462e-05}, {'diff': 8.04169999999993e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:21.420" endtime="20201030 18:29:21.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.438" level="INFO">${ACCURACY} = {'diff': [8.040200000000025e-05, 8.04169999999993e-05, 7.980600000000171e-05, 8.036100000000101e-05, 7.969500000000462e-05, 8.04169999999993e-05, 7.955600000000146e-05, 8.033399999999441e-05, 7.979200...</msg>
<status status="PASS" starttime="20201030 18:29:21.430" endtime="20201030 18:29:21.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.449" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.446" endtime="20201030 18:29:21.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.454" level="INFO">VALUE: [8.040200000000025e-05, 8.04169999999993e-05, 7.980600000000171e-05, 8.036100000000101e-05, 7.969500000000462e-05, 8.04169999999993e-05, 7.955600000000146e-05, 8.033399999999441e-05, 7.979200000000214e-05, 7.988899999999965e-05, 7.979200000000214e-05, 8.001399999999631e-05, 7.986100000000051e-05, 8.029100000000317e-05, 8.001399999999631e-05, 8.036100000000101e-05, 7.97369999999964e-05, 8.04719999999981e-05, 7.979200000000214e-05, 7.979200000000214e-05, 7.979200000000214e-05, 8.0458999999998e-05, 7.977800000000257e-05, 7.990299999999922e-05, 8.012500000000033e-05, 8.022200000000479e-05, 8.02919999999957e-05, 7.986100000000051e-05, 7.965300000000591e-05, 7.966699999999854e-05, 7.956900000000156e-05, 8.011099999999383e-05, 8.018100000000555e-05, 8.0458999999998e-05, 8.034799999999398e-05, 7.970800000000472e-05, 7.966599999999907e-05, 8.012500000000033e-05, 7.97770000000031e-05, 7.990299999999922e-05, 7.956900000000156e-05, 8.024999999999699e-05, 7.954199999999495e-05, 7.956900000000156e-05, 7.955600000000146e-05, 8.001399999999631e-05, 8.023600000000436e-05, 7.958399999999366e-05, 7.986100000000051e-05, 7.968099999999811e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.451" endtime="20201030 18:29:21.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.440" endtime="20201030 18:29:21.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.467" endtime="20201030 18:29:21.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.462" endtime="20201030 18:29:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.460" endtime="20201030 18:29:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.972" endtime="20201030 18:29:21.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.971" endtime="20201030 18:29:21.491"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.509" endtime="20201030 18:29:21.529"></status>
</kw>
<msg timestamp="20201030 18:29:21.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.508" endtime="20201030 18:29:21.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.531" endtime="20201030 18:29:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.534" endtime="20201030 18:29:21.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.503" endtime="20201030 18:29:21.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.498" endtime="20201030 18:29:21.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.544" endtime="20201030 18:29:21.870"></status>
</kw>
<msg timestamp="20201030 18:29:21.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035661472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.543" endtime="20201030 18:29:21.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035661472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.879" endtime="20201030 18:29:21.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.897" endtime="20201030 18:29:21.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.540" endtime="20201030 18:29:21.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.538" endtime="20201030 18:29:21.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.914" level="INFO">${RESULT} = [{'diff': 8.10970000000022e-05}, {'diff': 8.09169999999998e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.080500000000324e-05}, {'diff': 8.098699999999764e-05}, {'diff': 8.076299999999759e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:21.906" endtime="20201030 18:29:21.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.924" level="INFO">${ACCURACY} = {'diff': [8.10970000000022e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.080500000000324e-05, 8.098699999999764e-05, 8.076299999999759e-05, 8.056899999999562e-05, 8.077699999999716e-05, 8.112500...</msg>
<status status="PASS" starttime="20201030 18:29:21.917" endtime="20201030 18:29:21.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.934" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.932" endtime="20201030 18:29:21.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.940" level="INFO">VALUE: [8.10970000000022e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.080500000000324e-05, 8.098699999999764e-05, 8.076299999999759e-05, 8.056899999999562e-05, 8.077699999999716e-05, 8.112500000000133e-05, 8.09169999999998e-05, 8.111100000000177e-05, 8.112500000000133e-05, 8.06390000000004e-05, 8.065299999999997e-05, 8.077799999999663e-05, 8.122299999999832e-05, 8.100000000000468e-05, 8.088900000000065e-05, 8.058300000000213e-05, 8.107000000000253e-05, 8.077699999999716e-05, 8.067999999999964e-05, 8.134700000000245e-05, 8.100000000000468e-05, 8.101399999999731e-05, 8.095800000000597e-05, 8.066699999999954e-05, 8.090300000000022e-05, 8.057000000000203e-05, 8.088900000000065e-05, 8.098699999999764e-05, 8.14719999999991e-05, 8.11390000000009e-05, 8.118099999999961e-05, 8.11390000000009e-05, 8.080599999999577e-05, 8.123599999999842e-05, 8.077800000000357e-05, 8.101399999999731e-05, 8.144499999999943e-05, 8.113899999999397e-05, 8.108399999999516e-05, 8.057000000000203e-05, 8.111200000000124e-05, 8.079099999999673e-05, 8.112500000000133e-05, 8.122200000000579e-05, 8.076399999999706e-05, 8.111099999999483e-05, 8.131899999999637e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.937" endtime="20201030 18:29:21.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.925" endtime="20201030 18:29:21.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.958" endtime="20201030 18:29:21.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.948" endtime="20201030 18:29:21.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.946" endtime="20201030 18:29:21.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.493" endtime="20201030 18:29:21.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.492" endtime="20201030 18:29:21.983"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.005" endtime="20201030 18:29:22.027"></status>
</kw>
<msg timestamp="20201030 18:29:22.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.002" endtime="20201030 18:29:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.031" endtime="20201030 18:29:22.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.037" endtime="20201030 18:29:22.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.995" endtime="20201030 18:29:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.989" endtime="20201030 18:29:22.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.060" endtime="20201030 18:29:22.394"></status>
</kw>
<msg timestamp="20201030 18:29:22.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041376792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041459181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.057" endtime="20201030 18:29:22.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041376792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041459181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.404" endtime="20201030 18:29:22.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.422" endtime="20201030 18:29:22.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.050" endtime="20201030 18:29:22.428"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.045" endtime="20201030 18:29:22.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.440" level="INFO">${RESULT} = [{'diff': 8.238899999999522e-05}, {'diff': 8.192999999999395e-05}, {'diff': 8.212500000000234e-05}, {'diff': 8.245799999999359e-05}, {'diff': 8.222199999999985e-05}, {'diff': 8.156900000000356e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:22.431" endtime="20201030 18:29:22.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.451" level="INFO">${ACCURACY} = {'diff': [8.238899999999522e-05, 8.192999999999395e-05, 8.212500000000234e-05, 8.245799999999359e-05, 8.222199999999985e-05, 8.156900000000356e-05, 8.156900000000356e-05, 8.20970000000032e-05, 8.19719...</msg>
<status status="PASS" starttime="20201030 18:29:22.442" endtime="20201030 18:29:22.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.462" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.460" endtime="20201030 18:29:22.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.468" level="INFO">VALUE: [8.238899999999522e-05, 8.192999999999395e-05, 8.212500000000234e-05, 8.245799999999359e-05, 8.222199999999985e-05, 8.156900000000356e-05, 8.156900000000356e-05, 8.20970000000032e-05, 8.19719999999996e-05, 8.17919999999972e-05, 8.161099999999533e-05, 8.177800000000457e-05, 8.161200000000174e-05, 8.20269999999984e-05, 8.244400000000096e-05, 8.170899999999925e-05, 8.179100000000467e-05, 8.188900000000165e-05, 8.238900000000215e-05, 8.212500000000234e-05, 8.187500000000208e-05, 8.152799999999738e-05, 8.220899999999975e-05, 8.201399999999831e-05, 8.155599999999652e-05, 8.17919999999972e-05, 8.179100000000467e-05, 8.201400000000525e-05, 8.223599999999942e-05, 8.177799999999763e-05, 8.199999999999874e-05, 8.19170000000008e-05, 8.222199999999985e-05, 8.15840000000026e-05, 8.188900000000165e-05, 8.223599999999942e-05, 8.223599999999942e-05, 8.155600000000346e-05, 8.166700000000054e-05, 8.219400000000071e-05, 8.155499999999705e-05, 8.168000000000064e-05, 8.172200000000629e-05, 8.222199999999985e-05, 8.23190000000043e-05, 8.168100000000011e-05, 8.180599999999677e-05, 8.201399999999831e-05, 8.155600000000346e-05, 8.212500000000234e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.464" endtime="20201030 18:29:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.453" endtime="20201030 18:29:22.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.480" endtime="20201030 18:29:22.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.476" endtime="20201030 18:29:22.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.473" endtime="20201030 18:29:22.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.985" endtime="20201030 18:29:22.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.984" endtime="20201030 18:29:22.505"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.528" endtime="20201030 18:29:22.549"></status>
</kw>
<msg timestamp="20201030 18:29:22.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.524" endtime="20201030 18:29:22.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.552" endtime="20201030 18:29:22.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.559" endtime="20201030 18:29:22.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.517" endtime="20201030 18:29:22.564"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.511" endtime="20201030 18:29:22.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.582" endtime="20201030 18:29:22.915"></status>
</kw>
<msg timestamp="20201030 18:29:22.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041122042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.579" endtime="20201030 18:29:22.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041039292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041122042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.924" endtime="20201030 18:29:22.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.943" endtime="20201030 18:29:22.947"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.572" endtime="20201030 18:29:22.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.567" endtime="20201030 18:29:22.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.960" level="INFO">${RESULT} = [{'diff': 8.274999999999949e-05}, {'diff': 8.288899999999572e-05}, {'diff': 8.268000000000164e-05}, {'diff': 8.299999999999974e-05}, {'diff': 8.320799999999434e-05}, {'diff': 8.281899999999787e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:22.951" endtime="20201030 18:29:22.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.971" level="INFO">${ACCURACY} = {'diff': [8.274999999999949e-05, 8.288899999999572e-05, 8.268000000000164e-05, 8.299999999999974e-05, 8.320799999999434e-05, 8.281899999999787e-05, 8.345800000000153e-05, 8.299999999999974e-05, 8.2777...</msg>
<status status="PASS" starttime="20201030 18:29:22.962" endtime="20201030 18:29:22.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.982" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.980" endtime="20201030 18:29:22.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.988" level="INFO">VALUE: [8.274999999999949e-05, 8.288899999999572e-05, 8.268000000000164e-05, 8.299999999999974e-05, 8.320799999999434e-05, 8.281899999999787e-05, 8.345800000000153e-05, 8.299999999999974e-05, 8.277799999999863e-05, 8.288900000000265e-05, 8.269500000000068e-05, 8.279099999999873e-05, 8.276399999999906e-05, 8.265300000000197e-05, 8.3459000000001e-05, 8.301399999999931e-05, 8.256899999999762e-05, 8.256899999999762e-05, 8.301399999999931e-05, 8.269400000000121e-05, 8.33469999999975e-05, 8.333300000000488e-05, 8.256900000000456e-05, 8.269500000000068e-05, 8.294400000000146e-05, 8.301399999999931e-05, 8.266700000000154e-05, 8.28049999999983e-05, 8.287500000000309e-05, 8.270800000000078e-05, 8.330600000000521e-05, 8.333299999999794e-05, 8.331899999999837e-05, 8.304199999999845e-05, 8.348600000000067e-05, 8.265300000000197e-05, 8.312500000000334e-05, 8.31390000000029e-05, 8.344500000000143e-05, 8.333400000000435e-05, 8.301399999999931e-05, 8.34720000000011e-05, 8.288800000000318e-05, 8.268000000000164e-05, 8.290300000000222e-05, 8.293100000000136e-05, 8.277799999999863e-05, 8.268099999999418e-05, 8.288899999999572e-05, 8.344500000000143e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.984" endtime="20201030 18:29:22.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.973" endtime="20201030 18:29:22.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.000" endtime="20201030 18:29:23.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.996" endtime="20201030 18:29:23.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.993" endtime="20201030 18:29:23.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.507" endtime="20201030 18:29:23.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.506" endtime="20201030 18:29:23.025"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.048" endtime="20201030 18:29:23.069"></status>
</kw>
<msg timestamp="20201030 18:29:23.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.044" endtime="20201030 18:29:23.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.072" endtime="20201030 18:29:23.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.078" endtime="20201030 18:29:23.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.037" endtime="20201030 18:29:23.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.031" endtime="20201030 18:29:23.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.101" endtime="20201030 18:29:23.437"></status>
</kw>
<msg timestamp="20201030 18:29:23.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:23.098" endtime="20201030 18:29:23.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0405615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040645361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:23.446" endtime="20201030 18:29:23.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.465" endtime="20201030 18:29:23.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.091" endtime="20201030 18:29:23.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.086" endtime="20201030 18:29:23.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.482" level="INFO">${RESULT} = [{'diff': 8.386099999999758e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.377799999999963e-05}, {'diff': 8.412500000000434e-05}, {'diff': 8.377799999999963e-05}, {'diff': 8.433399999999841e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:23.473" endtime="20201030 18:29:23.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.491" level="INFO">${ACCURACY} = {'diff': [8.386099999999758e-05, 8.433299999999894e-05, 8.377799999999963e-05, 8.412500000000434e-05, 8.377799999999963e-05, 8.433399999999841e-05, 8.369500000000168e-05, 8.434799999999798e-05, 8.4236...</msg>
<status status="PASS" starttime="20201030 18:29:23.484" endtime="20201030 18:29:23.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.502" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.500" endtime="20201030 18:29:23.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.507" level="INFO">VALUE: [8.386099999999758e-05, 8.433299999999894e-05, 8.377799999999963e-05, 8.412500000000434e-05, 8.377799999999963e-05, 8.433399999999841e-05, 8.369500000000168e-05, 8.434799999999798e-05, 8.423600000000142e-05, 8.356899999999862e-05, 8.390199999999681e-05, 8.384800000000442e-05, 8.369400000000221e-05, 8.423600000000142e-05, 8.390299999999629e-05, 8.401400000000031e-05, 8.444500000000243e-05, 8.357000000000503e-05, 8.44449999999955e-05, 8.388899999999672e-05, 8.355599999999852e-05, 8.395800000000203e-05, 8.366599999999613e-05, 8.355499999999905e-05, 8.354199999999895e-05, 8.423600000000142e-05, 8.412500000000434e-05, 8.437500000000459e-05, 8.445799999999559e-05, 8.44449999999955e-05, 8.375000000000049e-05, 8.4459000000002e-05, 8.368000000000264e-05, 8.366700000000254e-05, 8.379099999999973e-05, 8.356899999999862e-05, 8.433299999999894e-05, 8.377799999999963e-05, 8.401399999999337e-05, 8.423600000000142e-05, 8.411100000000477e-05, 8.355599999999852e-05, 8.401400000000031e-05, 8.356999999999809e-05, 8.384799999999748e-05, 8.42370000000009e-05, 8.379099999999973e-05, 8.419400000000271e-05, 8.377700000000016e-05, 8.409699999999826e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.504" endtime="20201030 18:29:23.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.493" endtime="20201030 18:29:23.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.520" endtime="20201030 18:29:23.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.515" endtime="20201030 18:29:23.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.513" endtime="20201030 18:29:23.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.027" endtime="20201030 18:29:23.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.026" endtime="20201030 18:29:23.544"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.567" endtime="20201030 18:29:23.591"></status>
</kw>
<msg timestamp="20201030 18:29:23.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.564" endtime="20201030 18:29:23.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.594" endtime="20201030 18:29:23.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.600" endtime="20201030 18:29:23.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.557" endtime="20201030 18:29:23.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.551" endtime="20201030 18:29:23.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.623" endtime="20201030 18:29:23.976"></status>
</kw>
<msg timestamp="20201030 18:29:23.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042683875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0427685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:23.620" endtime="20201030 18:29:23.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042683875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0427685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:23.986" endtime="20201030 18:29:24.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.005" endtime="20201030 18:29:24.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.613" endtime="20201030 18:29:24.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.608" endtime="20201030 18:29:24.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.022" level="INFO">${RESULT} = [{'diff': 8.46249999999979e-05}, {'diff': 8.523599999999548e-05}, {'diff': 8.490299999999729e-05}, {'diff': 8.465299999999704e-05}, {'diff': 8.504100000000098e-05}, {'diff': 8.47920000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:24.013" endtime="20201030 18:29:24.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.031" level="INFO">${ACCURACY} = {'diff': [8.46249999999979e-05, 8.523599999999548e-05, 8.490299999999729e-05, 8.465299999999704e-05, 8.504100000000098e-05, 8.47920000000002e-05, 8.520900000000275e-05, 8.51249999999984e-05, 8.5332999...</msg>
<status status="PASS" starttime="20201030 18:29:24.024" endtime="20201030 18:29:24.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.042" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.040" endtime="20201030 18:29:24.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.048" level="INFO">VALUE: [8.46249999999979e-05, 8.523599999999548e-05, 8.490299999999729e-05, 8.465299999999704e-05, 8.504100000000098e-05, 8.47920000000002e-05, 8.520900000000275e-05, 8.51249999999984e-05, 8.533299999999994e-05, 8.456899999999962e-05, 8.527800000000113e-05, 8.51249999999984e-05, 8.458299999999919e-05, 8.49999999999948e-05, 8.544500000000343e-05, 8.545899999999607e-05, 8.458399999999866e-05, 8.488900000000466e-05, 8.47920000000002e-05, 8.466599999999713e-05, 8.533299999999994e-05, 8.523599999999548e-05, 8.523600000000242e-05, 8.46669999999966e-05, 8.520799999999634e-05, 8.500000000000174e-05, 8.545899999999607e-05, 8.522200000000285e-05, 8.457000000000603e-05, 8.46669999999966e-05, 8.48050000000003e-05, 8.456899999999962e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.491699999999686e-05, 8.456899999999962e-05, 8.536099999999908e-05, 8.49170000000038e-05, 8.501400000000131e-05, 8.54449999999965e-05, 8.512500000000534e-05, 8.51799999999972e-05, 8.463800000000493e-05, 8.51119999999983e-05, 8.51249999999984e-05, 8.524999999999505e-05, 8.477700000000116e-05, 8.544400000000396e-05, 8.523599999999548e-05, 8.547199999999616e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.044" endtime="20201030 18:29:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.033" endtime="20201030 18:29:24.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.061" endtime="20201030 18:29:24.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.056" endtime="20201030 18:29:24.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.053" endtime="20201030 18:29:24.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.547" endtime="20201030 18:29:24.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.546" endtime="20201030 18:29:24.086"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.109" endtime="20201030 18:29:24.130"></status>
</kw>
<msg timestamp="20201030 18:29:24.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.105" endtime="20201030 18:29:24.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.133" endtime="20201030 18:29:24.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.140" endtime="20201030 18:29:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.098" endtime="20201030 18:29:24.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.093" endtime="20201030 18:29:24.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.163" endtime="20201030 18:29:24.533"></status>
</kw>
<msg timestamp="20201030 18:29:24.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040689014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0407745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:24.160" endtime="20201030 18:29:24.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040689014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0407745, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:24.543" endtime="20201030 18:29:24.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.563" endtime="20201030 18:29:24.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.152" endtime="20201030 18:29:24.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.148" endtime="20201030 18:29:24.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.582" level="INFO">${RESULT} = [{'diff': 8.548599999999573e-05}, {'diff': 8.555600000000052e-05}, {'diff': 8.56669999999976e-05}, {'diff': 8.615199999999906e-05}, {'diff': 8.594399999999752e-05}, {'diff': 8.555600000000052e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:24.572" endtime="20201030 18:29:24.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.593" level="INFO">${ACCURACY} = {'diff': [8.548599999999573e-05, 8.555600000000052e-05, 8.56669999999976e-05, 8.615199999999906e-05, 8.594399999999752e-05, 8.555600000000052e-05, 8.623599999999648e-05, 8.625000000000299e-05, 8.55690...</msg>
<status status="PASS" starttime="20201030 18:29:24.584" endtime="20201030 18:29:24.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.605" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.602" endtime="20201030 18:29:24.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.610" level="INFO">VALUE: [8.548599999999573e-05, 8.555600000000052e-05, 8.56669999999976e-05, 8.615199999999906e-05, 8.594399999999752e-05, 8.555600000000052e-05, 8.623599999999648e-05, 8.625000000000299e-05, 8.556900000000062e-05, 8.645799999999759e-05, 8.587499999999915e-05, 8.61249999999994e-05, 8.644400000000496e-05, 8.557000000000009e-05, 8.61390000000059e-05, 8.594500000000393e-05, 8.634799999999998e-05, 8.577800000000163e-05, 8.644399999999802e-05, 8.555500000000105e-05, 8.58050000000013e-05, 8.59999999999958e-05, 8.590299999999829e-05, 8.555500000000105e-05, 8.590299999999829e-05, 8.602800000000188e-05, 8.572199999999641e-05, 8.61249999999994e-05, 8.645899999999707e-05, 8.633300000000094e-05, 8.60129999999959e-05, 8.645800000000453e-05, 8.592999999999795e-05, 8.590299999999829e-05, 8.611099999999983e-05, 8.579199999999426e-05, 8.601400000000231e-05, 8.588900000000566e-05, 8.622199999999691e-05, 8.640199999999931e-05, 8.623599999999648e-05, 8.566700000000455e-05, 8.61119999999993e-05, 8.615300000000548e-05, 8.595799999999709e-05, 8.613899999999897e-05, 8.613899999999897e-05, 8.555500000000105e-05, 8.634699999999357e-05, 8.575000000000249e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.607" endtime="20201030 18:29:24.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.595" endtime="20201030 18:29:24.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.624" endtime="20201030 18:29:24.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.619" endtime="20201030 18:29:24.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.616" endtime="20201030 18:29:24.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.088" endtime="20201030 18:29:24.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.087" endtime="20201030 18:29:24.650"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.676" endtime="20201030 18:29:24.699"></status>
</kw>
<msg timestamp="20201030 18:29:24.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.671" endtime="20201030 18:29:24.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.703" endtime="20201030 18:29:24.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.710" endtime="20201030 18:29:24.714"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.663" endtime="20201030 18:29:24.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.657" endtime="20201030 18:29:24.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.735" endtime="20201030 18:29:25.093"></status>
</kw>
<msg timestamp="20201030 18:29:25.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046547014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046633542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.731" endtime="20201030 18:29:25.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046547014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046633542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.103" endtime="20201030 18:29:25.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.123" endtime="20201030 18:29:25.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.723" endtime="20201030 18:29:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.718" endtime="20201030 18:29:25.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.141" level="INFO">${RESULT} = [{'diff': 8.652800000000238e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.723599999999748e-05}, {'diff': 8.733300000000194e-05}, {'diff': 8.701399999999637e-05}, {'diff': 8.655499999999511e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:25.132" endtime="20201030 18:29:25.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.153" level="INFO">${ACCURACY} = {'diff': [8.652800000000238e-05, 8.736100000000108e-05, 8.723599999999748e-05, 8.733300000000194e-05, 8.701399999999637e-05, 8.655499999999511e-05, 8.723599999999748e-05, 8.73470000000015e-05, 8.68889...</msg>
<status status="PASS" starttime="20201030 18:29:25.144" endtime="20201030 18:29:25.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.165" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.163" endtime="20201030 18:29:25.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.171" level="INFO">VALUE: [8.652800000000238e-05, 8.736100000000108e-05, 8.723599999999748e-05, 8.733300000000194e-05, 8.701399999999637e-05, 8.655499999999511e-05, 8.723599999999748e-05, 8.73470000000015e-05, 8.688899999999972e-05, 8.695799999999809e-05, 8.655599999999458e-05, 8.730600000000227e-05, 8.734800000000098e-05, 8.668099999999818e-05, 8.677700000000316e-05, 8.742999999999945e-05, 8.666599999999913e-05, 8.69590000000045e-05, 8.67920000000022e-05, 8.745799999999859e-05, 8.669500000000468e-05, 8.74449999999985e-05, 8.652800000000238e-05, 8.690299999999929e-05, 8.66669999999986e-05, 8.702699999999647e-05, 8.654200000000195e-05, 8.713899999999997e-05, 8.661100000000033e-05, 8.725000000000399e-05, 8.680599999999483e-05, 8.734699999999457e-05, 8.715299999999954e-05, 8.724999999999705e-05, 8.655600000000152e-05, 8.745899999999807e-05, 8.673599999999698e-05, 8.698599999999723e-05, 8.669399999999827e-05, 8.656900000000162e-05, 8.656900000000162e-05, 8.665199999999956e-05, 8.742999999999945e-05, 8.66669999999986e-05, 8.700000000000374e-05, 8.688899999999972e-05, 8.69999999999968e-05, 8.733399999999447e-05, 8.722300000000432e-05, 8.665299999999904e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.168" endtime="20201030 18:29:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.155" endtime="20201030 18:29:25.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.184" endtime="20201030 18:29:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.180" endtime="20201030 18:29:25.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.177" endtime="20201030 18:29:25.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.652" endtime="20201030 18:29:25.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.651" endtime="20201030 18:29:25.210"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.236" endtime="20201030 18:29:25.259"></status>
</kw>
<msg timestamp="20201030 18:29:25.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.232" endtime="20201030 18:29:25.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.262" endtime="20201030 18:29:25.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.269" endtime="20201030 18:29:25.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.224" endtime="20201030 18:29:25.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.217" endtime="20201030 18:29:25.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.294" endtime="20201030 18:29:25.654"></status>
</kw>
<msg timestamp="20201030 18:29:25.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045342667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045431111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.290" endtime="20201030 18:29:25.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045342667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045431111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.665" endtime="20201030 18:29:25.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.684" endtime="20201030 18:29:25.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.283" endtime="20201030 18:29:25.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.278" endtime="20201030 18:29:25.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.703" level="INFO">${RESULT} = [{'diff': 8.844400000000002e-05}, {'diff': 8.755499999999611e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.8332999999996e-05}, {'diff': 8.830600000000327e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:25.693" endtime="20201030 18:29:25.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.713" level="INFO">${ACCURACY} = {'diff': [8.844400000000002e-05, 8.755499999999611e-05, 8.756900000000262e-05, 8.791699999999986e-05, 8.8332999999996e-05, 8.830600000000327e-05, 8.823600000000542e-05, 8.801399999999737e-05, 8.790300...</msg>
<status status="PASS" starttime="20201030 18:29:25.705" endtime="20201030 18:29:25.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.724" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.722" endtime="20201030 18:29:25.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.730" level="INFO">VALUE: [8.844400000000002e-05, 8.755499999999611e-05, 8.756900000000262e-05, 8.791699999999986e-05, 8.8332999999996e-05, 8.830600000000327e-05, 8.823600000000542e-05, 8.801399999999737e-05, 8.790300000000029e-05, 8.769499999999875e-05, 8.791600000000038e-05, 8.802700000000441e-05, 8.798599999999823e-05, 8.823599999999848e-05, 8.759700000000176e-05, 8.840300000000079e-05, 8.843000000000045e-05, 8.813900000000097e-05, 8.790300000000029e-05, 8.833400000000241e-05, 8.772199999999841e-05, 8.791699999999986e-05, 8.780499999999636e-05, 8.777799999999669e-05, 8.800000000000474e-05, 8.758300000000219e-05, 8.847199999999916e-05, 8.76250000000009e-05, 8.76669999999996e-05, 8.801400000000431e-05, 8.81250000000014e-05, 8.822199999999891e-05, 8.834800000000198e-05, 8.768099999999918e-05, 8.757000000000209e-05, 8.792999999999995e-05, 8.790200000000081e-05, 8.801400000000431e-05, 8.76250000000009e-05, 8.784799999999454e-05, 8.811099999999489e-05, 8.777799999999669e-05, 8.834700000000251e-05, 8.800000000000474e-05, 8.830600000000327e-05, 8.768099999999918e-05, 8.79869999999977e-05, 8.763900000000047e-05, 8.792999999999995e-05, 8.766600000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.727" endtime="20201030 18:29:25.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.715" endtime="20201030 18:29:25.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.744" endtime="20201030 18:29:25.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.739" endtime="20201030 18:29:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.736" endtime="20201030 18:29:25.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.212" endtime="20201030 18:29:25.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.211" endtime="20201030 18:29:25.769"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.794" endtime="20201030 18:29:25.817"></status>
</kw>
<msg timestamp="20201030 18:29:25.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.790" endtime="20201030 18:29:25.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.821" endtime="20201030 18:29:25.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.827" endtime="20201030 18:29:25.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.782" endtime="20201030 18:29:25.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.776" endtime="20201030 18:29:25.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.852" endtime="20201030 18:29:26.212"></status>
</kw>
<msg timestamp="20201030 18:29:26.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.849" endtime="20201030 18:29:26.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045156444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045245653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.223" endtime="20201030 18:29:26.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.242" endtime="20201030 18:29:26.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.841" endtime="20201030 18:29:26.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.836" endtime="20201030 18:29:26.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.262" level="INFO">${RESULT} = [{'diff': 8.920899999999982e-05}, {'diff': 8.887500000000215e-05}, {'diff': 8.858399999999572e-05}, {'diff': 8.895899999999957e-05}, {'diff': 8.911099999999589e-05}, {'diff': 8.873599999999898e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:26.252" endtime="20201030 18:29:26.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.272" level="INFO">${ACCURACY} = {'diff': [8.920899999999982e-05, 8.887500000000215e-05, 8.858399999999572e-05, 8.895899999999957e-05, 8.911099999999589e-05, 8.873599999999898e-05, 8.90129999999989e-05, 8.936099999999614e-05, 8.86940...</msg>
<status status="PASS" starttime="20201030 18:29:26.264" endtime="20201030 18:29:26.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.284" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.282" endtime="20201030 18:29:26.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.290" level="INFO">VALUE: [8.920899999999982e-05, 8.887500000000215e-05, 8.858399999999572e-05, 8.895899999999957e-05, 8.911099999999589e-05, 8.873599999999898e-05, 8.90129999999989e-05, 8.936099999999614e-05, 8.869400000000027e-05, 8.923599999999948e-05, 8.856899999999668e-05, 8.868100000000018e-05, 8.893100000000043e-05, 8.86670000000006e-05, 8.91250000000024e-05, 8.879199999999726e-05, 8.888899999999478e-05, 8.922299999999939e-05, 8.858299999999625e-05, 8.891600000000138e-05, 8.86800000000007e-05, 8.86800000000007e-05, 8.913900000000197e-05, 8.880600000000377e-05, 8.877800000000463e-05, 8.911100000000283e-05, 8.86250000000019e-05, 8.934799999999604e-05, 8.868100000000018e-05, 8.89999999999988e-05, 8.930600000000427e-05, 8.880499999999736e-05, 8.933300000000394e-05, 8.886100000000258e-05, 8.86800000000007e-05, 8.868100000000018e-05, 8.901399999999837e-05, 8.888900000000172e-05, 8.923599999999948e-05, 8.923599999999948e-05, 8.881899999999693e-05, 8.877800000000463e-05, 8.890199999999487e-05, 8.902799999999794e-05, 8.86800000000007e-05, 8.890300000000129e-05, 8.86670000000006e-05, 8.922199999999991e-05, 8.877800000000463e-05, 8.890300000000129e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.287" endtime="20201030 18:29:26.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.274" endtime="20201030 18:29:26.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.305" endtime="20201030 18:29:26.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.299" endtime="20201030 18:29:26.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.296" endtime="20201030 18:29:26.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.772" endtime="20201030 18:29:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.770" endtime="20201030 18:29:26.331"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.356" endtime="20201030 18:29:26.379"></status>
</kw>
<msg timestamp="20201030 18:29:26.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.352" endtime="20201030 18:29:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.382" endtime="20201030 18:29:26.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.389" endtime="20201030 18:29:26.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.344" endtime="20201030 18:29:26.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.338" endtime="20201030 18:29:26.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.414" endtime="20201030 18:29:26.773"></status>
</kw>
<msg timestamp="20201030 18:29:26.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043980833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.410" endtime="20201030 18:29:26.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043980833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.783" endtime="20201030 18:29:26.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.803" endtime="20201030 18:29:26.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.403" endtime="20201030 18:29:26.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.398" endtime="20201030 18:29:26.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.821" level="INFO">${RESULT} = [{'diff': 8.976399999999912e-05}, {'diff': 8.998600000000023e-05}, {'diff': 8.990300000000229e-05}, {'diff': 8.951399999999887e-05}, {'diff': 8.99999999999998e-05}, {'diff': 8.959699999999682e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:26.812" endtime="20201030 18:29:26.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.833" level="INFO">${ACCURACY} = {'diff': [8.976399999999912e-05, 8.998600000000023e-05, 8.990300000000229e-05, 8.951399999999887e-05, 8.99999999999998e-05, 8.959699999999682e-05, 9.001399999999937e-05, 9.045800000000159e-05, 8.96670...</msg>
<status status="PASS" starttime="20201030 18:29:26.823" endtime="20201030 18:29:26.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.844" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.842" endtime="20201030 18:29:26.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.850" level="INFO">VALUE: [8.976399999999912e-05, 8.998600000000023e-05, 8.990300000000229e-05, 8.951399999999887e-05, 8.99999999999998e-05, 8.959699999999682e-05, 9.001399999999937e-05, 9.045800000000159e-05, 8.96670000000016e-05, 9.029199999999876e-05, 8.998600000000023e-05, 8.957000000000409e-05, 8.972200000000041e-05, 8.991600000000238e-05, 9.044399999999508e-05, 9.012499999999646e-05, 9.001399999999937e-05, 8.976399999999912e-05, 8.979199999999826e-05, 8.955599999999758e-05, 8.958399999999672e-05, 9.040300000000279e-05, 8.968099999999424e-05, 8.977799999999869e-05, 8.979100000000573e-05, 8.96800000000017e-05, 9.001399999999937e-05, 8.988899999999578e-05, 8.963900000000247e-05, 8.969499999999381e-05, 8.957000000000409e-05, 8.976399999999912e-05, 9.002799999999894e-05, 8.965300000000204e-05, 9.034799999999704e-05, 9.011199999999636e-05, 9.034699999999757e-05, 9.05000000000003e-05, 9.034700000000451e-05, 9.022199999999397e-05, 9.034699999999757e-05, 9.002800000000588e-05, 8.977799999999869e-05, 8.99999999999998e-05, 8.957000000000409e-05, 9.012499999999646e-05, 9.047199999999422e-05, 8.99729999999932e-05, 8.966600000000213e-05, 9.011100000000383e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.847" endtime="20201030 18:29:26.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.835" endtime="20201030 18:29:26.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.864" endtime="20201030 18:29:26.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.859" endtime="20201030 18:29:26.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.856" endtime="20201030 18:29:26.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.333" endtime="20201030 18:29:26.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.332" endtime="20201030 18:29:26.889"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.913" endtime="20201030 18:29:26.937"></status>
</kw>
<msg timestamp="20201030 18:29:26.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.910" endtime="20201030 18:29:26.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.940" endtime="20201030 18:29:26.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.947" endtime="20201030 18:29:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.902" endtime="20201030 18:29:26.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.896" endtime="20201030 18:29:26.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.971" endtime="20201030 18:29:27.281"></status>
</kw>
<msg timestamp="20201030 18:29:27.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044163736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.968" endtime="20201030 18:29:27.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044072306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044163736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.291" endtime="20201030 18:29:27.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.312" endtime="20201030 18:29:27.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.960" endtime="20201030 18:29:27.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.955" endtime="20201030 18:29:27.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.330" level="INFO">${RESULT} = [{'diff': 9.143000000000345e-05}, {'diff': 9.097200000000166e-05}, {'diff': 9.068100000000218e-05}, {'diff': 9.145800000000259e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.076400000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:27.321" endtime="20201030 18:29:27.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.346" level="INFO">${ACCURACY} = {'diff': [9.143000000000345e-05, 9.097200000000166e-05, 9.068100000000218e-05, 9.145800000000259e-05, 9.052799999999944e-05, 9.076400000000012e-05, 9.079199999999926e-05, 9.061099999999739e-05, 9.0680...</msg>
<status status="PASS" starttime="20201030 18:29:27.333" endtime="20201030 18:29:27.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.358" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.356" endtime="20201030 18:29:27.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.364" level="INFO">VALUE: [9.143000000000345e-05, 9.097200000000166e-05, 9.068100000000218e-05, 9.145800000000259e-05, 9.052799999999944e-05, 9.076400000000012e-05, 9.079199999999926e-05, 9.061099999999739e-05, 9.06800000000027e-05, 9.101299999999396e-05, 9.069400000000227e-05, 9.10000000000008e-05, 9.134699999999857e-05, 9.073599999999404e-05, 9.090299999999635e-05, 9.090300000000329e-05, 9.054199999999901e-05, 9.063900000000347e-05, 9.055500000000605e-05, 9.055599999999858e-05, 9.098600000000123e-05, 9.069400000000227e-05, 9.076400000000012e-05, 9.080499999999936e-05, 9.066699999999567e-05, 9.076400000000012e-05, 9.054199999999901e-05, 9.06670000000026e-05, 9.129100000000029e-05, 9.11250000000044e-05, 9.133399999999847e-05, 9.079199999999926e-05, 9.11250000000044e-05, 9.090200000000381e-05, 9.106899999999918e-05, 9.10000000000008e-05, 9.067999999999576e-05, 9.077799999999969e-05, 9.097200000000166e-05, 9.088899999999678e-05, 9.079199999999926e-05, 9.088900000000372e-05, 9.079199999999926e-05, 9.095899999999463e-05, 9.10000000000008e-05, 9.10000000000008e-05, 9.080499999999936e-05, 9.106899999999918e-05, 9.090299999999635e-05, 9.069500000000175e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.360" endtime="20201030 18:29:27.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.348" endtime="20201030 18:29:27.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.377" endtime="20201030 18:29:27.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.373" endtime="20201030 18:29:27.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.370" endtime="20201030 18:29:27.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.892" endtime="20201030 18:29:27.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.890" endtime="20201030 18:29:27.403"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.427" endtime="20201030 18:29:27.450"></status>
</kw>
<msg timestamp="20201030 18:29:27.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.424" endtime="20201030 18:29:27.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.453" endtime="20201030 18:29:27.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.460" endtime="20201030 18:29:27.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.416" endtime="20201030 18:29:27.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.410" endtime="20201030 18:29:27.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.486" endtime="20201030 18:29:27.846"></status>
</kw>
<msg timestamp="20201030 18:29:27.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043715611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.482" endtime="20201030 18:29:27.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043715611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043808028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.856" endtime="20201030 18:29:27.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.876" endtime="20201030 18:29:27.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.475" endtime="20201030 18:29:27.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.469" endtime="20201030 18:29:27.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.894" level="INFO">${RESULT} = [{'diff': 9.241699999999742e-05}, {'diff': 9.229100000000129e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.191700000000386e-05}, {'diff': 9.16120000000048e-05}, {'diff': 9.195899999999563e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:27.885" endtime="20201030 18:29:27.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.904" level="INFO">${ACCURACY} = {'diff': [9.241699999999742e-05, 9.229100000000129e-05, 9.173600000000198e-05, 9.191700000000386e-05, 9.16120000000048e-05, 9.195899999999563e-05, 9.167999999999676e-05, 9.212499999999846e-05, 9.21110...</msg>
<status status="PASS" starttime="20201030 18:29:27.897" endtime="20201030 18:29:27.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.916" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.913" endtime="20201030 18:29:27.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.922" level="INFO">VALUE: [9.241699999999742e-05, 9.229100000000129e-05, 9.173600000000198e-05, 9.191700000000386e-05, 9.16120000000048e-05, 9.195899999999563e-05, 9.167999999999676e-05, 9.212499999999846e-05, 9.211100000000583e-05, 9.234699999999957e-05, 9.209699999999932e-05, 9.191699999999692e-05, 9.158299999999925e-05, 9.201399999999443e-05, 9.190299999999735e-05, 9.166699999999667e-05, 9.156999999999915e-05, 9.158299999999925e-05, 9.180500000000036e-05, 9.169400000000327e-05, 9.167999999999676e-05, 9.173600000000198e-05, 9.191699999999692e-05, 9.23199999999999e-05, 9.20000000000018e-05, 9.191700000000386e-05, 9.168099999999624e-05, 9.226399999999468e-05, 9.24450000000035e-05, 9.223600000000248e-05, 9.223599999999554e-05, 9.223600000000248e-05, 9.187499999999821e-05, 9.156999999999915e-05, 9.188899999999778e-05, 9.223600000000248e-05, 9.18329999999995e-05, 9.16529999999971e-05, 9.24450000000035e-05, 9.201400000000137e-05, 9.245799999999665e-05, 9.155500000000011e-05, 9.211099999999889e-05, 9.156899999999968e-05, 9.241699999999742e-05, 9.212499999999846e-05, 9.177800000000069e-05, 9.213899999999803e-05, 9.190299999999735e-05, 9.18329999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.918" endtime="20201030 18:29:27.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.906" endtime="20201030 18:29:27.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.935" endtime="20201030 18:29:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.930" endtime="20201030 18:29:27.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.928" endtime="20201030 18:29:27.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.405" endtime="20201030 18:29:27.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.404" endtime="20201030 18:29:27.961"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.985" endtime="20201030 18:29:28.010"></status>
</kw>
<msg timestamp="20201030 18:29:28.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.982" endtime="20201030 18:29:28.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.013" endtime="20201030 18:29:28.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.020" endtime="20201030 18:29:28.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.974" endtime="20201030 18:29:28.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.968" endtime="20201030 18:29:28.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.045" endtime="20201030 18:29:28.404"></status>
</kw>
<msg timestamp="20201030 18:29:28.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045126, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045219417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:28.042" endtime="20201030 18:29:28.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045126, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045219417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:28.414" endtime="20201030 18:29:28.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.434" endtime="20201030 18:29:28.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.034" endtime="20201030 18:29:28.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.029" endtime="20201030 18:29:28.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.452" level="INFO">${RESULT} = [{'diff': 9.341699999999842e-05}, {'diff': 9.277800000000169e-05}, {'diff': 9.322200000000391e-05}, {'diff': 9.272200000000341e-05}, {'diff': 9.333299999999406e-05}, {'diff': 9.276399999999518e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:28.443" endtime="20201030 18:29:28.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.462" level="INFO">${ACCURACY} = {'diff': [9.341699999999842e-05, 9.277800000000169e-05, 9.322200000000391e-05, 9.272200000000341e-05, 9.333299999999406e-05, 9.276399999999518e-05, 9.337499999999971e-05, 9.32079999999974e-05, 9.27920...</msg>
<status status="PASS" starttime="20201030 18:29:28.455" endtime="20201030 18:29:28.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.474" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.472" endtime="20201030 18:29:28.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.480" level="INFO">VALUE: [9.341699999999842e-05, 9.277800000000169e-05, 9.322200000000391e-05, 9.272200000000341e-05, 9.333299999999406e-05, 9.276399999999518e-05, 9.337499999999971e-05, 9.32079999999974e-05, 9.279200000000126e-05, 9.345799999999765e-05, 9.322200000000391e-05, 9.299999999999586e-05, 9.333400000000047e-05, 9.266699999999767e-05, 9.334700000000057e-05, 9.277700000000222e-05, 9.287499999999921e-05, 9.290299999999835e-05, 9.269399999999733e-05, 9.334700000000057e-05, 9.333299999999406e-05, 9.30000000000028e-05, 9.334800000000004e-05, 9.301399999999543e-05, 9.301400000000237e-05, 9.266600000000513e-05, 9.290199999999887e-05, 9.334700000000057e-05, 9.297200000000366e-05, 9.305600000000108e-05, 9.288899999999878e-05, 9.268100000000418e-05, 9.279199999999432e-05, 9.290299999999835e-05, 9.305499999999467e-05, 9.322300000000339e-05, 9.266699999999767e-05, 9.290200000000581e-05, 9.340299999999885e-05, 9.347199999999722e-05, 9.334700000000057e-05, 9.330600000000133e-05, 9.336100000000014e-05, 9.277799999999475e-05, 9.325000000000305e-05, 9.277799999999475e-05, 9.279200000000126e-05, 9.269399999999733e-05, 9.311099999999989e-05, 9.28879999999993e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.477" endtime="20201030 18:29:28.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.464" endtime="20201030 18:29:28.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.495" endtime="20201030 18:29:28.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.489" endtime="20201030 18:29:28.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.486" endtime="20201030 18:29:28.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.963" endtime="20201030 18:29:28.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.962" endtime="20201030 18:29:28.521"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.545" endtime="20201030 18:29:28.568"></status>
</kw>
<msg timestamp="20201030 18:29:28.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.541" endtime="20201030 18:29:28.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.572" endtime="20201030 18:29:28.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.578" endtime="20201030 18:29:28.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.533" endtime="20201030 18:29:28.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.527" endtime="20201030 18:29:28.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.603" endtime="20201030 18:29:28.963"></status>
</kw>
<msg timestamp="20201030 18:29:28.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043741431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043835056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.600" endtime="20201030 18:29:28.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043741431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043835056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.973" endtime="20201030 18:29:28.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.993" endtime="20201030 18:29:28.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.592" endtime="20201030 18:29:28.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.587" endtime="20201030 18:29:29.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.011" level="INFO">${RESULT} = [{'diff': 9.362499999999996e-05}, {'diff': 9.356900000000168e-05}, {'diff': 9.358299999999431e-05}, {'diff': 9.380500000000236e-05}, {'diff': 9.411100000000089e-05}, {'diff': 9.39859999999973e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:29.002" endtime="20201030 18:29:29.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.023" level="INFO">${ACCURACY} = {'diff': [9.362499999999996e-05, 9.356900000000168e-05, 9.358299999999431e-05, 9.380500000000236e-05, 9.411100000000089e-05, 9.39859999999973e-05, 9.356899999999474e-05, 9.411100000000089e-05, 9.44449...</msg>
<status status="PASS" starttime="20201030 18:29:29.013" endtime="20201030 18:29:29.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.034" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.032" endtime="20201030 18:29:29.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.040" level="INFO">VALUE: [9.362499999999996e-05, 9.356900000000168e-05, 9.358299999999431e-05, 9.380500000000236e-05, 9.411100000000089e-05, 9.39859999999973e-05, 9.356899999999474e-05, 9.411100000000089e-05, 9.444499999999856e-05, 9.445799999999865e-05, 9.366700000000561e-05, 9.377800000000269e-05, 9.377700000000322e-05, 9.356900000000168e-05, 9.437500000000071e-05, 9.359700000000082e-05, 9.398600000000423e-05, 9.393099999999849e-05, 9.417999999999926e-05, 9.401400000000337e-05, 9.379199999999532e-05, 9.368099999999824e-05, 9.354199999999507e-05, 9.434700000000157e-05, 9.355500000000211e-05, 9.434699999999463e-05, 9.409800000000079e-05, 9.412500000000046e-05, 9.401399999999643e-05, 9.411100000000089e-05, 9.374999999999661e-05, 9.427699999999678e-05, 9.412500000000046e-05, 9.426400000000362e-05, 9.423599999999754e-05, 9.413900000000003e-05, 9.356900000000168e-05, 9.412500000000046e-05, 9.369399999999833e-05, 9.377800000000269e-05, 9.422199999999797e-05, 9.415300000000654e-05, 9.355600000000158e-05, 9.402800000000294e-05, 9.443099999999899e-05, 9.401400000000337e-05, 9.373599999999704e-05, 9.423599999999754e-05, 9.399999999999686e-05, 9.356900000000168e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.037" endtime="20201030 18:29:29.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.025" endtime="20201030 18:29:29.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.053" endtime="20201030 18:29:29.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.049" endtime="20201030 18:29:29.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.046" endtime="20201030 18:29:29.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.523" endtime="20201030 18:29:29.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.522" endtime="20201030 18:29:29.079"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.103" endtime="20201030 18:29:29.126"></status>
</kw>
<msg timestamp="20201030 18:29:29.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.100" endtime="20201030 18:29:29.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.130" endtime="20201030 18:29:29.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.136" endtime="20201030 18:29:29.141"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.092" endtime="20201030 18:29:29.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.086" endtime="20201030 18:29:29.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.161" endtime="20201030 18:29:29.520"></status>
</kw>
<msg timestamp="20201030 18:29:29.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043690292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.158" endtime="20201030 18:29:29.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043595333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043690292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.530" endtime="20201030 18:29:29.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.550" endtime="20201030 18:29:29.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.150" endtime="20201030 18:29:29.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.145" endtime="20201030 18:29:29.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.569" level="INFO">${RESULT} = [{'diff': 9.495899999999863e-05}, {'diff': 9.480499999999642e-05}, {'diff': 9.5333000000003e-05}, {'diff': 9.454200000000301e-05}, {'diff': 9.480500000000336e-05}, {'diff': 9.488900000000078e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:29.559" endtime="20201030 18:29:29.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.581" level="INFO">${ACCURACY} = {'diff': [9.495899999999863e-05, 9.480499999999642e-05, 9.5333000000003e-05, 9.454200000000301e-05, 9.480500000000336e-05, 9.488900000000078e-05, 9.534699999999563e-05, 9.491699999999992e-05, 9.501399...</msg>
<status status="PASS" starttime="20201030 18:29:29.571" endtime="20201030 18:29:29.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.592" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.590" endtime="20201030 18:29:29.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.598" level="INFO">VALUE: [9.495899999999863e-05, 9.480499999999642e-05, 9.5333000000003e-05, 9.454200000000301e-05, 9.480500000000336e-05, 9.488900000000078e-05, 9.534699999999563e-05, 9.491699999999992e-05, 9.501399999999743e-05, 9.513899999999409e-05, 9.466699999999967e-05, 9.458400000000172e-05, 9.469399999999933e-05, 9.472199999999847e-05, 9.467999999999976e-05, 9.549999999999836e-05, 9.46660000000002e-05, 9.467999999999976e-05, 9.468099999999924e-05, 9.455600000000258e-05, 9.511100000000189e-05, 9.488900000000078e-05, 9.522299999999845e-05, 9.477799999999675e-05, 9.467999999999976e-05, 9.536100000000214e-05, 9.524999999999811e-05, 9.469399999999933e-05, 9.534699999999563e-05, 9.456900000000268e-05, 9.5333000000003e-05, 9.534700000000257e-05, 9.545899999999913e-05, 9.523599999999854e-05, 9.480500000000336e-05, 9.46800000000067e-05, 9.48880000000013e-05, 9.5027999999997e-05, 9.48609999999947e-05, 9.493000000000001e-05, 9.466699999999967e-05, 9.544400000000008e-05, 9.540200000000137e-05, 9.534700000000257e-05, 9.501399999999743e-05, 9.523699999999802e-05, 9.49729999999982e-05, 9.490200000000087e-05, 9.534700000000257e-05, 9.545799999999965e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.595" endtime="20201030 18:29:29.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.583" endtime="20201030 18:29:29.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.618" endtime="20201030 18:29:29.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.613" endtime="20201030 18:29:29.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.610" endtime="20201030 18:29:29.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.082" endtime="20201030 18:29:29.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.080" endtime="20201030 18:29:29.644"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.668" endtime="20201030 18:29:29.692"></status>
</kw>
<msg timestamp="20201030 18:29:29.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.664" endtime="20201030 18:29:29.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.696" endtime="20201030 18:29:29.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.703" endtime="20201030 18:29:29.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.657" endtime="20201030 18:29:29.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.650" endtime="20201030 18:29:29.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.728" endtime="20201030 18:29:30.089"></status>
</kw>
<msg timestamp="20201030 18:29:30.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043738111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043833861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.724" endtime="20201030 18:29:30.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043738111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043833861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.100" endtime="20201030 18:29:30.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.119" endtime="20201030 18:29:30.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.716" endtime="20201030 18:29:30.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.711" endtime="20201030 18:29:30.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.138" level="INFO">${RESULT} = [{'diff': 9.574999999999861e-05}, {'diff': 9.568100000000024e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.555600000000358e-05}, {'diff': 9.568100000000024e-05}, {'diff': 9.63479999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:30.128" endtime="20201030 18:29:30.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.148" level="INFO">${ACCURACY} = {'diff': [9.574999999999861e-05, 9.568100000000024e-05, 9.613900000000203e-05, 9.555600000000358e-05, 9.568100000000024e-05, 9.63479999999961e-05, 9.601400000000537e-05, 9.577699999999828e-05, 9.55140...</msg>
<status status="PASS" starttime="20201030 18:29:30.140" endtime="20201030 18:29:30.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.159" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.157" endtime="20201030 18:29:30.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.165" level="INFO">VALUE: [9.574999999999861e-05, 9.568100000000024e-05, 9.613900000000203e-05, 9.555600000000358e-05, 9.568100000000024e-05, 9.63479999999961e-05, 9.601400000000537e-05, 9.577699999999828e-05, 9.551400000000487e-05, 9.567999999999383e-05, 9.623599999999954e-05, 9.645800000000065e-05, 9.634700000000357e-05, 9.636100000000314e-05, 9.599999999999886e-05, 9.634800000000304e-05, 9.562500000000196e-05, 9.61660000000017e-05, 9.61530000000016e-05, 9.638900000000228e-05, 9.631899999999749e-05, 9.622199999999997e-05, 9.645800000000065e-05, 9.574999999999861e-05, 9.593100000000049e-05, 9.604200000000451e-05, 9.576399999999818e-05, 9.622299999999945e-05, 9.555599999999664e-05, 9.588900000000178e-05, 9.645800000000065e-05, 9.568000000000076e-05, 9.633299999999706e-05, 9.612500000000246e-05, 9.566700000000067e-05, 9.599999999999886e-05, 9.626399999999868e-05, 9.556999999999621e-05, 9.581900000000393e-05, 9.579200000000426e-05, 9.573599999999904e-05, 9.623599999999954e-05, 9.579099999999785e-05, 9.556900000000368e-05, 9.569400000000033e-05, 9.599999999999886e-05, 9.566699999999373e-05, 9.568100000000024e-05, 9.58059999999969e-05, 9.556999999999621e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.162" endtime="20201030 18:29:30.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.150" endtime="20201030 18:29:30.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.179" endtime="20201030 18:29:30.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.174" endtime="20201030 18:29:30.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.171" endtime="20201030 18:29:30.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.646" endtime="20201030 18:29:30.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.644" endtime="20201030 18:29:30.204"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.228" endtime="20201030 18:29:30.253"></status>
</kw>
<msg timestamp="20201030 18:29:30.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.225" endtime="20201030 18:29:30.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.257" endtime="20201030 18:29:30.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.263" endtime="20201030 18:29:30.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.217" endtime="20201030 18:29:30.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.211" endtime="20201030 18:29:30.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.288" endtime="20201030 18:29:30.613"></status>
</kw>
<msg timestamp="20201030 18:29:30.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.284" endtime="20201030 18:29:30.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045048028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.622" endtime="20201030 18:29:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.641" endtime="20201030 18:29:30.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.277" endtime="20201030 18:29:30.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.272" endtime="20201030 18:29:30.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.660" level="INFO">${RESULT} = [{'diff': 9.741600000000294e-05}, {'diff': 9.711100000000389e-05}, {'diff': 9.7333000000005e-05}, {'diff': 9.694500000000106e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.747200000000122e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:30.649" endtime="20201030 18:29:30.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.669" level="INFO">${ACCURACY} = {'diff': [9.741600000000294e-05, 9.711100000000389e-05, 9.7333000000005e-05, 9.694500000000106e-05, 9.723600000000054e-05, 9.747200000000122e-05, 9.690300000000235e-05, 9.723600000000054e-05, 9.687499...</msg>
<status status="PASS" starttime="20201030 18:29:30.662" endtime="20201030 18:29:30.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.680" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.678" endtime="20201030 18:29:30.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.686" level="INFO">VALUE: [9.741600000000294e-05, 9.711100000000389e-05, 9.7333000000005e-05, 9.694500000000106e-05, 9.723600000000054e-05, 9.747200000000122e-05, 9.690300000000235e-05, 9.723600000000054e-05, 9.687499999999627e-05, 9.720900000000088e-05, 9.726399999999968e-05, 9.658299999999731e-05, 9.658300000000425e-05, 9.658299999999731e-05, 9.658299999999731e-05, 9.69860000000003e-05, 9.706999999999771e-05, 9.720799999999447e-05, 9.688899999999584e-05, 9.68059999999979e-05, 9.744499999999462e-05, 9.734699999999763e-05, 9.734699999999763e-05, 9.656899999999774e-05, 9.679099999999885e-05, 9.693100000000149e-05, 9.734699999999763e-05, 9.726399999999968e-05, 9.706899999999824e-05, 9.68059999999979e-05, 9.701400000000637e-05, 9.690299999999541e-05, 9.657000000000415e-05, 9.73880000000038e-05, 9.713899999999609e-05, 9.66939999999944e-05, 9.740299999999591e-05, 9.7027999999999e-05, 9.677799999999875e-05, 9.657000000000415e-05, 9.690300000000235e-05, 9.745900000000113e-05, 9.7027999999999e-05, 9.73609999999972e-05, 9.681899999999799e-05, 9.690200000000287e-05, 9.744400000000208e-05, 9.665299999999516e-05, 9.656899999999774e-05, 9.744400000000208e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.682" endtime="20201030 18:29:30.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.671" endtime="20201030 18:29:30.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.704" endtime="20201030 18:29:30.726"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.697" endtime="20201030 18:29:30.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.693" endtime="20201030 18:29:30.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.206" endtime="20201030 18:29:30.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.205" endtime="20201030 18:29:30.729"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.752" endtime="20201030 18:29:30.774"></status>
</kw>
<msg timestamp="20201030 18:29:30.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.749" endtime="20201030 18:29:30.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.777" endtime="20201030 18:29:30.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.784" endtime="20201030 18:29:30.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.741" endtime="20201030 18:29:30.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.736" endtime="20201030 18:29:30.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.807" endtime="20201030 18:29:31.139"></status>
</kw>
<msg timestamp="20201030 18:29:31.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041194972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041292722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.804" endtime="20201030 18:29:31.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041194972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041292722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.149" endtime="20201030 18:29:31.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.168" endtime="20201030 18:29:31.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.796" endtime="20201030 18:29:31.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.792" endtime="20201030 18:29:31.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.185" level="INFO">${RESULT} = [{'diff': 9.774999999999368e-05}, {'diff': 9.82359999999946e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.836100000000514e-05}, {'diff': 9.83059999999994e-05}, {'diff': 9.833299999999906e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:31.176" endtime="20201030 18:29:31.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.195" level="INFO">${ACCURACY} = {'diff': [9.774999999999368e-05, 9.82359999999946e-05, 9.787499999999727e-05, 9.836100000000514e-05, 9.83059999999994e-05, 9.833299999999906e-05, 9.759700000000482e-05, 9.822300000000145e-05, 9.801400...</msg>
<status status="PASS" starttime="20201030 18:29:31.187" endtime="20201030 18:29:31.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.206" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.204" endtime="20201030 18:29:31.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.211" level="INFO">VALUE: [9.774999999999368e-05, 9.82359999999946e-05, 9.787499999999727e-05, 9.836100000000514e-05, 9.83059999999994e-05, 9.833299999999906e-05, 9.759700000000482e-05, 9.822300000000145e-05, 9.801400000000043e-05, 9.822300000000145e-05, 9.845799999999572e-05, 9.844399999999615e-05, 9.769400000000233e-05, 9.811099999999795e-05, 9.756899999999874e-05, 9.777799999999975e-05, 9.847200000000222e-05, 9.801400000000043e-05, 9.76809999999953e-05, 9.768100000000224e-05, 9.844500000000256e-05, 9.765199999999669e-05, 9.800000000000086e-05, 9.779099999999985e-05, 9.834699999999863e-05, 9.762500000000396e-05, 9.777799999999975e-05, 9.799999999999393e-05, 9.833399999999853e-05, 9.801400000000043e-05, 9.801400000000043e-05, 9.847200000000222e-05, 9.833299999999906e-05, 9.822200000000197e-05, 9.790300000000335e-05, 9.845800000000265e-05, 9.770900000000138e-05, 9.790300000000335e-05, 9.755599999999864e-05, 9.777799999999975e-05, 9.845900000000213e-05, 9.758299999999831e-05, 9.837499999999777e-05, 9.779100000000679e-05, 9.787499999999727e-05, 9.788899999999684e-05, 9.766700000000267e-05, 9.790300000000335e-05, 9.790300000000335e-05, 9.790299999999641e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.208" endtime="20201030 18:29:31.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.197" endtime="20201030 18:29:31.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.224" endtime="20201030 18:29:31.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.219" endtime="20201030 18:29:31.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.217" endtime="20201030 18:29:31.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.731" endtime="20201030 18:29:31.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.730" endtime="20201030 18:29:31.249"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.271" endtime="20201030 18:29:31.293"></status>
</kw>
<msg timestamp="20201030 18:29:31.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.268" endtime="20201030 18:29:31.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.297" endtime="20201030 18:29:31.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.303" endtime="20201030 18:29:31.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.261" endtime="20201030 18:29:31.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.255" endtime="20201030 18:29:31.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.326" endtime="20201030 18:29:31.660"></status>
</kw>
<msg timestamp="20201030 18:29:31.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.323" endtime="20201030 18:29:31.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.670" endtime="20201030 18:29:31.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.688" endtime="20201030 18:29:31.692"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.316" endtime="20201030 18:29:31.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.311" endtime="20201030 18:29:31.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.705" level="INFO">${RESULT} = [{'diff': 9.876400000000118e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.944500000000356e-05}, {'diff': 9.856999999999921e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:31.697" endtime="20201030 18:29:31.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.716" level="INFO">${ACCURACY} = {'diff': [9.876400000000118e-05, 9.934699999999963e-05, 9.879200000000032e-05, 9.911099999999895e-05, 9.944500000000356e-05, 9.856999999999921e-05, 9.858299999999931e-05, 9.900000000000186e-05, 9.8915...</msg>
<status status="PASS" starttime="20201030 18:29:31.707" endtime="20201030 18:29:31.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.727" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.725" endtime="20201030 18:29:31.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.733" level="INFO">VALUE: [9.876400000000118e-05, 9.934699999999963e-05, 9.879200000000032e-05, 9.911099999999895e-05, 9.944500000000356e-05, 9.856999999999921e-05, 9.858299999999931e-05, 9.900000000000186e-05, 9.89159999999975e-05, 9.869400000000333e-05, 9.852799999999357e-05, 9.890299999999741e-05, 9.900000000000186e-05, 9.911099999999895e-05, 9.901400000000143e-05, 9.936199999999867e-05, 9.911099999999895e-05, 9.933399999999953e-05, 9.934699999999963e-05, 9.940299999999791e-05, 9.912500000000546e-05, 9.879200000000032e-05, 9.856899999999974e-05, 9.879200000000032e-05, 9.899999999999493e-05, 9.923600000000254e-05, 9.89730000000022e-05, 9.923699999999508e-05, 9.868000000000376e-05, 9.947199999999629e-05, 9.89159999999975e-05, 9.945799999999672e-05, 9.900000000000186e-05, 9.891699999999698e-05, 9.940299999999791e-05, 9.933300000000006e-05, 9.869499999999587e-05, 9.856999999999921e-05, 9.868100000000324e-05, 9.86939999999964e-05, 9.858299999999931e-05, 9.866599999999726e-05, 9.912499999999852e-05, 9.856899999999974e-05, 9.944400000000408e-05, 9.943099999999705e-05, 9.890299999999741e-05, 9.897200000000272e-05, 9.936200000000561e-05, 9.866699999999673e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.730" endtime="20201030 18:29:31.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.718" endtime="20201030 18:29:31.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.745" endtime="20201030 18:29:31.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.741" endtime="20201030 18:29:31.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.738" endtime="20201030 18:29:31.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.251" endtime="20201030 18:29:31.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.250" endtime="20201030 18:29:31.770"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.792" endtime="20201030 18:29:31.815"></status>
</kw>
<msg timestamp="20201030 18:29:31.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.789" endtime="20201030 18:29:31.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.818" endtime="20201030 18:29:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.824" endtime="20201030 18:29:31.828"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.782" endtime="20201030 18:29:31.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.776" endtime="20201030 18:29:31.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.847" endtime="20201030 18:29:32.183"></status>
</kw>
<msg timestamp="20201030 18:29:32.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040941861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.844" endtime="20201030 18:29:32.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040841556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040941861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.193" endtime="20201030 18:29:32.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.211" endtime="20201030 18:29:32.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.837" endtime="20201030 18:29:32.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.832" endtime="20201030 18:29:32.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.228" level="INFO">${RESULT} = [{'diff': 0.00010030500000000192}, {'diff': 9.969499999999687e-05}, {'diff': 9.968100000000424e-05}, {'diff': 9.966699999999773e-05}, {'diff': 9.976400000000218e-05}, {'diff': 9.979199999999439e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:32.219" endtime="20201030 18:29:32.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.237" level="INFO">${ACCURACY} = {'diff': [0.00010030500000000192, 9.969499999999687e-05, 9.968100000000424e-05, 9.966699999999773e-05, 9.976400000000218e-05, 9.979199999999439e-05, 9.988899999999884e-05, 9.969400000000433e-05, 0.000...</msg>
<status status="PASS" starttime="20201030 18:29:32.230" endtime="20201030 18:29:32.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.248" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.246" endtime="20201030 18:29:32.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.253" level="INFO">VALUE: [0.00010030500000000192, 9.969499999999687e-05, 9.968100000000424e-05, 9.966699999999773e-05, 9.976400000000218e-05, 9.979199999999439e-05, 9.988899999999884e-05, 9.969400000000433e-05, 0.0001001939999999979, 9.977700000000228e-05, 0.00010037499999999977, 9.979200000000132e-05, 9.954200000000107e-05, 0.00010034700000000063, 9.990299999999841e-05, 0.00010043099999999805, 9.979200000000132e-05, 0.00010045899999999719, 0.0001003610000000002, 9.979100000000185e-05, 0.00010000000000000286, 9.979200000000132e-05, 0.00010001400000000243, 0.0001002359999999966, 0.00010045799999999772, 9.990299999999841e-05, 0.0001000139999999955, 9.955600000000064e-05, 9.955600000000064e-05, 9.969400000000433e-05, 9.967999999999783e-05, 9.979200000000132e-05, 9.956900000000074e-05, 9.98609999999997e-05, 9.96809999999973e-05, 0.00010034700000000063, 9.991699999999798e-05, 0.000100028000000002, 0.00010012500000000646, 0.0001000139999999955, 0.00010001400000000243, 0.00010015299999999866, 0.00010012500000000646, 0.00010001400000000243, 0.00010034700000000063, 9.958399999999978e-05, 0.00010038799999999987, 9.988899999999884e-05, 0.0001004730000000037, 9.96809999999973e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.250" endtime="20201030 18:29:32.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.239" endtime="20201030 18:29:32.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.266" endtime="20201030 18:29:32.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.262" endtime="20201030 18:29:32.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.259" endtime="20201030 18:29:32.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.772" endtime="20201030 18:29:32.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.771" endtime="20201030 18:29:32.291"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.313" endtime="20201030 18:29:32.342"></status>
</kw>
<msg timestamp="20201030 18:29:32.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.310" endtime="20201030 18:29:32.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.345" endtime="20201030 18:29:32.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.351" endtime="20201030 18:29:32.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.303" endtime="20201030 18:29:32.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.297" endtime="20201030 18:29:32.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.375" endtime="20201030 18:29:32.707"></status>
</kw>
<msg timestamp="20201030 18:29:32.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.371" endtime="20201030 18:29:32.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046448042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.717" endtime="20201030 18:29:32.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.734" endtime="20201030 18:29:32.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.364" endtime="20201030 18:29:32.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.360" endtime="20201030 18:29:32.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.751" level="INFO">${RESULT} = [{'diff': 0.00010140200000000044}, {'diff': 0.00010127799999999632}, {'diff': 0.00010067999999999883}, {'diff': 0.00010136099999999426}, {'diff': 0.00010133300000000206}, {'diff': 0.000100652999999999...</msg>
<status status="PASS" starttime="20201030 18:29:32.743" endtime="20201030 18:29:32.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.760" level="INFO">${ACCURACY} = {'diff': [0.00010140200000000044, 0.00010127799999999632, 0.00010067999999999883, 0.00010136099999999426, 0.00010133300000000206, 0.00010065299999999916, 0.00010136099999999426, 0.00010137500000000077...</msg>
<status status="PASS" starttime="20201030 18:29:32.753" endtime="20201030 18:29:32.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.771" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.769" endtime="20201030 18:29:32.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.777" level="INFO">VALUE: [0.00010140200000000044, 0.00010127799999999632, 0.00010067999999999883, 0.00010136099999999426, 0.00010133300000000206, 0.00010065299999999916, 0.00010136099999999426, 0.00010137500000000077, 0.00010061100000000045, 0.00010090299999999941, 0.00010072199999999754, 0.00010090199999999994, 0.00010134699999999469, 0.00010056900000000174, 0.00010101400000000343, 0.00010137500000000077, 0.00010150000000000436, 0.00010057000000000121, 0.0001006809999999983, 0.00010058400000000078, 0.00010090299999999941, 0.00010134700000000163, 0.00010079099999999591, 0.00010090299999999941, 0.0001012359999999976, 0.00010101400000000343, 0.00010090299999999941, 0.00010112500000000052, 0.00010090299999999941, 0.00010122299999999751, 0.00010057000000000121, 0.00010101299999999702, 0.00010134699999999469, 0.00010081900000000199, 0.00010081900000000199, 0.00010079200000000232, 0.00010133300000000206, 0.0001010139999999965, 0.00010112500000000052, 0.00010079200000000232, 0.00010090299999999941, 0.00010090299999999941, 0.0001013610000000012, 0.00010080499999999548, 0.00010076400000000318, 0.0001012359999999976, 0.0001011809999999988, 0.00010091699999999898, 0.00010113900000000009, 0.0001013610000000012]</msg>
<status status="PASS" starttime="20201030 18:29:32.773" endtime="20201030 18:29:32.778"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.762" endtime="20201030 18:29:32.780"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.790" endtime="20201030 18:29:32.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.785" endtime="20201030 18:29:32.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.782" endtime="20201030 18:29:32.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.293" endtime="20201030 18:29:32.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.292" endtime="20201030 18:29:32.815"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.838" endtime="20201030 18:29:32.860"></status>
</kw>
<msg timestamp="20201030 18:29:32.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.834" endtime="20201030 18:29:32.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.863" endtime="20201030 18:29:32.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.870" endtime="20201030 18:29:32.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.827" endtime="20201030 18:29:32.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.821" endtime="20201030 18:29:32.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.893" endtime="20201030 18:29:33.224"></status>
</kw>
<msg timestamp="20201030 18:29:33.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.889" endtime="20201030 18:29:33.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041008903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041111236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.234" endtime="20201030 18:29:33.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.252" endtime="20201030 18:29:33.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.882" endtime="20201030 18:29:33.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.878" endtime="20201030 18:29:33.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.269" level="INFO">${RESULT} = [{'diff': 0.00010233300000000306}, {'diff': 0.00010188900000000084}, {'diff': 0.00010177800000000375}, {'diff': 0.00010202799999999707}, {'diff': 0.00010188900000000084}, {'diff': 0.000101583999999994...</msg>
<status status="PASS" starttime="20201030 18:29:33.261" endtime="20201030 18:29:33.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.280" level="INFO">${ACCURACY} = {'diff': [0.00010233300000000306, 0.00010188900000000084, 0.00010177800000000375, 0.00010202799999999707, 0.00010188900000000084, 0.00010158399999999485, 0.00010169499999999887, 0.00010226399999999775...</msg>
<status status="PASS" starttime="20201030 18:29:33.271" endtime="20201030 18:29:33.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.290" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.288" endtime="20201030 18:29:33.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.296" level="INFO">VALUE: [0.00010233300000000306, 0.00010188900000000084, 0.00010177800000000375, 0.00010202799999999707, 0.00010188900000000084, 0.00010158399999999485, 0.00010169499999999887, 0.00010226399999999775, 0.00010172200000000547, 0.00010245900000000613, 0.00010247199999999929, 0.0001020139999999975, 0.0001022359999999986, 0.00010201400000000443, 0.00010155499999999623, 0.00010222199999999904, 0.0001016809999999993, 0.00010244499999999962, 0.00010174999999999768, 0.00010233400000000253, 0.00010202699999999759, 0.00010202799999999707, 0.00010222200000000597, 0.00010166600000000026, 0.0001022359999999986, 0.00010208299999999587, 0.00010198599999999836, 0.00010200000000000486, 0.00010222199999999904, 0.00010223699999999808, 0.00010180499999999648, 0.00010158299999999537, 0.00010167999999999983, 0.00010230500000000392, 0.00010166699999999973, 0.0001020139999999975, 0.00010200000000000486, 0.00010206900000000324, 0.00010212500000000152, 0.00010172300000000495, 0.00010157000000000221, 0.00010201299999999802, 0.00010212499999999458, 0.00010222200000000597, 0.00010179099999999691, 0.0001022359999999986, 0.00010188900000000084, 0.00010199999999999793, 0.0001020689999999963, 0.00010166699999999973]</msg>
<status status="PASS" starttime="20201030 18:29:33.293" endtime="20201030 18:29:33.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.281" endtime="20201030 18:29:33.299"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.308" endtime="20201030 18:29:33.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.304" endtime="20201030 18:29:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.301" endtime="20201030 18:29:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.817" endtime="20201030 18:29:33.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.816" endtime="20201030 18:29:33.333"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.355" endtime="20201030 18:29:33.378"></status>
</kw>
<msg timestamp="20201030 18:29:33.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.352" endtime="20201030 18:29:33.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.381" endtime="20201030 18:29:33.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.388" endtime="20201030 18:29:33.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.345" endtime="20201030 18:29:33.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.339" endtime="20201030 18:29:33.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.411" endtime="20201030 18:29:33.752"></status>
</kw>
<msg timestamp="20201030 18:29:33.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041213958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.408" endtime="20201030 18:29:33.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041213958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041316972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.756" endtime="20201030 18:29:33.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.765" endtime="20201030 18:29:33.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.401" endtime="20201030 18:29:33.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.396" endtime="20201030 18:29:33.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.773" level="INFO">${RESULT} = [{'diff': 0.0001030139999999985}, {'diff': 0.00010288800000000237}, {'diff': 0.0001029160000000015}, {'diff': 0.00010324999999999918}, {'diff': 0.00010336099999999626}, {'diff': 0.00010344400000000115...</msg>
<status status="PASS" starttime="20201030 18:29:33.769" endtime="20201030 18:29:33.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.779" level="INFO">${ACCURACY} = {'diff': [0.0001030139999999985, 0.00010288800000000237, 0.0001029160000000015, 0.00010324999999999918, 0.00010336099999999626, 0.00010344400000000115, 0.00010343100000000105, 0.00010345800000000072, ...</msg>
<status status="PASS" starttime="20201030 18:29:33.774" endtime="20201030 18:29:33.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.784" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.783" endtime="20201030 18:29:33.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.787" level="INFO">VALUE: [0.0001030139999999985, 0.00010288800000000237, 0.0001029160000000015, 0.00010324999999999918, 0.00010336099999999626, 0.00010344400000000115, 0.00010343100000000105, 0.00010345800000000072, 0.00010269499999999987, 0.00010301400000000543, 0.00010280499999999748, 0.00010324999999999918, 0.00010311100000000295, 0.00010322200000000004, 0.00010288900000000184, 0.00010268000000000083, 0.00010279199999999739, 0.0001030139999999985, 0.00010254199999999714, 0.00010259700000000288, 0.0001028889999999949, 0.00010322299999999951, 0.00010334700000000363, 0.00010288900000000184, 0.00010256900000000374, 0.00010345800000000072, 0.00010298599999999936, 0.00010280599999999696, 0.00010333299999999712, 0.00010280599999999696, 0.0001032359999999996, 0.00010259699999999594, 0.00010301299999999902, 0.00010255499999999723, 0.00010274999999999868, 0.0001025689999999968, 0.00010266700000000073, 0.00010258300000000331, 0.00010269499999999987, 0.00010320899999999994, 0.0001033480000000031, 0.00010333400000000353, 0.00010320899999999994, 0.0001032359999999996, 0.00010309700000000338, 0.0001030139999999985, 0.0001025689999999968, 0.00010299999999999893, 0.00010279200000000432, 0.0001032359999999996]</msg>
<status status="PASS" starttime="20201030 18:29:33.785" endtime="20201030 18:29:33.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.779" endtime="20201030 18:29:33.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.793" endtime="20201030 18:29:33.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.791" endtime="20201030 18:29:33.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.789" endtime="20201030 18:29:33.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.335" endtime="20201030 18:29:33.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.334" endtime="20201030 18:29:33.814"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.826" endtime="20201030 18:29:33.847"></status>
</kw>
<msg timestamp="20201030 18:29:33.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.824" endtime="20201030 18:29:33.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.848" endtime="20201030 18:29:33.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.851" endtime="20201030 18:29:33.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.820" endtime="20201030 18:29:33.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.817" endtime="20201030 18:29:33.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.872" endtime="20201030 18:29:34.234"></status>
</kw>
<msg timestamp="20201030 18:29:34.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026654292, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:33.869" endtime="20201030 18:29:34.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02655, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026654292, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:34.243" endtime="20201030 18:29:34.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.262" endtime="20201030 18:29:34.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.862" endtime="20201030 18:29:34.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.857" endtime="20201030 18:29:34.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.279" level="INFO">${RESULT} = [{'diff': 0.00010429199999999889}, {'diff': 0.00010422300000000051}, {'diff': 0.00010401300000000002}, {'diff': 0.0001035689999999978}, {'diff': 0.00010358300000000084}, {'diff': 0.0001035690000000012...</msg>
<status status="PASS" starttime="20201030 18:29:34.271" endtime="20201030 18:29:34.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.289" level="INFO">${ACCURACY} = {'diff': [0.00010429199999999889, 0.00010422300000000051, 0.00010401300000000002, 0.0001035689999999978, 0.00010358300000000084, 0.00010356900000000127, 0.00010404199999999864, 0.00010399999999999993,...</msg>
<status status="PASS" starttime="20201030 18:29:34.281" endtime="20201030 18:29:34.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.300" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.297" endtime="20201030 18:29:34.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.305" level="INFO">VALUE: [0.00010429199999999889, 0.00010422300000000051, 0.00010401300000000002, 0.0001035689999999978, 0.00010358300000000084, 0.00010356900000000127, 0.00010404199999999864, 0.00010399999999999993, 0.00010412500000000005, 0.00010380600000000142, 0.00010402799999999907, 0.00010434700000000116, 0.0001042360000000006, 0.00010402800000000254, 0.00010356900000000127, 0.00010399999999999993, 0.00010377799999999882, 0.00010368099999999783, 0.00010379200000000185, 0.0001040689999999983, 0.00010355600000000117, 0.00010444499999999815, 0.00010358300000000084, 0.0001035689999999978, 0.00010412500000000005, 0.00010425000000000018, 0.00010384800000000013, 0.00010390299999999894, 0.000103820000000001, 0.00010390299999999894, 0.00010402800000000254, 0.00010374999999999968, 0.0001036810000000013, 0.0001040689999999983, 0.00010358300000000084, 0.00010450000000000043, 0.00010380599999999796, 0.00010445800000000172, 0.00010399999999999993, 0.00010433299999999812, 0.00010355600000000117, 0.00010390299999999894, 0.00010412499999999658, 0.00010401300000000002, 0.0001038889999999959, 0.00010356900000000474, 0.0001040139999999995, 0.00010368099999999436, 0.00010412499999999658, 0.00010380599999999796]</msg>
<status status="PASS" starttime="20201030 18:29:34.302" endtime="20201030 18:29:34.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.290" endtime="20201030 18:29:34.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.318" endtime="20201030 18:29:34.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.313" endtime="20201030 18:29:34.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.311" endtime="20201030 18:29:34.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.815" endtime="20201030 18:29:34.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.814" endtime="20201030 18:29:34.343"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.368" endtime="20201030 18:29:34.393"></status>
</kw>
<msg timestamp="20201030 18:29:34.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.364" endtime="20201030 18:29:34.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.396" endtime="20201030 18:29:34.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.403" endtime="20201030 18:29:34.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.356" endtime="20201030 18:29:34.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.350" endtime="20201030 18:29:34.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.426" endtime="20201030 18:29:34.778"></status>
</kw>
<msg timestamp="20201030 18:29:34.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044778069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.423" endtime="20201030 18:29:34.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044778069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.788" endtime="20201030 18:29:34.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.806" endtime="20201030 18:29:34.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.416" endtime="20201030 18:29:34.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.411" endtime="20201030 18:29:34.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.824" level="INFO">${RESULT} = [{'diff': 0.00010463900000000359}, {'diff': 0.00010468000000000283}, {'diff': 0.00010477799999999982}, {'diff': 0.00010512500000000452}, {'diff': 0.00010479199999999939}, {'diff': 0.000104805999999998...</msg>
<status status="PASS" starttime="20201030 18:29:34.815" endtime="20201030 18:29:34.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.833" level="INFO">${ACCURACY} = {'diff': [0.00010463900000000359, 0.00010468000000000283, 0.00010477799999999982, 0.00010512500000000452, 0.00010479199999999939, 0.00010480599999999896, 0.00010472200000000154, 0.00010456999999999828...</msg>
<status status="PASS" starttime="20201030 18:29:34.826" endtime="20201030 18:29:34.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.844" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.842" endtime="20201030 18:29:34.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.849" level="INFO">VALUE: [0.00010463900000000359, 0.00010468000000000283, 0.00010477799999999982, 0.00010512500000000452, 0.00010479199999999939, 0.00010480599999999896, 0.00010472200000000154, 0.00010456999999999828, 0.0001053339999999986, 0.00010512500000000452, 0.00010511100000000495, 0.00010475000000000068, 0.00010531899999999955, 0.0001045689999999988, 0.00010512499999999758, 0.00010547199999999535, 0.00010491699999999604, 0.00010466699999999579, 0.00010458299999999837, 0.00010488900000000384, 0.00010466600000000326, 0.00010512499999999758, 0.00010461099999999751, 0.00010537499999999783, 0.00010450000000000043, 0.0001046810000000023, 0.0001053339999999986, 0.00010470799999999503, 0.0001045559999999987, 0.00010477700000000034, 0.00010513900000000409, 0.00010525000000000118, 0.00010544400000000315, 0.00010468000000000283, 0.00010479200000000632, 0.00010456999999999828, 0.0001045559999999987, 0.00010512499999999758, 0.00010480599999999896, 0.00010456999999999828, 0.00010548600000000186, 0.00010459700000000488, 0.0001045689999999988, 0.00010502800000000007, 0.00010522200000000204, 0.00010545799999999578, 0.0001048889999999969, 0.00010534699999999869, 0.00010490300000000341, 0.000104901999999997]</msg>
<status status="PASS" starttime="20201030 18:29:34.846" endtime="20201030 18:29:34.851"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.835" endtime="20201030 18:29:34.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.864" endtime="20201030 18:29:34.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.858" endtime="20201030 18:29:34.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.855" endtime="20201030 18:29:34.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.346" endtime="20201030 18:29:34.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.344" endtime="20201030 18:29:34.889"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.912" endtime="20201030 18:29:34.936"></status>
</kw>
<msg timestamp="20201030 18:29:34.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.909" endtime="20201030 18:29:34.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.939" endtime="20201030 18:29:34.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.945" endtime="20201030 18:29:34.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.901" endtime="20201030 18:29:34.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.896" endtime="20201030 18:29:34.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.970" endtime="20201030 18:29:35.322"></status>
</kw>
<msg timestamp="20201030 18:29:35.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041915125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042020986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.967" endtime="20201030 18:29:35.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041915125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042020986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.331" endtime="20201030 18:29:35.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.349" endtime="20201030 18:29:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.959" endtime="20201030 18:29:35.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.954" endtime="20201030 18:29:35.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.368" level="INFO">${RESULT} = [{'diff': 0.0001058610000000057}, {'diff': 0.0001055559999999997}, {'diff': 0.00010643100000000405}, {'diff': 0.00010579200000000039}, {'diff': 0.00010613899999999815}, {'diff': 0.00010579200000000039...</msg>
<status status="PASS" starttime="20201030 18:29:35.359" endtime="20201030 18:29:35.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.379" level="INFO">${ACCURACY} = {'diff': [0.0001058610000000057, 0.0001055559999999997, 0.00010643100000000405, 0.00010579200000000039, 0.00010613899999999815, 0.00010579200000000039, 0.00010587500000000527, 0.00010584699999999919, ...</msg>
<status status="PASS" starttime="20201030 18:29:35.370" endtime="20201030 18:29:35.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.390" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.387" endtime="20201030 18:29:35.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.395" level="INFO">VALUE: [0.0001058610000000057, 0.0001055559999999997, 0.00010643100000000405, 0.00010579200000000039, 0.00010613899999999815, 0.00010579200000000039, 0.00010587500000000527, 0.00010584699999999919, 0.0001060140000000015, 0.00010637499999999883, 0.00010634699999999969, 0.0001055689999999998, 0.0001055559999999997, 0.00010590299999999747, 0.00010563899999999765, 0.00010612499999999858, 0.0001056810000000033, 0.00010591599999999757, 0.000105901999999998, 0.00010602799999999413, 0.00010644399999999721, 0.00010612499999999858, 0.00010598600000000236, 0.00010579200000000039, 0.00010556999999999928, 0.00010558399999999885, 0.0001058889999999979, 0.0001059160000000045, 0.0001057360000000021, 0.00010565199999999775, 0.00010566600000000426, 0.00010623599999999567, 0.00010612499999999858, 0.00010579199999999345, 0.00010566699999999679, 0.00010556999999999928, 0.00010612500000000552, 0.00010567999999999689, 0.00010604200000000064, 0.00010554100000000066, 0.0001060140000000015, 0.00010591700000000398, 0.000105514000000001, 0.00010556999999999928, 0.000106514000000002, 0.00010613899999999815, 0.00010636099999999926, 0.00010579100000000091, 0.00010634699999999969, 0.00010645800000000372]</msg>
<status status="PASS" starttime="20201030 18:29:35.392" endtime="20201030 18:29:35.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.381" endtime="20201030 18:29:35.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.408" endtime="20201030 18:29:35.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.404" endtime="20201030 18:29:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.401" endtime="20201030 18:29:35.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.891" endtime="20201030 18:29:35.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.890" endtime="20201030 18:29:35.433"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.456" endtime="20201030 18:29:35.480"></status>
</kw>
<msg timestamp="20201030 18:29:35.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.453" endtime="20201030 18:29:35.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.483" endtime="20201030 18:29:35.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.490" endtime="20201030 18:29:35.494"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.446" endtime="20201030 18:29:35.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.440" endtime="20201030 18:29:35.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.514" endtime="20201030 18:29:35.867"></status>
</kw>
<msg timestamp="20201030 18:29:35.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042326486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042433458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.510" endtime="20201030 18:29:35.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042326486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042433458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.877" endtime="20201030 18:29:35.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.895" endtime="20201030 18:29:35.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.503" endtime="20201030 18:29:35.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.498" endtime="20201030 18:29:35.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.912" level="INFO">${RESULT} = [{'diff': 0.00010697199999999685}, {'diff': 0.00010722200000000404}, {'diff': 0.0001068889999999989}, {'diff': 0.00010750000000000343}, {'diff': 0.00010679200000000139}, {'diff': 0.0001068889999999989...</msg>
<status status="PASS" starttime="20201030 18:29:35.903" endtime="20201030 18:29:35.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.923" level="INFO">${ACCURACY} = {'diff': [0.00010697199999999685, 0.00010722200000000404, 0.0001068889999999989, 0.00010750000000000343, 0.00010679200000000139, 0.0001068889999999989, 0.00010668099999999736, 0.00010691699999999804, ...</msg>
<status status="PASS" starttime="20201030 18:29:35.914" endtime="20201030 18:29:35.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.934" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.932" endtime="20201030 18:29:35.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.940" level="INFO">VALUE: [0.00010697199999999685, 0.00010722200000000404, 0.0001068889999999989, 0.00010750000000000343, 0.00010679200000000139, 0.0001068889999999989, 0.00010668099999999736, 0.00010691699999999804, 0.0001072360000000036, 0.00010691599999999857, 0.0001066940000000044, 0.00010708300000000087, 0.00010699999999999599, 0.0001072360000000036, 0.0001070140000000025, 0.00010680600000000096, 0.00010668099999999736, 0.00010656999999999334, 0.00010680600000000096, 0.0001066810000000043, 0.00010744399999999821, 0.00010676300000000277, 0.00010745799999999778, 0.00010704200000000164, 0.00010679200000000139, 0.00010679200000000139, 0.00010680600000000096, 0.00010712499999999958, 0.00010723599999999667, 0.0001066810000000043, 0.0001068889999999989, 0.0001065690000000008, 0.00010711100000000001, 0.00010661099999999951, 0.00010668000000000483, 0.0001065690000000008, 0.00010716700000000523, 0.00010744500000000462, 0.00010690300000000541, 0.00010657000000000028, 0.00010679100000000191, 0.00010730500000000198, 0.00010686099999999976, 0.00010666600000000526, 0.00010736100000000026, 0.00010666700000000473, 0.00010694499999999718, 0.0001070140000000025, 0.00010658399999999985, 0.00010687500000000627]</msg>
<status status="PASS" starttime="20201030 18:29:35.937" endtime="20201030 18:29:35.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.925" endtime="20201030 18:29:35.943"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.952" endtime="20201030 18:29:35.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.948" endtime="20201030 18:29:35.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.945" endtime="20201030 18:29:35.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.435" endtime="20201030 18:29:35.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.434" endtime="20201030 18:29:35.978"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.001" endtime="20201030 18:29:36.024"></status>
</kw>
<msg timestamp="20201030 18:29:36.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.997" endtime="20201030 18:29:36.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.027" endtime="20201030 18:29:36.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.034" endtime="20201030 18:29:36.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.990" endtime="20201030 18:29:36.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.984" endtime="20201030 18:29:36.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.057" endtime="20201030 18:29:36.412"></status>
</kw>
<msg timestamp="20201030 18:29:36.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.054" endtime="20201030 18:29:36.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042091083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042199167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.421" endtime="20201030 18:29:36.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.440" endtime="20201030 18:29:36.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.047" endtime="20201030 18:29:36.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.042" endtime="20201030 18:29:36.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.457" level="INFO">${RESULT} = [{'diff': 0.00010808400000000135}, {'diff': 0.000107902}, {'diff': 0.00010844399999999921}, {'diff': 0.00010845800000000572}, {'diff': 0.00010769499999999793}, {'diff': 0.00010823599999999767}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:36.448" endtime="20201030 18:29:36.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.466" level="INFO">${ACCURACY} = {'diff': [0.00010808400000000135, 0.000107902, 0.00010844399999999921, 0.00010845800000000572, 0.00010769499999999793, 0.00010823599999999767, 0.00010845799999999878, 0.00010826399999999681, 0.0001082...</msg>
<status status="PASS" starttime="20201030 18:29:36.459" endtime="20201030 18:29:36.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.477" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.475" endtime="20201030 18:29:36.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.482" level="INFO">VALUE: [0.00010808400000000135, 0.000107902, 0.00010844399999999921, 0.00010845800000000572, 0.00010769499999999793, 0.00010823599999999767, 0.00010845799999999878, 0.00010826399999999681, 0.00010823599999999767, 0.00010848700000000433, 0.0001082360000000046, 0.00010801399999999656, 0.00010845800000000572, 0.00010779100000000291, 0.00010813900000000015, 0.00010845799999999878, 0.00010797199999999785, 0.0001075419999999952, 0.00010779200000000239, 0.00010819499999999843, 0.00010823599999999767, 0.00010822300000000451, 0.00010829100000000341, 0.0001080140000000035, 0.0001075690000000018, 0.00010829199999999595, 0.00010791699999999904, 0.00010762500000000008, 0.00010762500000000008, 0.00010824999999999724, 0.000108208999999998, 0.0001076940000000054, 0.00010841600000000007, 0.00010800000000000393, 0.00010812500000000058, 0.00010766699999999879, 0.00010779199999999545, 0.00010757000000000128, 0.00010777799999999588, 0.0001076810000000053, 0.0001083340000000016, 0.00010812500000000058, 0.00010779099999999597, 0.0001082219999999981, 0.0001083890000000004, 0.00010824999999999724, 0.00010811100000000101, 0.00010758400000000085, 0.0001078889999999999, 0.0001078889999999999]</msg>
<status status="PASS" starttime="20201030 18:29:36.479" endtime="20201030 18:29:36.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.468" endtime="20201030 18:29:36.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.495" endtime="20201030 18:29:36.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.491" endtime="20201030 18:29:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.488" endtime="20201030 18:29:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.980" endtime="20201030 18:29:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.979" endtime="20201030 18:29:36.520"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.543" endtime="20201030 18:29:36.568"></status>
</kw>
<msg timestamp="20201030 18:29:36.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.540" endtime="20201030 18:29:36.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.572" endtime="20201030 18:29:36.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.578" endtime="20201030 18:29:36.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.533" endtime="20201030 18:29:36.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.527" endtime="20201030 18:29:36.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.603" endtime="20201030 18:29:36.941"></status>
</kw>
<msg timestamp="20201030 18:29:36.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043335958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.599" endtime="20201030 18:29:36.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043335958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043444625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.945" endtime="20201030 18:29:36.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.953" endtime="20201030 18:29:36.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.592" endtime="20201030 18:29:36.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.587" endtime="20201030 18:29:36.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.963" level="INFO">${RESULT} = [{'diff': 0.00010866699999999979}, {'diff': 0.00010869399999999946}, {'diff': 0.00010877799999999688}, {'diff': 0.00010879200000000339}, {'diff': 0.00010868099999999936}, {'diff': 0.000108542000000003...</msg>
<status status="PASS" starttime="20201030 18:29:36.958" endtime="20201030 18:29:36.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.967" level="INFO">${ACCURACY} = {'diff': [0.00010866699999999979, 0.00010869399999999946, 0.00010877799999999688, 0.00010879200000000339, 0.00010868099999999936, 0.00010854200000000314, 0.00010933399999999566, 0.00010884700000000219...</msg>
<status status="PASS" starttime="20201030 18:29:36.964" endtime="20201030 18:29:36.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.972" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.971" endtime="20201030 18:29:36.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.975" level="INFO">VALUE: [0.00010866699999999979, 0.00010869399999999946, 0.00010877799999999688, 0.00010879200000000339, 0.00010868099999999936, 0.00010854200000000314, 0.00010933399999999566, 0.00010884700000000219, 0.00010945799999999978, 0.00010891700000000004, 0.00010866600000000032, 0.00010890300000000047, 0.00010887500000000133, 0.00010890300000000047, 0.0001085560000000027, 0.00010876399999999731, 0.00010868099999999936, 0.00010890300000000047, 0.00010867999999999989, 0.0001093890000000014, 0.00010879099999999697, 0.00010947199999999935, 0.00010891700000000004, 0.00010923599999999867, 0.00010912500000000158, 0.00010945899999999925, 0.00010848699999999739, 0.00010929199999999695, 0.00010879100000000391, 0.00010905500000000373, 0.00010945799999999978, 0.00010867999999999989, 0.00010891700000000004, 0.00010882000000000253, 0.0001093340000000026, 0.00010934800000000217, 0.00010877799999999688, 0.00010936100000000226, 0.00010879100000000391, 0.00010867999999999989, 0.0001085690000000028, 0.00010945799999999978, 0.00010934699999999575, 0.00010888899999999396, 0.00010858400000000185, 0.00010912499999999464, 0.00010937500000000183, 0.00010916700000000029, 0.00010856899999999586, 0.00010934699999999575]</msg>
<status status="PASS" starttime="20201030 18:29:36.973" endtime="20201030 18:29:36.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.968" endtime="20201030 18:29:36.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.981" endtime="20201030 18:29:37.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.979" endtime="20201030 18:29:37.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.977" endtime="20201030 18:29:37.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.522" endtime="20201030 18:29:37.002"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.521" endtime="20201030 18:29:37.002"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.013" endtime="20201030 18:29:37.033"></status>
</kw>
<msg timestamp="20201030 18:29:37.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.012" endtime="20201030 18:29:37.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.034" endtime="20201030 18:29:37.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.037" endtime="20201030 18:29:37.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.009" endtime="20201030 18:29:37.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.006" endtime="20201030 18:29:37.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.048" endtime="20201030 18:29:37.364"></status>
</kw>
<msg timestamp="20201030 18:29:37.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024940736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.047" endtime="20201030 18:29:37.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024940736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.373" endtime="20201030 18:29:37.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.391" endtime="20201030 18:29:37.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.044" endtime="20201030 18:29:37.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.041" endtime="20201030 18:29:37.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.409" level="INFO">${RESULT} = [{'diff': 0.00011019400000000096}, {'diff': 0.00010979199999999745}, {'diff': 0.00010954200000000067}, {'diff': 0.00011026400000000228}, {'diff': 0.00010973599999999917}, {'diff': 0.000110306000000000...</msg>
<status status="PASS" starttime="20201030 18:29:37.400" endtime="20201030 18:29:37.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.423" level="INFO">${ACCURACY} = {'diff': [0.00011019400000000096, 0.00010979199999999745, 0.00010954200000000067, 0.00011026400000000228, 0.00010973599999999917, 0.00011030600000000099, 0.00011001299999999908, 0.00011015299999999825...</msg>
<status status="PASS" starttime="20201030 18:29:37.411" endtime="20201030 18:29:37.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.434" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.432" endtime="20201030 18:29:37.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.439" level="INFO">VALUE: [0.00011019400000000096, 0.00010979199999999745, 0.00010954200000000067, 0.00011026400000000228, 0.00010973599999999917, 0.00011030600000000099, 0.00011001299999999908, 0.00011015299999999825, 0.00010967999999999742, 0.00010969400000000046, 0.00011045800000000078, 0.00010968100000000036, 0.00010968100000000036, 0.0001095699999999998, 0.00011026399999999881, 0.00010966699999999732, 0.00010970800000000003, 0.00011024999999999924, 0.00011034700000000022, 0.00010954200000000067, 0.00011002799999999813, 0.00010968100000000036, 0.000109902999999998, 0.00010969499999999993, 0.00010968100000000036, 0.00010979100000000144, 0.00010965299999999775, 0.00011033300000000065, 0.00010956900000000033, 0.00010981900000000058, 0.00010980600000000049, 0.00011001400000000203, 0.00010974999999999874, 0.00011023599999999967, 0.0001095699999999998, 0.0001099159999999981, 0.00010972200000000307, 0.00011047200000000035, 0.0001102220000000001, 0.00011009699999999997, 0.00010988899999999843, 0.00010991700000000104, 0.00010999999999999899, 0.0001097089999999995, 0.00010991699999999757, 0.0001095829999999999, 0.00011024999999999924, 0.0001100280000000016, 0.00010948600000000239, 0.00011027799999999838]</msg>
<status status="PASS" starttime="20201030 18:29:37.436" endtime="20201030 18:29:37.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.425" endtime="20201030 18:29:37.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.451" endtime="20201030 18:29:37.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.447" endtime="20201030 18:29:37.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.445" endtime="20201030 18:29:37.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.003" endtime="20201030 18:29:37.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.003" endtime="20201030 18:29:37.476"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.499" endtime="20201030 18:29:37.522"></status>
</kw>
<msg timestamp="20201030 18:29:37.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.495" endtime="20201030 18:29:37.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.525" endtime="20201030 18:29:37.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.532" endtime="20201030 18:29:37.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.488" endtime="20201030 18:29:37.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.483" endtime="20201030 18:29:37.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.555" endtime="20201030 18:29:37.889"></status>
</kw>
<msg timestamp="20201030 18:29:37.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.552" endtime="20201030 18:29:37.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041133556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041244181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.898" endtime="20201030 18:29:37.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.916" endtime="20201030 18:29:37.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.544" endtime="20201030 18:29:37.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.540" endtime="20201030 18:29:37.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.933" level="INFO">${RESULT} = [{'diff': 0.00011062499999999614}, {'diff': 0.0001114299999999957}, {'diff': 0.00011138899999999646}, {'diff': 0.00011115200000000325}, {'diff': 0.00011058299999999743}, {'diff': 0.0001112500000000002...</msg>
<status status="PASS" starttime="20201030 18:29:37.924" endtime="20201030 18:29:37.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.944" level="INFO">${ACCURACY} = {'diff': [0.00011062499999999614, 0.0001114299999999957, 0.00011138899999999646, 0.00011115200000000325, 0.00011058299999999743, 0.00011125000000000024, 0.00011111100000000401, 0.00011080600000000496,...</msg>
<status status="PASS" starttime="20201030 18:29:37.935" endtime="20201030 18:29:37.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.954" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.952" endtime="20201030 18:29:37.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.960" level="INFO">VALUE: [0.00011062499999999614, 0.0001114299999999957, 0.00011138899999999646, 0.00011115200000000325, 0.00011058299999999743, 0.00011125000000000024, 0.00011111100000000401, 0.00011080600000000496, 0.00011125000000000024, 0.00011080600000000496, 0.00011090299999999553, 0.00011079099999999897, 0.00011134699999999775, 0.00011123600000000067, 0.00011112499999999664, 0.00011058299999999743, 0.00011123600000000067, 0.00011087500000000333, 0.00011076399999999931, 0.00011090300000000247, 0.00011136100000000426, 0.00011090199999999606, 0.00011058299999999743, 0.00011088899999999596, 0.00011090300000000247, 0.00011101399999999956, 0.0001107090000000005, 0.00011123600000000067, 0.00011131999999999809, 0.00011068000000000189, 0.00011079099999999897, 0.00011099999999999999, 0.00011087499999999639, 0.00011134699999999775, 0.00011077799999999888, 0.00011131999999999809, 0.00011061100000000351, 0.00011101399999999956, 0.00011145900000000125, 0.00011063900000000265, 0.0001112769999999999, 0.00011094400000000171, 0.00011115300000000272, 0.00011133299999999818, 0.00011084700000000419, 0.00011095800000000128, 0.0001108890000000029, 0.00011144500000000168, 0.00011122300000000057, 0.00011134799999999723]</msg>
<status status="PASS" starttime="20201030 18:29:37.957" endtime="20201030 18:29:37.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.946" endtime="20201030 18:29:37.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.972" endtime="20201030 18:29:37.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.968" endtime="20201030 18:29:37.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.966" endtime="20201030 18:29:37.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.478" endtime="20201030 18:29:37.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.477" endtime="20201030 18:29:37.997"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.020" endtime="20201030 18:29:38.043"></status>
</kw>
<msg timestamp="20201030 18:29:38.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.016" endtime="20201030 18:29:38.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.046" endtime="20201030 18:29:38.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.052" endtime="20201030 18:29:38.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.009" endtime="20201030 18:29:38.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.003" endtime="20201030 18:29:38.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.075" endtime="20201030 18:29:38.410"></status>
</kw>
<msg timestamp="20201030 18:29:38.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041044472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.072" endtime="20201030 18:29:38.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041044472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041156208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.419" endtime="20201030 18:29:38.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.437" endtime="20201030 18:29:38.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.065" endtime="20201030 18:29:38.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.060" endtime="20201030 18:29:38.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.454" level="INFO">${RESULT} = [{'diff': 0.00011173600000000117}, {'diff': 0.00011156899999999886}, {'diff': 0.00011234699999999875}, {'diff': 0.0001123749999999979}, {'diff': 0.00011201400000000056}, {'diff': 0.0001121249999999976...</msg>
<status status="PASS" starttime="20201030 18:29:38.446" endtime="20201030 18:29:38.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.465" level="INFO">${ACCURACY} = {'diff': [0.00011173600000000117, 0.00011156899999999886, 0.00011234699999999875, 0.0001123749999999979, 0.00011201400000000056, 0.00011212499999999764, 0.0001119169999999961, 0.00011193000000000314, ...</msg>
<status status="PASS" starttime="20201030 18:29:38.456" endtime="20201030 18:29:38.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.480" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.477" endtime="20201030 18:29:38.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.487" level="INFO">VALUE: [0.00011173600000000117, 0.00011156899999999886, 0.00011234699999999875, 0.0001123749999999979, 0.00011201400000000056, 0.00011212499999999764, 0.0001119169999999961, 0.00011193000000000314, 0.00011180499999999954, 0.00011179099999999997, 0.0001118890000000039, 0.00011201400000000056, 0.00011201400000000056, 0.00011156999999999834, 0.00011190299999999653, 0.00011176400000000031, 0.00011152799999999963, 0.0001120549999999998, 0.00011188799999999749, 0.00011152700000000015, 0.00011190299999999653, 0.00011182000000000553, 0.00011202800000000013, 0.00011219500000000243, 0.00011184700000000519, 0.00011202800000000013, 0.00011234799999999823, 0.00011161099999999757, 0.0001118890000000039, 0.00011223600000000167, 0.0001120969999999985, 0.00011201400000000056, 0.00011187499999999739, 0.00011244500000000268, 0.0001120419999999997, 0.00011204100000000022, 0.00011250000000000149, 0.00011233299999999918, 0.00011190199999999706, 0.00011212500000000458, 0.0001115549999999993, 0.00011243099999999617, 0.00011156999999999834, 0.00011226400000000081, 0.00011158399999999791, 0.00011245900000000225, 0.00011177799999999988, 0.00011212500000000458, 0.00011233299999999918, 0.00011191700000000304]</msg>
<status status="PASS" starttime="20201030 18:29:38.482" endtime="20201030 18:29:38.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.468" endtime="20201030 18:29:38.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.502" endtime="20201030 18:29:38.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.497" endtime="20201030 18:29:38.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.493" endtime="20201030 18:29:38.527"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.999" endtime="20201030 18:29:38.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.998" endtime="20201030 18:29:38.528"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.550" endtime="20201030 18:29:38.576"></status>
</kw>
<msg timestamp="20201030 18:29:38.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.547" endtime="20201030 18:29:38.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.579" endtime="20201030 18:29:38.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.585" endtime="20201030 18:29:38.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.540" endtime="20201030 18:29:38.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.534" endtime="20201030 18:29:38.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.609" endtime="20201030 18:29:38.941"></status>
</kw>
<msg timestamp="20201030 18:29:38.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043134083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043247069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.605" endtime="20201030 18:29:38.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043134083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043247069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.950" endtime="20201030 18:29:38.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.968" endtime="20201030 18:29:38.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.598" endtime="20201030 18:29:38.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.593" endtime="20201030 18:29:38.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.985" level="INFO">${RESULT} = [{'diff': 0.00011298600000000242}, {'diff': 0.00011252700000000115}, {'diff': 0.000112902000000005}, {'diff': 0.00011322199999999616}, {'diff': 0.00011301400000000156}, {'diff': 0.00011295900000000275...</msg>
<status status="PASS" starttime="20201030 18:29:38.977" endtime="20201030 18:29:38.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.994" level="INFO">${ACCURACY} = {'diff': [0.00011298600000000242, 0.00011252700000000115, 0.000112902000000005, 0.00011322199999999616, 0.00011301400000000156, 0.00011295900000000275, 0.00011288899999999796, 0.00011301400000000156, ...</msg>
<status status="PASS" starttime="20201030 18:29:38.988" endtime="20201030 18:29:38.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.005" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.003" endtime="20201030 18:29:39.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.011" level="INFO">VALUE: [0.00011298600000000242, 0.00011252700000000115, 0.000112902000000005, 0.00011322199999999616, 0.00011301400000000156, 0.00011295900000000275, 0.00011288899999999796, 0.00011301400000000156, 0.00011334799999999923, 0.00011268099999999642, 0.00011325000000000224, 0.00011266600000000432, 0.00011288899999999796, 0.00011281900000000011, 0.00011350000000000249, 0.0001132499999999953, 0.00011312499999999864, 0.00011301400000000156, 0.00011269500000000293, 0.00011291599999999763, 0.00011318099999999692, 0.00011311099999999907, 0.0001129169999999971, 0.00011256899999999986, 0.00011344400000000421, 0.00011334699999999975, 0.00011326400000000181, 0.00011311100000000601, 0.00011345899999999631, 0.0001128890000000049, 0.0001127770000000014, 0.00011266599999999738, 0.00011323600000000267, 0.00011312499999999864, 0.0001132499999999953, 0.00011256999999999934, 0.00011290300000000447, 0.0001133619999999988, 0.00011256999999999934, 0.0001128749999999984, 0.00011318000000000439, 0.00011254099999999378, 0.00011334699999999975, 0.0001127220000000026, 0.00011288899999999796, 0.00011256999999999934, 0.00011279200000000045, 0.00011301400000000156, 0.00011345799999999684, 0.0001132220000000031]</msg>
<status status="PASS" starttime="20201030 18:29:39.008" endtime="20201030 18:29:39.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.996" endtime="20201030 18:29:39.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.025" endtime="20201030 18:29:39.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.019" endtime="20201030 18:29:39.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.016" endtime="20201030 18:29:39.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.530" endtime="20201030 18:29:39.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.529" endtime="20201030 18:29:39.049"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.072" endtime="20201030 18:29:39.095"></status>
</kw>
<msg timestamp="20201030 18:29:39.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.069" endtime="20201030 18:29:39.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.098" endtime="20201030 18:29:39.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.104" endtime="20201030 18:29:39.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.061" endtime="20201030 18:29:39.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.056" endtime="20201030 18:29:39.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.127" endtime="20201030 18:29:39.460"></status>
</kw>
<msg timestamp="20201030 18:29:39.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040995306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.124" endtime="20201030 18:29:39.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040881222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040995306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.470" endtime="20201030 18:29:39.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.488" endtime="20201030 18:29:39.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.117" endtime="20201030 18:29:39.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.112" endtime="20201030 18:29:39.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.505" level="INFO">${RESULT} = [{'diff': 0.00011408400000000041}, {'diff': 0.00011401299999999615}, {'diff': 0.00011423600000000367}, {'diff': 0.00011369399999999752}, {'diff': 0.00011400000000000299}, {'diff': 0.000114111000000000...</msg>
<status status="PASS" starttime="20201030 18:29:39.496" endtime="20201030 18:29:39.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.515" level="INFO">${ACCURACY} = {'diff': [0.00011408400000000041, 0.00011401299999999615, 0.00011423600000000367, 0.00011369399999999752, 0.00011400000000000299, 0.00011411100000000007, 0.00011401400000000256, 0.0001137499999999958,...</msg>
<status status="PASS" starttime="20201030 18:29:39.507" endtime="20201030 18:29:39.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.526" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.524" endtime="20201030 18:29:39.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.531" level="INFO">VALUE: [0.00011408400000000041, 0.00011401299999999615, 0.00011423600000000367, 0.00011369399999999752, 0.00011400000000000299, 0.00011411100000000007, 0.00011401400000000256, 0.0001137499999999958, 0.00011430500000000204, 0.00011357000000000034, 0.00011386100000000676, 0.00011448599999999698, 0.00011358300000000043, 0.00011356899999999392, 0.00011361099999999957, 0.00011377800000000188, 0.00011376400000000231, 0.00011357000000000034, 0.00011376399999999537, 0.00011359799999999948, 0.00011379099999999504, 0.0001135550000000013, 0.00011369399999999752, 0.00011380600000000102, 0.00011401399999999562, 0.00011412499999999964, 0.00011402800000000213, 0.00011443099999999817, 0.00011391599999999863, 0.000113597, 0.00011423599999999673, 0.0001135550000000013, 0.00011401399999999562, 0.00011376400000000231, 0.00011404199999999476, 0.00011433300000000118, 0.0001140970000000005, 0.00011352800000000163, 0.00011408300000000093, 0.00011427800000000238, 0.00011369399999999752, 0.00011401400000000256, 0.00011387500000000633, 0.00011366699999999785, 0.0001139169999999981, 0.00011377800000000188, 0.00011357000000000034, 0.00011391600000000557, 0.00011445799999999784, 0.00011356899999999392]</msg>
<status status="PASS" starttime="20201030 18:29:39.528" endtime="20201030 18:29:39.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.517" endtime="20201030 18:29:39.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.543" endtime="20201030 18:29:39.565"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.539" endtime="20201030 18:29:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.537" endtime="20201030 18:29:39.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.052" endtime="20201030 18:29:39.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.050" endtime="20201030 18:29:39.568"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.591" endtime="20201030 18:29:39.614"></status>
</kw>
<msg timestamp="20201030 18:29:39.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.587" endtime="20201030 18:29:39.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.617" endtime="20201030 18:29:39.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.623" endtime="20201030 18:29:39.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.580" endtime="20201030 18:29:39.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.574" endtime="20201030 18:29:39.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.647" endtime="20201030 18:29:39.984"></status>
</kw>
<msg timestamp="20201030 18:29:39.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041229472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.644" endtime="20201030 18:29:39.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041114167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041229472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.993" endtime="20201030 18:29:40.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.011" endtime="20201030 18:29:40.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.637" endtime="20201030 18:29:40.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.632" endtime="20201030 18:29:40.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.028" level="INFO">${RESULT} = [{'diff': 0.00011530500000000304}, {'diff': 0.000114597000000001}, {'diff': 0.00011488899999999996}, {'diff': 0.00011515299999999978}, {'diff': 0.00011457000000000134}, {'diff': 0.00011502799999999619...</msg>
<status status="PASS" starttime="20201030 18:29:40.019" endtime="20201030 18:29:40.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.039" level="INFO">${ACCURACY} = {'diff': [0.00011530500000000304, 0.000114597000000001, 0.00011488899999999996, 0.00011515299999999978, 0.00011457000000000134, 0.00011502799999999619, 0.00011533400000000166, 0.00011481899999999517, ...</msg>
<status status="PASS" starttime="20201030 18:29:40.030" endtime="20201030 18:29:40.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.049" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.047" endtime="20201030 18:29:40.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.055" level="INFO">VALUE: [0.00011530500000000304, 0.000114597000000001, 0.00011488899999999996, 0.00011515299999999978, 0.00011457000000000134, 0.00011502799999999619, 0.00011533400000000166, 0.00011481899999999517, 0.00011547199999999841, 0.00011549999999999755, 0.00011488899999999996, 0.0001154169999999996, 0.00011484700000000125, 0.00011480600000000202, 0.00011490299999999953, 0.0001145699999999944, 0.0001148750000000004, 0.00011451299999999665, 0.00011467999999999895, 0.00011462500000000014, 0.00011509699999999456, 0.00011479200000000245, 0.00011490299999999953, 0.0001150699999999949, 0.00011501400000000356, 0.00011462500000000014, 0.00011490200000000006, 0.000114597000000001, 0.0001145420000000022, 0.00011511100000000107, 0.00011476400000000331, 0.00011470899999999756, 0.00011466699999999885, 0.00011533400000000166, 0.00011490299999999953, 0.00011466699999999885, 0.00011479100000000297, 0.00011456900000000186, 0.00011506899999999542, 0.00011500000000000399, 0.00011549999999999755, 0.00011501399999999662, 0.00011477800000000288, 0.00011457000000000134, 0.00011513800000000074, 0.00011533300000000218, 0.00011456900000000186, 0.00011490299999999953, 0.00011490299999999953, 0.00011479200000000245]</msg>
<status status="PASS" starttime="20201030 18:29:40.052" endtime="20201030 18:29:40.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.040" endtime="20201030 18:29:40.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.067" endtime="20201030 18:29:40.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.063" endtime="20201030 18:29:40.090"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.060" endtime="20201030 18:29:40.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.570" endtime="20201030 18:29:40.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.569" endtime="20201030 18:29:40.092"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.114" endtime="20201030 18:29:40.137"></status>
</kw>
<msg timestamp="20201030 18:29:40.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.111" endtime="20201030 18:29:40.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.141" endtime="20201030 18:29:40.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.147" endtime="20201030 18:29:40.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.104" endtime="20201030 18:29:40.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.098" endtime="20201030 18:29:40.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.170" endtime="20201030 18:29:40.504"></status>
</kw>
<msg timestamp="20201030 18:29:40.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.167" endtime="20201030 18:29:40.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041017972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041134194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.513" endtime="20201030 18:29:40.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.532" endtime="20201030 18:29:40.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.160" endtime="20201030 18:29:40.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.155" endtime="20201030 18:29:40.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.549" level="INFO">${RESULT} = [{'diff': 0.00011622199999999916}, {'diff': 0.00011623600000000567}, {'diff': 0.00011645799999999984}, {'diff': 0.0001159170000000001}, {'diff': 0.00011579200000000345}, {'diff': 0.0001156249999999942...</msg>
<status status="PASS" starttime="20201030 18:29:40.540" endtime="20201030 18:29:40.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.558" level="INFO">${ACCURACY} = {'diff': [0.00011622199999999916, 0.00011623600000000567, 0.00011645799999999984, 0.0001159170000000001, 0.00011579200000000345, 0.0001156249999999942, 0.00011580600000000302, 0.00011557000000000234, ...</msg>
<status status="PASS" starttime="20201030 18:29:40.551" endtime="20201030 18:29:40.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.569" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.566" endtime="20201030 18:29:40.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.574" level="INFO">VALUE: [0.00011622199999999916, 0.00011623600000000567, 0.00011645799999999984, 0.0001159170000000001, 0.00011579200000000345, 0.0001156249999999942, 0.00011580600000000302, 0.00011557000000000234, 0.00011644499999999974, 0.00011570799999999909, 0.00011566600000000038, 0.00011601399999999762, 0.00011584799999999479, 0.00011588900000000096, 0.00011633299999999624, 0.00011557000000000234, 0.00011557000000000234, 0.00011566699999999985, 0.00011636099999999538, 0.00011623599999999873, 0.00011555499999999636, 0.00011579200000000345, 0.00011579200000000345, 0.00011601399999999762, 0.00011563900000000071, 0.00011563899999999377, 0.00011601400000000456, 0.00011588900000000096, 0.00011556900000000286, 0.00011561100000000157, 0.00011556900000000286, 0.00011556900000000286, 0.00011619400000000002, 0.00011590300000000053, 0.00011601400000000456, 0.00011590300000000053, 0.00011612500000000164, 0.00011634700000000275, 0.00011573599999999823, 0.00011599999999999805, 0.00011612500000000164, 0.00011625000000000524, 0.00011602800000000413, 0.00011590300000000053, 0.00011566699999999985, 0.00011579099999999704, 0.00011567999999999995, 0.00011645799999999984, 0.00011590300000000053, 0.00011590300000000053]</msg>
<status status="PASS" starttime="20201030 18:29:40.571" endtime="20201030 18:29:40.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.560" endtime="20201030 18:29:40.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.586" endtime="20201030 18:29:40.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.582" endtime="20201030 18:29:40.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.579" endtime="20201030 18:29:40.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.094" endtime="20201030 18:29:40.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.093" endtime="20201030 18:29:40.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.002" endtime="20201030 18:29:40.611"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.621" endtime="20201030 18:29:40.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.617" endtime="20201030 18:29:40.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.614" endtime="20201030 18:29:40.645"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:46.865" endtime="20201030 18:29:40.645" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:49.010" endtime="20201030 18:29:40.654"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.797" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:29:40.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:29:41.617" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:29:40.793" endtime="20201030 18:29:41.618"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.621" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:29:41.619" endtime="20201030 18:29:44.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.790" endtime="20201030 18:29:44.624"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.629" endtime="20201030 18:29:44.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.626" endtime="20201030 18:29:44.899"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.929" endtime="20201030 18:29:44.953"></status>
</kw>
<msg timestamp="20201030 18:29:44.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 18:29:44.926" endtime="20201030 18:29:44.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 18:29:44.956" endtime="20201030 18:29:44.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.968" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:44.963" endtime="20201030 18:29:44.969"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:44.919" endtime="20201030 18:29:44.971"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:44.914" endtime="20201030 18:29:44.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.911" endtime="20201030 18:29:44.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:44.984" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:44.982" endtime="20201030 18:29:44.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.975" endtime="20201030 18:29:44.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.909" endtime="20201030 18:29:44.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.907" endtime="20201030 18:29:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.987" endtime="20201030 18:29:44.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.904" endtime="20201030 18:29:44.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.995" endtime="20201030 18:29:44.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.901" endtime="20201030 18:29:45.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.787" endtime="20201030 18:29:45.002"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:45.016" endtime="20201030 18:29:45.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.012" endtime="20201030 18:29:45.040"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.075" endtime="20201030 18:29:45.095"></status>
</kw>
<msg timestamp="20201030 18:29:45.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.072" endtime="20201030 18:29:45.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.098" endtime="20201030 18:29:45.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:45.110" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:45.105" endtime="20201030 18:29:45.111"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:45.064" endtime="20201030 18:29:45.113"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:45.057" endtime="20201030 18:29:45.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.054" endtime="20201030 18:29:45.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:45.123" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:45.122" endtime="20201030 18:29:45.124"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.117" endtime="20201030 18:29:45.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.052" endtime="20201030 18:29:45.125"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.050" endtime="20201030 18:29:45.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.127" endtime="20201030 18:29:45.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.046" endtime="20201030 18:29:45.133"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.042" endtime="20201030 18:29:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.009" endtime="20201030 18:29:45.135"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:45.160" endtime="20201030 18:29:51.285"></status>
</kw>
<msg timestamp="20201030 18:29:51.287" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:45.154" endtime="20201030 18:29:51.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.293" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.289" endtime="20201030 18:29:51.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.296" endtime="20201030 18:29:51.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.146" endtime="20201030 18:29:51.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.140" endtime="20201030 18:29:51.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.310" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 18:29:51.306" endtime="20201030 18:29:51.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.321" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:51.319" endtime="20201030 18:29:51.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.326" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:51.323" endtime="20201030 18:29:51.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.312" endtime="20201030 18:29:51.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.338" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:51.336" endtime="20201030 18:29:51.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.343" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:51.341" endtime="20201030 18:29:51.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.330" endtime="20201030 18:29:51.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.356" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:51.353" endtime="20201030 18:29:51.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.361" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:29:51.358" endtime="20201030 18:29:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.347" endtime="20201030 18:29:51.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.381" endtime="20201030 18:29:51.759"></status>
</kw>
<msg timestamp="20201030 18:29:51.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135435472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235462903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.377" endtime="20201030 18:29:51.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135435472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235462903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.770" endtime="20201030 18:29:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.793" endtime="20201030 18:29:51.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.369" endtime="20201030 18:29:51.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.364" endtime="20201030 18:29:51.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:51.811" level="INFO">${FILTERED} = [{'diff': 0.100027431}, {'diff': 0.10000927800000001}, {'diff': 0.100010347}, {'diff': 0.10001033300000006}, {'diff': 0.10001031900000001}, {'diff': 0.10001033299999995}, {'diff': 0.10001033300000006}...</msg>
<status status="PASS" starttime="20201030 18:29:51.802" endtime="20201030 18:29:51.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.823" level="INFO">${RESULT} = {'diff': [0.100027431, 0.10000927800000001, 0.100010347, 0.10001033300000006, 0.10001031900000001, 0.10001033299999995, 0.10001033300000006, 0.10001036099999994, 0.10001029100000003, 0.100010388999999...</msg>
<status status="PASS" starttime="20201030 18:29:51.813" endtime="20201030 18:29:51.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.834" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:51.831" endtime="20201030 18:29:51.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.840" level="INFO">VALUE: [0.100027431, 0.10000927800000001, 0.100010347, 0.10001033300000006, 0.10001031900000001, 0.10001033299999995, 0.10001033300000006, 0.10001036099999994, 0.10001029100000003, 0.10001038899999992, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001080500000015, 0.10001033299999973, 0.100010347, 0.1000103189999999, 0.10001033300000017, 0.100010347, 0.1000103189999999, 0.10001033300000017, 0.10001027800000006, 0.10001027800000006, 0.1000102639999998, 0.10001029199999989, 0.10001027699999998, 0.10001030600000016, 0.1000102639999998, 0.10001030500000008, 0.10001027800000006, 0.10001033300000017, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001076399999942, 0.10001027800000006, 0.10001031999999999, 0.10001024999999952, 0.10001029200000033, 0.10001027800000006, 0.1000103189999999, 0.10001025000000041]</msg>
<status status="PASS" starttime="20201030 18:29:51.836" endtime="20201030 18:29:51.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.825" endtime="20201030 18:29:51.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.853" endtime="20201030 18:29:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.848" endtime="20201030 18:29:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.846" endtime="20201030 18:29:51.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:45.136" endtime="20201030 18:29:51.878"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:45.003" endtime="20201030 18:29:51.880" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.897" endtime="20201030 18:29:51.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.893" endtime="20201030 18:29:51.921"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.956" endtime="20201030 18:29:51.975"></status>
</kw>
<msg timestamp="20201030 18:29:51.977" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.953" endtime="20201030 18:29:51.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.979" endtime="20201030 18:29:51.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.991" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:51.986" endtime="20201030 18:29:51.991"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.945" endtime="20201030 18:29:51.993"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:51.938" endtime="20201030 18:29:51.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.935" endtime="20201030 18:29:51.996"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:52.006" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:52.002" endtime="20201030 18:29:52.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.998" endtime="20201030 18:29:52.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.933" endtime="20201030 18:29:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.932" endtime="20201030 18:29:52.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.010" endtime="20201030 18:29:52.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.927" endtime="20201030 18:29:52.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.923" endtime="20201030 18:29:52.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.890" endtime="20201030 18:29:52.018"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.040" endtime="20201030 18:29:58.165"></status>
</kw>
<msg timestamp="20201030 18:29:58.167" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.037" endtime="20201030 18:29:58.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.169" endtime="20201030 18:29:58.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.177" endtime="20201030 18:29:58.181"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.029" endtime="20201030 18:29:58.183"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.023" endtime="20201030 18:29:58.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.190" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 18:29:58.186" endtime="20201030 18:29:58.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.201" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:58.198" endtime="20201030 18:29:58.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.206" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:29:58.203" endtime="20201030 18:29:58.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.192" endtime="20201030 18:29:58.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.218" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:29:58.216" endtime="20201030 18:29:58.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.223" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:29:58.221" endtime="20201030 18:29:58.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.209" endtime="20201030 18:29:58.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.236" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:29:58.234" endtime="20201030 18:29:58.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.241" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:29:58.239" endtime="20201030 18:29:58.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.227" endtime="20201030 18:29:58.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.261" endtime="20201030 18:29:58.631"></status>
</kw>
<msg timestamp="20201030 18:29:58.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234745528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.258" endtime="20201030 18:29:58.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134659306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234745528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.640" endtime="20201030 18:29:58.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.658" endtime="20201030 18:29:58.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.250" endtime="20201030 18:29:58.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.245" endtime="20201030 18:29:58.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:29:58.675" level="INFO">${FILTERED} = [{'diff': 0.100086222}, {'diff': 0.09995500000000002}, {'diff': 0.100010306}, {'diff': 0.10001031999999999}, {'diff': 0.100010292}, {'diff': 0.10001030499999997}, {'diff': 0.10001031900000001}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:58.666" endtime="20201030 18:29:58.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.685" level="INFO">${RESULT} = {'diff': [0.100086222, 0.09995500000000002, 0.100010306, 0.10001031999999999, 0.100010292, 0.10001030499999997, 0.10001031900000001, 0.10001030600000005, 0.10001030600000016, 0.10001030499999986, 0.10...</msg>
<status status="PASS" starttime="20201030 18:29:58.677" endtime="20201030 18:29:58.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.695" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:29:58.693" endtime="20201030 18:29:58.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.700" level="INFO">VALUE: [0.100086222, 0.09995500000000002, 0.100010306, 0.10001031999999999, 0.100010292, 0.10001030499999997, 0.10001031900000001, 0.10001030600000005, 0.10001030600000016, 0.10001030499999986, 0.10001030500000008, 0.10001029199999989, 0.10001031999999999, 0.10001031999999999, 0.100010347, 0.10001033400000003, 0.10001033400000003, 0.10001031999999999, 0.100010347, 0.10001030600000016, 0.1000103189999999, 0.10001033300000017, 0.10001033300000017, 0.10001030499999963, 0.10001031900000035, 0.10001031999999999, 0.10001031999999999, 0.10001033400000026, 0.10001031999999999, 0.10001031999999999, 0.1000103189999999, 0.10001033300000017, 0.1000103189999999, 0.10001030500000008, 0.1000103189999999, 0.10001033300000017, 0.10001031999999999, 0.10001031999999999, 0.10001032000000043, 0.10001031999999999, 0.1000103189999999, 0.10001033300000017, 0.1000103189999999, 0.1000103189999999, 0.1000103189999999, 0.10001037499999921, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 18:29:58.698" endtime="20201030 18:29:58.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.687" endtime="20201030 18:29:58.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.720" endtime="20201030 18:29:58.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.715" endtime="20201030 18:29:58.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.712" endtime="20201030 18:29:58.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.019" endtime="20201030 18:29:58.745"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:51.884" endtime="20201030 18:29:58.747" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.764" endtime="20201030 18:29:58.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.760" endtime="20201030 18:29:58.788"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.825" endtime="20201030 18:29:58.845"></status>
</kw>
<msg timestamp="20201030 18:29:58.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.821" endtime="20201030 18:29:58.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.848" endtime="20201030 18:29:58.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.860" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:58.855" endtime="20201030 18:29:58.861"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.812" endtime="20201030 18:29:58.863"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:58.805" endtime="20201030 18:29:58.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.802" endtime="20201030 18:29:58.865"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:58.873" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:58.872" endtime="20201030 18:29:58.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.867" endtime="20201030 18:29:58.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.800" endtime="20201030 18:29:58.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.798" endtime="20201030 18:29:58.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.877" endtime="20201030 18:29:58.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.794" endtime="20201030 18:29:58.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.789" endtime="20201030 18:29:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.757" endtime="20201030 18:29:58.885"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.908" endtime="20201030 18:30:05.033"></status>
</kw>
<msg timestamp="20201030 18:30:05.034" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.904" endtime="20201030 18:30:05.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.041" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.037" endtime="20201030 18:30:05.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.044" endtime="20201030 18:30:05.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.896" endtime="20201030 18:30:05.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.890" endtime="20201030 18:30:05.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.058" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 18:30:05.053" endtime="20201030 18:30:05.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.069" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:05.066" endtime="20201030 18:30:05.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.073" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:05.071" endtime="20201030 18:30:05.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.059" endtime="20201030 18:30:05.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.086" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:05.084" endtime="20201030 18:30:05.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.091" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:05.089" endtime="20201030 18:30:05.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.077" endtime="20201030 18:30:05.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.104" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:05.101" endtime="20201030 18:30:05.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.109" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:30:05.106" endtime="20201030 18:30:05.109"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.095" endtime="20201030 18:30:05.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.131" endtime="20201030 18:30:05.512"></status>
</kw>
<msg timestamp="20201030 18:30:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135359611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235510486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.127" endtime="20201030 18:30:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135359611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235510486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.522" endtime="20201030 18:30:05.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.546" endtime="20201030 18:30:05.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.118" endtime="20201030 18:30:05.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.112" endtime="20201030 18:30:05.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:05.564" level="INFO">${FILTERED} = [{'diff': 0.100150875}, {'diff': 0.10004938899999999}, {'diff': 0.09985516699999997}, {'diff': 0.10001034700000005}, {'diff': 0.10001033299999995}, {'diff': 0.100010347}, {'diff': 0.10001034799999997}...</msg>
<status status="PASS" starttime="20201030 18:30:05.555" endtime="20201030 18:30:05.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.575" level="INFO">${RESULT} = {'diff': [0.100150875, 0.10004938899999999, 0.09985516699999997, 0.10001034700000005, 0.10001033299999995, 0.100010347, 0.10001034799999997, 0.10001033400000003, 0.10001036099999994, 0.100010332999999...</msg>
<status status="PASS" starttime="20201030 18:30:05.566" endtime="20201030 18:30:05.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.587" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:05.584" endtime="20201030 18:30:05.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.594" level="INFO">VALUE: [0.100150875, 0.10004938899999999, 0.09985516699999997, 0.10001034700000005, 0.10001033299999995, 0.100010347, 0.10001034799999997, 0.10001033400000003, 0.10001036099999994, 0.10001033299999995, 0.10001033300000017, 0.100010347, 0.10001027799999984, 0.10001029199999989, 0.10001027800000006, 0.10001030600000016, 0.10001029200000011, 0.1000103189999999, 0.10001027799999984, 0.10001029199999989, 0.10001030500000008, 0.10001029199999989, 0.10001031999999999, 0.10001027800000006, 0.10001030500000008, 0.10001029199999989, 0.10001029199999989, 0.1000102909999998, 0.10001031900000035, 0.10001027799999962, 0.10001031900000035, 0.10001027699999998, 0.100010347, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 18:30:05.590" endtime="20201030 18:30:05.596"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.577" endtime="20201030 18:30:05.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.610" endtime="20201030 18:30:05.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.605" endtime="20201030 18:30:05.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.601" endtime="20201030 18:30:05.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.886" endtime="20201030 18:30:05.635"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:58.751" endtime="20201030 18:30:05.636" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.652" endtime="20201030 18:30:05.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.649" endtime="20201030 18:30:05.676"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.710" endtime="20201030 18:30:05.729"></status>
</kw>
<msg timestamp="20201030 18:30:05.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.707" endtime="20201030 18:30:05.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.737" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.732" endtime="20201030 18:30:05.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.743" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:05.739" endtime="20201030 18:30:05.744"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:05.700" endtime="20201030 18:30:05.746"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:05.693" endtime="20201030 18:30:05.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.690" endtime="20201030 18:30:05.748"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:05.756" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:05.754" endtime="20201030 18:30:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.750" endtime="20201030 18:30:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.689" endtime="20201030 18:30:05.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.687" endtime="20201030 18:30:05.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.759" endtime="20201030 18:30:05.763"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.683" endtime="20201030 18:30:05.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.677" endtime="20201030 18:30:05.766"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.646" endtime="20201030 18:30:05.766"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.787" endtime="20201030 18:30:11.910"></status>
</kw>
<msg timestamp="20201030 18:30:11.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.784" endtime="20201030 18:30:11.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.918" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.914" endtime="20201030 18:30:11.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.921" endtime="20201030 18:30:11.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.777" endtime="20201030 18:30:11.926"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.771" endtime="20201030 18:30:11.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.933" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 18:30:11.929" endtime="20201030 18:30:11.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.943" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:11.941" endtime="20201030 18:30:11.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.950" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:11.946" endtime="20201030 18:30:11.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.935" endtime="20201030 18:30:11.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.962" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:11.959" endtime="20201030 18:30:11.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.966" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:11.964" endtime="20201030 18:30:11.967"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.953" endtime="20201030 18:30:11.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.978" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:11.976" endtime="20201030 18:30:11.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.982" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:30:11.980" endtime="20201030 18:30:11.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.970" endtime="20201030 18:30:11.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.002" endtime="20201030 18:30:12.350"></status>
</kw>
<msg timestamp="20201030 18:30:12.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126367292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226631444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.998" endtime="20201030 18:30:12.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126367292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.226631444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.359" endtime="20201030 18:30:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.377" endtime="20201030 18:30:12.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.990" endtime="20201030 18:30:12.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.986" endtime="20201030 18:30:12.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:12.394" level="INFO">${FILTERED} = [{'diff': 0.100264152}, {'diff': 0.100053695}, {'diff': 0.099741472}, {'diff': 0.10000930600000002}, {'diff': 0.1000103200000001}, {'diff': 0.1000103200000001}, {'diff': 0.100010347}, {'diff': 0.10001...</msg>
<status status="PASS" starttime="20201030 18:30:12.385" endtime="20201030 18:30:12.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.405" level="INFO">${RESULT} = {'diff': [0.100264152, 0.100053695, 0.099741472, 0.10000930600000002, 0.1000103200000001, 0.1000103200000001, 0.100010347, 0.10001030600000005, 0.10001031900000001, 0.10001030500000008, 0.100010332999...</msg>
<status status="PASS" starttime="20201030 18:30:12.396" endtime="20201030 18:30:12.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.415" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:12.413" endtime="20201030 18:30:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.420" level="INFO">VALUE: [0.100264152, 0.100053695, 0.099741472, 0.10000930600000002, 0.1000103200000001, 0.1000103200000001, 0.100010347, 0.10001030600000005, 0.10001031900000001, 0.10001030500000008, 0.10001033299999995, 0.10001030599999994, 0.10001031999999999, 0.10001031999999999, 0.10001031999999999, 0.1000103189999999, 0.10001033299999995, 0.10001030500000008, 0.10001026400000024, 0.1000102639999998, 0.10001029199999989, 0.1000102359999997, 0.10001027800000006, 0.10001029100000025, 0.1000102639999998, 0.10001024999999997, 0.10001030600000016, 0.10001023600000014, 0.10001029199999989, 0.10001025000000041, 0.10001029199999989, 0.10001024999999997, 0.10001027800000006, 0.1000102909999998, 0.10001024999999997, 0.10001026300000015, 0.10001027800000006, 0.10001027699999998, 0.1000102639999998, 0.10001026299999971, 0.10001027800000006, 0.10001030499999963, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201030 18:30:12.417" endtime="20201030 18:30:12.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.407" endtime="20201030 18:30:12.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.432" endtime="20201030 18:30:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.428" endtime="20201030 18:30:12.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.426" endtime="20201030 18:30:12.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.767" endtime="20201030 18:30:12.457"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:05.641" endtime="20201030 18:30:12.459" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.474" endtime="20201030 18:30:12.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.471" endtime="20201030 18:30:12.498"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.530" endtime="20201030 18:30:12.548"></status>
</kw>
<msg timestamp="20201030 18:30:12.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.527" endtime="20201030 18:30:12.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.552" endtime="20201030 18:30:12.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.563" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:12.558" endtime="20201030 18:30:12.563"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:12.520" endtime="20201030 18:30:12.565"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:12.514" endtime="20201030 18:30:12.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.511" endtime="20201030 18:30:12.567"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:12.575" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:12.574" endtime="20201030 18:30:12.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.569" endtime="20201030 18:30:12.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.509" endtime="20201030 18:30:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.508" endtime="20201030 18:30:12.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.578" endtime="20201030 18:30:12.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.503" endtime="20201030 18:30:12.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.499" endtime="20201030 18:30:12.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.468" endtime="20201030 18:30:12.586"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.610" endtime="20201030 18:30:18.734"></status>
</kw>
<msg timestamp="20201030 18:30:18.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.606" endtime="20201030 18:30:18.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.741" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.737" endtime="20201030 18:30:18.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.744" endtime="20201030 18:30:18.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.598" endtime="20201030 18:30:18.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.591" endtime="20201030 18:30:18.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.757" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 18:30:18.753" endtime="20201030 18:30:18.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.768" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:18.764" endtime="20201030 18:30:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.772" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:18.770" endtime="20201030 18:30:18.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.759" endtime="20201030 18:30:18.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.784" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:18.782" endtime="20201030 18:30:18.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.789" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:18.786" endtime="20201030 18:30:18.790"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.776" endtime="20201030 18:30:18.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.801" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:18.799" endtime="20201030 18:30:18.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.806" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:30:18.803" endtime="20201030 18:30:18.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.793" endtime="20201030 18:30:18.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.824" endtime="20201030 18:30:19.177"></status>
</kw>
<msg timestamp="20201030 18:30:19.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126709083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227115736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.821" endtime="20201030 18:30:19.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126709083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227115736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.186" endtime="20201030 18:30:19.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.204" endtime="20201030 18:30:19.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.814" endtime="20201030 18:30:19.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.809" endtime="20201030 18:30:19.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:19.221" level="INFO">${FILTERED} = [{'diff': 0.10040665300000001}, {'diff': 0.10006399999999999}, {'diff': 0.09959273699999999}, {'diff': 0.10001036099999994}, {'diff': 0.10001033300000006}, {'diff': 0.100010292}, {'diff': 0.100010292}...</msg>
<status status="PASS" starttime="20201030 18:30:19.212" endtime="20201030 18:30:19.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.231" level="INFO">${RESULT} = {'diff': [0.10040665300000001, 0.10006399999999999, 0.09959273699999999, 0.10001036099999994, 0.10001033300000006, 0.100010292, 0.100010292, 0.10001031900000001, 0.10001030500000008, 0.100010305999999...</msg>
<status status="PASS" starttime="20201030 18:30:19.223" endtime="20201030 18:30:19.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.241" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:19.239" endtime="20201030 18:30:19.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.247" level="INFO">VALUE: [0.10040665300000001, 0.10006399999999999, 0.09959273699999999, 0.10001036099999994, 0.10001033300000006, 0.100010292, 0.100010292, 0.10001031900000001, 0.10001030500000008, 0.10001030599999994, 0.10001030600000016, 0.1000103750000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 0.10001081899999997, 0.10001030500000008, 0.1000103189999999, 0.10001031999999999, 0.10001029199999945, 0.1000103189999999, 0.1000103189999999, 0.10001030500000052, 0.10001030599999972, 0.10001030599999972, 0.10001031999999999, 0.10001034700000044, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 18:30:19.244" endtime="20201030 18:30:19.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.233" endtime="20201030 18:30:19.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.259" endtime="20201030 18:30:19.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.255" endtime="20201030 18:30:19.282"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.252" endtime="20201030 18:30:19.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.587" endtime="20201030 18:30:19.284"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:12.463" endtime="20201030 18:30:19.285" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.301" endtime="20201030 18:30:19.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.298" endtime="20201030 18:30:19.325"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.358" endtime="20201030 18:30:19.378"></status>
</kw>
<msg timestamp="20201030 18:30:19.379" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.354" endtime="20201030 18:30:19.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.382" endtime="20201030 18:30:19.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.392" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:19.388" endtime="20201030 18:30:19.393"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:19.347" endtime="20201030 18:30:19.395"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:19.341" endtime="20201030 18:30:19.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.338" endtime="20201030 18:30:19.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:19.405" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:19.404" endtime="20201030 18:30:19.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.399" endtime="20201030 18:30:19.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.336" endtime="20201030 18:30:19.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.335" endtime="20201030 18:30:19.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.409" endtime="20201030 18:30:19.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.331" endtime="20201030 18:30:19.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.326" endtime="20201030 18:30:19.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.295" endtime="20201030 18:30:19.416"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.436" endtime="20201030 18:30:25.564"></status>
</kw>
<msg timestamp="20201030 18:30:25.565" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.433" endtime="20201030 18:30:25.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.568" endtime="20201030 18:30:25.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.577" endtime="20201030 18:30:25.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.426" endtime="20201030 18:30:25.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.421" endtime="20201030 18:30:25.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.595" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 18:30:25.589" endtime="20201030 18:30:25.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.608" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:25.606" endtime="20201030 18:30:25.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.614" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:25.612" endtime="20201030 18:30:25.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.597" endtime="20201030 18:30:25.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.626" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:25.624" endtime="20201030 18:30:25.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.631" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:25.629" endtime="20201030 18:30:25.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.618" endtime="20201030 18:30:25.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.643" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:25.641" endtime="20201030 18:30:25.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.648" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:30:25.645" endtime="20201030 18:30:25.648"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.635" endtime="20201030 18:30:25.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.666" endtime="20201030 18:30:26.013"></status>
</kw>
<msg timestamp="20201030 18:30:26.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126554958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227142431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.663" endtime="20201030 18:30:26.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.126554958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227142431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.022" endtime="20201030 18:30:26.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.039" endtime="20201030 18:30:26.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.656" endtime="20201030 18:30:26.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.651" endtime="20201030 18:30:26.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:26.057" level="INFO">${FILTERED} = [{'diff': 0.10058747300000001}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:26.048" endtime="20201030 18:30:26.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.066" level="INFO">${RESULT} = {'diff': [0.10058747300000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999...</msg>
<status status="PASS" starttime="20201030 18:30:26.059" endtime="20201030 18:30:26.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.076" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:26.073" endtime="20201030 18:30:26.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.081" level="INFO">VALUE: [0.10058747300000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001073599999977, 0.10001027799999918, 0.10001027800000006, 0.1000103189999999, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 18:30:26.078" endtime="20201030 18:30:26.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.067" endtime="20201030 18:30:26.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.093" endtime="20201030 18:30:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.089" endtime="20201030 18:30:26.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.087" endtime="20201030 18:30:26.117"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.417" endtime="20201030 18:30:26.118"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:19.290" endtime="20201030 18:30:26.119" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:29:40.677" endtime="20201030 18:30:26.136"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:26:38.357" endtime="20201030 18:30:26.214"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
