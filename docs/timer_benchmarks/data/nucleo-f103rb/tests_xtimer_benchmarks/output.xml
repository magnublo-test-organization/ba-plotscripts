<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 12:42:26.600" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:27.924" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:27.940" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:28.786" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:27.919" endtime="20201029 12:42:28.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:31.793" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:42:28.789" endtime="20201029 12:42:31.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:27.916" endtime="20201029 12:42:31.796"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:31.801" endtime="20201029 12:42:32.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:31.798" endtime="20201029 12:42:32.141"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.172" endtime="20201029 12:42:32.195"></status>
</kw>
<msg timestamp="20201029 12:42:32.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 12:42:32.169" endtime="20201029 12:42:32.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 12:42:32.198" endtime="20201029 12:42:32.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:32.205" endtime="20201029 12:42:32.210"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:32.162" endtime="20201029 12:42:32.212"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:32.156" endtime="20201029 12:42:32.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.153" endtime="20201029 12:42:32.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:32.222" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:32.221" endtime="20201029 12:42:32.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.216" endtime="20201029 12:42:32.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.151" endtime="20201029 12:42:32.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.149" endtime="20201029 12:42:32.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.226" endtime="20201029 12:42:32.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.146" endtime="20201029 12:42:32.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.232" endtime="20201029 12:42:32.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.142" endtime="20201029 12:42:32.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:27.912" endtime="20201029 12:42:32.238"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:32.253" endtime="20201029 12:42:32.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.249" endtime="20201029 12:42:32.277"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.312" endtime="20201029 12:42:32.330"></status>
</kw>
<msg timestamp="20201029 12:42:32.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:32.308" endtime="20201029 12:42:32.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:32.333" endtime="20201029 12:42:32.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.344" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:32.340" endtime="20201029 12:42:32.345"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:32.301" endtime="20201029 12:42:32.347"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:32.295" endtime="20201029 12:42:32.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.290" endtime="20201029 12:42:32.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:32.357" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:32.355" endtime="20201029 12:42:32.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.351" endtime="20201029 12:42:32.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.288" endtime="20201029 12:42:32.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.286" endtime="20201029 12:42:32.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.360" endtime="20201029 12:42:32.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.282" endtime="20201029 12:42:32.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.278" endtime="20201029 12:42:32.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.246" endtime="20201029 12:42:32.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.384" endtime="20201029 12:42:32.399"></status>
</kw>
<msg timestamp="20201029 12:42:32.400" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:32.381" endtime="20201029 12:42:32.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.406" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:32.402" endtime="20201029 12:42:32.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:32.408" endtime="20201029 12:42:32.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.374" endtime="20201029 12:42:32.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.369" endtime="20201029 12:42:32.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.425" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:42:32.422" endtime="20201029 12:42:32.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.429" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:42:32.427" endtime="20201029 12:42:32.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.416" endtime="20201029 12:42:32.431"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:32.239" endtime="20201029 12:42:32.433" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:26.877" endtime="20201029 12:42:32.439"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:42:32.572" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:42:32.589" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:42:33.439" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:42:32.568" endtime="20201029 12:42:33.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.447" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:42:33.443" endtime="20201029 12:42:36.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.566" endtime="20201029 12:42:36.450"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:36.455" endtime="20201029 12:42:36.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.452" endtime="20201029 12:42:36.802"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.832" endtime="20201029 12:42:36.855"></status>
</kw>
<msg timestamp="20201029 12:42:36.856" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.829" endtime="20201029 12:42:36.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:36.858" endtime="20201029 12:42:36.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:36.869" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:36.865" endtime="20201029 12:42:36.870"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:36.822" endtime="20201029 12:42:36.872"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:36.817" endtime="20201029 12:42:36.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.814" endtime="20201029 12:42:36.875"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:36.882" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:36.881" endtime="20201029 12:42:36.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.876" endtime="20201029 12:42:36.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.812" endtime="20201029 12:42:36.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.810" endtime="20201029 12:42:36.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.886" endtime="20201029 12:42:36.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.807" endtime="20201029 12:42:36.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:36.893" endtime="20201029 12:42:36.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.803" endtime="20201029 12:42:36.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:32.563" endtime="20201029 12:42:36.899"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:36.914" endtime="20201029 12:42:36.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.910" endtime="20201029 12:42:36.937"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:37.037" endtime="20201029 12:42:39.726"></status>
</kw>
<msg timestamp="20201029 12:42:39.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:37.033" endtime="20201029 12:42:39.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.729" endtime="20201029 12:42:39.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.741" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:39.736" endtime="20201029 12:42:39.741"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:37.025" endtime="20201029 12:42:39.743"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:36.954" endtime="20201029 12:42:39.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.952" endtime="20201029 12:42:39.746"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:39.754" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:39.753" endtime="20201029 12:42:39.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.748" endtime="20201029 12:42:39.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.950" endtime="20201029 12:42:39.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.948" endtime="20201029 12:42:39.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.758" endtime="20201029 12:42:39.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.944" endtime="20201029 12:42:39.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.939" endtime="20201029 12:42:39.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:36.907" endtime="20201029 12:42:39.766"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.789" endtime="20201029 12:42:39.803"></status>
</kw>
<msg timestamp="20201029 12:42:39.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.786" endtime="20201029 12:42:39.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:39.810" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:39.806" endtime="20201029 12:42:39.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.813" endtime="20201029 12:42:39.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.778" endtime="20201029 12:42:39.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.773" endtime="20201029 12:42:39.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:39.855" endtime="20201029 12:42:40.249"></status>
</kw>
<msg timestamp="20201029 12:42:40.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866662694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:39.849" endtime="20201029 12:42:40.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866662694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.256" endtime="20201029 12:42:40.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.270" endtime="20201029 12:42:40.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.832" endtime="20201029 12:42:40.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.824" endtime="20201029 12:42:40.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:40.287" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.889000000207204e-06}, {'diff': 1.0000000000065512e-05}, {'diff': 1.5889000000157694e-05}, {'diff': 1.719499999985885e-05}, {'diff': 1.4430000000231757e-05}, {'diff': 1.3778000...</msg>
<status status="PASS" starttime="20201029 12:42:40.279" endtime="20201029 12:42:40.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:40.295" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.889000000207204e-06, 1.0000000000065512e-05, 1.5889000000157694e-05, 1.719499999985885e-05, 1.4430000000231757e-05, 1.377800000001983e-05, 1.1138999999715793e-05, 1.188800000040402e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:40.290" endtime="20201029 12:42:40.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.306" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:40.304" endtime="20201029 12:42:40.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.312" level="INFO">VALUE: [0, 9.889000000207204e-06, 1.0000000000065512e-05, 1.5889000000157694e-05, 1.719499999985885e-05, 1.4430000000231757e-05, 1.377800000001983e-05, 1.1138999999715793e-05, 1.188800000040402e-05, 1.665199999978384e-05, 1.1333999999862954e-05, 1.6000000000016e-05, 1.0485999999865214e-05, 1.5999999999571912e-05, 6.34799999987834e-06, 1.387500000005204e-05, 1.6236000000002804e-05, 1.2361000000016276e-05, 1.0778000000044585e-05, 1.700000000015578e-05, 1.2110999999759287e-05, 8.665999999823981e-06, 1.655500000019572e-05, 8.110999999644264e-06, 1.0667000000186277e-05]</msg>
<status status="PASS" starttime="20201029 12:42:40.309" endtime="20201029 12:42:40.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.297" endtime="20201029 12:42:40.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.769" endtime="20201029 12:42:40.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.768" endtime="20201029 12:42:40.316"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.339" endtime="20201029 12:42:40.353"></status>
</kw>
<msg timestamp="20201029 12:42:40.355" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.335" endtime="20201029 12:42:40.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.362" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.357" endtime="20201029 12:42:40.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.364" endtime="20201029 12:42:40.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.327" endtime="20201029 12:42:40.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.322" endtime="20201029 12:42:40.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.391" endtime="20201029 12:42:40.756"></status>
</kw>
<msg timestamp="20201029 12:42:40.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866662694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.387" endtime="20201029 12:42:40.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866649833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866662694, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:40.766" endtime="20201029 12:42:40.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.785" endtime="20201029 12:42:40.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.379" endtime="20201029 12:42:40.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.374" endtime="20201029 12:42:40.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:40.802" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.889000000207204e-06}, {'diff': 1.0000000000065512e-05}, {'diff': 1.5889000000157694e-05}, {'diff': 1.719499999985885e-05}, {'diff': 1.4430000000231757e-05}, {'diff': 1.3778000...</msg>
<status status="PASS" starttime="20201029 12:42:40.793" endtime="20201029 12:42:40.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:40.811" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.889000000207204e-06, 1.0000000000065512e-05, 1.5889000000157694e-05, 1.719499999985885e-05, 1.4430000000231757e-05, 1.377800000001983e-05, 1.1138999999715793e-05, 1.188800000040402e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:40.804" endtime="20201029 12:42:40.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.962" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:40.959" endtime="20201029 12:42:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:40.967" level="INFO">VALUE: [0, 9.889000000207204e-06, 1.0000000000065512e-05, 1.5889000000157694e-05, 1.719499999985885e-05, 1.4430000000231757e-05, 1.377800000001983e-05, 1.1138999999715793e-05, 1.188800000040402e-05, 1.665199999978384e-05, 1.1333999999862954e-05, 1.6000000000016e-05, 1.0485999999865214e-05, 1.5999999999571912e-05, 6.34799999987834e-06, 1.387500000005204e-05, 1.6236000000002804e-05, 1.2361000000016276e-05, 1.0778000000044585e-05, 1.700000000015578e-05, 1.2110999999759287e-05, 8.665999999823981e-06, 1.655500000019572e-05, 8.110999999644264e-06, 1.0667000000186277e-05, 0.540753584, 1.2473000000401413e-05, 1.020799999995603e-05, 1.3833000000129658e-05, 1.1665999999799226e-05, 1.4790999999902965e-05, 1.5834000000047865e-05, 1.377800000001983e-05, 1.511200000026136e-05, 1.0888999999902893e-05, 1.1999999999900979e-05, 1.447200000015414e-05, 1.2111000000203376e-05, 9.917000000303489e-06, 1.688900000029747e-05, 1.0014000000335699e-05, 9.888999999763115e-06, 1.6986999999968333e-05, 1.590299999998379e-05, 8.638999999810437e-06, 9.152999999706424e-06, 6.110999999808797e-06, 1.4514000000076521e-05, 1.4555999999998903e-05, 1.1568999999767016e-05]</msg>
<status status="PASS" starttime="20201029 12:42:40.964" endtime="20201029 12:42:40.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.813" endtime="20201029 12:42:40.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.318" endtime="20201029 12:42:40.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.317" endtime="20201029 12:42:40.971"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:40.992" endtime="20201029 12:42:41.006"></status>
</kw>
<msg timestamp="20201029 12:42:41.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:40.989" endtime="20201029 12:42:41.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.014" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.010" endtime="20201029 12:42:41.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.016" endtime="20201029 12:42:41.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.981" endtime="20201029 12:42:41.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.977" endtime="20201029 12:42:41.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.041" endtime="20201029 12:42:41.420"></status>
</kw>
<msg timestamp="20201029 12:42:41.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866920833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866935847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:41.037" endtime="20201029 12:42:41.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.866920833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.866935847, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:41.432" endtime="20201029 12:42:41.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.456" endtime="20201029 12:42:41.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.030" endtime="20201029 12:42:41.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.024" endtime="20201029 12:42:41.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:41.476" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0485999999865214e-05}, {'diff': 1.5999999999571912e-05}, {'diff': 6.34799999987834e-06}, {'diff': 1.387500000005204e-05}, {'diff': 1.6236000000002804e-05}, {'diff': 1.23610000...</msg>
<status status="PASS" starttime="20201029 12:42:41.465" endtime="20201029 12:42:41.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:41.488" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0485999999865214e-05, 1.5999999999571912e-05, 6.34799999987834e-06, 1.387500000005204e-05, 1.6236000000002804e-05, 1.2361000000016276e-05, 1.0778000000044585e-05, 1.700000000015578e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:41.478" endtime="20201029 12:42:41.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.500" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:41.497" endtime="20201029 12:42:41.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.506" level="INFO">VALUE: [0, 1.0485999999865214e-05, 1.5999999999571912e-05, 6.34799999987834e-06, 1.387500000005204e-05, 1.6236000000002804e-05, 1.2361000000016276e-05, 1.0778000000044585e-05, 1.700000000015578e-05, 1.2110999999759287e-05, 8.665999999823981e-06, 1.655500000019572e-05, 8.110999999644264e-06, 1.0667000000186277e-05, 0.540753584, 1.2473000000401413e-05, 1.020799999995603e-05, 1.3833000000129658e-05, 1.1665999999799226e-05, 1.4790999999902965e-05, 1.5834000000047865e-05, 1.377800000001983e-05, 1.511200000026136e-05, 1.0888999999902893e-05, 1.1999999999900979e-05, 1.447200000015414e-05, 1.2111000000203376e-05, 9.917000000303489e-06, 1.688900000029747e-05, 1.0014000000335699e-05, 9.888999999763115e-06, 1.6986999999968333e-05, 1.590299999998379e-05, 8.638999999810437e-06, 9.152999999706424e-06, 6.110999999808797e-06, 1.4514000000076521e-05, 1.4555999999998903e-05, 1.1568999999767016e-05, 0.6426693750000001, 1.2555999999719347e-05, 6.083999999795253e-06, 1.4999999999432134e-05, 9.333000000388836e-06, 1.1875000000216573e-05, 9.041000000209465e-06, 1.144500000016535e-05, 1.4430000000231757e-05, 1.769400000029009e-05, 6.444000000271899e-06, 1.3124999999725162e-05, 8.999999999481645e-06, 7.680999999593041e-06, 1.0237000000579144e-05, 1.2777999999435963e-05, 1.4554999999916163e-05, 1.6444999999976062e-05, 1.7222999999511046e-05, 8.651999999997884e-06, 1.020799999995603e-05, 1.322200000064555e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.32000000020139e-06]</msg>
<status status="PASS" starttime="20201029 12:42:41.502" endtime="20201029 12:42:41.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.490" endtime="20201029 12:42:41.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.973" endtime="20201029 12:42:41.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:40.972" endtime="20201029 12:42:41.510"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.533" endtime="20201029 12:42:41.547"></status>
</kw>
<msg timestamp="20201029 12:42:41.548" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.529" endtime="20201029 12:42:41.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:41.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:41.550" endtime="20201029 12:42:41.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.557" endtime="20201029 12:42:41.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.521" endtime="20201029 12:42:41.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.516" endtime="20201029 12:42:41.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:41.582" endtime="20201029 12:42:41.989"></status>
</kw>
<msg timestamp="20201029 12:42:41.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.408274222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.408282431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:41.579" endtime="20201029 12:42:41.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.408274222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.408282431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:42.001" endtime="20201029 12:42:42.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.024" endtime="20201029 12:42:42.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.571" endtime="20201029 12:42:42.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.566" endtime="20201029 12:42:42.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:42.044" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2111000000203376e-05}, {'diff': 9.917000000303489e-06}, {'diff': 1.688900000029747e-05}, {'diff': 1.0014000000335699e-05}, {'diff': 9.888999999763115e-06}, {'diff': 1.69869999...</msg>
<status status="PASS" starttime="20201029 12:42:42.034" endtime="20201029 12:42:42.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:42.057" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2111000000203376e-05, 9.917000000303489e-06, 1.688900000029747e-05, 1.0014000000335699e-05, 9.888999999763115e-06, 1.6986999999968333e-05, 1.590299999998379e-05, 8.638999999810437e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:42.047" endtime="20201029 12:42:42.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.069" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:42.067" endtime="20201029 12:42:42.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.075" level="INFO">VALUE: [0, 1.2111000000203376e-05, 9.917000000303489e-06, 1.688900000029747e-05, 1.0014000000335699e-05, 9.888999999763115e-06, 1.6986999999968333e-05, 1.590299999998379e-05, 8.638999999810437e-06, 9.152999999706424e-06, 6.110999999808797e-06, 1.4514000000076521e-05, 1.4555999999998903e-05, 1.1568999999767016e-05, 0.6426693750000001, 1.2555999999719347e-05, 6.083999999795253e-06, 1.4999999999432134e-05, 9.333000000388836e-06, 1.1875000000216573e-05, 9.041000000209465e-06, 1.144500000016535e-05, 1.4430000000231757e-05, 1.769400000029009e-05, 6.444000000271899e-06, 1.3124999999725162e-05, 8.999999999481645e-06, 7.680999999593041e-06, 1.0237000000579144e-05, 1.2777999999435963e-05, 1.4554999999916163e-05, 1.6444999999976062e-05, 1.7222999999511046e-05, 8.651999999997884e-06, 1.020799999995603e-05, 1.322200000064555e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.32000000020139e-06, 0.5302506950000003, 1.1930999999520964e-05, 1.3556000000747304e-05, 6.444000000271899e-06, 9.430999999615608e-06, 1.3304999999519396e-05, 1.4653000000031113e-05, 1.2014000000171166e-05, 1.3792000000734106e-05, 1.1221999999477816e-05, 1.3209000000458104e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.0778000000044585e-05, 7.805000000082885e-06, 1.298599999977057e-05, 1.302800000058113e-05, 7.666000000128292e-06, 1.1513999999657187e-05, 1.5000000000320313e-05, 1.788900000043725e-05, 6.806000000025847e-06, 1.1111000000063598e-05, 1.387500000049613e-05, 1.4207999999626963e-05]</msg>
<status status="PASS" starttime="20201029 12:42:42.071" endtime="20201029 12:42:42.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.060" endtime="20201029 12:42:42.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.512" endtime="20201029 12:42:42.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:41.511" endtime="20201029 12:42:42.080"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.102" endtime="20201029 12:42:42.115"></status>
</kw>
<msg timestamp="20201029 12:42:42.117" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.098" endtime="20201029 12:42:42.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.123" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.119" endtime="20201029 12:42:42.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.126" endtime="20201029 12:42:42.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.091" endtime="20201029 12:42:42.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.086" endtime="20201029 12:42:42.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.151" endtime="20201029 12:42:42.549"></status>
</kw>
<msg timestamp="20201029 12:42:42.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.051523208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.051538639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:42.147" endtime="20201029 12:42:42.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.051523208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.051538639, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:42.561" endtime="20201029 12:42:42.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.584" endtime="20201029 12:42:42.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.140" endtime="20201029 12:42:42.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.135" endtime="20201029 12:42:42.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:42.604" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.999999999481645e-06}, {'diff': 7.680999999593041e-06}, {'diff': 1.0237000000579144e-05}, {'diff': 1.2777999999435963e-05}, {'diff': 1.4554999999916163e-05}, {'diff': 1.6444999...</msg>
<status status="PASS" starttime="20201029 12:42:42.593" endtime="20201029 12:42:42.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:42.615" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.999999999481645e-06, 7.680999999593041e-06, 1.0237000000579144e-05, 1.2777999999435963e-05, 1.4554999999916163e-05, 1.6444999999976062e-05, 1.7222999999511046e-05, 8.651999999997884e-06...</msg>
<status status="PASS" starttime="20201029 12:42:42.606" endtime="20201029 12:42:42.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.626" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:42.624" endtime="20201029 12:42:42.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.632" level="INFO">VALUE: [0, 8.999999999481645e-06, 7.680999999593041e-06, 1.0237000000579144e-05, 1.2777999999435963e-05, 1.4554999999916163e-05, 1.6444999999976062e-05, 1.7222999999511046e-05, 8.651999999997884e-06, 1.020799999995603e-05, 1.322200000064555e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.32000000020139e-06, 0.5302506950000003, 1.1930999999520964e-05, 1.3556000000747304e-05, 6.444000000271899e-06, 9.430999999615608e-06, 1.3304999999519396e-05, 1.4653000000031113e-05, 1.2014000000171166e-05, 1.3792000000734106e-05, 1.1221999999477816e-05, 1.3209000000458104e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.0778000000044585e-05, 7.805000000082885e-06, 1.298599999977057e-05, 1.302800000058113e-05, 7.666000000128292e-06, 1.1513999999657187e-05, 1.5000000000320313e-05, 1.788900000043725e-05, 6.806000000025847e-06, 1.1111000000063598e-05, 1.387500000049613e-05, 1.4207999999626963e-05, 0.5574143879999998, 1.1653000000499958e-05, 1.7362000000353817e-05, 9.667000000490589e-06, 1.2179999999695212e-05, 1.422199999989715e-05, 8.347999999713807e-06, 1.0445000000025573e-05, 1.755599999953006e-05, 6.305999999511869e-06, 6.778000000373652e-06, 8.33399999944362e-06, 1.3027999999692952e-05, 8.651999999997884e-06, 1.0443999999942832e-05, 1.5679999999740346e-05, 9.207999999816252e-06, 9.138999999436237e-06, 1.1458999999547359e-05, 1.13470000000504e-05, 8.041000000069687e-06, 1.1124999999445606e-05, 9.334000000471576e-06, 9.458000000073241e-06, 1.679200000026526e-05]</msg>
<status status="PASS" starttime="20201029 12:42:42.628" endtime="20201029 12:42:42.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.617" endtime="20201029 12:42:42.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.082" endtime="20201029 12:42:42.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.081" endtime="20201029 12:42:42.636"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.657" endtime="20201029 12:42:42.672"></status>
</kw>
<msg timestamp="20201029 12:42:42.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.654" endtime="20201029 12:42:42.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:42.680" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:42.676" endtime="20201029 12:42:42.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.682" endtime="20201029 12:42:42.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.646" endtime="20201029 12:42:42.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.641" endtime="20201029 12:42:42.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:42.706" endtime="20201029 12:42:43.082"></status>
</kw>
<msg timestamp="20201029 12:42:43.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.582343625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.582352167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:42.702" endtime="20201029 12:42:43.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.582343625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.582352167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:43.094" endtime="20201029 12:42:43.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.116" endtime="20201029 12:42:43.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.695" endtime="20201029 12:42:43.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.690" endtime="20201029 12:42:43.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.134" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5222000000036928e-05}, {'diff': 1.0778000000044585e-05}, {'diff': 7.805000000082885e-06}, {'diff': 1.298599999977057e-05}, {'diff': 1.302800000058113e-05}, {'diff': 7.66600000...</msg>
<status status="PASS" starttime="20201029 12:42:43.124" endtime="20201029 12:42:43.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.146" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5222000000036928e-05, 1.0778000000044585e-05, 7.805000000082885e-06, 1.298599999977057e-05, 1.302800000058113e-05, 7.666000000128292e-06, 1.1513999999657187e-05, 1.5000000000320313e-05,...</msg>
<status status="PASS" starttime="20201029 12:42:43.136" endtime="20201029 12:42:43.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.157" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:43.155" endtime="20201029 12:42:43.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.162" level="INFO">VALUE: [0, 1.5222000000036928e-05, 1.0778000000044585e-05, 7.805000000082885e-06, 1.298599999977057e-05, 1.302800000058113e-05, 7.666000000128292e-06, 1.1513999999657187e-05, 1.5000000000320313e-05, 1.788900000043725e-05, 6.806000000025847e-06, 1.1111000000063598e-05, 1.387500000049613e-05, 1.4207999999626963e-05, 0.5574143879999998, 1.1653000000499958e-05, 1.7362000000353817e-05, 9.667000000490589e-06, 1.2179999999695212e-05, 1.422199999989715e-05, 8.347999999713807e-06, 1.0445000000025573e-05, 1.755599999953006e-05, 6.305999999511869e-06, 6.778000000373652e-06, 8.33399999944362e-06, 1.3027999999692952e-05, 8.651999999997884e-06, 1.0443999999942832e-05, 1.5679999999740346e-05, 9.207999999816252e-06, 9.138999999436237e-06, 1.1458999999547359e-05, 1.13470000000504e-05, 8.041000000069687e-06, 1.1124999999445606e-05, 9.334000000471576e-06, 9.458000000073241e-06, 1.679200000026526e-05, 0.5469291810000003, 7.2080000004248745e-06, 1.709700000063208e-05, 1.1763999999914176e-05, 7.77800000051343e-06, 1.1777000000101623e-05, 1.1361000000320587e-05, 1.2556000000607526e-05, 1.3000000000040757e-05, 7.445000000494417e-06, 1.1014000000031388e-05, 9.556000000188192e-06, 1.0429999999672646e-05, 1.4195000000327695e-05, 1.3888999999878138e-05, 1.3569000000046572e-05, 1.809699999988368e-05, 8.541999999778227e-06, 1.2459000000575315e-05, 1.0778000000044585e-05, 1.13470000000504e-05, 7.651999999858106e-06, 1.0944999999651372e-05, 1.0875000000076795e-05, 1.3861000000225943e-05]</msg>
<status status="PASS" starttime="20201029 12:42:43.159" endtime="20201029 12:42:43.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.148" endtime="20201029 12:42:43.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.638" endtime="20201029 12:42:43.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:42.637" endtime="20201029 12:42:43.167"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.188" endtime="20201029 12:42:43.201"></status>
</kw>
<msg timestamp="20201029 12:42:43.202" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.184" endtime="20201029 12:42:43.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.209" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.205" endtime="20201029 12:42:43.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.211" endtime="20201029 12:42:43.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.177" endtime="20201029 12:42:43.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.172" endtime="20201029 12:42:43.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.235" endtime="20201029 12:42:43.613"></status>
</kw>
<msg timestamp="20201029 12:42:43.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.140329292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.140339514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:43.231" endtime="20201029 12:42:43.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.140329292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.140339514, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:43.624" endtime="20201029 12:42:43.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.645" endtime="20201029 12:42:43.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.224" endtime="20201029 12:42:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.219" endtime="20201029 12:42:43.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:43.663" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3027999999692952e-05}, {'diff': 8.651999999997884e-06}, {'diff': 1.0443999999942832e-05}, {'diff': 1.5679999999740346e-05}, {'diff': 9.207999999816252e-06}, {'diff': 9.1389999...</msg>
<status status="PASS" starttime="20201029 12:42:43.654" endtime="20201029 12:42:43.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:43.676" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3027999999692952e-05, 8.651999999997884e-06, 1.0443999999942832e-05, 1.5679999999740346e-05, 9.207999999816252e-06, 9.138999999436237e-06, 1.1458999999547359e-05, 1.13470000000504e-05, ...</msg>
<status status="PASS" starttime="20201029 12:42:43.665" endtime="20201029 12:42:43.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.686" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:43.684" endtime="20201029 12:42:43.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.692" level="INFO">VALUE: [0, 1.3027999999692952e-05, 8.651999999997884e-06, 1.0443999999942832e-05, 1.5679999999740346e-05, 9.207999999816252e-06, 9.138999999436237e-06, 1.1458999999547359e-05, 1.13470000000504e-05, 8.041000000069687e-06, 1.1124999999445606e-05, 9.334000000471576e-06, 9.458000000073241e-06, 1.679200000026526e-05, 0.5469291810000003, 7.2080000004248745e-06, 1.709700000063208e-05, 1.1763999999914176e-05, 7.77800000051343e-06, 1.1777000000101623e-05, 1.1361000000320587e-05, 1.2556000000607526e-05, 1.3000000000040757e-05, 7.445000000494417e-06, 1.1014000000031388e-05, 9.556000000188192e-06, 1.0429999999672646e-05, 1.4195000000327695e-05, 1.3888999999878138e-05, 1.3569000000046572e-05, 1.809699999988368e-05, 8.541999999778227e-06, 1.2459000000575315e-05, 1.0778000000044585e-05, 1.13470000000504e-05, 7.651999999858106e-06, 1.0944999999651372e-05, 1.0875000000076795e-05, 1.3861000000225943e-05, 0.5189308329999998, 9.431000000503786e-06, 6.473000000006834e-06, 1.5499999999946112e-05, 1.3458000000632353e-05, 1.09999999997612e-05, 1.2014000000171166e-05, 7.1390000000448595e-06, 1.2332999999919991e-05, 1.3555999999859125e-05, 1.645800000016351e-05, 1.0597000000167611e-05, 1.6125000000144496e-05, 1.2847999999898718e-05, 1.6222000000176706e-05, 1.2111000000203376e-05, 1.288899999973836e-05, 1.2777999999435963e-05, 8.431000000364008e-06, 7.5549999998258954e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.743000000065109e-05, 1.7319999999543256e-05]</msg>
<status status="PASS" starttime="20201029 12:42:43.689" endtime="20201029 12:42:43.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.678" endtime="20201029 12:42:43.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.169" endtime="20201029 12:42:43.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.168" endtime="20201029 12:42:43.696"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.717" endtime="20201029 12:42:43.730"></status>
</kw>
<msg timestamp="20201029 12:42:43.731" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.714" endtime="20201029 12:42:43.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:43.737" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:43.733" endtime="20201029 12:42:43.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.740" endtime="20201029 12:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.706" endtime="20201029 12:42:43.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.701" endtime="20201029 12:42:43.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:43.763" endtime="20201029 12:42:44.175"></status>
</kw>
<msg timestamp="20201029 12:42:44.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.687809292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.687825431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:43.760" endtime="20201029 12:42:44.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.687809292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.687825431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:44.188" endtime="20201029 12:42:44.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.211" endtime="20201029 12:42:44.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.752" endtime="20201029 12:42:44.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.748" endtime="20201029 12:42:44.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.231" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0429999999672646e-05}, {'diff': 1.4195000000327695e-05}, {'diff': 1.3888999999878138e-05}, {'diff': 1.3569000000046572e-05}, {'diff': 1.809699999988368e-05}, {'diff': 8.541999...</msg>
<status status="PASS" starttime="20201029 12:42:44.220" endtime="20201029 12:42:44.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.246" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0429999999672646e-05, 1.4195000000327695e-05, 1.3888999999878138e-05, 1.3569000000046572e-05, 1.809699999988368e-05, 8.541999999778227e-06, 1.2459000000575315e-05, 1.0778000000044585e-0...</msg>
<status status="PASS" starttime="20201029 12:42:44.234" endtime="20201029 12:42:44.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.264" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:44.261" endtime="20201029 12:42:44.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.274" level="INFO">VALUE: [0, 1.0429999999672646e-05, 1.4195000000327695e-05, 1.3888999999878138e-05, 1.3569000000046572e-05, 1.809699999988368e-05, 8.541999999778227e-06, 1.2459000000575315e-05, 1.0778000000044585e-05, 1.13470000000504e-05, 7.651999999858106e-06, 1.0944999999651372e-05, 1.0875000000076795e-05, 1.3861000000225943e-05, 0.5189308329999998, 9.431000000503786e-06, 6.473000000006834e-06, 1.5499999999946112e-05, 1.3458000000632353e-05, 1.09999999997612e-05, 1.2014000000171166e-05, 7.1390000000448595e-06, 1.2332999999919991e-05, 1.3555999999859125e-05, 1.645800000016351e-05, 1.0597000000167611e-05, 1.6125000000144496e-05, 1.2847999999898718e-05, 1.6222000000176706e-05, 1.2111000000203376e-05, 1.288899999973836e-05, 1.2777999999435963e-05, 8.431000000364008e-06, 7.5549999998258954e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.743000000065109e-05, 1.7319999999543256e-05, 0.5184254590000004, 8.306000000679603e-06, 1.532000000015188e-05, 1.3111000000343154e-05, 1.144500000016535e-05, 1.5430000000371535e-05, 1.2445000000305129e-05, 6.221999999667105e-06, 1.5735999999932915e-05, 7.221999999806883e-06, 1.4417000000044311e-05, 7.985999999959859e-06, 8.541999999778227e-06, 8.889000000067426e-06, 1.2458000000492575e-05, 1.322200000064555e-05, 9.888000000124464e-06, 8.792000000035216e-06, 9.777999999904807e-06, 1.5139000000274905e-05, 9.86099999966683e-06, 1.1208000000095808e-05, 1.2667000000021744e-05, 1.0222000000226217e-05, 1.5540999999785754e-05]</msg>
<status status="PASS" starttime="20201029 12:42:44.268" endtime="20201029 12:42:44.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.250" endtime="20201029 12:42:44.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.698" endtime="20201029 12:42:44.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:43.697" endtime="20201029 12:42:44.281"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.313" endtime="20201029 12:42:44.331"></status>
</kw>
<msg timestamp="20201029 12:42:44.334" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.308" endtime="20201029 12:42:44.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.342" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.337" endtime="20201029 12:42:44.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.345" endtime="20201029 12:42:44.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.297" endtime="20201029 12:42:44.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.290" endtime="20201029 12:42:44.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.376" endtime="20201029 12:42:44.783"></status>
</kw>
<msg timestamp="20201029 12:42:44.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.207323014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.207334125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:44.372" endtime="20201029 12:42:44.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.207323014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.207334125, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:44.795" endtime="20201029 12:42:44.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.819" endtime="20201029 12:42:44.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.362" endtime="20201029 12:42:44.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.356" endtime="20201029 12:42:44.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:44.838" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6125000000144496e-05}, {'diff': 1.2847999999898718e-05}, {'diff': 1.6222000000176706e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.288899999973836e-05}, {'diff': 1.277799...</msg>
<status status="PASS" starttime="20201029 12:42:44.828" endtime="20201029 12:42:44.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:44.855" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6125000000144496e-05, 1.2847999999898718e-05, 1.6222000000176706e-05, 1.2111000000203376e-05, 1.288899999973836e-05, 1.2777999999435963e-05, 8.431000000364008e-06, 7.5549999998258954e-0...</msg>
<status status="PASS" starttime="20201029 12:42:44.840" endtime="20201029 12:42:44.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:44.864" endtime="20201029 12:42:44.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.872" level="INFO">VALUE: [0, 1.6125000000144496e-05, 1.2847999999898718e-05, 1.6222000000176706e-05, 1.2111000000203376e-05, 1.288899999973836e-05, 1.2777999999435963e-05, 8.431000000364008e-06, 7.5549999998258954e-06, 1.576399999958511e-05, 1.5222000000036928e-05, 1.4555999999998903e-05, 1.743000000065109e-05, 1.7319999999543256e-05, 0.5184254590000004, 8.306000000679603e-06, 1.532000000015188e-05, 1.3111000000343154e-05, 1.144500000016535e-05, 1.5430000000371535e-05, 1.2445000000305129e-05, 6.221999999667105e-06, 1.5735999999932915e-05, 7.221999999806883e-06, 1.4417000000044311e-05, 7.985999999959859e-06, 8.541999999778227e-06, 8.889000000067426e-06, 1.2458000000492575e-05, 1.322200000064555e-05, 9.888000000124464e-06, 8.792000000035216e-06, 9.777999999904807e-06, 1.5139000000274905e-05, 9.86099999966683e-06, 1.1208000000095808e-05, 1.2667000000021744e-05, 1.0222000000226217e-05, 1.5540999999785754e-05, 0.5898677779999995, 1.1528000000815553e-05, 1.2014000000171166e-05, 1.5110999999734531e-05, 1.4041000000020176e-05, 1.3361000000600143e-05, 1.3444999999556728e-05, 1.3903000000148324e-05, 1.208300000055118e-05, 1.457000000026909e-05, 8.764000000383021e-06, 1.065200000027744e-05, 1.644500000086424e-05, 1.1096999999793411e-05, 1.4665999999330381e-05, 1.2332999999919991e-05, 1.0096999999653633e-05, 1.3916999999530333e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.111000000252886e-06, 1.5666000000358338e-05, 1.4680000000488747e-05, 7.667000000211033e-06, 5.276999999637155e-06]</msg>
<status status="PASS" starttime="20201029 12:42:44.869" endtime="20201029 12:42:44.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.857" endtime="20201029 12:42:44.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.284" endtime="20201029 12:42:44.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.283" endtime="20201029 12:42:44.877"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.899" endtime="20201029 12:42:44.912"></status>
</kw>
<msg timestamp="20201029 12:42:44.913" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.895" endtime="20201029 12:42:44.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:44.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:44.916" endtime="20201029 12:42:44.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.922" endtime="20201029 12:42:44.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.887" endtime="20201029 12:42:44.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.882" endtime="20201029 12:42:44.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:44.948" endtime="20201029 12:42:45.353"></status>
</kw>
<msg timestamp="20201029 12:42:45.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.726363028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.726376486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:44.944" endtime="20201029 12:42:45.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.726363028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.726376486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:45.367" endtime="20201029 12:42:45.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.393" endtime="20201029 12:42:45.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.936" endtime="20201029 12:42:45.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.931" endtime="20201029 12:42:45.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.414" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.541999999778227e-06}, {'diff': 8.889000000067426e-06}, {'diff': 1.2458000000492575e-05}, {'diff': 1.322200000064555e-05}, {'diff': 9.888000000124464e-06}, {'diff': 8.792000000...</msg>
<status status="PASS" starttime="20201029 12:42:45.402" endtime="20201029 12:42:45.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.428" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.541999999778227e-06, 8.889000000067426e-06, 1.2458000000492575e-05, 1.322200000064555e-05, 9.888000000124464e-06, 8.792000000035216e-06, 9.777999999904807e-06, 1.5139000000274905e-05, 9...</msg>
<status status="PASS" starttime="20201029 12:42:45.417" endtime="20201029 12:42:45.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.439" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:45.437" endtime="20201029 12:42:45.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.446" level="INFO">VALUE: [0, 8.541999999778227e-06, 8.889000000067426e-06, 1.2458000000492575e-05, 1.322200000064555e-05, 9.888000000124464e-06, 8.792000000035216e-06, 9.777999999904807e-06, 1.5139000000274905e-05, 9.86099999966683e-06, 1.1208000000095808e-05, 1.2667000000021744e-05, 1.0222000000226217e-05, 1.5540999999785754e-05, 0.5898677779999995, 1.1528000000815553e-05, 1.2014000000171166e-05, 1.5110999999734531e-05, 1.4041000000020176e-05, 1.3361000000600143e-05, 1.3444999999556728e-05, 1.3903000000148324e-05, 1.208300000055118e-05, 1.457000000026909e-05, 8.764000000383021e-06, 1.065200000027744e-05, 1.644500000086424e-05, 1.1096999999793411e-05, 1.4665999999330381e-05, 1.2332999999919991e-05, 1.0096999999653633e-05, 1.3916999999530333e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.111000000252886e-06, 1.5666000000358338e-05, 1.4680000000488747e-05, 7.667000000211033e-06, 5.276999999637155e-06, 0.5719678889999997, 1.5569000000326128e-05, 1.0346999999910622e-05, 9.554999999217273e-06, 9.999999999621423e-06, 1.8666999999972234e-05, 1.100000000064938e-05, 1.566599999947016e-05, 1.1624999999959584e-05, 4.999999999810711e-06, 1.3667000000161522e-05, 8.902000000254873e-06, 1.412499999986494e-05, 1.545800000002373e-05, 1.298599999977057e-05, 6.235999999937292e-06, 1.3445000000444907e-05, 7.651999999858106e-06, 1.1651999999529039e-05, 1.1568999999767016e-05, 1.1541999999309382e-05, 9.903000000477391e-06, 9.443999999803054e-06, 1.1708000000609786e-05, 1.0679999999929635e-05]</msg>
<status status="PASS" starttime="20201029 12:42:45.442" endtime="20201029 12:42:45.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.430" endtime="20201029 12:42:45.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.879" endtime="20201029 12:42:45.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:44.878" endtime="20201029 12:42:45.450"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.472" endtime="20201029 12:42:45.486"></status>
</kw>
<msg timestamp="20201029 12:42:45.487" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.469" endtime="20201029 12:42:45.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.494" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:45.489" endtime="20201029 12:42:45.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.496" endtime="20201029 12:42:45.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.461" endtime="20201029 12:42:45.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.456" endtime="20201029 12:42:45.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.522" endtime="20201029 12:42:45.921"></status>
</kw>
<msg timestamp="20201029 12:42:45.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.316806833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.316814833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:45.518" endtime="20201029 12:42:45.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:45.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.316806833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.316814833, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:45.934" endtime="20201029 12:42:45.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:45.957" endtime="20201029 12:42:45.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.510" endtime="20201029 12:42:45.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.505" endtime="20201029 12:42:45.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:45.976" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.644500000086424e-05}, {'diff': 1.1096999999793411e-05}, {'diff': 1.4665999999330381e-05}, {'diff': 1.2332999999919991e-05}, {'diff': 1.0096999999653633e-05}, {'diff': 1.391699...</msg>
<status status="PASS" starttime="20201029 12:42:45.966" endtime="20201029 12:42:45.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:45.987" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.644500000086424e-05, 1.1096999999793411e-05, 1.4665999999330381e-05, 1.2332999999919991e-05, 1.0096999999653633e-05, 1.3916999999530333e-05, 1.4236000000167337e-05, 8.77799999976503e-06...</msg>
<status status="PASS" starttime="20201029 12:42:45.978" endtime="20201029 12:42:46.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.015" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:46.012" endtime="20201029 12:42:46.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.021" level="INFO">VALUE: [0, 1.644500000086424e-05, 1.1096999999793411e-05, 1.4665999999330381e-05, 1.2332999999919991e-05, 1.0096999999653633e-05, 1.3916999999530333e-05, 1.4236000000167337e-05, 8.77799999976503e-06, 6.111000000252886e-06, 1.5666000000358338e-05, 1.4680000000488747e-05, 7.667000000211033e-06, 5.276999999637155e-06, 0.5719678889999997, 1.5569000000326128e-05, 1.0346999999910622e-05, 9.554999999217273e-06, 9.999999999621423e-06, 1.8666999999972234e-05, 1.100000000064938e-05, 1.566599999947016e-05, 1.1624999999959584e-05, 4.999999999810711e-06, 1.3667000000161522e-05, 8.902000000254873e-06, 1.412499999986494e-05, 1.545800000002373e-05, 1.298599999977057e-05, 6.235999999937292e-06, 1.3445000000444907e-05, 7.651999999858106e-06, 1.1651999999529039e-05, 1.1568999999767016e-05, 1.1541999999309382e-05, 9.903000000477391e-06, 9.443999999803054e-06, 1.1708000000609786e-05, 1.0679999999929635e-05, 0.5619201250000003, 8.43099999947583e-06, 1.5999999998683734e-05, 1.3084000000773699e-05, 8.986000000987815e-06, 1.1431000000783342e-05, 1.3902999999260146e-05, 1.338899999936416e-05, 9.680999999872597e-06, 9.999999999621423e-06, 8.236000001105026e-06, 1.5346999999721334e-05, 1.0332999998752257e-05, 1.0749999999504212e-05, 1.4832999999825347e-05, 1.1776999999213444e-05, 1.1513999998769009e-05, 1.0778000000044585e-05, 8.417000000093822e-06, 1.3374999999982151e-05, 1.2332999999031813e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4554999999916163e-05, 1.0333000000528614e-05]</msg>
<status status="PASS" starttime="20201029 12:42:46.017" endtime="20201029 12:42:46.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.005" endtime="20201029 12:42:46.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.452" endtime="20201029 12:42:46.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:45.451" endtime="20201029 12:42:46.025"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.048" endtime="20201029 12:42:46.063"></status>
</kw>
<msg timestamp="20201029 12:42:46.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.044" endtime="20201029 12:42:46.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.066" endtime="20201029 12:42:46.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.073" endtime="20201029 12:42:46.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.036" endtime="20201029 12:42:46.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.031" endtime="20201029 12:42:46.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.099" endtime="20201029 12:42:46.495"></status>
</kw>
<msg timestamp="20201029 12:42:46.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.889349458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.889360556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:46.095" endtime="20201029 12:42:46.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.889349458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.889360556, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:46.507" endtime="20201029 12:42:46.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.530" endtime="20201029 12:42:46.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.088" endtime="20201029 12:42:46.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.082" endtime="20201029 12:42:46.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:46.550" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.412499999986494e-05}, {'diff': 1.545800000002373e-05}, {'diff': 1.298599999977057e-05}, {'diff': 6.235999999937292e-06}, {'diff': 1.3445000000444907e-05}, {'diff': 7.651999999...</msg>
<status status="PASS" starttime="20201029 12:42:46.539" endtime="20201029 12:42:46.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:46.563" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.412499999986494e-05, 1.545800000002373e-05, 1.298599999977057e-05, 6.235999999937292e-06, 1.3445000000444907e-05, 7.651999999858106e-06, 1.1651999999529039e-05, 1.1568999999767016e-05, ...</msg>
<status status="PASS" starttime="20201029 12:42:46.552" endtime="20201029 12:42:46.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.575" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:46.573" endtime="20201029 12:42:46.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.581" level="INFO">VALUE: [0, 1.412499999986494e-05, 1.545800000002373e-05, 1.298599999977057e-05, 6.235999999937292e-06, 1.3445000000444907e-05, 7.651999999858106e-06, 1.1651999999529039e-05, 1.1568999999767016e-05, 1.1541999999309382e-05, 9.903000000477391e-06, 9.443999999803054e-06, 1.1708000000609786e-05, 1.0679999999929635e-05, 0.5619201250000003, 8.43099999947583e-06, 1.5999999998683734e-05, 1.3084000000773699e-05, 8.986000000987815e-06, 1.1431000000783342e-05, 1.3902999999260146e-05, 1.338899999936416e-05, 9.680999999872597e-06, 9.999999999621423e-06, 8.236000001105026e-06, 1.5346999999721334e-05, 1.0332999998752257e-05, 1.0749999999504212e-05, 1.4832999999825347e-05, 1.1776999999213444e-05, 1.1513999998769009e-05, 1.0778000000044585e-05, 8.417000000093822e-06, 1.3374999999982151e-05, 1.2332999999031813e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4554999999916163e-05, 1.0333000000528614e-05, 0.5645382780000006, 8.334000000331798e-06, 1.5985999999301725e-05, 8.459000000016204e-06, 1.144500000016535e-05, 7.88899999903947e-06, 1.1888999999598582e-05, 1.0888999998570625e-05, 1.3111000001231332e-05, 9.777999999016629e-06, 1.5110999999734531e-05, 1.3806000000116114e-05, 1.1209000000178548e-05, 4.985999998652346e-06, 1.030499999998824e-05, 1.5889000000157694e-05, 1.2111000000203376e-05, 1.298599999977057e-05, 1.600000000046009e-05, 1.204199999982336e-05, 9.013999999751832e-06, 1.4000000000180535e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05]</msg>
<status status="PASS" starttime="20201029 12:42:46.578" endtime="20201029 12:42:46.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.566" endtime="20201029 12:42:46.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.027" endtime="20201029 12:42:46.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.026" endtime="20201029 12:42:46.586"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.608" endtime="20201029 12:42:46.622"></status>
</kw>
<msg timestamp="20201029 12:42:46.624" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.605" endtime="20201029 12:42:46.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:46.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:46.626" endtime="20201029 12:42:46.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.633" endtime="20201029 12:42:46.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.597" endtime="20201029 12:42:46.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.592" endtime="20201029 12:42:46.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:46.658" endtime="20201029 12:42:47.059"></status>
</kw>
<msg timestamp="20201029 12:42:47.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.451831514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.451847403, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:46.655" endtime="20201029 12:42:47.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.451831514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.451847403, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:47.071" endtime="20201029 12:42:47.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.094" endtime="20201029 12:42:47.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.647" endtime="20201029 12:42:47.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.641" endtime="20201029 12:42:47.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.114" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0332999998752257e-05}, {'diff': 1.0749999999504212e-05}, {'diff': 1.4832999999825347e-05}, {'diff': 1.1776999999213444e-05}, {'diff': 1.1513999998769009e-05}, {'diff': 1.07780...</msg>
<status status="PASS" starttime="20201029 12:42:47.104" endtime="20201029 12:42:47.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.127" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0332999998752257e-05, 1.0749999999504212e-05, 1.4832999999825347e-05, 1.1776999999213444e-05, 1.1513999998769009e-05, 1.0778000000044585e-05, 8.417000000093822e-06, 1.3374999999982151e-...</msg>
<status status="PASS" starttime="20201029 12:42:47.116" endtime="20201029 12:42:47.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.138" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:47.136" endtime="20201029 12:42:47.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.145" level="INFO">VALUE: [0, 1.0332999998752257e-05, 1.0749999999504212e-05, 1.4832999999825347e-05, 1.1776999999213444e-05, 1.1513999998769009e-05, 1.0778000000044585e-05, 8.417000000093822e-06, 1.3374999999982151e-05, 1.2332999999031813e-05, 1.100000000064938e-05, 8.221999999946661e-06, 1.4554999999916163e-05, 1.0333000000528614e-05, 0.5645382780000006, 8.334000000331798e-06, 1.5985999999301725e-05, 8.459000000016204e-06, 1.144500000016535e-05, 7.88899999903947e-06, 1.1888999999598582e-05, 1.0888999998570625e-05, 1.3111000001231332e-05, 9.777999999016629e-06, 1.5110999999734531e-05, 1.3806000000116114e-05, 1.1209000000178548e-05, 4.985999998652346e-06, 1.030499999998824e-05, 1.5889000000157694e-05, 1.2111000000203376e-05, 1.298599999977057e-05, 1.600000000046009e-05, 1.204199999982336e-05, 9.013999999751832e-06, 1.4000000000180535e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05, 0.5494853889999991, 1.7028000000252064e-05, 1.0791999999426594e-05, 1.6431000000594054e-05, 1.2459000000575315e-05, 1.526399999995931e-05, 1.244499999941695e-05, 1.2569000000794972e-05, 5.6659999998487365e-06, 1.576400000047329e-05, 1.1819000000912183e-05, 6.278000000747852e-06, 1.3097000000072967e-05, 1.655500000019572e-05, 1.3207999998599007e-05, 1.4221999999008972e-05, 7.88899999903947e-06, 1.4736000000681315e-05, 7.2219999989187045e-06, 1.0846999998648243e-05, 8.541999999778227e-06, 1.3346999999441778e-05, 1.3681000000431709e-05, 1.3222999999840113e-05, 1.5888000000074953e-05]</msg>
<status status="PASS" starttime="20201029 12:42:47.141" endtime="20201029 12:42:47.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.129" endtime="20201029 12:42:47.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.588" endtime="20201029 12:42:47.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:46.587" endtime="20201029 12:42:47.149"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.171" endtime="20201029 12:42:47.185"></status>
</kw>
<msg timestamp="20201029 12:42:47.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.167" endtime="20201029 12:42:47.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.193" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.189" endtime="20201029 12:42:47.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.195" endtime="20201029 12:42:47.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.160" endtime="20201029 12:42:47.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.155" endtime="20201029 12:42:47.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.220" endtime="20201029 12:42:47.621"></status>
</kw>
<msg timestamp="20201029 12:42:47.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.016935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.016943208, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 12:42:47.217" endtime="20201029 12:42:47.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.016935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.016943208, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 12:42:47.634" endtime="20201029 12:42:47.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.657" endtime="20201029 12:42:47.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.209" endtime="20201029 12:42:47.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.204" endtime="20201029 12:42:47.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:47.677" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1209000000178548e-05}, {'diff': 4.985999998652346e-06}, {'diff': 1.030499999998824e-05}, {'diff': 1.5889000000157694e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.2985999...</msg>
<status status="PASS" starttime="20201029 12:42:47.666" endtime="20201029 12:42:47.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:47.688" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1209000000178548e-05, 4.985999998652346e-06, 1.030499999998824e-05, 1.5889000000157694e-05, 1.2111000000203376e-05, 1.298599999977057e-05, 1.600000000046009e-05, 1.204199999982336e-05, ...</msg>
<status status="PASS" starttime="20201029 12:42:47.679" endtime="20201029 12:42:47.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.699" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:47.697" endtime="20201029 12:42:47.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.706" level="INFO">VALUE: [0, 1.1209000000178548e-05, 4.985999998652346e-06, 1.030499999998824e-05, 1.5889000000157694e-05, 1.2111000000203376e-05, 1.298599999977057e-05, 1.600000000046009e-05, 1.204199999982336e-05, 9.013999999751832e-06, 1.4000000000180535e-05, 1.144400000008261e-05, 1.5445000000724463e-05, 1.1332999999780213e-05, 0.5494853889999991, 1.7028000000252064e-05, 1.0791999999426594e-05, 1.6431000000594054e-05, 1.2459000000575315e-05, 1.526399999995931e-05, 1.244499999941695e-05, 1.2569000000794972e-05, 5.6659999998487365e-06, 1.576400000047329e-05, 1.1819000000912183e-05, 6.278000000747852e-06, 1.3097000000072967e-05, 1.655500000019572e-05, 1.3207999998599007e-05, 1.4221999999008972e-05, 7.88899999903947e-06, 1.4736000000681315e-05, 7.2219999989187045e-06, 1.0846999998648243e-05, 8.541999999778227e-06, 1.3346999999441778e-05, 1.3681000000431709e-05, 1.3222999999840113e-05, 1.5888000000074953e-05, 0.5534717639999993, 9.776999998933888e-06, 7.054999999311917e-06, 1.27770000002414e-05, 1.3791000000651366e-05, 6.194999999209472e-06, 1.3014000000310944e-05, 1.619500000060725e-05, 1.4972999998974501e-05, 1.144400000008261e-05, 1.4889000000906094e-05, 7.709000000133415e-06, 1.1458999999547359e-05, 9.000000000369823e-06, 1.2665999999939004e-05, 7.958999999502225e-06, 1.0666999999742188e-05, 1.2221999998729416e-05, 1.2554999999636607e-05, 1.233400000089091e-05, 1.5223000000119669e-05, 1.4874999999747729e-05, 1.2222000000505773e-05, 1.3458999999826915e-05, 1.5555999999250503e-05]</msg>
<status status="PASS" starttime="20201029 12:42:47.702" endtime="20201029 12:42:47.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.690" endtime="20201029 12:42:47.708"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.151" endtime="20201029 12:42:47.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.150" endtime="20201029 12:42:47.710"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.732" endtime="20201029 12:42:47.748"></status>
</kw>
<msg timestamp="20201029 12:42:47.749" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.729" endtime="20201029 12:42:47.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:47.756" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:47.751" endtime="20201029 12:42:47.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.758" endtime="20201029 12:42:47.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.721" endtime="20201029 12:42:47.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.716" endtime="20201029 12:42:47.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:47.783" endtime="20201029 12:42:48.184"></status>
</kw>
<msg timestamp="20201029 12:42:48.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.567017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.567029264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:47.780" endtime="20201029 12:42:48.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.567017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.567029264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:48.196" endtime="20201029 12:42:48.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.220" endtime="20201029 12:42:48.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.772" endtime="20201029 12:42:48.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.767" endtime="20201029 12:42:48.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.239" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3097000000072967e-05}, {'diff': 1.655500000019572e-05}, {'diff': 1.3207999998599007e-05}, {'diff': 1.4221999999008972e-05}, {'diff': 7.88899999903947e-06}, {'diff': 1.47360000...</msg>
<status status="PASS" starttime="20201029 12:42:48.229" endtime="20201029 12:42:48.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.251" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3097000000072967e-05, 1.655500000019572e-05, 1.3207999998599007e-05, 1.4221999999008972e-05, 7.88899999903947e-06, 1.4736000000681315e-05, 7.2219999989187045e-06, 1.0846999998648243e-05...</msg>
<status status="PASS" starttime="20201029 12:42:48.241" endtime="20201029 12:42:48.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.263" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:48.261" endtime="20201029 12:42:48.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.269" level="INFO">VALUE: [0, 1.3097000000072967e-05, 1.655500000019572e-05, 1.3207999998599007e-05, 1.4221999999008972e-05, 7.88899999903947e-06, 1.4736000000681315e-05, 7.2219999989187045e-06, 1.0846999998648243e-05, 8.541999999778227e-06, 1.3346999999441778e-05, 1.3681000000431709e-05, 1.3222999999840113e-05, 1.5888000000074953e-05, 0.5534717639999993, 9.776999998933888e-06, 7.054999999311917e-06, 1.27770000002414e-05, 1.3791000000651366e-05, 6.194999999209472e-06, 1.3014000000310944e-05, 1.619500000060725e-05, 1.4972999998974501e-05, 1.144400000008261e-05, 1.4889000000906094e-05, 7.709000000133415e-06, 1.1458999999547359e-05, 9.000000000369823e-06, 1.2665999999939004e-05, 7.958999999502225e-06, 1.0666999999742188e-05, 1.2221999998729416e-05, 1.2554999999636607e-05, 1.233400000089091e-05, 1.5223000000119669e-05, 1.4874999999747729e-05, 1.2222000000505773e-05, 1.3458999999826915e-05, 1.5555999999250503e-05, 0.5520581390000014, 9.889000001095383e-06, 1.1888999999598582e-05, 9.65300000110858e-06, 1.306900000130895e-05, 1.433399999939411e-05, 1.1236000000636182e-05, 8.56900000023586e-06, 1.4180000000862947e-05, 1.6777000000800513e-05, 1.1430999999006985e-05, 1.3028000001469309e-05, 1.0749999999504212e-05, 9.999999999621423e-06, 1.6096999999604122e-05, 1.5040999999271776e-05, 1.5749999999314923e-05, 7.555999999908636e-06, 8.459000000016204e-06, 8.443999998775098e-06, 1.4652000000836551e-05, 1.50140000005905e-05, 8.653000000080624e-06, 1.4207999999626963e-05, 9.778000000792986e-06]</msg>
<status status="PASS" starttime="20201029 12:42:48.266" endtime="20201029 12:42:48.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.254" endtime="20201029 12:42:48.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.712" endtime="20201029 12:42:48.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:47.711" endtime="20201029 12:42:48.274"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.296" endtime="20201029 12:42:48.309"></status>
</kw>
<msg timestamp="20201029 12:42:48.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.292" endtime="20201029 12:42:48.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.313" endtime="20201029 12:42:48.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.320" endtime="20201029 12:42:48.324"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.285" endtime="20201029 12:42:48.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.279" endtime="20201029 12:42:48.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.345" endtime="20201029 12:42:48.744"></status>
</kw>
<msg timestamp="20201029 12:42:48.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.121087181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 10.121094958, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:48.341" endtime="20201029 12:42:48.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.121087181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 10.121094958, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:48.757" endtime="20201029 12:42:48.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.780" endtime="20201029 12:42:48.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.334" endtime="20201029 12:42:48.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.328" endtime="20201029 12:42:48.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:48.799" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1458999999547359e-05}, {'diff': 9.000000000369823e-06}, {'diff': 1.2665999999939004e-05}, {'diff': 7.958999999502225e-06}, {'diff': 1.0666999999742188e-05}, {'diff': 1.2221999...</msg>
<status status="PASS" starttime="20201029 12:42:48.789" endtime="20201029 12:42:48.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:48.812" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1458999999547359e-05, 9.000000000369823e-06, 1.2665999999939004e-05, 7.958999999502225e-06, 1.0666999999742188e-05, 1.2221999998729416e-05, 1.2554999999636607e-05, 1.233400000089091e-05...</msg>
<status status="PASS" starttime="20201029 12:42:48.802" endtime="20201029 12:42:48.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.825" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:48.822" endtime="20201029 12:42:48.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.831" level="INFO">VALUE: [0, 1.1458999999547359e-05, 9.000000000369823e-06, 1.2665999999939004e-05, 7.958999999502225e-06, 1.0666999999742188e-05, 1.2221999998729416e-05, 1.2554999999636607e-05, 1.233400000089091e-05, 1.5223000000119669e-05, 1.4874999999747729e-05, 1.2222000000505773e-05, 1.3458999999826915e-05, 1.5555999999250503e-05, 0.5520581390000014, 9.889000001095383e-06, 1.1888999999598582e-05, 9.65300000110858e-06, 1.306900000130895e-05, 1.433399999939411e-05, 1.1236000000636182e-05, 8.56900000023586e-06, 1.4180000000862947e-05, 1.6777000000800513e-05, 1.1430999999006985e-05, 1.3028000001469309e-05, 1.0749999999504212e-05, 9.999999999621423e-06, 1.6096999999604122e-05, 1.5040999999271776e-05, 1.5749999999314923e-05, 7.555999999908636e-06, 8.459000000016204e-06, 8.443999998775098e-06, 1.4652000000836551e-05, 1.50140000005905e-05, 8.653000000080624e-06, 1.4207999999626963e-05, 9.778000000792986e-06, 0.5523906390000004, 1.4389000000392116e-05, 1.4401999999691384e-05, 1.5167000000815278e-05, 1.1860999999058208e-05, 9.042000000292205e-06, 8.665999999379892e-06, 1.3124999998836984e-05, 1.2999999999152578e-05, 1.590199999945696e-05, 1.545800000002373e-05, 8.263999999869043e-06, 1.3111999999537716e-05, 1.4570000001157268e-05, 1.1888999999598582e-05, 1.2347999998496562e-05, 1.1834000000376932e-05, 1.3236000000915737e-05, 1.119500000079654e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.319000000118649e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.665999999379892e-06]</msg>
<status status="PASS" starttime="20201029 12:42:48.827" endtime="20201029 12:42:48.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.816" endtime="20201029 12:42:48.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.276" endtime="20201029 12:42:48.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.275" endtime="20201029 12:42:48.837"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.866" endtime="20201029 12:42:48.883"></status>
</kw>
<msg timestamp="20201029 12:42:48.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.862" endtime="20201029 12:42:48.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:48.892" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:48.887" endtime="20201029 12:42:48.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.895" endtime="20201029 12:42:48.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.852" endtime="20201029 12:42:48.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.845" endtime="20201029 12:42:48.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:48.920" endtime="20201029 12:42:49.320"></status>
</kw>
<msg timestamp="20201029 12:42:49.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.673723431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 10.673733194, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:48.917" endtime="20201029 12:42:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.673723431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 10.673733194, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:49.332" endtime="20201029 12:42:49.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.356" endtime="20201029 12:42:49.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.909" endtime="20201029 12:42:49.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.904" endtime="20201029 12:42:49.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.375" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0749999999504212e-05}, {'diff': 9.999999999621423e-06}, {'diff': 1.6096999999604122e-05}, {'diff': 1.5040999999271776e-05}, {'diff': 1.5749999999314923e-05}, {'diff': 7.555999...</msg>
<status status="PASS" starttime="20201029 12:42:49.365" endtime="20201029 12:42:49.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.387" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0749999999504212e-05, 9.999999999621423e-06, 1.6096999999604122e-05, 1.5040999999271776e-05, 1.5749999999314923e-05, 7.555999999908636e-06, 8.459000000016204e-06, 8.443999998775098e-06,...</msg>
<status status="PASS" starttime="20201029 12:42:49.377" endtime="20201029 12:42:49.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.398" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:49.396" endtime="20201029 12:42:49.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.405" level="INFO">VALUE: [0, 1.0749999999504212e-05, 9.999999999621423e-06, 1.6096999999604122e-05, 1.5040999999271776e-05, 1.5749999999314923e-05, 7.555999999908636e-06, 8.459000000016204e-06, 8.443999998775098e-06, 1.4652000000836551e-05, 1.50140000005905e-05, 8.653000000080624e-06, 1.4207999999626963e-05, 9.778000000792986e-06, 0.5523906390000004, 1.4389000000392116e-05, 1.4401999999691384e-05, 1.5167000000815278e-05, 1.1860999999058208e-05, 9.042000000292205e-06, 8.665999999379892e-06, 1.3124999998836984e-05, 1.2999999999152578e-05, 1.590199999945696e-05, 1.545800000002373e-05, 8.263999999869043e-06, 1.3111999999537716e-05, 1.4570000001157268e-05, 1.1888999999598582e-05, 1.2347999998496562e-05, 1.1834000000376932e-05, 1.3236000000915737e-05, 1.119500000079654e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.319000000118649e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.665999999379892e-06, 0.561858333, 9.11100000067222e-06, 1.5110999999734531e-05, 1.5334000000422066e-05, 9.181000001134976e-06, 9.667000000490589e-06, 1.4903000000288102e-05, 1.3556000000747304e-05, 1.133300000155657e-05, 1.3514000000824922e-05, 1.3652999999891335e-05, 9.333000001277014e-06, 1.2111000000203376e-05, 6.597000000496678e-06, 1.1333999999862954e-05, 7.111000000392664e-06, 1.0666999999742188e-05, 9.22199999919826e-06, 9.443999999803054e-06, 1.0889000000346982e-05, 1.6221999999288528e-05, 1.2332999999031813e-05, 1.1999999999900979e-05, 9.055999999674214e-06, 9.694999999254605e-06]</msg>
<status status="PASS" starttime="20201029 12:42:49.401" endtime="20201029 12:42:49.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.389" endtime="20201029 12:42:49.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.840" endtime="20201029 12:42:49.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:48.838" endtime="20201029 12:42:49.409"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.431" endtime="20201029 12:42:49.447"></status>
</kw>
<msg timestamp="20201029 12:42:49.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.427" endtime="20201029 12:42:49.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.450" endtime="20201029 12:42:49.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.457" endtime="20201029 12:42:49.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.420" endtime="20201029 12:42:49.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.415" endtime="20201029 12:42:49.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.482" endtime="20201029 12:42:49.880"></status>
</kw>
<msg timestamp="20201029 12:42:49.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.226682139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 11.226695444, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:49.478" endtime="20201029 12:42:49.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.226682139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 11.226695444, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:49.892" endtime="20201029 12:42:49.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.915" endtime="20201029 12:42:49.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.471" endtime="20201029 12:42:49.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.466" endtime="20201029 12:42:49.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:49.934" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3111999999537716e-05}, {'diff': 1.4570000001157268e-05}, {'diff': 1.1888999999598582e-05}, {'diff': 1.2347999998496562e-05}, {'diff': 1.1834000000376932e-05}, {'diff': 1.32360...</msg>
<status status="PASS" starttime="20201029 12:42:49.924" endtime="20201029 12:42:49.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:49.951" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3111999999537716e-05, 1.4570000001157268e-05, 1.1888999999598582e-05, 1.2347999998496562e-05, 1.1834000000376932e-05, 1.3236000000915737e-05, 1.119500000079654e-05, 1.100000000064938e-0...</msg>
<status status="PASS" starttime="20201029 12:42:49.937" endtime="20201029 12:42:49.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.963" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:49.960" endtime="20201029 12:42:49.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:49.969" level="INFO">VALUE: [0, 1.3111999999537716e-05, 1.4570000001157268e-05, 1.1888999999598582e-05, 1.2347999998496562e-05, 1.1834000000376932e-05, 1.3236000000915737e-05, 1.119500000079654e-05, 1.100000000064938e-05, 9.999999999621423e-06, 9.319000000118649e-06, 9.22199999919826e-06, 1.1457999999464619e-05, 8.665999999379892e-06, 0.561858333, 9.11100000067222e-06, 1.5110999999734531e-05, 1.5334000000422066e-05, 9.181000001134976e-06, 9.667000000490589e-06, 1.4903000000288102e-05, 1.3556000000747304e-05, 1.133300000155657e-05, 1.3514000000824922e-05, 1.3652999999891335e-05, 9.333000001277014e-06, 1.2111000000203376e-05, 6.597000000496678e-06, 1.1333999999862954e-05, 7.111000000392664e-06, 1.0666999999742188e-05, 9.22199999919826e-06, 9.443999999803054e-06, 1.0889000000346982e-05, 1.6221999999288528e-05, 1.2332999999031813e-05, 1.1999999999900979e-05, 9.055999999674214e-06, 9.694999999254605e-06, 0.553012429999999, 1.4332999999311369e-05, 1.4596999999838545e-05, 1.1681000000152153e-05, 9.679999999789857e-06, 8.236000001105026e-06, 1.2222000000505773e-05, 1.4013999999562543e-05, 1.8000000000739647e-05, 5.6530000005494685e-06, 1.1209000000178548e-05, 7.889000000815827e-06, 1.709700000063208e-05, 1.1999999999900979e-05, 1.4332999999311369e-05, 6.665999999100336e-06, 7.028000000630641e-06, 1.1888999999598582e-05, 1.2181000000666131e-05, 1.5985999999301725e-05, 8.445000000634195e-06, 1.190199999889785e-05, 1.5111000001510888e-05, 1.344499999866855e-05, 1.3902999999260146e-05]</msg>
<status status="PASS" starttime="20201029 12:42:49.965" endtime="20201029 12:42:49.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.954" endtime="20201029 12:42:49.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.411" endtime="20201029 12:42:49.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.410" endtime="20201029 12:42:49.974"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:49.996" endtime="20201029 12:42:50.009"></status>
</kw>
<msg timestamp="20201029 12:42:50.010" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:49.992" endtime="20201029 12:42:50.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.013" endtime="20201029 12:42:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.020" endtime="20201029 12:42:50.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.984" endtime="20201029 12:42:50.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.979" endtime="20201029 12:42:50.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.045" endtime="20201029 12:42:50.440"></status>
</kw>
<msg timestamp="20201029 12:42:50.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.7891255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 11.789139306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:50.041" endtime="20201029 12:42:50.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 11.7891255, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 11.789139306, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:42:50.452" endtime="20201029 12:42:50.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.476" endtime="20201029 12:42:50.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.033" endtime="20201029 12:42:50.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.028" endtime="20201029 12:42:50.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:50.495" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2111000000203376e-05}, {'diff': 6.597000000496678e-06}, {'diff': 1.1333999999862954e-05}, {'diff': 7.111000000392664e-06}, {'diff': 1.0666999999742188e-05}, {'diff': 9.2219999...</msg>
<status status="PASS" starttime="20201029 12:42:50.485" endtime="20201029 12:42:50.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:50.508" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2111000000203376e-05, 6.597000000496678e-06, 1.1333999999862954e-05, 7.111000000392664e-06, 1.0666999999742188e-05, 9.22199999919826e-06, 9.443999999803054e-06, 1.0889000000346982e-05, ...</msg>
<status status="PASS" starttime="20201029 12:42:50.497" endtime="20201029 12:42:50.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.520" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:50.517" endtime="20201029 12:42:50.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.526" level="INFO">VALUE: [0, 1.2111000000203376e-05, 6.597000000496678e-06, 1.1333999999862954e-05, 7.111000000392664e-06, 1.0666999999742188e-05, 9.22199999919826e-06, 9.443999999803054e-06, 1.0889000000346982e-05, 1.6221999999288528e-05, 1.2332999999031813e-05, 1.1999999999900979e-05, 9.055999999674214e-06, 9.694999999254605e-06, 0.553012429999999, 1.4332999999311369e-05, 1.4596999999838545e-05, 1.1681000000152153e-05, 9.679999999789857e-06, 8.236000001105026e-06, 1.2222000000505773e-05, 1.4013999999562543e-05, 1.8000000000739647e-05, 5.6530000005494685e-06, 1.1209000000178548e-05, 7.889000000815827e-06, 1.709700000063208e-05, 1.1999999999900979e-05, 1.4332999999311369e-05, 6.665999999100336e-06, 7.028000000630641e-06, 1.1888999999598582e-05, 1.2181000000666131e-05, 1.5985999999301725e-05, 8.445000000634195e-06, 1.190199999889785e-05, 1.5111000001510888e-05, 1.344499999866855e-05, 1.3902999999260146e-05, 0.5512993890000004, 1.0778000000044585e-05, 1.1681000000152153e-05, 1.273600000040176e-05, 1.312500000061334e-05, 1.1347999999244962e-05, 1.3222000001533729e-05, 9.679999999789857e-06, 1.2028000000441352e-05, 1.1778000001072542e-05, 1.4541999998840538e-05, 1.0555999999439791e-05, 1.1236000000636182e-05, 1.190199999889785e-05, 1.5792000001013662e-05, 1.279099999962341e-05, 1.198600000051897e-05, 1.750000000022567e-05, 7.43000000014149e-06, 1.4763999999445332e-05, 1.1348000001021319e-05, 1.1888000001292198e-05, 1.3500000001442913e-05, 1.095799999895064e-05, 9.014000001528188e-06]</msg>
<status status="PASS" starttime="20201029 12:42:50.522" endtime="20201029 12:42:50.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.511" endtime="20201029 12:42:50.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.975" endtime="20201029 12:42:50.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:49.974" endtime="20201029 12:42:50.531"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.552" endtime="20201029 12:42:50.567"></status>
</kw>
<msg timestamp="20201029 12:42:50.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.549" endtime="20201029 12:42:50.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:50.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:50.570" endtime="20201029 12:42:50.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.577" endtime="20201029 12:42:50.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.541" endtime="20201029 12:42:50.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.536" endtime="20201029 12:42:50.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:50.602" endtime="20201029 12:42:51.002"></status>
</kw>
<msg timestamp="20201029 12:42:51.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.342719903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 12.342726028, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:50.599" endtime="20201029 12:42:51.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 12.342719903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 12.342726028, 'source': 'DUT_IC', 'event': '...</msg>
<status status="PASS" starttime="20201029 12:42:51.015" endtime="20201029 12:42:51.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.039" endtime="20201029 12:42:51.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.591" endtime="20201029 12:42:51.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.586" endtime="20201029 12:42:51.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.058" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.709700000063208e-05}, {'diff': 1.1999999999900979e-05}, {'diff': 1.4332999999311369e-05}, {'diff': 6.665999999100336e-06}, {'diff': 7.028000000630641e-06}, {'diff': 1.18889999...</msg>
<status status="PASS" starttime="20201029 12:42:51.048" endtime="20201029 12:42:51.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.070" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.709700000063208e-05, 1.1999999999900979e-05, 1.4332999999311369e-05, 6.665999999100336e-06, 7.028000000630641e-06, 1.1888999999598582e-05, 1.2181000000666131e-05, 1.5985999999301725e-05...</msg>
<status status="PASS" starttime="20201029 12:42:51.060" endtime="20201029 12:42:51.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.088" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:42:51.085" endtime="20201029 12:42:51.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.094" level="INFO">VALUE: [0, 1.709700000063208e-05, 1.1999999999900979e-05, 1.4332999999311369e-05, 6.665999999100336e-06, 7.028000000630641e-06, 1.1888999999598582e-05, 1.2181000000666131e-05, 1.5985999999301725e-05, 8.445000000634195e-06, 1.190199999889785e-05, 1.5111000001510888e-05, 1.344499999866855e-05, 1.3902999999260146e-05, 0.5512993890000004, 1.0778000000044585e-05, 1.1681000000152153e-05, 1.273600000040176e-05, 1.312500000061334e-05, 1.1347999999244962e-05, 1.3222000001533729e-05, 9.679999999789857e-06, 1.2028000000441352e-05, 1.1778000001072542e-05, 1.4541999998840538e-05, 1.0555999999439791e-05, 1.1236000000636182e-05, 1.190199999889785e-05, 1.5792000001013662e-05, 1.279099999962341e-05, 1.198600000051897e-05, 1.750000000022567e-05, 7.43000000014149e-06, 1.4763999999445332e-05, 1.1348000001021319e-05, 1.1888000001292198e-05, 1.3500000001442913e-05, 1.095799999895064e-05, 9.014000001528188e-06, 0.5456619299999996, 1.244499999941695e-05, 1.5375000000261707e-05, 1.1221999999477816e-05, 1.0679999999041456e-05, 1.372200000027135e-05, 1.600000000046009e-05, 1.7332999998842524e-05, 7.3199999999218335e-06, 1.233300000080817e-05, 1.5527000000403746e-05, 1.2221999998729416e-05, 5.3329999989415455e-06, 1.0778000000044585e-05, 1.4528000001234886e-05, 9.096999999513855e-06, 1.2568999999018615e-05, 1.304199999907496e-05, 1.2667000000021744e-05, 1.2680999999403753e-05, 7.444999999606239e-06, 1.3138999999995349e-05, 7.958000001195842e-06, 7.541999998750271e-06, 1.1610999999689398e-05]</msg>
<status status="PASS" starttime="20201029 12:42:51.090" endtime="20201029 12:42:51.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.078" endtime="20201029 12:42:51.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.532" endtime="20201029 12:42:51.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:50.531" endtime="20201029 12:42:51.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:39.767" endtime="20201029 12:42:51.099"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:36.901" endtime="20201029 12:42:51.101" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:42:51.121" endtime="20201029 12:42:51.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.116" endtime="20201029 12:42:51.148"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.192" endtime="20201029 12:42:51.212"></status>
</kw>
<msg timestamp="20201029 12:42:51.213" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.188" endtime="20201029 12:42:51.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.216" endtime="20201029 12:42:51.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:42:51.223" endtime="20201029 12:42:51.228"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.181" endtime="20201029 12:42:51.230"></status>
</kw>
<status status="FAIL" starttime="20201029 12:42:51.173" endtime="20201029 12:42:51.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.170" endtime="20201029 12:42:51.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:42:51.241" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:42:51.239" endtime="20201029 12:42:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.235" endtime="20201029 12:42:51.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.165" endtime="20201029 12:42:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.162" endtime="20201029 12:42:51.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.245" endtime="20201029 12:42:51.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.157" endtime="20201029 12:42:51.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.150" endtime="20201029 12:42:51.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.112" endtime="20201029 12:42:51.252"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.277" endtime="20201029 12:42:51.292"></status>
</kw>
<msg timestamp="20201029 12:42:51.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.274" endtime="20201029 12:42:51.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.296" endtime="20201029 12:42:51.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.302" endtime="20201029 12:42:51.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.266" endtime="20201029 12:42:51.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.261" endtime="20201029 12:42:51.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.328" endtime="20201029 12:42:51.700"></status>
</kw>
<msg timestamp="20201029 12:42:51.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147361417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147362958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.324" endtime="20201029 12:42:51.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147361417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147362958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.710" endtime="20201029 12:42:51.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.729" endtime="20201029 12:42:51.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.316" endtime="20201029 12:42:51.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.311" endtime="20201029 12:42:51.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:51.748" level="INFO">${RESULT} = [{'diff': 1.5409999999937973e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.500000000015378e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:51.740" endtime="20201029 12:42:51.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:51.758" level="INFO">${OVERHEAD} = {'diff': [1.5409999999937973e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.500000000015378e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:42:51.750" endtime="20201029 12:42:51.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.768" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:51.766" endtime="20201029 12:42:51.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.774" level="INFO">VALUE: [1.5409999999937973e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.500000000015378e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5409999999937973e-06, 1.514000000008009e-06, 1.541000000021553e-06, 1.541999999993271e-06, 1.5560000000136576e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.486000000022747e-06, 1.541999999993271e-06, 1.582999999999446e-06, 1.5420000000210266e-06, 1.5409999999937973e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.5979999999915506e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.555999999985902e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.541000000021553e-06, 1.5270000000011663e-06, 1.5139999999802534e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.500000000015378e-06, 1.52800000000064e-06, 1.5420000000210266e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201029 12:42:51.770" endtime="20201029 12:42:51.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.760" endtime="20201029 12:42:51.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.257" endtime="20201029 12:42:51.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.256" endtime="20201029 12:42:51.778"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.812" endtime="20201029 12:42:51.832"></status>
</kw>
<msg timestamp="20201029 12:42:51.833" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.803" endtime="20201029 12:42:51.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:51.842" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:51.836" endtime="20201029 12:42:51.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.848" endtime="20201029 12:42:51.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.795" endtime="20201029 12:42:51.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.785" endtime="20201029 12:42:51.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:51.875" endtime="20201029 12:42:52.252"></status>
</kw>
<msg timestamp="20201029 12:42:52.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147629208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:51.872" endtime="20201029 12:42:52.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.147627667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.147629208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.264" endtime="20201029 12:42:52.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.287" endtime="20201029 12:42:52.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.863" endtime="20201029 12:42:52.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.858" endtime="20201029 12:42:52.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.308" level="INFO">${RESULT} = [{'diff': 1.541000000021553e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5139999999802534e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.541999999993271e-06},...</msg>
<status status="PASS" starttime="20201029 12:42:52.298" endtime="20201029 12:42:52.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.319" level="INFO">${OVERHEAD} = {'diff': [1.541000000021553e-06, 1.5270000000011663e-06, 1.5139999999802534e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.50...</msg>
<status status="PASS" starttime="20201029 12:42:52.310" endtime="20201029 12:42:52.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.329" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:52.327" endtime="20201029 12:42:52.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.336" level="INFO">VALUE: [1.541000000021553e-06, 1.5270000000011663e-06, 1.5139999999802534e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5139999999802534e-06, 1.500000000015378e-06, 1.52800000000064e-06, 1.5420000000210266e-06, 1.5560000000136576e-06, 1.5549999999864283e-06, 1.52800000000064e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5280000000839067e-06, 1.5559999999581464e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5279999999728844e-06, 1.5000000000986446e-06, 1.5409999999382862e-06, 1.5970000000198326e-06, 1.5280000000839067e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.4860000000505025e-06, 1.5560000000691687e-06, 1.5140000000357645e-06, 1.4859999999394802e-06, 1.5420000000210266e-06, 1.5559999999581464e-06, 1.5419999999100042e-06, 1.5270000000011663e-06, 1.5419999999100042e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5549999999864283e-06, 1.4860000000505025e-06, 1.5419999999100042e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5419999999100042e-06, 1.5000000000986446e-06, 1.5419999999100042e-06, 1.5560000000691687e-06, 1.5970000000198326e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5279999999728844e-06, 1.4859999999394802e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5970000000198326e-06, 1.5279999999728844e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5410000000493085e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.331" endtime="20201029 12:42:52.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.321" endtime="20201029 12:42:52.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.780" endtime="20201029 12:42:52.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.779" endtime="20201029 12:42:52.342"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.363" endtime="20201029 12:42:52.378"></status>
</kw>
<msg timestamp="20201029 12:42:52.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.359" endtime="20201029 12:42:52.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.385" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.381" endtime="20201029 12:42:52.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.387" endtime="20201029 12:42:52.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.352" endtime="20201029 12:42:52.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.347" endtime="20201029 12:42:52.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.411" endtime="20201029 12:42:52.779"></status>
</kw>
<msg timestamp="20201029 12:42:52.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.673046875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.673048417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.408" endtime="20201029 12:42:52.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.673046875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.673048417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.792" endtime="20201029 12:42:52.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.815" endtime="20201029 12:42:52.819"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.400" endtime="20201029 12:42:52.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.396" endtime="20201029 12:42:52.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:52.835" level="INFO">${RESULT} = [{'diff': 1.5419999999100042e-06}, {'diff': 1.5560000000691687e-06}, {'diff': 1.5970000000198326e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.5409999999382862e-06}, {'diff': 1.5279999999728844e-...</msg>
<status status="PASS" starttime="20201029 12:42:52.824" endtime="20201029 12:42:52.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:52.848" level="INFO">${OVERHEAD} = {'diff': [1.5419999999100042e-06, 1.5560000000691687e-06, 1.5970000000198326e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5279999999728844e-06, 1.4859999999394802e-06, 1.5279999999728844e-06...</msg>
<status status="PASS" starttime="20201029 12:42:52.837" endtime="20201029 12:42:52.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.859" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:52.856" endtime="20201029 12:42:52.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.865" level="INFO">VALUE: [1.5419999999100042e-06, 1.5560000000691687e-06, 1.5970000000198326e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5279999999728844e-06, 1.4859999999394802e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5970000000198326e-06, 1.5279999999728844e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.583000000193735e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5409999998272639e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5140000000357645e-06, 1.5550000000974507e-06, 1.5280000000839067e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5550000000974507e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5270000000011663e-06, 1.5420000001320489e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5280000000839067e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5280000000839067e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5550000000974507e-06, 1.5419999999100042e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.4999999999876223e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5550000000974507e-06]</msg>
<status status="PASS" starttime="20201029 12:42:52.861" endtime="20201029 12:42:52.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.850" endtime="20201029 12:42:52.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.343" endtime="20201029 12:42:52.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.342" endtime="20201029 12:42:52.870"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.892" endtime="20201029 12:42:52.908"></status>
</kw>
<msg timestamp="20201029 12:42:52.909" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.889" endtime="20201029 12:42:52.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:52.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:52.911" endtime="20201029 12:42:52.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.918" endtime="20201029 12:42:52.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.881" endtime="20201029 12:42:52.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.876" endtime="20201029 12:42:52.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:52.943" endtime="20201029 12:42:53.339"></status>
</kw>
<msg timestamp="20201029 12:42:53.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.212794153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.212795681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:52.939" endtime="20201029 12:42:53.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.212794153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.212795681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.355" endtime="20201029 12:42:53.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.387" endtime="20201029 12:42:53.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.932" endtime="20201029 12:42:53.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.927" endtime="20201029 12:42:53.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.420" level="INFO">${RESULT} = [{'diff': 1.5280000000839067e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5280000000839067e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06...</msg>
<status status="PASS" starttime="20201029 12:42:53.402" endtime="20201029 12:42:53.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:53.437" level="INFO">${OVERHEAD} = {'diff': [1.5280000000839067e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5550000000974507e-06, 1.5419999999100042e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:53.423" endtime="20201029 12:42:53.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.453" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:53.449" endtime="20201029 12:42:53.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.462" level="INFO">VALUE: [1.5280000000839067e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5550000000974507e-06, 1.5419999999100042e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.4999999999876223e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5550000000974507e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5270000000011663e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5270000000011663e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5550000000974507e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.4999999999876223e-06, 1.5689999999235482e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.556000000180191e-06, 1.5280000000839067e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5550000000974507e-06, 1.556000000180191e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5689999999235482e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.5409999998272639e-06, 1.5410000000493085e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:42:53.457" endtime="20201029 12:42:53.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.440" endtime="20201029 12:42:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.872" endtime="20201029 12:42:53.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:52.871" endtime="20201029 12:42:53.470"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.502" endtime="20201029 12:42:53.520"></status>
</kw>
<msg timestamp="20201029 12:42:53.522" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.497" endtime="20201029 12:42:53.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.531" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:53.525" endtime="20201029 12:42:53.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.535" endtime="20201029 12:42:53.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.486" endtime="20201029 12:42:53.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.478" endtime="20201029 12:42:53.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.565" endtime="20201029 12:42:53.945"></status>
</kw>
<msg timestamp="20201029 12:42:53.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.733779486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.733781028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.561" endtime="20201029 12:42:53.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:53.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.733779486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.733781028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:53.957" endtime="20201029 12:42:53.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:53.980" endtime="20201029 12:42:53.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.552" endtime="20201029 12:42:53.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.547" endtime="20201029 12:42:53.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:53.999" level="INFO">${RESULT} = [{'diff': 1.5419999999100042e-06}, {'diff': 1.5550000000974507e-06}, {'diff': 1.556000000180191e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.527999999861862e-06...</msg>
<status status="PASS" starttime="20201029 12:42:53.989" endtime="20201029 12:42:54.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.011" level="INFO">${OVERHEAD} = {'diff': [1.5419999999100042e-06, 1.5550000000974507e-06, 1.556000000180191e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5689999999235482e-06, 1.5410000000493085e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:54.001" endtime="20201029 12:42:54.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.022" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:54.019" endtime="20201029 12:42:54.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.028" level="INFO">VALUE: [1.5419999999100042e-06, 1.5550000000974507e-06, 1.556000000180191e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5689999999235482e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.5409999998272639e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5409999996052193e-06, 1.5420000001320489e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.6249999998940723e-06, 1.5979999998805283e-06, 1.5410000000493085e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.6249999998940723e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.500000000209667e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.024" endtime="20201029 12:42:54.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.013" endtime="20201029 12:42:54.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.472" endtime="20201029 12:42:54.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:53.471" endtime="20201029 12:42:54.034"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.057" endtime="20201029 12:42:54.072"></status>
</kw>
<msg timestamp="20201029 12:42:54.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.053" endtime="20201029 12:42:54.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.076" endtime="20201029 12:42:54.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.082" endtime="20201029 12:42:54.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.046" endtime="20201029 12:42:54.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.039" endtime="20201029 12:42:54.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.114" endtime="20201029 12:42:54.505"></status>
</kw>
<msg timestamp="20201029 12:42:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.333787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.333789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.110" endtime="20201029 12:42:54.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.333787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.333789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.517" endtime="20201029 12:42:54.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.540" endtime="20201029 12:42:54.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.101" endtime="20201029 12:42:54.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.095" endtime="20201029 12:42:54.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:54.560" level="INFO">${RESULT} = [{'diff': 1.5280000003059513e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.6249999998940723e-06}, {'diff': 1.5420000001320489e-...</msg>
<status status="PASS" starttime="20201029 12:42:54.549" endtime="20201029 12:42:54.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:54.572" level="INFO">${OVERHEAD} = {'diff': [1.5280000003059513e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.6249999998940723e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06...</msg>
<status status="PASS" starttime="20201029 12:42:54.562" endtime="20201029 12:42:54.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.583" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:54.581" endtime="20201029 12:42:54.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.589" level="INFO">VALUE: [1.5280000003059513e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.6249999998940723e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.500000000209667e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5410000000493085e-06, 1.5560000004022356e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5129999999530241e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5560000004022356e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.527999999861862e-06, 1.596999999797788e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.4860000003835694e-06, 1.5269999997791217e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:42:54.586" endtime="20201029 12:42:54.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.575" endtime="20201029 12:42:54.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.035" endtime="20201029 12:42:54.594"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.034" endtime="20201029 12:42:54.595"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.617" endtime="20201029 12:42:54.631"></status>
</kw>
<msg timestamp="20201029 12:42:54.632" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.613" endtime="20201029 12:42:54.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:54.639" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:54.635" endtime="20201029 12:42:54.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.642" endtime="20201029 12:42:54.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.605" endtime="20201029 12:42:54.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.600" endtime="20201029 12:42:54.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:54.667" endtime="20201029 12:42:55.073"></status>
</kw>
<msg timestamp="20201029 12:42:55.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.877188944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.877190486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:54.663" endtime="20201029 12:42:55.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.877188944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.877190486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.085" endtime="20201029 12:42:55.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.108" endtime="20201029 12:42:55.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.656" endtime="20201029 12:42:55.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.651" endtime="20201029 12:42:55.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.127" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.4860000003835694e-...</msg>
<status status="PASS" starttime="20201029 12:42:55.117" endtime="20201029 12:42:55.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.144" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.4860000003835694e-06, 1.5269999997791217e-06, 1.5140000000357645e-06...</msg>
<status status="PASS" starttime="20201029 12:42:55.130" endtime="20201029 12:42:55.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.155" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:55.153" endtime="20201029 12:42:55.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.161" level="INFO">VALUE: [1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.4860000003835694e-06, 1.5269999997791217e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5829999999716904e-06, 1.5419999996879596e-06, 1.5979999998805283e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.6250000003381615e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.158" endtime="20201029 12:42:55.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.146" endtime="20201029 12:42:55.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.597" endtime="20201029 12:42:55.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:54.596" endtime="20201029 12:42:55.167"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.188" endtime="20201029 12:42:55.203"></status>
</kw>
<msg timestamp="20201029 12:42:55.204" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.185" endtime="20201029 12:42:55.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.211" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.207" endtime="20201029 12:42:55.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.213" endtime="20201029 12:42:55.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.177" endtime="20201029 12:42:55.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.172" endtime="20201029 12:42:55.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.238" endtime="20201029 12:42:55.626"></status>
</kw>
<msg timestamp="20201029 12:42:55.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.42709375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.427095292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:55.235" endtime="20201029 12:42:55.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.42709375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.427095292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:55.638" endtime="20201029 12:42:55.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.661" endtime="20201029 12:42:55.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.227" endtime="20201029 12:42:55.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.222" endtime="20201029 12:42:55.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:55.680" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.6250000003381615e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5550000003194953e-...</msg>
<status status="PASS" starttime="20201029 12:42:55.670" endtime="20201029 12:42:55.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:55.692" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.6250000003381615e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06,...</msg>
<status status="PASS" starttime="20201029 12:42:55.683" endtime="20201029 12:42:55.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.703" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:55.700" endtime="20201029 12:42:55.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.709" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.6250000003381615e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5839999996103415e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5689999997015036e-06, 1.6249999998940723e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5550000003194953e-06]</msg>
<status status="PASS" starttime="20201029 12:42:55.705" endtime="20201029 12:42:55.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.694" endtime="20201029 12:42:55.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.168" endtime="20201029 12:42:55.714"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.167" endtime="20201029 12:42:55.714"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.738" endtime="20201029 12:42:55.752"></status>
</kw>
<msg timestamp="20201029 12:42:55.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.733" endtime="20201029 12:42:55.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:55.760" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:55.756" endtime="20201029 12:42:55.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.763" endtime="20201029 12:42:55.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.725" endtime="20201029 12:42:55.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.720" endtime="20201029 12:42:55.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:55.789" endtime="20201029 12:42:56.192"></status>
</kw>
<msg timestamp="20201029 12:42:56.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.990702625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.990704167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:55.785" endtime="20201029 12:42:56.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.990702625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.990704167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.203" endtime="20201029 12:42:56.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.227" endtime="20201029 12:42:56.231"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.777" endtime="20201029 12:42:56.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.772" endtime="20201029 12:42:56.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.246" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5269999997791217e-...</msg>
<status status="PASS" starttime="20201029 12:42:56.236" endtime="20201029 12:42:56.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.259" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5829999999716904e-06, 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201029 12:42:56.248" endtime="20201029 12:42:56.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.270" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:56.267" endtime="20201029 12:42:56.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.276" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.4720000001133826e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.596999999797788e-06, 1.5140000000357645e-06, 1.5269999993350325e-06, 1.5699999993401548e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.527000000223211e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.58400000049852e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.272" endtime="20201029 12:42:56.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.261" endtime="20201029 12:42:56.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.716" endtime="20201029 12:42:56.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:55.715" endtime="20201029 12:42:56.291"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.313" endtime="20201029 12:42:56.329"></status>
</kw>
<msg timestamp="20201029 12:42:56.330" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.309" endtime="20201029 12:42:56.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.337" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.332" endtime="20201029 12:42:56.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.339" endtime="20201029 12:42:56.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.302" endtime="20201029 12:42:56.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.297" endtime="20201029 12:42:56.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.364" endtime="20201029 12:42:56.757"></status>
</kw>
<msg timestamp="20201029 12:42:56.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.53115075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531152292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:56.361" endtime="20201029 12:42:56.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.53115075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531152292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:56.769" endtime="20201029 12:42:56.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.792" endtime="20201029 12:42:56.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.353" endtime="20201029 12:42:56.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.348" endtime="20201029 12:42:56.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:56.812" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201029 12:42:56.801" endtime="20201029 12:42:56.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:56.825" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201029 12:42:56.814" endtime="20201029 12:42:56.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.836" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:56.833" endtime="20201029 12:42:56.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.842" level="INFO">VALUE: [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.596999999797788e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.4720000001133826e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5839999996103415e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.624999999449983e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.612000000150715e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5269999993350325e-06, 1.5000000006537562e-06]</msg>
<status status="PASS" starttime="20201029 12:42:56.838" endtime="20201029 12:42:56.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.827" endtime="20201029 12:42:56.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.293" endtime="20201029 12:42:56.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.292" endtime="20201029 12:42:56.847"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.869" endtime="20201029 12:42:56.885"></status>
</kw>
<msg timestamp="20201029 12:42:56.886" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.865" endtime="20201029 12:42:56.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:56.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:56.889" endtime="20201029 12:42:56.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.896" endtime="20201029 12:42:56.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.858" endtime="20201029 12:42:56.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.853" endtime="20201029 12:42:56.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:56.923" endtime="20201029 12:42:57.315"></status>
</kw>
<msg timestamp="20201029 12:42:57.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.096560347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.096561889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:56.919" endtime="20201029 12:42:57.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.096560347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.096561889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.327" endtime="20201029 12:42:57.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.350" endtime="20201029 12:42:57.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.911" endtime="20201029 12:42:57.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.905" endtime="20201029 12:42:57.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.370" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5409999996052193e-06}...</msg>
<status status="PASS" starttime="20201029 12:42:57.359" endtime="20201029 12:42:57.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.381" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:42:57.372" endtime="20201029 12:42:57.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.392" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:57.389" endtime="20201029 12:42:57.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.398" level="INFO">VALUE: [1.542000000576138e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5269999993350325e-06, 1.5000000006537562e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.6250000003381615e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.394" endtime="20201029 12:42:57.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.383" endtime="20201029 12:42:57.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.849" endtime="20201029 12:42:57.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:56.848" endtime="20201029 12:42:57.403"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.426" endtime="20201029 12:42:57.442"></status>
</kw>
<msg timestamp="20201029 12:42:57.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.422" endtime="20201029 12:42:57.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.451" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.446" endtime="20201029 12:42:57.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.454" endtime="20201029 12:42:57.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.414" endtime="20201029 12:42:57.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.409" endtime="20201029 12:42:57.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.481" endtime="20201029 12:42:57.877"></status>
</kw>
<msg timestamp="20201029 12:42:57.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.642597514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.642599069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.477" endtime="20201029 12:42:57.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.642597514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.642599069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:57.889" endtime="20201029 12:42:57.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.912" endtime="20201029 12:42:57.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.469" endtime="20201029 12:42:57.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.464" endtime="20201029 12:42:57.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:57.932" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5279999994177729e-0...</msg>
<status status="PASS" starttime="20201029 12:42:57.922" endtime="20201029 12:42:57.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:57.945" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06,...</msg>
<status status="PASS" starttime="20201029 12:42:57.935" endtime="20201029 12:42:57.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.957" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:57.954" endtime="20201029 12:42:57.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:57.963" level="INFO">VALUE: [1.554999999875406e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5269999993350325e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.4860000003835694e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 12:42:57.959" endtime="20201029 12:42:57.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.948" endtime="20201029 12:42:57.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.405" endtime="20201029 12:42:57.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.404" endtime="20201029 12:42:57.968"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:57.990" endtime="20201029 12:42:58.006"></status>
</kw>
<msg timestamp="20201029 12:42:58.008" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:57.987" endtime="20201029 12:42:58.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.014" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.010" endtime="20201029 12:42:58.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.017" endtime="20201029 12:42:58.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.979" endtime="20201029 12:42:58.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.974" endtime="20201029 12:42:58.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.042" endtime="20201029 12:42:58.447"></status>
</kw>
<msg timestamp="20201029 12:42:58.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.189606208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.18960775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:58.038" endtime="20201029 12:42:58.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.189606208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.18960775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:42:58.459" endtime="20201029 12:42:58.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.482" endtime="20201029 12:42:58.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.030" endtime="20201029 12:42:58.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.025" endtime="20201029 12:42:58.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:58.502" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5279999994177729e-0...</msg>
<status status="PASS" starttime="20201029 12:42:58.492" endtime="20201029 12:42:58.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:58.515" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5279999994177729e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:58.504" endtime="20201029 12:42:58.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.526" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:58.523" endtime="20201029 12:42:58.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.532" level="INFO">VALUE: [1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.513999999147586e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 12:42:58.528" endtime="20201029 12:42:58.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.517" endtime="20201029 12:42:58.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.970" endtime="20201029 12:42:58.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:57.969" endtime="20201029 12:42:58.537"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.559" endtime="20201029 12:42:58.574"></status>
</kw>
<msg timestamp="20201029 12:42:58.576" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.556" endtime="20201029 12:42:58.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:58.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:58.578" endtime="20201029 12:42:58.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.585" endtime="20201029 12:42:58.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.548" endtime="20201029 12:42:58.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.543" endtime="20201029 12:42:58.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:58.610" endtime="20201029 12:42:58.999"></status>
</kw>
<msg timestamp="20201029 12:42:59.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.742978625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.742980167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:58.606" endtime="20201029 12:42:59.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.742978625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.742980167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.012" endtime="20201029 12:42:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.035" endtime="20201029 12:42:59.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.598" endtime="20201029 12:42:59.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.593" endtime="20201029 12:42:59.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.055" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5279999994177729e-...</msg>
<status status="PASS" starttime="20201029 12:42:59.044" endtime="20201029 12:42:59.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.066" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.527000000223211e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:59.057" endtime="20201029 12:42:59.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.077" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:59.074" endtime="20201029 12:42:59.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.083" level="INFO">VALUE: [1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.5699999993401548e-06, 1.5140000000357645e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5129999999530241e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5000000006537562e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5129999999530241e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 12:42:59.079" endtime="20201029 12:42:59.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.068" endtime="20201029 12:42:59.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.539" endtime="20201029 12:42:59.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:58.538" endtime="20201029 12:42:59.088"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.110" endtime="20201029 12:42:59.127"></status>
</kw>
<msg timestamp="20201029 12:42:59.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.107" endtime="20201029 12:42:59.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.130" endtime="20201029 12:42:59.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.137" endtime="20201029 12:42:59.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.099" endtime="20201029 12:42:59.143"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.094" endtime="20201029 12:42:59.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.162" endtime="20201029 12:42:59.559"></status>
</kw>
<msg timestamp="20201029 12:42:59.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.302169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.302171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.159" endtime="20201029 12:42:59.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.302169917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.302171417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.571" endtime="20201029 12:42:59.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.594" endtime="20201029 12:42:59.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.151" endtime="20201029 12:42:59.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.146" endtime="20201029 12:42:59.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:42:59.613" level="INFO">${RESULT} = [{'diff': 1.5000000006537562e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 12:42:59.603" endtime="20201029 12:42:59.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:42:59.626" level="INFO">${OVERHEAD} = {'diff': [1.5000000006537562e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, ...</msg>
<status status="PASS" starttime="20201029 12:42:59.616" endtime="20201029 12:42:59.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.637" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:42:59.634" endtime="20201029 12:42:59.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.643" level="INFO">VALUE: [1.5000000006537562e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5129999999530241e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.4860000003835694e-06, 1.485999999495391e-06, 1.5140000000357645e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:42:59.639" endtime="20201029 12:42:59.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.628" endtime="20201029 12:42:59.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.090" endtime="20201029 12:42:59.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.089" endtime="20201029 12:42:59.649"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.670" endtime="20201029 12:42:59.686"></status>
</kw>
<msg timestamp="20201029 12:42:59.687" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.667" endtime="20201029 12:42:59.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:42:59.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:42:59.690" endtime="20201029 12:42:59.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.696" endtime="20201029 12:42:59.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.659" endtime="20201029 12:42:59.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.654" endtime="20201029 12:42:59.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:42:59.721" endtime="20201029 12:43:00.105"></status>
</kw>
<msg timestamp="20201029 12:43:00.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.845339347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.845340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:42:59.718" endtime="20201029 12:43:00.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.845339347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.845340903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.116" endtime="20201029 12:43:00.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.140" endtime="20201029 12:43:00.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.710" endtime="20201029 12:43:00.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.705" endtime="20201029 12:43:00.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.159" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.485999999495391e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.6110000000679747e-06...</msg>
<status status="PASS" starttime="20201029 12:43:00.149" endtime="20201029 12:43:00.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.176" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:43:00.161" endtime="20201029 12:43:00.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.187" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:00.185" endtime="20201029 12:43:00.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.193" level="INFO">VALUE: [1.5559999999581464e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5410000013815761e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.526999998446854e-06, 1.5410000013815761e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5560000008463248e-06, 1.526999998446854e-06, 1.4860000003835694e-06, 1.5839999996103415e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 12:43:00.189" endtime="20201029 12:43:00.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.178" endtime="20201029 12:43:00.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.650" endtime="20201029 12:43:00.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:59.649" endtime="20201029 12:43:00.198"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.220" endtime="20201029 12:43:00.235"></status>
</kw>
<msg timestamp="20201029 12:43:00.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.217" endtime="20201029 12:43:00.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.239" endtime="20201029 12:43:00.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.246" endtime="20201029 12:43:00.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.209" endtime="20201029 12:43:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.204" endtime="20201029 12:43:00.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.271" endtime="20201029 12:43:00.654"></status>
</kw>
<msg timestamp="20201029 12:43:00.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.392327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.392329278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.267" endtime="20201029 12:43:00.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.392327722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.392329278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:00.666" endtime="20201029 12:43:00.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.689" endtime="20201029 12:43:00.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.259" endtime="20201029 12:43:00.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.254" endtime="20201029 12:43:00.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:00.709" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.526999998446854e-06}, {'diff': 1.5410000013815761e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.555999999069968e-06...</msg>
<status status="PASS" starttime="20201029 12:43:00.698" endtime="20201029 12:43:00.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:00.720" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5409999996052193e-06, 1.526999998446854e-06, 1.5410000013815761e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:00.711" endtime="20201029 12:43:00.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.731" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:00.728" endtime="20201029 12:43:00.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.737" level="INFO">VALUE: [1.5560000008463248e-06, 1.5409999996052193e-06, 1.526999998446854e-06, 1.5410000013815761e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5560000008463248e-06, 1.526999998446854e-06, 1.4860000003835694e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.514000000923943e-06, 1.527000000223211e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5130000008412026e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.514000000923943e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.4579999998431958e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 12:43:00.733" endtime="20201029 12:43:00.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.722" endtime="20201029 12:43:00.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.200" endtime="20201029 12:43:00.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.199" endtime="20201029 12:43:00.742"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.764" endtime="20201029 12:43:00.783"></status>
</kw>
<msg timestamp="20201029 12:43:00.784" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.761" endtime="20201029 12:43:00.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:00.790" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:00.786" endtime="20201029 12:43:00.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.793" endtime="20201029 12:43:00.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.753" endtime="20201029 12:43:00.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.748" endtime="20201029 12:43:00.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:00.818" endtime="20201029 12:43:01.220"></status>
</kw>
<msg timestamp="20201029 12:43:01.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.9312165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.931217958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:00.814" endtime="20201029 12:43:01.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.9312165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.931217958, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:01.232" endtime="20201029 12:43:01.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.256" endtime="20201029 12:43:01.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.807" endtime="20201029 12:43:01.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.802" endtime="20201029 12:43:01.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.275" level="INFO">${RESULT} = [{'diff': 1.4579999998431958e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-...</msg>
<status status="PASS" starttime="20201029 12:43:01.265" endtime="20201029 12:43:01.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.288" level="INFO">${OVERHEAD} = {'diff': [1.4579999998431958e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 12:43:01.277" endtime="20201029 12:43:01.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.298" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:01.296" endtime="20201029 12:43:01.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.304" level="INFO">VALUE: [1.4579999998431958e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5969999989096095e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5129999990648457e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.62500000122634e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 12:43:01.301" endtime="20201029 12:43:01.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.290" endtime="20201029 12:43:01.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.744" endtime="20201029 12:43:01.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:00.743" endtime="20201029 12:43:01.316"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.338" endtime="20201029 12:43:01.354"></status>
</kw>
<msg timestamp="20201029 12:43:01.356" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.335" endtime="20201029 12:43:01.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.362" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.358" endtime="20201029 12:43:01.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.365" endtime="20201029 12:43:01.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.327" endtime="20201029 12:43:01.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.322" endtime="20201029 12:43:01.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.390" endtime="20201029 12:43:01.769"></status>
</kw>
<msg timestamp="20201029 12:43:01.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.466068, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.466069542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:01.386" endtime="20201029 12:43:01.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.466068, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.466069542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:01.781" endtime="20201029 12:43:01.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.803" endtime="20201029 12:43:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.378" endtime="20201029 12:43:01.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.373" endtime="20201029 12:43:01.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:01.821" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201029 12:43:01.812" endtime="20201029 12:43:01.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:01.835" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.62500000122634e-06, ...</msg>
<status status="PASS" starttime="20201029 12:43:01.824" endtime="20201029 12:43:01.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.852" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:01.850" endtime="20201029 12:43:01.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.867" level="INFO">VALUE: [1.5419999996879596e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.62500000122634e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5130000008412026e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.5420000014643165e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.4579999998431958e-06, 1.527000000223211e-06, 1.5420000014643165e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.526999998446854e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.472000001001561e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5700000002283332e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201029 12:43:01.857" endtime="20201029 12:43:01.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.839" endtime="20201029 12:43:01.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.318" endtime="20201029 12:43:01.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.317" endtime="20201029 12:43:01.873"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.897" endtime="20201029 12:43:01.912"></status>
</kw>
<msg timestamp="20201029 12:43:01.913" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.894" endtime="20201029 12:43:01.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:01.919" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:01.915" endtime="20201029 12:43:01.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.921" endtime="20201029 12:43:01.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.885" endtime="20201029 12:43:01.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.880" endtime="20201029 12:43:01.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:01.946" endtime="20201029 12:43:02.313"></status>
</kw>
<msg timestamp="20201029 12:43:02.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.028604736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.028606264, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 12:43:01.942" endtime="20201029 12:43:02.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.028604736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.028606264, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 12:43:02.325" endtime="20201029 12:43:02.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.347" endtime="20201029 12:43:02.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.935" endtime="20201029 12:43:02.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.930" endtime="20201029 12:43:02.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:02.365" level="INFO">${RESULT} = [{'diff': 1.5280000003059513e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5410000013815761e-0...</msg>
<status status="PASS" starttime="20201029 12:43:02.356" endtime="20201029 12:43:02.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:02.376" level="INFO">${OVERHEAD} = {'diff': [1.5280000003059513e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5700000002283332e-06, 1.5410000013815761e-06,...</msg>
<status status="PASS" starttime="20201029 12:43:02.367" endtime="20201029 12:43:02.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.386" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:43:02.384" endtime="20201029 12:43:02.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.392" level="INFO">VALUE: [1.5280000003059513e-06, 1.555999999069968e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5700000002283332e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.513999999147586e-06, 1.5410000013815761e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.514000000923943e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 12:43:02.388" endtime="20201029 12:43:02.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.378" endtime="20201029 12:43:02.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.876" endtime="20201029 12:43:02.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:01.874" endtime="20201029 12:43:02.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:42:51.254" endtime="20201029 12:43:02.397"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:42:51.106" endtime="20201029 12:43:02.399" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:02.416" endtime="20201029 12:43:02.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.412" endtime="20201029 12:43:02.439"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.475" endtime="20201029 12:43:02.493"></status>
</kw>
<msg timestamp="20201029 12:43:02.494" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.471" endtime="20201029 12:43:02.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.500" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.496" endtime="20201029 12:43:02.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.507" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:02.503" endtime="20201029 12:43:02.508"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.464" endtime="20201029 12:43:02.509"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:02.458" endtime="20201029 12:43:02.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.455" endtime="20201029 12:43:02.512"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:02.520" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:02.518" endtime="20201029 12:43:02.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.514" endtime="20201029 12:43:02.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.451" endtime="20201029 12:43:02.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.449" endtime="20201029 12:43:02.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.523" endtime="20201029 12:43:02.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.445" endtime="20201029 12:43:02.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.441" endtime="20201029 12:43:02.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.410" endtime="20201029 12:43:02.530"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.553" endtime="20201029 12:43:02.576"></status>
</kw>
<msg timestamp="20201029 12:43:02.577" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.549" endtime="20201029 12:43:02.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.583" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:02.579" endtime="20201029 12:43:02.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.585" endtime="20201029 12:43:02.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.542" endtime="20201029 12:43:02.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.536" endtime="20201029 12:43:02.593"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.598" endtime="20201029 12:43:02.602"></status>
</kw>
<msg timestamp="20201029 12:43:02.603" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:02.595" endtime="20201029 12:43:02.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.613" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:02.611" endtime="20201029 12:43:02.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.618" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:02.616" endtime="20201029 12:43:02.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.605" endtime="20201029 12:43:02.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.630" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:02.628" endtime="20201029 12:43:02.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:02.634" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:02.632" endtime="20201029 12:43:02.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.622" endtime="20201029 12:43:02.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:02.655" endtime="20201029 12:43:02.998"></status>
</kw>
<msg timestamp="20201029 12:43:03.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130112278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130116597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:02.652" endtime="20201029 12:43:03.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130112278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130116597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.007" endtime="20201029 12:43:03.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.026" endtime="20201029 12:43:03.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.645" endtime="20201029 12:43:03.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.640" endtime="20201029 12:43:03.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.043" level="INFO">${RESULT} = [{'diff': 4.319000000002626e-06}, {'diff': 4.500000000018378e-06}, {'diff': 4.4720000000053606e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.471999999977605e-06}, {'diff': 4.485999999997992e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:03.035" endtime="20201029 12:43:03.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.053" level="INFO">${OVERHEAD} = {'diff': [4.319000000002626e-06, 4.500000000018378e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.485...</msg>
<status status="PASS" starttime="20201029 12:43:03.045" endtime="20201029 12:43:03.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.064" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:03.062" endtime="20201029 12:43:03.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.069" level="INFO">VALUE: [4.319000000002626e-06, 4.500000000018378e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.485999999997992e-06, 4.555999999988902e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.473000000004834e-06, 4.486999999997465e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.445000000019572e-06, 4.513999999983254e-06, 4.458999999984448e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.499999999990623e-06, 4.486000000025747e-06, 4.485999999997992e-06, 4.430999999999186e-06, 4.499999999990623e-06, 4.514000000011009e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.429999999999712e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06]</msg>
<status status="PASS" starttime="20201029 12:43:03.066" endtime="20201029 12:43:03.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.055" endtime="20201029 12:43:03.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:02.531" endtime="20201029 12:43:03.074"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:02.403" endtime="20201029 12:43:03.076" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.095" endtime="20201029 12:43:03.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.089" endtime="20201029 12:43:03.119"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.152" endtime="20201029 12:43:03.170"></status>
</kw>
<msg timestamp="20201029 12:43:03.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.149" endtime="20201029 12:43:03.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.178" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.174" endtime="20201029 12:43:03.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.185" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:03.180" endtime="20201029 12:43:03.185"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.142" endtime="20201029 12:43:03.187"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.135" endtime="20201029 12:43:03.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.132" endtime="20201029 12:43:03.190"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:03.197" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:03.196" endtime="20201029 12:43:03.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.191" endtime="20201029 12:43:03.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.131" endtime="20201029 12:43:03.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.129" endtime="20201029 12:43:03.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.201" endtime="20201029 12:43:03.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.125" endtime="20201029 12:43:03.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.120" endtime="20201029 12:43:03.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.087" endtime="20201029 12:43:03.208"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.230" endtime="20201029 12:43:03.311"></status>
</kw>
<msg timestamp="20201029 12:43:03.312" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.227" endtime="20201029 12:43:03.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.318" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.314" endtime="20201029 12:43:03.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.321" endtime="20201029 12:43:03.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.220" endtime="20201029 12:43:03.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.214" endtime="20201029 12:43:03.328"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.333" endtime="20201029 12:43:03.338"></status>
</kw>
<msg timestamp="20201029 12:43:03.339" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:03.329" endtime="20201029 12:43:03.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.351" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:03.346" endtime="20201029 12:43:03.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.355" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:03.353" endtime="20201029 12:43:03.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.340" endtime="20201029 12:43:03.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.367" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:03.365" endtime="20201029 12:43:03.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.371" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:03.369" endtime="20201029 12:43:03.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.359" endtime="20201029 12:43:03.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.391" endtime="20201029 12:43:03.737"></status>
</kw>
<msg timestamp="20201029 12:43:03.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129971986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130013042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.387" endtime="20201029 12:43:03.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129971986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130013042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:03.746" endtime="20201029 12:43:03.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.765" endtime="20201029 12:43:03.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.380" endtime="20201029 12:43:03.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.375" endtime="20201029 12:43:03.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:03.782" level="INFO">${RESULT} = [{'diff': 4.105599999998377e-05}, {'diff': 4.0957999999979844e-05}, {'diff': 4.092999999999458e-05}, {'diff': 4.094400000001497e-05}, {'diff': 4.0944999999986686e-05}, {'diff': 4.0944999999986686e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:03.773" endtime="20201029 12:43:03.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:03.791" level="INFO">${OVERHEAD} = {'diff': [4.105599999998377e-05, 4.0957999999979844e-05, 4.092999999999458e-05, 4.094400000001497e-05, 4.0944999999986686e-05, 4.0944999999986686e-05, 4.097200000000023e-05, 4.0917000000001424e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:43:03.784" endtime="20201029 12:43:03.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.804" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:03.800" endtime="20201029 12:43:03.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.809" level="INFO">VALUE: [4.105599999998377e-05, 4.0957999999979844e-05, 4.092999999999458e-05, 4.094400000001497e-05, 4.0944999999986686e-05, 4.0944999999986686e-05, 4.097200000000023e-05, 4.0917000000001424e-05, 4.088900000001616e-05, 4.09580000000076e-05, 4.094400000001497e-05, 4.09580000000076e-05, 4.093100000002181e-05, 4.094399999998721e-05, 4.092999999999458e-05, 4.0903000000008793e-05, 4.094400000001497e-05, 4.0944999999986686e-05, 4.094500000001444e-05, 4.0957999999979844e-05, 4.09580000000076e-05, 4.0861000000003145e-05, 4.092999999999458e-05, 4.0944999999986686e-05, 4.094399999998721e-05, 4.092999999999458e-05, 4.09580000000076e-05, 4.095900000000707e-05, 4.097200000000023e-05, 4.094500000001444e-05, 4.093000000002234e-05, 4.0944999999986686e-05, 4.092999999999458e-05, 4.094500000001444e-05, 4.097200000000023e-05, 4.0957999999979844e-05, 4.0957999999979844e-05, 4.097200000000023e-05, 4.094399999998721e-05, 4.09580000000076e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.0972999999999704e-05, 4.0957999999979844e-05, 4.095900000000707e-05, 4.097200000000023e-05, 4.094500000001444e-05, 4.0917000000001424e-05, 4.093000000002234e-05, 4.094400000001497e-05]</msg>
<status status="PASS" starttime="20201029 12:43:03.806" endtime="20201029 12:43:03.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.793" endtime="20201029 12:43:03.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.209" endtime="20201029 12:43:03.813"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:03.080" endtime="20201029 12:43:03.815" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:03.833" endtime="20201029 12:43:03.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.829" endtime="20201029 12:43:03.856"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.889" endtime="20201029 12:43:03.907"></status>
</kw>
<msg timestamp="20201029 12:43:03.909" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.886" endtime="20201029 12:43:03.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.915" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.911" endtime="20201029 12:43:03.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:03.922" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:03.917" endtime="20201029 12:43:03.922"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.879" endtime="20201029 12:43:03.924"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:03.872" endtime="20201029 12:43:03.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.869" endtime="20201029 12:43:03.927"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:03.934" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:03.933" endtime="20201029 12:43:03.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.928" endtime="20201029 12:43:03.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.868" endtime="20201029 12:43:03.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.866" endtime="20201029 12:43:03.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.938" endtime="20201029 12:43:03.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.862" endtime="20201029 12:43:03.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.857" endtime="20201029 12:43:03.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.826" endtime="20201029 12:43:03.945"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:03.969" endtime="20201029 12:43:04.205"></status>
</kw>
<msg timestamp="20201029 12:43:04.206" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:03.964" endtime="20201029 12:43:04.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.213" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.209" endtime="20201029 12:43:04.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.215" endtime="20201029 12:43:04.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.957" endtime="20201029 12:43:04.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.951" endtime="20201029 12:43:04.222"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.226" endtime="20201029 12:43:04.232"></status>
</kw>
<msg timestamp="20201029 12:43:04.233" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:04.224" endtime="20201029 12:43:04.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.243" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:04.241" endtime="20201029 12:43:04.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.248" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:04.246" endtime="20201029 12:43:04.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.235" endtime="20201029 12:43:04.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.260" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:04.257" endtime="20201029 12:43:04.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.264" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:04.262" endtime="20201029 12:43:04.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.251" endtime="20201029 12:43:04.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.283" endtime="20201029 12:43:04.650"></status>
</kw>
<msg timestamp="20201029 12:43:04.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133641083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133720319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.280" endtime="20201029 12:43:04.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.133641083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.133720319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:04.659" endtime="20201029 12:43:04.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.677" endtime="20201029 12:43:04.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.273" endtime="20201029 12:43:04.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.268" endtime="20201029 12:43:04.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:04.694" level="INFO">${RESULT} = [{'diff': 7.92360000000103e-05}, {'diff': 7.870800000001066e-05}, {'diff': 7.86110000000062e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.86110000000062e-05}, {'diff': 7.836099999999901e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:04.685" endtime="20201029 12:43:04.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:04.709" level="INFO">${OVERHEAD} = {'diff': [7.92360000000103e-05, 7.870800000001066e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.836099999999901e-05, 7.863899999999147e-05, 7.859700000001357e-05, 7.8624999...</msg>
<status status="PASS" starttime="20201029 12:43:04.696" endtime="20201029 12:43:04.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.720" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:04.718" endtime="20201029 12:43:04.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.726" level="INFO">VALUE: [7.92360000000103e-05, 7.870800000001066e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.836099999999901e-05, 7.863899999999147e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.865300000001185e-05, 7.86110000000062e-05, 7.861099999997845e-05, 7.836099999999901e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.863900000001922e-05, 7.863899999999147e-05, 7.866600000000501e-05, 7.865300000001185e-05, 7.862499999999883e-05, 7.833399999998547e-05, 7.863900000001922e-05, 7.862499999999883e-05, 7.861200000000568e-05, 7.863899999999147e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.838900000001203e-05, 7.863899999999147e-05, 7.862499999999883e-05, 7.861199999997792e-05, 7.867999999999764e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.867999999999764e-05, 7.82910000000081e-05, 7.862499999999883e-05, 7.859700000001357e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.834700000003414e-05, 7.865199999995687e-05, 7.868100000002487e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.862499999999883e-05]</msg>
<status status="PASS" starttime="20201029 12:43:04.723" endtime="20201029 12:43:04.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.711" endtime="20201029 12:43:04.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:03.946" endtime="20201029 12:43:04.732"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:03.820" endtime="20201029 12:43:04.734" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:04.756" endtime="20201029 12:43:04.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.752" endtime="20201029 12:43:04.782"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.829" endtime="20201029 12:43:04.849"></status>
</kw>
<msg timestamp="20201029 12:43:04.850" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.825" endtime="20201029 12:43:04.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.852" endtime="20201029 12:43:04.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:04.859" endtime="20201029 12:43:04.865"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.816" endtime="20201029 12:43:04.867"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:04.806" endtime="20201029 12:43:04.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.802" endtime="20201029 12:43:04.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:04.878" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:04.876" endtime="20201029 12:43:04.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.871" endtime="20201029 12:43:04.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.800" endtime="20201029 12:43:04.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.797" endtime="20201029 12:43:04.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.882" endtime="20201029 12:43:04.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.791" endtime="20201029 12:43:04.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.785" endtime="20201029 12:43:04.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.749" endtime="20201029 12:43:04.889"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.916" endtime="20201029 12:43:04.942"></status>
</kw>
<msg timestamp="20201029 12:43:04.943" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.912" endtime="20201029 12:43:04.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.949" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:04.945" endtime="20201029 12:43:04.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.952" endtime="20201029 12:43:04.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.902" endtime="20201029 12:43:04.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.896" endtime="20201029 12:43:04.959"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:04.964" endtime="20201029 12:43:04.969"></status>
</kw>
<msg timestamp="20201029 12:43:04.971" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:04.961" endtime="20201029 12:43:04.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.982" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:04.979" endtime="20201029 12:43:04.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:04.987" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:04.985" endtime="20201029 12:43:04.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.973" endtime="20201029 12:43:04.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.000" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:04.997" endtime="20201029 12:43:05.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.005" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:05.002" endtime="20201029 12:43:05.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.991" endtime="20201029 12:43:05.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.025" endtime="20201029 12:43:05.411"></status>
</kw>
<msg timestamp="20201029 12:43:05.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.153785111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153786486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.022" endtime="20201029 12:43:05.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.153785111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153786486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.422" endtime="20201029 12:43:05.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.443" endtime="20201029 12:43:05.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.014" endtime="20201029 12:43:05.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.009" endtime="20201029 12:43:05.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:05.468" level="INFO">${RESULT} = [{'diff': 1.3749999999979057e-06}, {'diff': 1.3610000000052747e-06}, {'diff': 1.346999999984888e-06}, {'diff': 1.346999999984888e-06}, {'diff': 1.346999999984888e-06}, {'diff': 1.3199999999990997e-06}...</msg>
<status status="PASS" starttime="20201029 12:43:05.455" endtime="20201029 12:43:05.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:05.484" level="INFO">${OVERHEAD} = {'diff': [1.3749999999979057e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3199999999990997e-06, 1.346999999984888e-06, 1.360999999977519e-06, 1.3...</msg>
<status status="PASS" starttime="20201029 12:43:05.471" endtime="20201029 12:43:05.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.500" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:43:05.497" endtime="20201029 12:43:05.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.508" level="INFO">VALUE: [1.3749999999979057e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3199999999990997e-06, 1.346999999984888e-06, 1.360999999977519e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.360999999977519e-06, 1.3339999999917307e-06, 1.360999999977519e-06, 1.3339999999917307e-06, 1.3479999999843617e-06, 1.3749999999979057e-06, 1.346999999984888e-06, 1.4030000000109233e-06, 1.3749999999979057e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.3330000000200126e-06, 1.346999999984888e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.3060000000064687e-06, 1.3199999999990997e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.3480000000121173e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3620000000047483e-06, 1.3470000000126436e-06, 1.360999999977519e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.360999999977519e-06, 1.3889999999905367e-06, 1.3479999999843617e-06, 1.3480000000121173e-06, 1.3610000000052747e-06, 1.3339999999917307e-06, 1.3339999999917307e-06, 1.3610000000052747e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.3340000000194863e-06, 1.3470000000126436e-06, 1.2909999999866084e-06]</msg>
<status status="PASS" starttime="20201029 12:43:05.504" endtime="20201029 12:43:05.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.486" endtime="20201029 12:43:05.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:04.891" endtime="20201029 12:43:05.512"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:04.740" endtime="20201029 12:43:05.514" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:05.533" endtime="20201029 12:43:05.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.529" endtime="20201029 12:43:05.558"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.594" endtime="20201029 12:43:05.613"></status>
</kw>
<msg timestamp="20201029 12:43:05.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.590" endtime="20201029 12:43:05.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.621" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.617" endtime="20201029 12:43:05.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.628" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:05.624" endtime="20201029 12:43:05.629"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:05.582" endtime="20201029 12:43:05.631"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:05.575" endtime="20201029 12:43:05.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.572" endtime="20201029 12:43:05.633"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:05.642" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:05.640" endtime="20201029 12:43:05.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.635" endtime="20201029 12:43:05.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.571" endtime="20201029 12:43:05.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.569" endtime="20201029 12:43:05.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.646" endtime="20201029 12:43:05.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.564" endtime="20201029 12:43:05.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.559" endtime="20201029 12:43:05.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.526" endtime="20201029 12:43:05.653"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.680" endtime="20201029 12:43:05.763"></status>
</kw>
<msg timestamp="20201029 12:43:05.764" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.676" endtime="20201029 12:43:05.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.771" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:05.767" endtime="20201029 12:43:05.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.774" endtime="20201029 12:43:05.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.668" endtime="20201029 12:43:05.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.660" endtime="20201029 12:43:05.781"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.786" endtime="20201029 12:43:05.791"></status>
</kw>
<msg timestamp="20201029 12:43:05.792" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:05.783" endtime="20201029 12:43:05.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.804" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:05.801" endtime="20201029 12:43:05.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.808" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:05.806" endtime="20201029 12:43:05.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.795" endtime="20201029 12:43:05.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.821" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:05.819" endtime="20201029 12:43:05.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:05.826" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:05.824" endtime="20201029 12:43:05.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.812" endtime="20201029 12:43:05.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:05.847" endtime="20201029 12:43:06.230"></status>
</kw>
<msg timestamp="20201029 12:43:06.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140925069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:05.843" endtime="20201029 12:43:06.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140925069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140939347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.243" endtime="20201029 12:43:06.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.264" endtime="20201029 12:43:06.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.835" endtime="20201029 12:43:06.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.830" endtime="20201029 12:43:06.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:06.282" level="INFO">${RESULT} = [{'diff': 1.4278000000006452e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4249999999993435e-05}, {'diff': 1.4277000000006979e-05}, {'diff': 1.4236000000000804e-05}, {'diff': 1.4278000000006452e-...</msg>
<status status="PASS" starttime="20201029 12:43:06.273" endtime="20201029 12:43:06.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:06.294" level="INFO">${OVERHEAD} = {'diff': [1.4278000000006452e-05, 1.4278000000006452e-05, 1.4249999999993435e-05, 1.4277000000006979e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4278000000006452e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:06.285" endtime="20201029 12:43:06.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.307" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:43:06.304" endtime="20201029 12:43:06.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.312" level="INFO">VALUE: [1.4278000000006452e-05, 1.4278000000006452e-05, 1.4249999999993435e-05, 1.4277000000006979e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4278000000006452e-05, 1.4276999999979223e-05, 1.4264000000013821e-05, 1.4264000000013821e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4333000000005258e-05, 1.4291999999999083e-05, 1.4277999999978697e-05, 1.4278000000006452e-05, 1.4263999999986066e-05, 1.4236000000000804e-05, 1.4277999999978697e-05, 1.434699999999789e-05, 1.4263999999986066e-05, 1.4278000000006452e-05, 1.4277999999978697e-05, 1.4263999999986066e-05, 1.436099999999052e-05, 1.4291999999999083e-05, 1.4277000000006979e-05, 1.4263999999986066e-05, 1.4263999999986066e-05, 1.429099999999961e-05, 1.4276999999979223e-05, 1.43200000000121e-05, 1.4291999999999083e-05, 1.4291999999999083e-05, 1.4264000000013821e-05, 1.4278000000006452e-05, 1.4264000000013821e-05, 1.4264000000013821e-05, 1.4277000000006979e-05, 1.4249999999993435e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4263999999986066e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4318999999984872e-05, 1.4249999999993435e-05, 1.430499999999224e-05]</msg>
<status status="PASS" starttime="20201029 12:43:06.309" endtime="20201029 12:43:06.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.296" endtime="20201029 12:43:06.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:05.655" endtime="20201029 12:43:06.317"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:05.519" endtime="20201029 12:43:06.318" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:06.356" endtime="20201029 12:43:06.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.349" endtime="20201029 12:43:06.383"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.435" endtime="20201029 12:43:06.459"></status>
</kw>
<msg timestamp="20201029 12:43:06.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.430" endtime="20201029 12:43:06.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.464" endtime="20201029 12:43:06.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.481" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:06.474" endtime="20201029 12:43:06.482"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:06.419" endtime="20201029 12:43:06.486"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:06.409" endtime="20201029 12:43:06.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.405" endtime="20201029 12:43:06.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:06.504" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:06.501" endtime="20201029 12:43:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.494" endtime="20201029 12:43:06.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.402" endtime="20201029 12:43:06.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.399" endtime="20201029 12:43:06.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.512" endtime="20201029 12:43:06.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.392" endtime="20201029 12:43:06.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.386" endtime="20201029 12:43:06.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.345" endtime="20201029 12:43:06.524"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.554" endtime="20201029 12:43:06.795"></status>
</kw>
<msg timestamp="20201029 12:43:06.797" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.549" endtime="20201029 12:43:06.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.803" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:06.799" endtime="20201029 12:43:06.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.806" endtime="20201029 12:43:06.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.541" endtime="20201029 12:43:06.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.533" endtime="20201029 12:43:06.813"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.818" endtime="20201029 12:43:06.823"></status>
</kw>
<msg timestamp="20201029 12:43:06.824" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 12:43:06.815" endtime="20201029 12:43:06.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.836" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:43:06.833" endtime="20201029 12:43:06.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.841" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:43:06.838" endtime="20201029 12:43:06.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.826" endtime="20201029 12:43:06.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.857" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:43:06.853" endtime="20201029 12:43:06.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:06.863" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:43:06.860" endtime="20201029 12:43:06.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.845" endtime="20201029 12:43:06.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:06.888" endtime="20201029 12:43:07.237"></status>
</kw>
<msg timestamp="20201029 12:43:07.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.195922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.195949639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:06.883" endtime="20201029 12:43:07.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.195922167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.195949639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:07.248" endtime="20201029 12:43:07.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.267" endtime="20201029 12:43:07.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.875" endtime="20201029 12:43:07.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.869" endtime="20201029 12:43:07.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:07.285" level="INFO">${RESULT} = [{'diff': 2.7472000000000607e-05}, {'diff': 2.747300000000008e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.745900000000745e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7500000000013625e-05...</msg>
<status status="PASS" starttime="20201029 12:43:07.276" endtime="20201029 12:43:07.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:43:07.296" level="INFO">${OVERHEAD} = {'diff': [2.7472000000000607e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.745900000000745e-05, 2.7472000000000607e-05, 2.7500000000013625e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:07.287" endtime="20201029 12:43:07.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.307" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:43:07.305" endtime="20201029 12:43:07.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.313" level="INFO">VALUE: [2.7472000000000607e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.745900000000745e-05, 2.7472000000000607e-05, 2.7500000000013625e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.7500000000013625e-05, 2.749999999998587e-05, 2.7485999999993238e-05, 2.7472000000000607e-05, 2.7485999999993238e-05, 2.7486999999992712e-05, 2.7472000000028363e-05, 2.7472000000028363e-05, 2.745799999998022e-05, 2.745899999995194e-05, 2.7485999999965482e-05, 2.7485999999965482e-05, 2.7500000000013625e-05, 2.747300000000008e-05, 2.7499999999958114e-05, 2.745799999998022e-05, 2.747199999997285e-05, 2.747300000000008e-05, 2.7486000000020994e-05, 2.7486000000020994e-05, 2.747300000000008e-05, 2.7472000000028363e-05, 2.7486999999992712e-05, 2.7514000000006256e-05, 2.7472000000028363e-05, 2.747199999997285e-05, 2.747199999997285e-05, 2.7486000000020994e-05, 2.7486000000020994e-05, 2.7403000000036926e-05, 2.7486000000020994e-05, 2.7485999999965482e-05, 2.747199999997285e-05, 2.7486000000020994e-05, 2.7472000000028363e-05, 2.747199999997285e-05, 2.7472000000028363e-05, 2.7472000000028363e-05, 2.745799999998022e-05, 2.7541999999991518e-05, 2.7485999999965482e-05, 2.7514000000006256e-05]</msg>
<status status="PASS" starttime="20201029 12:43:07.310" endtime="20201029 12:43:07.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.298" endtime="20201029 12:43:07.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:06.526" endtime="20201029 12:43:07.317"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:06.336" endtime="20201029 12:43:07.318" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:07.335" endtime="20201029 12:43:07.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.331" endtime="20201029 12:43:07.359"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.393" endtime="20201029 12:43:07.413"></status>
</kw>
<msg timestamp="20201029 12:43:07.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.390" endtime="20201029 12:43:07.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:07.416" endtime="20201029 12:43:07.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.427" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:07.423" endtime="20201029 12:43:07.428"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.382" endtime="20201029 12:43:07.430"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:07.376" endtime="20201029 12:43:07.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.373" endtime="20201029 12:43:07.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:07.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:07.438" endtime="20201029 12:43:07.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.434" endtime="20201029 12:43:07.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.371" endtime="20201029 12:43:07.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.369" endtime="20201029 12:43:07.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:07.444" endtime="20201029 12:43:07.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.365" endtime="20201029 12:43:07.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.361" endtime="20201029 12:43:07.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.329" endtime="20201029 12:43:07.451"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:07.460" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:07.476" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:08.360" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:07.456" endtime="20201029 12:43:08.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.373" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:43:08.363" endtime="20201029 12:43:11.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:07.452" endtime="20201029 12:43:11.376"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.395" endtime="20201029 12:43:11.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.380" endtime="20201029 12:43:11.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.441" endtime="20201029 12:43:11.452"></status>
</kw>
<msg timestamp="20201029 12:43:11.453" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.438" endtime="20201029 12:43:11.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.460" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.456" endtime="20201029 12:43:11.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.462" endtime="20201029 12:43:11.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.430" endtime="20201029 12:43:11.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.425" endtime="20201029 12:43:11.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.496" endtime="20201029 12:43:11.852"></status>
</kw>
<msg timestamp="20201029 12:43:11.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037069889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037071431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:11.493" endtime="20201029 12:43:11.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037069889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037071431, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:11.861" endtime="20201029 12:43:11.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.880" endtime="20201029 12:43:11.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.485" endtime="20201029 12:43:11.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.480" endtime="20201029 12:43:11.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:11.896" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 4.540999999996798e-06}, {'diff': 4.55600000000278e-06}, {'diff': 4.569999999995411e-06}, {'diff': 4.555000000003306e-06}, {'diff': 4.55600000000278e-06}, {'diff': 4.570000000002...</msg>
<status status="PASS" starttime="20201029 12:43:11.888" endtime="20201029 12:43:11.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:11.906" level="INFO">${RESULT} = {'diff': [0, 4.540999999996798e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.55600000000278e-06, 4.57000000000235e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.5560...</msg>
<status status="PASS" starttime="20201029 12:43:11.898" endtime="20201029 12:43:11.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.917" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:11.915" endtime="20201029 12:43:11.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.922" level="INFO">VALUE: [0, 4.540999999996798e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.55600000000278e-06, 4.57000000000235e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.582999999995507e-06, 4.569000000002876e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.541999999996271e-06, 4.569000000002876e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.5410000000037365e-06, 4.555999999995841e-06, 4.54200000000321e-06, 4.5549999999963675e-06, 4.57000000000235e-06, 4.5549999999963675e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.555000000003306e-06, 4.54200000000321e-06, 4.569000000002876e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.541999999996271e-06, 4.55600000000278e-06, 4.624999999994217e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.597000000002016e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.57000000000235e-06, 4.569999999995411e-06]</msg>
<status status="PASS" starttime="20201029 12:43:11.919" endtime="20201029 12:43:11.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.908" endtime="20201029 12:43:11.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.420" endtime="20201029 12:43:11.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.379" endtime="20201029 12:43:11.927"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:11.933" endtime="20201029 12:43:11.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.929" endtime="20201029 12:43:11.956"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.978" endtime="20201029 12:43:11.988"></status>
</kw>
<msg timestamp="20201029 12:43:11.990" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.974" endtime="20201029 12:43:11.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:11.996" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:11.992" endtime="20201029 12:43:11.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:11.998" endtime="20201029 12:43:12.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.967" endtime="20201029 12:43:12.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.962" endtime="20201029 12:43:12.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.025" endtime="20201029 12:43:12.380"></status>
</kw>
<msg timestamp="20201029 12:43:12.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035575833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.021" endtime="20201029 12:43:12.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035575833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.390" endtime="20201029 12:43:12.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.409" endtime="20201029 12:43:12.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.012" endtime="20201029 12:43:12.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.007" endtime="20201029 12:43:12.416"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.426" level="INFO">${PHILIP_RES} = [{'diff': 8.860999999998898e-06}, {'diff': 8.86200000000531e-06}, {'diff': 8.874999999998467e-06}, {'diff': 8.805000000000618e-06}, {'diff': 8.83400000000617e-06}, {'diff': 8.832999999999758e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:12.418" endtime="20201029 12:43:12.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.436" level="INFO">${RESULT} = {'diff': [8.860999999998898e-06, 8.86200000000531e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.83400000000617e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.84800000000574e-06, 8.8469999...</msg>
<status status="PASS" starttime="20201029 12:43:12.428" endtime="20201029 12:43:12.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.447" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.445" endtime="20201029 12:43:12.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.453" level="INFO">VALUE: [8.860999999998898e-06, 8.86200000000531e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.83400000000617e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.84800000000574e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.84800000000574e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.861000000005836e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.84800000000574e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.917000000004116e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.875000000005406e-06, 8.833999999999231e-06, 8.846999999999328e-06, 8.847000000006267e-06, 8.806000000000092e-06, 8.846999999999328e-06, 8.861000000005836e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.861000000005836e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.847000000006267e-06, 8.861999999998371e-06, 8.860999999998898e-06, 8.847000000006267e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.861000000005836e-06, 8.861999999998371e-06, 8.874999999998467e-06, 8.861000000005836e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.847000000006267e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.791000000001048e-06]</msg>
<status status="PASS" starttime="20201029 12:43:12.450" endtime="20201029 12:43:12.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.438" endtime="20201029 12:43:12.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.958" endtime="20201029 12:43:12.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.928" endtime="20201029 12:43:12.457"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.464" endtime="20201029 12:43:12.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.460" endtime="20201029 12:43:12.487"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.512" endtime="20201029 12:43:12.523"></status>
</kw>
<msg timestamp="20201029 12:43:12.525" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.507" endtime="20201029 12:43:12.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.531" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:12.527" endtime="20201029 12:43:12.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.534" endtime="20201029 12:43:12.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.498" endtime="20201029 12:43:12.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.492" endtime="20201029 12:43:12.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.558" endtime="20201029 12:43:12.897"></status>
</kw>
<msg timestamp="20201029 12:43:12.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039573792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039587694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.555" endtime="20201029 12:43:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039573792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039587694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:12.906" endtime="20201029 12:43:12.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:12.925" endtime="20201029 12:43:12.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.547" endtime="20201029 12:43:12.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.542" endtime="20201029 12:43:12.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:12.942" level="INFO">${PHILIP_RES} = [{'diff': 1.3901999999996195e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3888999999996099e-05}, {'diff': 1.3901999999996195e-...</msg>
<status status="PASS" starttime="20201029 12:43:12.934" endtime="20201029 12:43:12.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:12.951" level="INFO">${RESULT} = {'diff': [1.3901999999996195e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3901999999996195e-05, 1.3972000000000984e-05, 1.3889000000003038e-05...</msg>
<status status="PASS" starttime="20201029 12:43:12.944" endtime="20201029 12:43:12.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.964" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:12.960" endtime="20201029 12:43:12.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:12.969" level="INFO">VALUE: [1.3901999999996195e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3901999999996195e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3916000000002704e-05, 1.3915999999995765e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3902000000003134e-05, 1.3915999999995765e-05, 1.3902999999995669e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3875000000003468e-05, 1.3916000000002704e-05, 1.3902999999995669e-05, 1.3916999999995239e-05, 1.3917000000002178e-05, 1.3902000000003134e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3902999999995669e-05, 1.3916999999995239e-05, 1.3902000000003134e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3903000000002608e-05, 1.3902999999995669e-05, 1.3874999999996529e-05, 1.3903000000002608e-05, 1.3875000000003468e-05, 1.3903000000002608e-05, 1.3901999999996195e-05, 1.3887999999996625e-05, 1.3847999999996863e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.3901999999996195e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3916000000002704e-05, 1.3903000000002608e-05]</msg>
<status status="PASS" starttime="20201029 12:43:12.966" endtime="20201029 12:43:12.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.953" endtime="20201029 12:43:12.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.488" endtime="20201029 12:43:12.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.458" endtime="20201029 12:43:12.974"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:12.979" endtime="20201029 12:43:13.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.976" endtime="20201029 12:43:13.003"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.024" endtime="20201029 12:43:13.036"></status>
</kw>
<msg timestamp="20201029 12:43:13.037" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.021" endtime="20201029 12:43:13.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.044" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.039" endtime="20201029 12:43:13.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.046" endtime="20201029 12:43:13.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.014" endtime="20201029 12:43:13.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.008" endtime="20201029 12:43:13.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.070" endtime="20201029 12:43:13.413"></status>
</kw>
<msg timestamp="20201029 12:43:13.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035573208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.067" endtime="20201029 12:43:13.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035553486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035573208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.422" endtime="20201029 12:43:13.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.441" endtime="20201029 12:43:13.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.059" endtime="20201029 12:43:13.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.055" endtime="20201029 12:43:13.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:13.459" level="INFO">${PHILIP_RES} = [{'diff': 1.9721999999999795e-05}, {'diff': 1.9721999999999795e-05}, {'diff': 1.9708000000000225e-05}, {'diff': 1.9778000000005014e-05}, {'diff': 1.9735999999999365e-05}, {'diff': 1.9721999999999795e-...</msg>
<status status="PASS" starttime="20201029 12:43:13.450" endtime="20201029 12:43:13.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.476" level="INFO">${RESULT} = {'diff': [1.9721999999999795e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9778000000005014e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9778000000005014e-05, 1.9721999999999795e-05...</msg>
<status status="PASS" starttime="20201029 12:43:13.461" endtime="20201029 12:43:13.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.487" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:13.484" endtime="20201029 12:43:13.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.492" level="INFO">VALUE: [1.9721999999999795e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9778000000005014e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9778000000005014e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.9708000000000225e-05, 1.9749999999998935e-05, 1.9735999999999365e-05, 1.97089999999997e-05, 1.9764000000005444e-05, 1.966699999999405e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.968100000000056e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.969500000000013e-05, 1.976299999999903e-05, 1.966700000000099e-05, 1.97089999999997e-05, 1.969500000000013e-05, 1.9737000000005778e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.972299999999927e-05, 1.97089999999997e-05, 1.9735999999999365e-05, 1.9735999999999365e-05, 1.966700000000099e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9708000000000225e-05]</msg>
<status status="PASS" starttime="20201029 12:43:13.489" endtime="20201029 12:43:13.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.477" endtime="20201029 12:43:13.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.004" endtime="20201029 12:43:13.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:12.974" endtime="20201029 12:43:13.497"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:13.502" endtime="20201029 12:43:13.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.499" endtime="20201029 12:43:13.526"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.547" endtime="20201029 12:43:13.559"></status>
</kw>
<msg timestamp="20201029 12:43:13.561" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.544" endtime="20201029 12:43:13.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.567" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:13.563" endtime="20201029 12:43:13.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.569" endtime="20201029 12:43:13.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.537" endtime="20201029 12:43:13.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.531" endtime="20201029 12:43:13.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.593" endtime="20201029 12:43:13.931"></status>
</kw>
<msg timestamp="20201029 12:43:13.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035238681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.590" endtime="20201029 12:43:13.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035238681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035264986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:13.941" endtime="20201029 12:43:13.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:13.960" endtime="20201029 12:43:13.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.582" endtime="20201029 12:43:13.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.578" endtime="20201029 12:43:13.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:13.977" level="INFO">${PHILIP_RES} = [{'diff': 2.6304999999997303e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.6304999999997303e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.6305999999996776e-05}, {'diff': 2.6304999999997303e-...</msg>
<status status="PASS" starttime="20201029 12:43:13.969" endtime="20201029 12:43:13.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:13.988" level="INFO">${RESULT} = {'diff': [2.6304999999997303e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6263999999998067e-05, 2.6305999999996776e-05...</msg>
<status status="PASS" starttime="20201029 12:43:13.979" endtime="20201029 12:43:13.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:13.999" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:13.996" endtime="20201029 12:43:13.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.004" level="INFO">VALUE: [2.6304999999997303e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6305999999996776e-05, 2.6305999999996776e-05, 2.6304999999997303e-05, 2.6263999999998067e-05, 2.6305999999996776e-05, 2.6332999999996443e-05, 2.6291999999997206e-05, 2.6305999999996776e-05, 2.6277999999997637e-05, 2.6291999999997206e-05, 2.630500000000424e-05, 2.631900000000381e-05, 2.6320000000003285e-05, 2.6333999999995916e-05, 2.6334000000002855e-05, 2.6306000000003715e-05, 2.630500000000424e-05, 2.6292000000004145e-05, 2.630500000000424e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 3.340200000000182e-05, 2.6306000000003715e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.6263999999998067e-05, 2.631900000000381e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.6221999999999357e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.630500000000424e-05, 2.6306000000003715e-05, 2.6306000000003715e-05, 2.630500000000424e-05, 2.6292000000004145e-05, 2.6306000000003715e-05, 2.6291999999997206e-05, 2.6334000000002855e-05, 2.6304999999997303e-05, 2.6332999999996443e-05, 2.6319999999996346e-05, 2.6318999999996873e-05, 2.6333999999995916e-05, 2.6318999999996873e-05]</msg>
<status status="PASS" starttime="20201029 12:43:14.001" endtime="20201029 12:43:14.005"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.990" endtime="20201029 12:43:14.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.527" endtime="20201029 12:43:14.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:13.497" endtime="20201029 12:43:14.009"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.015" endtime="20201029 12:43:14.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.011" endtime="20201029 12:43:14.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.060" endtime="20201029 12:43:14.072"></status>
</kw>
<msg timestamp="20201029 12:43:14.074" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.056" endtime="20201029 12:43:14.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.080" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.076" endtime="20201029 12:43:14.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.082" endtime="20201029 12:43:14.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.049" endtime="20201029 12:43:14.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.043" endtime="20201029 12:43:14.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.106" endtime="20201029 12:43:14.449"></status>
</kw>
<msg timestamp="20201029 12:43:14.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035942375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.103" endtime="20201029 12:43:14.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035908736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035942375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.459" endtime="20201029 12:43:14.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.478" endtime="20201029 12:43:14.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.095" endtime="20201029 12:43:14.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.090" endtime="20201029 12:43:14.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:14.496" level="INFO">${PHILIP_RES} = [{'diff': 3.363900000000197e-05}, {'diff': 3.3624999999995464e-05}, {'diff': 3.365200000000207e-05}, {'diff': 3.370800000000035e-05}, {'diff': 3.365300000000154e-05}, {'diff': 3.369400000000078e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:14.487" endtime="20201029 12:43:14.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:14.506" level="INFO">${RESULT} = {'diff': [3.363900000000197e-05, 3.3624999999995464e-05, 3.365200000000207e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.369400000000078e-05, 3.363900000000197e-05, 3.36250000000024e-05, 3.3625...</msg>
<status status="PASS" starttime="20201029 12:43:14.498" endtime="20201029 12:43:14.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.517" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:14.514" endtime="20201029 12:43:14.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.523" level="INFO">VALUE: [3.363900000000197e-05, 3.3624999999995464e-05, 3.365200000000207e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.369400000000078e-05, 3.363900000000197e-05, 3.36250000000024e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.361100000000283e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.366600000000164e-05, 3.365300000000154e-05, 3.366700000000111e-05, 3.3666999999994174e-05, 3.3666999999994174e-05, 3.36659999999947e-05, 3.3652999999994604e-05, 3.3596999999996324e-05, 3.3638999999995034e-05, 3.3624999999995464e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.369400000000078e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.361100000000283e-05, 3.372199999999992e-05, 3.365300000000154e-05, 3.359700000000326e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.365200000000207e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.36250000000024e-05, 3.370899999999982e-05, 3.369400000000078e-05, 3.366600000000164e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.3652999999994604e-05]</msg>
<status status="PASS" starttime="20201029 12:43:14.519" endtime="20201029 12:43:14.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.508" endtime="20201029 12:43:14.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.039" endtime="20201029 12:43:14.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.010" endtime="20201029 12:43:14.527"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:14.533" endtime="20201029 12:43:14.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.529" endtime="20201029 12:43:14.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.579" endtime="20201029 12:43:14.591"></status>
</kw>
<msg timestamp="20201029 12:43:14.593" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.575" endtime="20201029 12:43:14.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:14.599" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:14.595" endtime="20201029 12:43:14.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.601" endtime="20201029 12:43:14.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.567" endtime="20201029 12:43:14.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.561" endtime="20201029 12:43:14.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:14.627" endtime="20201029 12:43:14.987"></status>
</kw>
<msg timestamp="20201029 12:43:14.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036028472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.624" endtime="20201029 12:43:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035986681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036028472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:14.997" endtime="20201029 12:43:15.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.016" endtime="20201029 12:43:15.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.616" endtime="20201029 12:43:15.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.611" endtime="20201029 12:43:15.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.032" level="INFO">${PHILIP_RES} = [{'diff': 4.1790999999999356e-05}, {'diff': 4.1695000000001314e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.176399999999969e-05}, {'diff': 4.1776999999999787e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:15.024" endtime="20201029 12:43:15.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.042" level="INFO">${RESULT} = {'diff': [4.1790999999999356e-05, 4.1695000000001314e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.17780000000062e-05, 4.176399999999969e-05, 4.18...</msg>
<status status="PASS" starttime="20201029 12:43:15.034" endtime="20201029 12:43:15.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.052" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.050" endtime="20201029 12:43:15.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.058" level="INFO">VALUE: [4.1790999999999356e-05, 4.1695000000001314e-05, 4.176399999999969e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.17780000000062e-05, 4.176399999999969e-05, 4.1833000000005005e-05, 4.176399999999969e-05, 4.1804999999998926e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.1776999999999787e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.176400000000663e-05, 4.176399999999969e-05, 4.1833000000005005e-05, 4.173600000000055e-05, 4.177799999999926e-05, 4.176300000000022e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.179199999999883e-05, 4.176399999999969e-05, 4.179200000000577e-05, 4.175000000000012e-05, 4.1804999999998926e-05, 4.175000000000012e-05, 4.1846999999997636e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.1776999999999787e-05, 4.18059999999984e-05, 4.175000000000012e-05, 4.173599999999361e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.176300000000022e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.172199999999404e-05, 4.176399999999969e-05]</msg>
<status status="PASS" starttime="20201029 12:43:15.055" endtime="20201029 12:43:15.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.044" endtime="20201029 12:43:15.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.557" endtime="20201029 12:43:15.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:14.528" endtime="20201029 12:43:15.062"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.068" endtime="20201029 12:43:15.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.064" endtime="20201029 12:43:15.092"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.116" endtime="20201029 12:43:15.129"></status>
</kw>
<msg timestamp="20201029 12:43:15.130" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.112" endtime="20201029 12:43:15.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.136" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.132" endtime="20201029 12:43:15.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.139" endtime="20201029 12:43:15.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.105" endtime="20201029 12:43:15.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.099" endtime="20201029 12:43:15.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.162" endtime="20201029 12:43:15.515"></status>
</kw>
<msg timestamp="20201029 12:43:15.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037795583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037846236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.159" endtime="20201029 12:43:15.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037795583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037846236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.526" endtime="20201029 12:43:15.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.546" endtime="20201029 12:43:15.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.152" endtime="20201029 12:43:15.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.147" endtime="20201029 12:43:15.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:15.565" level="INFO">${PHILIP_RES} = [{'diff': 5.065299999999773e-05}, {'diff': 5.06669999999973e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.0639000000005097e-05}, {'diff': 5.059699999999945e-05}, {'diff': 5.063899999999816e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:15.557" endtime="20201029 12:43:15.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:15.574" level="INFO">${RESULT} = {'diff': [5.065299999999773e-05, 5.06669999999973e-05, 5.063899999999816e-05, 5.0639000000005097e-05, 5.059699999999945e-05, 5.063899999999816e-05, 5.0735999999995673e-05, 5.0653000000004667e-05, 5.06...</msg>
<status status="PASS" starttime="20201029 12:43:15.567" endtime="20201029 12:43:15.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.585" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:15.582" endtime="20201029 12:43:15.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.592" level="INFO">VALUE: [5.065299999999773e-05, 5.06669999999973e-05, 5.063899999999816e-05, 5.0639000000005097e-05, 5.059699999999945e-05, 5.063899999999816e-05, 5.0735999999995673e-05, 5.0653000000004667e-05, 5.061100000000596e-05, 5.063899999999816e-05, 5.061099999999902e-05, 5.0665999999997824e-05, 5.072200000000304e-05, 5.065200000000519e-05, 5.0651999999998254e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.0639000000005097e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.065299999999773e-05, 5.062499999999859e-05, 5.062500000000553e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.06669999999973e-05, 5.0653000000004667e-05, 5.0653000000004667e-05, 5.0651999999998254e-05, 5.065299999999773e-05, 5.0651999999998254e-05, 5.065200000000519e-05, 5.0695000000003376e-05, 5.063899999999816e-05, 5.063899999999816e-05, 5.0639000000005097e-05, 5.062500000000553e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.062499999999859e-05, 5.061099999999902e-05, 5.062500000000553e-05, 5.063899999999816e-05, 5.0707999999996534e-05, 5.063899999999816e-05, 5.0639000000005097e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.058399999999935e-05]</msg>
<status status="PASS" starttime="20201029 12:43:15.587" endtime="20201029 12:43:15.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.576" endtime="20201029 12:43:15.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.093" endtime="20201029 12:43:15.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.063" endtime="20201029 12:43:15.597"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:15.603" endtime="20201029 12:43:15.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.599" endtime="20201029 12:43:15.626"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.649" endtime="20201029 12:43:15.662"></status>
</kw>
<msg timestamp="20201029 12:43:15.663" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.645" endtime="20201029 12:43:15.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:15.669" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:15.665" endtime="20201029 12:43:15.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.672" endtime="20201029 12:43:15.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.638" endtime="20201029 12:43:15.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.632" endtime="20201029 12:43:15.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:15.696" endtime="20201029 12:43:16.034"></status>
</kw>
<msg timestamp="20201029 12:43:16.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036207611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036267931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:15.692" endtime="20201029 12:43:16.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036207611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036267931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.044" endtime="20201029 12:43:16.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.063" endtime="20201029 12:43:16.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.685" endtime="20201029 12:43:16.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.680" endtime="20201029 12:43:16.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.079" level="INFO">${PHILIP_RES} = [{'diff': 6.0320000000002594e-05}, {'diff': 6.0277999999996945e-05}, {'diff': 6.0278000000003884e-05}, {'diff': 6.027699999999747e-05}, {'diff': 6.033300000000269e-05}, {'diff': 6.0292000000003454e-05...</msg>
<status status="PASS" starttime="20201029 12:43:16.071" endtime="20201029 12:43:16.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.090" level="INFO">${RESULT} = {'diff': [6.0320000000002594e-05, 6.0277999999996945e-05, 6.0278000000003884e-05, 6.027699999999747e-05, 6.033300000000269e-05, 6.0292000000003454e-05, 6.0249999999997805e-05, 6.0278000000003884e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:16.081" endtime="20201029 12:43:16.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.101" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.098" endtime="20201029 12:43:16.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.106" level="INFO">VALUE: [6.0320000000002594e-05, 6.0277999999996945e-05, 6.0278000000003884e-05, 6.027699999999747e-05, 6.033300000000269e-05, 6.0292000000003454e-05, 6.0249999999997805e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.027699999999747e-05, 6.027700000000441e-05, 6.0277999999996945e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0277999999996945e-05, 6.029100000000398e-05, 6.027699999999747e-05, 6.029100000000398e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.029099999999704e-05, 6.0278000000003884e-05, 6.020899999999857e-05, 6.0292000000003454e-05, 6.0306000000003024e-05, 6.0277999999996945e-05, 6.027700000000441e-05, 6.030499999999661e-05, 6.030500000000355e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0306000000003024e-05, 6.027699999999747e-05, 6.029099999999704e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.029099999999704e-05, 6.0264000000004314e-05, 6.030499999999661e-05, 6.033300000000269e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0264000000004314e-05, 6.029099999999704e-05, 6.022299999999814e-05, 6.0292000000003454e-05]</msg>
<status status="PASS" starttime="20201029 12:43:16.103" endtime="20201029 12:43:16.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.092" endtime="20201029 12:43:16.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.628" endtime="20201029 12:43:16.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:15.598" endtime="20201029 12:43:16.111"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.117" endtime="20201029 12:43:16.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.113" endtime="20201029 12:43:16.141"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.162" endtime="20201029 12:43:16.177"></status>
</kw>
<msg timestamp="20201029 12:43:16.178" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.159" endtime="20201029 12:43:16.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.184" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.180" endtime="20201029 12:43:16.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.186" endtime="20201029 12:43:16.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.151" endtime="20201029 12:43:16.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.146" endtime="20201029 12:43:16.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.210" endtime="20201029 12:43:16.552"></status>
</kw>
<msg timestamp="20201029 12:43:16.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035508736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.207" endtime="20201029 12:43:16.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035438028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035508736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:16.562" endtime="20201029 12:43:16.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.581" endtime="20201029 12:43:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.199" endtime="20201029 12:43:16.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.195" endtime="20201029 12:43:16.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:16.598" level="INFO">${PHILIP_RES} = [{'diff': 7.070799999999572e-05}, {'diff': 7.063799999999787e-05}, {'diff': 7.069500000000256e-05}, {'diff': 7.069399999999615e-05}, {'diff': 7.069400000000309e-05}, {'diff': 7.068099999999605e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:16.590" endtime="20201029 12:43:16.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:16.609" level="INFO">${RESULT} = {'diff': [7.070799999999572e-05, 7.063799999999787e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.069400000000309e-05, 7.068099999999605e-05, 7.069499999999562e-05, 7.070800000000266e-05, 7.0638...</msg>
<status status="PASS" starttime="20201029 12:43:16.600" endtime="20201029 12:43:16.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.620" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:16.618" endtime="20201029 12:43:16.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.626" level="INFO">VALUE: [7.070799999999572e-05, 7.063799999999787e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.069400000000309e-05, 7.068099999999605e-05, 7.069499999999562e-05, 7.070800000000266e-05, 7.063899999999734e-05, 7.069500000000256e-05, 7.069500000000256e-05, 7.062499999999777e-05, 7.069400000000309e-05, 7.066699999999648e-05, 7.066700000000342e-05, 7.069400000000309e-05, 7.069399999999615e-05, 7.066599999999701e-05, 7.068099999999605e-05, 7.068000000000352e-05, 7.068000000000352e-05, 7.069499999999562e-05, 7.068100000000299e-05, 7.067999999999658e-05, 7.069400000000309e-05, 7.069500000000256e-05, 7.069399999999615e-05, 7.069400000000309e-05, 7.068099999999605e-05, 7.069500000000256e-05, 7.069400000000309e-05, 7.067999999999658e-05, 7.070800000000266e-05, 7.066699999999648e-05, 7.069400000000309e-05, 7.069400000000309e-05, 7.066699999999648e-05, 7.066700000000342e-05, 7.069400000000309e-05, 7.067999999999658e-05, 7.068100000000299e-05, 7.069499999999562e-05, 7.068000000000352e-05, 7.069400000000309e-05, 7.069499999999562e-05, 7.066700000000342e-05, 7.069399999999615e-05, 7.069400000000309e-05, 7.068100000000299e-05, 7.069399999999615e-05]</msg>
<status status="PASS" starttime="20201029 12:43:16.622" endtime="20201029 12:43:16.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.611" endtime="20201029 12:43:16.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.142" endtime="20201029 12:43:16.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.111" endtime="20201029 12:43:16.637"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:16.643" endtime="20201029 12:43:16.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.639" endtime="20201029 12:43:16.667"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.688" endtime="20201029 12:43:16.703"></status>
</kw>
<msg timestamp="20201029 12:43:16.704" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.685" endtime="20201029 12:43:16.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:16.710" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:16.706" endtime="20201029 12:43:16.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.713" endtime="20201029 12:43:16.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.677" endtime="20201029 12:43:16.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.672" endtime="20201029 12:43:16.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:16.737" endtime="20201029 12:43:17.076"></status>
</kw>
<msg timestamp="20201029 12:43:17.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035474417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03555625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:16.733" endtime="20201029 12:43:17.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035474417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03555625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:17.086" endtime="20201029 12:43:17.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.105" endtime="20201029 12:43:17.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.726" endtime="20201029 12:43:17.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.721" endtime="20201029 12:43:17.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.121" level="INFO">${PHILIP_RES} = [{'diff': 8.183299999999644e-05}, {'diff': 8.186099999999558e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.182000000000328e-05}, {'diff': 8.184700000000295e-05}, {'diff': 8.193100000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:17.113" endtime="20201029 12:43:17.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.131" level="INFO">${RESULT} = {'diff': [8.183299999999644e-05, 8.186099999999558e-05, 8.186100000000252e-05, 8.182000000000328e-05, 8.184700000000295e-05, 8.193100000000036e-05, 8.187500000000208e-05, 8.188799999999524e-05, 8.1860...</msg>
<status status="PASS" starttime="20201029 12:43:17.123" endtime="20201029 12:43:17.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.141" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.139" endtime="20201029 12:43:17.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.147" level="INFO">VALUE: [8.183299999999644e-05, 8.186099999999558e-05, 8.186100000000252e-05, 8.182000000000328e-05, 8.184700000000295e-05, 8.193100000000036e-05, 8.187500000000208e-05, 8.188799999999524e-05, 8.186099999999558e-05, 8.1846999999996e-05, 8.186099999999558e-05, 8.186200000000199e-05, 8.183300000000338e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.187499999999515e-05, 8.180599999999677e-05, 8.186099999999558e-05, 8.1846999999996e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.183300000000338e-05, 8.187500000000208e-05, 8.186099999999558e-05, 8.187499999999515e-05, 8.186099999999558e-05, 8.188800000000218e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.1846999999996e-05, 8.183299999999644e-05, 8.1846999999996e-05, 8.187499999999515e-05, 8.183299999999644e-05, 8.18190000000038e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.1846999999996e-05, 8.188899999999472e-05, 8.186099999999558e-05, 8.183300000000338e-05, 8.186100000000252e-05, 8.183400000000285e-05, 8.188900000000165e-05, 8.186100000000252e-05]</msg>
<status status="PASS" starttime="20201029 12:43:17.144" endtime="20201029 12:43:17.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.132" endtime="20201029 12:43:17.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.668" endtime="20201029 12:43:17.151"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:16.638" endtime="20201029 12:43:17.152"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.158" endtime="20201029 12:43:17.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.154" endtime="20201029 12:43:17.181"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.203" endtime="20201029 12:43:17.218"></status>
</kw>
<msg timestamp="20201029 12:43:17.219" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.199" endtime="20201029 12:43:17.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.225" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.221" endtime="20201029 12:43:17.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.228" endtime="20201029 12:43:17.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.192" endtime="20201029 12:43:17.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.186" endtime="20201029 12:43:17.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.253" endtime="20201029 12:43:17.593"></status>
</kw>
<msg timestamp="20201029 12:43:17.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035730208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.250" endtime="20201029 12:43:17.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035636403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035730208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.603" endtime="20201029 12:43:17.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.623" endtime="20201029 12:43:17.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.242" endtime="20201029 12:43:17.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.238" endtime="20201029 12:43:17.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:17.640" level="INFO">${PHILIP_RES} = [{'diff': 9.380500000000236e-05}, {'diff': 9.380500000000236e-05}, {'diff': 9.377800000000269e-05}, {'diff': 9.377799999999575e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.377800000000269e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:17.632" endtime="20201029 12:43:17.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:17.649" level="INFO">${RESULT} = {'diff': [9.380500000000236e-05, 9.380500000000236e-05, 9.377800000000269e-05, 9.377799999999575e-05, 9.380600000000183e-05, 9.377800000000269e-05, 9.379200000000226e-05, 9.384700000000107e-05, 9.3763...</msg>
<status status="PASS" starttime="20201029 12:43:17.642" endtime="20201029 12:43:17.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.660" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:17.658" endtime="20201029 12:43:17.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.665" level="INFO">VALUE: [9.380500000000236e-05, 9.380500000000236e-05, 9.377800000000269e-05, 9.377799999999575e-05, 9.380600000000183e-05, 9.377800000000269e-05, 9.379200000000226e-05, 9.384700000000107e-05, 9.376399999999618e-05, 9.377800000000269e-05, 9.376400000000312e-05, 9.383400000000097e-05, 9.379199999999532e-05, 9.38059999999949e-05, 9.379100000000279e-05, 9.377700000000322e-05, 9.376400000000312e-05, 9.38059999999949e-05, 9.38330000000015e-05, 9.377800000000269e-05, 9.379200000000226e-05, 9.380600000000183e-05, 9.376399999999618e-05, 9.376299999999671e-05, 9.380500000000236e-05, 9.380600000000183e-05, 9.374999999999661e-05, 9.379199999999532e-05, 9.379200000000226e-05, 9.379200000000226e-05, 9.384700000000107e-05, 9.379099999999585e-05, 9.373699999999652e-05, 9.384700000000107e-05, 9.379200000000226e-05, 9.379200000000226e-05, 9.377799999999575e-05, 9.377800000000269e-05, 9.377700000000322e-05, 9.38330000000015e-05, 9.377799999999575e-05, 9.379199999999532e-05, 9.379200000000226e-05, 9.377800000000269e-05, 9.384800000000054e-05, 9.379099999999585e-05, 9.377700000000322e-05, 9.377700000000322e-05, 9.381900000000193e-05, 9.380499999999542e-05]</msg>
<status status="PASS" starttime="20201029 12:43:17.662" endtime="20201029 12:43:17.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.651" endtime="20201029 12:43:17.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.182" endtime="20201029 12:43:17.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.153" endtime="20201029 12:43:17.670"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:17.676" endtime="20201029 12:43:17.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.673" endtime="20201029 12:43:17.700"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.723" endtime="20201029 12:43:17.738"></status>
</kw>
<msg timestamp="20201029 12:43:17.739" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.719" endtime="20201029 12:43:17.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:17.746" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:17.742" endtime="20201029 12:43:17.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.748" endtime="20201029 12:43:17.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.712" endtime="20201029 12:43:17.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.707" endtime="20201029 12:43:17.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:17.772" endtime="20201029 12:43:18.112"></status>
</kw>
<msg timestamp="20201029 12:43:18.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:17.769" endtime="20201029 12:43:18.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036999639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037106125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.121" endtime="20201029 12:43:18.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.140" endtime="20201029 12:43:18.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.761" endtime="20201029 12:43:18.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.757" endtime="20201029 12:43:18.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.166" level="INFO">${PHILIP_RES} = [{'diff': 0.00010648599999999592}, {'diff': 0.00010650000000000243}, {'diff': 0.00010651399999999506}, {'diff': 0.00010648600000000286}, {'diff': 0.00010648700000000233}, {'diff': 0.000106499999999995...</msg>
<status status="PASS" starttime="20201029 12:43:18.150" endtime="20201029 12:43:18.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.177" level="INFO">${RESULT} = {'diff': [0.00010648599999999592, 0.00010650000000000243, 0.00010651399999999506, 0.00010648600000000286, 0.00010648700000000233, 0.00010649999999999549, 0.00010648600000000286, 0.00010647199999999635...</msg>
<status status="PASS" starttime="20201029 12:43:18.168" endtime="20201029 12:43:18.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.189" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.186" endtime="20201029 12:43:18.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.197" level="INFO">VALUE: [0.00010648599999999592, 0.00010650000000000243, 0.00010651399999999506, 0.00010648600000000286, 0.00010648700000000233, 0.00010649999999999549, 0.00010648600000000286, 0.00010647199999999635, 0.00010647200000000329, 0.00010652800000000157, 0.00010647199999999635, 0.00010655500000000123, 0.00010649999999999549, 0.00010650000000000243, 0.000106514000000002, 0.00010648599999999592, 0.00010650000000000243, 0.00010647199999999635, 0.00010648600000000286, 0.00010650000000000243, 0.00010648599999999592, 0.00010644500000000362, 0.00010648599999999592, 0.00010648700000000233, 0.00010652800000000157, 0.00010648599999999592, 0.00010648600000000286, 0.00010642999999999764, 0.00010650000000000243, 0.00010647200000000329, 0.00010647199999999635, 0.00010648700000000233, 0.00010649999999999549, 0.00010645800000000372, 0.00010647200000000329, 0.00010647199999999635, 0.00010641700000000448, 0.00010647199999999635, 0.00010648599999999592, 0.00010647200000000329, 0.00010647199999999635, 0.00010648600000000286, 0.00010650000000000243, 0.00010647199999999635, 0.000106514000000002, 0.00010648599999999592, 0.00010643000000000458, 0.00010648600000000286, 0.00010645900000000319, 0.00010648600000000286]</msg>
<status status="PASS" starttime="20201029 12:43:18.192" endtime="20201029 12:43:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.179" endtime="20201029 12:43:18.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.701" endtime="20201029 12:43:18.203"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:17.671" endtime="20201029 12:43:18.204"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.212" endtime="20201029 12:43:18.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.207" endtime="20201029 12:43:18.235"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.257" endtime="20201029 12:43:18.273"></status>
</kw>
<msg timestamp="20201029 12:43:18.274" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.253" endtime="20201029 12:43:18.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.281" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.277" endtime="20201029 12:43:18.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.283" endtime="20201029 12:43:18.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.246" endtime="20201029 12:43:18.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.240" endtime="20201029 12:43:18.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.315" endtime="20201029 12:43:18.666"></status>
</kw>
<msg timestamp="20201029 12:43:18.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035445833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.311" endtime="20201029 12:43:18.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035445833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035565778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.675" endtime="20201029 12:43:18.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.694" endtime="20201029 12:43:18.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.302" endtime="20201029 12:43:18.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.296" endtime="20201029 12:43:18.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:18.710" level="INFO">${PHILIP_RES} = [{'diff': 0.0001199449999999963}, {'diff': 0.00011994399999999683}, {'diff': 0.00011997299999999544}, {'diff': 0.00011994399999999683}, {'diff': 0.00011994500000000324}, {'diff': 0.0001199440000000037...</msg>
<status status="PASS" starttime="20201029 12:43:18.702" endtime="20201029 12:43:18.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:18.725" level="INFO">${RESULT} = {'diff': [0.0001199449999999963, 0.00011994399999999683, 0.00011997299999999544, 0.00011994399999999683, 0.00011994500000000324, 0.00011994400000000377, 0.00011994400000000377, 0.00011994400000000377,...</msg>
<status status="PASS" starttime="20201029 12:43:18.712" endtime="20201029 12:43:18.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.735" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:18.733" endtime="20201029 12:43:18.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.741" level="INFO">VALUE: [0.0001199449999999963, 0.00011994399999999683, 0.00011997299999999544, 0.00011994399999999683, 0.00011994500000000324, 0.00011994400000000377, 0.00011994400000000377, 0.00011994400000000377, 0.00011994400000000377, 0.00011993100000000367, 0.00011988900000000496, 0.00011994500000000324, 0.00012001400000000162, 0.00011995900000000281, 0.00011994399999999683, 0.00011991699999999716, 0.00011992999999999726, 0.00011993099999999673, 0.00011998599999999554, 0.0001199579999999964, 0.00011995899999999587, 0.00011994399999999683, 0.00011995899999999587, 0.0001199579999999964, 0.00011988899999999802, 0.00011998600000000248, 0.00011998600000000248, 0.00012000000000000205, 0.00011994400000000377, 0.00011994500000000324, 0.00011995800000000334, 0.00011994500000000324, 0.00011994400000000377, 0.00011994500000000324, 0.0001199300000000042, 0.00011990300000000453, 0.00011990199999999812, 0.0001199449999999963, 0.00011994399999999683, 0.0001199579999999964, 0.00011993099999999673, 0.00011998599999999554, 0.0001199449999999963, 0.0001199029999999976, 0.00011995899999999587, 0.00011999999999999511, 0.00011995899999999587, 0.00011994400000000377, 0.00011993100000000367, 0.00011997200000000291]</msg>
<status status="PASS" starttime="20201029 12:43:18.738" endtime="20201029 12:43:18.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.727" endtime="20201029 12:43:18.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.236" endtime="20201029 12:43:18.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.205" endtime="20201029 12:43:18.746"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:18.752" endtime="20201029 12:43:18.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.748" endtime="20201029 12:43:18.775"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.797" endtime="20201029 12:43:18.814"></status>
</kw>
<msg timestamp="20201029 12:43:18.815" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.793" endtime="20201029 12:43:18.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:18.821" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:18.817" endtime="20201029 12:43:18.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.824" endtime="20201029 12:43:18.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.786" endtime="20201029 12:43:18.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.780" endtime="20201029 12:43:18.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:18.848" endtime="20201029 12:43:19.188"></status>
</kw>
<msg timestamp="20201029 12:43:19.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035392319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:18.844" endtime="20201029 12:43:19.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035392319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.197" endtime="20201029 12:43:19.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.216" endtime="20201029 12:43:19.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.837" endtime="20201029 12:43:19.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.832" endtime="20201029 12:43:19.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.232" level="INFO">${PHILIP_RES} = [{'diff': 0.00013411099999999926}, {'diff': 0.0001341530000000049}, {'diff': 0.00013420799999999677}, {'diff': 0.00013416700000000448}, {'diff': 0.0001341809999999971}, {'diff': 0.00013418100000000405...</msg>
<status status="PASS" starttime="20201029 12:43:19.224" endtime="20201029 12:43:19.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.243" level="INFO">${RESULT} = {'diff': [0.00013411099999999926, 0.0001341530000000049, 0.00013420799999999677, 0.00013416700000000448, 0.0001341809999999971, 0.00013418100000000405, 0.00013416699999999754, 0.00013416700000000448, ...</msg>
<status status="PASS" starttime="20201029 12:43:19.234" endtime="20201029 12:43:19.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.254" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.252" endtime="20201029 12:43:19.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.259" level="INFO">VALUE: [0.00013411099999999926, 0.0001341530000000049, 0.00013420799999999677, 0.00013416700000000448, 0.0001341809999999971, 0.00013418100000000405, 0.00013416699999999754, 0.00013416700000000448, 0.00013417999999999763, 0.00013417999999999763, 0.0001340969999999997, 0.00013416599999999806, 0.00013416700000000448, 0.00013416699999999754, 0.00013416700000000448, 0.00013415299999999797, 0.00013416700000000448, 0.0001341809999999971, 0.00013418100000000405, 0.00013416599999999806, 0.0001341519999999985, 0.00013416599999999806, 0.00013417999999999763, 0.00013411199999999873, 0.00013422199999999634, 0.00013416700000000448, 0.00013425000000000242, 0.0001342090000000032, 0.00013412499999999883, 0.00013416700000000448, 0.00013416599999999806, 0.00013422200000000328, 0.0001341939999999972, 0.0001341939999999972, 0.00013416699999999754, 0.00013416699999999754, 0.00013416700000000448, 0.00013416699999999754, 0.00013416700000000448, 0.00013415299999999797, 0.00013418100000000405, 0.00013415299999999797, 0.00013418000000000457, 0.00013416599999999806, 0.00013419400000000414, 0.00013416699999999754, 0.00013417999999999763, 0.00013415299999999797, 0.00013416699999999754, 0.00013416700000000448]</msg>
<status status="PASS" starttime="20201029 12:43:19.256" endtime="20201029 12:43:19.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.245" endtime="20201029 12:43:19.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.776" endtime="20201029 12:43:19.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:18.747" endtime="20201029 12:43:19.264"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.270" endtime="20201029 12:43:19.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.267" endtime="20201029 12:43:19.294"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.315" endtime="20201029 12:43:19.334"></status>
</kw>
<msg timestamp="20201029 12:43:19.335" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.312" endtime="20201029 12:43:19.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.342" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.338" endtime="20201029 12:43:19.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.344" endtime="20201029 12:43:19.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.305" endtime="20201029 12:43:19.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.299" endtime="20201029 12:43:19.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.368" endtime="20201029 12:43:19.709"></status>
</kw>
<msg timestamp="20201029 12:43:19.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035766514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.364" endtime="20201029 12:43:19.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035617361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035766514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.719" endtime="20201029 12:43:19.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.737" endtime="20201029 12:43:19.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.357" endtime="20201029 12:43:19.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.352" endtime="20201029 12:43:19.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:19.754" level="INFO">${PHILIP_RES} = [{'diff': 0.0001491529999999991}, {'diff': 0.0001492079999999979}, {'diff': 0.00015915300000000215}, {'diff': 0.00014913800000000005}, {'diff': 0.00014911100000000038}, {'diff': 0.00014915199999999962...</msg>
<status status="PASS" starttime="20201029 12:43:19.746" endtime="20201029 12:43:19.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:19.763" level="INFO">${RESULT} = {'diff': [0.0001491529999999991, 0.0001492079999999979, 0.00015915300000000215, 0.00014913800000000005, 0.00014911100000000038, 0.00014915199999999962, 0.0001491529999999991, 0.00014913899999999952, 0...</msg>
<status status="PASS" starttime="20201029 12:43:19.756" endtime="20201029 12:43:19.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.774" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:19.771" endtime="20201029 12:43:19.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.779" level="INFO">VALUE: [0.0001491529999999991, 0.0001492079999999979, 0.00015915300000000215, 0.00014913800000000005, 0.00014911100000000038, 0.00014915199999999962, 0.0001491529999999991, 0.00014913899999999952, 0.00014916699999999866, 0.00014913899999999952, 0.0001491529999999991, 0.0001491659999999992, 0.0001491529999999991, 0.00014913900000000646, 0.00014916699999999866, 0.0001491529999999991, 0.00014918099999999823, 0.00014913899999999952, 0.00014916699999999866, 0.00014916699999999866, 0.00014915199999999962, 0.0001491529999999991, 0.00014913899999999952, 0.00014912499999999995, 0.0001491800000000057, 0.00014916699999999866, 0.00014915199999999962, 0.00014913899999999952, 0.00014913800000000005, 0.0001491529999999991, 0.00014913800000000005, 0.0001491529999999991, 0.0001491529999999991, 0.0001491529999999991, 0.00014915300000000603, 0.0001491670000000056, 0.0001491659999999992, 0.0001491529999999991, 0.0001491529999999991, 0.00014913899999999952, 0.00014917999999999876, 0.00014912499999999995, 0.00014918099999999823, 0.0001491529999999991, 0.0001491529999999991, 0.0001491670000000056, 0.00014915300000000603, 0.00014915199999999962, 0.0001491529999999991, 0.00014913899999999952]</msg>
<status status="PASS" starttime="20201029 12:43:19.776" endtime="20201029 12:43:19.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.765" endtime="20201029 12:43:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.295" endtime="20201029 12:43:19.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.265" endtime="20201029 12:43:19.784"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:19.790" endtime="20201029 12:43:19.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.786" endtime="20201029 12:43:19.814"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.835" endtime="20201029 12:43:19.854"></status>
</kw>
<msg timestamp="20201029 12:43:19.856" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.832" endtime="20201029 12:43:19.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:19.862" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:19.858" endtime="20201029 12:43:19.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.864" endtime="20201029 12:43:19.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.824" endtime="20201029 12:43:19.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.819" endtime="20201029 12:43:19.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:19.888" endtime="20201029 12:43:20.227"></status>
</kw>
<msg timestamp="20201029 12:43:20.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035612222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:19.885" endtime="20201029 12:43:20.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035447306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035612222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.236" endtime="20201029 12:43:20.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.254" endtime="20201029 12:43:20.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.877" endtime="20201029 12:43:20.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.872" endtime="20201029 12:43:20.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.271" level="INFO">${PHILIP_RES} = [{'diff': 0.00016491600000000106}, {'diff': 0.00016490299999999403}, {'diff': 0.00016491700000000054}, {'diff': 0.00016490300000000097}, {'diff': 0.0001649299999999937}, {'diff': 0.0001649020000000015...</msg>
<status status="PASS" starttime="20201029 12:43:20.263" endtime="20201029 12:43:20.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.280" level="INFO">${RESULT} = {'diff': [0.00016491600000000106, 0.00016490299999999403, 0.00016491700000000054, 0.00016490300000000097, 0.0001649299999999937, 0.0001649020000000015, 0.0001648890000000014, 0.0001649310000000001, 0....</msg>
<status status="PASS" starttime="20201029 12:43:20.273" endtime="20201029 12:43:20.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.291" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.288" endtime="20201029 12:43:20.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.296" level="INFO">VALUE: [0.00016491600000000106, 0.00016490299999999403, 0.00016491700000000054, 0.00016490300000000097, 0.0001649299999999937, 0.0001649020000000015, 0.0001648890000000014, 0.0001649310000000001, 0.00016491700000000054, 0.00016490300000000097, 0.00016490300000000097, 0.00016491600000000106, 0.0001649310000000001, 0.00016491700000000054, 0.00016494499999999968, 0.00016491700000000054, 0.00016490300000000097, 0.00016491599999999412, 0.0001648890000000014, 0.00016490300000000097, 0.00016490300000000097, 0.00016490300000000097, 0.0001648890000000014, 0.00016495799999999977, 0.00016491599999999412, 0.00016490300000000097, 0.00017973599999999978, 0.0001648890000000014, 0.00016491700000000054, 0.00016490300000000097, 0.00016490300000000097, 0.00016491700000000054, 0.00016497199999999934, 0.00016490199999999455, 0.00016491700000000054, 0.00016490300000000097, 0.00016490300000000097, 0.00016491700000000054, 0.00016491600000000106, 0.00016491600000000106, 0.00016490300000000097, 0.00016491700000000054, 0.00016491700000000054, 0.00016484699999999575, 0.00016490300000000097, 0.00016491600000000106, 0.0001649169999999936, 0.00016491700000000054, 0.00016491700000000054, 0.0001649440000000002]</msg>
<status status="PASS" starttime="20201029 12:43:20.293" endtime="20201029 12:43:20.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.282" endtime="20201029 12:43:20.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.815" endtime="20201029 12:43:20.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:19.785" endtime="20201029 12:43:20.301"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.307" endtime="20201029 12:43:20.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.303" endtime="20201029 12:43:20.330"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.353" endtime="20201029 12:43:20.374"></status>
</kw>
<msg timestamp="20201029 12:43:20.375" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.350" endtime="20201029 12:43:20.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.382" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.378" endtime="20201029 12:43:20.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.384" endtime="20201029 12:43:20.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.343" endtime="20201029 12:43:20.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.337" endtime="20201029 12:43:20.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.408" endtime="20201029 12:43:20.749"></status>
</kw>
<msg timestamp="20201029 12:43:20.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036951153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037132583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.405" endtime="20201029 12:43:20.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036951153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037132583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.759" endtime="20201029 12:43:20.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.777" endtime="20201029 12:43:20.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.397" endtime="20201029 12:43:20.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.392" endtime="20201029 12:43:20.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:20.793" level="INFO">${PHILIP_RES} = [{'diff': 0.00018142999999999632}, {'diff': 0.00018141599999999675}, {'diff': 0.00018140200000000412}, {'diff': 0.00018140199999999718}, {'diff': 0.00018141599999999675}, {'diff': 0.000181431000000002...</msg>
<status status="PASS" starttime="20201029 12:43:20.786" endtime="20201029 12:43:20.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:20.803" level="INFO">${RESULT} = {'diff': [0.00018142999999999632, 0.00018141599999999675, 0.00018140200000000412, 0.00018140199999999718, 0.00018141599999999675, 0.00018143100000000273, 0.00018136099999999794, 0.00018141700000000316...</msg>
<status status="PASS" starttime="20201029 12:43:20.796" endtime="20201029 12:43:20.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.813" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:20.811" endtime="20201029 12:43:20.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.820" level="INFO">VALUE: [0.00018142999999999632, 0.00018141599999999675, 0.00018140200000000412, 0.00018140199999999718, 0.00018141599999999675, 0.00018143100000000273, 0.00018136099999999794, 0.00018141700000000316, 0.00018147200000000197, 0.00018141699999999622, 0.00018141699999999622, 0.00018141700000000316, 0.00018144499999999536, 0.00018143100000000273, 0.0001814030000000036, 0.00018144499999999536, 0.0001814030000000036, 0.00018141699999999622, 0.00018140299999999665, 0.00018141700000000316, 0.00018142999999999632, 0.00018141599999999675, 0.0001814030000000036, 0.00018144400000000283, 0.00018141599999999675, 0.00018141600000000369, 0.00018141699999999622, 0.00018143000000000326, 0.00018144400000000283, 0.00018141699999999622, 0.00018141700000000316, 0.0001814030000000036, 0.00018145799999999546, 0.00018141700000000316, 0.00018143100000000273, 0.00018141699999999622, 0.0001814030000000036, 0.00018138899999999708, 0.00018134699999999837, 0.00018141700000000316, 0.00018141699999999622, 0.00018141599999999675, 0.00018143000000000326, 0.00018141599999999675, 0.00018141599999999675, 0.00018143000000000326, 0.00018141599999999675, 0.00018143000000000326, 0.00018136200000000435, 0.00018141699999999622]</msg>
<status status="PASS" starttime="20201029 12:43:20.816" endtime="20201029 12:43:20.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.805" endtime="20201029 12:43:20.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.332" endtime="20201029 12:43:20.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.302" endtime="20201029 12:43:20.825"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:20.831" endtime="20201029 12:43:20.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.828" endtime="20201029 12:43:20.855"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.876" endtime="20201029 12:43:20.897"></status>
</kw>
<msg timestamp="20201029 12:43:20.898" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.873" endtime="20201029 12:43:20.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:20.905" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:20.900" endtime="20201029 12:43:20.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.907" endtime="20201029 12:43:20.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.866" endtime="20201029 12:43:20.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.860" endtime="20201029 12:43:20.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:20.931" endtime="20201029 12:43:21.271"></status>
</kw>
<msg timestamp="20201029 12:43:21.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035262403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035461097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:20.927" endtime="20201029 12:43:21.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035262403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035461097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.281" endtime="20201029 12:43:21.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.299" endtime="20201029 12:43:21.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.920" endtime="20201029 12:43:21.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.915" endtime="20201029 12:43:21.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.315" level="INFO">${PHILIP_RES} = [{'diff': 0.00019869399999999926}, {'diff': 0.00019870799999999883}, {'diff': 0.00019870799999999883}, {'diff': 0.0001987089999999983}, {'diff': 0.00019863900000000045}, {'diff': 0.0001986949999999987...</msg>
<status status="PASS" starttime="20201029 12:43:21.308" endtime="20201029 12:43:21.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.326" level="INFO">${RESULT} = {'diff': [0.00019869399999999926, 0.00019870799999999883, 0.00019870799999999883, 0.0001987089999999983, 0.00019863900000000045, 0.00019869499999999873, 0.0001987219999999984, 0.00019869399999999926, ...</msg>
<status status="PASS" starttime="20201029 12:43:21.317" endtime="20201029 12:43:21.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.337" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.335" endtime="20201029 12:43:21.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.342" level="INFO">VALUE: [0.00019869399999999926, 0.00019870799999999883, 0.00019870799999999883, 0.0001987089999999983, 0.00019863900000000045, 0.00019869499999999873, 0.0001987219999999984, 0.00019869399999999926, 0.0001987219999999984, 0.00019869399999999926, 0.00019869499999999873, 0.0001987089999999983, 0.00019869499999999873, 0.00019870800000000577, 0.0001986940000000062, 0.0001987360000000049, 0.0001987219999999984, 0.0001987089999999983, 0.00019869499999999873, 0.00019869499999999873, 0.0001987219999999984, 0.00019869399999999926, 0.00019873599999999797, 0.00019865200000000055, 0.0001987639999999971, 0.0001987089999999983, 0.00019869499999999873, 0.00019868099999999916, 0.0001987219999999984, 0.00019869399999999926, 0.00019869399999999926, 0.00019863900000000045, 0.00019865300000000002, 0.0001987089999999983, 0.00019868099999999916, 0.00019869399999999926, 0.00019869399999999926, 0.00019870799999999883, 0.00019868099999999916, 0.00019869499999999873, 0.00019872299999999787, 0.00019869499999999873, 0.0001986799999999997, 0.00019865300000000002, 0.00019870799999999883, 0.00019869500000000567, 0.00019870900000000524, 0.0001987089999999983, 0.00019869499999999873, 0.00019870799999999883]</msg>
<status status="PASS" starttime="20201029 12:43:21.339" endtime="20201029 12:43:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.328" endtime="20201029 12:43:21.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.856" endtime="20201029 12:43:21.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:20.826" endtime="20201029 12:43:21.347"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.353" endtime="20201029 12:43:21.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.349" endtime="20201029 12:43:21.377"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.398" endtime="20201029 12:43:21.420"></status>
</kw>
<msg timestamp="20201029 12:43:21.421" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.395" endtime="20201029 12:43:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.427" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.423" endtime="20201029 12:43:21.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.430" endtime="20201029 12:43:21.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.387" endtime="20201029 12:43:21.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.382" endtime="20201029 12:43:21.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.454" endtime="20201029 12:43:21.796"></status>
</kw>
<msg timestamp="20201029 12:43:21.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035133347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.450" endtime="20201029 12:43:21.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035133347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035350097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.805" endtime="20201029 12:43:21.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.824" endtime="20201029 12:43:21.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.443" endtime="20201029 12:43:21.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.438" endtime="20201029 12:43:21.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:21.840" level="INFO">${PHILIP_RES} = [{'diff': 0.00021674999999999472}, {'diff': 0.000216723000000002}, {'diff': 0.00021679200000000037}, {'diff': 0.0002167360000000021}, {'diff': 0.0002167360000000021}, {'diff': 0.0002167780000000008}, ...</msg>
<status status="PASS" starttime="20201029 12:43:21.832" endtime="20201029 12:43:21.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:21.851" level="INFO">${RESULT} = {'diff': [0.00021674999999999472, 0.000216723000000002, 0.00021679200000000037, 0.0002167360000000021, 0.0002167360000000021, 0.0002167780000000008, 0.00021674999999999472, 0.00021676400000000123, 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:21.842" endtime="20201029 12:43:21.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.862" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:21.860" endtime="20201029 12:43:21.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.867" level="INFO">VALUE: [0.00021674999999999472, 0.000216723000000002, 0.00021679200000000037, 0.0002167360000000021, 0.0002167360000000021, 0.0002167780000000008, 0.00021674999999999472, 0.00021676400000000123, 0.0002167360000000021, 0.00021669400000000338, 0.0002167910000000009, 0.00021673599999999515, 0.00021666699999999678, 0.0002167360000000021, 0.0002167360000000021, 0.00021675000000000166, 0.00021675000000000166, 0.00021669399999999645, 0.00021679200000000037, 0.00021676400000000123, 0.00021676400000000123, 0.0002167360000000021, 0.00021672200000000252, 0.00021675000000000166, 0.00021669399999999645, 0.0002167360000000021, 0.00021676300000000176, 0.00021675000000000166, 0.00021681900000000004, 0.00021670799999999601, 0.0002167780000000008, 0.00021675000000000166, 0.0002167360000000021, 0.0002167360000000021, 0.00021679200000000037, 0.00021674999999999472, 0.00021675000000000166, 0.00021675000000000166, 0.0002167360000000021, 0.0002167360000000021, 0.00021672199999999558, 0.00021673599999999515, 0.00021676300000000176, 0.00021675000000000166, 0.00021675000000000166, 0.00021669500000000286, 0.00021676400000000123, 0.00021673599999999515, 0.00021669399999999645, 0.0002167360000000021]</msg>
<status status="PASS" starttime="20201029 12:43:21.864" endtime="20201029 12:43:21.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.853" endtime="20201029 12:43:21.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.378" endtime="20201029 12:43:21.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.348" endtime="20201029 12:43:21.878"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:21.884" endtime="20201029 12:43:21.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.881" endtime="20201029 12:43:21.908"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.929" endtime="20201029 12:43:21.952"></status>
</kw>
<msg timestamp="20201029 12:43:21.953" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.926" endtime="20201029 12:43:21.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:21.960" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:21.956" endtime="20201029 12:43:21.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.962" endtime="20201029 12:43:21.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.919" endtime="20201029 12:43:21.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.913" endtime="20201029 12:43:21.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:21.986" endtime="20201029 12:43:22.332"></status>
</kw>
<msg timestamp="20201029 12:43:22.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035507125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:21.982" endtime="20201029 12:43:22.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035507125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035742694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.342" endtime="20201029 12:43:22.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.360" endtime="20201029 12:43:22.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.975" endtime="20201029 12:43:22.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.970" endtime="20201029 12:43:22.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.377" level="INFO">${PHILIP_RES} = [{'diff': 0.00023556899999999797}, {'diff': 0.00023561100000000362}, {'diff': 0.00023555599999999788}, {'diff': 0.00023561100000000362}, {'diff': 0.00023555500000000534}, {'diff': 0.000235541999999998...</msg>
<status status="PASS" starttime="20201029 12:43:22.369" endtime="20201029 12:43:22.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.386" level="INFO">${RESULT} = {'diff': [0.00023556899999999797, 0.00023561100000000362, 0.00023555599999999788, 0.00023561100000000362, 0.00023555500000000534, 0.0002355419999999983, 0.0002355419999999983, 0.00023555600000000482, ...</msg>
<status status="PASS" starttime="20201029 12:43:22.379" endtime="20201029 12:43:22.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.397" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.394" endtime="20201029 12:43:22.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.402" level="INFO">VALUE: [0.00023556899999999797, 0.00023561100000000362, 0.00023555599999999788, 0.00023561100000000362, 0.00023555500000000534, 0.0002355419999999983, 0.0002355419999999983, 0.00023555600000000482, 0.00023556899999999797, 0.0002355419999999983, 0.00023556899999999797, 0.0002355419999999983, 0.0002355549999999984, 0.00023555500000000534, 0.0002355549999999984, 0.00023554099999999883, 0.00023556899999999797, 0.0002355549999999984, 0.0002355549999999984, 0.00023556899999999797, 0.0002355549999999984, 0.00023554099999999883, 0.0002355549999999984, 0.00023551399999999917, 0.00023548600000000003, 0.0002355549999999984, 0.0002355549999999984, 0.00023555500000000534, 0.00023562499999999625, 0.00023554099999999883, 0.0002487640000000055, 0.00023552799999999874, 0.00023556999999999745, 0.00023554200000000525, 0.00023555599999999788, 0.00023555599999999788, 0.0002355700000000044, 0.0002355419999999983, 0.0002355419999999983, 0.00023555599999999788, 0.0002354869999999995, 0.00023555600000000482, 0.00023559699999999711, 0.00023556999999999745, 0.00023547299999999993, 0.00023555599999999788, 0.00023556999999999745, 0.0002354999999999996, 0.0002355419999999983, 0.00023556899999999797]</msg>
<status status="PASS" starttime="20201029 12:43:22.399" endtime="20201029 12:43:22.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.388" endtime="20201029 12:43:22.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.909" endtime="20201029 12:43:22.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:21.879" endtime="20201029 12:43:22.407"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.413" endtime="20201029 12:43:22.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.409" endtime="20201029 12:43:22.437"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.459" endtime="20201029 12:43:22.484"></status>
</kw>
<msg timestamp="20201029 12:43:22.485" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.455" endtime="20201029 12:43:22.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.492" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.488" endtime="20201029 12:43:22.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.494" endtime="20201029 12:43:22.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.448" endtime="20201029 12:43:22.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.442" endtime="20201029 12:43:22.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.518" endtime="20201029 12:43:22.858"></status>
</kw>
<msg timestamp="20201029 12:43:22.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037303083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.515" endtime="20201029 12:43:22.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037303083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037558208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:22.867" endtime="20201029 12:43:22.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.886" endtime="20201029 12:43:22.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.507" endtime="20201029 12:43:22.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.502" endtime="20201029 12:43:22.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:22.902" level="INFO">${PHILIP_RES} = [{'diff': 0.0002551250000000019}, {'diff': 0.0002551110000000023}, {'diff': 0.0002551250000000019}, {'diff': 0.0002551250000000019}, {'diff': 0.00025512499999999494}, {'diff': 0.00027326400000000223},...</msg>
<status status="PASS" starttime="20201029 12:43:22.894" endtime="20201029 12:43:22.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:22.911" level="INFO">${RESULT} = {'diff': [0.0002551250000000019, 0.0002551110000000023, 0.0002551250000000019, 0.0002551250000000019, 0.00025512499999999494, 0.00027326400000000223, 0.00025511099999999537, 0.00025507000000000307, 0....</msg>
<status status="PASS" starttime="20201029 12:43:22.904" endtime="20201029 12:43:22.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.922" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:22.920" endtime="20201029 12:43:22.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:22.927" level="INFO">VALUE: [0.0002551250000000019, 0.0002551110000000023, 0.0002551250000000019, 0.0002551250000000019, 0.00025512499999999494, 0.00027326400000000223, 0.00025511099999999537, 0.00025507000000000307, 0.00025512499999999494, 0.0002550690000000036, 0.00025513900000000145, 0.00025513900000000145, 0.0002551110000000023, 0.0002551250000000019, 0.0002551250000000019, 0.0002551250000000019, 0.0002551120000000018, 0.0002551110000000023, 0.0002551110000000023, 0.0002551110000000023, 0.000255138000000002, 0.0002551250000000019, 0.0002551110000000023, 0.0002550839999999957, 0.000255138000000002, 0.00025512499999999494, 0.0002551670000000006, 0.00025512499999999494, 0.0002551120000000018, 0.00025513900000000145, 0.0002551670000000006, 0.00025511099999999537, 0.000255153000000001, 0.00025506899999999666, 0.000255153000000001, 0.00025513900000000145, 0.0002551250000000019, 0.0002551110000000023, 0.00025512499999999494, 0.0002551250000000019, 0.0002550979999999953, 0.0002551110000000023, 0.0002550969999999958, 0.00025513900000000145, 0.00025512499999999494, 0.00025518100000000016, 0.0002551389999999945, 0.00025513900000000145, 0.00025512499999999494, 0.0002551250000000019]</msg>
<status status="PASS" starttime="20201029 12:43:22.924" endtime="20201029 12:43:22.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.913" endtime="20201029 12:43:22.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.438" endtime="20201029 12:43:22.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.408" endtime="20201029 12:43:22.932"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:22.938" endtime="20201029 12:43:22.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.934" endtime="20201029 12:43:22.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:22.985" endtime="20201029 12:43:23.010"></status>
</kw>
<msg timestamp="20201029 12:43:23.011" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:22.981" endtime="20201029 12:43:23.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.018" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.013" endtime="20201029 12:43:23.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.020" endtime="20201029 12:43:23.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.974" endtime="20201029 12:43:23.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.968" endtime="20201029 12:43:23.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.044" endtime="20201029 12:43:23.387"></status>
</kw>
<msg timestamp="20201029 12:43:23.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037007514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037282958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.040" endtime="20201029 12:43:23.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037007514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037282958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.396" endtime="20201029 12:43:23.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.415" endtime="20201029 12:43:23.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.033" endtime="20201029 12:43:23.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.028" endtime="20201029 12:43:23.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.431" level="INFO">${PHILIP_RES} = [{'diff': 0.0002754439999999997}, {'diff': 0.00027545899999999873}, {'diff': 0.00027545799999999926}, {'diff': 0.00027545899999999873}, {'diff': 0.00029086100000000337}, {'diff': 0.0002754580000000062...</msg>
<status status="PASS" starttime="20201029 12:43:23.423" endtime="20201029 12:43:23.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.440" level="INFO">${RESULT} = {'diff': [0.0002754439999999997, 0.00027545899999999873, 0.00027545799999999926, 0.00027545899999999873, 0.00029086100000000337, 0.0002754580000000062, 0.00027545799999999926, 0.00027544499999999916, ...</msg>
<status status="PASS" starttime="20201029 12:43:23.433" endtime="20201029 12:43:23.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.451" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.449" endtime="20201029 12:43:23.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.458" level="INFO">VALUE: [0.0002754439999999997, 0.00027545899999999873, 0.00027545799999999926, 0.00027545899999999873, 0.00029086100000000337, 0.0002754580000000062, 0.00027545799999999926, 0.00027544499999999916, 0.0002754859999999984, 0.0002754439999999997, 0.00027547199999999883, 0.00027545799999999926, 0.00027538899999999394, 0.0002753890000000009, 0.0002754580000000062, 0.00027545899999999873, 0.0002755000000000049, 0.00027544499999999916, 0.0002754309999999996, 0.00027547199999999883, 0.00027544499999999916, 0.00027549999999999797, 0.0002754729999999983, 0.00027545799999999926, 0.00027545799999999926, 0.00027545799999999926, 0.00027549999999999797, 0.00027545900000000567, 0.00027545799999999926, 0.00027545900000000567, 0.00027545799999999926, 0.00027547199999999883, 0.00027544499999999916, 0.00027547199999999883, 0.00027545899999999873, 0.0002753890000000009, 0.00027545799999999926, 0.00027544499999999916, 0.0002754580000000062, 0.00027549999999999797, 0.00027544499999999916, 0.0002754439999999997, 0.00027545899999999873, 0.0002754439999999997, 0.00027544499999999916, 0.00027547199999999883, 0.000275402000000001, 0.00027545899999999873, 0.00027547199999999883, 0.0002755420000000036]</msg>
<status status="PASS" starttime="20201029 12:43:23.453" endtime="20201029 12:43:23.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.442" endtime="20201029 12:43:23.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.963" endtime="20201029 12:43:23.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:22.933" endtime="20201029 12:43:23.463"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:23.469" endtime="20201029 12:43:23.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.465" endtime="20201029 12:43:23.492"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.514" endtime="20201029 12:43:23.541"></status>
</kw>
<msg timestamp="20201029 12:43:23.542" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.511" endtime="20201029 12:43:23.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.549" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:23.545" endtime="20201029 12:43:23.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.551" endtime="20201029 12:43:23.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.503" endtime="20201029 12:43:23.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.498" endtime="20201029 12:43:23.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.575" endtime="20201029 12:43:23.915"></status>
</kw>
<msg timestamp="20201029 12:43:23.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.572" endtime="20201029 12:43:23.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035744569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036041153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:23.925" endtime="20201029 12:43:23.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:23.943" endtime="20201029 12:43:23.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.564" endtime="20201029 12:43:23.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.560" endtime="20201029 12:43:23.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:23.960" level="INFO">${PHILIP_RES} = [{'diff': 0.0002965840000000025}, {'diff': 0.00029657000000000294}, {'diff': 0.00029656899999999653}, {'diff': 0.00029655600000000337}, {'diff': 0.00029655599999999643}, {'diff': 0.0002965560000000033...</msg>
<status status="PASS" starttime="20201029 12:43:23.952" endtime="20201029 12:43:23.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:23.974" level="INFO">${RESULT} = {'diff': [0.0002965840000000025, 0.00029657000000000294, 0.00029656899999999653, 0.00029655600000000337, 0.00029655599999999643, 0.00029655600000000337, 0.00029655599999999643, 0.0002965550000000039, ...</msg>
<status status="PASS" starttime="20201029 12:43:23.962" endtime="20201029 12:43:23.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.985" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:23.983" endtime="20201029 12:43:23.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:23.990" level="INFO">VALUE: [0.0002965840000000025, 0.00029657000000000294, 0.00029656899999999653, 0.00029655600000000337, 0.00029655599999999643, 0.00029655600000000337, 0.00029655599999999643, 0.0002965550000000039, 0.0002965550000000039, 0.00029655499999999696, 0.00029654100000000433, 0.00029656899999999653, 0.0002965550000000039, 0.000296569999999996, 0.00029655599999999643, 0.00029655599999999643, 0.00029657000000000294, 0.00029655600000000337, 0.000296569999999996, 0.0002965420000000038, 0.00029654199999999686, 0.00029652800000000423, 0.00029654199999999686, 0.0002965550000000039, 0.00029656900000000347, 0.00029656899999999653, 0.00029656900000000347, 0.00029656899999999653, 0.0002965550000000039, 0.00029655499999999696, 0.0002965420000000038, 0.00029649999999999815, 0.00029654199999999686, 0.0002965420000000038, 0.00029654199999999686, 0.00029655600000000337, 0.0002965839999999956, 0.00029655600000000337, 0.0002965970000000026, 0.00029655600000000337, 0.0002965409999999974, 0.0002965409999999974, 0.0002965550000000039, 0.00029656899999999653, 0.00029654100000000433, 0.00029656899999999653, 0.0002965550000000039, 0.00029662500000000175, 0.000296569999999996, 0.00029655600000000337]</msg>
<status status="PASS" starttime="20201029 12:43:23.987" endtime="20201029 12:43:23.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.976" endtime="20201029 12:43:23.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.494" endtime="20201029 12:43:23.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.464" endtime="20201029 12:43:23.996"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.001" endtime="20201029 12:43:24.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.998" endtime="20201029 12:43:24.025"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.047" endtime="20201029 12:43:24.074"></status>
</kw>
<msg timestamp="20201029 12:43:24.075" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.043" endtime="20201029 12:43:24.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.081" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.077" endtime="20201029 12:43:24.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.083" endtime="20201029 12:43:24.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.036" endtime="20201029 12:43:24.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.030" endtime="20201029 12:43:24.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.107" endtime="20201029 12:43:24.448"></status>
</kw>
<msg timestamp="20201029 12:43:24.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035786764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.104" endtime="20201029 12:43:24.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035786764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.457" endtime="20201029 12:43:24.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.475" endtime="20201029 12:43:24.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.097" endtime="20201029 12:43:24.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.092" endtime="20201029 12:43:24.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:24.491" level="INFO">${PHILIP_RES} = [{'diff': 0.00031843100000000096}, {'diff': 0.00031840200000000235}, {'diff': 0.00031843100000000096}, {'diff': 0.0003184030000000018}, {'diff': 0.0003184579999999937}, {'diff': 0.00031843100000000096...</msg>
<status status="PASS" starttime="20201029 12:43:24.484" endtime="20201029 12:43:24.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:24.503" level="INFO">${RESULT} = {'diff': [0.00031843100000000096, 0.00031840200000000235, 0.00031843100000000096, 0.0003184030000000018, 0.0003184579999999937, 0.00031843100000000096, 0.00031842999999999455, 0.0003184030000000018, 0...</msg>
<status status="PASS" starttime="20201029 12:43:24.494" endtime="20201029 12:43:24.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.514" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:24.511" endtime="20201029 12:43:24.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.519" level="INFO">VALUE: [0.00031843100000000096, 0.00031840200000000235, 0.00031843100000000096, 0.0003184030000000018, 0.0003184579999999937, 0.00031843100000000096, 0.00031842999999999455, 0.0003184030000000018, 0.0003184449999999936, 0.0003184170000000014, 0.00031842999999999455, 0.00031843100000000096, 0.000318415999999995, 0.00031844500000000053, 0.00031843100000000096, 0.0003183880000000028, 0.00031843100000000096, 0.0003184170000000014, 0.0003184300000000015, 0.0003184170000000014, 0.0003184300000000015, 0.00031844400000000106, 0.0003184170000000014, 0.0003184019999999954, 0.00031844500000000053, 0.0003183609999999962, 0.0003184160000000019, 0.00031841699999999445, 0.00031838900000000225, 0.00031842999999999455, 0.00031834700000000354, 0.0003184029999999949, 0.00031844400000000106, 0.00031841699999999445, 0.00031848599999999977, 0.0003184170000000014, 0.00031844500000000053, 0.0003184019999999954, 0.0003184170000000014, 0.0003184170000000014, 0.00031844400000000106, 0.0003184030000000018, 0.0003184030000000018, 0.00031843100000000096, 0.00031843100000000096, 0.00031834700000000354, 0.0003184170000000014, 0.00031844500000000053, 0.00031842999999999455, 0.0003184170000000014]</msg>
<status status="PASS" starttime="20201029 12:43:24.516" endtime="20201029 12:43:24.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.505" endtime="20201029 12:43:24.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.026" endtime="20201029 12:43:24.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:23.996" endtime="20201029 12:43:24.524"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:24.530" endtime="20201029 12:43:24.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.526" endtime="20201029 12:43:24.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.575" endtime="20201029 12:43:24.605"></status>
</kw>
<msg timestamp="20201029 12:43:24.606" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.572" endtime="20201029 12:43:24.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:24.613" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:24.609" endtime="20201029 12:43:24.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.616" endtime="20201029 12:43:24.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.564" endtime="20201029 12:43:24.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.559" endtime="20201029 12:43:24.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:24.639" endtime="20201029 12:43:24.982"></status>
</kw>
<msg timestamp="20201029 12:43:24.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036261083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036602194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.636" endtime="20201029 12:43:24.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036261083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036602194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:24.992" endtime="20201029 12:43:25.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.011" endtime="20201029 12:43:25.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.629" endtime="20201029 12:43:25.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.624" endtime="20201029 12:43:25.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:25.027" level="INFO">${PHILIP_RES} = [{'diff': 0.0003411109999999981}, {'diff': 0.0003410689999999994}, {'diff': 0.0003410689999999994}, {'diff': 0.0003410559999999993}, {'diff': 0.00034104199999999973}, {'diff': 0.00034104100000000026},...</msg>
<status status="PASS" starttime="20201029 12:43:25.019" endtime="20201029 12:43:25.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.036" level="INFO">${RESULT} = {'diff': [0.0003411109999999981, 0.0003410689999999994, 0.0003410689999999994, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.000341000000000001, 0.00034104199999999973, 0.00...</msg>
<status status="PASS" starttime="20201029 12:43:25.029" endtime="20201029 12:43:25.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.047" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:25.044" endtime="20201029 12:43:25.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.052" level="INFO">VALUE: [0.0003411109999999981, 0.0003410689999999994, 0.0003410689999999994, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.000341000000000001, 0.00034104199999999973, 0.00034105499999999983, 0.0003410559999999993, 0.0003410700000000058, 0.0003410689999999994, 0.00034104199999999973, 0.0003410559999999993, 0.00034105499999999983, 0.00034102800000000016, 0.00034104199999999973, 0.00034102699999999375, 0.00034098600000000145, 0.00034104199999999973, 0.0003410270000000007, 0.00034105499999999983, 0.00034104199999999973, 0.00034105499999999983, 0.0003410420000000067, 0.0003410559999999993, 0.0003410689999999994, 0.00034104199999999973, 0.0003411250000000046, 0.00034102800000000016, 0.00034104100000000026, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.0003410559999999993, 0.00034105499999999983, 0.0003410689999999994, 0.000341097999999998, 0.00034105499999999983, 0.0003410689999999994, 0.00034104199999999973, 0.00034104199999999973, 0.00034104100000000026, 0.00034105499999999983, 0.00034105499999999983, 0.00034104199999999973, 0.00034104199999999973, 0.00034104100000000026, 0.000341000000000001, 0.00034104199999999973]</msg>
<status status="PASS" starttime="20201029 12:43:25.049" endtime="20201029 12:43:25.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.038" endtime="20201029 12:43:25.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.555" endtime="20201029 12:43:25.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:24.525" endtime="20201029 12:43:25.057"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.063" endtime="20201029 12:43:25.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.060" endtime="20201029 12:43:25.087"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.109" endtime="20201029 12:43:25.140"></status>
</kw>
<msg timestamp="20201029 12:43:25.141" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.105" endtime="20201029 12:43:25.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.148" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.144" endtime="20201029 12:43:25.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.150" endtime="20201029 12:43:25.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.098" endtime="20201029 12:43:25.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.092" endtime="20201029 12:43:25.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.174" endtime="20201029 12:43:25.515"></status>
</kw>
<msg timestamp="20201029 12:43:25.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037306208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.171" endtime="20201029 12:43:25.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037306208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.524" endtime="20201029 12:43:25.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.543" endtime="20201029 12:43:25.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.163" endtime="20201029 12:43:25.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.158" endtime="20201029 12:43:25.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:25.559" level="INFO">${PHILIP_RES} = [{'diff': 0.00036445899999999753}, {'diff': 0.00036441700000000576}, {'diff': 0.0003644309999999984}, {'diff': 0.00036445799999999806}, {'diff': 0.00036445799999999806}, {'diff': 0.0003644440000000054...</msg>
<status status="PASS" starttime="20201029 12:43:25.551" endtime="20201029 12:43:25.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:25.568" level="INFO">${RESULT} = {'diff': [0.00036445899999999753, 0.00036441700000000576, 0.0003644309999999984, 0.00036445799999999806, 0.00036445799999999806, 0.00036444400000000543, 0.0003644439999999985, 0.00036444499999999797, ...</msg>
<status status="PASS" starttime="20201029 12:43:25.561" endtime="20201029 12:43:25.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.579" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:25.577" endtime="20201029 12:43:25.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.584" level="INFO">VALUE: [0.00036445899999999753, 0.00036441700000000576, 0.0003644309999999984, 0.00036445799999999806, 0.00036445799999999806, 0.00036444400000000543, 0.0003644439999999985, 0.00036444499999999797, 0.00036443100000000533, 0.00036440299999999926, 0.0003644439999999985, 0.0003644299999999989, 0.0003644299999999989, 0.00036436100000000055, 0.0003643889999999997, 0.00037388900000000225, 0.0003644439999999985, 0.0003644450000000049, 0.0003644309999999984, 0.0003645000000000037, 0.0003644019999999998, 0.0003644019999999998, 0.0003644439999999985, 0.0003644439999999985, 0.00036443000000000586, 0.0003644309999999984, 0.0003644309999999984, 0.0003644309999999984, 0.000364458000000005, 0.00036447199999999763, 0.0003643889999999997, 0.00036444400000000543, 0.0003644439999999985, 0.0003644439999999985, 0.00036444499999999797, 0.0003644309999999984, 0.0003644309999999984, 0.0003644439999999985, 0.00036444400000000543, 0.0003644439999999985, 0.0003644309999999984, 0.0003644450000000049, 0.0003644870000000036, 0.0003644859999999972, 0.00036445899999999753, 0.00036443100000000533, 0.0003644439999999985, 0.0003644299999999989, 0.0003644439999999985, 0.0003644309999999984]</msg>
<status status="PASS" starttime="20201029 12:43:25.581" endtime="20201029 12:43:25.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.570" endtime="20201029 12:43:25.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.088" endtime="20201029 12:43:25.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.058" endtime="20201029 12:43:25.589"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:25.595" endtime="20201029 12:43:25.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.592" endtime="20201029 12:43:25.619"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.642" endtime="20201029 12:43:25.673"></status>
</kw>
<msg timestamp="20201029 12:43:25.675" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.638" endtime="20201029 12:43:25.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:25.681" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:25.677" endtime="20201029 12:43:25.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.683" endtime="20201029 12:43:25.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.631" endtime="20201029 12:43:25.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.626" endtime="20201029 12:43:25.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:25.707" endtime="20201029 12:43:26.050"></status>
</kw>
<msg timestamp="20201029 12:43:26.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036993819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037382417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:25.704" endtime="20201029 12:43:26.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036993819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037382417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.059" endtime="20201029 12:43:26.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.078" endtime="20201029 12:43:26.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.697" endtime="20201029 12:43:26.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.692" endtime="20201029 12:43:26.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.094" level="INFO">${PHILIP_RES} = [{'diff': 0.0003885980000000039}, {'diff': 0.0003885970000000044}, {'diff': 0.00038861099999999704}, {'diff': 0.00038859799999999695}, {'diff': 0.0003886119999999965}, {'diff': 0.00038855599999999824}...</msg>
<status status="PASS" starttime="20201029 12:43:26.086" endtime="20201029 12:43:26.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.103" level="INFO">${RESULT} = {'diff': [0.0003885980000000039, 0.0003885970000000044, 0.00038861099999999704, 0.00038859799999999695, 0.0003886119999999965, 0.00038855599999999824, 0.00038859799999999695, 0.00038859699999999747, 0...</msg>
<status status="PASS" starttime="20201029 12:43:26.096" endtime="20201029 12:43:26.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.114" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.111" endtime="20201029 12:43:26.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.121" level="INFO">VALUE: [0.0003885980000000039, 0.0003885970000000044, 0.00038861099999999704, 0.00038859799999999695, 0.0003886119999999965, 0.00038855599999999824, 0.00038859799999999695, 0.00038859699999999747, 0.00038862500000000355, 0.0003885970000000044, 0.00038858300000000484, 0.00038856900000000527, 0.0003885970000000044, 0.0003885269999999996, 0.00038859699999999747, 0.00038859699999999747, 0.0003885829999999979, 0.00038859699999999747, 0.00038859699999999747, 0.00038859699999999747, 0.0003886390000000031, 0.0003885970000000044, 0.00038858300000000484, 0.00038858300000000484, 0.0003885829999999979, 0.0003885699999999978, 0.00038855599999999824, 0.00038861099999999704, 0.00038859699999999747, 0.00038859799999999695, 0.0003885699999999978, 0.00038861200000000345, 0.0003885980000000039, 0.0003885980000000039, 0.0003885840000000043, 0.000388611000000004, 0.0003885980000000039, 0.00038861099999999704, 0.0003886389999999962, 0.0003886389999999962, 0.00038861099999999704, 0.00038859699999999747, 0.00038861099999999704, 0.000388611000000004, 0.0003885970000000044, 0.000388611000000004, 0.00038858300000000484, 0.0003885829999999979, 0.0003885829999999979, 0.00038859699999999747]</msg>
<status status="PASS" starttime="20201029 12:43:26.116" endtime="20201029 12:43:26.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.105" endtime="20201029 12:43:26.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.620" endtime="20201029 12:43:26.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:25.590" endtime="20201029 12:43:26.126"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.132" endtime="20201029 12:43:26.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.128" endtime="20201029 12:43:26.156"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.177" endtime="20201029 12:43:26.210"></status>
</kw>
<msg timestamp="20201029 12:43:26.211" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.174" endtime="20201029 12:43:26.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.218" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.213" endtime="20201029 12:43:26.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.220" endtime="20201029 12:43:26.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.166" endtime="20201029 12:43:26.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.161" endtime="20201029 12:43:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.244" endtime="20201029 12:43:26.587"></status>
</kw>
<msg timestamp="20201029 12:43:26.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035344403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035757903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.240" endtime="20201029 12:43:26.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035344403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035757903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.596" endtime="20201029 12:43:26.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.615" endtime="20201029 12:43:26.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.233" endtime="20201029 12:43:26.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.228" endtime="20201029 12:43:26.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:26.631" level="INFO">${PHILIP_RES} = [{'diff': 0.0004134999999999972}, {'diff': 0.00041348600000000457}, {'diff': 0.00041355500000000295}, {'diff': 0.0004135139999999968}, {'diff': 0.00041352699999999687}, {'diff': 0.00041352699999999687...</msg>
<status status="PASS" starttime="20201029 12:43:26.623" endtime="20201029 12:43:26.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:26.642" level="INFO">${RESULT} = {'diff': [0.0004134999999999972, 0.00041348600000000457, 0.00041355500000000295, 0.0004135139999999968, 0.00041352699999999687, 0.00041352699999999687, 0.0004135419999999959, 0.0004135140000000037, 0....</msg>
<status status="PASS" starttime="20201029 12:43:26.633" endtime="20201029 12:43:26.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.653" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:26.650" endtime="20201029 12:43:26.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.658" level="INFO">VALUE: [0.0004134999999999972, 0.00041348600000000457, 0.00041355500000000295, 0.0004135139999999968, 0.00041352699999999687, 0.00041352699999999687, 0.0004135419999999959, 0.0004135140000000037, 0.000413472000000005, 0.0004135139999999968, 0.0004135559999999955, 0.0004135139999999968, 0.00041354200000000285, 0.0004135140000000037, 0.0004135280000000033, 0.00041354200000000285, 0.00041348599999999763, 0.0004135139999999968, 0.0004134999999999972, 0.0004135690000000025, 0.0004135270000000038, 0.0004134999999999972, 0.00041352699999999687, 0.0004135129999999973, 0.00041348599999999763, 0.0004135140000000037, 0.00041350000000000414, 0.0004134999999999972, 0.00041348599999999763, 0.00041352799999999634, 0.00041350000000000414, 0.00041354200000000285, 0.0004135140000000037, 0.0004135139999999968, 0.0004134999999999972, 0.0004135139999999968, 0.0004135140000000037, 0.00041350000000000414, 0.0004135690000000025, 0.00041352699999999687, 0.00041359700000000166, 0.00041354099999999644, 0.0004135140000000037, 0.000413472000000005, 0.00041350000000000414, 0.00043490300000000037, 0.0004135280000000033, 0.0004135139999999968, 0.0004134999999999972, 0.0004135139999999968]</msg>
<status status="PASS" starttime="20201029 12:43:26.655" endtime="20201029 12:43:26.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.644" endtime="20201029 12:43:26.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.157" endtime="20201029 12:43:26.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.127" endtime="20201029 12:43:26.663"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:26.669" endtime="20201029 12:43:26.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.665" endtime="20201029 12:43:26.692"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.714" endtime="20201029 12:43:26.748"></status>
</kw>
<msg timestamp="20201029 12:43:26.750" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.711" endtime="20201029 12:43:26.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:26.756" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:26.752" endtime="20201029 12:43:26.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.759" endtime="20201029 12:43:26.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.703" endtime="20201029 12:43:26.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.698" endtime="20201029 12:43:26.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:26.782" endtime="20201029 12:43:27.123"></status>
</kw>
<msg timestamp="20201029 12:43:27.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035613597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036052778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:26.779" endtime="20201029 12:43:27.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035613597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036052778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.133" endtime="20201029 12:43:27.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.151" endtime="20201029 12:43:27.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.772" endtime="20201029 12:43:27.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.767" endtime="20201029 12:43:27.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.167" level="INFO">${PHILIP_RES} = [{'diff': 0.00043918100000000376}, {'diff': 0.0004391809999999968}, {'diff': 0.00043917999999999735}, {'diff': 0.0004391939999999969}, {'diff': 0.0004391939999999969}, {'diff': 0.00043919500000000333}...</msg>
<status status="PASS" starttime="20201029 12:43:27.160" endtime="20201029 12:43:27.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.179" level="INFO">${RESULT} = {'diff': [0.00043918100000000376, 0.0004391809999999968, 0.00043917999999999735, 0.0004391939999999969, 0.0004391939999999969, 0.00043919500000000333, 0.00043916699999999725, 0.00043919400000000386, 0...</msg>
<status status="PASS" starttime="20201029 12:43:27.170" endtime="20201029 12:43:27.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.189" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.187" endtime="20201029 12:43:27.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.195" level="INFO">VALUE: [0.00043918100000000376, 0.0004391809999999968, 0.00043917999999999735, 0.0004391939999999969, 0.0004391939999999969, 0.00043919500000000333, 0.00043916699999999725, 0.00043919400000000386, 0.0004391809999999968, 0.00043919400000000386, 0.00043920899999999596, 0.0004392090000000029, 0.00043922199999999606, 0.00043919400000000386, 0.0004392079999999965, 0.00043926300000000224, 0.0004497359999999992, 0.0004391939999999969, 0.00043920800000000343, 0.0004391949999999964, 0.0004392090000000029, 0.00043923600000000257, 0.0004391939999999969, 0.00043920800000000343, 0.0004392079999999965, 0.0004392090000000029, 0.0004392079999999965, 0.00043920800000000343, 0.0004391939999999969, 0.00043920800000000343, 0.0004391529999999977, 0.0004392090000000029, 0.0004391939999999969, 0.0004392640000000017, 0.00043922199999999606, 0.0004392090000000029, 0.00043920800000000343, 0.00043919400000000386, 0.0004392640000000017, 0.00043919400000000386, 0.0004391949999999964, 0.00043922300000000247, 0.000439222000000003, 0.0004391939999999969, 0.000439222000000003, 0.00043922199999999606, 0.0004392090000000029, 0.0004392499999999952, 0.0004391660000000047, 0.0004391529999999977]</msg>
<status status="PASS" starttime="20201029 12:43:27.192" endtime="20201029 12:43:27.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.180" endtime="20201029 12:43:27.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.694" endtime="20201029 12:43:27.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:26.664" endtime="20201029 12:43:27.206"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.212" endtime="20201029 12:43:27.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.208" endtime="20201029 12:43:27.236"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.257" endtime="20201029 12:43:27.292"></status>
</kw>
<msg timestamp="20201029 12:43:27.293" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.254" endtime="20201029 12:43:27.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.299" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.295" endtime="20201029 12:43:27.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.302" endtime="20201029 12:43:27.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.246" endtime="20201029 12:43:27.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.241" endtime="20201029 12:43:27.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.326" endtime="20201029 12:43:27.670"></status>
</kw>
<msg timestamp="20201029 12:43:27.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035495569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035961236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.322" endtime="20201029 12:43:27.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035495569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035961236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.679" endtime="20201029 12:43:27.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.698" endtime="20201029 12:43:27.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.315" endtime="20201029 12:43:27.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.310" endtime="20201029 12:43:27.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:27.715" level="INFO">${PHILIP_RES} = [{'diff': 0.00046566700000000294}, {'diff': 0.00046565299999999643}, {'diff': 0.00046563899999999686}, {'diff': 0.00046565299999999643}, {'diff': 0.00046566600000000347}, {'diff': 0.000465653000000003...</msg>
<status status="PASS" starttime="20201029 12:43:27.707" endtime="20201029 12:43:27.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:27.724" level="INFO">${RESULT} = {'diff': [0.00046566700000000294, 0.00046565299999999643, 0.00046563899999999686, 0.00046565299999999643, 0.00046566600000000347, 0.00046565300000000337, 0.00046565300000000337, 0.000465666999999996, ...</msg>
<status status="PASS" starttime="20201029 12:43:27.717" endtime="20201029 12:43:27.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.735" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:27.732" endtime="20201029 12:43:27.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.740" level="INFO">VALUE: [0.00046566700000000294, 0.00046565299999999643, 0.00046563899999999686, 0.00046565299999999643, 0.00046566600000000347, 0.00046565300000000337, 0.00046565300000000337, 0.000465666999999996, 0.00046565299999999643, 0.00046565299999999643, 0.00046566700000000294, 0.0004655970000000051, 0.0004656390000000038, 0.00046563899999999686, 0.00046563899999999686, 0.00046565299999999643, 0.000465666999999996, 0.00046568000000000304, 0.00046566600000000347, 0.00046565300000000337, 0.00046569399999999567, 0.00046565299999999643, 0.00046563899999999686, 0.00046566700000000294, 0.00046565300000000337, 0.00046565300000000337, 0.00046563899999999686, 0.00046570900000000165, 0.0004657080000000022, 0.00046562500000000423, 0.0004655970000000051, 0.00046565300000000337, 0.00046563899999999686, 0.00046565299999999643, 0.00046565199999999696, 0.00046566700000000294, 0.0004656520000000039, 0.00046566700000000294, 0.00046563899999999686, 0.00046565299999999643, 0.0004655979999999976, 0.00046563899999999686, 0.00046565300000000337, 0.00048432000000000336, 0.00046565199999999696, 0.00046563899999999686, 0.0004656249999999973, 0.00046565299999999643, 0.00046561100000000466, 0.0004656390000000038]</msg>
<status status="PASS" starttime="20201029 12:43:27.737" endtime="20201029 12:43:27.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.726" endtime="20201029 12:43:27.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.237" endtime="20201029 12:43:27.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.207" endtime="20201029 12:43:27.745"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:27.751" endtime="20201029 12:43:27.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.747" endtime="20201029 12:43:27.775"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.796" endtime="20201029 12:43:27.835"></status>
</kw>
<msg timestamp="20201029 12:43:27.836" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.792" endtime="20201029 12:43:27.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:27.842" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:27.838" endtime="20201029 12:43:27.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.844" endtime="20201029 12:43:27.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.785" endtime="20201029 12:43:27.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.780" endtime="20201029 12:43:27.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:27.869" endtime="20201029 12:43:28.210"></status>
</kw>
<msg timestamp="20201029 12:43:28.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036811569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037304417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:27.865" endtime="20201029 12:43:28.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036811569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037304417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.219" endtime="20201029 12:43:28.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.237" endtime="20201029 12:43:28.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.858" endtime="20201029 12:43:28.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.853" endtime="20201029 12:43:28.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.253" level="INFO">${PHILIP_RES} = [{'diff': 0.0004928479999999971}, {'diff': 0.0004928470000000046}, {'diff': 0.0004928610000000042}, {'diff': 0.0004928609999999972}, {'diff': 0.0004928619999999967}, {'diff': 0.0004928610000000042}, {...</msg>
<status status="PASS" starttime="20201029 12:43:28.246" endtime="20201029 12:43:28.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.263" level="INFO">${RESULT} = {'diff': [0.0004928479999999971, 0.0004928470000000046, 0.0004928610000000042, 0.0004928609999999972, 0.0004928619999999967, 0.0004928610000000042, 0.0004928610000000042, 0.0004928609999999972, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:43:28.256" endtime="20201029 12:43:28.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.274" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.271" endtime="20201029 12:43:28.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.279" level="INFO">VALUE: [0.0004928479999999971, 0.0004928470000000046, 0.0004928610000000042, 0.0004928609999999972, 0.0004928619999999967, 0.0004928610000000042, 0.0004928610000000042, 0.0004928609999999972, 0.0004928469999999976, 0.0004928750000000037, 0.0004928750000000037, 0.0005121110000000026, 0.0004929169999999955, 0.0004928480000000041, 0.0004927920000000058, 0.0004928609999999972, 0.0004928329999999981, 0.0004928610000000042, 0.0004928750000000037, 0.0004928609999999972, 0.0004928469999999976, 0.0004928470000000046, 0.0004928750000000037, 0.0004928609999999972, 0.0004928609999999972, 0.0004928610000000042, 0.0004928329999999981, 0.0004928609999999972, 0.0004928749999999968, 0.0004928610000000042, 0.0004928750000000037, 0.0004928469999999976, 0.0004928479999999971, 0.0004928750000000037, 0.0004928609999999972, 0.0004928469999999976, 0.0004928610000000042, 0.0004928610000000042, 0.0004928609999999972, 0.0004928889999999964, 0.0004928610000000042, 0.0004928610000000042, 0.0004928059999999984, 0.0004928469999999976, 0.0004928610000000042, 0.0004928610000000042, 0.0004928609999999972, 0.0004928189999999985, 0.0004928339999999906, 0.0004928609999999972]</msg>
<status status="PASS" starttime="20201029 12:43:28.276" endtime="20201029 12:43:28.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.265" endtime="20201029 12:43:28.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.776" endtime="20201029 12:43:28.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:27.746" endtime="20201029 12:43:28.284"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.290" endtime="20201029 12:43:28.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.286" endtime="20201029 12:43:28.314"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.337" endtime="20201029 12:43:28.374"></status>
</kw>
<msg timestamp="20201029 12:43:28.375" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.334" endtime="20201029 12:43:28.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.382" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.378" endtime="20201029 12:43:28.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.384" endtime="20201029 12:43:28.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.326" endtime="20201029 12:43:28.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.321" endtime="20201029 12:43:28.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.408" endtime="20201029 12:43:28.748"></status>
</kw>
<msg timestamp="20201029 12:43:28.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.405" endtime="20201029 12:43:28.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037106653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.757" endtime="20201029 12:43:28.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.776" endtime="20201029 12:43:28.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.397" endtime="20201029 12:43:28.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.392" endtime="20201029 12:43:28.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:28.792" level="INFO">${PHILIP_RES} = [{'diff': 0.0005207909999999996}, {'diff': 0.0005208469999999979}, {'diff': 0.0005208609999999975}, {'diff': 0.0005208200000000052}, {'diff': 0.0005208330000000053}, {'diff': 0.0005208469999999979}, {...</msg>
<status status="PASS" starttime="20201029 12:43:28.784" endtime="20201029 12:43:28.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:28.801" level="INFO">${RESULT} = {'diff': [0.0005207909999999996, 0.0005208469999999979, 0.0005208609999999975, 0.0005208200000000052, 0.0005208330000000053, 0.0005208469999999979, 0.0005208199999999982, 0.000520875000000004, 0.00052...</msg>
<status status="PASS" starttime="20201029 12:43:28.794" endtime="20201029 12:43:28.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.812" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:28.810" endtime="20201029 12:43:28.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.819" level="INFO">VALUE: [0.0005207909999999996, 0.0005208469999999979, 0.0005208609999999975, 0.0005208200000000052, 0.0005208330000000053, 0.0005208469999999979, 0.0005208199999999982, 0.000520875000000004, 0.0005208609999999975, 0.0005208469999999979, 0.0005208339999999978, 0.0005208190000000057, 0.0005208329999999983, 0.0005208469999999979, 0.0005208339999999978, 0.0005208330000000053, 0.0005207919999999991, 0.0005208199999999982, 0.000520875000000004, 0.0005208329999999983, 0.0005208469999999979, 0.0005208620000000039, 0.000520875000000004, 0.0005207909999999996, 0.0005208189999999988, 0.0005208480000000043, 0.0005208330000000053, 0.0005209029999999962, 0.0005208469999999979, 0.0005208340000000047, 0.0005208329999999983, 0.0005208469999999979, 0.0005208329999999983, 0.0005208470000000048, 0.0005208189999999988, 0.0005208189999999988, 0.0005208480000000043, 0.0005208330000000053, 0.000520874999999997, 0.0005208189999999988, 0.0005208480000000043, 0.0005207909999999996, 0.0005367920000000012, 0.0005208329999999983, 0.0005207919999999991, 0.0005208479999999974, 0.0005208200000000052, 0.0005208330000000122, 0.0005208470000000048, 0.0005208059999999987]</msg>
<status status="PASS" starttime="20201029 12:43:28.814" endtime="20201029 12:43:28.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.803" endtime="20201029 12:43:28.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.315" endtime="20201029 12:43:28.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.285" endtime="20201029 12:43:28.824"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:28.830" endtime="20201029 12:43:28.852"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.827" endtime="20201029 12:43:28.854"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.876" endtime="20201029 12:43:28.915"></status>
</kw>
<msg timestamp="20201029 12:43:28.916" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.872" endtime="20201029 12:43:28.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:28.922" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:28.918" endtime="20201029 12:43:28.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.925" endtime="20201029 12:43:28.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.865" endtime="20201029 12:43:28.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.859" endtime="20201029 12:43:28.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:28.949" endtime="20201029 12:43:29.289"></status>
</kw>
<msg timestamp="20201029 12:43:29.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035914194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036463792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:28.945" endtime="20201029 12:43:29.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035914194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036463792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.299" endtime="20201029 12:43:29.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.317" endtime="20201029 12:43:29.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.938" endtime="20201029 12:43:29.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.933" endtime="20201029 12:43:29.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.334" level="INFO">${PHILIP_RES} = [{'diff': 0.0005495979999999984}, {'diff': 0.000549625000000005}, {'diff': 0.0005495969999999989}, {'diff': 0.0005495829999999993}, {'diff': 0.0005495559999999997}, {'diff': 0.0005495699999999992}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:29.326" endtime="20201029 12:43:29.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.348" level="INFO">${RESULT} = {'diff': [0.0005495979999999984, 0.000549625000000005, 0.0005495969999999989, 0.0005495829999999993, 0.0005495559999999997, 0.0005495699999999992, 0.0005495699999999992, 0.0005495829999999993, 0.00054...</msg>
<status status="PASS" starttime="20201029 12:43:29.336" endtime="20201029 12:43:29.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.359" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.357" endtime="20201029 12:43:29.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.365" level="INFO">VALUE: [0.0005495979999999984, 0.000549625000000005, 0.0005495969999999989, 0.0005495829999999993, 0.0005495559999999997, 0.0005495699999999992, 0.0005495699999999992, 0.0005495829999999993, 0.0005495689999999998, 0.0005495829999999993, 0.0005495829999999993, 0.0005495420000000001, 0.0005495980000000053, 0.0005495699999999992, 0.0005495559999999997, 0.0005704019999999976, 0.0005495699999999992, 0.0005495699999999992, 0.0005495699999999992, 0.0005495689999999998, 0.0005495689999999998, 0.0005495829999999993, 0.0005495699999999992, 0.0005496109999999985, 0.0005495699999999992, 0.0005495829999999993, 0.0005495689999999998, 0.0005495689999999998, 0.0005495689999999998, 0.0005495699999999992, 0.0005495839999999988, 0.0005495699999999992, 0.0005495829999999993, 0.0005495410000000006, 0.0005495689999999998, 0.0005495410000000006, 0.0005495420000000001, 0.0005495699999999992, 0.0005495689999999998, 0.0005495689999999998, 0.0005495689999999998, 0.0005496529999999972, 0.0005495559999999997, 0.0005495559999999997, 0.000549514000000001, 0.0005495689999999998, 0.0005495830000000063, 0.0005495830000000063, 0.0005495550000000071, 0.0005495699999999992]</msg>
<status status="PASS" starttime="20201029 12:43:29.361" endtime="20201029 12:43:29.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.350" endtime="20201029 12:43:29.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.855" endtime="20201029 12:43:29.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:28.825" endtime="20201029 12:43:29.370"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.375" endtime="20201029 12:43:29.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.372" endtime="20201029 12:43:29.399"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.421" endtime="20201029 12:43:29.462"></status>
</kw>
<msg timestamp="20201029 12:43:29.463" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.417" endtime="20201029 12:43:29.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.470" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.465" endtime="20201029 12:43:29.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.472" endtime="20201029 12:43:29.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.410" endtime="20201029 12:43:29.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.404" endtime="20201029 12:43:29.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.497" endtime="20201029 12:43:29.828"></status>
</kw>
<msg timestamp="20201029 12:43:29.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035791583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036370611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.494" endtime="20201029 12:43:29.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035791583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036370611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.832" endtime="20201029 12:43:29.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.840" endtime="20201029 12:43:29.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.486" endtime="20201029 12:43:29.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.481" endtime="20201029 12:43:29.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:29.848" level="INFO">${PHILIP_RES} = [{'diff': 0.0005790279999999953}, {'diff': 0.0005791529999999989}, {'diff': 0.0005790970000000006}, {'diff': 0.0005790280000000023}, {'diff': 0.0005790560000000014}, {'diff': 0.0005791249999999998}, {...</msg>
<status status="PASS" starttime="20201029 12:43:29.844" endtime="20201029 12:43:29.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:29.853" level="INFO">${RESULT} = {'diff': [0.0005790279999999953, 0.0005791529999999989, 0.0005790970000000006, 0.0005790280000000023, 0.0005790560000000014, 0.0005791249999999998, 0.0005790559999999945, 0.0005790550000000019, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:43:29.849" endtime="20201029 12:43:29.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.858" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:29.857" endtime="20201029 12:43:29.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.861" level="INFO">VALUE: [0.0005790279999999953, 0.0005791529999999989, 0.0005790970000000006, 0.0005790280000000023, 0.0005790560000000014, 0.0005791249999999998, 0.0005790559999999945, 0.0005790550000000019, 0.000579070000000001, 0.0005790830000000011, 0.0005790840000000005, 0.0005790830000000011, 0.000579069999999994, 0.0005790690000000015, 0.0005791110000000002, 0.0005790970000000006, 0.0005790410000000024, 0.0005791110000000002, 0.0005790829999999941, 0.000579070000000001, 0.0005790830000000011, 0.000579070000000001, 0.0005790550000000019, 0.000579070000000001, 0.000579054999999995, 0.0005790410000000024, 0.0005791110000000002, 0.0005791249999999998, 0.0005790970000000006, 0.0005790830000000011, 0.000579069999999994, 0.0005790690000000015, 0.000579070000000001, 0.0005791110000000002, 0.0005900980000000042, 0.0005790560000000014, 0.0005790840000000005, 0.0005791249999999998, 0.0005790690000000015, 0.0005790689999999946, 0.0005790690000000015, 0.0005790140000000027, 0.0005790830000000011, 0.0005790980000000001, 0.0005790970000000006, 0.0005791529999999989, 0.000579083000000008, 0.000579070000000001, 0.0005790139999999888, 0.000579070000000001]</msg>
<status status="PASS" starttime="20201029 12:43:29.859" endtime="20201029 12:43:29.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.854" endtime="20201029 12:43:29.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.400" endtime="20201029 12:43:29.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.370" endtime="20201029 12:43:29.863"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:29.866" endtime="20201029 12:43:29.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.864" endtime="20201029 12:43:29.886"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.896" endtime="20201029 12:43:29.937"></status>
</kw>
<msg timestamp="20201029 12:43:29.939" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.895" endtime="20201029 12:43:29.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:29.945" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:29.941" endtime="20201029 12:43:29.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.947" endtime="20201029 12:43:29.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.891" endtime="20201029 12:43:29.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.889" endtime="20201029 12:43:29.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:29.971" endtime="20201029 12:43:30.316"></status>
</kw>
<msg timestamp="20201029 12:43:30.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020901514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:29.968" endtime="20201029 12:43:30.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020292181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020901514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.327" endtime="20201029 12:43:30.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.346" endtime="20201029 12:43:30.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.960" endtime="20201029 12:43:30.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.956" endtime="20201029 12:43:30.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.366" level="INFO">${PHILIP_RES} = [{'diff': 0.0006093330000000001}, {'diff': 0.0006093060000000004}, {'diff': 0.0006093469999999997}, {'diff': 0.0006093469999999997}, {'diff': 0.0006093610000000027}, {'diff': 0.000609417000000001}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:30.357" endtime="20201029 12:43:30.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.376" level="INFO">${RESULT} = {'diff': [0.0006093330000000001, 0.0006093060000000004, 0.0006093469999999997, 0.0006093469999999997, 0.0006093610000000027, 0.000609417000000001, 0.0006093610000000027, 0.0006093470000000031, 0.00063...</msg>
<status status="PASS" starttime="20201029 12:43:30.368" endtime="20201029 12:43:30.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.388" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.385" endtime="20201029 12:43:30.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.393" level="INFO">VALUE: [0.0006093330000000001, 0.0006093060000000004, 0.0006093469999999997, 0.0006093469999999997, 0.0006093610000000027, 0.000609417000000001, 0.0006093610000000027, 0.0006093470000000031, 0.0006344999999999996, 0.0006093469999999997, 0.0006093889999999984, 0.0006093609999999992, 0.0006093609999999992, 0.0006093469999999997, 0.0006093339999999996, 0.0006093339999999996, 0.0006093609999999992, 0.0006093470000000031, 0.0006093469999999962, 0.0006093470000000031, 0.0006093469999999962, 0.0006093330000000036, 0.0006093339999999961, 0.0006093610000000027, 0.0006093330000000036, 0.0006093620000000022, 0.0006093610000000027, 0.0006093609999999958, 0.0006093890000000018, 0.0006093329999999966, 0.0006093330000000036, 0.0006093199999999965, 0.0006094030000000014, 0.0006093469999999962, 0.000609334000000003, 0.0006093469999999962, 0.0006093750000000023, 0.0006093469999999962, 0.0006093329999999966, 0.0006093610000000027, 0.0006093189999999971, 0.0006093470000000031, 0.0006093469999999962, 0.0006093470000000031, 0.0006093329999999966, 0.0006093890000000018, 0.0006093609999999958, 0.0006093330000000036, 0.0006094030000000014, 0.0006093470000000031]</msg>
<status status="PASS" starttime="20201029 12:43:30.390" endtime="20201029 12:43:30.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.378" endtime="20201029 12:43:30.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.887" endtime="20201029 12:43:30.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:29.864" endtime="20201029 12:43:30.398"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.404" endtime="20201029 12:43:30.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.401" endtime="20201029 12:43:30.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.449" endtime="20201029 12:43:30.495"></status>
</kw>
<msg timestamp="20201029 12:43:30.496" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.446" endtime="20201029 12:43:30.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.503" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.499" endtime="20201029 12:43:30.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.505" endtime="20201029 12:43:30.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.439" endtime="20201029 12:43:30.511"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.433" endtime="20201029 12:43:30.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.529" endtime="20201029 12:43:30.870"></status>
</kw>
<msg timestamp="20201029 12:43:30.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037250736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.526" endtime="20201029 12:43:30.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037250736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:30.879" endtime="20201029 12:43:30.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.897" endtime="20201029 12:43:30.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.518" endtime="20201029 12:43:30.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.513" endtime="20201029 12:43:30.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:30.914" level="INFO">${PHILIP_RES} = [{'diff': 0.0006403749999999986}, {'diff': 0.0006403889999999982}, {'diff': 0.0006403749999999986}, {'diff': 0.0006403749999999986}, {'diff': 0.0006403750000000055}, {'diff': 0.0006403750000000055}, {...</msg>
<status status="PASS" starttime="20201029 12:43:30.906" endtime="20201029 12:43:30.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:30.923" level="INFO">${RESULT} = {'diff': [0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.0006403749999999986, 0.0006403750000000055, 0.0006403750000000055, 0.0006403879999999987, 0.0006403749999999986, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:30.916" endtime="20201029 12:43:30.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.934" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:30.931" endtime="20201029 12:43:30.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:30.939" level="INFO">VALUE: [0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.0006403749999999986, 0.0006403750000000055, 0.0006403750000000055, 0.0006403879999999987, 0.0006403749999999986, 0.0006403749999999986, 0.0006666799999999959, 0.0006403749999999986, 0.0006403749999999986, 0.0006404029999999977, 0.000640361000000006, 0.0006403749999999986, 0.0006403889999999982, 0.0006403889999999982, 0.0006403749999999986, 0.000640360999999999, 0.000640361000000006, 0.0006403750000000055, 0.0006403329999999999, 0.0006404169999999973, 0.0006403749999999986, 0.0006403749999999986, 0.0006403469999999994, 0.000640361000000006, 0.0006403749999999986, 0.0006403060000000002, 0.000640360999999999, 0.0006403749999999986, 0.0006403749999999986, 0.000640361000000006, 0.0006403749999999986, 0.0006403889999999982, 0.0006403060000000002, 0.0006403749999999986, 0.0006404170000000042, 0.0006403890000000051, 0.0006403749999999986, 0.0006403890000000051, 0.0006404029999999977, 0.0006403890000000051, 0.0006403879999999917, 0.0006403889999999912, 0.0006403469999999994, 0.0006403469999999994, 0.0006403880000000056, 0.0006403749999999986, 0.0006403750000000125]</msg>
<status status="PASS" starttime="20201029 12:43:30.936" endtime="20201029 12:43:30.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.925" endtime="20201029 12:43:30.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.429" endtime="20201029 12:43:30.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.399" endtime="20201029 12:43:30.944"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:30.950" endtime="20201029 12:43:30.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.946" endtime="20201029 12:43:30.974"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:30.997" endtime="20201029 12:43:31.043"></status>
</kw>
<msg timestamp="20201029 12:43:31.044" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:30.993" endtime="20201029 12:43:31.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.051" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.047" endtime="20201029 12:43:31.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.053" endtime="20201029 12:43:31.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.986" endtime="20201029 12:43:31.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.980" endtime="20201029 12:43:31.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.077" endtime="20201029 12:43:31.418"></status>
</kw>
<msg timestamp="20201029 12:43:31.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037836583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.074" endtime="20201029 12:43:31.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037164403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037836583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.427" endtime="20201029 12:43:31.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.446" endtime="20201029 12:43:31.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.066" endtime="20201029 12:43:31.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.062" endtime="20201029 12:43:31.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:31.462" level="INFO">${PHILIP_RES} = [{'diff': 0.0006721800000000014}, {'diff': 0.0006722369999999991}, {'diff': 0.0006721670000000013}, {'diff': 0.0006721519999999953}, {'diff': 0.0006721659999999949}, {'diff': 0.0006721109999999961}, {...</msg>
<status status="PASS" starttime="20201029 12:43:31.454" endtime="20201029 12:43:31.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:31.471" level="INFO">${RESULT} = {'diff': [0.0006721800000000014, 0.0006722369999999991, 0.0006721670000000013, 0.0006721519999999953, 0.0006721659999999949, 0.0006721109999999961, 0.0006721660000000018, 0.0006721520000000022, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:43:31.464" endtime="20201029 12:43:31.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.482" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:31.479" endtime="20201029 12:43:31.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.489" level="INFO">VALUE: [0.0006721800000000014, 0.0006722369999999991, 0.0006721670000000013, 0.0006721519999999953, 0.0006721659999999949, 0.0006721109999999961, 0.0006721660000000018, 0.0006721520000000022, 0.0006721670000000013, 0.0006721670000000013, 0.0006721120000000025, 0.0006720829999999969, 0.0006721670000000013, 0.0006721669999999944, 0.0006721800000000014, 0.0006720970000000034, 0.0006721670000000013, 0.0006721660000000018, 0.0006721800000000014, 0.0006721670000000013, 0.0006721800000000014, 0.0006721800000000014, 0.0006721530000000017, 0.0006721809999999939, 0.0006721660000000018, 0.0006923890000000016, 0.0006721660000000018, 0.0006721660000000018, 0.0006721530000000017, 0.0006721810000000009, 0.0006721659999999949, 0.0006720969999999965, 0.0006721950000000004, 0.0006721800000000014, 0.0006721670000000013, 0.0006721809999999939, 0.0006721670000000013, 0.0006721800000000083, 0.0006721809999999939, 0.0006721530000000087, 0.0006721800000000083, 0.0006721670000000013, 0.0006721529999999948, 0.000672194000000001, 0.0006721530000000087, 0.0006721809999999939, 0.0006721670000000013, 0.0006721800000000083, 0.0006722359999999927, 0.000672194000000001]</msg>
<status status="PASS" starttime="20201029 12:43:31.484" endtime="20201029 12:43:31.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.473" endtime="20201029 12:43:31.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.975" endtime="20201029 12:43:31.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:30.945" endtime="20201029 12:43:31.494"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:31.500" endtime="20201029 12:43:31.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.496" endtime="20201029 12:43:31.523"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.545" endtime="20201029 12:43:31.593"></status>
</kw>
<msg timestamp="20201029 12:43:31.595" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.541" endtime="20201029 12:43:31.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.601" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:31.597" endtime="20201029 12:43:31.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.603" endtime="20201029 12:43:31.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.534" endtime="20201029 12:43:31.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.529" endtime="20201029 12:43:31.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.627" endtime="20201029 12:43:31.966"></status>
</kw>
<msg timestamp="20201029 12:43:31.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036380375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.624" endtime="20201029 12:43:31.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:31.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036380375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:31.975" endtime="20201029 12:43:31.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:31.993" endtime="20201029 12:43:31.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.616" endtime="20201029 12:43:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.611" endtime="20201029 12:43:32.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.010" level="INFO">${PHILIP_RES} = [{'diff': 0.0007047359999999975}, {'diff': 0.0007047359999999975}, {'diff': 0.0007046799999999992}, {'diff': 0.0007046669999999991}, {'diff': 0.0007047359999999975}, {'diff': 0.000704750000000004}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:32.002" endtime="20201029 12:43:32.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.021" level="INFO">${RESULT} = {'diff': [0.0007047359999999975, 0.0007047359999999975, 0.0007046799999999992, 0.0007046669999999991, 0.0007047359999999975, 0.000704750000000004, 0.0007047230000000043, 0.0007047219999999979, 0.00070...</msg>
<status status="PASS" starttime="20201029 12:43:32.012" endtime="20201029 12:43:32.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.031" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.029" endtime="20201029 12:43:32.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.037" level="INFO">VALUE: [0.0007047359999999975, 0.0007047359999999975, 0.0007046799999999992, 0.0007046669999999991, 0.0007047359999999975, 0.000704750000000004, 0.0007047230000000043, 0.0007047219999999979, 0.0007047770000000037, 0.0007047220000000048, 0.0007046669999999991, 0.000704749999999997, 0.0007047360000000044, 0.0007046529999999995, 0.0007047219999999979, 0.0007047640000000036, 0.0007047779999999962, 0.0007047219999999979, 0.0007047219999999979, 0.0007047360000000044, 0.000704749999999997, 0.0007047079999999983, 0.0007046669999999991, 0.0007047359999999975, 0.0007047359999999975, 0.000704750000000004, 0.0007047219999999979, 0.0007047219999999979, 0.0007047220000000048, 0.000704749999999997, 0.000704749999999997, 0.0007047360000000044, 0.0007047360000000044, 0.0007047219999999979, 0.000704749999999997, 0.0007047220000000048, 0.000716333999999999, 0.0007046800000000131, 0.000704721999999991, 0.0007047359999999975, 0.0007047220000000048, 0.0007047359999999975, 0.0007047359999999975, 0.0007047370000000108, 0.0007047359999999975, 0.000704721999999991, 0.0007047220000000048, 0.0007047080000000122, 0.0007047359999999975, 0.0007047220000000048]</msg>
<status status="PASS" starttime="20201029 12:43:32.034" endtime="20201029 12:43:32.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.022" endtime="20201029 12:43:32.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.525" endtime="20201029 12:43:32.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:31.495" endtime="20201029 12:43:32.042"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.048" endtime="20201029 12:43:32.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.044" endtime="20201029 12:43:32.072"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.094" endtime="20201029 12:43:32.143"></status>
</kw>
<msg timestamp="20201029 12:43:32.145" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.091" endtime="20201029 12:43:32.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.151" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.147" endtime="20201029 12:43:32.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.153" endtime="20201029 12:43:32.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.083" endtime="20201029 12:43:32.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.078" endtime="20201029 12:43:32.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.177" endtime="20201029 12:43:32.517"></status>
</kw>
<msg timestamp="20201029 12:43:32.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0367175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:32.174" endtime="20201029 12:43:32.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0367175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037455556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:43:32.526" endtime="20201029 12:43:32.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.545" endtime="20201029 12:43:32.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.167" endtime="20201029 12:43:32.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.161" endtime="20201029 12:43:32.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:32.561" level="INFO">${PHILIP_RES} = [{'diff': 0.0007380560000000008}, {'diff': 0.0007380420000000013}, {'diff': 0.0007631950000000012}, {'diff': 0.0007381250000000061}, {'diff': 0.0007380550000000013}, {'diff': 0.0007380560000000008}, {...</msg>
<status status="PASS" starttime="20201029 12:43:32.553" endtime="20201029 12:43:32.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:32.572" level="INFO">${RESULT} = {'diff': [0.0007380560000000008, 0.0007380420000000013, 0.0007631950000000012, 0.0007381250000000061, 0.0007380550000000013, 0.0007380560000000008, 0.0007380420000000013, 0.0007380270000000022, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:43:32.563" endtime="20201029 12:43:32.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.582" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:32.580" endtime="20201029 12:43:32.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.588" level="INFO">VALUE: [0.0007380560000000008, 0.0007380420000000013, 0.0007631950000000012, 0.0007381250000000061, 0.0007380550000000013, 0.0007380560000000008, 0.0007380420000000013, 0.0007380270000000022, 0.0007380420000000013, 0.0007380420000000013, 0.0007380549999999944, 0.0007380280000000017, 0.0007380559999999939, 0.0007380550000000013, 0.0007380550000000013, 0.0007380970000000001, 0.0007380550000000013, 0.0007380270000000022, 0.0007380420000000013, 0.0007380560000000008, 0.0007380690000000009, 0.0007380420000000013, 0.0007380560000000008, 0.0007380409999999948, 0.0007380420000000013, 0.0007380560000000008, 0.0007380550000000013, 0.0007380139999999952, 0.0007380000000000025, 0.0007380550000000013, 0.0007380000000000025, 0.0007380420000000013, 0.0007380549999999944, 0.000738068999999994, 0.0007380560000000008, 0.0007380559999999869, 0.0007380409999999948, 0.0007380560000000008, 0.0007380700000000073, 0.0007380690000000079, 0.0007380420000000082, 0.0007380420000000082, 0.0007380410000000087, 0.0007380560000000008, 0.0007572780000000001, 0.0007380410000000087, 0.0007380560000000008, 0.0007379579999999969, 0.0007380409999999948, 0.0007380560000000008]</msg>
<status status="PASS" starttime="20201029 12:43:32.585" endtime="20201029 12:43:32.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.574" endtime="20201029 12:43:32.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.073" endtime="20201029 12:43:32.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.043" endtime="20201029 12:43:32.601"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:32.608" endtime="20201029 12:43:32.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.604" endtime="20201029 12:43:32.631"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.653" endtime="20201029 12:43:32.704"></status>
</kw>
<msg timestamp="20201029 12:43:32.705" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.649" endtime="20201029 12:43:32.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:32.711" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:32.708" endtime="20201029 12:43:32.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.714" endtime="20201029 12:43:32.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.642" endtime="20201029 12:43:32.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.636" endtime="20201029 12:43:32.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:32.738" endtime="20201029 12:43:33.080"></status>
</kw>
<msg timestamp="20201029 12:43:33.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036661181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:32.735" endtime="20201029 12:43:33.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036661181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.090" endtime="20201029 12:43:33.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.109" endtime="20201029 12:43:33.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.727" endtime="20201029 12:43:33.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.722" endtime="20201029 12:43:33.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.125" level="INFO">${PHILIP_RES} = [{'diff': 0.0008010560000000014}, {'diff': 0.0007721389999999981}, {'diff': 0.0007721519999999982}, {'diff': 0.0007721519999999982}, {'diff': 0.0007721949999999964}, {'diff': 0.000772139000000005}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:33.118" endtime="20201029 12:43:33.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.135" level="INFO">${RESULT} = {'diff': [0.0008010560000000014, 0.0007721389999999981, 0.0007721519999999982, 0.0007721519999999982, 0.0007721949999999964, 0.000772139000000005, 0.0007721669999999972, 0.000772139000000005, 0.000772...</msg>
<status status="PASS" starttime="20201029 12:43:33.128" endtime="20201029 12:43:33.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.146" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.143" endtime="20201029 12:43:33.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.151" level="INFO">VALUE: [0.0008010560000000014, 0.0007721389999999981, 0.0007721519999999982, 0.0007721519999999982, 0.0007721949999999964, 0.000772139000000005, 0.0007721669999999972, 0.000772139000000005, 0.0007721950000000033, 0.0007721670000000042, 0.0007721389999999981, 0.0007721669999999972, 0.0007721249999999985, 0.0007720969999999994, 0.0007721250000000054, 0.0007721529999999976, 0.000772139000000005, 0.0007721389999999981, 0.0007720839999999993, 0.0007721389999999981, 0.0007720699999999997, 0.0007721249999999985, 0.0007721249999999985, 0.0007721519999999982, 0.0007721389999999981, 0.000772139000000005, 0.0007721389999999981, 0.0007721250000000054, 0.0007721529999999976, 0.0007721669999999972, 0.0007720829999999998, 0.0007721389999999981, 0.000772139000000005, 0.000772139000000005, 0.0007721939999999899, 0.0007721529999999976, 0.0007721110000000059, 0.000772139000000005, 0.000772139000000005, 0.0007721110000000059, 0.000799486000000002, 0.0007721389999999911, 0.000772139000000005, 0.0007721249999999985, 0.000772139000000005, 0.000772139000000005, 0.0007721519999999982, 0.0007721250000000124, 0.0007721519999999982, 0.0007721380000000055]</msg>
<status status="PASS" starttime="20201029 12:43:33.148" endtime="20201029 12:43:33.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.137" endtime="20201029 12:43:33.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.632" endtime="20201029 12:43:33.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:32.602" endtime="20201029 12:43:33.156"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.162" endtime="20201029 12:43:33.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.158" endtime="20201029 12:43:33.186"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.207" endtime="20201029 12:43:33.262"></status>
</kw>
<msg timestamp="20201029 12:43:33.263" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.204" endtime="20201029 12:43:33.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.270" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.266" endtime="20201029 12:43:33.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.272" endtime="20201029 12:43:33.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.197" endtime="20201029 12:43:33.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.191" endtime="20201029 12:43:33.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.296" endtime="20201029 12:43:33.637"></status>
</kw>
<msg timestamp="20201029 12:43:33.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037154028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037961014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.292" endtime="20201029 12:43:33.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037154028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037961014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:33.647" endtime="20201029 12:43:33.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.656" endtime="20201029 12:43:33.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.285" endtime="20201029 12:43:33.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.280" endtime="20201029 12:43:33.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:33.664" level="INFO">${PHILIP_RES} = [{'diff': 0.0008069860000000026}, {'diff': 0.0008069999999999952}, {'diff': 0.0008240280000000044}, {'diff': 0.0008070139999999948}, {'diff': 0.0008069870000000021}, {'diff': 0.0008069719999999961}, {...</msg>
<status status="PASS" starttime="20201029 12:43:33.660" endtime="20201029 12:43:33.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:33.668" level="INFO">${RESULT} = {'diff': [0.0008069860000000026, 0.0008069999999999952, 0.0008240280000000044, 0.0008070139999999948, 0.0008069870000000021, 0.0008069719999999961, 0.0008069860000000026, 0.0008069860000000026, 0.0008...</msg>
<status status="PASS" starttime="20201029 12:43:33.665" endtime="20201029 12:43:33.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.673" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:33.672" endtime="20201029 12:43:33.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.676" level="INFO">VALUE: [0.0008069860000000026, 0.0008069999999999952, 0.0008240280000000044, 0.0008070139999999948, 0.0008069870000000021, 0.0008069719999999961, 0.0008069860000000026, 0.0008069860000000026, 0.0008069719999999961, 0.0008069860000000026, 0.0008069719999999961, 0.0008070140000000017, 0.0008069300000000043, 0.0008069999999999952, 0.0008070000000000022, 0.0008069859999999957, 0.0008070000000000022, 0.0008070140000000017, 0.0008069859999999957, 0.0008069860000000026, 0.0008069859999999957, 0.0008070000000000022, 0.000807055000000001, 0.0008070560000000004, 0.000806972000000003, 0.0008069859999999957, 0.0008069860000000026, 0.0008069859999999957, 0.0008069719999999961, 0.0008069999999999952, 0.0008069860000000095, 0.0008069859999999957, 0.000806958999999996, 0.0008069859999999957, 0.0008069859999999957, 0.0008069859999999957, 0.000807026999999988, 0.0008069859999999957, 0.0008069859999999957, 0.0008069860000000095, 0.0008282780000000017, 0.0008069859999999957, 0.000806972000000003, 0.0008069719999999891, 0.0008070000000000022, 0.0008069310000000107, 0.0008070000000000022, 0.000807055000000001, 0.0008070139999999948, 0.0008069730000000025]</msg>
<status status="PASS" starttime="20201029 12:43:33.674" endtime="20201029 12:43:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.669" endtime="20201029 12:43:33.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.187" endtime="20201029 12:43:33.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.157" endtime="20201029 12:43:33.678"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:33.681" endtime="20201029 12:43:33.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.679" endtime="20201029 12:43:33.701"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.712" endtime="20201029 12:43:33.766"></status>
</kw>
<msg timestamp="20201029 12:43:33.768" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.711" endtime="20201029 12:43:33.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:33.774" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:33.770" endtime="20201029 12:43:33.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.776" endtime="20201029 12:43:33.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.707" endtime="20201029 12:43:33.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.705" endtime="20201029 12:43:33.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:33.800" endtime="20201029 12:43:34.143"></status>
</kw>
<msg timestamp="20201029 12:43:34.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:33.797" endtime="20201029 12:43:34.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021207, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022049597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:43:34.153" endtime="20201029 12:43:34.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.171" endtime="20201029 12:43:34.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.789" endtime="20201029 12:43:34.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.785" endtime="20201029 12:43:34.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.188" level="INFO">${PHILIP_RES} = [{'diff': 0.0008425970000000005}, {'diff': 0.0008425970000000005}, {'diff': 0.0008426249999999996}, {'diff': 0.0008425970000000005}, {'diff': 0.0008426389999999992}, {'diff': 0.0008426119999999995}, {...</msg>
<status status="PASS" starttime="20201029 12:43:34.180" endtime="20201029 12:43:34.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.197" level="INFO">${RESULT} = {'diff': [0.0008425970000000005, 0.0008425970000000005, 0.0008426249999999996, 0.0008425970000000005, 0.0008426389999999992, 0.0008426119999999995, 0.000842598, 0.0008426110000000001, 0.00084258300000...</msg>
<status status="PASS" starttime="20201029 12:43:34.190" endtime="20201029 12:43:34.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.208" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.206" endtime="20201029 12:43:34.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.215" level="INFO">VALUE: [0.0008425970000000005, 0.0008425970000000005, 0.0008426249999999996, 0.0008425970000000005, 0.0008426389999999992, 0.0008426119999999995, 0.000842598, 0.0008426110000000001, 0.0008425830000000009, 0.0008426110000000001, 0.0008426249999999996, 0.0008426110000000001, 0.0008426110000000001, 0.0008426110000000001, 0.0008426529999999988, 0.0008425970000000005, 0.0008426110000000001, 0.0008426110000000001, 0.0008425830000000009, 0.000842582999999994, 0.0008426389999999992, 0.0008425970000000005, 0.0008426110000000001, 0.0008426119999999995, 0.0008426110000000001, 0.0008425970000000005, 0.0008426250000000066, 0.0008426389999999992, 0.0008425830000000009, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.000842598, 0.0008426389999999992, 0.0008425970000000005, 0.0008426529999999988, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.0008426110000000001, 0.0008426110000000001, 0.0008425550000000018, 0.0008426119999999995, 0.0008426249999999996, 0.0008425830000000009, 0.000842582999999994, 0.0008425970000000005, 0.000842582999999994]</msg>
<status status="PASS" starttime="20201029 12:43:34.210" endtime="20201029 12:43:34.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.199" endtime="20201029 12:43:34.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.702" endtime="20201029 12:43:34.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:33.679" endtime="20201029 12:43:34.220"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.226" endtime="20201029 12:43:34.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.222" endtime="20201029 12:43:34.250"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.271" endtime="20201029 12:43:34.329"></status>
</kw>
<msg timestamp="20201029 12:43:34.330" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.268" endtime="20201029 12:43:34.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.336" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.332" endtime="20201029 12:43:34.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.339" endtime="20201029 12:43:34.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.261" endtime="20201029 12:43:34.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.255" endtime="20201029 12:43:34.345"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.363" endtime="20201029 12:43:34.705"></status>
</kw>
<msg timestamp="20201029 12:43:34.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035972403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036851333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.359" endtime="20201029 12:43:34.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035972403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036851333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.714" endtime="20201029 12:43:34.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.733" endtime="20201029 12:43:34.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.352" endtime="20201029 12:43:34.739"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.347" endtime="20201029 12:43:34.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:34.749" level="INFO">${PHILIP_RES} = [{'diff': 0.00087893}, {'diff': 0.0008789870000000047}, {'diff': 0.0008789999999999978}, {'diff': 0.0008789860000000052}, {'diff': 0.0008789999999999978}, {'diff': 0.0008789860000000052}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 12:43:34.742" endtime="20201029 12:43:34.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:34.764" level="INFO">${RESULT} = {'diff': [0.00087893, 0.0008789870000000047, 0.0008789999999999978, 0.0008789860000000052, 0.0008789999999999978, 0.0008789860000000052, 0.0008790139999999974, 0.0008789730000000051, 0.000878986999999...</msg>
<status status="PASS" starttime="20201029 12:43:34.752" endtime="20201029 12:43:34.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.775" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:34.773" endtime="20201029 12:43:34.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.780" level="INFO">VALUE: [0.00087893, 0.0008789870000000047, 0.0008789999999999978, 0.0008789860000000052, 0.0008789999999999978, 0.0008789860000000052, 0.0008790139999999974, 0.0008789730000000051, 0.0008789869999999977, 0.0008789860000000052, 0.0008790139999999974, 0.0008789860000000052, 0.0008789869999999977, 0.0008789860000000052, 0.0008789719999999987, 0.0008790000000000048, 0.0008789999999999978, 0.0008789020000000008, 0.0008789169999999999, 0.0008789719999999987, 0.0008789859999999983, 0.0008790140000000043, 0.0008976809999999974, 0.0008789579999999991, 0.0008789859999999983, 0.0008789729999999982, 0.0008789169999999999, 0.0008789859999999983, 0.0008789859999999983, 0.0008789720000000056, 0.0008790000000000048, 0.000878945000000006, 0.0008789859999999983, 0.0008789859999999983, 0.0008789859999999983, 0.0008789579999999991, 0.0008789869999999977, 0.0008790270000000044, 0.0008790000000000048, 0.0008789859999999983, 0.0008790000000000048, 0.0008790699999999957, 0.0008789720000000056, 0.0008790000000000048, 0.0008789999999999909, 0.0008789719999999918, 0.0008790559999999892, 0.0008789730000000051, 0.0008789579999999991, 0.0008789440000000065]</msg>
<status status="PASS" starttime="20201029 12:43:34.777" endtime="20201029 12:43:34.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.766" endtime="20201029 12:43:34.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.251" endtime="20201029 12:43:34.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.221" endtime="20201029 12:43:34.786"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:34.791" endtime="20201029 12:43:34.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.788" endtime="20201029 12:43:34.815"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.836" endtime="20201029 12:43:34.895"></status>
</kw>
<msg timestamp="20201029 12:43:34.896" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.833" endtime="20201029 12:43:34.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:34.903" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:34.898" endtime="20201029 12:43:34.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.905" endtime="20201029 12:43:34.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.825" endtime="20201029 12:43:34.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.820" endtime="20201029 12:43:34.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:34.930" endtime="20201029 12:43:35.272"></status>
</kw>
<msg timestamp="20201029 12:43:35.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035300097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036216208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:34.926" endtime="20201029 12:43:35.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035300097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036216208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.281" endtime="20201029 12:43:35.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.299" endtime="20201029 12:43:35.303"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.918" endtime="20201029 12:43:35.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.913" endtime="20201029 12:43:35.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.316" level="INFO">${PHILIP_RES} = [{'diff': 0.0009161109999999972}, {'diff': 0.0009161389999999964}, {'diff': 0.0009161250000000037}, {'diff': 0.0009161109999999972}, {'diff': 0.0009161530000000029}, {'diff': 0.0009161249999999968}, {...</msg>
<status status="PASS" starttime="20201029 12:43:35.308" endtime="20201029 12:43:35.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.326" level="INFO">${RESULT} = {'diff': [0.0009161109999999972, 0.0009161389999999964, 0.0009161250000000037, 0.0009161109999999972, 0.0009161530000000029, 0.0009161249999999968, 0.0009161109999999972, 0.0009161110000000042, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:43:35.318" endtime="20201029 12:43:35.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.337" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.335" endtime="20201029 12:43:35.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.342" level="INFO">VALUE: [0.0009161109999999972, 0.0009161389999999964, 0.0009161250000000037, 0.0009161109999999972, 0.0009161530000000029, 0.0009161249999999968, 0.0009161109999999972, 0.0009161110000000042, 0.0009161249999999968, 0.0009161110000000042, 0.0009161250000000037, 0.0009161389999999964, 0.0009160970000000046, 0.0009428889999999954, 0.0009160970000000046, 0.0009161529999999959, 0.0009160970000000046, 0.0009161250000000037, 0.0009161249999999968, 0.0009161250000000037, 0.0009161109999999972, 0.0009161390000000033, 0.0009161390000000033, 0.0009160419999999989, 0.0009161250000000037, 0.0009161119999999967, 0.0009161389999999964, 0.0009161390000000033, 0.0009161110000000111, 0.0009161109999999972, 0.0009161109999999972, 0.0009161250000000037, 0.0009161389999999964, 0.0009161250000000037, 0.0009161250000000037, 0.0009161250000000037, 0.0009161389999999964, 0.0009160969999999907, 0.0009161110000000111, 0.0009161389999999964, 0.0009161389999999964, 0.0009161800000000025, 0.0009161250000000037, 0.0009161109999999972, 0.0009161519999999895, 0.0009161530000000029, 0.0009161250000000037, 0.0009385550000000076, 0.0009161520000000034, 0.0009161109999999972]</msg>
<status status="PASS" starttime="20201029 12:43:35.339" endtime="20201029 12:43:35.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.328" endtime="20201029 12:43:35.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.816" endtime="20201029 12:43:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:34.786" endtime="20201029 12:43:35.347"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.353" endtime="20201029 12:43:35.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.349" endtime="20201029 12:43:35.376"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.397" endtime="20201029 12:43:35.457"></status>
</kw>
<msg timestamp="20201029 12:43:35.458" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.394" endtime="20201029 12:43:35.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.465" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.461" endtime="20201029 12:43:35.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.467" endtime="20201029 12:43:35.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.387" endtime="20201029 12:43:35.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.381" endtime="20201029 12:43:35.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.490" endtime="20201029 12:43:35.830"></status>
</kw>
<msg timestamp="20201029 12:43:35.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035711292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.487" endtime="20201029 12:43:35.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034757278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035711292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:35.839" endtime="20201029 12:43:35.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.857" endtime="20201029 12:43:35.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.480" endtime="20201029 12:43:35.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.475" endtime="20201029 12:43:35.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:35.873" level="INFO">${PHILIP_RES} = [{'diff': 0.0009540139999999961}, {'diff': 0.0009540409999999958}, {'diff': 0.0009540420000000022}, {'diff': 0.0009539860000000039}, {'diff': 0.0009540280000000026}, {'diff': 0.0009540279999999957}, {...</msg>
<status status="PASS" starttime="20201029 12:43:35.866" endtime="20201029 12:43:35.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:35.882" level="INFO">${RESULT} = {'diff': [0.0009540139999999961, 0.0009540409999999958, 0.0009540420000000022, 0.0009539860000000039, 0.0009540280000000026, 0.0009540279999999957, 0.0009540139999999961, 0.0009540420000000022, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:43:35.875" endtime="20201029 12:43:35.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.892" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:35.890" endtime="20201029 12:43:35.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:35.898" level="INFO">VALUE: [0.0009540139999999961, 0.0009540409999999958, 0.0009540420000000022, 0.0009539860000000039, 0.0009540280000000026, 0.0009540279999999957, 0.0009540139999999961, 0.0009540420000000022, 0.0009540550000000023, 0.0009656670000000034, 0.0009540410000000027, 0.0009540419999999952, 0.0009540279999999957, 0.0009540560000000017, 0.0009540280000000026, 0.0009540139999999961, 0.0009540840000000009, 0.000954014000000003, 0.0009540280000000026, 0.0009540270000000031, 0.0009540699999999944, 0.0009540549999999953, 0.0009540420000000022, 0.0009540410000000027, 0.0009540420000000022, 0.0009540279999999957, 0.0009540139999999961, 0.0009540279999999957, 0.0009540139999999891, 0.0009540420000000022, 0.0009540830000000083, 0.0009540280000000095, 0.0009540409999999888, 0.0009540420000000022, 0.0009540410000000027, 0.0009540690000000018, 0.0009540420000000022, 0.0009540279999999957, 0.0009540279999999957, 0.000954014000000003, 0.000954014000000003, 0.0009786519999999965, 0.0009540839999999939, 0.0009539719999999974, 0.0009540559999999948, 0.0009540280000000095, 0.0009540420000000022, 0.0009540420000000022, 0.000954014000000003, 0.0009540420000000022]</msg>
<status status="PASS" starttime="20201029 12:43:35.895" endtime="20201029 12:43:35.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.884" endtime="20201029 12:43:35.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.378" endtime="20201029 12:43:35.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.348" endtime="20201029 12:43:35.903"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:35.909" endtime="20201029 12:43:35.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.905" endtime="20201029 12:43:35.932"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:35.953" endtime="20201029 12:43:36.017"></status>
</kw>
<msg timestamp="20201029 12:43:36.018" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:35.950" endtime="20201029 12:43:36.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.024" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.020" endtime="20201029 12:43:36.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.027" endtime="20201029 12:43:36.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.942" endtime="20201029 12:43:36.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.937" endtime="20201029 12:43:36.034"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.050" endtime="20201029 12:43:36.388"></status>
</kw>
<msg timestamp="20201029 12:43:36.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036475181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037467889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.047" endtime="20201029 12:43:36.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036475181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037467889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.397" endtime="20201029 12:43:36.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.415" endtime="20201029 12:43:36.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.040" endtime="20201029 12:43:36.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.035" endtime="20201029 12:43:36.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.431" level="INFO">${PHILIP_RES} = [{'diff': 0.000992707999999995}, {'diff': 0.0009926939999999954}, {'diff': 0.000992735999999994}, {'diff': 0.000992707999999995}, {'diff': 0.0009927089999999944}, {'diff': 0.0009927219999999945}, {'di...</msg>
<status status="PASS" starttime="20201029 12:43:36.423" endtime="20201029 12:43:36.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:36.440" level="INFO">${RESULT} = {'diff': [0.000992707999999995, 0.0009926939999999954, 0.000992735999999994, 0.000992707999999995, 0.0009927089999999944, 0.0009927219999999945, 0.0009926939999999954, 0.000992723000000001, 0.00101954...</msg>
<status status="PASS" starttime="20201029 12:43:36.433" endtime="20201029 12:43:36.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.451" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:36.448" endtime="20201029 12:43:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.456" level="INFO">VALUE: [0.000992707999999995, 0.0009926939999999954, 0.000992735999999994, 0.000992707999999995, 0.0009927089999999944, 0.0009927219999999945, 0.0009926939999999954, 0.000992723000000001, 0.0010195420000000052, 0.0009926799999999958, 0.0009927090000000013, 0.0009926939999999954, 0.0009927089999999944, 0.000992707999999995, 0.0009927219999999945, 0.0009927219999999945, 0.000992707999999995, 0.0009927089999999944, 0.000992707999999995, 0.0009927219999999945, 0.000992707999999995, 0.000992736000000001, 0.0009926949999999948, 0.000992707999999995, 0.0009927090000000013, 0.000992707999999995, 0.0009927080000000088, 0.0009926940000000023, 0.000992707999999995, 0.0009927089999999944, 0.0009927220000000014, 0.0009926950000000018, 0.0009927909999999929, 0.0009926660000000032, 0.0009927089999999944, 0.0009926940000000023, 0.0009927090000000083, 0.000992707999999995, 0.0009927089999999944, 0.001023277000000003, 0.0009927089999999944, 0.0009926939999999884, 0.0009927219999999876, 0.0009926809999999953, 0.0009927220000000014, 0.0009927090000000083, 0.0009927220000000014, 0.0009926950000000018, 0.0009926939999999884, 0.000992707999999995]</msg>
<status status="PASS" starttime="20201029 12:43:36.453" endtime="20201029 12:43:36.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.442" endtime="20201029 12:43:36.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.933" endtime="20201029 12:43:36.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:35.904" endtime="20201029 12:43:36.461"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:36.467" endtime="20201029 12:43:36.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.463" endtime="20201029 12:43:36.490"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.513" endtime="20201029 12:43:36.578"></status>
</kw>
<msg timestamp="20201029 12:43:36.579" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.510" endtime="20201029 12:43:36.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.585" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:36.581" endtime="20201029 12:43:36.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.588" endtime="20201029 12:43:36.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.502" endtime="20201029 12:43:36.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.497" endtime="20201029 12:43:36.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.611" endtime="20201029 12:43:36.949"></status>
</kw>
<msg timestamp="20201029 12:43:36.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036595097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.608" endtime="20201029 12:43:36.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:36.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036595097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:36.958" endtime="20201029 12:43:36.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:36.976" endtime="20201029 12:43:36.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.601" endtime="20201029 12:43:36.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.596" endtime="20201029 12:43:36.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:36.992" level="INFO">${PHILIP_RES} = [{'diff': 0.0010321110000000022}, {'diff': 0.0010322219999999993}, {'diff': 0.0010321110000000022}, {'diff': 0.001032153000000001}, {'diff': 0.001032153000000001}, {'diff': 0.0010321250000000018}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:36.984" endtime="20201029 12:43:36.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.001" level="INFO">${RESULT} = {'diff': [0.0010321110000000022, 0.0010322219999999993, 0.0010321110000000022, 0.001032153000000001, 0.001032153000000001, 0.0010321250000000018, 0.0010321390000000014, 0.0010486529999999966, 0.001032...</msg>
<status status="PASS" starttime="20201029 12:43:36.994" endtime="20201029 12:43:37.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.012" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.010" endtime="20201029 12:43:37.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.019" level="INFO">VALUE: [0.0010321110000000022, 0.0010322219999999993, 0.0010321110000000022, 0.001032153000000001, 0.001032153000000001, 0.0010321250000000018, 0.0010321390000000014, 0.0010486529999999966, 0.0010321250000000018, 0.0010321390000000014, 0.001032153000000001, 0.001032153000000001, 0.0010321390000000014, 0.0010321389999999944, 0.0010321390000000014, 0.0010321380000000019, 0.0010321389999999944, 0.001032153000000001, 0.001032153000000001, 0.001032070000000003, 0.0010321390000000014, 0.0010320690000000035, 0.0010321110000000022, 0.0010321390000000014, 0.00103207000000001, 0.0010321390000000014, 0.0010321249999999949, 0.0010321530000000079, 0.0010321249999999949, 0.001032152999999994, 0.0010321390000000014, 0.0010321390000000014, 0.0010321390000000014, 0.001032083000000003, 0.0010321530000000079, 0.001032069999999996, 0.0010321390000000014, 0.0010502629999999957, 0.001032152999999994, 0.0010321390000000014, 0.0010321949999999996, 0.0010321799999999937, 0.0010321390000000014, 0.0010321390000000014, 0.0010321390000000014, 0.0010321530000000079, 0.0010321390000000014, 0.001032152999999994, 0.0010321250000000087, 0.0010321390000000014]</msg>
<status status="PASS" starttime="20201029 12:43:37.014" endtime="20201029 12:43:37.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.003" endtime="20201029 12:43:37.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.491" endtime="20201029 12:43:37.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:36.462" endtime="20201029 12:43:37.024"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.029" endtime="20201029 12:43:37.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.026" endtime="20201029 12:43:37.053"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.074" endtime="20201029 12:43:37.140"></status>
</kw>
<msg timestamp="20201029 12:43:37.141" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.071" endtime="20201029 12:43:37.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.148" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.144" endtime="20201029 12:43:37.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.150" endtime="20201029 12:43:37.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.063" endtime="20201029 12:43:37.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.058" endtime="20201029 12:43:37.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.173" endtime="20201029 12:43:37.511"></status>
</kw>
<msg timestamp="20201029 12:43:37.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035198542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036270903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.170" endtime="20201029 12:43:37.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035198542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036270903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:37.520" endtime="20201029 12:43:37.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.538" endtime="20201029 12:43:37.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.163" endtime="20201029 12:43:37.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.158" endtime="20201029 12:43:37.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:37.554" level="INFO">${PHILIP_RES} = [{'diff': 0.0010723610000000008}, {'diff': 0.0010723329999999948}, {'diff': 0.001072306000000002}, {'diff': 0.0010947910000000047}, {'diff': 0.0010723330000000017}, {'diff': 0.0010723330000000017}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:37.546" endtime="20201029 12:43:37.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:37.565" level="INFO">${RESULT} = {'diff': [0.0010723610000000008, 0.0010723329999999948, 0.001072306000000002, 0.0010947910000000047, 0.0010723330000000017, 0.0010723330000000017, 0.0010723330000000017, 0.0010723190000000021, 0.00107...</msg>
<status status="PASS" starttime="20201029 12:43:37.556" endtime="20201029 12:43:37.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.575" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:37.573" endtime="20201029 12:43:37.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.580" level="INFO">VALUE: [0.0010723610000000008, 0.0010723329999999948, 0.001072306000000002, 0.0010947910000000047, 0.0010723330000000017, 0.0010723330000000017, 0.0010723330000000017, 0.0010723190000000021, 0.0010723329999999948, 0.0010723610000000008, 0.0010723610000000008, 0.0010723469999999943, 0.0010723200000000016, 0.0010722639999999964, 0.0010722919999999955, 0.0010723340000000012, 0.0010723340000000012, 0.0010723340000000012, 0.0010723480000000007, 0.0010723480000000007, 0.0010723200000000016, 0.0010723340000000012, 0.0010723339999999942, 0.0010723340000000012, 0.0010723620000000073, 0.0010722920000000025, 0.0010723750000000004, 0.001072305999999995, 0.0010723339999999942, 0.0010723750000000004, 0.0010723480000000007, 0.0010723200000000016, 0.0010937089999999983, 0.0010723480000000007, 0.0010723339999999942, 0.0010724159999999927, 0.0010723610000000078, 0.0010723339999999942, 0.0010723470000000013, 0.0010723329999999948, 0.001072277999999996, 0.0010723340000000081, 0.0010723470000000013, 0.0010723470000000013, 0.001072277999999996, 0.001072305999999995, 0.0010723329999999948, 0.0010723330000000086, 0.0010723330000000086, 0.0010723329999999948]</msg>
<status status="PASS" starttime="20201029 12:43:37.577" endtime="20201029 12:43:37.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.566" endtime="20201029 12:43:37.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.054" endtime="20201029 12:43:37.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.024" endtime="20201029 12:43:37.585"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:37.592" endtime="20201029 12:43:37.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.588" endtime="20201029 12:43:37.615"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.636" endtime="20201029 12:43:37.705"></status>
</kw>
<msg timestamp="20201029 12:43:37.706" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.633" endtime="20201029 12:43:37.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:37.712" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:37.708" endtime="20201029 12:43:37.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.715" endtime="20201029 12:43:37.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.626" endtime="20201029 12:43:37.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.620" endtime="20201029 12:43:37.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:37.738" endtime="20201029 12:43:38.074"></status>
</kw>
<msg timestamp="20201029 12:43:38.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035859556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:37.735" endtime="20201029 12:43:38.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035859556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:43:38.083" endtime="20201029 12:43:38.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:38.101" endtime="20201029 12:43:38.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.728" endtime="20201029 12:43:38.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.723" endtime="20201029 12:43:38.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:43:38.109" level="INFO">${PHILIP_RES} = [{'diff': 0.0011133060000000014}, {'diff': 0.001113305000000002}, {'diff': 0.0011132780000000023}, {'diff': 0.0011132780000000023}, {'diff': 0.0011132500000000031}, {'diff': 0.0011133060000000014}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:38.106" endtime="20201029 12:43:38.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:38.115" level="INFO">${RESULT} = {'diff': [0.0011133060000000014, 0.001113305000000002, 0.0011132780000000023, 0.0011132780000000023, 0.0011132500000000031, 0.0011133060000000014, 0.0011132920000000018, 0.0011132920000000018, 0.00111...</msg>
<status status="PASS" starttime="20201029 12:43:38.110" endtime="20201029 12:43:38.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.120" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:43:38.119" endtime="20201029 12:43:38.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.122" level="INFO">VALUE: [0.0011133060000000014, 0.001113305000000002, 0.0011132780000000023, 0.0011132780000000023, 0.0011132500000000031, 0.0011133060000000014, 0.0011132920000000018, 0.0011132920000000018, 0.0011133060000000014, 0.001113305000000002, 0.0011132779999999953, 0.0011133059999999945, 0.001113304999999995, 0.0011133059999999945, 0.0011132229999999965, 0.0011132909999999954, 0.0011132779999999953, 0.001113291999999995, 0.0011133749999999998, 0.0011133480000000001, 0.0011132920000000018, 0.001113305000000002, 0.0011133470000000006, 0.0011133190000000015, 0.001113304999999995, 0.001113291999999988, 0.0011465969999999992, 0.0011133060000000083, 0.0011132910000000024, 0.0011132780000000092, 0.0011133470000000006, 0.0011132920000000018, 0.0011133749999999998, 0.0011132910000000024, 0.0011132780000000092, 0.0011132779999999953, 0.0011133190000000015, 0.0011132779999999953, 0.0011132359999999897, 0.0011132909999999885, 0.0011133059999999945, 0.0011133059999999945, 0.001113304999999995, 0.0011132920000000018, 0.0011133190000000015, 0.0011132640000000027, 0.0011133059999999945, 0.001113333000000008, 0.0011132779999999953, 0.0011132360000000036]</msg>
<status status="PASS" starttime="20201029 12:43:38.121" endtime="20201029 12:43:38.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.116" endtime="20201029 12:43:38.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.617" endtime="20201029 12:43:38.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:37.586" endtime="20201029 12:43:38.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:11.377" endtime="20201029 12:43:38.131"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:07.323" endtime="20201029 12:43:38.131" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:42:32.454" endtime="20201029 12:43:38.142"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:43:38.247" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:43:38.262" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:43:39.077" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:43:38.243" endtime="20201029 12:43:39.078"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.084" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:43:39.080" endtime="20201029 12:43:42.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.240" endtime="20201029 12:43:42.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.091" endtime="20201029 12:43:42.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.088" endtime="20201029 12:43:42.431"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.462" endtime="20201029 12:43:42.486"></status>
</kw>
<msg timestamp="20201029 12:43:42.487" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201029 12:43:42.458" endtime="20201029 12:43:42.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.493" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['ain(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Su...</msg>
<status status="PASS" starttime="20201029 12:43:42.489" endtime="20201029 12:43:42.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.500" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:42.496" endtime="20201029 12:43:42.501"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:42.451" endtime="20201029 12:43:42.502"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:42.446" endtime="20201029 12:43:42.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.443" endtime="20201029 12:43:42.505"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:42.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:42.513" endtime="20201029 12:43:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.507" endtime="20201029 12:43:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.441" endtime="20201029 12:43:42.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.439" endtime="20201029 12:43:42.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.518" endtime="20201029 12:43:42.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.436" endtime="20201029 12:43:42.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.525" endtime="20201029 12:43:42.529"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.433" endtime="20201029 12:43:42.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:38.237" endtime="20201029 12:43:42.531"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:42.545" endtime="20201029 12:43:42.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.541" endtime="20201029 12:43:42.569"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.602" endtime="20201029 12:43:42.621"></status>
</kw>
<msg timestamp="20201029 12:43:42.622" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.599" endtime="20201029 12:43:42.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.629" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.624" endtime="20201029 12:43:42.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.635" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:43:42.631" endtime="20201029 12:43:42.636"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:42.592" endtime="20201029 12:43:42.638"></status>
</kw>
<status status="FAIL" starttime="20201029 12:43:42.585" endtime="20201029 12:43:42.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.583" endtime="20201029 12:43:42.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:43:42.651" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:43:42.650" endtime="20201029 12:43:42.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.644" endtime="20201029 12:43:42.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.581" endtime="20201029 12:43:42.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.579" endtime="20201029 12:43:42.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.655" endtime="20201029 12:43:42.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.575" endtime="20201029 12:43:42.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.571" endtime="20201029 12:43:42.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.539" endtime="20201029 12:43:42.663"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.693" endtime="20201029 12:43:42.712"></status>
</kw>
<msg timestamp="20201029 12:43:42.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.688" endtime="20201029 12:43:42.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:42.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:42.717" endtime="20201029 12:43:42.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.728" endtime="20201029 12:43:42.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.678" endtime="20201029 12:43:42.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.672" endtime="20201029 12:43:42.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:42.754" endtime="20201029 12:43:43.111"></status>
</kw>
<msg timestamp="20201029 12:43:43.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141975875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.141984042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:42.751" endtime="20201029 12:43:43.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.141975875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.141984042, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:43:43.121" endtime="20201029 12:43:43.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.141" endtime="20201029 12:43:43.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.744" endtime="20201029 12:43:43.146"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.739" endtime="20201029 12:43:43.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.158" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.88899999998516e-06}, {'diff': 3.457999999983974e-06}, {'diff': 3.541999999995271e-06}, {'diff': 2.901999999999072e-06}, {'diff': 2.9440000000047206e-06}, {'diff': 2.9310000000...</msg>
<status status="PASS" starttime="20201029 12:43:43.149" endtime="20201029 12:43:43.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.168" level="INFO">${ACCURACY} = {'diff': [0, 9.88899999998516e-06, 3.457999999983974e-06, 3.541999999995271e-06, 2.901999999999072e-06, 2.9440000000047206e-06, 2.9310000000115632e-06, 2.9310000000115632e-06, 3.457999999983974e-06, 3...</msg>
<status status="PASS" starttime="20201029 12:43:43.160" endtime="20201029 12:43:43.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.180" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.177" endtime="20201029 12:43:43.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.185" level="INFO">VALUE: [0, 9.88899999998516e-06, 3.457999999983974e-06, 3.541999999995271e-06, 2.901999999999072e-06, 2.9440000000047206e-06, 2.9310000000115632e-06, 2.9310000000115632e-06, 3.457999999983974e-06, 3.473000000003834e-06, 2.9310000000115632e-06, 3.443999999991343e-06, 2.9719999999899827e-06, 2.929999999984334e-06, 3.459000000011203e-06, 3.459000000011203e-06, 3.457999999983974e-06, 2.915999999991703e-06, 3.4449999999908165e-06, 2.9170000000189322e-06, 2.9169999999911767e-06, 3.4589999999834475e-06, 2.9170000000189322e-06, 3.402999999985168e-06, 2.8890000000059146e-06, 3.4580000000117295e-06, 3.4580000000117295e-06, 2.9310000000115632e-06, 2.9309999999838077e-06, 3.4019999999856942e-06, 3.388999999992537e-06, 2.9450000000041943e-06, 3.4720000000043605e-06, 2.929999999984334e-06, 2.9300000000120896e-06, 2.9300000000120896e-06, 2.9589999999968253e-06, 2.9169999999911767e-06, 3.514000000010009e-06, 2.915999999991703e-06, 2.9440000000047206e-06, 3.52800000000264e-06, 3.4580000000117295e-06, 3.443999999991343e-06, 3.486000000024747e-06, 3.457999999983974e-06, 2.929999999984334e-06, 2.9440000000047206e-06, 2.929999999984334e-06, 2.9440000000047206e-06]</msg>
<status status="PASS" starttime="20201029 12:43:43.182" endtime="20201029 12:43:43.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.170" endtime="20201029 12:43:43.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.200" endtime="20201029 12:43:43.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.195" endtime="20201029 12:43:43.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.190" endtime="20201029 12:43:43.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.667" endtime="20201029 12:43:43.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.666" endtime="20201029 12:43:43.225"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.248" endtime="20201029 12:43:43.266"></status>
</kw>
<msg timestamp="20201029 12:43:43.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.245" endtime="20201029 12:43:43.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.269" endtime="20201029 12:43:43.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.276" endtime="20201029 12:43:43.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.238" endtime="20201029 12:43:43.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.232" endtime="20201029 12:43:43.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.309" endtime="20201029 12:43:43.653"></status>
</kw>
<msg timestamp="20201029 12:43:43.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041903889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.296" endtime="20201029 12:43:43.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041899861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041903889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.663" endtime="20201029 12:43:43.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.682" endtime="20201029 12:43:43.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.289" endtime="20201029 12:43:43.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.284" endtime="20201029 12:43:43.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:43.699" level="INFO">${RESULT} = [{'diff': 4.02800000000314e-06}, {'diff': 4.52800000000364e-06}, {'diff': 3.971999999997922e-06}, {'diff': 3.944000000005721e-06}, {'diff': 3.9859999999974915e-06}, {'diff': 4.4999999999975615e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:43.690" endtime="20201029 12:43:43.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:43.711" level="INFO">${ACCURACY} = {'diff': [4.02800000000314e-06, 4.52800000000364e-06, 3.971999999997922e-06, 3.944000000005721e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 3.9859999999974915e-06, 3.92999...</msg>
<status status="PASS" starttime="20201029 12:43:43.701" endtime="20201029 12:43:43.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.722" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:43:43.720" endtime="20201029 12:43:43.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.728" level="INFO">VALUE: [4.02800000000314e-06, 4.52800000000364e-06, 3.971999999997922e-06, 3.944000000005721e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 3.9859999999974915e-06, 3.929999999999212e-06, 3.971999999997922e-06, 4.486999999997465e-06, 3.9860000000044304e-06, 3.9449999999982555e-06, 3.971999999997922e-06, 4.526999999997228e-06, 4.513999999997131e-06, 4.012999999997158e-06, 4.000000000004e-06, 3.9859999999974915e-06, 4.513999999997131e-06, 4.513999999997131e-06, 4.513999999997131e-06, 3.9859999999974915e-06, 3.986999999996965e-06, 4.527999999996701e-06, 3.9999999999970615e-06, 3.972999999997395e-06, 3.944000000005721e-06, 3.9859999999974915e-06, 3.943999999998782e-06, 3.971999999997922e-06, 4.540999999996798e-06, 3.9860000000044304e-06, 4.51400000000407e-06, 4.5000000000045e-06, 4.5000000000045e-06, 4.512999999997658e-06, 4.512999999997658e-06, 3.9999999999970615e-06, 3.9860000000044304e-06, 4.513999999997131e-06, 4.57000000000235e-06, 3.9860000000044304e-06, 4.513999999997131e-06, 4.4999999999975615e-06, 3.957999999998352e-06, 4.0410000000032364e-06, 4.5410000000037365e-06, 4.527000000004167e-06, 3.957999999998352e-06]</msg>
<status status="PASS" starttime="20201029 12:43:43.724" endtime="20201029 12:43:43.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.713" endtime="20201029 12:43:43.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:43.740" endtime="20201029 12:43:43.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.735" endtime="20201029 12:43:43.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.733" endtime="20201029 12:43:43.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.227" endtime="20201029 12:43:43.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.226" endtime="20201029 12:43:43.766"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.796" endtime="20201029 12:43:43.815"></status>
</kw>
<msg timestamp="20201029 12:43:43.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.792" endtime="20201029 12:43:43.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:43.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:43.818" endtime="20201029 12:43:43.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.824" endtime="20201029 12:43:43.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.783" endtime="20201029 12:43:43.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.775" endtime="20201029 12:43:43.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:43.849" endtime="20201029 12:43:44.189"></status>
</kw>
<msg timestamp="20201029 12:43:44.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050830083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:43.846" endtime="20201029 12:43:44.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050825042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050830083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.198" endtime="20201029 12:43:44.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.217" endtime="20201029 12:43:44.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.839" endtime="20201029 12:43:44.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.834" endtime="20201029 12:43:44.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.235" level="INFO">${RESULT} = [{'diff': 5.040999999997298e-06}, {'diff': 5.485999999998992e-06}, {'diff': 5.554999999997368e-06}, {'diff': 5.55600000000378e-06}, {'diff': 5.04200000000371e-06}, {'diff': 4.4999999999975615e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:44.226" endtime="20201029 12:43:44.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.248" level="INFO">${ACCURACY} = {'diff': [5.040999999997298e-06, 5.485999999998992e-06, 5.554999999997368e-06, 5.55600000000378e-06, 5.04200000000371e-06, 4.4999999999975615e-06, 5.52800000000464e-06, 5.027000000004667e-06, 5.041000...</msg>
<status status="PASS" starttime="20201029 12:43:44.238" endtime="20201029 12:43:44.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.263" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.259" endtime="20201029 12:43:44.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.271" level="INFO">VALUE: [5.040999999997298e-06, 5.485999999998992e-06, 5.554999999997368e-06, 5.55600000000378e-06, 5.04200000000371e-06, 4.4999999999975615e-06, 5.52800000000464e-06, 5.027000000004667e-06, 5.0410000000042365e-06, 5.555999999996841e-06, 4.485999999997992e-06, 5.57000000000335e-06, 5.055999999996341e-06, 5.04200000000371e-06, 5.0410000000042365e-06, 5.5689999999969375e-06, 5.027999999997201e-06, 5.5689999999969375e-06, 5.041999999996771e-06, 5.582999999996507e-06, 5.0550000000038064e-06, 5.097000000002516e-06, 5.555999999996841e-06, 5.01400000000457e-06, 5.569999999996411e-06, 5.54200000000421e-06, 5.541999999997271e-06, 5.041999999996771e-06, 5.55600000000378e-06, 5.069999999995911e-06, 5.0549999999968676e-06, 5.569000000003876e-06, 5.569999999996411e-06, 5.027999999997201e-06, 5.05600000000328e-06, 5.041999999996771e-06, 5.027999999997201e-06, 5.569000000003876e-06, 5.027999999997201e-06, 5.0139999999976315e-06, 5.0689999999964375e-06, 5.02800000000414e-06, 5.069999999995911e-06, 5.07000000000285e-06, 5.0549999999968676e-06, 4.51400000000407e-06, 5.569999999996411e-06, 5.58400000000292e-06, 5.5550000000043065e-06, 5.583999999995981e-06]</msg>
<status status="PASS" starttime="20201029 12:43:44.266" endtime="20201029 12:43:44.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.250" endtime="20201029 12:43:44.275"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.288" endtime="20201029 12:43:44.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.283" endtime="20201029 12:43:44.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.279" endtime="20201029 12:43:44.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.769" endtime="20201029 12:43:44.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:43.767" endtime="20201029 12:43:44.317"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.346" endtime="20201029 12:43:44.364"></status>
</kw>
<msg timestamp="20201029 12:43:44.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.343" endtime="20201029 12:43:44.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.368" endtime="20201029 12:43:44.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.376" endtime="20201029 12:43:44.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.335" endtime="20201029 12:43:44.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.327" endtime="20201029 12:43:44.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.400" endtime="20201029 12:43:44.768"></status>
</kw>
<msg timestamp="20201029 12:43:44.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051419667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.397" endtime="20201029 12:43:44.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051413028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051419667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.777" endtime="20201029 12:43:44.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.796" endtime="20201029 12:43:44.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.389" endtime="20201029 12:43:44.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.384" endtime="20201029 12:43:44.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:44.813" level="INFO">${RESULT} = [{'diff': 6.639000000002726e-06}, {'diff': 6.624999999996217e-06}, {'diff': 6.624999999996217e-06}, {'diff': 6.5690000000048765e-06}, {'diff': 6.097999999996051e-06}, {'diff': 6.611999999996121e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:43:44.804" endtime="20201029 12:43:44.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:44.822" level="INFO">${ACCURACY} = {'diff': [6.639000000002726e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.5690000000048765e-06, 6.097999999996051e-06, 6.611999999996121e-06, 6.096999999996577e-06, 6.610999999996647e-06, 6.097...</msg>
<status status="PASS" starttime="20201029 12:43:44.815" endtime="20201029 12:43:44.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.833" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:43:44.831" endtime="20201029 12:43:44.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.839" level="INFO">VALUE: [6.639000000002726e-06, 6.624999999996217e-06, 6.624999999996217e-06, 6.5690000000048765e-06, 6.097999999996051e-06, 6.611999999996121e-06, 6.096999999996577e-06, 6.610999999996647e-06, 6.097000000003516e-06, 6.152999999994857e-06, 6.709000000000576e-06, 6.083999999996481e-06, 6.610999999996647e-06, 6.097000000003516e-06, 6.09800000000299e-06, 6.624999999996217e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.555999999997841e-06, 6.666000000002392e-06, 6.096999999996577e-06, 5.5689999999969375e-06, 6.097999999996051e-06, 6.5690000000048765e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.624999999996217e-06, 6.110999999996147e-06, 6.0689999999974376e-06, 6.0829999999970075e-06, 6.167000000001366e-06, 6.611999999996121e-06, 5.55600000000378e-06, 6.110999999996147e-06, 6.0829999999970075e-06, 6.083999999996481e-06, 6.625000000003156e-06, 5.555999999996841e-06, 6.11200000000256e-06, 6.0689999999974376e-06, 6.625000000003156e-06, 6.09800000000299e-06, 6.639000000002726e-06, 6.111000000003086e-06, 6.111000000003086e-06, 6.624999999996217e-06, 6.0829999999970075e-06, 6.097000000003516e-06, 6.040999999998298e-06, 6.0829999999970075e-06]</msg>
<status status="PASS" starttime="20201029 12:43:44.836" endtime="20201029 12:43:44.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.824" endtime="20201029 12:43:44.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:44.851" endtime="20201029 12:43:44.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.846" endtime="20201029 12:43:44.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.844" endtime="20201029 12:43:44.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.320" endtime="20201029 12:43:44.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.319" endtime="20201029 12:43:44.877"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.907" endtime="20201029 12:43:44.925"></status>
</kw>
<msg timestamp="20201029 12:43:44.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.902" endtime="20201029 12:43:44.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:44.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:44.928" endtime="20201029 12:43:44.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.934" endtime="20201029 12:43:44.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.893" endtime="20201029 12:43:44.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.886" endtime="20201029 12:43:44.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:44.959" endtime="20201029 12:43:45.294"></status>
</kw>
<msg timestamp="20201029 12:43:45.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:44.956" endtime="20201029 12:43:45.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049821292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.303" endtime="20201029 12:43:45.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.322" endtime="20201029 12:43:45.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.949" endtime="20201029 12:43:45.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.944" endtime="20201029 12:43:45.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.339" level="INFO">${RESULT} = [{'diff': 7.138999999996287e-06}, {'diff': 7.152000000003322e-06}, {'diff': 7.680000000002962e-06}, {'diff': 7.694000000002532e-06}, {'diff': 7.111000000004086e-06}, {'diff': 7.695000000002006e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:45.330" endtime="20201029 12:43:45.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.349" level="INFO">${ACCURACY} = {'diff': [7.138999999996287e-06, 7.152000000003322e-06, 7.680000000002962e-06, 7.694000000002532e-06, 7.111000000004086e-06, 7.695000000002006e-06, 6.625000000003156e-06, 7.139000000003226e-06, 7.1529...</msg>
<status status="PASS" starttime="20201029 12:43:45.341" endtime="20201029 12:43:45.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.359" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.357" endtime="20201029 12:43:45.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.365" level="INFO">VALUE: [7.138999999996287e-06, 7.152000000003322e-06, 7.680000000002962e-06, 7.694000000002532e-06, 7.111000000004086e-06, 7.695000000002006e-06, 6.625000000003156e-06, 7.139000000003226e-06, 7.152999999995857e-06, 6.61200000000306e-06, 6.624999999996217e-06, 7.152999999995857e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.680000000002962e-06, 6.541999999998271e-06, 7.152999999995857e-06, 7.139000000003226e-06, 7.680999999995497e-06, 7.138999999996287e-06, 7.181000000001936e-06, 7.681000000002436e-06, 7.681000000002436e-06, 7.694000000002532e-06, 7.069999999997911e-06, 7.1379999999968136e-06, 7.695000000002006e-06, 7.681000000002436e-06, 7.153000000002796e-06, 7.666999999995927e-06, 7.694999999995067e-06, 7.152999999995857e-06, 7.694000000002532e-06, 7.681000000002436e-06, 6.667000000001866e-06, 7.680000000002962e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.110999999997147e-06, 7.681000000002436e-06, 7.153000000002796e-06, 6.624999999996217e-06, 7.666000000003392e-06, 7.138999999996287e-06, 6.624999999996217e-06, 7.139000000003226e-06, 7.165999999995953e-06, 7.667000000002866e-06, 7.680000000002962e-06, 7.153000000002796e-06]</msg>
<status status="PASS" starttime="20201029 12:43:45.362" endtime="20201029 12:43:45.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.350" endtime="20201029 12:43:45.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.378" endtime="20201029 12:43:45.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.372" endtime="20201029 12:43:45.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.370" endtime="20201029 12:43:45.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.880" endtime="20201029 12:43:45.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:44.879" endtime="20201029 12:43:45.403"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.427" endtime="20201029 12:43:45.445"></status>
</kw>
<msg timestamp="20201029 12:43:45.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.423" endtime="20201029 12:43:45.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.448" endtime="20201029 12:43:45.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.454" endtime="20201029 12:43:45.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.416" endtime="20201029 12:43:45.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.409" endtime="20201029 12:43:45.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.483" endtime="20201029 12:43:45.846"></status>
</kw>
<msg timestamp="20201029 12:43:45.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.474" endtime="20201029 12:43:45.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041878847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:45.856" endtime="20201029 12:43:45.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.875" endtime="20201029 12:43:45.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.467" endtime="20201029 12:43:45.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.462" endtime="20201029 12:43:45.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:45.893" level="INFO">${RESULT} = [{'diff': 8.736000000002242e-06}, {'diff': 8.195000000002506e-06}, {'diff': 8.194000000003032e-06}, {'diff': 8.167000000003366e-06}, {'diff': 8.736000000002242e-06}, {'diff': 8.723000000002146e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:43:45.884" endtime="20201029 12:43:45.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:45.904" level="INFO">${ACCURACY} = {'diff': [8.736000000002242e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.167000000003366e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.151999999997384e-06, 7.625000000004156e-06, 8.2220...</msg>
<status status="PASS" starttime="20201029 12:43:45.895" endtime="20201029 12:43:45.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.915" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:43:45.913" endtime="20201029 12:43:45.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:45.921" level="INFO">VALUE: [8.736000000002242e-06, 8.195000000002506e-06, 8.194000000003032e-06, 8.167000000003366e-06, 8.736000000002242e-06, 8.723000000002146e-06, 8.151999999997384e-06, 7.625000000004156e-06, 8.222000000002172e-06, 8.222000000002172e-06, 8.681000000003436e-06, 8.777000000001478e-06, 8.207999999995663e-06, 8.249999999994373e-06, 8.193999999996093e-06, 8.221999999995233e-06, 8.735999999995303e-06, 8.722000000002672e-06, 7.681000000002436e-06, 8.736000000002242e-06, 8.209000000002076e-06, 8.222000000002172e-06, 7.681000000002436e-06, 7.695000000002006e-06, 8.736000000002242e-06, 8.208999999995137e-06, 8.167000000003366e-06, 8.195000000002506e-06, 7.680000000002962e-06, 8.209000000002076e-06, 8.166000000003892e-06, 8.208000000002602e-06, 7.679999999996023e-06, 7.667000000002866e-06, 8.709000000002576e-06, 8.735999999995303e-06, 8.208999999995137e-06, 8.235999999994803e-06, 8.264000000000882e-06, 8.209000000002076e-06, 8.208999999995137e-06, 7.680999999995497e-06, 8.208000000002602e-06, 7.652999999996357e-06, 8.194000000003032e-06, 8.195000000002506e-06, 7.680000000002962e-06, 8.193999999996093e-06, 8.750000000001812e-06, 8.207999999995663e-06]</msg>
<status status="PASS" starttime="20201029 12:43:45.918" endtime="20201029 12:43:45.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.906" endtime="20201029 12:43:45.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:45.933" endtime="20201029 12:43:45.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.928" endtime="20201029 12:43:45.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.926" endtime="20201029 12:43:45.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.405" endtime="20201029 12:43:45.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.404" endtime="20201029 12:43:45.959"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:45.982" endtime="20201029 12:43:46.000"></status>
</kw>
<msg timestamp="20201029 12:43:46.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:45.979" endtime="20201029 12:43:46.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.004" endtime="20201029 12:43:46.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.010" endtime="20201029 12:43:46.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.971" endtime="20201029 12:43:46.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.965" endtime="20201029 12:43:46.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.035" endtime="20201029 12:43:46.381"></status>
</kw>
<msg timestamp="20201029 12:43:46.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042780944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042789653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.031" endtime="20201029 12:43:46.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042780944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042789653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.391" endtime="20201029 12:43:46.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.410" endtime="20201029 12:43:46.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.024" endtime="20201029 12:43:46.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.019" endtime="20201029 12:43:46.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.428" level="INFO">${RESULT} = [{'diff': 8.708999999995637e-06}, {'diff': 9.250000000002312e-06}, {'diff': 9.263999999994943e-06}, {'diff': 9.278000000001452e-06}, {'diff': 9.263999999994943e-06}, {'diff': 9.27699999999504e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:43:46.419" endtime="20201029 12:43:46.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:46.439" level="INFO">${ACCURACY} = {'diff': [8.708999999995637e-06, 9.250000000002312e-06, 9.263999999994943e-06, 9.278000000001452e-06, 9.263999999994943e-06, 9.27699999999504e-06, 9.263999999994943e-06, 9.264000000001882e-06, 9.25000...</msg>
<status status="PASS" starttime="20201029 12:43:46.430" endtime="20201029 12:43:46.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.451" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:43:46.449" endtime="20201029 12:43:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.457" level="INFO">VALUE: [8.708999999995637e-06, 9.250000000002312e-06, 9.263999999994943e-06, 9.278000000001452e-06, 9.263999999994943e-06, 9.27699999999504e-06, 9.263999999994943e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.291999999994083e-06, 9.250000000002312e-06, 8.750000000001812e-06, 9.263999999994943e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.263000000002408e-06, 9.235999999995803e-06, 9.250000000002312e-06, 8.750000000001812e-06, 8.735999999995303e-06, 9.264000000001882e-06, 9.277000000001978e-06, 8.736000000002242e-06, 9.778000000001952e-06, 9.278000000001452e-06, 9.278000000001452e-06, 9.222000000003172e-06, 8.764000000001382e-06, 9.264000000001882e-06, 9.250000000002312e-06, 9.179999999997523e-06, 9.306000000000592e-06, 9.277000000001978e-06, 8.750000000001812e-06, 9.347999999999301e-06, 9.806000000001092e-06, 9.777000000002478e-06, 9.250000000002312e-06, 9.292000000001022e-06, 9.278000000001452e-06, 8.693999999996593e-06, 9.792000000001522e-06, 9.778000000001952e-06, 9.792000000001522e-06, 9.277999999994513e-06, 8.749999999994873e-06, 8.763999999994443e-06, 9.791999999994583e-06, 9.237000000002216e-06, 8.750000000001812e-06]</msg>
<status status="PASS" starttime="20201029 12:43:46.454" endtime="20201029 12:43:46.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.441" endtime="20201029 12:43:46.460"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:46.470" endtime="20201029 12:43:46.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.466" endtime="20201029 12:43:46.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.463" endtime="20201029 12:43:46.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.961" endtime="20201029 12:43:46.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:45.960" endtime="20201029 12:43:46.495"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.519" endtime="20201029 12:43:46.537"></status>
</kw>
<msg timestamp="20201029 12:43:46.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.515" endtime="20201029 12:43:46.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:46.540" endtime="20201029 12:43:46.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.547" endtime="20201029 12:43:46.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.508" endtime="20201029 12:43:46.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.502" endtime="20201029 12:43:46.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.571" endtime="20201029 12:43:46.942"></status>
</kw>
<msg timestamp="20201029 12:43:46.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042433653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.568" endtime="20201029 12:43:46.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:46.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042433653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:46.952" endtime="20201029 12:43:46.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:46.972" endtime="20201029 12:43:46.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.560" endtime="20201029 12:43:46.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.555" endtime="20201029 12:43:46.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:46.991" level="INFO">${RESULT} = [{'diff': 1.0306000000001592e-05}, {'diff': 9.79099999999511e-06}, {'diff': 9.804999999994679e-06}, {'diff': 1.0319000000001688e-05}, {'diff': 9.805000000001618e-06}, {'diff': 1.0847999999993863e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:46.981" endtime="20201029 12:43:46.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.001" level="INFO">${ACCURACY} = {'diff': [1.0306000000001592e-05, 9.79099999999511e-06, 9.804999999994679e-06, 1.0319000000001688e-05, 9.805000000001618e-06, 1.0847999999993863e-05, 9.792000000001522e-06, 9.792000000001522e-06, 1.08...</msg>
<status status="PASS" starttime="20201029 12:43:46.993" endtime="20201029 12:43:47.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.013" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.011" endtime="20201029 12:43:47.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.019" level="INFO">VALUE: [1.0306000000001592e-05, 9.79099999999511e-06, 9.804999999994679e-06, 1.0319000000001688e-05, 9.805000000001618e-06, 1.0847999999993863e-05, 9.792000000001522e-06, 9.792000000001522e-06, 1.0832999999994819e-05, 1.0292000000002022e-05, 9.792000000001522e-06, 1.0320000000001162e-05, 9.820000000000662e-06, 1.0318999999994749e-05, 1.0305000000002118e-05, 1.0320000000001162e-05, 1.0332999999994319e-05, 1.0332999999994319e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0305999999994653e-05, 9.79099999999511e-06, 9.819000000001188e-06, 1.0318999999994749e-05, 1.0334000000000731e-05, 1.0319000000001688e-05, 9.792000000001522e-06, 1.0264000000002882e-05, 9.778000000001952e-06, 1.0820000000001662e-05, 1.0819999999994723e-05, 9.806000000001092e-06, 1.0861000000000898e-05, 9.778000000001952e-06, 1.0320000000001162e-05, 1.0319000000001688e-05, 9.791000000002048e-06, 1.0847000000001328e-05, 1.0848000000000801e-05, 1.0319999999994223e-05, 9.791000000002048e-06, 1.0333000000001258e-05, 1.0306000000001592e-05, 1.0333000000001258e-05, 9.805000000001618e-06, 1.0834000000001232e-05, 1.0333000000001258e-05, 9.777000000002478e-06, 9.778000000001952e-06, 1.0860999999993959e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.016" endtime="20201029 12:43:47.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.003" endtime="20201029 12:43:47.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.033" endtime="20201029 12:43:47.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.028" endtime="20201029 12:43:47.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.025" endtime="20201029 12:43:47.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.497" endtime="20201029 12:43:47.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:46.496" endtime="20201029 12:43:47.059"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.083" endtime="20201029 12:43:47.103"></status>
</kw>
<msg timestamp="20201029 12:43:47.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.080" endtime="20201029 12:43:47.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.106" endtime="20201029 12:43:47.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.113" endtime="20201029 12:43:47.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.072" endtime="20201029 12:43:47.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.066" endtime="20201029 12:43:47.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.138" endtime="20201029 12:43:47.523"></status>
</kw>
<msg timestamp="20201029 12:43:47.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.135" endtime="20201029 12:43:47.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.533" endtime="20201029 12:43:47.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.554" endtime="20201029 12:43:47.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.127" endtime="20201029 12:43:47.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.122" endtime="20201029 12:43:47.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:47.573" level="INFO">${RESULT} = [{'diff': 1.0862000000000371e-05}, {'diff': 1.1361000000001398e-05}, {'diff': 1.1416999999999677e-05}, {'diff': 1.1375000000000968e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1389000000000538e-...</msg>
<status status="PASS" starttime="20201029 12:43:47.563" endtime="20201029 12:43:47.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:47.584" level="INFO">${ACCURACY} = {'diff': [1.0862000000000371e-05, 1.1361000000001398e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1375000000000968e-05...</msg>
<status status="PASS" starttime="20201029 12:43:47.575" endtime="20201029 12:43:47.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.596" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:43:47.593" endtime="20201029 12:43:47.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.601" level="INFO">VALUE: [1.0862000000000371e-05, 1.1361000000001398e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1375000000000968e-05, 1.1457999999998913e-05, 1.1361000000001398e-05, 1.0848000000000801e-05, 1.0875000000000468e-05, 1.1375000000000968e-05, 1.0848000000000801e-05, 1.1361000000001398e-05, 1.1916000000000704e-05, 1.0846999999994389e-05, 1.0861000000000898e-05, 1.0848000000000801e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1403000000000107e-05, 1.1375000000000968e-05, 1.1930999999999747e-05, 1.1348000000001301e-05, 1.1361000000001398e-05, 1.1374999999994029e-05, 1.1375000000000968e-05, 1.0847000000001328e-05, 1.0861000000000898e-05, 1.1374999999994029e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.0792000000002522e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1361000000001398e-05, 1.1361000000001398e-05, 1.1374999999994029e-05, 1.1375000000000968e-05, 1.1362000000000871e-05, 1.0847000000001328e-05, 1.0889000000000038e-05, 1.1375000000000968e-05, 1.1389000000000538e-05]</msg>
<status status="PASS" starttime="20201029 12:43:47.598" endtime="20201029 12:43:47.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.586" endtime="20201029 12:43:47.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:47.617" endtime="20201029 12:43:47.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.610" endtime="20201029 12:43:47.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.608" endtime="20201029 12:43:47.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.061" endtime="20201029 12:43:47.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.060" endtime="20201029 12:43:47.642"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.667" endtime="20201029 12:43:47.686"></status>
</kw>
<msg timestamp="20201029 12:43:47.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.664" endtime="20201029 12:43:47.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:47.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:47.690" endtime="20201029 12:43:47.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.697" endtime="20201029 12:43:47.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.656" endtime="20201029 12:43:47.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.649" endtime="20201029 12:43:47.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:47.722" endtime="20201029 12:43:48.084"></status>
</kw>
<msg timestamp="20201029 12:43:48.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044123639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:47.718" endtime="20201029 12:43:48.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044123639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044136069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.094" endtime="20201029 12:43:48.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.114" endtime="20201029 12:43:48.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.710" endtime="20201029 12:43:48.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.705" endtime="20201029 12:43:48.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.132" level="INFO">${RESULT} = [{'diff': 1.2430000000000774e-05}, {'diff': 1.1902000000001134e-05}, {'diff': 1.2430000000000774e-05}, {'diff': 1.1903000000000608e-05}, {'diff': 1.2430000000000774e-05}, {'diff': 1.2417000000000677e-...</msg>
<status status="PASS" starttime="20201029 12:43:48.123" endtime="20201029 12:43:48.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.144" level="INFO">${ACCURACY} = {'diff': [1.2430000000000774e-05, 1.1902000000001134e-05, 1.2430000000000774e-05, 1.1903000000000608e-05, 1.2430000000000774e-05, 1.2417000000000677e-05, 1.2457999999999914e-05, 1.1930000000000274e-05...</msg>
<status status="PASS" starttime="20201029 12:43:48.135" endtime="20201029 12:43:48.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.156" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.153" endtime="20201029 12:43:48.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.161" level="INFO">VALUE: [1.2430000000000774e-05, 1.1902000000001134e-05, 1.2430000000000774e-05, 1.1903000000000608e-05, 1.2430000000000774e-05, 1.2417000000000677e-05, 1.2457999999999914e-05, 1.1930000000000274e-05, 1.2945000000000317e-05, 1.1903000000000608e-05, 1.2430000000000774e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2430000000000774e-05, 1.1917000000000177e-05, 1.1847000000002328e-05, 1.2431000000000247e-05, 1.2971999999999984e-05, 1.2416000000001204e-05, 1.2444999999999817e-05, 1.2431000000000247e-05, 1.1903000000000608e-05, 1.1875000000001468e-05, 1.2417000000000677e-05, 1.1930999999999747e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1903000000000608e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.2430000000000774e-05, 1.2958999999999887e-05, 1.1957999999999414e-05, 1.1903000000000608e-05, 1.2430000000000774e-05, 1.1903000000000608e-05, 1.2431000000000247e-05, 1.2972999999999457e-05, 1.1889000000001038e-05, 1.2416000000001204e-05, 1.2389000000001538e-05, 1.1903000000000608e-05, 1.2444000000000344e-05, 1.1902000000001134e-05, 1.2471999999999483e-05, 1.2444999999999817e-05, 1.2402000000001634e-05, 1.2971999999999984e-05, 1.2431000000000247e-05, 1.2457999999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.158" endtime="20201029 12:43:48.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.146" endtime="20201029 12:43:48.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.175" endtime="20201029 12:43:48.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.170" endtime="20201029 12:43:48.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.167" endtime="20201029 12:43:48.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.645" endtime="20201029 12:43:48.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:47.643" endtime="20201029 12:43:48.201"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.225" endtime="20201029 12:43:48.244"></status>
</kw>
<msg timestamp="20201029 12:43:48.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.222" endtime="20201029 12:43:48.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.248" endtime="20201029 12:43:48.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.255" endtime="20201029 12:43:48.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.214" endtime="20201029 12:43:48.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.208" endtime="20201029 12:43:48.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.280" endtime="20201029 12:43:48.657"></status>
</kw>
<msg timestamp="20201029 12:43:48.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.276" endtime="20201029 12:43:48.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043938639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043952083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.669" endtime="20201029 12:43:48.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.690" endtime="20201029 12:43:48.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.269" endtime="20201029 12:43:48.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.264" endtime="20201029 12:43:48.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:48.709" level="INFO">${RESULT} = [{'diff': 1.3444000000001344e-05}, {'diff': 1.2958000000000414e-05}, {'diff': 1.2958000000000414e-05}, {'diff': 1.2958999999999887e-05}, {'diff': 1.2958000000000414e-05}, {'diff': 1.2959000000006826e-...</msg>
<status status="PASS" starttime="20201029 12:43:48.699" endtime="20201029 12:43:48.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:48.725" level="INFO">${ACCURACY} = {'diff': [1.3444000000001344e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2959000000006826e-05, 1.2971999999999984e-05, 1.2958000000000414e-05...</msg>
<status status="PASS" starttime="20201029 12:43:48.711" endtime="20201029 12:43:48.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.737" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:43:48.734" endtime="20201029 12:43:48.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.742" level="INFO">VALUE: [1.3444000000001344e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2959000000006826e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2973000000006396e-05, 1.3472000000000484e-05, 1.2958999999999887e-05, 1.3513999999999193e-05, 1.3486000000000054e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.2945000000000317e-05, 1.2958999999999887e-05, 1.3499999999999623e-05, 1.2889000000002038e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.2985999999999553e-05, 1.302699999999879e-05, 1.2931000000000747e-05, 1.2958000000000414e-05, 1.2972000000006922e-05, 1.3472999999999957e-05, 1.3416999999994739e-05, 1.2958999999999887e-05, 1.2958999999999887e-05, 1.3486000000000054e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.2945000000000317e-05, 1.3472999999999957e-05, 1.3499999999999623e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.2930000000001274e-05, 1.3472000000000484e-05, 1.2957999999993475e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.2944000000000844e-05, 1.3472000000000484e-05, 1.2972999999999457e-05, 1.2958000000000414e-05, 1.2972999999999457e-05]</msg>
<status status="PASS" starttime="20201029 12:43:48.739" endtime="20201029 12:43:48.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.727" endtime="20201029 12:43:48.746"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:48.756" endtime="20201029 12:43:48.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.751" endtime="20201029 12:43:48.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.749" endtime="20201029 12:43:48.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.203" endtime="20201029 12:43:48.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.202" endtime="20201029 12:43:48.782"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.807" endtime="20201029 12:43:48.827"></status>
</kw>
<msg timestamp="20201029 12:43:48.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.803" endtime="20201029 12:43:48.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:48.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:48.831" endtime="20201029 12:43:48.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.838" endtime="20201029 12:43:48.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.795" endtime="20201029 12:43:48.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.789" endtime="20201029 12:43:48.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:48.863" endtime="20201029 12:43:49.241"></status>
</kw>
<msg timestamp="20201029 12:43:49.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044322597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044337139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:48.859" endtime="20201029 12:43:49.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044322597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044337139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.251" endtime="20201029 12:43:49.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.271" endtime="20201029 12:43:49.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.852" endtime="20201029 12:43:49.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.846" endtime="20201029 12:43:49.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.289" level="INFO">${RESULT} = [{'diff': 1.4541999999999333e-05}, {'diff': 1.461099999999771e-05}, {'diff': 1.4541999999999333e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.4097000000004578e-05}, {'diff': 1.451300000000072e-05...</msg>
<status status="PASS" starttime="20201029 12:43:49.280" endtime="20201029 12:43:49.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.300" level="INFO">${ACCURACY} = {'diff': [1.4541999999999333e-05, 1.461099999999771e-05, 1.4541999999999333e-05, 1.4027999999999263e-05, 1.4097000000004578e-05, 1.451300000000072e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:49.291" endtime="20201029 12:43:49.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.311" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.309" endtime="20201029 12:43:49.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.317" level="INFO">VALUE: [1.4541999999999333e-05, 1.461099999999771e-05, 1.4541999999999333e-05, 1.4027999999999263e-05, 1.4097000000004578e-05, 1.451300000000072e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4555999999998903e-05, 1.4527999999999763e-05, 1.402699999999979e-05, 1.458299999999857e-05, 1.4027999999999263e-05, 1.4541999999999333e-05, 1.3986000000000554e-05, 1.4514000000000193e-05, 1.4000000000000123e-05, 1.3958999999993948e-05, 1.401300000000022e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4568999999999e-05, 1.4000000000000123e-05, 1.401300000000022e-05, 1.4027999999999263e-05, 1.454099999999986e-05, 1.402699999999979e-05, 1.4555999999998903e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.4541999999999333e-05, 1.4013999999999693e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4000000000000123e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.402699999999979e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4569999999998473e-05, 1.4541999999999333e-05, 1.4541999999999333e-05, 1.4528000000006702e-05, 1.455499999999943e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.461099999999771e-05, 1.4013999999999693e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.314" endtime="20201029 12:43:49.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.301" endtime="20201029 12:43:49.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.330" endtime="20201029 12:43:49.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.326" endtime="20201029 12:43:49.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.323" endtime="20201029 12:43:49.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.784" endtime="20201029 12:43:49.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:48.783" endtime="20201029 12:43:49.356"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.381" endtime="20201029 12:43:49.401"></status>
</kw>
<msg timestamp="20201029 12:43:49.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.377" endtime="20201029 12:43:49.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.405" endtime="20201029 12:43:49.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.411" endtime="20201029 12:43:49.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.370" endtime="20201029 12:43:49.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.363" endtime="20201029 12:43:49.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.437" endtime="20201029 12:43:49.821"></status>
</kw>
<msg timestamp="20201029 12:43:49.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045886208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.433" endtime="20201029 12:43:49.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045870597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045886208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:49.831" endtime="20201029 12:43:49.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.851" endtime="20201029 12:43:49.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.425" endtime="20201029 12:43:49.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.420" endtime="20201029 12:43:49.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:49.869" level="INFO">${RESULT} = [{'diff': 1.561099999999871e-05}, {'diff': 1.559699999999914e-05}, {'diff': 1.5651999999997945e-05}, {'diff': 1.508299999999907e-05}, {'diff': 1.562499999999828e-05}, {'diff': 1.561099999999871e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:49.860" endtime="20201029 12:43:49.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:49.880" level="INFO">${ACCURACY} = {'diff': [1.561099999999871e-05, 1.559699999999914e-05, 1.5651999999997945e-05, 1.508299999999907e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.505499999999993e-05, 1.5597999999998613e-05, 1.50...</msg>
<status status="PASS" starttime="20201029 12:43:49.872" endtime="20201029 12:43:49.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.891" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:43:49.889" endtime="20201029 12:43:49.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.897" level="INFO">VALUE: [1.561099999999871e-05, 1.559699999999914e-05, 1.5651999999997945e-05, 1.508299999999907e-05, 1.562499999999828e-05, 1.561099999999871e-05, 1.505499999999993e-05, 1.5597999999998613e-05, 1.50689999999995e-05, 1.5597999999998613e-05, 1.50689999999995e-05, 1.562499999999828e-05, 1.5597999999998613e-05, 1.5665999999997515e-05, 1.559699999999914e-05, 1.5098000000005052e-05, 1.4527999999999763e-05, 1.50689999999995e-05, 1.561099999999871e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.454099999999986e-05, 1.5083000000006008e-05, 1.5569999999999473e-05, 1.5055999999999403e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.5125000000004718e-05, 1.505499999999993e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.563899999999785e-05, 1.561099999999871e-05, 1.4527999999999763e-05, 1.5069999999998973e-05, 1.5041999999999833e-05, 1.559699999999914e-05, 1.5070000000005912e-05, 1.5611999999998183e-05, 1.5070000000005912e-05, 1.5612000000005122e-05, 1.565299999999742e-05, 1.5084000000005482e-05, 1.5055999999999403e-05, 1.50689999999995e-05, 1.5597999999998613e-05, 1.5069999999998973e-05, 1.561099999999871e-05]</msg>
<status status="PASS" starttime="20201029 12:43:49.894" endtime="20201029 12:43:49.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.881" endtime="20201029 12:43:49.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:49.912" endtime="20201029 12:43:49.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.906" endtime="20201029 12:43:49.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.903" endtime="20201029 12:43:49.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.359" endtime="20201029 12:43:49.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.357" endtime="20201029 12:43:49.939"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.963" endtime="20201029 12:43:49.982"></status>
</kw>
<msg timestamp="20201029 12:43:49.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.959" endtime="20201029 12:43:49.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:49.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:49.986" endtime="20201029 12:43:49.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:49.993" endtime="20201029 12:43:49.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.952" endtime="20201029 12:43:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.946" endtime="20201029 12:43:50.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.019" endtime="20201029 12:43:50.393"></status>
</kw>
<msg timestamp="20201029 12:43:50.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044411167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.015" endtime="20201029 12:43:50.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044411167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.403" endtime="20201029 12:43:50.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.422" endtime="20201029 12:43:50.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.007" endtime="20201029 12:43:50.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.002" endtime="20201029 12:43:50.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:50.441" level="INFO">${RESULT} = [{'diff': 1.613899999999835e-05}, {'diff': 1.612499999999878e-05}, {'diff': 1.6653000000005358e-05}, {'diff': 1.612499999999878e-05}, {'diff': 1.665299999999842e-05}, {'diff': 1.6125000000005718e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:50.431" endtime="20201029 12:43:50.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:50.453" level="INFO">${ACCURACY} = {'diff': [1.613899999999835e-05, 1.612499999999878e-05, 1.6653000000005358e-05, 1.612499999999878e-05, 1.665299999999842e-05, 1.6125000000005718e-05, 1.566699999999699e-05, 1.6125000000005718e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:43:50.443" endtime="20201029 12:43:50.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.464" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:43:50.462" endtime="20201029 12:43:50.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.470" level="INFO">VALUE: [1.613899999999835e-05, 1.612499999999878e-05, 1.6653000000005358e-05, 1.612499999999878e-05, 1.665299999999842e-05, 1.6125000000005718e-05, 1.566699999999699e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.6680000000005024e-05, 1.561099999999871e-05, 1.6651999999998945e-05, 1.611099999999921e-05, 1.665299999999842e-05, 1.665299999999842e-05, 1.612499999999878e-05, 1.663899999999885e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.661099999999971e-05, 1.6138000000005814e-05, 1.658300000000057e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.611099999999921e-05, 1.665299999999842e-05, 1.608300000000007e-05, 1.666699999999799e-05, 1.612499999999878e-05, 1.6639000000005788e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.6693999999997655e-05, 1.6125000000005718e-05, 1.6153000000004858e-05, 1.6653000000005358e-05, 1.663899999999885e-05, 1.666699999999799e-05, 1.665299999999842e-05, 1.6139000000005288e-05, 1.665299999999842e-05, 1.663899999999885e-05, 1.612499999999878e-05, 1.559699999999914e-05, 1.666699999999799e-05, 1.6125000000005718e-05, 1.6125000000005718e-05]</msg>
<status status="PASS" starttime="20201029 12:43:50.467" endtime="20201029 12:43:50.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.455" endtime="20201029 12:43:50.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:50.484" endtime="20201029 12:43:50.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.479" endtime="20201029 12:43:50.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.476" endtime="20201029 12:43:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.941" endtime="20201029 12:43:50.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:49.940" endtime="20201029 12:43:50.510"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.534" endtime="20201029 12:43:50.554"></status>
</kw>
<msg timestamp="20201029 12:43:50.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.531" endtime="20201029 12:43:50.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:50.558" endtime="20201029 12:43:50.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.564" endtime="20201029 12:43:50.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.523" endtime="20201029 12:43:50.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.517" endtime="20201029 12:43:50.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.590" endtime="20201029 12:43:50.963"></status>
</kw>
<msg timestamp="20201029 12:43:50.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044055514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044073278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.586" endtime="20201029 12:43:50.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:50.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044055514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044073278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:50.974" endtime="20201029 12:43:50.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:50.993" endtime="20201029 12:43:50.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.578" endtime="20201029 12:43:50.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.573" endtime="20201029 12:43:51.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.012" level="INFO">${RESULT} = [{'diff': 1.7764000000003444e-05}, {'diff': 1.7181000000004998e-05}, {'diff': 1.718099999999806e-05}, {'diff': 1.7179999999998585e-05}, {'diff': 1.7737000000003778e-05}, {'diff': 1.7181000000004998e-0...</msg>
<status status="PASS" starttime="20201029 12:43:51.003" endtime="20201029 12:43:51.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.025" level="INFO">${ACCURACY} = {'diff': [1.7764000000003444e-05, 1.7181000000004998e-05, 1.718099999999806e-05, 1.7179999999998585e-05, 1.7737000000003778e-05, 1.7181000000004998e-05, 1.6667000000004928e-05, 1.7708000000005164e-05,...</msg>
<status status="PASS" starttime="20201029 12:43:51.015" endtime="20201029 12:43:51.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.036" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.034" endtime="20201029 12:43:51.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.042" level="INFO">VALUE: [1.7764000000003444e-05, 1.7181000000004998e-05, 1.718099999999806e-05, 1.7179999999998585e-05, 1.7737000000003778e-05, 1.7181000000004998e-05, 1.6667000000004928e-05, 1.7708000000005164e-05, 1.718099999999806e-05, 1.718099999999806e-05, 1.7708000000005164e-05, 1.663899999999885e-05, 1.7193999999998155e-05, 1.7723000000004208e-05, 1.7181000000004998e-05, 1.7151999999999445e-05, 1.77089999999977e-05, 1.7193999999998155e-05, 1.7179999999998585e-05, 1.7179999999998585e-05, 1.7707999999998225e-05, 1.718099999999806e-05, 1.7721999999997795e-05, 1.719499999999763e-05, 1.7707999999998225e-05, 1.7181000000004998e-05, 1.6639000000005788e-05, 1.665299999999842e-05, 1.7708000000005164e-05, 1.713899999999935e-05, 1.7195000000004568e-05, 1.7665999999999515e-05, 1.6679999999998085e-05, 1.669499999999713e-05, 1.7208000000004664e-05, 1.712499999999978e-05, 1.718099999999806e-05, 1.7721999999997795e-05, 1.6680000000005024e-05, 1.7165999999999015e-05, 1.663899999999885e-05, 1.7195000000004568e-05, 1.7707999999998225e-05, 1.713899999999935e-05, 1.718099999999806e-05, 1.666699999999799e-05, 1.7193999999998155e-05, 1.6665999999998515e-05, 1.719499999999763e-05, 1.77089999999977e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.039" endtime="20201029 12:43:51.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.027" endtime="20201029 12:43:51.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.056" endtime="20201029 12:43:51.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.051" endtime="20201029 12:43:51.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.048" endtime="20201029 12:43:51.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.512" endtime="20201029 12:43:51.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:50.511" endtime="20201029 12:43:51.082"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.106" endtime="20201029 12:43:51.125"></status>
</kw>
<msg timestamp="20201029 12:43:51.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.103" endtime="20201029 12:43:51.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.128" endtime="20201029 12:43:51.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.135" endtime="20201029 12:43:51.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.095" endtime="20201029 12:43:51.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.089" endtime="20201029 12:43:51.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.160" endtime="20201029 12:43:51.569"></status>
</kw>
<msg timestamp="20201029 12:43:51.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043889028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043907792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.157" endtime="20201029 12:43:51.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043889028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043907792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.580" endtime="20201029 12:43:51.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.599" endtime="20201029 12:43:51.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.149" endtime="20201029 12:43:51.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.144" endtime="20201029 12:43:51.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:51.617" level="INFO">${RESULT} = [{'diff': 1.8764000000004444e-05}, {'diff': 1.8707999999999225e-05}, {'diff': 1.8820000000002723e-05}, {'diff': 1.8236000000004804e-05}, {'diff': 1.7707999999998225e-05}, {'diff': 1.8250000000004374e-...</msg>
<status status="PASS" starttime="20201029 12:43:51.608" endtime="20201029 12:43:51.617"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:51.626" level="INFO">${ACCURACY} = {'diff': [1.8764000000004444e-05, 1.8707999999999225e-05, 1.8820000000002723e-05, 1.8236000000004804e-05, 1.7707999999998225e-05, 1.8250000000004374e-05, 1.766699999999899e-05, 1.773699999999684e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:51.619" endtime="20201029 12:43:51.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.637" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:43:51.635" endtime="20201029 12:43:51.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.643" level="INFO">VALUE: [1.8764000000004444e-05, 1.8707999999999225e-05, 1.8820000000002723e-05, 1.8236000000004804e-05, 1.7707999999998225e-05, 1.8250000000004374e-05, 1.766699999999899e-05, 1.773699999999684e-05, 1.77089999999977e-05, 1.7707999999998225e-05, 1.8778000000004014e-05, 1.8249999999997435e-05, 1.8235999999997865e-05, 1.8805999999996215e-05, 1.7723000000004208e-05, 1.8277999999996575e-05, 1.8250000000004374e-05, 1.876299999999803e-05, 1.8222000000005234e-05, 1.876299999999803e-05, 1.8221999999998295e-05, 1.8235999999997865e-05, 1.8791999999996645e-05, 1.8221999999998295e-05, 1.8207999999998725e-05, 1.823699999999734e-05, 1.7667000000005928e-05, 1.8221999999998295e-05, 1.8791999999996645e-05, 1.8221999999998295e-05, 1.8237000000004278e-05, 1.82089999999982e-05, 1.8221999999998295e-05, 1.822299999999777e-05, 1.8791999999996645e-05, 1.8207999999998725e-05, 1.7707999999998225e-05, 1.8777999999997075e-05, 1.8249999999997435e-05, 1.8250000000004374e-05, 1.772299999999727e-05, 1.823699999999734e-05, 1.8235999999997865e-05, 1.8764000000004444e-05, 1.8791999999996645e-05, 1.873699999999784e-05, 1.7693999999998655e-05, 1.8763999999997505e-05, 1.7679999999999085e-05, 1.8250000000004374e-05]</msg>
<status status="PASS" starttime="20201029 12:43:51.639" endtime="20201029 12:43:51.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.628" endtime="20201029 12:43:51.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:51.655" endtime="20201029 12:43:51.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.651" endtime="20201029 12:43:51.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.648" endtime="20201029 12:43:51.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.084" endtime="20201029 12:43:51.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.083" endtime="20201029 12:43:51.682"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.710" endtime="20201029 12:43:51.731"></status>
</kw>
<msg timestamp="20201029 12:43:51.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.706" endtime="20201029 12:43:51.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:51.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:51.735" endtime="20201029 12:43:51.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.742" endtime="20201029 12:43:51.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.698" endtime="20201029 12:43:51.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.690" endtime="20201029 12:43:51.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:51.767" endtime="20201029 12:43:52.129"></status>
</kw>
<msg timestamp="20201029 12:43:52.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050035722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:51.763" endtime="20201029 12:43:52.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050035722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050055583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.139" endtime="20201029 12:43:52.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.159" endtime="20201029 12:43:52.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.756" endtime="20201029 12:43:52.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.750" endtime="20201029 12:43:52.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.177" level="INFO">${RESULT} = [{'diff': 1.986100000000296e-05}, {'diff': 1.876299999999803e-05}, {'diff': 1.8764000000004444e-05}, {'diff': 1.8764000000004444e-05}, {'diff': 1.929099999999767e-05}, {'diff': 1.8763999999997505e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:52.168" endtime="20201029 12:43:52.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.187" level="INFO">${ACCURACY} = {'diff': [1.986100000000296e-05, 1.876299999999803e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.929099999999767e-05, 1.8763999999997505e-05, 1.9333999999995855e-05, 1.9277999999997575e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:43:52.179" endtime="20201029 12:43:52.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.199" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.197" endtime="20201029 12:43:52.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.205" level="INFO">VALUE: [1.986100000000296e-05, 1.876299999999803e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.929099999999767e-05, 1.8763999999997505e-05, 1.9333999999995855e-05, 1.9277999999997575e-05, 1.8764000000004444e-05, 1.987499999999559e-05, 1.930499999999724e-05, 1.9278000000004514e-05, 1.8693999999999655e-05, 1.930500000000418e-05, 1.8749999999997935e-05, 1.9264000000004944e-05, 1.934700000000289e-05, 1.8763999999997505e-05, 1.987499999999559e-05, 1.929099999999767e-05, 1.9833999999996355e-05, 1.8777999999997075e-05, 1.9291999999997145e-05, 1.9235999999998865e-05, 1.8834000000002293e-05, 1.9292000000004084e-05, 1.929099999999767e-05, 1.9763999999998505e-05, 1.9305999999996715e-05, 1.8820000000002723e-05, 1.929100000000461e-05, 1.933299999999638e-05, 1.8764000000004444e-05, 1.931900000000375e-05, 1.8764000000004444e-05, 1.8750000000004874e-05, 1.934699999999595e-05, 1.980499999999774e-05, 1.9291999999997145e-05, 1.9291999999997145e-05, 1.8722000000005734e-05, 1.929100000000461e-05, 1.983300000000382e-05, 1.9277999999997575e-05, 1.931899999999681e-05, 1.9334000000002793e-05, 1.937500000000203e-05, 1.9291999999997145e-05, 1.930499999999724e-05, 1.9291999999997145e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.201" endtime="20201029 12:43:52.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.189" endtime="20201029 12:43:52.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.220" endtime="20201029 12:43:52.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.214" endtime="20201029 12:43:52.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.211" endtime="20201029 12:43:52.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.685" endtime="20201029 12:43:52.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:51.684" endtime="20201029 12:43:52.246"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.271" endtime="20201029 12:43:52.290"></status>
</kw>
<msg timestamp="20201029 12:43:52.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.267" endtime="20201029 12:43:52.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.294" endtime="20201029 12:43:52.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.300" endtime="20201029 12:43:52.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.259" endtime="20201029 12:43:52.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.253" endtime="20201029 12:43:52.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.326" endtime="20201029 12:43:52.689"></status>
</kw>
<msg timestamp="20201029 12:43:52.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044037042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044057403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.322" endtime="20201029 12:43:52.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044037042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044057403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.699" endtime="20201029 12:43:52.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.719" endtime="20201029 12:43:52.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.314" endtime="20201029 12:43:52.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.309" endtime="20201029 12:43:52.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:52.738" level="INFO">${RESULT} = [{'diff': 2.036100000000346e-05}, {'diff': 1.9777999999998075e-05}, {'diff': 2.087499999999659e-05}, {'diff': 2.036100000000346e-05}, {'diff': 1.981900000000425e-05}, {'diff': 1.983299999999688e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:52.728" endtime="20201029 12:43:52.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:52.750" level="INFO">${ACCURACY} = {'diff': [2.036100000000346e-05, 1.9777999999998075e-05, 2.087499999999659e-05, 2.036100000000346e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.983299999999688e-05, 2.034...</msg>
<status status="PASS" starttime="20201029 12:43:52.740" endtime="20201029 12:43:52.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.762" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:43:52.759" endtime="20201029 12:43:52.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.768" level="INFO">VALUE: [2.036100000000346e-05, 1.9777999999998075e-05, 2.087499999999659e-05, 2.036100000000346e-05, 1.981900000000425e-05, 1.983299999999688e-05, 1.987500000000253e-05, 1.983299999999688e-05, 2.034700000000389e-05, 1.9834000000003293e-05, 1.984700000000339e-05, 1.981900000000425e-05, 1.981899999999731e-05, 2.087499999999659e-05, 2.034700000000389e-05, 2.036100000000346e-05, 2.036100000000346e-05, 2.0347999999996425e-05, 2.0348000000003363e-05, 1.9819999999996785e-05, 2.036099999999652e-05, 1.981899999999731e-05, 2.0348000000003363e-05, 1.9819999999996785e-05, 2.087499999999659e-05, 2.036100000000346e-05, 1.9820000000003724e-05, 2.033300000000432e-05, 2.087499999999659e-05, 1.9806000000004154e-05, 2.033299999999738e-05, 1.981900000000425e-05, 1.981899999999731e-05, 2.030500000000518e-05, 2.034699999999695e-05, 1.983300000000382e-05, 1.981900000000425e-05, 2.036100000000346e-05, 2.0348000000003363e-05, 2.086100000000396e-05, 1.9806000000004154e-05, 2.034700000000389e-05, 2.033299999999738e-05, 2.034699999999695e-05, 2.034699999999695e-05, 1.9805999999997215e-05, 2.0334000000003793e-05, 2.034699999999695e-05, 2.033300000000432e-05, 2.087500000000353e-05]</msg>
<status status="PASS" starttime="20201029 12:43:52.764" endtime="20201029 12:43:52.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.752" endtime="20201029 12:43:52.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:52.781" endtime="20201029 12:43:52.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.777" endtime="20201029 12:43:52.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.774" endtime="20201029 12:43:52.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.248" endtime="20201029 12:43:52.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.247" endtime="20201029 12:43:52.807"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.832" endtime="20201029 12:43:52.852"></status>
</kw>
<msg timestamp="20201029 12:43:52.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.828" endtime="20201029 12:43:52.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:52.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:52.856" endtime="20201029 12:43:52.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.862" endtime="20201029 12:43:52.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.821" endtime="20201029 12:43:52.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.814" endtime="20201029 12:43:52.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:52.888" endtime="20201029 12:43:53.249"></status>
</kw>
<msg timestamp="20201029 12:43:53.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044541333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:52.884" endtime="20201029 12:43:53.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044516736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044541333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.259" endtime="20201029 12:43:53.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.285" endtime="20201029 12:43:53.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.877" endtime="20201029 12:43:53.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.871" endtime="20201029 12:43:53.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.310" level="INFO">${RESULT} = [{'diff': 2.45970000000012e-05}, {'diff': 2.3985999999996677e-05}, {'diff': 2.3901999999999257e-05}, {'diff': 2.3721999999996857e-05}, {'diff': 2.402700000000285e-05}, {'diff': 2.438899999999966e-05},...</msg>
<status status="PASS" starttime="20201029 12:43:53.298" endtime="20201029 12:43:53.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.322" level="INFO">${ACCURACY} = {'diff': [2.45970000000012e-05, 2.3985999999996677e-05, 2.3901999999999257e-05, 2.3721999999996857e-05, 2.402700000000285e-05, 2.438899999999966e-05, 2.3915999999998827e-05, 2.3929999999998397e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:53.312" endtime="20201029 12:43:53.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.334" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.331" endtime="20201029 12:43:53.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.340" level="INFO">VALUE: [2.45970000000012e-05, 2.3985999999996677e-05, 2.3901999999999257e-05, 2.3721999999996857e-05, 2.402700000000285e-05, 2.438899999999966e-05, 2.3915999999998827e-05, 2.3929999999998397e-05, 2.412499999999984e-05, 2.4527999999995886e-05, 2.437500000000009e-05, 2.4235999999996927e-05, 2.458300000000163e-05, 2.418099999999812e-05, 2.395899999999701e-05, 2.411100000000027e-05, 2.4277999999995636e-05, 2.4041999999994956e-05, 2.4528000000002825e-05, 2.387499999999959e-05, 2.3721999999996857e-05, 2.3957999999997537e-05, 2.4027999999995386e-05, 2.462500000000034e-05, 2.4735999999997427e-05, 2.387499999999959e-05, 2.4334000000000855e-05, 2.390299999999873e-05, 2.388899999999916e-05, 2.4111999999999745e-05, 2.44169999999988e-05, 2.4665999999999577e-05, 2.4013000000003282e-05, 2.42770000000031e-05, 2.415299999999898e-05, 2.383300000000088e-05, 2.455500000000249e-05, 2.437500000000009e-05, 2.4556000000001965e-05, 2.438899999999966e-05, 2.431900000000181e-05, 2.4721999999997857e-05, 2.384700000000045e-05, 2.3763999999995566e-05, 2.4708000000005226e-05, 2.3806000000001215e-05, 2.4443999999998467e-05, 2.384700000000045e-05, 2.438899999999966e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.336" endtime="20201029 12:43:53.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.324" endtime="20201029 12:43:53.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.354" endtime="20201029 12:43:53.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.349" endtime="20201029 12:43:53.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.346" endtime="20201029 12:43:53.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.809" endtime="20201029 12:43:53.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:52.808" endtime="20201029 12:43:53.379"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.404" endtime="20201029 12:43:53.423"></status>
</kw>
<msg timestamp="20201029 12:43:53.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.401" endtime="20201029 12:43:53.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.427" endtime="20201029 12:43:53.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.434" endtime="20201029 12:43:53.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.393" endtime="20201029 12:43:53.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.387" endtime="20201029 12:43:53.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.459" endtime="20201029 12:43:53.824"></status>
</kw>
<msg timestamp="20201029 12:43:53.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044126375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044151514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.455" endtime="20201029 12:43:53.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044126375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044151514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:53.834" endtime="20201029 12:43:53.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.854" endtime="20201029 12:43:53.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.447" endtime="20201029 12:43:53.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.442" endtime="20201029 12:43:53.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:53.872" level="INFO">${RESULT} = [{'diff': 2.513900000000041e-05}, {'diff': 2.5249999999997497e-05}, {'diff': 2.5485999999998177e-05}, {'diff': 2.4999999999997247e-05}, {'diff': 2.5348000000001425e-05}, {'diff': 2.5014000000003755e-0...</msg>
<status status="PASS" starttime="20201029 12:43:53.863" endtime="20201029 12:43:53.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:53.882" level="INFO">${ACCURACY} = {'diff': [2.513900000000041e-05, 2.5249999999997497e-05, 2.5485999999998177e-05, 2.4999999999997247e-05, 2.5348000000001425e-05, 2.5014000000003755e-05, 2.5278000000003575e-05, 2.495899999999801e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:53.875" endtime="20201029 12:43:53.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.894" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:43:53.892" endtime="20201029 12:43:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:53.900" level="INFO">VALUE: [2.513900000000041e-05, 2.5249999999997497e-05, 2.5485999999998177e-05, 2.4999999999997247e-05, 2.5348000000001425e-05, 2.5014000000003755e-05, 2.5278000000003575e-05, 2.495899999999801e-05, 2.536100000000152e-05, 2.5541999999996456e-05, 2.5570000000002535e-05, 2.5361999999994056e-05, 2.484700000000145e-05, 2.5152000000000507e-05, 2.4722000000004796e-05, 2.513900000000041e-05, 2.5554999999996553e-05, 2.562500000000134e-05, 2.4971999999998107e-05, 2.538900000000066e-05, 2.55970000000022e-05, 2.4957999999998537e-05, 2.4806000000002215e-05, 2.537500000000109e-05, 2.5666000000000577e-05, 2.5596999999995262e-05, 2.5264000000004005e-05, 2.5707999999999287e-05, 2.519499999999869e-05, 2.5513999999997317e-05, 2.5333999999994916e-05, 2.5221999999998357e-05, 2.5499999999997747e-05, 2.5208000000005726e-05, 2.5250000000004436e-05, 2.5250000000004436e-05, 2.5013999999996817e-05, 2.537500000000109e-05, 2.5528000000003825e-05, 2.5485999999998177e-05, 2.488900000000016e-05, 2.5042000000002895e-05, 2.5583999999995166e-05, 2.5485999999998177e-05, 2.5304999999996303e-05, 2.558300000000263e-05, 2.506900000000256e-05, 2.5318999999995873e-05, 2.50970000000017e-05, 2.4929999999999397e-05]</msg>
<status status="PASS" starttime="20201029 12:43:53.897" endtime="20201029 12:43:53.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.884" endtime="20201029 12:43:53.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:53.920" endtime="20201029 12:43:53.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.915" endtime="20201029 12:43:53.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.912" endtime="20201029 12:43:53.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.382" endtime="20201029 12:43:53.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.380" endtime="20201029 12:43:53.945"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:53.970" endtime="20201029 12:43:53.996"></status>
</kw>
<msg timestamp="20201029 12:43:53.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.966" endtime="20201029 12:43:53.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:53.999" endtime="20201029 12:43:54.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.007" endtime="20201029 12:43:54.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.959" endtime="20201029 12:43:54.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.952" endtime="20201029 12:43:54.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.032" endtime="20201029 12:43:54.393"></status>
</kw>
<msg timestamp="20201029 12:43:54.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049902347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049928597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.028" endtime="20201029 12:43:54.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049902347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049928597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.404" endtime="20201029 12:43:54.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.423" endtime="20201029 12:43:54.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.020" endtime="20201029 12:43:54.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.015" endtime="20201029 12:43:54.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:54.442" level="INFO">${RESULT} = [{'diff': 2.6249999999998497e-05}, {'diff': 2.6277999999997637e-05}, {'diff': 2.5804999999996803e-05}, {'diff': 2.6055999999996526e-05}, {'diff': 2.59170000000003e-05}, {'diff': 2.5999999999998247e-05...</msg>
<status status="PASS" starttime="20201029 12:43:54.432" endtime="20201029 12:43:54.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:54.452" level="INFO">${ACCURACY} = {'diff': [2.6249999999998497e-05, 2.6277999999997637e-05, 2.5804999999996803e-05, 2.6055999999996526e-05, 2.59170000000003e-05, 2.5999999999998247e-05, 2.6360999999995582e-05, 2.6486000000006116e-05, ...</msg>
<status status="PASS" starttime="20201029 12:43:54.444" endtime="20201029 12:43:54.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.464" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:43:54.461" endtime="20201029 12:43:54.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.470" level="INFO">VALUE: [2.6249999999998497e-05, 2.6277999999997637e-05, 2.5804999999996803e-05, 2.6055999999996526e-05, 2.59170000000003e-05, 2.5999999999998247e-05, 2.6360999999995582e-05, 2.6486000000006116e-05, 2.593099999999987e-05, 2.6096999999995762e-05, 2.658300000000363e-05, 2.6221999999999357e-05, 2.595899999999901e-05, 2.5777999999997137e-05, 2.5749999999997997e-05, 2.670899999999976e-05, 2.668100000000062e-05, 2.593099999999987e-05, 2.6348000000002425e-05, 2.5776999999997663e-05, 2.612500000000184e-05, 2.608300000000313e-05, 2.6334000000002855e-05, 2.6152000000001507e-05, 2.637500000000209e-05, 2.6485999999999177e-05, 2.6221999999999357e-05, 2.6388999999994722e-05, 2.638900000000166e-05, 2.618100000000012e-05, 2.5792000000003645e-05, 2.6485999999999177e-05, 2.6277999999997637e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.6694000000000717e-05, 2.6708000000000287e-05, 2.6069999999996096e-05, 2.6124999999994902e-05, 2.6291999999997206e-05, 2.5820000000002785e-05, 2.5805999999996276e-05, 2.6166999999993612e-05, 2.665300000000148e-05, 2.636100000000252e-05, 2.6249999999998497e-05, 2.6207999999999787e-05, 2.6555999999997026e-05, 2.647300000000602e-05, 2.6068999999996623e-05]</msg>
<status status="PASS" starttime="20201029 12:43:54.466" endtime="20201029 12:43:54.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.454" endtime="20201029 12:43:54.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:54.485" endtime="20201029 12:43:54.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.478" endtime="20201029 12:43:54.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.476" endtime="20201029 12:43:54.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.948" endtime="20201029 12:43:54.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:53.946" endtime="20201029 12:43:54.511"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.535" endtime="20201029 12:43:54.555"></status>
</kw>
<msg timestamp="20201029 12:43:54.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.532" endtime="20201029 12:43:54.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:54.558" endtime="20201029 12:43:54.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.565" endtime="20201029 12:43:54.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.524" endtime="20201029 12:43:54.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.518" endtime="20201029 12:43:54.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.591" endtime="20201029 12:43:54.956"></status>
</kw>
<msg timestamp="20201029 12:43:54.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043880694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043908319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.587" endtime="20201029 12:43:54.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:54.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043880694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043908319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:54.966" endtime="20201029 12:43:54.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:54.986" endtime="20201029 12:43:54.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.579" endtime="20201029 12:43:54.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.574" endtime="20201029 12:43:54.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.005" level="INFO">${RESULT} = [{'diff': 2.762500000000334e-05}, {'diff': 2.745900000000051e-05}, {'diff': 2.7180000000001647e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.761100000000377e-05}, {'diff': 2.7068999999997623e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:54.995" endtime="20201029 12:43:55.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.016" level="INFO">${ACCURACY} = {'diff': [2.762500000000334e-05, 2.745900000000051e-05, 2.7180000000001647e-05, 2.7680000000002147e-05, 2.761100000000377e-05, 2.7068999999997623e-05, 2.7486000000000177e-05, 2.7722000000000857e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:55.007" endtime="20201029 12:43:55.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.028" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.026" endtime="20201029 12:43:55.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.034" level="INFO">VALUE: [2.762500000000334e-05, 2.745900000000051e-05, 2.7180000000001647e-05, 2.7680000000002147e-05, 2.761100000000377e-05, 2.7068999999997623e-05, 2.7486000000000177e-05, 2.7722000000000857e-05, 2.7610999999996833e-05, 2.7680000000002147e-05, 2.6916000000001827e-05, 2.7722000000000857e-05, 2.744399999999453e-05, 2.7499999999999747e-05, 2.7360999999996582e-05, 2.6832999999996943e-05, 2.7554999999998553e-05, 2.7360999999996582e-05, 2.718100000000112e-05, 2.770900000000076e-05, 2.7014000000005756e-05, 2.7027999999998387e-05, 2.688900000000216e-05, 2.7583999999997166e-05, 2.7472999999993142e-05, 2.762500000000334e-05, 2.747300000000008e-05, 2.7027999999998387e-05, 2.6820000000003785e-05, 2.7304999999998303e-05, 2.7680000000002147e-05, 2.7596999999997263e-05, 2.7360999999996582e-05, 2.7040999999998483e-05, 2.7235999999999927e-05, 2.769399999999478e-05, 2.7249999999999497e-05, 2.717999999999471e-05, 2.688900000000216e-05, 2.7722000000000857e-05, 2.7444000000001467e-05, 2.7041999999997957e-05, 2.6805000000004742e-05, 2.6944000000000967e-05, 2.7582999999997693e-05, 2.736100000000352e-05, 2.7527999999998887e-05, 2.715300000000198e-05, 2.7110999999996332e-05, 2.693100000000087e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.030" endtime="20201029 12:43:55.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.018" endtime="20201029 12:43:55.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.048" endtime="20201029 12:43:55.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.042" endtime="20201029 12:43:55.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.040" endtime="20201029 12:43:55.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.513" endtime="20201029 12:43:55.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:54.511" endtime="20201029 12:43:55.073"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.098" endtime="20201029 12:43:55.117"></status>
</kw>
<msg timestamp="20201029 12:43:55.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.094" endtime="20201029 12:43:55.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.121" endtime="20201029 12:43:55.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.128" endtime="20201029 12:43:55.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.086" endtime="20201029 12:43:55.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.080" endtime="20201029 12:43:55.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.153" endtime="20201029 12:43:55.517"></status>
</kw>
<msg timestamp="20201029 12:43:55.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043518167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.149" endtime="20201029 12:43:55.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043518167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.528" endtime="20201029 12:43:55.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.552" endtime="20201029 12:43:55.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.141" endtime="20201029 12:43:55.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.136" endtime="20201029 12:43:55.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:55.577" level="INFO">${RESULT} = [{'diff': 2.8290999999999733e-05}, {'diff': 2.7986000000000677e-05}, {'diff': 2.8124999999996902e-05}, {'diff': 2.7791999999998707e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8708000000002287e-...</msg>
<status status="PASS" starttime="20201029 12:43:55.565" endtime="20201029 12:43:55.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:55.590" level="INFO">${ACCURACY} = {'diff': [2.8290999999999733e-05, 2.7986000000000677e-05, 2.8124999999996902e-05, 2.7791999999998707e-05, 2.8264000000000067e-05, 2.8708000000002287e-05, 2.8708000000002287e-05, 2.8694000000002717e-05...</msg>
<status status="PASS" starttime="20201029 12:43:55.580" endtime="20201029 12:43:55.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.601" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:43:55.599" endtime="20201029 12:43:55.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.609" level="INFO">VALUE: [2.8290999999999733e-05, 2.7986000000000677e-05, 2.8124999999996902e-05, 2.7791999999998707e-05, 2.8264000000000067e-05, 2.8708000000002287e-05, 2.8708000000002287e-05, 2.8694000000002717e-05, 2.8708000000002287e-05, 2.8458000000002037e-05, 2.8110999999997333e-05, 2.8582999999998693e-05, 2.8360999999997583e-05, 2.8263999999993128e-05, 2.8444000000002467e-05, 2.7804999999998803e-05, 2.8138999999996472e-05, 2.858300000000563e-05, 2.8472000000001607e-05, 2.8610999999997833e-05, 2.7722000000000857e-05, 2.872300000000133e-05, 2.793100000000187e-05, 2.84170000000028e-05, 2.7944999999994502e-05, 2.8486000000001177e-05, 2.8416000000003327e-05, 2.8070000000005035e-05, 2.8388999999996722e-05, 2.7860999999997083e-05, 2.8458999999994572e-05, 2.8347999999997486e-05, 2.7916000000002827e-05, 2.8597999999997736e-05, 2.770900000000076e-05, 2.7986000000000677e-05, 2.8582999999998693e-05, 2.869399999999578e-05, 2.8360999999997583e-05, 2.8277999999999637e-05, 2.8000000000000247e-05, 2.8054999999999053e-05, 2.8013999999999817e-05, 2.84170000000028e-05, 2.8305999999998777e-05, 2.8332999999998443e-05, 2.765300000000248e-05, 2.8332999999998443e-05, 2.7806000000005215e-05, 2.8416999999995862e-05]</msg>
<status status="PASS" starttime="20201029 12:43:55.604" endtime="20201029 12:43:55.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.592" endtime="20201029 12:43:55.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:55.625" endtime="20201029 12:43:55.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.620" endtime="20201029 12:43:55.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.617" endtime="20201029 12:43:55.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.076" endtime="20201029 12:43:55.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.074" endtime="20201029 12:43:55.651"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.676" endtime="20201029 12:43:55.696"></status>
</kw>
<msg timestamp="20201029 12:43:55.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.672" endtime="20201029 12:43:55.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:55.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:55.699" endtime="20201029 12:43:55.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.706" endtime="20201029 12:43:55.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.664" endtime="20201029 12:43:55.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.658" endtime="20201029 12:43:55.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:55.731" endtime="20201029 12:43:56.097"></status>
</kw>
<msg timestamp="20201029 12:43:56.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044104889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044134278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:55.727" endtime="20201029 12:43:56.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044104889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044134278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.107" endtime="20201029 12:43:56.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.127" endtime="20201029 12:43:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.720" endtime="20201029 12:43:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.714" endtime="20201029 12:43:56.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.146" level="INFO">${RESULT} = [{'diff': 2.9388999999997723e-05}, {'diff': 2.965300000000448e-05}, {'diff': 2.969399999999678e-05}, {'diff': 2.9250000000001497e-05}, {'diff': 2.9680999999996682e-05}, {'diff': 2.9138999999997472e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.137" endtime="20201029 12:43:56.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.156" level="INFO">${ACCURACY} = {'diff': [2.9388999999997723e-05, 2.965300000000448e-05, 2.969399999999678e-05, 2.9250000000001497e-05, 2.9680999999996682e-05, 2.9138999999997472e-05, 2.89170000000033e-05, 2.8916999999996362e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:43:56.148" endtime="20201029 12:43:56.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.168" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.166" endtime="20201029 12:43:56.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.174" level="INFO">VALUE: [2.9388999999997723e-05, 2.965300000000448e-05, 2.969399999999678e-05, 2.9250000000001497e-05, 2.9680999999996682e-05, 2.9138999999997472e-05, 2.89170000000033e-05, 2.8916999999996362e-05, 2.9472000000002607e-05, 2.9041000000000483e-05, 2.9388999999997723e-05, 2.9416000000004328e-05, 2.9374999999998153e-05, 2.9055999999999527e-05, 2.913900000000441e-05, 2.9458000000003037e-05, 2.8916000000003828e-05, 2.890199999999732e-05, 2.9472000000002607e-05, 2.9124999999997903e-05, 2.9388999999997723e-05, 2.9250000000001497e-05, 2.9124999999997903e-05, 2.9582999999999693e-05, 2.9278000000000637e-05, 2.9708000000003287e-05, 2.969399999999678e-05, 2.9028000000000387e-05, 2.9527999999993948e-05, 2.8778000000000137e-05, 2.9596999999999263e-05, 2.9624999999998403e-05, 2.9014000000000817e-05, 2.8750000000000997e-05, 2.9584000000006105e-05, 2.8847999999997986e-05, 2.894500000000244e-05, 2.9041999999999957e-05, 2.8833999999998416e-05, 2.915300000000398e-05, 2.9583999999999167e-05, 2.9055999999999527e-05, 2.8833000000005882e-05, 2.944399999999653e-05, 2.9528000000000887e-05, 2.9332999999999443e-05, 2.9750000000001997e-05, 2.9388999999997723e-05, 2.967999999999721e-05, 2.9708000000003287e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.170" endtime="20201029 12:43:56.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.158" endtime="20201029 12:43:56.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.188" endtime="20201029 12:43:56.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.183" endtime="20201029 12:43:56.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.180" endtime="20201029 12:43:56.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.653" endtime="20201029 12:43:56.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:55.652" endtime="20201029 12:43:56.213"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.238" endtime="20201029 12:43:56.259"></status>
</kw>
<msg timestamp="20201029 12:43:56.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.234" endtime="20201029 12:43:56.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.263" endtime="20201029 12:43:56.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.269" endtime="20201029 12:43:56.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.227" endtime="20201029 12:43:56.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.220" endtime="20201029 12:43:56.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.295" endtime="20201029 12:43:56.657"></status>
</kw>
<msg timestamp="20201029 12:43:56.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045364181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.291" endtime="20201029 12:43:56.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045334236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045364181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.667" endtime="20201029 12:43:56.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.687" endtime="20201029 12:43:56.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.283" endtime="20201029 12:43:56.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.278" endtime="20201029 12:43:56.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:56.706" level="INFO">${RESULT} = [{'diff': 2.994500000000344e-05}, {'diff': 3.0360999999999583e-05}, {'diff': 3.0110999999999333e-05}, {'diff': 3.0486000000003177e-05}, {'diff': 2.988799999999875e-05}, {'diff': 3.0319000000000873e-05...</msg>
<status status="PASS" starttime="20201029 12:43:56.696" endtime="20201029 12:43:56.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:56.716" level="INFO">${ACCURACY} = {'diff': [2.994500000000344e-05, 3.0360999999999583e-05, 3.0110999999999333e-05, 3.0486000000003177e-05, 2.988799999999875e-05, 3.0319000000000873e-05, 3.0500000000002747e-05, 3.067999999999821e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:43:56.708" endtime="20201029 12:43:56.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.728" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:43:56.725" endtime="20201029 12:43:56.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.734" level="INFO">VALUE: [2.994500000000344e-05, 3.0360999999999583e-05, 3.0110999999999333e-05, 3.0486000000003177e-05, 2.988799999999875e-05, 3.0319000000000873e-05, 3.0500000000002747e-05, 3.067999999999821e-05, 2.994399999999703e-05, 2.987500000000559e-05, 3.0138999999998473e-05, 2.9736000000002427e-05, 3.0096999999999763e-05, 3.0500000000002747e-05, 3.0292000000001207e-05, 2.994399999999703e-05, 2.9958999999996072e-05, 3.020799999999685e-05, 3.067999999999821e-05, 3.0180999999997182e-05, 2.993100000000387e-05, 3.015300000000498e-05, 3.0360999999999583e-05, 2.993100000000387e-05, 3.0013999999994878e-05, 2.9944999999996502e-05, 3.0014000000001817e-05, 2.9806000000000277e-05, 3.0042000000000957e-05, 3.06249999999994e-05, 2.9792000000000707e-05, 3.022199999999642e-05, 3.0512999999995905e-05, 2.9944000000003967e-05, 3.0347000000000013e-05, 3.065199999999907e-05, 2.9944000000003967e-05, 2.9777999999994198e-05, 2.9874999999998653e-05, 2.992999999999746e-05, 3.067999999999821e-05, 2.9764000000001567e-05, 3.070799999999735e-05, 3.017999999999771e-05, 2.9819000000000373e-05, 2.9972999999995642e-05, 3.0124999999998903e-05, 3.0249999999995558e-05, 3.0014000000001817e-05, 3.0360999999999583e-05]</msg>
<status status="PASS" starttime="20201029 12:43:56.730" endtime="20201029 12:43:56.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.718" endtime="20201029 12:43:56.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:56.749" endtime="20201029 12:43:56.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.742" endtime="20201029 12:43:56.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.740" endtime="20201029 12:43:56.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.216" endtime="20201029 12:43:56.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.214" endtime="20201029 12:43:56.775"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.799" endtime="20201029 12:43:56.819"></status>
</kw>
<msg timestamp="20201029 12:43:56.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.796" endtime="20201029 12:43:56.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:56.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:56.823" endtime="20201029 12:43:56.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.830" endtime="20201029 12:43:56.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.788" endtime="20201029 12:43:56.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.781" endtime="20201029 12:43:56.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:56.856" endtime="20201029 12:43:57.220"></status>
</kw>
<msg timestamp="20201029 12:43:57.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044050333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044081153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:56.852" endtime="20201029 12:43:57.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044050333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044081153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.230" endtime="20201029 12:43:57.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.250" endtime="20201029 12:43:57.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.844" endtime="20201029 12:43:57.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.839" endtime="20201029 12:43:57.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.269" level="INFO">${RESULT} = [{'diff': 3.082000000000085e-05}, {'diff': 3.108400000000067e-05}, {'diff': 3.172299999999739e-05}, {'diff': 3.116699999999861e-05}, {'diff': 3.149999999999681e-05}, {'diff': 3.115299999999904e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:57.259" endtime="20201029 12:43:57.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.280" level="INFO">${ACCURACY} = {'diff': [3.082000000000085e-05, 3.108400000000067e-05, 3.172299999999739e-05, 3.116699999999861e-05, 3.149999999999681e-05, 3.115299999999904e-05, 3.100000000000325e-05, 3.099999999999631e-05, 3.1014...</msg>
<status status="PASS" starttime="20201029 12:43:57.271" endtime="20201029 12:43:57.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.292" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.289" endtime="20201029 12:43:57.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.298" level="INFO">VALUE: [3.082000000000085e-05, 3.108400000000067e-05, 3.172299999999739e-05, 3.116699999999861e-05, 3.149999999999681e-05, 3.115299999999904e-05, 3.100000000000325e-05, 3.099999999999631e-05, 3.101400000000282e-05, 3.1346999999994074e-05, 3.081900000000137e-05, 3.091599999999889e-05, 3.172199999999792e-05, 3.0790999999995294e-05, 3.169399999999878e-05, 3.091599999999889e-05, 3.077800000000214e-05, 3.16250000000004e-05, 3.101400000000282e-05, 3.083399999999348e-05, 3.093099999999793e-05, 3.093099999999793e-05, 3.126399999999613e-05, 3.161100000000083e-05, 3.147200000000461e-05, 3.127800000000264e-05, 3.12500000000035e-05, 3.079200000000171e-05, 3.104100000000248e-05, 3.148600000000418e-05, 3.141699999999886e-05, 3.169499999999825e-05, 3.076400000000257e-05, 3.091699999999836e-05, 3.108400000000067e-05, 3.12500000000035e-05, 3.088799999999975e-05, 3.091599999999889e-05, 3.081900000000137e-05, 3.094399999999803e-05, 3.109700000000076e-05, 3.0790999999995294e-05, 3.1360999999993644e-05, 3.105599999999459e-05, 3.148600000000418e-05, 3.155500000000255e-05, 3.090300000000573e-05, 3.079200000000171e-05, 3.108400000000067e-05, 3.166699999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.294" endtime="20201029 12:43:57.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.282" endtime="20201029 12:43:57.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.311" endtime="20201029 12:43:57.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.306" endtime="20201029 12:43:57.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.304" endtime="20201029 12:43:57.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.777" endtime="20201029 12:43:57.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:56.776" endtime="20201029 12:43:57.337"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.361" endtime="20201029 12:43:57.381"></status>
</kw>
<msg timestamp="20201029 12:43:57.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.358" endtime="20201029 12:43:57.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.384" endtime="20201029 12:43:57.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.391" endtime="20201029 12:43:57.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.350" endtime="20201029 12:43:57.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.344" endtime="20201029 12:43:57.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.417" endtime="20201029 12:43:57.781"></status>
</kw>
<msg timestamp="20201029 12:43:57.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043679139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043711514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.413" endtime="20201029 12:43:57.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043679139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043711514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.791" endtime="20201029 12:43:57.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.811" endtime="20201029 12:43:57.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.405" endtime="20201029 12:43:57.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.400" endtime="20201029 12:43:57.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:57.829" level="INFO">${RESULT} = [{'diff': 3.237500000000115e-05}, {'diff': 3.252799999999695e-05}, {'diff': 3.183399999999448e-05}, {'diff': 3.249999999999781e-05}, {'diff': 3.216699999999961e-05}, {'diff': 3.2444999999999e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:43:57.820" endtime="20201029 12:43:57.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:57.841" level="INFO">${ACCURACY} = {'diff': [3.237500000000115e-05, 3.252799999999695e-05, 3.183399999999448e-05, 3.249999999999781e-05, 3.216699999999961e-05, 3.2444999999999e-05, 3.182000000000185e-05, 3.2332999999995504e-05, 3.20269...</msg>
<status status="PASS" starttime="20201029 12:43:57.831" endtime="20201029 12:43:57.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.853" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:43:57.850" endtime="20201029 12:43:57.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.859" level="INFO">VALUE: [3.237500000000115e-05, 3.252799999999695e-05, 3.183399999999448e-05, 3.249999999999781e-05, 3.216699999999961e-05, 3.2444999999999e-05, 3.182000000000185e-05, 3.2332999999995504e-05, 3.2026999999996975e-05, 3.234800000000149e-05, 3.204100000000348e-05, 3.180599999999534e-05, 3.180599999999534e-05, 3.2276999999997225e-05, 3.270799999999935e-05, 3.233300000000244e-05, 3.226399999999713e-05, 3.258300000000269e-05, 3.177800000000314e-05, 3.194399999999903e-05, 3.205500000000305e-05, 3.265300000000054e-05, 3.188900000000022e-05, 3.215300000000004e-05, 3.222199999999842e-05, 3.240300000000029e-05, 3.270900000000576e-05, 3.190299999999979e-05, 3.224999999999756e-05, 3.226399999999713e-05, 3.2360999999994644e-05, 3.204200000000296e-05, 3.218099999999918e-05, 3.224999999999756e-05, 3.222200000000536e-05, 3.176399999999663e-05, 3.219399999999928e-05, 3.2610999999994894e-05, 3.2112000000000807e-05, 3.216600000000014e-05, 3.237500000000115e-05, 3.191599999999989e-05, 3.224999999999756e-05, 3.18050000000028e-05, 3.174999999999706e-05, 3.222199999999842e-05, 3.230599999999584e-05, 3.2096999999994824e-05, 3.18050000000028e-05, 3.205500000000305e-05]</msg>
<status status="PASS" starttime="20201029 12:43:57.855" endtime="20201029 12:43:57.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.843" endtime="20201029 12:43:57.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:57.872" endtime="20201029 12:43:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.868" endtime="20201029 12:43:57.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.865" endtime="20201029 12:43:57.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.339" endtime="20201029 12:43:57.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.338" endtime="20201029 12:43:57.899"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.924" endtime="20201029 12:43:57.945"></status>
</kw>
<msg timestamp="20201029 12:43:57.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.920" endtime="20201029 12:43:57.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:57.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:57.948" endtime="20201029 12:43:57.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.955" endtime="20201029 12:43:57.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.913" endtime="20201029 12:43:57.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.906" endtime="20201029 12:43:57.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:57.980" endtime="20201029 12:43:58.353"></status>
</kw>
<msg timestamp="20201029 12:43:58.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045313181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045346222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:57.977" endtime="20201029 12:43:58.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045313181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045346222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.364" endtime="20201029 12:43:58.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.384" endtime="20201029 12:43:58.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.969" endtime="20201029 12:43:58.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.964" endtime="20201029 12:43:58.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.402" level="INFO">${RESULT} = [{'diff': 3.3040999999997545e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.369500000000025e-05}, {'diff': 3.287500000000165e-05}, {'diff': 3.369399999999384e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:43:58.393" endtime="20201029 12:43:58.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.412" level="INFO">${ACCURACY} = {'diff': [3.3040999999997545e-05, 3.326399999999813e-05, 3.322199999999942e-05, 3.369500000000025e-05, 3.287500000000165e-05, 3.369399999999384e-05, 3.302799999999745e-05, 3.337500000000215e-05, 3.348...</msg>
<status status="PASS" starttime="20201029 12:43:58.405" endtime="20201029 12:43:58.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.424" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.422" endtime="20201029 12:43:58.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.430" level="INFO">VALUE: [3.3040999999997545e-05, 3.326399999999813e-05, 3.322199999999942e-05, 3.369500000000025e-05, 3.287500000000165e-05, 3.369399999999384e-05, 3.302799999999745e-05, 3.337500000000215e-05, 3.348599999999924e-05, 3.3374999999995214e-05, 3.288900000000122e-05, 3.280600000000328e-05, 3.291700000000036e-05, 3.326399999999813e-05, 3.347199999999967e-05, 3.323599999999899e-05, 3.345899999999957e-05, 3.32779999999977e-05, 3.279200000000371e-05, 3.334700000000301e-05, 3.302799999999745e-05, 3.354199999999752e-05, 3.32779999999977e-05, 3.331900000000387e-05, 3.305500000000405e-05, 3.29579999999996e-05, 3.3027000000004914e-05, 3.28050000000038e-05, 3.28050000000038e-05, 3.368000000000121e-05, 3.348599999999924e-05, 3.298599999999874e-05, 3.326400000000507e-05, 3.302799999999745e-05, 3.348599999999924e-05, 3.2860999999995144e-05, 3.302799999999745e-05, 3.279200000000371e-05, 3.3346999999996074e-05, 3.350000000000575e-05, 3.361100000000283e-05, 3.286200000000156e-05, 3.299999999999831e-05, 3.3291000000004733e-05, 3.358300000000369e-05, 3.337500000000215e-05, 3.347299999999914e-05, 3.34580000000001e-05, 3.28050000000038e-05, 3.2790999999997295e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.427" endtime="20201029 12:43:58.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.414" endtime="20201029 12:43:58.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:58.444" endtime="20201029 12:43:58.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.439" endtime="20201029 12:43:58.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.436" endtime="20201029 12:43:58.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.901" endtime="20201029 12:43:58.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:57.900" endtime="20201029 12:43:58.469"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.494" endtime="20201029 12:43:58.515"></status>
</kw>
<msg timestamp="20201029 12:43:58.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.490" endtime="20201029 12:43:58.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:58.519" endtime="20201029 12:43:58.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.526" endtime="20201029 12:43:58.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.483" endtime="20201029 12:43:58.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.476" endtime="20201029 12:43:58.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.551" endtime="20201029 12:43:58.911"></status>
</kw>
<msg timestamp="20201029 12:43:58.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045406208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.547" endtime="20201029 12:43:58.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045406208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045440681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:58.922" endtime="20201029 12:43:58.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:58.942" endtime="20201029 12:43:58.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.539" endtime="20201029 12:43:58.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.534" endtime="20201029 12:43:58.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:58.961" level="INFO">${RESULT} = [{'diff': 3.4472999999993204e-05}, {'diff': 3.3832999999997004e-05}, {'diff': 3.411200000000281e-05}, {'diff': 3.415199999999563e-05}, {'diff': 3.441700000000186e-05}, {'diff': 3.3762999999999155e-05}...</msg>
<status status="PASS" starttime="20201029 12:43:58.952" endtime="20201029 12:43:58.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:58.971" level="INFO">${ACCURACY} = {'diff': [3.4472999999993204e-05, 3.3832999999997004e-05, 3.411200000000281e-05, 3.415199999999563e-05, 3.441700000000186e-05, 3.3762999999999155e-05, 3.420800000000085e-05, 3.424999999999956e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 12:43:58.963" endtime="20201029 12:43:58.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.983" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:43:58.981" endtime="20201029 12:43:58.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:58.989" level="INFO">VALUE: [3.4472999999993204e-05, 3.3832999999997004e-05, 3.411200000000281e-05, 3.415199999999563e-05, 3.441700000000186e-05, 3.3762999999999155e-05, 3.420800000000085e-05, 3.424999999999956e-05, 3.416600000000214e-05, 3.469400000000178e-05, 3.444399999999459e-05, 3.413900000000247e-05, 3.46250000000034e-05, 3.4610999999996894e-05, 3.382000000000385e-05, 3.401399999999888e-05, 3.424999999999956e-05, 3.465200000000307e-05, 3.454199999999852e-05, 3.37779999999982e-05, 3.424999999999956e-05, 3.470900000000082e-05, 3.438800000000325e-05, 3.447300000000014e-05, 3.461100000000383e-05, 3.402799999999845e-05, 3.46380000000035e-05, 3.4374999999996214e-05, 3.443100000000143e-05, 3.401399999999888e-05, 3.391599999999495e-05, 3.397200000000017e-05, 3.419500000000075e-05, 3.424999999999956e-05, 3.4582999999997754e-05, 3.454199999999852e-05, 3.399999999999931e-05, 3.393000000000146e-05, 3.458300000000469e-05, 3.370800000000035e-05, 3.4152999999995104e-05, 3.402799999999845e-05, 3.416700000000161e-05, 3.46250000000034e-05, 3.4680999999994744e-05, 3.376399999999863e-05, 3.379200000000471e-05, 3.424999999999956e-05, 3.436200000000306e-05, 3.426399999999913e-05]</msg>
<status status="PASS" starttime="20201029 12:43:58.985" endtime="20201029 12:43:58.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.973" endtime="20201029 12:43:58.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.010" endtime="20201029 12:43:59.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.004" endtime="20201029 12:43:59.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.001" endtime="20201029 12:43:59.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.472" endtime="20201029 12:43:59.036"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:58.470" endtime="20201029 12:43:59.036"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.061" endtime="20201029 12:43:59.081"></status>
</kw>
<msg timestamp="20201029 12:43:59.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.057" endtime="20201029 12:43:59.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.084" endtime="20201029 12:43:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.091" endtime="20201029 12:43:59.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.050" endtime="20201029 12:43:59.097"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.043" endtime="20201029 12:43:59.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.116" endtime="20201029 12:43:59.479"></status>
</kw>
<msg timestamp="20201029 12:43:59.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044019333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044054583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.113" endtime="20201029 12:43:59.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044019333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044054583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.489" endtime="20201029 12:43:59.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.509" endtime="20201029 12:43:59.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.105" endtime="20201029 12:43:59.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.100" endtime="20201029 12:43:59.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:43:59.527" level="INFO">${RESULT} = [{'diff': 3.525000000000056e-05}, {'diff': 3.494400000000203e-05}, {'diff': 3.54580000000021e-05}, {'diff': 3.552799999999995e-05}, {'diff': 3.567999999999627e-05}, {'diff': 3.4818999999998435e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:43:59.518" endtime="20201029 12:43:59.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:43:59.543" level="INFO">${ACCURACY} = {'diff': [3.525000000000056e-05, 3.494400000000203e-05, 3.54580000000021e-05, 3.552799999999995e-05, 3.567999999999627e-05, 3.4818999999998435e-05, 3.551399999999344e-05, 3.5360999999997644e-05, 3.511...</msg>
<status status="PASS" starttime="20201029 12:43:59.529" endtime="20201029 12:43:59.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.555" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:43:59.553" endtime="20201029 12:43:59.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.561" level="INFO">VALUE: [3.525000000000056e-05, 3.494400000000203e-05, 3.54580000000021e-05, 3.552799999999995e-05, 3.567999999999627e-05, 3.4818999999998435e-05, 3.551399999999344e-05, 3.5360999999997644e-05, 3.511100000000433e-05, 3.575000000000106e-05, 3.56250000000044e-05, 3.537500000000415e-05, 3.550000000000081e-05, 3.5583000000005693e-05, 3.4888999999996284e-05, 3.550000000000081e-05, 3.536100000000458e-05, 3.5124999999996964e-05, 3.570800000000235e-05, 3.550000000000081e-05, 3.5360999999997644e-05, 3.569400000000278e-05, 3.517999999999577e-05, 3.4818999999998435e-05, 3.4832999999998004e-05, 3.548600000000124e-05, 3.545900000000157e-05, 3.515300000000304e-05, 3.551400000000038e-05, 3.502800000000639e-05, 3.569399999999584e-05, 3.484700000000451e-05, 3.555599999999909e-05, 3.5152999999996104e-05, 3.518100000000218e-05, 3.5554999999999615e-05, 3.522200000000142e-05, 3.5694999999995314e-05, 3.4944999999994564e-05, 3.55979999999978e-05, 3.526400000000013e-05, 3.523600000000099e-05, 3.4888999999996284e-05, 3.5374999999997214e-05, 3.522300000000089e-05, 3.550000000000081e-05, 3.5110999999997394e-05, 3.5374999999997214e-05, 3.5138999999996534e-05, 3.515199999999663e-05]</msg>
<status status="PASS" starttime="20201029 12:43:59.558" endtime="20201029 12:43:59.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.545" endtime="20201029 12:43:59.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:43:59.575" endtime="20201029 12:43:59.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.570" endtime="20201029 12:43:59.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.567" endtime="20201029 12:43:59.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.038" endtime="20201029 12:43:59.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.037" endtime="20201029 12:43:59.601"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.625" endtime="20201029 12:43:59.646"></status>
</kw>
<msg timestamp="20201029 12:43:59.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.621" endtime="20201029 12:43:59.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:43:59.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:43:59.650" endtime="20201029 12:43:59.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.656" endtime="20201029 12:43:59.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.614" endtime="20201029 12:43:59.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.607" endtime="20201029 12:43:59.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:43:59.681" endtime="20201029 12:44:00.046"></status>
</kw>
<msg timestamp="20201029 12:44:00.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044220111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:43:59.678" endtime="20201029 12:44:00.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044220111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044256417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.056" endtime="20201029 12:44:00.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.075" endtime="20201029 12:44:00.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.670" endtime="20201029 12:44:00.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.665" endtime="20201029 12:44:00.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.094" level="INFO">${RESULT} = [{'diff': 3.630599999999984e-05}, {'diff': 3.6360999999998644e-05}, {'diff': 3.647300000000214e-05}, {'diff': 3.5846999999998574e-05}, {'diff': 3.615199999999763e-05}, {'diff': 3.667999999999727e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:00.085" endtime="20201029 12:44:00.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.106" level="INFO">${ACCURACY} = {'diff': [3.630599999999984e-05, 3.6360999999998644e-05, 3.647300000000214e-05, 3.5846999999998574e-05, 3.615199999999763e-05, 3.667999999999727e-05, 3.669400000000378e-05, 3.6096999999998824e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 12:44:00.096" endtime="20201029 12:44:00.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.118" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.115" endtime="20201029 12:44:00.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.124" level="INFO">VALUE: [3.630599999999984e-05, 3.6360999999998644e-05, 3.647300000000214e-05, 3.5846999999998574e-05, 3.615199999999763e-05, 3.667999999999727e-05, 3.669400000000378e-05, 3.6096999999998824e-05, 3.591599999999695e-05, 3.6110999999998394e-05, 3.604200000000002e-05, 3.6638999999998034e-05, 3.672200000000292e-05, 3.6124999999997964e-05, 3.629200000000027e-05, 3.6374999999998214e-05, 3.6138999999997534e-05, 3.615300000000404e-05, 3.6694999999996314e-05, 3.6374999999998214e-05, 3.6138999999997534e-05, 3.599999999999437e-05, 3.605599999999959e-05, 3.633399999999898e-05, 3.6374999999998214e-05, 3.581999999999891e-05, 3.6472999999995204e-05, 3.6610999999998894e-05, 3.667999999999727e-05, 3.649999999999487e-05, 3.613799999999806e-05, 3.647199999999573e-05, 3.590199999999738e-05, 3.616700000000361e-05, 3.591700000000336e-05, 3.624999999999462e-05, 3.6236999999994524e-05, 3.59450000000025e-05, 3.622200000000242e-05, 3.581999999999891e-05, 3.6124999999997964e-05, 3.6138999999997534e-05, 3.6360999999998644e-05, 3.580599999999934e-05, 3.629200000000027e-05, 3.6472999999995204e-05, 3.6624999999998464e-05, 3.5972999999994704e-05, 3.6318999999999935e-05, 3.6388999999997784e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.120" endtime="20201029 12:44:00.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.108" endtime="20201029 12:44:00.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.137" endtime="20201029 12:44:00.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.132" endtime="20201029 12:44:00.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.130" endtime="20201029 12:44:00.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.603" endtime="20201029 12:44:00.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:59.601" endtime="20201029 12:44:00.163"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.187" endtime="20201029 12:44:00.207"></status>
</kw>
<msg timestamp="20201029 12:44:00.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.184" endtime="20201029 12:44:00.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.211" endtime="20201029 12:44:00.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.218" endtime="20201029 12:44:00.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.176" endtime="20201029 12:44:00.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.170" endtime="20201029 12:44:00.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.243" endtime="20201029 12:44:00.610"></status>
</kw>
<msg timestamp="20201029 12:44:00.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.239" endtime="20201029 12:44:00.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043787569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043824806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.620" endtime="20201029 12:44:00.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.640" endtime="20201029 12:44:00.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.232" endtime="20201029 12:44:00.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.226" endtime="20201029 12:44:00.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:00.658" level="INFO">${RESULT} = [{'diff': 3.723700000000246e-05}, {'diff': 3.773600000000349e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.6860999999999144e-05}, {'diff': 3.726400000000213e-05}, {'diff': 3.6804999999993926e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:00.649" endtime="20201029 12:44:00.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:00.668" level="INFO">${ACCURACY} = {'diff': [3.723700000000246e-05, 3.773600000000349e-05, 3.7110999999999394e-05, 3.6860999999999144e-05, 3.726400000000213e-05, 3.6804999999993926e-05, 3.7610999999999895e-05, 3.772199999999698e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:00.660" endtime="20201029 12:44:00.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.680" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:00.677" endtime="20201029 12:44:00.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.686" level="INFO">VALUE: [3.723700000000246e-05, 3.773600000000349e-05, 3.7110999999999394e-05, 3.6860999999999144e-05, 3.726400000000213e-05, 3.6804999999993926e-05, 3.7610999999999895e-05, 3.772199999999698e-05, 3.7347000000000075e-05, 3.7374999999999214e-05, 3.7624999999999464e-05, 3.747200000000367e-05, 3.7360999999999644e-05, 3.718100000000418e-05, 3.7374999999999214e-05, 3.7152999999998104e-05, 3.702800000000145e-05, 3.722199999999648e-05, 3.6930999999996994e-05, 3.679200000000077e-05, 3.737500000000615e-05, 3.679200000000077e-05, 3.7305000000001365e-05, 3.7360999999999644e-05, 3.747300000000314e-05, 3.692999999999752e-05, 3.750000000000281e-05, 3.6833000000000005e-05, 3.7069000000000685e-05, 3.7360999999999644e-05, 3.701399999999494e-05, 3.7388999999998784e-05, 3.747200000000367e-05, 3.748600000000324e-05, 3.752800000000195e-05, 3.702799999999451e-05, 3.6902999999997854e-05, 3.6916999999997424e-05, 3.724999999999562e-05, 3.772300000000339e-05, 3.6874999999998714e-05, 3.7360999999999644e-05, 3.750000000000281e-05, 3.6776999999994786e-05, 3.7041000000001545e-05, 3.7027000000001975e-05, 3.76659999999987e-05, 3.758400000000023e-05, 3.7276999999995286e-05, 3.772199999999698e-05]</msg>
<status status="PASS" starttime="20201029 12:44:00.682" endtime="20201029 12:44:00.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.670" endtime="20201029 12:44:00.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:00.699" endtime="20201029 12:44:00.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.694" endtime="20201029 12:44:00.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.692" endtime="20201029 12:44:00.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.165" endtime="20201029 12:44:00.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.164" endtime="20201029 12:44:00.727"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.752" endtime="20201029 12:44:00.774"></status>
</kw>
<msg timestamp="20201029 12:44:00.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.748" endtime="20201029 12:44:00.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:00.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:00.777" endtime="20201029 12:44:00.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.784" endtime="20201029 12:44:00.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.740" endtime="20201029 12:44:00.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.734" endtime="20201029 12:44:00.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:00.809" endtime="20201029 12:44:01.172"></status>
</kw>
<msg timestamp="20201029 12:44:01.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048094903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048133597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:00.806" endtime="20201029 12:44:01.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048094903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048133597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.183" endtime="20201029 12:44:01.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.202" endtime="20201029 12:44:01.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.798" endtime="20201029 12:44:01.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.793" endtime="20201029 12:44:01.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.221" level="INFO">${RESULT} = [{'diff': 3.869399999999884e-05}, {'diff': 3.86659999999997e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.8069000000001685e-05}, {'diff': 3.805600000000159e-05}, {'diff': 3.849999999999687e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:01.211" endtime="20201029 12:44:01.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.231" level="INFO">${ACCURACY} = {'diff': [3.869399999999884e-05, 3.86659999999997e-05, 3.7888999999999284e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 3.849999999999687e-05, 3.7819000000001435e-05, 3.7888999999999284e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:44:01.223" endtime="20201029 12:44:01.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.243" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.240" endtime="20201029 12:44:01.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.249" level="INFO">VALUE: [3.869399999999884e-05, 3.86659999999997e-05, 3.7888999999999284e-05, 3.8069000000001685e-05, 3.805600000000159e-05, 3.849999999999687e-05, 3.7819000000001435e-05, 3.7888999999999284e-05, 3.83059999999949e-05, 3.791700000000536e-05, 3.8416999999998924e-05, 3.8375000000000214e-05, 3.861200000000037e-05, 3.7874999999999714e-05, 3.822300000000389e-05, 3.847300000000414e-05, 3.8624999999993526e-05, 3.804200000000202e-05, 3.8305000000002365e-05, 3.867999999999927e-05, 3.8027000000002975e-05, 3.827799999999576e-05, 3.869399999999884e-05, 3.8138999999999534e-05, 3.8318999999994996e-05, 3.82780000000027e-05, 3.872200000000492e-05, 3.780600000000134e-05, 3.808400000000073e-05, 3.802799999999551e-05, 3.82780000000027e-05, 3.8694999999998314e-05, 3.8332999999994566e-05, 3.7944999999997564e-05, 3.780600000000134e-05, 3.804199999999508e-05, 3.779200000000177e-05, 3.8361000000000645e-05, 3.780600000000134e-05, 3.7916999999998424e-05, 3.773600000000349e-05, 3.779200000000177e-05, 3.8040999999995606e-05, 3.8333000000001505e-05, 3.870799999999841e-05, 3.84859999999973e-05, 3.8055000000002115e-05, 3.8055000000002115e-05, 3.8040999999995606e-05, 3.816700000000561e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.245" endtime="20201029 12:44:01.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.233" endtime="20201029 12:44:01.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.264" endtime="20201029 12:44:01.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.257" endtime="20201029 12:44:01.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.255" endtime="20201029 12:44:01.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.729" endtime="20201029 12:44:01.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:00.728" endtime="20201029 12:44:01.290"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.314" endtime="20201029 12:44:01.335"></status>
</kw>
<msg timestamp="20201029 12:44:01.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.310" endtime="20201029 12:44:01.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.339" endtime="20201029 12:44:01.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.345" endtime="20201029 12:44:01.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.303" endtime="20201029 12:44:01.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.297" endtime="20201029 12:44:01.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.371" endtime="20201029 12:44:01.754"></status>
</kw>
<msg timestamp="20201029 12:44:01.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04387425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:01.367" endtime="20201029 12:44:01.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04387425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043913833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:01.764" endtime="20201029 12:44:01.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.784" endtime="20201029 12:44:01.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.360" endtime="20201029 12:44:01.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.354" endtime="20201029 12:44:01.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:01.802" level="INFO">${RESULT} = [{'diff': 3.9583000000002755e-05}, {'diff': 3.9611000000001895e-05}, {'diff': 3.9125000000000965e-05}, {'diff': 3.8833000000002005e-05}, {'diff': 3.9569000000003185e-05}, {'diff': 3.947199999999873e-0...</msg>
<status status="PASS" starttime="20201029 12:44:01.793" endtime="20201029 12:44:01.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:01.814" level="INFO">${ACCURACY} = {'diff': [3.9583000000002755e-05, 3.9611000000001895e-05, 3.9125000000000965e-05, 3.8833000000002005e-05, 3.9569000000003185e-05, 3.947199999999873e-05, 3.9582999999995816e-05, 3.9403000000000354e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:01.805" endtime="20201029 12:44:01.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.826" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:01.823" endtime="20201029 12:44:01.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.832" level="INFO">VALUE: [3.9583000000002755e-05, 3.9611000000001895e-05, 3.9125000000000965e-05, 3.8833000000002005e-05, 3.9569000000003185e-05, 3.947199999999873e-05, 3.9582999999995816e-05, 3.9403000000000354e-05, 3.901399999999694e-05, 3.954199999999658e-05, 3.9694999999999314e-05, 3.895900000000507e-05, 3.9180999999999244e-05, 3.9180999999999244e-05, 3.9416999999999924e-05, 3.9416999999999924e-05, 3.877799999999626e-05, 3.9041000000003545e-05, 3.904200000000302e-05, 3.894399999999909e-05, 3.8832999999995066e-05, 3.9568999999996246e-05, 3.9403000000000354e-05, 3.968000000000027e-05, 3.972199999999898e-05, 3.9374999999994276e-05, 3.9111000000001395e-05, 3.902800000000345e-05, 3.9375000000001215e-05, 3.8958999999998134e-05, 3.926399999999719e-05, 3.879199999999583e-05, 3.9458999999998634e-05, 3.905600000000259e-05, 3.8916999999999424e-05, 3.9639000000001035e-05, 3.92780000000037e-05, 3.9458999999998634e-05, 3.8889000000000284e-05, 3.91660000000002e-05, 3.970799999999941e-05, 3.8846999999994636e-05, 3.9569000000003185e-05, 3.915200000000063e-05, 3.9416999999999924e-05, 3.8776999999996786e-05, 3.8889000000000284e-05, 3.94859999999983e-05, 3.904199999999608e-05, 3.954199999999658e-05]</msg>
<status status="PASS" starttime="20201029 12:44:01.828" endtime="20201029 12:44:01.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.816" endtime="20201029 12:44:01.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:01.846" endtime="20201029 12:44:01.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.841" endtime="20201029 12:44:01.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.838" endtime="20201029 12:44:01.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.292" endtime="20201029 12:44:01.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.291" endtime="20201029 12:44:01.872"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.896" endtime="20201029 12:44:01.916"></status>
</kw>
<msg timestamp="20201029 12:44:01.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.893" endtime="20201029 12:44:01.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:01.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:01.920" endtime="20201029 12:44:01.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.926" endtime="20201029 12:44:01.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.885" endtime="20201029 12:44:01.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.879" endtime="20201029 12:44:01.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:01.952" endtime="20201029 12:44:02.315"></status>
</kw>
<msg timestamp="20201029 12:44:02.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044007569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044047944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:01.948" endtime="20201029 12:44:02.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044007569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044047944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.325" endtime="20201029 12:44:02.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.345" endtime="20201029 12:44:02.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.940" endtime="20201029 12:44:02.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.935" endtime="20201029 12:44:02.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.363" level="INFO">${RESULT} = [{'diff': 4.0374999999995276e-05}, {'diff': 4.0568999999997246e-05}, {'diff': 4.0125000000001965e-05}, {'diff': 4.0055000000004115e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 3.9819000000003435e-...</msg>
<status status="PASS" starttime="20201029 12:44:02.354" endtime="20201029 12:44:02.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.375" level="INFO">${ACCURACY} = {'diff': [4.0374999999995276e-05, 4.0568999999997246e-05, 4.0125000000001965e-05, 4.0055000000004115e-05, 3.9903000000000854e-05, 3.9819000000003435e-05, 4.070800000000041e-05, 3.970799999999941e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:02.366" endtime="20201029 12:44:02.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.387" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.385" endtime="20201029 12:44:02.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.393" level="INFO">VALUE: [4.0374999999995276e-05, 4.0568999999997246e-05, 4.0125000000001965e-05, 4.0055000000004115e-05, 3.9903000000000854e-05, 3.9819000000003435e-05, 4.070800000000041e-05, 3.970799999999941e-05, 3.994400000000009e-05, 3.9944999999999564e-05, 4.0695000000000314e-05, 4.029199999999733e-05, 4.0541000000005045e-05, 4.0361000000002645e-05, 4.022199999999948e-05, 4.051400000000538e-05, 4.0208999999999384e-05, 4.0445000000000064e-05, 4.0653000000001605e-05, 4.049999999999887e-05, 4.0681000000000744e-05, 3.98059999999964e-05, 4.049999999999887e-05, 4.0375000000002215e-05, 3.9804999999996926e-05, 4.022199999999948e-05, 4.049999999999887e-05, 4.020799999999991e-05, 4.0152999999994166e-05, 3.994400000000009e-05, 4.0389000000001785e-05, 4.054199999999758e-05, 3.9832999999996066e-05, 4.004199999999708e-05, 4.0360999999995706e-05, 3.99859999999988e-05, 3.98059999999964e-05, 4.0681000000000744e-05, 3.982000000000291e-05, 4.0153000000001104e-05, 4.0096999999995886e-05, 4.0346999999996136e-05, 4.0596999999996386e-05, 4.0054999999997176e-05, 4.0361000000002645e-05, 4.0125000000001965e-05, 4.0139000000001535e-05, 4.0139000000001535e-05, 4.0026999999998036e-05, 3.974999999999812e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.390" endtime="20201029 12:44:02.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.377" endtime="20201029 12:44:02.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.407" endtime="20201029 12:44:02.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.402" endtime="20201029 12:44:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.399" endtime="20201029 12:44:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.874" endtime="20201029 12:44:02.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:01.873" endtime="20201029 12:44:02.432"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.457" endtime="20201029 12:44:02.477"></status>
</kw>
<msg timestamp="20201029 12:44:02.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.454" endtime="20201029 12:44:02.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:02.481" endtime="20201029 12:44:02.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.488" endtime="20201029 12:44:02.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.446" endtime="20201029 12:44:02.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.439" endtime="20201029 12:44:02.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.513" endtime="20201029 12:44:02.879"></status>
</kw>
<msg timestamp="20201029 12:44:02.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043972847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044013986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.509" endtime="20201029 12:44:02.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043972847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044013986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:02.889" endtime="20201029 12:44:02.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:02.909" endtime="20201029 12:44:02.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.502" endtime="20201029 12:44:02.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.497" endtime="20201029 12:44:02.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:02.927" level="INFO">${RESULT} = [{'diff': 4.1138999999995596e-05}, {'diff': 4.0931000000000994e-05}, {'diff': 4.147200000000073e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 4.1611000000003895e-05}, {'diff': 4.1610999999996956e-0...</msg>
<status status="PASS" starttime="20201029 12:44:02.918" endtime="20201029 12:44:02.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:02.937" level="INFO">${ACCURACY} = {'diff': [4.1138999999995596e-05, 4.0931000000000994e-05, 4.147200000000073e-05, 4.1125000000002965e-05, 4.1611000000003895e-05, 4.1610999999996956e-05, 4.147200000000073e-05, 4.0874999999995776e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:02.929" endtime="20201029 12:44:02.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.949" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:02.947" endtime="20201029 12:44:02.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:02.955" level="INFO">VALUE: [4.1138999999995596e-05, 4.0931000000000994e-05, 4.147200000000073e-05, 4.1125000000002965e-05, 4.1611000000003895e-05, 4.1610999999996956e-05, 4.147200000000073e-05, 4.0874999999995776e-05, 4.1139000000002535e-05, 4.1624999999996526e-05, 4.1110999999996456e-05, 4.11660000000022e-05, 4.14860000000003e-05, 4.123600000000005e-05, 4.1124999999996026e-05, 4.1361000000003645e-05, 4.172200000000098e-05, 4.0903000000001855e-05, 4.1625000000003465e-05, 4.0917000000001424e-05, 4.0917000000001424e-05, 4.079200000000477e-05, 4.1346999999997136e-05, 4.147200000000073e-05, 4.0917000000001424e-05, 4.080600000000434e-05, 4.1610999999996956e-05, 4.1473000000000204e-05, 4.1473000000000204e-05, 4.1653000000002605e-05, 4.119400000000134e-05, 4.101400000000588e-05, 4.1459000000000634e-05, 4.101399999999894e-05, 4.147200000000073e-05, 4.1360999999996706e-05, 4.124999999999962e-05, 4.152799999999901e-05, 4.175000000000012e-05, 4.0805000000004865e-05, 4.1681000000001744e-05, 4.122199999999354e-05, 4.169400000000184e-05, 4.1610999999996956e-05, 4.14860000000003e-05, 4.0944999999993625e-05, 4.155599999999815e-05, 4.082000000000391e-05, 4.1374999999996276e-05, 4.1360999999996706e-05]</msg>
<status status="PASS" starttime="20201029 12:44:02.952" endtime="20201029 12:44:02.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.939" endtime="20201029 12:44:02.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:02.969" endtime="20201029 12:44:02.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.964" endtime="20201029 12:44:02.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.961" endtime="20201029 12:44:02.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.435" endtime="20201029 12:44:02.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.434" endtime="20201029 12:44:02.994"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.019" endtime="20201029 12:44:03.041"></status>
</kw>
<msg timestamp="20201029 12:44:03.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.016" endtime="20201029 12:44:03.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.045" endtime="20201029 12:44:03.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.052" endtime="20201029 12:44:03.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.008" endtime="20201029 12:44:03.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.001" endtime="20201029 12:44:03.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.079" endtime="20201029 12:44:03.441"></status>
</kw>
<msg timestamp="20201029 12:44:03.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045903681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.075" endtime="20201029 12:44:03.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045903681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045945847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.452" endtime="20201029 12:44:03.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.471" endtime="20201029 12:44:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.067" endtime="20201029 12:44:03.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.062" endtime="20201029 12:44:03.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:03.490" level="INFO">${RESULT} = [{'diff': 4.216599999999626e-05}, {'diff': 4.26660000000037e-05}, {'diff': 4.252800000000001e-05}, {'diff': 4.2153000000003105e-05}, {'diff': 4.247200000000173e-05}, {'diff': 4.225000000000062e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:03.481" endtime="20201029 12:44:03.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:03.500" level="INFO">${ACCURACY} = {'diff': [4.216599999999626e-05, 4.26660000000037e-05, 4.252800000000001e-05, 4.2153000000003105e-05, 4.247200000000173e-05, 4.225000000000062e-05, 4.2360999999997706e-05, 4.1860999999997206e-05, 4.18...</msg>
<status status="PASS" starttime="20201029 12:44:03.492" endtime="20201029 12:44:03.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.512" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:03.509" endtime="20201029 12:44:03.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.518" level="INFO">VALUE: [4.216599999999626e-05, 4.26660000000037e-05, 4.252800000000001e-05, 4.2153000000003105e-05, 4.247200000000173e-05, 4.225000000000062e-05, 4.2360999999997706e-05, 4.1860999999997206e-05, 4.1861000000004145e-05, 4.2180999999995306e-05, 4.2360999999997706e-05, 4.23059999999989e-05, 4.222200000000148e-05, 4.182000000000491e-05, 4.21939999999954e-05, 4.225000000000062e-05, 4.1931000000001994e-05, 4.205599999999865e-05, 4.2374999999997276e-05, 4.2068999999998746e-05, 4.1917000000002425e-05, 4.2374999999997276e-05, 4.193000000000252e-05, 4.2388999999996846e-05, 4.270799999999547e-05, 4.2596999999998386e-05, 4.223599999999411e-05, 4.231999999999847e-05, 4.2346999999998136e-05, 4.2360999999997706e-05, 4.2403000000003355e-05, 4.2708999999994945e-05, 4.2666999999996236e-05, 4.181999999999797e-05, 4.1846999999997636e-05, 4.202799999999951e-05, 4.258399999999829e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.18059999999984e-05, 4.1959000000001134e-05, 4.1846999999997636e-05, 4.247200000000173e-05, 4.200000000000037e-05, 4.191599999999601e-05, 4.1818999999998496e-05, 4.1832999999998066e-05, 4.245799999999522e-05, 4.2695000000002314e-05, 4.17780000000062e-05]</msg>
<status status="PASS" starttime="20201029 12:44:03.514" endtime="20201029 12:44:03.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.502" endtime="20201029 12:44:03.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:03.533" endtime="20201029 12:44:03.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.527" endtime="20201029 12:44:03.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.524" endtime="20201029 12:44:03.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.997" endtime="20201029 12:44:03.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:02.995" endtime="20201029 12:44:03.559"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.583" endtime="20201029 12:44:03.604"></status>
</kw>
<msg timestamp="20201029 12:44:03.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.580" endtime="20201029 12:44:03.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:03.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:03.607" endtime="20201029 12:44:03.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.614" endtime="20201029 12:44:03.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.572" endtime="20201029 12:44:03.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.566" endtime="20201029 12:44:03.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:03.639" endtime="20201029 12:44:04.001"></status>
</kw>
<msg timestamp="20201029 12:44:04.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044277389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:03.636" endtime="20201029 12:44:04.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044234069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044277389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.011" endtime="20201029 12:44:04.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.031" endtime="20201029 12:44:04.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.628" endtime="20201029 12:44:04.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.623" endtime="20201029 12:44:04.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.050" level="INFO">${RESULT} = [{'diff': 4.331999999999947e-05}, {'diff': 4.29860000000018e-05}, {'diff': 4.350000000000187e-05}, {'diff': 4.272200000000198e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.327800000000076e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:04.040" endtime="20201029 12:44:04.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.061" level="INFO">${ACCURACY} = {'diff': [4.331999999999947e-05, 4.29860000000018e-05, 4.350000000000187e-05, 4.272200000000198e-05, 4.3638999999998096e-05, 4.327800000000076e-05, 4.3332999999999566e-05, 4.295799999999572e-05, 4.279...</msg>
<status status="PASS" starttime="20201029 12:44:04.052" endtime="20201029 12:44:04.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.073" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.071" endtime="20201029 12:44:04.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.079" level="INFO">VALUE: [4.331999999999947e-05, 4.29860000000018e-05, 4.350000000000187e-05, 4.272200000000198e-05, 4.3638999999998096e-05, 4.327800000000076e-05, 4.3332999999999566e-05, 4.295799999999572e-05, 4.279199999999983e-05, 4.279199999999983e-05, 4.28059999999994e-05, 4.347200000000273e-05, 4.3152999999997166e-05, 4.327800000000076e-05, 4.3138999999997596e-05, 4.322199999999554e-05, 4.281999999999897e-05, 4.3360999999998706e-05, 4.358399999999929e-05, 4.2804999999999926e-05, 4.334799999999861e-05, 4.345800000000316e-05, 4.3402999999997416e-05, 4.325000000000162e-05, 4.3208999999995445e-05, 4.3596999999999386e-05, 4.301400000000094e-05, 4.3138999999997596e-05, 4.3153000000004105e-05, 4.327800000000076e-05, 4.277800000000026e-05, 4.3166999999996736e-05, 4.329200000000033e-05, 4.3431000000003495e-05, 4.301400000000094e-05, 4.3360999999998706e-05, 4.3473000000002204e-05, 4.3638999999998096e-05, 4.305599999999965e-05, 4.349999999999493e-05, 4.2888999999997346e-05, 4.347199999999579e-05, 4.29860000000018e-05, 4.3360999999998706e-05, 4.302700000000104e-05, 4.3583000000006755e-05, 4.2818999999999496e-05, 4.301400000000094e-05, 4.2846999999998636e-05, 4.273599999999461e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.076" endtime="20201029 12:44:04.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.063" endtime="20201029 12:44:04.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.103" endtime="20201029 12:44:04.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.098" endtime="20201029 12:44:04.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.095" endtime="20201029 12:44:04.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.561" endtime="20201029 12:44:04.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:03.560" endtime="20201029 12:44:04.129"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.154" endtime="20201029 12:44:04.174"></status>
</kw>
<msg timestamp="20201029 12:44:04.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.150" endtime="20201029 12:44:04.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.178" endtime="20201029 12:44:04.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.185" endtime="20201029 12:44:04.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.142" endtime="20201029 12:44:04.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.136" endtime="20201029 12:44:04.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.210" endtime="20201029 12:44:04.579"></status>
</kw>
<msg timestamp="20201029 12:44:04.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044232458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0442765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:04.206" endtime="20201029 12:44:04.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044232458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0442765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:04.589" endtime="20201029 12:44:04.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.609" endtime="20201029 12:44:04.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.198" endtime="20201029 12:44:04.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.193" endtime="20201029 12:44:04.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:04.628" level="INFO">${RESULT} = [{'diff': 4.404200000000108e-05}, {'diff': 4.454200000000158e-05}, {'diff': 4.4667000000005175e-05}, {'diff': 4.4695000000004315e-05}, {'diff': 4.424999999999568e-05}, {'diff': 4.4139000000005535e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:04.618" endtime="20201029 12:44:04.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:04.640" level="INFO">${ACCURACY} = {'diff': [4.404200000000108e-05, 4.454200000000158e-05, 4.4667000000005175e-05, 4.4695000000004315e-05, 4.424999999999568e-05, 4.4139000000005535e-05, 4.381999999999997e-05, 4.429200000000133e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:44:04.630" endtime="20201029 12:44:04.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.652" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:44:04.649" endtime="20201029 12:44:04.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.658" level="INFO">VALUE: [4.404200000000108e-05, 4.454200000000158e-05, 4.4667000000005175e-05, 4.4695000000004315e-05, 4.424999999999568e-05, 4.4139000000005535e-05, 4.381999999999997e-05, 4.429200000000133e-05, 4.4680999999997806e-05, 4.4487000000002774e-05, 4.4069000000000746e-05, 4.461199999999943e-05, 4.44860000000033e-05, 4.40269999999951e-05, 4.422200000000348e-05, 4.466599999999876e-05, 4.402800000000151e-05, 4.4472999999996266e-05, 4.458299999999388e-05, 4.4624999999999526e-05, 4.401400000000194e-05, 4.43060000000009e-05, 4.4583000000000816e-05, 4.426400000000219e-05, 4.4096999999999886e-05, 4.4152999999998166e-05, 4.400000000000237e-05, 4.383399999999954e-05, 4.432000000000047e-05, 4.377800000000126e-05, 4.4152999999998166e-05, 4.425000000000262e-05, 4.3819000000000496e-05, 4.466599999999876e-05, 4.447199999999679e-05, 4.415199999999869e-05, 4.391599999999801e-05, 4.4152999999998166e-05, 4.3819000000000496e-05, 4.4347000000000136e-05, 4.447199999999679e-05, 4.381999999999997e-05, 4.423600000000305e-05, 4.379200000000083e-05, 4.4417000000004925e-05, 4.3874999999998776e-05, 4.4388999999998846e-05, 4.455600000000115e-05, 4.4388999999998846e-05, 4.3987000000002274e-05]</msg>
<status status="PASS" starttime="20201029 12:44:04.654" endtime="20201029 12:44:04.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.642" endtime="20201029 12:44:04.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:04.671" endtime="20201029 12:44:04.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.666" endtime="20201029 12:44:04.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.664" endtime="20201029 12:44:04.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.131" endtime="20201029 12:44:04.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.130" endtime="20201029 12:44:04.697"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.721" endtime="20201029 12:44:04.742"></status>
</kw>
<msg timestamp="20201029 12:44:04.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.718" endtime="20201029 12:44:04.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:04.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:04.745" endtime="20201029 12:44:04.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.752" endtime="20201029 12:44:04.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.710" endtime="20201029 12:44:04.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.704" endtime="20201029 12:44:04.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:04.778" endtime="20201029 12:44:05.120"></status>
</kw>
<msg timestamp="20201029 12:44:05.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043655792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:04.775" endtime="20201029 12:44:05.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043655792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.131" endtime="20201029 12:44:05.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.151" endtime="20201029 12:44:05.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.766" endtime="20201029 12:44:05.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.761" endtime="20201029 12:44:05.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.170" level="INFO">${RESULT} = [{'diff': 4.542999999999908e-05}, {'diff': 4.567999999999933e-05}, {'diff': 4.494399999999815e-05}, {'diff': 4.5069000000001747e-05}, {'diff': 4.5333000000001566e-05}, {'diff': 4.536099999999377e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:05.160" endtime="20201029 12:44:05.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.180" level="INFO">${ACCURACY} = {'diff': [4.542999999999908e-05, 4.567999999999933e-05, 4.494399999999815e-05, 4.5069000000001747e-05, 4.5333000000001566e-05, 4.536099999999377e-05, 4.548599999999736e-05, 4.5666999999999236e-05, 4.5...</msg>
<status status="PASS" starttime="20201029 12:44:05.172" endtime="20201029 12:44:05.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.191" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.189" endtime="20201029 12:44:05.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.197" level="INFO">VALUE: [4.542999999999908e-05, 4.567999999999933e-05, 4.494399999999815e-05, 4.5069000000001747e-05, 4.5333000000001566e-05, 4.536099999999377e-05, 4.548599999999736e-05, 4.5666999999999236e-05, 4.5708999999997946e-05, 4.529200000000233e-05, 4.4861000000000206e-05, 4.5138999999999596e-05, 4.483400000000054e-05, 4.5680999999998806e-05, 4.5097000000000886e-05, 4.5111000000000456e-05, 4.538800000000037e-05, 4.536200000000018e-05, 4.498599999999686e-05, 4.479100000000236e-05, 4.5583000000001817e-05, 4.5375000000000276e-05, 4.5361000000000706e-05, 4.570799999999847e-05, 4.5097000000000886e-05, 4.483400000000054e-05, 4.4889000000006285e-05, 4.5402999999999416e-05, 4.551400000000344e-05, 4.4902999999998916e-05, 4.502800000000251e-05, 4.48060000000014e-05, 4.551400000000344e-05, 4.536200000000018e-05, 4.4874999999999776e-05, 4.5138999999999596e-05, 4.4736999999996085e-05, 4.5167000000005675e-05, 4.5125000000000026e-05, 4.5639000000000096e-05, 4.479199999999489e-05, 4.523599999999711e-05, 4.558299999999488e-05, 4.555500000000268e-05, 4.480499999999499e-05, 4.555500000000268e-05, 4.524999999999668e-05, 4.548599999999736e-05, 4.5361000000000706e-05, 4.500000000000337e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.194" endtime="20201029 12:44:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.182" endtime="20201029 12:44:05.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.211" endtime="20201029 12:44:05.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.206" endtime="20201029 12:44:05.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.203" endtime="20201029 12:44:05.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.699" endtime="20201029 12:44:05.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:04.698" endtime="20201029 12:44:05.237"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.261" endtime="20201029 12:44:05.284"></status>
</kw>
<msg timestamp="20201029 12:44:05.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.258" endtime="20201029 12:44:05.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.287" endtime="20201029 12:44:05.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.294" endtime="20201029 12:44:05.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.250" endtime="20201029 12:44:05.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.244" endtime="20201029 12:44:05.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.319" endtime="20201029 12:44:05.687"></status>
</kw>
<msg timestamp="20201029 12:44:05.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045677944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.316" endtime="20201029 12:44:05.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045677944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045724069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.697" endtime="20201029 12:44:05.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.717" endtime="20201029 12:44:05.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.308" endtime="20201029 12:44:05.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.303" endtime="20201029 12:44:05.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:05.735" level="INFO">${RESULT} = [{'diff': 4.6125000000001026e-05}, {'diff': 4.58190000000025e-05}, {'diff': 4.645799999999922e-05}, {'diff': 4.63060000000029e-05}, {'diff': 4.650000000000487e-05}, {'diff': 4.6375000000001276e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:05.726" endtime="20201029 12:44:05.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:05.746" level="INFO">${ACCURACY} = {'diff': [4.6125000000001026e-05, 4.58190000000025e-05, 4.645799999999922e-05, 4.63060000000029e-05, 4.650000000000487e-05, 4.6375000000001276e-05, 4.579200000000283e-05, 4.605600000000265e-05, 4.6125...</msg>
<status status="PASS" starttime="20201029 12:44:05.738" endtime="20201029 12:44:05.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.757" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:44:05.755" endtime="20201029 12:44:05.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.763" level="INFO">VALUE: [4.6125000000001026e-05, 4.58190000000025e-05, 4.645799999999922e-05, 4.63060000000029e-05, 4.650000000000487e-05, 4.6375000000001276e-05, 4.579200000000283e-05, 4.605600000000265e-05, 4.6125000000001026e-05, 4.580599999999546e-05, 4.575000000000412e-05, 4.625000000000462e-05, 4.574999999999718e-05, 4.6695000000006315e-05, 4.6139000000000596e-05, 4.6653000000000666e-05, 4.6625000000001526e-05, 4.63060000000029e-05, 4.6694999999999376e-05, 4.6430999999999556e-05, 4.6430999999999556e-05, 4.626399999999725e-05, 4.595799999999872e-05, 4.6083000000002317e-05, 4.647200000000573e-05, 4.6153000000000166e-05, 4.613899999999366e-05, 4.626399999999725e-05, 4.5903000000006855e-05, 4.5916999999999486e-05, 4.604200000000308e-05, 4.6472999999998266e-05, 4.602799999999657e-05, 4.626399999999725e-05, 4.608399999999485e-05, 4.5861000000001206e-05, 4.58060000000024e-05, 4.5847000000001636e-05, 4.592999999999958e-05, 4.605499999999624e-05, 4.59860000000048e-05, 4.647199999999879e-05, 4.6125000000001026e-05, 4.6416999999999986e-05, 4.58190000000025e-05, 4.6389000000000846e-05, 4.647199999999879e-05, 4.631899999999606e-05, 4.608400000000179e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201029 12:44:05.760" endtime="20201029 12:44:05.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.747" endtime="20201029 12:44:05.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:05.778" endtime="20201029 12:44:05.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.772" endtime="20201029 12:44:05.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.769" endtime="20201029 12:44:05.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.239" endtime="20201029 12:44:05.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.238" endtime="20201029 12:44:05.804"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.828" endtime="20201029 12:44:05.849"></status>
</kw>
<msg timestamp="20201029 12:44:05.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.825" endtime="20201029 12:44:05.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:05.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:05.853" endtime="20201029 12:44:05.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.860" endtime="20201029 12:44:05.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.817" endtime="20201029 12:44:05.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.811" endtime="20201029 12:44:05.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:05.885" endtime="20201029 12:44:06.248"></status>
</kw>
<msg timestamp="20201029 12:44:06.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043601736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:05.882" endtime="20201029 12:44:06.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043554819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043601736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.258" endtime="20201029 12:44:06.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.278" endtime="20201029 12:44:06.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.874" endtime="20201029 12:44:06.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.869" endtime="20201029 12:44:06.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.297" level="INFO">${RESULT} = [{'diff': 4.6917000000000486e-05}, {'diff': 4.6917000000000486e-05}, {'diff': 4.679200000000383e-05}, {'diff': 4.749999999999893e-05}, {'diff': 4.7167000000000736e-05}, {'diff': 4.6944999999999626e-05...</msg>
<status status="PASS" starttime="20201029 12:44:06.287" endtime="20201029 12:44:06.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.308" level="INFO">${ACCURACY} = {'diff': [4.6917000000000486e-05, 4.6917000000000486e-05, 4.679200000000383e-05, 4.749999999999893e-05, 4.7167000000000736e-05, 4.6944999999999626e-05, 4.682000000000297e-05, 4.7194999999999876e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:44:06.299" endtime="20201029 12:44:06.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.320" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.317" endtime="20201029 12:44:06.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.326" level="INFO">VALUE: [4.6917000000000486e-05, 4.6917000000000486e-05, 4.679200000000383e-05, 4.749999999999893e-05, 4.7167000000000736e-05, 4.6944999999999626e-05, 4.682000000000297e-05, 4.7194999999999876e-05, 4.6917000000000486e-05, 4.737499999999534e-05, 4.7125000000002026e-05, 4.7125000000002026e-05, 4.7347000000003137e-05, 4.75139999999985e-05, 4.7389000000001846e-05, 4.7181000000000306e-05, 4.722199999999954e-05, 4.736099999999577e-05, 4.758299999999688e-05, 4.752800000000501e-05, 4.701400000000494e-05, 4.6931000000000056e-05, 4.6931000000000056e-05, 4.71669999999938e-05, 4.718000000000083e-05, 4.705599999999671e-05, 4.683400000000254e-05, 4.730500000000443e-05, 4.76940000000009e-05, 4.68060000000034e-05, 4.749999999999893e-05, 4.7361000000002706e-05, 4.680499999999699e-05, 4.673599999999861e-05, 4.677700000000479e-05, 4.711099999999552e-05, 4.736099999999577e-05, 4.706900000000375e-05, 4.745800000000022e-05, 4.777699999999885e-05, 4.6875000000001776e-05, 4.7194999999999876e-05, 4.7667000000001236e-05, 4.758299999999688e-05, 4.724999999999868e-05, 4.680599999999646e-05, 4.686199999999474e-05, 4.723599999999911e-05, 4.7443999999993713e-05, 4.759799999999592e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.322" endtime="20201029 12:44:06.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.310" endtime="20201029 12:44:06.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.339" endtime="20201029 12:44:06.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.334" endtime="20201029 12:44:06.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.332" endtime="20201029 12:44:06.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.806" endtime="20201029 12:44:06.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:05.805" endtime="20201029 12:44:06.365"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.390" endtime="20201029 12:44:06.410"></status>
</kw>
<msg timestamp="20201029 12:44:06.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.386" endtime="20201029 12:44:06.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.414" endtime="20201029 12:44:06.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.421" endtime="20201029 12:44:06.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.378" endtime="20201029 12:44:06.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.372" endtime="20201029 12:44:06.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.446" endtime="20201029 12:44:06.810"></status>
</kw>
<msg timestamp="20201029 12:44:06.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044055722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.442" endtime="20201029 12:44:06.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044055722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044103542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:06.821" endtime="20201029 12:44:06.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.840" endtime="20201029 12:44:06.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.435" endtime="20201029 12:44:06.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.430" endtime="20201029 12:44:06.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:06.859" level="INFO">${RESULT} = [{'diff': 4.782000000000397e-05}, {'diff': 4.813899999999566e-05}, {'diff': 4.804199999999814e-05}, {'diff': 4.827699999999935e-05}, {'diff': 4.872200000000104e-05}, {'diff': 4.776399999999875e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:06.849" endtime="20201029 12:44:06.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:06.871" level="INFO">${ACCURACY} = {'diff': [4.782000000000397e-05, 4.813899999999566e-05, 4.804199999999814e-05, 4.827699999999935e-05, 4.872200000000104e-05, 4.776399999999875e-05, 4.858300000000482e-05, 4.7861000000003207e-05, 4.802...</msg>
<status status="PASS" starttime="20201029 12:44:06.861" endtime="20201029 12:44:06.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.882" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:44:06.880" endtime="20201029 12:44:06.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.888" level="INFO">VALUE: [4.782000000000397e-05, 4.813899999999566e-05, 4.804199999999814e-05, 4.827699999999935e-05, 4.872200000000104e-05, 4.776399999999875e-05, 4.858300000000482e-05, 4.7861000000003207e-05, 4.80269999999991e-05, 4.776399999999875e-05, 4.836099999999677e-05, 4.8361000000003707e-05, 4.870800000000147e-05, 4.86940000000019e-05, 4.8375000000003276e-05, 4.8139000000002596e-05, 4.830599999999796e-05, 4.85139999999995e-05, 4.8375000000003276e-05, 4.849999999999993e-05, 4.7945000000000626e-05, 4.813899999999566e-05, 4.829099999999892e-05, 4.7915999999995074e-05, 4.811099999999652e-05, 4.858299999999788e-05, 4.791600000000201e-05, 4.8013999999999e-05, 4.791600000000201e-05, 4.795800000000072e-05, 4.849999999999993e-05, 4.8445000000001126e-05, 4.845800000000122e-05, 4.861099999999702e-05, 4.815299999999523e-05, 4.815299999999523e-05, 4.7917000000001486e-05, 4.861099999999702e-05, 4.7959000000000196e-05, 4.847199999999385e-05, 4.81940000000014e-05, 4.8473000000000266e-05, 4.86940000000019e-05, 4.8139000000002596e-05, 4.827699999999935e-05, 4.848600000000036e-05, 4.843000000000208e-05, 4.777800000000526e-05, 4.861099999999702e-05, 4.827799999999882e-05]</msg>
<status status="PASS" starttime="20201029 12:44:06.885" endtime="20201029 12:44:06.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.873" endtime="20201029 12:44:06.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:06.902" endtime="20201029 12:44:06.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.897" endtime="20201029 12:44:06.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.894" endtime="20201029 12:44:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.367" endtime="20201029 12:44:06.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.366" endtime="20201029 12:44:06.928"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.952" endtime="20201029 12:44:06.973"></status>
</kw>
<msg timestamp="20201029 12:44:06.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.949" endtime="20201029 12:44:06.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:06.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:06.976" endtime="20201029 12:44:06.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:06.983" endtime="20201029 12:44:06.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.941" endtime="20201029 12:44:06.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.935" endtime="20201029 12:44:06.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.009" endtime="20201029 12:44:07.374"></status>
</kw>
<msg timestamp="20201029 12:44:07.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043744625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.005" endtime="20201029 12:44:07.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043695764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043744625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:07.384" endtime="20201029 12:44:07.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.404" endtime="20201029 12:44:07.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.997" endtime="20201029 12:44:07.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.992" endtime="20201029 12:44:07.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.423" level="INFO">${RESULT} = [{'diff': 4.886100000000421e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.947200000000179e-05}, {'diff': 4.893000000000258e-05}, {'diff': 4.970800000000247e-05}, {'diff': 4.956899999999931e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:07.413" endtime="20201029 12:44:07.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.433" level="INFO">${ACCURACY} = {'diff': [4.886100000000421e-05, 4.900000000000043e-05, 4.947200000000179e-05, 4.893000000000258e-05, 4.970800000000247e-05, 4.956899999999931e-05, 4.938899999999691e-05, 4.924999999999374e-05, 4.9014...</msg>
<status status="PASS" starttime="20201029 12:44:07.425" endtime="20201029 12:44:07.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.445" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:44:07.442" endtime="20201029 12:44:07.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.450" level="INFO">VALUE: [4.886100000000421e-05, 4.900000000000043e-05, 4.947200000000179e-05, 4.893000000000258e-05, 4.970800000000247e-05, 4.956899999999931e-05, 4.938899999999691e-05, 4.924999999999374e-05, 4.9014e-05, 4.905599999999871e-05, 4.922200000000154e-05, 4.926400000000025e-05, 4.9695000000002376e-05, 4.947299999999433e-05, 4.9401999999997004e-05, 4.940299999999648e-05, 4.891699999999555e-05, 4.948600000000136e-05, 4.9137999999997184e-05, 4.884700000000464e-05, 4.925000000000068e-05, 4.911100000000446e-05, 4.9445000000002126e-05, 4.88060000000054e-05, 4.937499999999734e-05, 4.920800000000197e-05, 4.9723000000001516e-05, 4.938899999999691e-05, 4.88469999999977e-05, 4.88469999999977e-05, 4.911100000000446e-05, 4.881999999999803e-05, 4.88339999999976e-05, 4.913899999999666e-05, 4.931899999999906e-05, 4.905499999999924e-05, 4.926400000000025e-05, 4.9403000000003416e-05, 4.879099999999942e-05, 4.924999999999374e-05, 4.948600000000136e-05, 4.913899999999666e-05, 4.970800000000247e-05, 4.9693999999995964e-05, 4.927799999999982e-05, 4.884800000000411e-05, 4.9459000000001696e-05, 4.887499999999684e-05, 4.906999999999828e-05, 4.929199999999939e-05]</msg>
<status status="PASS" starttime="20201029 12:44:07.447" endtime="20201029 12:44:07.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.435" endtime="20201029 12:44:07.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:07.464" endtime="20201029 12:44:07.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.459" endtime="20201029 12:44:07.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.457" endtime="20201029 12:44:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.930" endtime="20201029 12:44:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:06.929" endtime="20201029 12:44:07.490"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.514" endtime="20201029 12:44:07.537"></status>
</kw>
<msg timestamp="20201029 12:44:07.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.511" endtime="20201029 12:44:07.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:07.541" endtime="20201029 12:44:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.548" endtime="20201029 12:44:07.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.503" endtime="20201029 12:44:07.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.497" endtime="20201029 12:44:07.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.573" endtime="20201029 12:44:07.935"></status>
</kw>
<msg timestamp="20201029 12:44:07.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045401514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045452, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:07.569" endtime="20201029 12:44:07.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045401514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045452, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:07.945" endtime="20201029 12:44:07.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:07.965" endtime="20201029 12:44:07.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.561" endtime="20201029 12:44:07.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.556" endtime="20201029 12:44:07.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:07.984" level="INFO">${RESULT} = [{'diff': 5.048600000000236e-05}, {'diff': 5.0679999999997394e-05}, {'diff': 4.995899999999526e-05}, {'diff': 4.998600000000186e-05}, {'diff': 4.981899999999956e-05}, {'diff': 5.0153000000004166e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:07.974" endtime="20201029 12:44:07.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:07.994" level="INFO">${ACCURACY} = {'diff': [5.048600000000236e-05, 5.0679999999997394e-05, 4.995899999999526e-05, 4.998600000000186e-05, 4.981899999999956e-05, 5.0153000000004166e-05, 5.0443999999996714e-05, 5.054100000000117e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 12:44:07.986" endtime="20201029 12:44:07.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.006" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.004" endtime="20201029 12:44:08.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.014" level="INFO">VALUE: [5.048600000000236e-05, 5.0679999999997394e-05, 4.995899999999526e-05, 4.998600000000186e-05, 4.981899999999956e-05, 5.0153000000004166e-05, 5.0443999999996714e-05, 5.054100000000117e-05, 5.006999999999928e-05, 4.994400000000315e-05, 5.065299999999773e-05, 4.980599999999946e-05, 4.979199999999989e-05, 5.050000000000193e-05, 4.980499999999999e-05, 5.045800000000322e-05, 4.994400000000315e-05, 5.06940000000039e-05, 5.037499999999834e-05, 5.0167000000003736e-05, 5.0485999999995423e-05, 5.038899999999791e-05, 5.023600000000211e-05, 5.05140000000015e-05, 5.048600000000236e-05, 5.029200000000039e-05, 5.027800000000082e-05, 4.991699999999655e-05, 5.036099999999877e-05, 5.050000000000193e-05, 4.9901999999997504e-05, 5.0165999999997324e-05, 5.05140000000015e-05, 5.002699999999416e-05, 4.979099999999348e-05, 5.002800000000057e-05, 4.9943999999996214e-05, 5.0415999999997574e-05, 5.012500000000503e-05, 4.997200000000229e-05, 5.056900000000031e-05, 5.05140000000015e-05, 5.058399999999935e-05, 5.038899999999791e-05, 5.037499999999834e-05, 4.980599999999946e-05, 5.012499999999809e-05, 5.026400000000125e-05, 5.013899999999766e-05, 4.994400000000315e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.010" endtime="20201029 12:44:08.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.996" endtime="20201029 12:44:08.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.029" endtime="20201029 12:44:08.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.023" endtime="20201029 12:44:08.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.020" endtime="20201029 12:44:08.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.492" endtime="20201029 12:44:08.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.491" endtime="20201029 12:44:08.055"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.080" endtime="20201029 12:44:08.101"></status>
</kw>
<msg timestamp="20201029 12:44:08.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.076" endtime="20201029 12:44:08.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.104" endtime="20201029 12:44:08.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.111" endtime="20201029 12:44:08.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.068" endtime="20201029 12:44:08.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.062" endtime="20201029 12:44:08.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.136" endtime="20201029 12:44:08.499"></status>
</kw>
<msg timestamp="20201029 12:44:08.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043759972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.133" endtime="20201029 12:44:08.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043759972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043811097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.509" endtime="20201029 12:44:08.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.528" endtime="20201029 12:44:08.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.125" endtime="20201029 12:44:08.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.120" endtime="20201029 12:44:08.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:08.547" level="INFO">${RESULT} = [{'diff': 5.112499999999909e-05}, {'diff': 5.1707999999997534e-05}, {'diff': 5.140299999999848e-05}, {'diff': 5.1721999999997104e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.093099999999712e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:08.537" endtime="20201029 12:44:08.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:08.558" level="INFO">${ACCURACY} = {'diff': [5.112499999999909e-05, 5.1707999999997534e-05, 5.140299999999848e-05, 5.1721999999997104e-05, 5.163899999999916e-05, 5.093099999999712e-05, 5.094499999999669e-05, 5.091699999999755e-05, 5.12...</msg>
<status status="PASS" starttime="20201029 12:44:08.549" endtime="20201029 12:44:08.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.571" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:44:08.568" endtime="20201029 12:44:08.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.577" level="INFO">VALUE: [5.112499999999909e-05, 5.1707999999997534e-05, 5.140299999999848e-05, 5.1721999999997104e-05, 5.163899999999916e-05, 5.093099999999712e-05, 5.094499999999669e-05, 5.091699999999755e-05, 5.120899999999651e-05, 5.127800000000182e-05, 5.100000000000243e-05, 5.1387999999999434e-05, 5.1153000000005167e-05, 5.169499999999744e-05, 5.1137999999999184e-05, 5.123600000000311e-05, 5.162499999999959e-05, 5.098600000000286e-05, 5.091699999999755e-05, 5.077800000000132e-05, 5.141699999999805e-05, 5.136099999999977e-05, 5.170800000000447e-05, 5.1695000000004376e-05, 5.107000000000028e-05, 5.111099999999952e-05, 5.141699999999805e-05, 5.107000000000028e-05, 5.0945000000003626e-05, 5.159700000000045e-05, 5.134799999999967e-05, 5.136199999999924e-05, 5.1151999999998754e-05, 5.152800000000207e-05, 5.163899999999916e-05, 5.112499999999909e-05, 5.140299999999848e-05, 5.083300000000013e-05, 5.083300000000013e-05, 5.0693999999996964e-05, 5.108399999999985e-05, 5.133300000000063e-05, 5.126400000000225e-05, 5.150000000000293e-05, 5.144499999999719e-05, 5.105600000000071e-05, 5.118000000000483e-05, 5.072299999999558e-05, 5.161100000000002e-05, 5.1223000000003016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:08.573" endtime="20201029 12:44:08.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.560" endtime="20201029 12:44:08.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:08.590" endtime="20201029 12:44:08.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.586" endtime="20201029 12:44:08.614"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.583" endtime="20201029 12:44:08.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.057" endtime="20201029 12:44:08.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.056" endtime="20201029 12:44:08.616"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.641" endtime="20201029 12:44:08.662"></status>
</kw>
<msg timestamp="20201029 12:44:08.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.637" endtime="20201029 12:44:08.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:08.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:08.665" endtime="20201029 12:44:08.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.672" endtime="20201029 12:44:08.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.629" endtime="20201029 12:44:08.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.623" endtime="20201029 12:44:08.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:08.697" endtime="20201029 12:44:08.992"></status>
</kw>
<msg timestamp="20201029 12:44:08.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044037333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.694" endtime="20201029 12:44:08.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044037333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:08.997" endtime="20201029 12:44:09.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.006" endtime="20201029 12:44:09.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.686" endtime="20201029 12:44:09.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.681" endtime="20201029 12:44:09.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.014" level="INFO">${RESULT} = [{'diff': 5.2457999999998284e-05}, {'diff': 5.227799999999588e-05}, {'diff': 5.176399999999581e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.21669999999988e-05}, {'diff': 5.208300000000138e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:09.010" endtime="20201029 12:44:09.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.020" level="INFO">${ACCURACY} = {'diff': [5.2457999999998284e-05, 5.227799999999588e-05, 5.176399999999581e-05, 5.187499999999984e-05, 5.21669999999988e-05, 5.208300000000138e-05, 5.2207999999998034e-05, 5.195899999999726e-05, 5.262...</msg>
<status status="PASS" starttime="20201029 12:44:09.015" endtime="20201029 12:44:09.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.025" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.024" endtime="20201029 12:44:09.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.028" level="INFO">VALUE: [5.2457999999998284e-05, 5.227799999999588e-05, 5.176399999999581e-05, 5.187499999999984e-05, 5.21669999999988e-05, 5.208300000000138e-05, 5.2207999999998034e-05, 5.195899999999726e-05, 5.262500000000059e-05, 5.236100000000077e-05, 5.182000000000103e-05, 5.2499999999996994e-05, 5.23749999999934e-05, 5.227699999999641e-05, 5.187499999999984e-05, 5.226400000000325e-05, 5.262500000000059e-05, 5.1901999999999504e-05, 5.2735999999997674e-05, 5.265299999999973e-05, 5.180500000000199e-05, 5.2499999999996994e-05, 5.232000000000153e-05, 5.2167000000005737e-05, 5.236100000000077e-05, 5.18470000000007e-05, 5.190299999999898e-05, 5.202799999999563e-05, 5.190299999999898e-05, 5.187499999999984e-05, 5.258400000000135e-05, 5.1929999999998644e-05, 5.2179999999998894e-05, 5.237500000000034e-05, 5.2443999999998714e-05, 5.250000000000393e-05, 5.26940000000059e-05, 5.209700000000095e-05, 5.180500000000199e-05, 5.182000000000103e-05, 5.180600000000146e-05, 5.21669999999988e-05, 5.223600000000411e-05, 5.272299999999758e-05, 5.244499999999819e-05, 5.2221999999997604e-05, 5.219499999999794e-05, 5.259800000000092e-05, 5.179200000000189e-05, 5.205600000000171e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.027" endtime="20201029 12:44:09.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.021" endtime="20201029 12:44:09.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.034" endtime="20201029 12:44:09.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.032" endtime="20201029 12:44:09.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.031" endtime="20201029 12:44:09.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.618" endtime="20201029 12:44:09.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:08.617" endtime="20201029 12:44:09.055"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.067" endtime="20201029 12:44:09.087"></status>
</kw>
<msg timestamp="20201029 12:44:09.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.065" endtime="20201029 12:44:09.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.090" endtime="20201029 12:44:09.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.097" endtime="20201029 12:44:09.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.062" endtime="20201029 12:44:09.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.059" endtime="20201029 12:44:09.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.122" endtime="20201029 12:44:09.496"></status>
</kw>
<msg timestamp="20201029 12:44:09.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.119" endtime="20201029 12:44:09.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025469181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025522653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:09.506" endtime="20201029 12:44:09.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.526" endtime="20201029 12:44:09.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.111" endtime="20201029 12:44:09.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.106" endtime="20201029 12:44:09.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:09.544" level="INFO">${RESULT} = [{'diff': 5.3471999999998854e-05}, {'diff': 5.308399999999838e-05}, {'diff': 5.305600000000271e-05}, {'diff': 5.308299999999891e-05}, {'diff': 5.270900000000148e-05}, {'diff': 5.312500000000109e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:09.535" endtime="20201029 12:44:09.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:09.554" level="INFO">${ACCURACY} = {'diff': [5.3471999999998854e-05, 5.308399999999838e-05, 5.305600000000271e-05, 5.308299999999891e-05, 5.270900000000148e-05, 5.312500000000109e-05, 5.3680000000000394e-05, 5.280499999999952e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 12:44:09.546" endtime="20201029 12:44:09.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.566" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:44:09.564" endtime="20201029 12:44:09.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.572" level="INFO">VALUE: [5.3471999999998854e-05, 5.308399999999838e-05, 5.305600000000271e-05, 5.308299999999891e-05, 5.270900000000148e-05, 5.312500000000109e-05, 5.3680000000000394e-05, 5.280499999999952e-05, 5.3707999999999534e-05, 5.306999999999881e-05, 5.3708000000003e-05, 5.293099999999912e-05, 5.318099999999937e-05, 5.30280000000001e-05, 5.277799999999985e-05, 5.333299999999916e-05, 5.333399999999863e-05, 5.362500000000159e-05, 5.287500000000084e-05, 5.337500000000134e-05, 5.294499999999869e-05, 5.368099999999987e-05, 5.359699999999898e-05, 5.281900000000256e-05, 5.329199999999992e-05, 5.331900000000306e-05, 5.308300000000238e-05, 5.326400000000078e-05, 5.359700000000245e-05, 5.33470000000022e-05, 5.281999999999856e-05, 5.3693999999999964e-05, 5.304199999999967e-05, 5.336100000000177e-05, 5.370899999999901e-05, 5.327800000000035e-05, 5.356999999999931e-05, 5.30280000000001e-05, 5.359799999999845e-05, 5.2929999999999644e-05, 5.3179999999999894e-05, 5.358299999999941e-05, 5.3471999999998854e-05, 5.305499999999977e-05, 5.359699999999898e-05, 5.286100000000127e-05, 5.368099999999987e-05, 5.3193999999999464e-05, 5.356899999999984e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:44:09.568" endtime="20201029 12:44:09.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.556" endtime="20201029 12:44:09.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:09.587" endtime="20201029 12:44:09.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.581" endtime="20201029 12:44:09.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.578" endtime="20201029 12:44:09.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.057" endtime="20201029 12:44:09.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.056" endtime="20201029 12:44:09.613"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.638" endtime="20201029 12:44:09.660"></status>
</kw>
<msg timestamp="20201029 12:44:09.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.634" endtime="20201029 12:44:09.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:09.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:09.664" endtime="20201029 12:44:09.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.671" endtime="20201029 12:44:09.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.626" endtime="20201029 12:44:09.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.620" endtime="20201029 12:44:09.678"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:09.696" endtime="20201029 12:44:10.061"></status>
</kw>
<msg timestamp="20201029 12:44:10.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045966056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04602075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:09.692" endtime="20201029 12:44:10.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045966056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04602075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:10.071" endtime="20201029 12:44:10.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.108" endtime="20201029 12:44:10.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.685" endtime="20201029 12:44:10.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.679" endtime="20201029 12:44:10.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.136" level="INFO">${RESULT} = [{'diff': 5.4694000000000964e-05}, {'diff': 5.438900000000191e-05}, {'diff': 5.444500000000019e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.412499999999515e-05}, {'diff': 5.429099999999798e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:10.127" endtime="20201029 12:44:10.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.146" level="INFO">${ACCURACY} = {'diff': [5.4694000000000964e-05, 5.438900000000191e-05, 5.444500000000019e-05, 5.440300000000148e-05, 5.412499999999515e-05, 5.429099999999798e-05, 5.468100000000087e-05, 5.4485999999999424e-05, 5.43...</msg>
<status status="PASS" starttime="20201029 12:44:10.138" endtime="20201029 12:44:10.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.158" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.156" endtime="20201029 12:44:10.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.164" level="INFO">VALUE: [5.4694000000000964e-05, 5.438900000000191e-05, 5.444500000000019e-05, 5.440300000000148e-05, 5.412499999999515e-05, 5.429099999999798e-05, 5.468100000000087e-05, 5.4485999999999424e-05, 5.438900000000191e-05, 5.386099999999533e-05, 5.4249999999998744e-05, 5.413900000000166e-05, 5.4013999999998064e-05, 5.429200000000439e-05, 5.4263999999998314e-05, 5.458299999999694e-05, 5.440300000000148e-05, 5.4027999999997633e-05, 5.407000000000328e-05, 5.391700000000055e-05, 5.384800000000217e-05, 5.468100000000087e-05, 5.393100000000012e-05, 5.391700000000055e-05, 5.4402000000002004e-05, 5.3999999999998494e-05, 5.3916000000001074e-05, 5.383300000000313e-05, 5.416699999999386e-05, 5.461100000000302e-05, 5.3693999999999964e-05, 5.438900000000191e-05, 5.4014000000005e-05, 5.4249999999998744e-05, 5.390300000000098e-05, 5.4277999999997883e-05, 5.382000000000303e-05, 5.3999999999998494e-05, 5.425000000000568e-05, 5.405599999999677e-05, 5.451299999999909e-05, 5.4471999999999854e-05, 5.438900000000191e-05, 5.4722000000000104e-05, 5.462500000000259e-05, 5.4249999999998744e-05, 5.461100000000302e-05, 5.441700000000105e-05, 5.458300000000388e-05, 5.3721999999999104e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.161" endtime="20201029 12:44:10.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.148" endtime="20201029 12:44:10.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.184" endtime="20201029 12:44:10.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.173" endtime="20201029 12:44:10.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.170" endtime="20201029 12:44:10.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.615" endtime="20201029 12:44:10.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:09.614" endtime="20201029 12:44:10.209"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.234" endtime="20201029 12:44:10.255"></status>
</kw>
<msg timestamp="20201029 12:44:10.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.230" endtime="20201029 12:44:10.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.258" endtime="20201029 12:44:10.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.265" endtime="20201029 12:44:10.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.222" endtime="20201029 12:44:10.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.216" endtime="20201029 12:44:10.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.291" endtime="20201029 12:44:10.655"></status>
</kw>
<msg timestamp="20201029 12:44:10.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.287" endtime="20201029 12:44:10.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043981306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.665" endtime="20201029 12:44:10.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.685" endtime="20201029 12:44:10.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.279" endtime="20201029 12:44:10.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.274" endtime="20201029 12:44:10.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:10.703" level="INFO">${RESULT} = [{'diff': 5.533399999999716e-05}, {'diff': 5.5499999999999994e-05}, {'diff': 5.486100000000327e-05}, {'diff': 5.4944000000001214e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.4722000000000104e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:10.694" endtime="20201029 12:44:10.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:10.715" level="INFO">${ACCURACY} = {'diff': [5.533399999999716e-05, 5.5499999999999994e-05, 5.486100000000327e-05, 5.4944000000001214e-05, 5.55549999999988e-05, 5.4722000000000104e-05, 5.5263999999999314e-05, 5.4749999999999244e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:44:10.705" endtime="20201029 12:44:10.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.727" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:44:10.724" endtime="20201029 12:44:10.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.732" level="INFO">VALUE: [5.533399999999716e-05, 5.5499999999999994e-05, 5.486100000000327e-05, 5.4944000000001214e-05, 5.55549999999988e-05, 5.4722000000000104e-05, 5.5263999999999314e-05, 5.4749999999999244e-05, 5.540300000000248e-05, 5.515300000000223e-05, 5.5263999999999314e-05, 5.518100000000137e-05, 5.512499999999615e-05, 5.4722000000000104e-05, 5.506999999999734e-05, 5.5555999999998273e-05, 5.51670000000018e-05, 5.5722000000001104e-05, 5.48749999999959e-05, 5.4972000000000354e-05, 5.48749999999959e-05, 5.4958000000000784e-05, 5.5458000000001284e-05, 5.537500000000334e-05, 5.558300000000488e-05, 5.534699999999726e-05, 5.562499999999665e-05, 5.568100000000187e-05, 5.5722000000001104e-05, 5.5541999999998704e-05, 5.4735999999999674e-05, 5.5708000000001534e-05, 5.4999999999999494e-05, 5.515300000000223e-05, 5.481899999999762e-05, 5.558300000000488e-05, 5.502699999999916e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.5013999999999064e-05, 5.5513999999999564e-05, 5.55549999999988e-05, 5.4722000000000104e-05, 5.5444000000001714e-05, 5.51670000000018e-05, 5.5291999999998453e-05, 5.515300000000223e-05, 5.495900000000026e-05, 5.5222000000000604e-05, 5.559799999999698e-05]</msg>
<status status="PASS" starttime="20201029 12:44:10.729" endtime="20201029 12:44:10.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.717" endtime="20201029 12:44:10.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:10.746" endtime="20201029 12:44:10.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.741" endtime="20201029 12:44:10.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.739" endtime="20201029 12:44:10.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.212" endtime="20201029 12:44:10.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.210" endtime="20201029 12:44:10.772"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.796" endtime="20201029 12:44:10.817"></status>
</kw>
<msg timestamp="20201029 12:44:10.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.793" endtime="20201029 12:44:10.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:10.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:10.821" endtime="20201029 12:44:10.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.828" endtime="20201029 12:44:10.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.785" endtime="20201029 12:44:10.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.779" endtime="20201029 12:44:10.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:10.853" endtime="20201029 12:44:11.216"></status>
</kw>
<msg timestamp="20201029 12:44:11.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043710806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043767181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:10.849" endtime="20201029 12:44:11.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043710806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043767181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.226" endtime="20201029 12:44:11.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.246" endtime="20201029 12:44:11.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.842" endtime="20201029 12:44:11.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.837" endtime="20201029 12:44:11.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.265" level="INFO">${RESULT} = [{'diff': 5.637500000000434e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.662500000000459e-05}, {'diff': 5.636200000000424e-05}, {'diff': 5.581899999999862e-05}, {'diff': 5.634699999999826e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:11.255" endtime="20201029 12:44:11.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.277" level="INFO">${ACCURACY} = {'diff': [5.637500000000434e-05, 5.6264000000000314e-05, 5.662500000000459e-05, 5.636200000000424e-05, 5.581899999999862e-05, 5.634699999999826e-05, 5.638900000000391e-05, 5.6708000000002534e-05, 5.61...</msg>
<status status="PASS" starttime="20201029 12:44:11.267" endtime="20201029 12:44:11.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.288" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.286" endtime="20201029 12:44:11.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.294" level="INFO">VALUE: [5.637500000000434e-05, 5.6264000000000314e-05, 5.662500000000459e-05, 5.636200000000424e-05, 5.581899999999862e-05, 5.634699999999826e-05, 5.638900000000391e-05, 5.6708000000002534e-05, 5.615300000000323e-05, 5.6041999999999204e-05, 5.6000000000000494e-05, 5.593100000000212e-05, 5.6249999999993805e-05, 5.5722000000001104e-05, 5.613900000000366e-05, 5.637500000000434e-05, 5.669500000000244e-05, 5.608299999999844e-05, 5.6458000000002284e-05, 5.6000000000000494e-05, 5.58749999999969e-05, 5.5944000000002214e-05, 5.6138000000004185e-05, 5.5915999999996135e-05, 5.5916000000003074e-05, 5.615299999999629e-05, 5.5929999999995705e-05, 5.605600000000571e-05, 5.593100000000212e-05, 5.66670000000033e-05, 5.666699999999636e-05, 5.665300000000373e-05, 5.615300000000323e-05, 5.580600000000546e-05, 5.615299999999629e-05, 5.647300000000133e-05, 5.5958000000001784e-05, 5.6708000000002534e-05, 5.579099999999948e-05, 5.636099999999783e-05, 5.661099999999808e-05, 5.6665999999996886e-05, 5.5957999999994845e-05, 5.615299999999629e-05, 5.6027999999999634e-05, 5.630499999999955e-05, 5.636100000000477e-05, 5.6277999999999884e-05, 5.5707999999994595e-05, 5.662500000000459e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.291" endtime="20201029 12:44:11.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.279" endtime="20201029 12:44:11.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.308" endtime="20201029 12:44:11.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.303" endtime="20201029 12:44:11.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.300" endtime="20201029 12:44:11.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.774" endtime="20201029 12:44:11.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:10.773" endtime="20201029 12:44:11.334"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.360" endtime="20201029 12:44:11.380"></status>
</kw>
<msg timestamp="20201029 12:44:11.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.356" endtime="20201029 12:44:11.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.384" endtime="20201029 12:44:11.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.391" endtime="20201029 12:44:11.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.348" endtime="20201029 12:44:11.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.342" endtime="20201029 12:44:11.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.416" endtime="20201029 12:44:11.781"></status>
</kw>
<msg timestamp="20201029 12:44:11.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044951417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045009, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:11.413" endtime="20201029 12:44:11.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044951417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045009, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:11.792" endtime="20201029 12:44:11.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.812" endtime="20201029 12:44:11.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.405" endtime="20201029 12:44:11.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.400" endtime="20201029 12:44:11.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:11.830" level="INFO">${RESULT} = [{'diff': 5.758299999999994e-05}, {'diff': 5.7028000000000634e-05}, {'diff': 5.759699999999951e-05}, {'diff': 5.7485999999995485e-05}, {'diff': 5.7165999999997386e-05}, {'diff': 5.681899999999962e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:11.820" endtime="20201029 12:44:11.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:11.840" level="INFO">${ACCURACY} = {'diff': [5.758299999999994e-05, 5.7028000000000634e-05, 5.759699999999951e-05, 5.7485999999995485e-05, 5.7165999999997386e-05, 5.681899999999962e-05, 5.6805999999999524e-05, 5.6764000000000814e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:11.832" endtime="20201029 12:44:11.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.852" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:44:11.849" endtime="20201029 12:44:11.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.858" level="INFO">VALUE: [5.758299999999994e-05, 5.7028000000000634e-05, 5.759699999999951e-05, 5.7485999999995485e-05, 5.7165999999997386e-05, 5.681899999999962e-05, 5.6805999999999524e-05, 5.6764000000000814e-05, 5.7679999999997456e-05, 5.680500000000005e-05, 5.7180000000003894e-05, 5.715300000000423e-05, 5.7264000000001314e-05, 5.672300000000158e-05, 5.7443999999996775e-05, 5.758299999999994e-05, 5.688899999999747e-05, 5.733299999999969e-05, 5.698699999999446e-05, 5.6750000000001244e-05, 5.688900000000441e-05, 5.758400000000635e-05, 5.693100000000312e-05, 5.738900000000491e-05, 5.730500000000055e-05, 5.679100000000048e-05, 5.702700000000116e-05, 5.738900000000491e-05, 5.7278000000000884e-05, 5.7528000000001134e-05, 5.7264000000001314e-05, 5.737500000000534e-05, 5.7514000000001564e-05, 5.7306000000000024e-05, 5.7236000000002174e-05, 5.7486000000002424e-05, 5.718100000000337e-05, 5.7042000000000204e-05, 5.6819999999999093e-05, 5.762499999999865e-05, 5.7042000000000204e-05, 5.6929999999996705e-05, 5.736100000000577e-05, 5.729099999999404e-05, 5.690299999999704e-05, 5.6915999999997136e-05, 5.759699999999951e-05, 5.7236000000002174e-05, 5.6986000000001924e-05, 5.695900000000226e-05]</msg>
<status status="PASS" starttime="20201029 12:44:11.854" endtime="20201029 12:44:11.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.842" endtime="20201029 12:44:11.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.871" endtime="20201029 12:44:11.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.867" endtime="20201029 12:44:11.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.864" endtime="20201029 12:44:11.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.337" endtime="20201029 12:44:11.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.335" endtime="20201029 12:44:11.897"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.922" endtime="20201029 12:44:11.944"></status>
</kw>
<msg timestamp="20201029 12:44:11.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.918" endtime="20201029 12:44:11.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.948" endtime="20201029 12:44:11.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.955" endtime="20201029 12:44:11.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.910" endtime="20201029 12:44:11.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.904" endtime="20201029 12:44:11.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.980" endtime="20201029 12:44:12.344"></status>
</kw>
<msg timestamp="20201029 12:44:12.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045576958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045635458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:11.976" endtime="20201029 12:44:12.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045576958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045635458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.354" endtime="20201029 12:44:12.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.375" endtime="20201029 12:44:12.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.969" endtime="20201029 12:44:12.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.963" endtime="20201029 12:44:12.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.394" level="INFO">${RESULT} = [{'diff': 5.8499999999996055e-05}, {'diff': 5.784699999999976e-05}, {'diff': 5.8014000000002064e-05}, {'diff': 5.833300000000069e-05}, {'diff': 5.7943999999997275e-05}, {'diff': 5.7736000000002674e-05...</msg>
<status status="PASS" starttime="20201029 12:44:12.384" endtime="20201029 12:44:12.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.404" level="INFO">${ACCURACY} = {'diff': [5.8499999999996055e-05, 5.784699999999976e-05, 5.8014000000002064e-05, 5.833300000000069e-05, 5.7943999999997275e-05, 5.7736000000002674e-05, 5.858300000000094e-05, 5.8278000000001884e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:44:12.396" endtime="20201029 12:44:12.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.416" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.413" endtime="20201029 12:44:12.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.421" level="INFO">VALUE: [5.8499999999996055e-05, 5.784699999999976e-05, 5.8014000000002064e-05, 5.833300000000069e-05, 5.7943999999997275e-05, 5.7736000000002674e-05, 5.858300000000094e-05, 5.8278000000001884e-05, 5.783300000000019e-05, 5.8666000000005825e-05, 5.841699999999811e-05, 5.8027999999994695e-05, 5.834700000000026e-05, 5.7820000000000094e-05, 5.791699999999761e-05, 5.7764000000001814e-05, 5.8151999999998816e-05, 5.861100000000008e-05, 5.8707999999997595e-05, 5.859700000000051e-05, 5.836099999999983e-05, 5.7930000000004644e-05, 5.8249999999995805e-05, 5.8070000000000344e-05, 5.793100000000412e-05, 5.7806000000000524e-05, 5.7791999999994015e-05, 5.841699999999811e-05, 5.829100000000198e-05, 5.8042000000001204e-05, 5.8208000000004034e-05, 5.7806000000000524e-05, 5.870900000000401e-05, 5.813899999999872e-05, 5.8278000000001884e-05, 5.831900000000112e-05, 5.861100000000008e-05, 5.847300000000333e-05, 5.7999999999995555e-05, 5.859700000000051e-05, 5.797300000000283e-05, 5.844499999999725e-05, 5.7763999999994875e-05, 5.8514000000002564e-05, 5.869500000000444e-05, 5.791699999999761e-05, 5.816699999999786e-05, 5.826300000000284e-05, 5.856900000000137e-05, 5.7930000000004644e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.418" endtime="20201029 12:44:12.423"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.406" endtime="20201029 12:44:12.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.437" endtime="20201029 12:44:12.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.430" endtime="20201029 12:44:12.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.428" endtime="20201029 12:44:12.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.899" endtime="20201029 12:44:12.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.898" endtime="20201029 12:44:12.463"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.487" endtime="20201029 12:44:12.508"></status>
</kw>
<msg timestamp="20201029 12:44:12.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.484" endtime="20201029 12:44:12.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:12.512" endtime="20201029 12:44:12.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.519" endtime="20201029 12:44:12.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.476" endtime="20201029 12:44:12.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.470" endtime="20201029 12:44:12.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.544" endtime="20201029 12:44:12.907"></status>
</kw>
<msg timestamp="20201029 12:44:12.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044117472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.540" endtime="20201029 12:44:12.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044058236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044117472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:12.918" endtime="20201029 12:44:12.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:12.938" endtime="20201029 12:44:12.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.532" endtime="20201029 12:44:12.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.527" endtime="20201029 12:44:12.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:12.956" level="INFO">${RESULT} = [{'diff': 5.9235999999997235e-05}, {'diff': 5.941699999999911e-05}, {'diff': 5.88749999999999e-05}, {'diff': 5.941699999999911e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.9084000000000914e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:12.947" endtime="20201029 12:44:12.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:12.968" level="INFO">${ACCURACY} = {'diff': [5.9235999999997235e-05, 5.941699999999911e-05, 5.88749999999999e-05, 5.941699999999911e-05, 5.9457999999998346e-05, 5.9084000000000914e-05, 5.9249999999996805e-05, 5.894499999999775e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 12:44:12.958" endtime="20201029 12:44:12.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.979" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:44:12.977" endtime="20201029 12:44:12.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:12.985" level="INFO">VALUE: [5.9235999999997235e-05, 5.941699999999911e-05, 5.88749999999999e-05, 5.941699999999911e-05, 5.9457999999998346e-05, 5.9084000000000914e-05, 5.9249999999996805e-05, 5.894499999999775e-05, 5.970899999999807e-05, 5.9236000000004174e-05, 5.884700000000076e-05, 5.877700000000291e-05, 5.9693999999999026e-05, 5.902700000000316e-05, 5.8722000000004104e-05, 5.886100000000033e-05, 5.911100000000058e-05, 5.918100000000537e-05, 5.9582999999995e-05, 5.8736000000003674e-05, 5.9235999999997235e-05, 5.8834000000000664e-05, 5.9306000000002024e-05, 5.96949999999985e-05, 5.938899999999997e-05, 5.8943999999998276e-05, 5.9000000000003494e-05, 5.9679999999999456e-05, 5.9471999999997915e-05, 5.9138000000000246e-05, 5.9499999999997055e-05, 5.902700000000316e-05, 5.961100000000108e-05, 5.9263999999996375e-05, 5.913899999999972e-05, 5.9264000000003314e-05, 5.9027999999995695e-05, 5.89870000000034e-05, 5.9236000000004174e-05, 5.888899999999947e-05, 5.8848000000000233e-05, 5.9584000000001414e-05, 5.8848000000000233e-05, 5.9250000000003744e-05, 5.8929999999998706e-05, 5.908300000000144e-05, 5.9707999999998596e-05, 5.913899999999972e-05, 5.9582999999995e-05, 5.9528000000003134e-05]</msg>
<status status="PASS" starttime="20201029 12:44:12.982" endtime="20201029 12:44:12.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.970" endtime="20201029 12:44:12.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:12.999" endtime="20201029 12:44:13.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.994" endtime="20201029 12:44:13.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.991" endtime="20201029 12:44:13.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.465" endtime="20201029 12:44:13.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:12.464" endtime="20201029 12:44:13.025"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.050" endtime="20201029 12:44:13.072"></status>
</kw>
<msg timestamp="20201029 12:44:13.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.046" endtime="20201029 12:44:13.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.076" endtime="20201029 12:44:13.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.082" endtime="20201029 12:44:13.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.038" endtime="20201029 12:44:13.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.032" endtime="20201029 12:44:13.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.107" endtime="20201029 12:44:13.460"></status>
</kw>
<msg timestamp="20201029 12:44:13.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044341708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044402208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.104" endtime="20201029 12:44:13.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044341708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044402208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.464" endtime="20201029 12:44:13.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.473" endtime="20201029 12:44:13.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.096" endtime="20201029 12:44:13.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.091" endtime="20201029 12:44:13.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:13.482" level="INFO">${RESULT} = [{'diff': 6.0499999999998055e-05}, {'diff': 5.980500000000305e-05}, {'diff': 6.011099999999464e-05}, {'diff': 6.013900000000072e-05}, {'diff': 5.9721999999998165e-05}, {'diff': 6.011100000000158e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:13.477" endtime="20201029 12:44:13.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:13.487" level="INFO">${ACCURACY} = {'diff': [6.0499999999998055e-05, 5.980500000000305e-05, 6.011099999999464e-05, 6.013900000000072e-05, 5.9721999999998165e-05, 6.011100000000158e-05, 6.0221999999998665e-05, 6.0013999999997125e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:44:13.483" endtime="20201029 12:44:13.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.493" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:44:13.491" endtime="20201029 12:44:13.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.495" level="INFO">VALUE: [6.0499999999998055e-05, 5.980500000000305e-05, 6.011099999999464e-05, 6.013900000000072e-05, 5.9721999999998165e-05, 6.011100000000158e-05, 6.0221999999998665e-05, 6.0013999999997125e-05, 6.013900000000072e-05, 6.016699999999986e-05, 6.058300000000294e-05, 5.993099999999918e-05, 6.068099999999993e-05, 5.9820000000002094e-05, 5.9834000000001664e-05, 5.9943999999999276e-05, 6.034700000000226e-05, 5.9999999999997555e-05, 6.0388000000001496e-05, 6.0264000000004314e-05, 6.0500000000004994e-05, 6.0235999999998235e-05, 6.0028000000003634e-05, 5.983300000000219e-05, 5.994499999999875e-05, 6.0598000000001984e-05, 6.0528000000004134e-05, 6.069500000000644e-05, 6.0666000000000886e-05, 5.990300000000004e-05, 6.015300000000029e-05, 6.0499999999998055e-05, 6.0584000000002414e-05, 6.06949999999995e-05, 6.061100000000208e-05, 5.9805999999995585e-05, 6.056899999999643e-05, 6.040300000000054e-05, 6.034700000000226e-05, 6.013900000000072e-05, 6.0458000000006284e-05, 6.068099999999993e-05, 6.040300000000054e-05, 5.994500000000569e-05, 6.0416000000000636e-05, 5.988900000000047e-05, 6.0750000000005244e-05, 5.972300000000458e-05, 6.0277999999996945e-05, 6.009700000000201e-05]</msg>
<status status="PASS" starttime="20201029 12:44:13.494" endtime="20201029 12:44:13.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.488" endtime="20201029 12:44:13.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:13.502" endtime="20201029 12:44:13.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.500" endtime="20201029 12:44:13.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.498" endtime="20201029 12:44:13.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.027" endtime="20201029 12:44:13.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.026" endtime="20201029 12:44:13.525"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.550" endtime="20201029 12:44:13.572"></status>
</kw>
<msg timestamp="20201029 12:44:13.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.546" endtime="20201029 12:44:13.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:13.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:13.575" endtime="20201029 12:44:13.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.582" endtime="20201029 12:44:13.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.538" endtime="20201029 12:44:13.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.532" endtime="20201029 12:44:13.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:13.607" endtime="20201029 12:44:13.984"></status>
</kw>
<msg timestamp="20201029 12:44:13.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042294667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.604" endtime="20201029 12:44:13.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042294667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:13.994" endtime="20201029 12:44:14.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.014" endtime="20201029 12:44:14.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.596" endtime="20201029 12:44:14.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.591" endtime="20201029 12:44:14.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.033" level="INFO">${RESULT} = [{'diff': 6.111100000000258e-05}, {'diff': 6.079099999999754e-05}, {'diff': 6.0930000000000706e-05}, {'diff': 6.169400000000103e-05}, {'diff': 6.134700000000326e-05}, {'diff': 6.120899999999957e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:14.023" endtime="20201029 12:44:14.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.043" level="INFO">${ACCURACY} = {'diff': [6.111100000000258e-05, 6.079099999999754e-05, 6.0930000000000706e-05, 6.169400000000103e-05, 6.134700000000326e-05, 6.120899999999957e-05, 6.105600000000377e-05, 6.133300000000369e-05, 6.118...</msg>
<status status="PASS" starttime="20201029 12:44:14.035" endtime="20201029 12:44:14.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.054" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.052" endtime="20201029 12:44:14.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.060" level="INFO">VALUE: [6.111100000000258e-05, 6.079099999999754e-05, 6.0930000000000706e-05, 6.169400000000103e-05, 6.134700000000326e-05, 6.120899999999957e-05, 6.105600000000377e-05, 6.133300000000369e-05, 6.118100000000043e-05, 6.113900000000172e-05, 6.159700000000351e-05, 6.131999999999665e-05, 6.127700000000541e-05, 6.159800000000298e-05, 6.172200000000017e-05, 6.165300000000179e-05, 6.1027999999997695e-05, 6.134699999999632e-05, 6.080500000000405e-05, 6.163899999999528e-05, 6.122199999999967e-05, 6.140300000000154e-05, 6.109699999999607e-05, 6.145899999999982e-05, 6.159700000000351e-05, 6.162500000000265e-05, 6.126399999999838e-05, 6.152699999999872e-05, 6.172200000000017e-05, 6.1013999999998125e-05, 6.109699999999607e-05, 6.0707999999999596e-05, 6.162500000000265e-05, 6.147199999999992e-05, 6.090300000000104e-05, 6.0985999999998985e-05, 6.12499999999988e-05, 6.083299999999625e-05, 6.161100000000308e-05, 6.12499999999988e-05, 6.161099999999614e-05, 6.105599999999684e-05, 6.0806000000003524e-05, 6.149999999999906e-05, 6.093100000000018e-05, 6.149999999999906e-05, 6.136099999999589e-05, 6.16950000000005e-05, 6.161099999999614e-05, 6.122199999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.057" endtime="20201029 12:44:14.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.045" endtime="20201029 12:44:14.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.074" endtime="20201029 12:44:14.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.069" endtime="20201029 12:44:14.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.066" endtime="20201029 12:44:14.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.528" endtime="20201029 12:44:14.099"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:13.526" endtime="20201029 12:44:14.100"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.125" endtime="20201029 12:44:14.148"></status>
</kw>
<msg timestamp="20201029 12:44:14.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.121" endtime="20201029 12:44:14.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.151" endtime="20201029 12:44:14.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.158" endtime="20201029 12:44:14.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.113" endtime="20201029 12:44:14.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.107" endtime="20201029 12:44:14.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.183" endtime="20201029 12:44:14.557"></status>
</kw>
<msg timestamp="20201029 12:44:14.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045680069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.180" endtime="20201029 12:44:14.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045680069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045742667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.567" endtime="20201029 12:44:14.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.587" endtime="20201029 12:44:14.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.172" endtime="20201029 12:44:14.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.167" endtime="20201029 12:44:14.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:14.606" level="INFO">${RESULT} = [{'diff': 6.259800000000398e-05}, {'diff': 6.191700000000161e-05}, {'diff': 6.180599999999759e-05}, {'diff': 6.205499999999836e-05}, {'diff': 6.230599999999809e-05}, {'diff': 6.181899999999768e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:14.596" endtime="20201029 12:44:14.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:14.616" level="INFO">${ACCURACY} = {'diff': [6.259800000000398e-05, 6.191700000000161e-05, 6.180599999999759e-05, 6.205499999999836e-05, 6.230599999999809e-05, 6.181899999999768e-05, 6.215200000000282e-05, 6.184699999999682e-05, 6.1847...</msg>
<status status="PASS" starttime="20201029 12:44:14.608" endtime="20201029 12:44:14.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.627" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:44:14.625" endtime="20201029 12:44:14.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.633" level="INFO">VALUE: [6.259800000000398e-05, 6.191700000000161e-05, 6.180599999999759e-05, 6.205499999999836e-05, 6.230599999999809e-05, 6.181899999999768e-05, 6.215200000000282e-05, 6.184699999999682e-05, 6.184700000000376e-05, 6.226399999999938e-05, 6.226399999999938e-05, 6.247200000000092e-05, 6.259700000000451e-05, 6.194499999999381e-05, 6.27500000000003e-05, 6.190300000000204e-05, 6.272199999999423e-05, 6.247200000000092e-05, 6.23750000000034e-05, 6.183300000000419e-05, 6.18750000000029e-05, 6.272199999999423e-05, 6.259699999999757e-05, 6.266600000000289e-05, 6.226399999999938e-05, 6.193099999999424e-05, 6.226399999999938e-05, 6.265299999999585e-05, 6.188900000000247e-05, 6.23750000000034e-05, 6.186100000000333e-05, 6.216600000000239e-05, 6.268100000000193e-05, 6.25699999999979e-05, 6.266700000000236e-05, 6.238899999999603e-05, 6.205499999999836e-05, 6.181899999999768e-05, 6.261099999999714e-05, 6.226399999999938e-05, 6.22499999999998e-05, 6.180599999999759e-05, 6.194400000000128e-05, 6.241699999999517e-05, 6.226399999999938e-05, 6.20279999999987e-05, 6.244500000000125e-05, 6.272200000000117e-05, 6.212500000000315e-05, 6.27080000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:14.630" endtime="20201029 12:44:14.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.618" endtime="20201029 12:44:14.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:14.655" endtime="20201029 12:44:14.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.648" endtime="20201029 12:44:14.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.646" endtime="20201029 12:44:14.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.102" endtime="20201029 12:44:14.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.101" endtime="20201029 12:44:14.681"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.705" endtime="20201029 12:44:14.727"></status>
</kw>
<msg timestamp="20201029 12:44:14.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.701" endtime="20201029 12:44:14.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:14.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:14.730" endtime="20201029 12:44:14.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.737" endtime="20201029 12:44:14.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.694" endtime="20201029 12:44:14.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.688" endtime="20201029 12:44:14.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:14.762" endtime="20201029 12:44:15.130"></status>
</kw>
<msg timestamp="20201029 12:44:15.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044004972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044067778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:14.759" endtime="20201029 12:44:15.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044004972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044067778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.140" endtime="20201029 12:44:15.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.160" endtime="20201029 12:44:15.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.751" endtime="20201029 12:44:15.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.746" endtime="20201029 12:44:15.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.178" level="INFO">${RESULT} = [{'diff': 6.280599999999859e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.32359999999943e-05}, {'diff': 6.279200000000595e-05}, {'diff': 6.361100000000508e-05}, {'diff': 6.356899999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:15.169" endtime="20201029 12:44:15.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.190" level="INFO">${ACCURACY} = {'diff': [6.280599999999859e-05, 6.348600000000149e-05, 6.32359999999943e-05, 6.279200000000595e-05, 6.361100000000508e-05, 6.356899999999943e-05, 6.305499999999936e-05, 6.373600000000174e-05, 6.31659...</msg>
<status status="PASS" starttime="20201029 12:44:15.180" endtime="20201029 12:44:15.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.201" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.199" endtime="20201029 12:44:15.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.207" level="INFO">VALUE: [6.280599999999859e-05, 6.348600000000149e-05, 6.32359999999943e-05, 6.279200000000595e-05, 6.361100000000508e-05, 6.356899999999943e-05, 6.305499999999936e-05, 6.373600000000174e-05, 6.316599999999645e-05, 6.347200000000192e-05, 6.305499999999936e-05, 6.369399999999609e-05, 6.344500000000225e-05, 6.28200000000051e-05, 6.305599999999884e-05, 6.301400000000013e-05, 6.334699999999832e-05, 6.366700000000336e-05, 6.304199999999927e-05, 6.313900000000372e-05, 6.29300000000027e-05, 6.32080000000021e-05, 6.3582999999999e-05, 6.292999999999577e-05, 6.294400000000228e-05, 6.281899999999868e-05, 6.337499999999746e-05, 6.280499999999911e-05, 6.280599999999859e-05, 6.331899999999918e-05, 6.329199999999952e-05, 6.355599999999934e-05, 6.280599999999859e-05, 6.315300000000329e-05, 6.327700000000047e-05, 6.37080000000026e-05, 6.369400000000303e-05, 6.312500000000415e-05, 6.345800000000235e-05, 6.3582999999999e-05, 6.372200000000217e-05, 6.336099999999789e-05, 6.3582999999999e-05, 6.3582999999999e-05, 6.323600000000124e-05, 6.334700000000526e-05, 6.348599999999455e-05, 6.370900000000207e-05, 6.291700000000261e-05, 6.300000000000056e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.204" endtime="20201029 12:44:15.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.191" endtime="20201029 12:44:15.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.221" endtime="20201029 12:44:15.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.216" endtime="20201029 12:44:15.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.213" endtime="20201029 12:44:15.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.683" endtime="20201029 12:44:15.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:14.682" endtime="20201029 12:44:15.246"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.271" endtime="20201029 12:44:15.293"></status>
</kw>
<msg timestamp="20201029 12:44:15.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.267" endtime="20201029 12:44:15.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.296" endtime="20201029 12:44:15.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.303" endtime="20201029 12:44:15.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.260" endtime="20201029 12:44:15.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.253" endtime="20201029 12:44:15.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.328" endtime="20201029 12:44:15.708"></status>
</kw>
<msg timestamp="20201029 12:44:15.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043657097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043721028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.325" endtime="20201029 12:44:15.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043657097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043721028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.717" endtime="20201029 12:44:15.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.736" endtime="20201029 12:44:15.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.317" endtime="20201029 12:44:15.741"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.312" endtime="20201029 12:44:15.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:15.753" level="INFO">${RESULT} = [{'diff': 6.393100000000318e-05}, {'diff': 6.461099999999914e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.440200000000507e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.415199999999788e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:15.744" endtime="20201029 12:44:15.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:15.768" level="INFO">${ACCURACY} = {'diff': [6.393100000000318e-05, 6.461099999999914e-05, 6.404200000000027e-05, 6.440200000000507e-05, 6.377800000000045e-05, 6.415199999999788e-05, 6.383299999999925e-05, 6.433299999999975e-05, 6.4264...</msg>
<status status="PASS" starttime="20201029 12:44:15.755" endtime="20201029 12:44:15.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.782" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:44:15.780" endtime="20201029 12:44:15.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.788" level="INFO">VALUE: [6.393100000000318e-05, 6.461099999999914e-05, 6.404200000000027e-05, 6.440200000000507e-05, 6.377800000000045e-05, 6.415199999999788e-05, 6.383299999999925e-05, 6.433299999999975e-05, 6.426400000000138e-05, 6.413899999999778e-05, 6.448600000000249e-05, 6.456900000000043e-05, 6.373600000000174e-05, 6.398699999999452e-05, 6.447199999999598e-05, 6.405599999999984e-05, 6.405599999999984e-05, 6.438900000000497e-05, 6.436199999999836e-05, 6.42500000000018e-05, 6.46950000000035e-05, 6.447199999999598e-05, 6.466599999999795e-05, 6.392999999999677e-05, 6.390199999999763e-05, 6.384699999999882e-05, 6.455500000000086e-05, 6.394399999999634e-05, 6.438899999999803e-05, 6.466699999999742e-05, 6.415299999999735e-05, 6.381999999999916e-05, 6.401400000000113e-05, 6.402799999999376e-05, 6.4277999999994e-05, 6.433300000000669e-05, 6.462499999999871e-05, 6.404100000000079e-05, 6.445800000000335e-05, 6.442999999999727e-05, 6.404100000000079e-05, 6.405500000000036e-05, 6.450000000000206e-05, 6.40280000000007e-05, 6.420900000000257e-05, 6.466599999999795e-05, 6.447200000000292e-05, 6.405599999999984e-05, 6.383399999999873e-05, 6.43880000000055e-05]</msg>
<status status="PASS" starttime="20201029 12:44:15.785" endtime="20201029 12:44:15.789"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.771" endtime="20201029 12:44:15.791"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.800" endtime="20201029 12:44:15.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.796" endtime="20201029 12:44:15.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.794" endtime="20201029 12:44:15.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.249" endtime="20201029 12:44:15.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.247" endtime="20201029 12:44:15.825"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.848" endtime="20201029 12:44:15.868"></status>
</kw>
<msg timestamp="20201029 12:44:15.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.845" endtime="20201029 12:44:15.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.872" endtime="20201029 12:44:15.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.878" endtime="20201029 12:44:15.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.838" endtime="20201029 12:44:15.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.832" endtime="20201029 12:44:15.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.902" endtime="20201029 12:44:16.241"></status>
</kw>
<msg timestamp="20201029 12:44:16.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041163278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:15.898" endtime="20201029 12:44:16.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041163278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.251" endtime="20201029 12:44:16.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.269" endtime="20201029 12:44:16.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.891" endtime="20201029 12:44:16.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.886" endtime="20201029 12:44:16.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.286" level="INFO">${RESULT} = [{'diff': 6.570899999999713e-05}, {'diff': 6.520900000000357e-05}, {'diff': 6.516699999999792e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.483300000000025e-05}, {'diff': 6.566699999999842e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:16.278" endtime="20201029 12:44:16.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.296" level="INFO">${ACCURACY} = {'diff': [6.570899999999713e-05, 6.520900000000357e-05, 6.516699999999792e-05, 6.515299999999835e-05, 6.483300000000025e-05, 6.566699999999842e-05, 6.568000000000546e-05, 6.517999999999802e-05, 6.4819...</msg>
<status status="PASS" starttime="20201029 12:44:16.288" endtime="20201029 12:44:16.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.306" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.304" endtime="20201029 12:44:16.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.312" level="INFO">VALUE: [6.570899999999713e-05, 6.520900000000357e-05, 6.516699999999792e-05, 6.515299999999835e-05, 6.483300000000025e-05, 6.566699999999842e-05, 6.568000000000546e-05, 6.517999999999802e-05, 6.481900000000068e-05, 6.50280000000017e-05, 6.531900000000118e-05, 6.480500000000111e-05, 6.532000000000066e-05, 6.50830000000005e-05, 6.494500000000375e-05, 6.52630000000029e-05, 6.524999999999587e-05, 6.547200000000392e-05, 6.480499999999417e-05, 6.555600000000134e-05, 6.495800000000385e-05, 6.513799999999931e-05, 6.515199999999888e-05, 6.515299999999835e-05, 6.551399999999569e-05, 6.516699999999792e-05, 6.487499999999896e-05, 6.536099999999989e-05, 6.526400000000238e-05, 6.536099999999989e-05, 6.494499999999681e-05, 6.548599999999655e-05, 6.550000000000306e-05, 6.480499999999417e-05, 6.565299999999885e-05, 6.495799999999691e-05, 6.488799999999906e-05, 6.515300000000529e-05, 6.563899999999928e-05, 6.479200000000102e-05, 6.544400000000478e-05, 6.551400000000263e-05, 6.511099999999964e-05, 6.509700000000007e-05, 6.504200000000127e-05, 6.480600000000059e-05, 6.549999999999612e-05, 6.522300000000314e-05, 6.550000000000306e-05, 6.512499999999921e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.309" endtime="20201029 12:44:16.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.297" endtime="20201029 12:44:16.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.325" endtime="20201029 12:44:16.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.320" endtime="20201029 12:44:16.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.318" endtime="20201029 12:44:16.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.827" endtime="20201029 12:44:16.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.826" endtime="20201029 12:44:16.349"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.372" endtime="20201029 12:44:16.395"></status>
</kw>
<msg timestamp="20201029 12:44:16.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.369" endtime="20201029 12:44:16.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.398" endtime="20201029 12:44:16.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.405" endtime="20201029 12:44:16.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.362" endtime="20201029 12:44:16.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.356" endtime="20201029 12:44:16.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.428" endtime="20201029 12:44:16.765"></status>
</kw>
<msg timestamp="20201029 12:44:16.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04279075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:16.425" endtime="20201029 12:44:16.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042724278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04279075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:16.775" endtime="20201029 12:44:16.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.793" endtime="20201029 12:44:16.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.418" endtime="20201029 12:44:16.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.413" endtime="20201029 12:44:16.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:16.811" level="INFO">${RESULT} = [{'diff': 6.647200000000492e-05}, {'diff': 6.60700000000014e-05}, {'diff': 6.579200000000202e-05}, {'diff': 6.626400000000338e-05}, {'diff': 6.629200000000252e-05}, {'diff': 6.624999999999687e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:16.802" endtime="20201029 12:44:16.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:16.820" level="INFO">${ACCURACY} = {'diff': [6.647200000000492e-05, 6.60700000000014e-05, 6.579200000000202e-05, 6.626400000000338e-05, 6.629200000000252e-05, 6.624999999999687e-05, 6.57359999999968e-05, 6.608299999999456e-05, 6.579099...</msg>
<status status="PASS" starttime="20201029 12:44:16.813" endtime="20201029 12:44:16.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.831" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:44:16.829" endtime="20201029 12:44:16.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.836" level="INFO">VALUE: [6.647200000000492e-05, 6.60700000000014e-05, 6.579200000000202e-05, 6.626400000000338e-05, 6.629200000000252e-05, 6.624999999999687e-05, 6.57359999999968e-05, 6.608299999999456e-05, 6.57909999999956e-05, 6.626399999999644e-05, 6.616699999999892e-05, 6.591700000000561e-05, 6.667999999999952e-05, 6.654200000000277e-05, 6.580600000000159e-05, 6.580600000000159e-05, 6.626399999999644e-05, 6.584700000000082e-05, 6.637500000000046e-05, 6.650000000000406e-05, 6.605500000000236e-05, 6.583300000000125e-05, 6.579100000000254e-05, 6.647199999999798e-05, 6.62500000000038e-05, 6.662499999999377e-05, 6.648600000000449e-05, 6.616700000000586e-05, 6.665299999999985e-05, 6.662500000000071e-05, 6.638900000000003e-05, 6.636100000000089e-05, 6.626400000000338e-05, 6.652799999999626e-05, 6.605499999999542e-05, 6.668099999999899e-05, 6.619400000000553e-05, 6.647199999999798e-05, 6.666599999999995e-05, 6.638900000000003e-05, 6.586100000000039e-05, 6.599999999999662e-05, 6.637500000000046e-05, 6.605600000000184e-05, 6.59029999999991e-05, 6.659800000000105e-05, 6.662500000000071e-05, 6.57779999999955e-05, 6.593099999999824e-05, 6.647299999999745e-05]</msg>
<status status="PASS" starttime="20201029 12:44:16.833" endtime="20201029 12:44:16.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.822" endtime="20201029 12:44:16.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:16.850" endtime="20201029 12:44:16.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.845" endtime="20201029 12:44:16.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.842" endtime="20201029 12:44:16.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.352" endtime="20201029 12:44:16.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.350" endtime="20201029 12:44:16.875"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.898" endtime="20201029 12:44:16.920"></status>
</kw>
<msg timestamp="20201029 12:44:16.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.895" endtime="20201029 12:44:16.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:16.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:16.924" endtime="20201029 12:44:16.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.930" endtime="20201029 12:44:16.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.888" endtime="20201029 12:44:16.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.882" endtime="20201029 12:44:16.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:16.954" endtime="20201029 12:44:17.289"></status>
</kw>
<msg timestamp="20201029 12:44:17.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041247208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041314153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:16.950" endtime="20201029 12:44:17.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041247208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041314153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.299" endtime="20201029 12:44:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.317" endtime="20201029 12:44:17.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.943" endtime="20201029 12:44:17.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.939" endtime="20201029 12:44:17.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.334" level="INFO">${RESULT} = [{'diff': 6.694499999999881e-05}, {'diff': 6.680600000000259e-05}, {'diff': 6.76109999999952e-05}, {'diff': 6.694499999999881e-05}, {'diff': 6.716600000000045e-05}, {'diff': 6.766600000000095e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:17.326" endtime="20201029 12:44:17.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.345" level="INFO">${ACCURACY} = {'diff': [6.694499999999881e-05, 6.680600000000259e-05, 6.76109999999952e-05, 6.694499999999881e-05, 6.716600000000045e-05, 6.766600000000095e-05, 6.719399999999959e-05, 6.701400000000413e-05, 6.76800...</msg>
<status status="PASS" starttime="20201029 12:44:17.337" endtime="20201029 12:44:17.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.356" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.354" endtime="20201029 12:44:17.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.361" level="INFO">VALUE: [6.694499999999881e-05, 6.680600000000259e-05, 6.76109999999952e-05, 6.694499999999881e-05, 6.716600000000045e-05, 6.766600000000095e-05, 6.719399999999959e-05, 6.701400000000413e-05, 6.768000000000052e-05, 6.738900000000103e-05, 6.762500000000171e-05, 6.680500000000311e-05, 6.680599999999565e-05, 6.744499999999931e-05, 6.726399999999744e-05, 6.687500000000096e-05, 6.693099999999924e-05, 6.748599999999855e-05, 6.702799999999676e-05, 6.718000000000002e-05, 6.677799999999651e-05, 6.743099999999974e-05, 6.686100000000139e-05, 6.758299999999606e-05, 6.681900000000268e-05, 6.706900000000293e-05, 6.730600000000309e-05, 6.718099999999949e-05, 6.69030000000001e-05, 6.688900000000053e-05, 6.681999999999522e-05, 6.70700000000024e-05, 6.682000000000216e-05, 6.713899999999384e-05, 6.733400000000223e-05, 6.745799999999941e-05, 6.705500000000336e-05, 6.741700000000017e-05, 6.698600000000499e-05, 6.737500000000146e-05, 6.726399999999744e-05, 6.680499999999617e-05, 6.763900000000128e-05, 6.734700000000232e-05, 6.758400000000248e-05, 6.726399999999744e-05, 6.719399999999959e-05, 6.712500000000121e-05, 6.761100000000214e-05, 6.752799999999726e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.358" endtime="20201029 12:44:17.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.347" endtime="20201029 12:44:17.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.374" endtime="20201029 12:44:17.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.370" endtime="20201029 12:44:17.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.367" endtime="20201029 12:44:17.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.878" endtime="20201029 12:44:17.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:16.876" endtime="20201029 12:44:17.399"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.423" endtime="20201029 12:44:17.444"></status>
</kw>
<msg timestamp="20201029 12:44:17.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.419" endtime="20201029 12:44:17.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.447" endtime="20201029 12:44:17.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.454" endtime="20201029 12:44:17.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.412" endtime="20201029 12:44:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.405" endtime="20201029 12:44:17.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.477" endtime="20201029 12:44:17.814"></status>
</kw>
<msg timestamp="20201029 12:44:17.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042007736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042075556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.474" endtime="20201029 12:44:17.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042007736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042075556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.824" endtime="20201029 12:44:17.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.842" endtime="20201029 12:44:17.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.466" endtime="20201029 12:44:17.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.462" endtime="20201029 12:44:17.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:17.859" level="INFO">${RESULT} = [{'diff': 6.782000000000316e-05}, {'diff': 6.837500000000246e-05}, {'diff': 6.827700000000547e-05}, {'diff': 6.788800000000206e-05}, {'diff': 6.827800000000495e-05}, {'diff': 6.830499999999767e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:17.851" endtime="20201029 12:44:17.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:17.871" level="INFO">${ACCURACY} = {'diff': [6.782000000000316e-05, 6.837500000000246e-05, 6.827700000000547e-05, 6.788800000000206e-05, 6.827800000000495e-05, 6.830499999999767e-05, 6.813899999999484e-05, 6.8583000000004e-05, 6.827799...</msg>
<status status="PASS" starttime="20201029 12:44:17.862" endtime="20201029 12:44:17.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.882" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:44:17.879" endtime="20201029 12:44:17.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.887" level="INFO">VALUE: [6.782000000000316e-05, 6.837500000000246e-05, 6.827700000000547e-05, 6.788800000000206e-05, 6.827800000000495e-05, 6.830499999999767e-05, 6.813899999999484e-05, 6.8583000000004e-05, 6.827799999999801e-05, 6.782000000000316e-05, 6.786099999999545e-05, 6.802799999999776e-05, 6.813900000000178e-05, 6.845899999999988e-05, 6.827799999999801e-05, 6.858400000000348e-05, 6.858400000000348e-05, 6.872200000000023e-05, 6.79160000000012e-05, 6.792999999999383e-05, 6.826399999999844e-05, 6.804199999999733e-05, 6.87359999999998e-05, 6.847199999999998e-05, 6.841700000000117e-05, 6.783399999999579e-05, 6.804199999999733e-05, 6.788900000000153e-05, 6.795899999999938e-05, 6.808400000000298e-05, 6.779200000000402e-05, 6.780499999999717e-05, 6.812499999999527e-05, 6.815200000000188e-05, 6.861100000000314e-05, 6.793000000000077e-05, 6.829199999999758e-05, 6.858299999999706e-05, 6.782000000000316e-05, 6.837500000000246e-05, 6.858299999999706e-05, 6.827799999999801e-05, 6.777800000000445e-05, 6.826399999999844e-05, 6.849999999999912e-05, 6.841599999999476e-05, 6.82359999999993e-05, 6.87359999999998e-05, 6.804099999999785e-05, 6.788900000000153e-05]</msg>
<status status="PASS" starttime="20201029 12:44:17.884" endtime="20201029 12:44:17.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.872" endtime="20201029 12:44:17.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:17.900" endtime="20201029 12:44:17.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.895" endtime="20201029 12:44:17.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.893" endtime="20201029 12:44:17.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.401" endtime="20201029 12:44:17.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.400" endtime="20201029 12:44:17.925"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.947" endtime="20201029 12:44:17.968"></status>
</kw>
<msg timestamp="20201029 12:44:17.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.944" endtime="20201029 12:44:17.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:17.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:17.971" endtime="20201029 12:44:17.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:17.978" endtime="20201029 12:44:17.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.937" endtime="20201029 12:44:17.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.931" endtime="20201029 12:44:17.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.001" endtime="20201029 12:44:18.340"></status>
</kw>
<msg timestamp="20201029 12:44:18.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041167375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:17.998" endtime="20201029 12:44:18.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041098333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041167375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.349" endtime="20201029 12:44:18.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.368" endtime="20201029 12:44:18.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.991" endtime="20201029 12:44:18.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.986" endtime="20201029 12:44:18.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.385" level="INFO">${RESULT} = [{'diff': 6.904199999999833e-05}, {'diff': 6.96109999999972e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.89030000000021e-05}, {'diff': 6.972299999999376e-05}, {'diff': 6.926399999999944e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:18.376" endtime="20201029 12:44:18.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.394" level="INFO">${ACCURACY} = {'diff': [6.904199999999833e-05, 6.96109999999972e-05, 6.904199999999833e-05, 6.89030000000021e-05, 6.972299999999376e-05, 6.926399999999944e-05, 6.951399999999969e-05, 6.926400000000638e-05, 6.938900...</msg>
<status status="PASS" starttime="20201029 12:44:18.387" endtime="20201029 12:44:18.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.405" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.403" endtime="20201029 12:44:18.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.411" level="INFO">VALUE: [6.904199999999833e-05, 6.96109999999972e-05, 6.904199999999833e-05, 6.89030000000021e-05, 6.972299999999376e-05, 6.926399999999944e-05, 6.951399999999969e-05, 6.926400000000638e-05, 6.938900000000303e-05, 6.92360000000003e-05, 6.947200000000098e-05, 6.880500000000511e-05, 6.940299999999566e-05, 6.890299999999516e-05, 6.94030000000026e-05, 6.937500000000346e-05, 6.897200000000048e-05, 6.947200000000098e-05, 6.881899999999774e-05, 6.945900000000088e-05, 6.962499999999677e-05, 6.968099999999505e-05, 6.968100000000199e-05, 6.887499999999602e-05, 6.937499999999652e-05, 6.948600000000055e-05, 6.915300000000235e-05, 6.90280000000057e-05, 6.961100000000414e-05, 6.969400000000209e-05, 6.969500000000156e-05, 6.97360000000008e-05, 6.893100000000124e-05, 6.938900000000303e-05, 6.968100000000199e-05, 6.96109999999972e-05, 6.929100000000604e-05, 6.916600000000245e-05, 6.915200000000288e-05, 6.892999999999483e-05, 6.969400000000209e-05, 6.924999999999987e-05, 6.926399999999944e-05, 6.963900000000328e-05, 6.895900000000038e-05, 6.893100000000124e-05, 6.955500000000586e-05, 6.926299999999996e-05, 6.901399999999919e-05, 6.913900000000278e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.408" endtime="20201029 12:44:18.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.396" endtime="20201029 12:44:18.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.423" endtime="20201029 12:44:18.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.419" endtime="20201029 12:44:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.416" endtime="20201029 12:44:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.927" endtime="20201029 12:44:18.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:17.926" endtime="20201029 12:44:18.448"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.471" endtime="20201029 12:44:18.494"></status>
</kw>
<msg timestamp="20201029 12:44:18.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.468" endtime="20201029 12:44:18.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.497" endtime="20201029 12:44:18.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.503" endtime="20201029 12:44:18.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.461" endtime="20201029 12:44:18.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.455" endtime="20201029 12:44:18.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.527" endtime="20201029 12:44:18.866"></status>
</kw>
<msg timestamp="20201029 12:44:18.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.523" endtime="20201029 12:44:18.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042981736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043051986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:18.875" endtime="20201029 12:44:18.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.894" endtime="20201029 12:44:18.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.516" endtime="20201029 12:44:18.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.511" endtime="20201029 12:44:18.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:18.911" level="INFO">${RESULT} = [{'diff': 7.025000000000087e-05}, {'diff': 7.004199999999933e-05}, {'diff': 7.016700000000292e-05}, {'diff': 6.994500000000181e-05}, {'diff': 7.070900000000213e-05}, {'diff': 7.050000000000112e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:18.902" endtime="20201029 12:44:18.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:18.920" level="INFO">${ACCURACY} = {'diff': [7.025000000000087e-05, 7.004199999999933e-05, 7.016700000000292e-05, 6.994500000000181e-05, 7.070900000000213e-05, 7.050000000000112e-05, 7.07360000000018e-05, 7.027800000000001e-05, 7.07230...</msg>
<status status="PASS" starttime="20201029 12:44:18.913" endtime="20201029 12:44:18.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.931" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:44:18.929" endtime="20201029 12:44:18.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.936" level="INFO">VALUE: [7.025000000000087e-05, 7.004199999999933e-05, 7.016700000000292e-05, 6.994500000000181e-05, 7.070900000000213e-05, 7.050000000000112e-05, 7.07360000000018e-05, 7.027800000000001e-05, 7.07230000000017e-05, 7.004199999999933e-05, 7.01109999999977e-05, 7.066599999999701e-05, 7.059700000000557e-05, 7.015299999999641e-05, 7.030599999999915e-05, 7.018100000000249e-05, 7.051400000000069e-05, 6.980599999999865e-05, 7.001400000000019e-05, 6.995900000000138e-05, 7.004199999999933e-05, 7.070900000000213e-05, 6.984699999999788e-05, 7.058299999999906e-05, 7.051400000000069e-05, 7.036100000000489e-05, 7.01109999999977e-05, 7.037500000000446e-05, 7.031899999999924e-05, 7.070800000000266e-05, 7.016699999999598e-05, 6.980599999999865e-05, 7.00559999999989e-05, 6.993100000000224e-05, 6.980499999999917e-05, 7.059699999999863e-05, 6.973599999999386e-05, 7.063899999999734e-05, 7.012499999999727e-05, 7.026400000000044e-05, 6.984699999999788e-05, 7.026400000000044e-05, 7.026400000000044e-05, 7.029199999999958e-05, 7.076300000000146e-05, 6.972200000000123e-05, 7.065299999999691e-05, 7.000000000000062e-05, 7.063799999999787e-05, 6.981899999999874e-05]</msg>
<status status="PASS" starttime="20201029 12:44:18.933" endtime="20201029 12:44:18.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.922" endtime="20201029 12:44:18.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:18.951" endtime="20201029 12:44:18.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.945" endtime="20201029 12:44:18.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.942" endtime="20201029 12:44:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.450" endtime="20201029 12:44:18.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.449" endtime="20201029 12:44:18.976"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.992" endtime="20201029 12:44:19.010"></status>
</kw>
<msg timestamp="20201029 12:44:19.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.990" endtime="20201029 12:44:19.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.011" endtime="20201029 12:44:19.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.014" endtime="20201029 12:44:19.016"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.987" endtime="20201029 12:44:19.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.982" endtime="20201029 12:44:19.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.025" endtime="20201029 12:44:19.311"></status>
</kw>
<msg timestamp="20201029 12:44:19.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032893722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032965431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.024" endtime="20201029 12:44:19.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032893722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032965431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.315" endtime="20201029 12:44:19.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.324" endtime="20201029 12:44:19.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.020" endtime="20201029 12:44:19.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.018" endtime="20201029 12:44:19.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.332" level="INFO">${RESULT} = [{'diff': 7.170900000000313e-05}, {'diff': 7.147300000000245e-05}, {'diff': 7.113899999999784e-05}, {'diff': 7.113900000000478e-05}, {'diff': 7.138899999999809e-05}, {'diff': 7.104200000000033e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.328" endtime="20201029 12:44:19.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.337" level="INFO">${ACCURACY} = {'diff': [7.170900000000313e-05, 7.147300000000245e-05, 7.113899999999784e-05, 7.113900000000478e-05, 7.138899999999809e-05, 7.104200000000033e-05, 7.094500000000281e-05, 7.144500000000331e-05, 7.0930...</msg>
<status status="PASS" starttime="20201029 12:44:19.333" endtime="20201029 12:44:19.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.342" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.341" endtime="20201029 12:44:19.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.345" level="INFO">VALUE: [7.170900000000313e-05, 7.147300000000245e-05, 7.113899999999784e-05, 7.113900000000478e-05, 7.138899999999809e-05, 7.104200000000033e-05, 7.094500000000281e-05, 7.144500000000331e-05, 7.09309999999963e-05, 7.102800000000076e-05, 7.138899999999809e-05, 7.12360000000023e-05, 7.14030000000046e-05, 7.101400000000119e-05, 7.12360000000023e-05, 7.108299999999956e-05, 7.080599999999965e-05, 7.115199999999794e-05, 7.093000000000377e-05, 7.148600000000255e-05, 7.081899999999974e-05, 7.147199999999604e-05, 7.163899999999834e-05, 7.101400000000119e-05, 7.115299999999741e-05, 7.159799999999911e-05, 7.079200000000008e-05, 7.109699999999913e-05, 7.15560000000004e-05, 7.1069e-05, 7.166599999999801e-05, 7.133299999999981e-05, 7.075000000000137e-05, 7.170799999999672e-05, 7.080500000000017e-05, 7.090199999999769e-05, 7.16109999999992e-05, 7.12360000000023e-05, 7.088899999999759e-05, 7.080599999999965e-05, 7.169499999999662e-05, 7.147299999999551e-05, 7.168100000000399e-05, 7.148600000000255e-05, 7.145899999999594e-05, 7.172200000000323e-05, 7.136099999999895e-05, 7.113899999999784e-05, 7.113899999999784e-05, 7.172200000000323e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.343" endtime="20201029 12:44:19.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.338" endtime="20201029 12:44:19.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.351" endtime="20201029 12:44:19.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.349" endtime="20201029 12:44:19.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.347" endtime="20201029 12:44:19.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.978" endtime="20201029 12:44:19.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.976" endtime="20201029 12:44:19.372"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.383" endtime="20201029 12:44:19.402"></status>
</kw>
<msg timestamp="20201029 12:44:19.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.381" endtime="20201029 12:44:19.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.405" endtime="20201029 12:44:19.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.412" endtime="20201029 12:44:19.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.378" endtime="20201029 12:44:19.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.375" endtime="20201029 12:44:19.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.435" endtime="20201029 12:44:19.772"></status>
</kw>
<msg timestamp="20201029 12:44:19.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02448125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:19.432" endtime="20201029 12:44:19.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02448125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024553069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:19.781" endtime="20201029 12:44:19.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.800" endtime="20201029 12:44:19.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.425" endtime="20201029 12:44:19.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.420" endtime="20201029 12:44:19.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:19.817" level="INFO">${RESULT} = [{'diff': 7.181900000000074e-05}, {'diff': 7.218000000000155e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.238899999999909e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.259700000000063e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:19.808" endtime="20201029 12:44:19.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:19.828" level="INFO">${ACCURACY} = {'diff': [7.181900000000074e-05, 7.218000000000155e-05, 7.262499999999977e-05, 7.238899999999909e-05, 7.262499999999977e-05, 7.259700000000063e-05, 7.232000000000072e-05, 7.251399999999922e-05, 7.2486...</msg>
<status status="PASS" starttime="20201029 12:44:19.819" endtime="20201029 12:44:19.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.840" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:44:19.837" endtime="20201029 12:44:19.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.845" level="INFO">VALUE: [7.181900000000074e-05, 7.218000000000155e-05, 7.262499999999977e-05, 7.238899999999909e-05, 7.262499999999977e-05, 7.259700000000063e-05, 7.232000000000072e-05, 7.251399999999922e-05, 7.248600000000008e-05, 7.243100000000127e-05, 7.27369999999998e-05, 7.201399999999872e-05, 7.191699999999773e-05, 7.182000000000022e-05, 7.18049999999977e-05, 7.222200000000026e-05, 7.177699999999856e-05, 7.249999999999965e-05, 7.262499999999977e-05, 7.179099999999813e-05, 7.216699999999798e-05, 7.238900000000256e-05, 7.237499999999952e-05, 7.272300000000023e-05, 7.212499999999927e-05, 7.247200000000051e-05, 7.184800000000283e-05, 7.193100000000077e-05, 7.18049999999977e-05, 7.242999999999833e-05, 7.181900000000074e-05, 7.259700000000063e-05, 7.191600000000173e-05, 7.188900000000206e-05, 7.272199999999729e-05, 7.231900000000124e-05, 7.216700000000145e-05, 7.243100000000127e-05, 7.201399999999872e-05, 7.259800000000011e-05, 7.180599999999718e-05, 7.215300000000188e-05, 7.217999999999808e-05, 7.258300000000106e-05, 7.268099999999805e-05, 7.181900000000074e-05, 7.26110000000002e-05, 7.237499999999952e-05, 7.187499999999902e-05, 7.259700000000063e-05]</msg>
<status status="PASS" starttime="20201029 12:44:19.842" endtime="20201029 12:44:19.853"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.830" endtime="20201029 12:44:19.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:19.864" endtime="20201029 12:44:19.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.860" endtime="20201029 12:44:19.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.857" endtime="20201029 12:44:19.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.373" endtime="20201029 12:44:19.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.372" endtime="20201029 12:44:19.889"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.912" endtime="20201029 12:44:19.933"></status>
</kw>
<msg timestamp="20201029 12:44:19.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.909" endtime="20201029 12:44:19.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:19.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:19.936" endtime="20201029 12:44:19.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.943" endtime="20201029 12:44:19.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.901" endtime="20201029 12:44:19.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.896" endtime="20201029 12:44:19.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:19.966" endtime="20201029 12:44:20.306"></status>
</kw>
<msg timestamp="20201029 12:44:20.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041174653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:19.963" endtime="20201029 12:44:20.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041174653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041248097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:20.316" endtime="20201029 12:44:20.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.334" endtime="20201029 12:44:20.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.955" endtime="20201029 12:44:20.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.951" endtime="20201029 12:44:20.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.352" level="INFO">${RESULT} = [{'diff': 7.34439999999989e-05}, {'diff': 7.359700000000163e-05}, {'diff': 7.32910000000031e-05}, {'diff': 7.327799999999607e-05}, {'diff': 7.373699999999733e-05}, {'diff': 7.290299999999916e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:20.343" endtime="20201029 12:44:20.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.361" level="INFO">${ACCURACY} = {'diff': [7.34439999999989e-05, 7.359700000000163e-05, 7.32910000000031e-05, 7.327799999999607e-05, 7.373699999999733e-05, 7.290299999999916e-05, 7.368100000000599e-05, 7.280600000000165e-05, 7.370899...</msg>
<status status="PASS" starttime="20201029 12:44:20.354" endtime="20201029 12:44:20.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.372" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.370" endtime="20201029 12:44:20.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.377" level="INFO">VALUE: [7.34439999999989e-05, 7.359700000000163e-05, 7.32910000000031e-05, 7.327799999999607e-05, 7.373699999999733e-05, 7.290299999999916e-05, 7.368100000000599e-05, 7.280600000000165e-05, 7.370899999999819e-05, 7.291699999999873e-05, 7.294499999999787e-05, 7.369499999999862e-05, 7.291699999999873e-05, 7.325000000000387e-05, 7.302700000000328e-05, 7.365200000000044e-05, 7.347200000000498e-05, 7.27360000000038e-05, 7.336100000000095e-05, 7.283400000000079e-05, 7.337500000000052e-05, 7.302799999999582e-05, 7.302800000000276e-05, 7.366699999999948e-05, 7.347299999999751e-05, 7.341599999999976e-05, 7.320800000000516e-05, 7.358299999999512e-05, 7.336100000000095e-05, 7.370800000000566e-05, 7.342999999999933e-05, 7.270800000000466e-05, 7.363900000000034e-05, 7.327800000000301e-05, 7.333300000000181e-05, 7.308400000000104e-05, 7.305599999999496e-05, 7.284700000000088e-05, 7.344499999999837e-05, 7.370799999999872e-05, 7.325000000000387e-05, 7.369499999999862e-05, 7.333299999999487e-05, 7.29439999999984e-05, 7.329200000000258e-05, 7.279200000000208e-05, 7.272199999999729e-05, 7.341699999999923e-05, 7.280600000000165e-05, 7.35839999999946e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.374" endtime="20201029 12:44:20.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.363" endtime="20201029 12:44:20.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.391" endtime="20201029 12:44:20.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.387" endtime="20201029 12:44:20.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.384" endtime="20201029 12:44:20.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.891" endtime="20201029 12:44:20.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:19.890" endtime="20201029 12:44:20.416"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.439" endtime="20201029 12:44:20.466"></status>
</kw>
<msg timestamp="20201029 12:44:20.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.436" endtime="20201029 12:44:20.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.470" endtime="20201029 12:44:20.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.476" endtime="20201029 12:44:20.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.428" endtime="20201029 12:44:20.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.422" endtime="20201029 12:44:20.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.500" endtime="20201029 12:44:20.838"></status>
</kw>
<msg timestamp="20201029 12:44:20.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04717325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047247806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:20.497" endtime="20201029 12:44:20.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04717325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047247806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:20.848" endtime="20201029 12:44:20.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.866" endtime="20201029 12:44:20.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.489" endtime="20201029 12:44:20.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.485" endtime="20201029 12:44:20.873"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:20.883" level="INFO">${RESULT} = [{'diff': 7.45560000000034e-05}, {'diff': 7.399999999999768e-05}, {'diff': 7.434700000000238e-05}, {'diff': 7.461099999999526e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.423599999999836e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:20.875" endtime="20201029 12:44:20.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:20.893" level="INFO">${ACCURACY} = {'diff': [7.45560000000034e-05, 7.399999999999768e-05, 7.434700000000238e-05, 7.461099999999526e-05, 7.462500000000177e-05, 7.423599999999836e-05, 7.427799999999707e-05, 7.427800000000401e-05, 7.40280...</msg>
<status status="PASS" starttime="20201029 12:44:20.886" endtime="20201029 12:44:20.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.904" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:44:20.902" endtime="20201029 12:44:20.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:20.909" level="INFO">VALUE: [7.45560000000034e-05, 7.399999999999768e-05, 7.434700000000238e-05, 7.461099999999526e-05, 7.462500000000177e-05, 7.423599999999836e-05, 7.427799999999707e-05, 7.427800000000401e-05, 7.402800000000376e-05, 7.402699999999734e-05, 7.412500000000127e-05, 7.438900000000109e-05, 7.466700000000048e-05, 7.466700000000048e-05, 7.404200000000333e-05, 7.440200000000119e-05, 7.383300000000231e-05, 7.44439999999999e-05, 7.398599999999811e-05, 7.447199999999904e-05, 7.437499999999458e-05, 7.45969999999957e-05, 7.44309999999998e-05, 7.470799999999972e-05, 7.383400000000179e-05, 7.379200000000308e-05, 7.383400000000179e-05, 7.425000000000487e-05, 7.448699999999808e-05, 7.386100000000145e-05, 7.374999999999743e-05, 7.445899999999894e-05, 7.445799999999947e-05, 7.46110000000022e-05, 7.42639999999975e-05, 7.387500000000102e-05, 7.462500000000177e-05, 7.450000000000512e-05, 7.413900000000084e-05, 7.424999999999793e-05, 7.447299999999851e-05, 7.402800000000376e-05, 7.42910000000041e-05, 7.390200000000069e-05, 7.415300000000041e-05, 7.383300000000231e-05, 7.388900000000059e-05, 7.405499999999648e-05, 7.440299999999372e-05, 7.424999999999793e-05]</msg>
<status status="PASS" starttime="20201029 12:44:20.906" endtime="20201029 12:44:20.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.895" endtime="20201029 12:44:20.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:20.923" endtime="20201029 12:44:20.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.918" endtime="20201029 12:44:20.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.915" endtime="20201029 12:44:20.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.418" endtime="20201029 12:44:20.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.417" endtime="20201029 12:44:20.948"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:20.971" endtime="20201029 12:44:20.993"></status>
</kw>
<msg timestamp="20201029 12:44:20.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.968" endtime="20201029 12:44:20.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:20.996" endtime="20201029 12:44:21.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.002" endtime="20201029 12:44:21.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.961" endtime="20201029 12:44:21.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.955" endtime="20201029 12:44:21.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.026" endtime="20201029 12:44:21.362"></status>
</kw>
<msg timestamp="20201029 12:44:21.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.023" endtime="20201029 12:44:21.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041461236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041536847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.371" endtime="20201029 12:44:21.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.390" endtime="20201029 12:44:21.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.015" endtime="20201029 12:44:21.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.011" endtime="20201029 12:44:21.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.407" level="INFO">${RESULT} = [{'diff': 7.56110000000032e-05}, {'diff': 7.536099999999601e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.522199999999979e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.551399999999875e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:21.399" endtime="20201029 12:44:21.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.418" level="INFO">${ACCURACY} = {'diff': [7.56110000000032e-05, 7.536099999999601e-05, 7.497199999999954e-05, 7.522199999999979e-05, 7.513900000000184e-05, 7.551399999999875e-05, 7.495899999999944e-05, 7.534799999999592e-05, 7.53750...</msg>
<status status="PASS" starttime="20201029 12:44:21.409" endtime="20201029 12:44:21.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.429" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.427" endtime="20201029 12:44:21.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.434" level="INFO">VALUE: [7.56110000000032e-05, 7.536099999999601e-05, 7.497199999999954e-05, 7.522199999999979e-05, 7.513900000000184e-05, 7.551399999999875e-05, 7.495899999999944e-05, 7.534799999999592e-05, 7.537500000000252e-05, 7.48189999999968e-05, 7.511200000000218e-05, 7.552799999999832e-05, 7.480499999999723e-05, 7.484700000000288e-05, 7.492999999999389e-05, 7.572200000000029e-05, 7.504199999999739e-05, 7.502800000000476e-05, 7.556999999999703e-05, 7.482000000000322e-05, 7.55839999999966e-05, 7.570900000000019e-05, 7.527799999999807e-05, 7.515300000000141e-05, 7.509799999999567e-05, 7.47769999999981e-05, 7.504100000000485e-05, 7.54440000000009e-05, 7.567999999999464e-05, 7.509800000000261e-05, 7.477799999999757e-05, 7.558300000000406e-05, 7.499999999999868e-05, 7.509700000000313e-05, 7.51110000000027e-05, 7.527800000000501e-05, 7.481999999999628e-05, 7.525000000000587e-05, 7.536099999999601e-05, 7.54440000000009e-05, 7.502799999999782e-05, 7.5069000000004e-05, 7.504199999999739e-05, 7.565299999999497e-05, 7.508299999999662e-05, 7.499999999999868e-05, 7.569400000000115e-05, 7.481999999999628e-05, 7.51110000000027e-05, 7.551299999999928e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.431" endtime="20201029 12:44:21.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.420" endtime="20201029 12:44:21.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.447" endtime="20201029 12:44:21.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.443" endtime="20201029 12:44:21.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.440" endtime="20201029 12:44:21.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.951" endtime="20201029 12:44:21.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:20.949" endtime="20201029 12:44:21.472"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.495" endtime="20201029 12:44:21.516"></status>
</kw>
<msg timestamp="20201029 12:44:21.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.492" endtime="20201029 12:44:21.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:21.520" endtime="20201029 12:44:21.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.526" endtime="20201029 12:44:21.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.484" endtime="20201029 12:44:21.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.478" endtime="20201029 12:44:21.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.550" endtime="20201029 12:44:21.890"></status>
</kw>
<msg timestamp="20201029 12:44:21.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.547" endtime="20201029 12:44:21.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041338597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041415236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:21.899" endtime="20201029 12:44:21.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:21.918" endtime="20201029 12:44:21.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.539" endtime="20201029 12:44:21.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.534" endtime="20201029 12:44:21.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:21.935" level="INFO">${RESULT} = [{'diff': 7.663900000000334e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.580499999999823e-05}, {'diff': 7.64169999999953e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.651399999999975e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:21.926" endtime="20201029 12:44:21.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:21.946" level="INFO">${ACCURACY} = {'diff': [7.663900000000334e-05, 7.651399999999975e-05, 7.580499999999823e-05, 7.64169999999953e-05, 7.629199999999864e-05, 7.651399999999975e-05, 7.59310000000013e-05, 7.629199999999864e-05, 7.627799...</msg>
<status status="PASS" starttime="20201029 12:44:21.937" endtime="20201029 12:44:21.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.957" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:44:21.955" endtime="20201029 12:44:21.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:21.963" level="INFO">VALUE: [7.663900000000334e-05, 7.651399999999975e-05, 7.580499999999823e-05, 7.64169999999953e-05, 7.629199999999864e-05, 7.651399999999975e-05, 7.59310000000013e-05, 7.629199999999864e-05, 7.627799999999907e-05, 7.630600000000515e-05, 7.617999999999514e-05, 7.580599999999771e-05, 7.587500000000302e-05, 7.598600000000011e-05, 7.670800000000172e-05, 7.61389999999959e-05, 7.662499999999683e-05, 7.650000000000018e-05, 7.577800000000551e-05, 7.58189999999978e-05, 7.581999999999728e-05, 7.580600000000465e-05, 7.624999999999993e-05, 7.584800000000336e-05, 7.627799999999907e-05, 7.637499999999658e-05, 7.59440000000014e-05, 7.661099999999726e-05, 7.611099999999676e-05, 7.608299999999762e-05, 7.58189999999978e-05, 7.580499999999823e-05, 7.63890000000031e-05, 7.662499999999683e-05, 7.601399999999925e-05, 7.606899999999805e-05, 7.624999999999993e-05, 7.594399999999446e-05, 7.615300000000241e-05, 7.59440000000014e-05, 7.650000000000018e-05, 7.66110000000042e-05, 7.577799999999857e-05, 7.581900000000474e-05, 7.606999999999753e-05, 7.624999999999993e-05, 7.601400000000619e-05, 7.634699999999744e-05, 7.647200000000104e-05, 7.58890000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:44:21.960" endtime="20201029 12:44:21.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.948" endtime="20201029 12:44:21.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:21.975" endtime="20201029 12:44:21.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.971" endtime="20201029 12:44:21.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.968" endtime="20201029 12:44:21.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.474" endtime="20201029 12:44:22.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:21.473" endtime="20201029 12:44:22.001"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.024" endtime="20201029 12:44:22.045"></status>
</kw>
<msg timestamp="20201029 12:44:22.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.020" endtime="20201029 12:44:22.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.048" endtime="20201029 12:44:22.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.055" endtime="20201029 12:44:22.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.013" endtime="20201029 12:44:22.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.007" endtime="20201029 12:44:22.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.078" endtime="20201029 12:44:22.464"></status>
</kw>
<msg timestamp="20201029 12:44:22.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041669986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.075" endtime="20201029 12:44:22.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041592264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041669986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.476" endtime="20201029 12:44:22.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.498" endtime="20201029 12:44:22.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.068" endtime="20201029 12:44:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.063" endtime="20201029 12:44:22.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:22.522" level="INFO">${RESULT} = [{'diff': 7.772200000000229e-05}, {'diff': 7.70969999999982e-05}, {'diff': 7.680499999999923e-05}, {'diff': 7.737499999999758e-05}, {'diff': 7.694499999999493e-05}, {'diff': 7.758299999999912e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:22.511" endtime="20201029 12:44:22.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:22.534" level="INFO">${ACCURACY} = {'diff': [7.772200000000229e-05, 7.70969999999982e-05, 7.680499999999923e-05, 7.737499999999758e-05, 7.694499999999493e-05, 7.758299999999912e-05, 7.758299999999912e-05, 7.77369999999944e-05, 7.702799...</msg>
<status status="PASS" starttime="20201029 12:44:22.525" endtime="20201029 12:44:22.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.548" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:44:22.545" endtime="20201029 12:44:22.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.554" level="INFO">VALUE: [7.772200000000229e-05, 7.70969999999982e-05, 7.680499999999923e-05, 7.737499999999758e-05, 7.694499999999493e-05, 7.758299999999912e-05, 7.758299999999912e-05, 7.77369999999944e-05, 7.702799999999982e-05, 7.704099999999992e-05, 7.75969999999987e-05, 7.730599999999921e-05, 7.679099999999967e-05, 7.684700000000488e-05, 7.718099999999561e-05, 7.677799999999957e-05, 7.715299999999647e-05, 7.74310000000028e-05, 7.727800000000007e-05, 7.681999999999828e-05, 7.745900000000194e-05, 7.740299999999672e-05, 7.745900000000194e-05, 7.72770000000006e-05, 7.749999999999424e-05, 7.730599999999921e-05, 7.719400000000265e-05, 7.680599999999871e-05, 7.772200000000229e-05, 7.679199999999914e-05, 7.775000000000143e-05, 7.766700000000348e-05, 7.691700000000273e-05, 7.772300000000176e-05, 7.743099999999586e-05, 7.757000000000597e-05, 7.717999999999614e-05, 7.691599999999632e-05, 7.758299999999912e-05, 7.725000000000093e-05, 7.702799999999982e-05, 7.680499999999923e-05, 7.716700000000298e-05, 7.761099999999826e-05, 7.736100000000495e-05, 7.718100000000255e-05, 7.718000000000308e-05, 7.723600000000136e-05, 7.741600000000376e-05, 7.720800000000222e-05]</msg>
<status status="PASS" starttime="20201029 12:44:22.551" endtime="20201029 12:44:22.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.537" endtime="20201029 12:44:22.557"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.568" endtime="20201029 12:44:22.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.564" endtime="20201029 12:44:22.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.561" endtime="20201029 12:44:22.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.003" endtime="20201029 12:44:22.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.001" endtime="20201029 12:44:22.593"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.616" endtime="20201029 12:44:22.640"></status>
</kw>
<msg timestamp="20201029 12:44:22.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.613" endtime="20201029 12:44:22.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.643" endtime="20201029 12:44:22.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.649" endtime="20201029 12:44:22.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.606" endtime="20201029 12:44:22.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.600" endtime="20201029 12:44:22.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.673" endtime="20201029 12:44:23.042"></status>
</kw>
<msg timestamp="20201029 12:44:23.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042980903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:22.670" endtime="20201029 12:44:23.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042980903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.052" endtime="20201029 12:44:23.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.071" endtime="20201029 12:44:23.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.662" endtime="20201029 12:44:23.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.658" endtime="20201029 12:44:23.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.090" level="INFO">${RESULT} = [{'diff': 7.872199999999635e-05}, {'diff': 7.86389999999984e-05}, {'diff': 7.873600000000286e-05}, {'diff': 7.849999999999524e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.836099999999901e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:23.080" endtime="20201029 12:44:23.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.100" level="INFO">${ACCURACY} = {'diff': [7.872199999999635e-05, 7.86389999999984e-05, 7.873600000000286e-05, 7.849999999999524e-05, 7.830600000000021e-05, 7.836099999999901e-05, 7.794500000000287e-05, 7.80969999999992e-05, 7.855600...</msg>
<status status="PASS" starttime="20201029 12:44:23.092" endtime="20201029 12:44:23.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.112" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.109" endtime="20201029 12:44:23.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.118" level="INFO">VALUE: [7.872199999999635e-05, 7.86389999999984e-05, 7.873600000000286e-05, 7.849999999999524e-05, 7.830600000000021e-05, 7.836099999999901e-05, 7.794500000000287e-05, 7.80969999999992e-05, 7.855600000000046e-05, 7.843000000000433e-05, 7.844399999999696e-05, 7.790199999999775e-05, 7.777800000000057e-05, 7.848600000000261e-05, 7.773600000000186e-05, 7.856899999999362e-05, 7.829200000000064e-05, 7.834699999999944e-05, 7.848600000000261e-05, 7.859799999999917e-05, 7.845800000000347e-05, 7.786099999999851e-05, 7.833299999999987e-05, 7.775000000000143e-05, 7.791599999999732e-05, 7.774999999999449e-05, 7.870799999999678e-05, 7.804200000000039e-05, 7.802800000000082e-05, 7.861099999999926e-05, 7.815299999999747e-05, 7.827800000000107e-05, 7.800000000000168e-05, 7.781999999999928e-05, 7.869499999999668e-05, 7.836099999999901e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.787500000000502e-05, 7.818099999999661e-05, 7.815300000000441e-05, 7.790299999999722e-05, 7.794499999999593e-05, 7.781999999999928e-05, 7.783399999999885e-05, 7.868100000000405e-05, 7.815299999999747e-05, 7.793000000000383e-05, 7.851399999999481e-05, 7.790299999999722e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.114" endtime="20201029 12:44:23.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.102" endtime="20201029 12:44:23.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.133" endtime="20201029 12:44:23.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.127" endtime="20201029 12:44:23.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.124" endtime="20201029 12:44:23.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.596" endtime="20201029 12:44:23.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.594" endtime="20201029 12:44:23.159"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.183" endtime="20201029 12:44:23.206"></status>
</kw>
<msg timestamp="20201029 12:44:23.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.180" endtime="20201029 12:44:23.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.209" endtime="20201029 12:44:23.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.216" endtime="20201029 12:44:23.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.172" endtime="20201029 12:44:23.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.166" endtime="20201029 12:44:23.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.241" endtime="20201029 12:44:23.603"></status>
</kw>
<msg timestamp="20201029 12:44:23.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04410525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044184722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.238" endtime="20201029 12:44:23.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04410525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044184722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:23.613" endtime="20201029 12:44:23.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.633" endtime="20201029 12:44:23.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.230" endtime="20201029 12:44:23.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.225" endtime="20201029 12:44:23.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:23.651" level="INFO">${RESULT} = [{'diff': 7.947200000000404e-05}, {'diff': 7.893099999999736e-05}, {'diff': 7.970799999999778e-05}, {'diff': 7.968099999999811e-05}, {'diff': 7.924999999999599e-05}, {'diff': 7.95840000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:23.642" endtime="20201029 12:44:23.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:23.663" level="INFO">${ACCURACY} = {'diff': [7.947200000000404e-05, 7.893099999999736e-05, 7.970799999999778e-05, 7.968099999999811e-05, 7.924999999999599e-05, 7.95840000000006e-05, 7.89719999999966e-05, 7.957000000000103e-05, 7.957000...</msg>
<status status="PASS" starttime="20201029 12:44:23.654" endtime="20201029 12:44:23.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.675" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:44:23.672" endtime="20201029 12:44:23.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.681" level="INFO">VALUE: [7.947200000000404e-05, 7.893099999999736e-05, 7.970799999999778e-05, 7.968099999999811e-05, 7.924999999999599e-05, 7.95840000000006e-05, 7.89719999999966e-05, 7.957000000000103e-05, 7.957000000000103e-05, 7.872200000000329e-05, 7.972199999999735e-05, 7.940299999999872e-05, 7.877800000000157e-05, 7.902800000000182e-05, 7.916699999999804e-05, 7.872200000000329e-05, 7.906999999999359e-05, 7.927800000000207e-05, 7.924999999999599e-05, 7.948599999999667e-05, 7.887499999999908e-05, 7.911199999999924e-05, 7.94719999999971e-05, 7.94719999999971e-05, 7.966699999999854e-05, 7.886099999999951e-05, 7.893099999999736e-05, 7.915299999999847e-05, 7.89169999999978e-05, 7.969499999999768e-05, 7.915300000000541e-05, 7.948599999999667e-05, 7.883300000000037e-05, 7.937499999999958e-05, 7.908300000000063e-05, 7.881899999999387e-05, 7.905500000000149e-05, 7.883399999999985e-05, 7.947200000000404e-05, 7.958300000000113e-05, 7.952800000000232e-05, 7.955600000000146e-05, 7.925000000000293e-05, 7.933300000000088e-05, 7.915299999999847e-05, 7.976399999999606e-05, 7.943099999999786e-05, 7.9151999999999e-05, 7.925000000000293e-05, 7.92640000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:44:23.677" endtime="20201029 12:44:23.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.665" endtime="20201029 12:44:23.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:23.694" endtime="20201029 12:44:23.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.690" endtime="20201029 12:44:23.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.687" endtime="20201029 12:44:23.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.161" endtime="20201029 12:44:23.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.160" endtime="20201029 12:44:23.733"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.759" endtime="20201029 12:44:23.781"></status>
</kw>
<msg timestamp="20201029 12:44:23.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.755" endtime="20201029 12:44:23.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:23.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:23.784" endtime="20201029 12:44:23.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.791" endtime="20201029 12:44:23.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.747" endtime="20201029 12:44:23.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.740" endtime="20201029 12:44:23.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:23.816" endtime="20201029 12:44:24.179"></status>
</kw>
<msg timestamp="20201029 12:44:24.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057463222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057543944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:23.813" endtime="20201029 12:44:24.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057463222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057543944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.189" endtime="20201029 12:44:24.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.212" endtime="20201029 12:44:24.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.805" endtime="20201029 12:44:24.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.800" endtime="20201029 12:44:24.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.230" level="INFO">${RESULT} = [{'diff': 8.072199999999835e-05}, {'diff': 7.983400000000085e-05}, {'diff': 8.026300000000403e-05}, {'diff': 8.002700000000335e-05}, {'diff': 7.995799999999803e-05}, {'diff': 8.022199999999785e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:24.221" endtime="20201029 12:44:24.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.242" level="INFO">${ACCURACY} = {'diff': [8.072199999999835e-05, 7.983400000000085e-05, 8.026300000000403e-05, 8.002700000000335e-05, 7.995799999999803e-05, 8.022199999999785e-05, 7.98190000000018e-05, 8.054200000000289e-05, 8.02219...</msg>
<status status="PASS" starttime="20201029 12:44:24.232" endtime="20201029 12:44:24.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.254" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.251" endtime="20201029 12:44:24.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.260" level="INFO">VALUE: [8.072199999999835e-05, 7.983400000000085e-05, 8.026300000000403e-05, 8.002700000000335e-05, 7.995799999999803e-05, 8.022199999999785e-05, 7.98190000000018e-05, 8.054200000000289e-05, 8.022199999999785e-05, 8.069499999999868e-05, 8.045900000000494e-05, 8.040200000000025e-05, 8.069499999999868e-05, 8.042999999999939e-05, 8.013800000000043e-05, 8.013800000000043e-05, 7.980500000000224e-05, 8.024999999999699e-05, 7.995799999999803e-05, 8.058300000000213e-05, 7.995799999999803e-05, 8.070799999999878e-05, 7.968099999999811e-05, 7.994499999999793e-05, 8.07090000000052e-05, 8.042999999999939e-05, 7.992999999999889e-05, 8.067999999999964e-05, 8.070799999999878e-05, 8.038900000000015e-05, 7.976399999999606e-05, 8.025000000000393e-05, 8.004200000000239e-05, 7.99589999999975e-05, 8.011100000000076e-05, 7.983300000000138e-05, 8.036100000000101e-05, 8.01389999999999e-05, 8.051399999999681e-05, 7.983300000000138e-05, 8.022199999999785e-05, 8.069400000000615e-05, 8.017999999999914e-05, 8.037500000000058e-05, 8.048599999999767e-05, 7.981999999999434e-05, 8.001400000000325e-05, 8.049999999999724e-05, 8.036100000000101e-05, 7.982000000000128e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.256" endtime="20201029 12:44:24.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.244" endtime="20201029 12:44:24.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.273" endtime="20201029 12:44:24.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.269" endtime="20201029 12:44:24.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.266" endtime="20201029 12:44:24.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.735" endtime="20201029 12:44:24.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:23.734" endtime="20201029 12:44:24.299"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.324" endtime="20201029 12:44:24.348"></status>
</kw>
<msg timestamp="20201029 12:44:24.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.320" endtime="20201029 12:44:24.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.352" endtime="20201029 12:44:24.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.358" endtime="20201029 12:44:24.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.312" endtime="20201029 12:44:24.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.306" endtime="20201029 12:44:24.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.384" endtime="20201029 12:44:24.750"></status>
</kw>
<msg timestamp="20201029 12:44:24.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044085778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044167403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.380" endtime="20201029 12:44:24.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044085778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044167403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:24.761" endtime="20201029 12:44:24.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.781" endtime="20201029 12:44:24.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.372" endtime="20201029 12:44:24.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.367" endtime="20201029 12:44:24.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:24.800" level="INFO">${RESULT} = [{'diff': 8.162500000000183e-05}, {'diff': 8.100000000000468e-05}, {'diff': 8.084799999999448e-05}, {'diff': 8.165300000000097e-05}, {'diff': 8.170899999999925e-05}, {'diff': 8.09169999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:24.790" endtime="20201029 12:44:24.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:24.812" level="INFO">${ACCURACY} = {'diff': [8.162500000000183e-05, 8.100000000000468e-05, 8.084799999999448e-05, 8.165300000000097e-05, 8.170899999999925e-05, 8.09169999999998e-05, 8.149999999999824e-05, 8.116600000000057e-05, 8.16940...</msg>
<status status="PASS" starttime="20201029 12:44:24.802" endtime="20201029 12:44:24.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.824" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:44:24.822" endtime="20201029 12:44:24.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.830" level="INFO">VALUE: [8.162500000000183e-05, 8.100000000000468e-05, 8.084799999999448e-05, 8.165300000000097e-05, 8.170899999999925e-05, 8.09169999999998e-05, 8.149999999999824e-05, 8.116600000000057e-05, 8.169400000000021e-05, 8.12640000000045e-05, 8.106899999999612e-05, 8.138899999999422e-05, 8.077799999999663e-05, 8.115300000000047e-05, 8.170799999999978e-05, 8.107000000000253e-05, 8.156999999999609e-05, 8.074999999999749e-05, 8.092999999999989e-05, 8.092999999999989e-05, 8.14170000000003e-05, 8.127800000000407e-05, 8.127799999999713e-05, 8.106999999999559e-05, 8.120799999999928e-05, 8.108399999999516e-05, 8.112500000000133e-05, 8.130600000000321e-05, 8.105600000000296e-05, 8.134800000000192e-05, 8.093099999999936e-05, 8.079200000000314e-05, 8.161100000000227e-05, 8.102800000000382e-05, 8.105500000000349e-05, 8.166600000000107e-05, 8.152799999999738e-05, 8.137500000000158e-05, 8.101399999999731e-05, 8.155600000000346e-05, 8.169499999999968e-05, 8.138900000000115e-05, 8.105500000000349e-05, 8.134700000000245e-05, 8.150000000000518e-05, 8.148599999999867e-05, 8.105500000000349e-05, 8.077799999999663e-05, 8.137499999999465e-05, 8.127799999999713e-05]</msg>
<status status="PASS" starttime="20201029 12:44:24.827" endtime="20201029 12:44:24.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.814" endtime="20201029 12:44:24.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:24.844" endtime="20201029 12:44:24.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.839" endtime="20201029 12:44:24.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.836" endtime="20201029 12:44:24.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.301" endtime="20201029 12:44:24.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.300" endtime="20201029 12:44:24.870"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.894" endtime="20201029 12:44:24.919"></status>
</kw>
<msg timestamp="20201029 12:44:24.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.891" endtime="20201029 12:44:24.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:24.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:24.922" endtime="20201029 12:44:24.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.929" endtime="20201029 12:44:24.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.883" endtime="20201029 12:44:24.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.877" endtime="20201029 12:44:24.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:24.955" endtime="20201029 12:44:25.329"></status>
</kw>
<msg timestamp="20201029 12:44:25.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0457495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045832069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:24.951" endtime="20201029 12:44:25.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0457495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045832069, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:25.339" endtime="20201029 12:44:25.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.359" endtime="20201029 12:44:25.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.943" endtime="20201029 12:44:25.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.938" endtime="20201029 12:44:25.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.378" level="INFO">${RESULT} = [{'diff': 8.256900000000456e-05}, {'diff': 8.254199999999795e-05}, {'diff': 8.206999999999659e-05}, {'diff': 8.204100000000492e-05}, {'diff': 8.194400000000046e-05}, {'diff': 8.193000000000089e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:25.368" endtime="20201029 12:44:25.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.388" level="INFO">${ACCURACY} = {'diff': [8.256900000000456e-05, 8.254199999999795e-05, 8.206999999999659e-05, 8.204100000000492e-05, 8.194400000000046e-05, 8.193000000000089e-05, 8.22919999999977e-05, 8.259699999999676e-05, 8.24449...</msg>
<status status="PASS" starttime="20201029 12:44:25.380" endtime="20201029 12:44:25.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.400" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.397" endtime="20201029 12:44:25.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.406" level="INFO">VALUE: [8.256900000000456e-05, 8.254199999999795e-05, 8.206999999999659e-05, 8.204100000000492e-05, 8.194400000000046e-05, 8.193000000000089e-05, 8.22919999999977e-05, 8.259699999999676e-05, 8.24449999999935e-05, 8.22640000000055e-05, 8.216700000000104e-05, 8.258299999999719e-05, 8.2459e-05, 8.227699999999866e-05, 8.20269999999984e-05, 8.273599999999992e-05, 8.186099999999558e-05, 8.272200000000035e-05, 8.233300000000388e-05, 8.24720000000001e-05, 8.204200000000439e-05, 8.250000000000618e-05, 8.272299999999982e-05, 8.177800000000457e-05, 8.194400000000046e-05, 8.270800000000078e-05, 8.205599999999702e-05, 8.223599999999942e-05, 8.240300000000172e-05, 8.258299999999719e-05, 8.256899999999762e-05, 8.183300000000338e-05, 8.243100000000086e-05, 8.180599999999677e-05, 8.208299999999669e-05, 8.240200000000225e-05, 8.1764000000005e-05, 8.261099999999633e-05, 8.258299999999719e-05, 8.213899999999497e-05, 8.193000000000089e-05, 8.216700000000104e-05, 8.190300000000122e-05, 8.245800000000053e-05, 8.180599999999677e-05, 8.181999999999634e-05, 8.256999999999709e-05, 8.248699999999914e-05, 8.224999999999899e-05, 8.238800000000268e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.402" endtime="20201029 12:44:25.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.390" endtime="20201029 12:44:25.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.427" endtime="20201029 12:44:25.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.421" endtime="20201029 12:44:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.418" endtime="20201029 12:44:25.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.872" endtime="20201029 12:44:25.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:24.871" endtime="20201029 12:44:25.452"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.477" endtime="20201029 12:44:25.500"></status>
</kw>
<msg timestamp="20201029 12:44:25.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.474" endtime="20201029 12:44:25.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.503" endtime="20201029 12:44:25.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.510" endtime="20201029 12:44:25.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.466" endtime="20201029 12:44:25.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.460" endtime="20201029 12:44:25.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.536" endtime="20201029 12:44:25.891"></status>
</kw>
<msg timestamp="20201029 12:44:25.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043877042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043959847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.532" endtime="20201029 12:44:25.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043877042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043959847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:25.895" endtime="20201029 12:44:25.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.904" endtime="20201029 12:44:25.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.524" endtime="20201029 12:44:25.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.519" endtime="20201029 12:44:25.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:25.912" level="INFO">${RESULT} = [{'diff': 8.280500000000524e-05}, {'diff': 8.311100000000377e-05}, {'diff': 8.347199999999416e-05}, {'diff': 8.32919999999987e-05}, {'diff': 8.304200000000539e-05}, {'diff': 8.286100000000352e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:25.908" endtime="20201029 12:44:25.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:25.920" level="INFO">${ACCURACY} = {'diff': [8.280500000000524e-05, 8.311100000000377e-05, 8.347199999999416e-05, 8.32919999999987e-05, 8.304200000000539e-05, 8.286100000000352e-05, 8.34720000000011e-05, 8.274999999999949e-05, 8.304199...</msg>
<status status="PASS" starttime="20201029 12:44:25.913" endtime="20201029 12:44:25.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.926" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:44:25.924" endtime="20201029 12:44:25.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.928" level="INFO">VALUE: [8.280500000000524e-05, 8.311100000000377e-05, 8.347199999999416e-05, 8.32919999999987e-05, 8.304200000000539e-05, 8.286100000000352e-05, 8.34720000000011e-05, 8.274999999999949e-05, 8.304199999999845e-05, 8.347300000000057e-05, 8.274999999999949e-05, 8.361099999999733e-05, 8.295800000000103e-05, 8.294400000000146e-05, 8.338899999999622e-05, 8.281899999999787e-05, 8.281999999999734e-05, 8.280600000000471e-05, 8.359699999999776e-05, 8.327699999999966e-05, 8.290300000000222e-05, 8.281899999999787e-05, 8.34720000000011e-05, 8.329099999999923e-05, 8.292999999999495e-05, 8.306899999999812e-05, 8.270800000000078e-05, 8.359699999999776e-05, 8.322200000000085e-05, 8.369500000000168e-05, 8.286100000000352e-05, 8.29170000000018e-05, 8.341600000000282e-05, 8.370800000000178e-05, 8.323600000000042e-05, 8.342999999999545e-05, 8.290300000000222e-05, 8.277799999999863e-05, 8.351399999999981e-05, 8.283299999999744e-05, 8.372200000000135e-05, 8.327799999999913e-05, 8.320900000000075e-05, 8.280599999999777e-05, 8.279200000000514e-05, 8.326399999999956e-05, 8.315300000000247e-05, 8.322200000000085e-05, 8.28190000000048e-05, 8.336100000000402e-05]</msg>
<status status="PASS" starttime="20201029 12:44:25.927" endtime="20201029 12:44:25.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.921" endtime="20201029 12:44:25.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.935" endtime="20201029 12:44:25.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.932" endtime="20201029 12:44:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.931" endtime="20201029 12:44:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.455" endtime="20201029 12:44:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.454" endtime="20201029 12:44:25.956"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.967" endtime="20201029 12:44:25.986"></status>
</kw>
<msg timestamp="20201029 12:44:25.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.965" endtime="20201029 12:44:25.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.988" endtime="20201029 12:44:25.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.991" endtime="20201029 12:44:25.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.962" endtime="20201029 12:44:25.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.959" endtime="20201029 12:44:25.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.003" endtime="20201029 12:44:26.349"></status>
</kw>
<msg timestamp="20201029 12:44:26.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.001" endtime="20201029 12:44:26.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024945542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025029681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.359" endtime="20201029 12:44:26.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.379" endtime="20201029 12:44:26.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.997" endtime="20201029 12:44:26.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.995" endtime="20201029 12:44:26.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.397" level="INFO">${RESULT} = [{'diff': 8.413900000000044e-05}, {'diff': 8.384700000000148e-05}, {'diff': 8.447199999999863e-05}, {'diff': 8.372199999999788e-05}, {'diff': 8.438899999999722e-05}, {'diff': 8.402800000000335e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:26.388" endtime="20201029 12:44:26.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.409" level="INFO">${ACCURACY} = {'diff': [8.413900000000044e-05, 8.384700000000148e-05, 8.447199999999863e-05, 8.372199999999788e-05, 8.438899999999722e-05, 8.402800000000335e-05, 8.384700000000148e-05, 8.37919999999992e-05, 8.42359...</msg>
<status status="PASS" starttime="20201029 12:44:26.399" endtime="20201029 12:44:26.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.421" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.418" endtime="20201029 12:44:26.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.427" level="INFO">VALUE: [8.413900000000044e-05, 8.384700000000148e-05, 8.447199999999863e-05, 8.372199999999788e-05, 8.438899999999722e-05, 8.402800000000335e-05, 8.384700000000148e-05, 8.37919999999992e-05, 8.423599999999795e-05, 8.455500000000005e-05, 8.438800000000121e-05, 8.41110000000013e-05, 8.3846999999998e-05, 8.426400000000056e-05, 8.456900000000309e-05, 8.44859999999982e-05, 8.440300000000026e-05, 8.426400000000056e-05, 8.413900000000044e-05, 8.404199999999945e-05, 8.461099999999833e-05, 8.4153e-05, 8.469499999999922e-05, 8.461099999999833e-05, 8.436200000000102e-05, 8.394400000000246e-05, 8.384700000000148e-05, 8.46110000000018e-05, 8.46530000000005e-05, 8.408299999999869e-05, 8.470799999999931e-05, 8.402799999999988e-05, 8.46249999999979e-05, 8.427800000000013e-05, 8.413900000000044e-05, 8.475000000000149e-05, 8.440200000000078e-05, 8.391699999999933e-05, 8.377700000000016e-05, 8.386099999999758e-05, 8.438900000000069e-05, 8.466700000000008e-05, 8.459699999999876e-05, 8.416699999999958e-05, 8.3846999999998e-05, 8.448600000000167e-05, 8.463900000000094e-05, 8.405600000000249e-05, 8.438900000000069e-05, 8.377700000000016e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.423" endtime="20201029 12:44:26.428"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.411" endtime="20201029 12:44:26.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:26.440" endtime="20201029 12:44:26.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.436" endtime="20201029 12:44:26.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.433" endtime="20201029 12:44:26.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.957" endtime="20201029 12:44:26.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.956" endtime="20201029 12:44:26.466"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.490" endtime="20201029 12:44:26.512"></status>
</kw>
<msg timestamp="20201029 12:44:26.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.487" endtime="20201029 12:44:26.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:26.516" endtime="20201029 12:44:26.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.523" endtime="20201029 12:44:26.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.479" endtime="20201029 12:44:26.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.473" endtime="20201029 12:44:26.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.548" endtime="20201029 12:44:26.914"></status>
</kw>
<msg timestamp="20201029 12:44:26.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043708861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.544" endtime="20201029 12:44:26.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043708861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043793819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:26.924" endtime="20201029 12:44:26.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:26.944" endtime="20201029 12:44:26.948"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.537" endtime="20201029 12:44:26.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.531" endtime="20201029 12:44:26.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:26.962" level="INFO">${RESULT} = [{'diff': 8.495799999999609e-05}, {'diff': 8.491599999999738e-05}, {'diff': 8.55970000000067e-05}, {'diff': 8.54449999999965e-05}, {'diff': 8.495800000000303e-05}, {'diff': 8.501400000000131e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:26.953" endtime="20201029 12:44:26.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:26.972" level="INFO">${ACCURACY} = {'diff': [8.495799999999609e-05, 8.491599999999738e-05, 8.55970000000067e-05, 8.54449999999965e-05, 8.495800000000303e-05, 8.501400000000131e-05, 8.495799999999609e-05, 8.559699999999976e-05, 8.562499...</msg>
<status status="PASS" starttime="20201029 12:44:26.965" endtime="20201029 12:44:26.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.984" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:44:26.982" endtime="20201029 12:44:26.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:26.990" level="INFO">VALUE: [8.495799999999609e-05, 8.491599999999738e-05, 8.55970000000067e-05, 8.54449999999965e-05, 8.495800000000303e-05, 8.501400000000131e-05, 8.495799999999609e-05, 8.559699999999976e-05, 8.56249999999989e-05, 8.51249999999984e-05, 8.538899999999822e-05, 8.527800000000113e-05, 8.490200000000475e-05, 8.490200000000475e-05, 8.488900000000466e-05, 8.558300000000019e-05, 8.481899999999987e-05, 8.483299999999944e-05, 8.556900000000062e-05, 8.47920000000002e-05, 8.548600000000267e-05, 8.538900000000516e-05, 8.523599999999548e-05, 8.545799999999659e-05, 8.554200000000095e-05, 8.508299999999969e-05, 8.500000000000174e-05, 8.494400000000346e-05, 8.548599999999573e-05, 8.558300000000019e-05, 8.511099999999883e-05, 8.54999999999953e-05, 8.54449999999965e-05, 8.526400000000156e-05, 8.51390000000049e-05, 8.54170000000043e-05, 8.481999999999934e-05, 8.483299999999944e-05, 8.502700000000141e-05, 8.551399999999487e-05, 8.522199999999591e-05, 8.494400000000346e-05, 8.477800000000063e-05, 8.51249999999984e-05, 8.515299999999754e-05, 8.550000000000224e-05, 8.55129999999954e-05, 8.555600000000052e-05, 8.497199999999566e-05, 8.569499999999675e-05]</msg>
<status status="PASS" starttime="20201029 12:44:26.987" endtime="20201029 12:44:26.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.974" endtime="20201029 12:44:26.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.007" endtime="20201029 12:44:27.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.999" endtime="20201029 12:44:27.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.996" endtime="20201029 12:44:27.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.468" endtime="20201029 12:44:27.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:26.467" endtime="20201029 12:44:27.034"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.058" endtime="20201029 12:44:27.081"></status>
</kw>
<msg timestamp="20201029 12:44:27.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.054" endtime="20201029 12:44:27.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.085" endtime="20201029 12:44:27.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.091" endtime="20201029 12:44:27.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.047" endtime="20201029 12:44:27.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.041" endtime="20201029 12:44:27.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.115" endtime="20201029 12:44:27.452"></status>
</kw>
<msg timestamp="20201029 12:44:27.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045139792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045226514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.111" endtime="20201029 12:44:27.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045139792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045226514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.462" endtime="20201029 12:44:27.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.480" endtime="20201029 12:44:27.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.104" endtime="20201029 12:44:27.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.099" endtime="20201029 12:44:27.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:27.498" level="INFO">${RESULT} = [{'diff': 8.672200000000435e-05}, {'diff': 8.648600000000367e-05}, {'diff': 8.672300000000382e-05}, {'diff': 8.579199999999426e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.647199999999716e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:27.489" endtime="20201029 12:44:27.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:27.507" level="INFO">${ACCURACY} = {'diff': [8.672200000000435e-05, 8.648600000000367e-05, 8.672300000000382e-05, 8.579199999999426e-05, 8.66249999999999e-05, 8.647199999999716e-05, 8.670799999999784e-05, 8.626400000000256e-05, 8.62499...</msg>
<status status="PASS" starttime="20201029 12:44:27.500" endtime="20201029 12:44:27.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.518" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:44:27.516" endtime="20201029 12:44:27.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.524" level="INFO">VALUE: [8.672200000000435e-05, 8.648600000000367e-05, 8.672300000000382e-05, 8.579199999999426e-05, 8.66249999999999e-05, 8.647199999999716e-05, 8.670799999999784e-05, 8.626400000000256e-05, 8.624999999999605e-05, 8.606900000000112e-05, 8.670799999999784e-05, 8.590299999999829e-05, 8.605599999999408e-05, 8.591699999999786e-05, 8.623599999999648e-05, 8.576400000000206e-05, 8.636199999999955e-05, 8.59170000000048e-05, 8.66249999999999e-05, 8.63470000000005e-05, 8.66249999999999e-05, 8.656900000000162e-05, 8.650000000000324e-05, 8.659700000000076e-05, 8.634699999999357e-05, 8.601400000000231e-05, 8.625000000000299e-05, 8.604100000000198e-05, 8.592999999999795e-05, 8.627800000000213e-05, 8.659700000000076e-05, 8.63470000000005e-05, 8.652800000000238e-05, 8.623600000000342e-05, 8.626400000000256e-05, 8.669400000000521e-05, 8.638899999999922e-05, 8.593099999999743e-05, 8.659800000000023e-05, 8.652800000000238e-05, 8.648599999999673e-05, 8.625000000000299e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.64720000000041e-05, 8.591699999999786e-05, 8.631900000000137e-05, 8.583399999999991e-05, 8.593099999999743e-05, 8.66119999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:44:27.521" endtime="20201029 12:44:27.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.509" endtime="20201029 12:44:27.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:27.538" endtime="20201029 12:44:27.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.532" endtime="20201029 12:44:27.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.529" endtime="20201029 12:44:27.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.037" endtime="20201029 12:44:27.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.035" endtime="20201029 12:44:27.563"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.586" endtime="20201029 12:44:27.608"></status>
</kw>
<msg timestamp="20201029 12:44:27.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.582" endtime="20201029 12:44:27.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:27.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:27.611" endtime="20201029 12:44:27.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.618" endtime="20201029 12:44:27.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.575" endtime="20201029 12:44:27.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.569" endtime="20201029 12:44:27.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:27.641" endtime="20201029 12:44:27.992"></status>
</kw>
<msg timestamp="20201029 12:44:28.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041264042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041351778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:27.638" endtime="20201029 12:44:28.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041264042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041351778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.003" endtime="20201029 12:44:28.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.023" endtime="20201029 12:44:28.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.630" endtime="20201029 12:44:28.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.626" endtime="20201029 12:44:28.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.041" level="INFO">${RESULT} = [{'diff': 8.773599999999798e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.776299999999765e-05}, {'diff': 8.759700000000176e-05}, {'diff': 8.712499999999346e-05}, {'diff': 8.693100000000537e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:28.032" endtime="20201029 12:44:28.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.052" level="INFO">${ACCURACY} = {'diff': [8.773599999999798e-05, 8.744399999999902e-05, 8.776299999999765e-05, 8.759700000000176e-05, 8.712499999999346e-05, 8.693100000000537e-05, 8.773599999999798e-05, 8.705500000000255e-05, 8.7333...</msg>
<status status="PASS" starttime="20201029 12:44:28.043" endtime="20201029 12:44:28.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.064" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.062" endtime="20201029 12:44:28.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.070" level="INFO">VALUE: [8.773599999999798e-05, 8.744399999999902e-05, 8.776299999999765e-05, 8.759700000000176e-05, 8.712499999999346e-05, 8.693100000000537e-05, 8.773599999999798e-05, 8.705500000000255e-05, 8.733300000000194e-05, 8.702700000000341e-05, 8.718099999999868e-05, 8.679199999999526e-05, 8.750000000000424e-05, 8.691699999999886e-05, 8.726399999999662e-05, 8.733300000000194e-05, 8.71799999999992e-05, 8.722299999999739e-05, 8.740200000000031e-05, 8.759700000000176e-05, 8.726399999999662e-05, 8.748599999999773e-05, 8.691699999999886e-05, 8.737500000000065e-05, 8.676400000000306e-05, 8.73470000000015e-05, 8.682000000000134e-05, 8.718099999999868e-05, 8.719399999999877e-05, 8.768099999999918e-05, 8.729099999999629e-05, 8.680499999999536e-05, 8.71799999999992e-05, 8.695799999999809e-05, 8.723600000000442e-05, 8.691699999999886e-05, 8.752799999999644e-05, 8.682000000000134e-05, 8.686200000000005e-05, 8.677800000000263e-05, 8.693099999999843e-05, 8.731900000000237e-05, 8.704100000000298e-05, 8.686100000000058e-05, 8.724999999999705e-05, 8.6847000000001e-05, 8.740299999999979e-05, 8.718099999999868e-05, 8.768099999999918e-05, 8.683400000000091e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.067" endtime="20201029 12:44:28.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.055" endtime="20201029 12:44:28.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.084" endtime="20201029 12:44:28.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.079" endtime="20201029 12:44:28.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.076" endtime="20201029 12:44:28.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.565" endtime="20201029 12:44:28.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:27.564" endtime="20201029 12:44:28.110"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.134" endtime="20201029 12:44:28.157"></status>
</kw>
<msg timestamp="20201029 12:44:28.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.131" endtime="20201029 12:44:28.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.161" endtime="20201029 12:44:28.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.167" endtime="20201029 12:44:28.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.123" endtime="20201029 12:44:28.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.117" endtime="20201029 12:44:28.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.193" endtime="20201029 12:44:28.555"></status>
</kw>
<msg timestamp="20201029 12:44:28.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043887333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.189" endtime="20201029 12:44:28.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043887333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.565" endtime="20201029 12:44:28.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.585" endtime="20201029 12:44:28.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.181" endtime="20201029 12:44:28.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.176" endtime="20201029 12:44:28.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:28.604" level="INFO">${RESULT} = [{'diff': 8.830599999999633e-05}, {'diff': 8.801399999999737e-05}, {'diff': 8.813900000000097e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.82920000000037e-05}, {'diff': 8.795799999999909e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:28.594" endtime="20201029 12:44:28.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:28.616" level="INFO">${ACCURACY} = {'diff': [8.830599999999633e-05, 8.801399999999737e-05, 8.813900000000097e-05, 8.793099999999943e-05, 8.82920000000037e-05, 8.795799999999909e-05, 8.827799999999719e-05, 8.865300000000104e-05, 8.87089...</msg>
<status status="PASS" starttime="20201029 12:44:28.606" endtime="20201029 12:44:28.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.627" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:44:28.625" endtime="20201029 12:44:28.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.633" level="INFO">VALUE: [8.830599999999633e-05, 8.801399999999737e-05, 8.813900000000097e-05, 8.793099999999943e-05, 8.82920000000037e-05, 8.795799999999909e-05, 8.827799999999719e-05, 8.865300000000104e-05, 8.870899999999932e-05, 8.859700000000276e-05, 8.841600000000088e-05, 8.805499999999661e-05, 8.773599999999798e-05, 8.870799999999984e-05, 8.815300000000054e-05, 8.826399999999762e-05, 8.845799999999959e-05, 8.791699999999986e-05, 8.797299999999814e-05, 8.845899999999907e-05, 8.827799999999719e-05, 8.816600000000063e-05, 8.834800000000198e-05, 8.776400000000406e-05, 8.784700000000201e-05, 8.870899999999932e-05, 8.856900000000362e-05, 8.815300000000054e-05, 8.858299999999625e-05, 8.826399999999762e-05, 8.813799999999455e-05, 8.774999999999755e-05, 8.772199999999841e-05, 8.836100000000208e-05, 8.802799999999694e-05, 8.870799999999984e-05, 8.805600000000302e-05, 8.836100000000208e-05, 8.858300000000319e-05, 8.843000000000045e-05, 8.851400000000481e-05, 8.823599999999848e-05, 8.869499999999975e-05, 8.77920000000032e-05, 8.815200000000106e-05, 8.831899999999643e-05, 8.804099999999704e-05, 8.813900000000097e-05, 8.801399999999737e-05, 8.81670000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:44:28.630" endtime="20201029 12:44:28.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.618" endtime="20201029 12:44:28.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:28.647" endtime="20201029 12:44:28.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.642" endtime="20201029 12:44:28.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.639" endtime="20201029 12:44:28.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.112" endtime="20201029 12:44:28.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.110" endtime="20201029 12:44:28.672"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.697" endtime="20201029 12:44:28.720"></status>
</kw>
<msg timestamp="20201029 12:44:28.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.693" endtime="20201029 12:44:28.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.724" endtime="20201029 12:44:28.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.730" endtime="20201029 12:44:28.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.686" endtime="20201029 12:44:28.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.679" endtime="20201029 12:44:28.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.756" endtime="20201029 12:44:29.117"></status>
</kw>
<msg timestamp="20201029 12:44:29.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043594597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04368375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:28.752" endtime="20201029 12:44:29.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043594597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04368375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:29.121" endtime="20201029 12:44:29.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.130" endtime="20201029 12:44:29.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.745" endtime="20201029 12:44:29.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.739" endtime="20201029 12:44:29.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.138" level="INFO">${RESULT} = [{'diff': 8.915300000000154e-05}, {'diff': 8.945800000000059e-05}, {'diff': 8.902799999999794e-05}, {'diff': 8.927800000000513e-05}, {'diff': 8.893100000000043e-05}, {'diff': 8.904199999999751e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.134" endtime="20201029 12:44:29.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.143" level="INFO">${ACCURACY} = {'diff': [8.915300000000154e-05, 8.945800000000059e-05, 8.902799999999794e-05, 8.927800000000513e-05, 8.893100000000043e-05, 8.904199999999751e-05, 8.941600000000188e-05, 8.915200000000206e-05, 8.9472...</msg>
<status status="PASS" starttime="20201029 12:44:29.139" endtime="20201029 12:44:29.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.149" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.147" endtime="20201029 12:44:29.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.151" level="INFO">VALUE: [8.915300000000154e-05, 8.945800000000059e-05, 8.902799999999794e-05, 8.927800000000513e-05, 8.893100000000043e-05, 8.904199999999751e-05, 8.941600000000188e-05, 8.915200000000206e-05, 8.947200000000016e-05, 8.938900000000222e-05, 8.940300000000179e-05, 8.927799999999819e-05, 8.893099999999349e-05, 8.888900000000172e-05, 8.944499999999356e-05, 8.959699999999682e-05, 8.919500000000025e-05, 8.89999999999988e-05, 8.956899999999768e-05, 8.890200000000181e-05, 8.884699999999607e-05, 8.912499999999546e-05, 8.915300000000154e-05, 8.947200000000016e-05, 8.948599999999973e-05, 8.94999999999993e-05, 8.924999999999905e-05, 8.926399999999862e-05, 8.924999999999905e-05, 8.926400000000556e-05, 8.970800000000084e-05, 8.916600000000163e-05, 8.940299999999485e-05, 8.9332999999997e-05, 8.948600000000667e-05, 8.886100000000258e-05, 8.891700000000086e-05, 8.880499999999736e-05, 8.945900000000007e-05, 8.915300000000154e-05, 8.94450000000005e-05, 8.888900000000172e-05, 8.952800000000538e-05, 8.956900000000462e-05, 8.959700000000376e-05, 8.898599999999923e-05, 8.945800000000059e-05, 8.961100000000333e-05, 8.950000000000624e-05, 8.948599999999973e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.150" endtime="20201029 12:44:29.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.144" endtime="20201029 12:44:29.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.158" endtime="20201029 12:44:29.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.155" endtime="20201029 12:44:29.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.154" endtime="20201029 12:44:29.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.675" endtime="20201029 12:44:29.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.674" endtime="20201029 12:44:29.179"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.190" endtime="20201029 12:44:29.211"></status>
</kw>
<msg timestamp="20201029 12:44:29.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.188" endtime="20201029 12:44:29.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.215" endtime="20201029 12:44:29.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.222" endtime="20201029 12:44:29.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.185" endtime="20201029 12:44:29.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.182" endtime="20201029 12:44:29.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.247" endtime="20201029 12:44:29.609"></status>
</kw>
<msg timestamp="20201029 12:44:29.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025870708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025961194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.243" endtime="20201029 12:44:29.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025870708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025961194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.619" endtime="20201029 12:44:29.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.639" endtime="20201029 12:44:29.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.236" endtime="20201029 12:44:29.645"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.230" endtime="20201029 12:44:29.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.658" level="INFO">${RESULT} = [{'diff': 9.048600000000073e-05}, {'diff': 8.98329999999975e-05}, {'diff': 9.019500000000125e-05}, {'diff': 9.041699999999889e-05}, {'diff': 8.997200000000066e-05}, {'diff': 8.988899999999925e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:29.648" endtime="20201029 12:44:29.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:29.668" level="INFO">${ACCURACY} = {'diff': [9.048600000000073e-05, 8.98329999999975e-05, 9.019500000000125e-05, 9.041699999999889e-05, 8.997200000000066e-05, 8.988899999999925e-05, 8.997299999999667e-05, 8.997199999999719e-05, 9.04029...</msg>
<status status="PASS" starttime="20201029 12:44:29.660" endtime="20201029 12:44:29.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.680" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:44:29.677" endtime="20201029 12:44:29.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.685" level="INFO">VALUE: [9.048600000000073e-05, 8.98329999999975e-05, 9.019500000000125e-05, 9.041699999999889e-05, 8.997200000000066e-05, 8.988899999999925e-05, 8.997299999999667e-05, 8.997199999999719e-05, 9.040299999999932e-05, 9.026399999999962e-05, 9.037500000000018e-05, 8.976400000000259e-05, 8.991599999999891e-05, 9.045799999999812e-05, 8.994400000000152e-05, 9.038899999999975e-05, 9.045800000000159e-05, 8.975000000000302e-05, 8.98190000000014e-05, 9.05000000000003e-05, 8.998600000000023e-05, 8.993100000000143e-05, 9.038899999999975e-05, 9.061099999999739e-05, 8.980500000000183e-05, 8.980500000000183e-05, 9.034699999999757e-05, 9.005499999999861e-05, 9.065299999999957e-05, 9.023600000000048e-05, 9.058300000000172e-05, 8.98060000000013e-05, 9.015300000000254e-05, 9.040299999999932e-05, 9.031899999999843e-05, 9.072200000000141e-05, 9.027699999999972e-05, 8.995799999999762e-05, 9.051399999999987e-05, 9.047199999999769e-05, 9.004200000000198e-05, 9.051399999999987e-05, 9.047199999999769e-05, 8.982000000000087e-05, 8.991599999999891e-05, 9.06670000000026e-05, 9.002799999999894e-05, 9.062500000000043e-05, 8.997200000000066e-05, 9.055499999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.682" endtime="20201029 12:44:29.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.670" endtime="20201029 12:44:29.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:29.701" endtime="20201029 12:44:29.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.694" endtime="20201029 12:44:29.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.692" endtime="20201029 12:44:29.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.180" endtime="20201029 12:44:29.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.179" endtime="20201029 12:44:29.726"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.751" endtime="20201029 12:44:29.774"></status>
</kw>
<msg timestamp="20201029 12:44:29.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.747" endtime="20201029 12:44:29.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.778" endtime="20201029 12:44:29.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.784" endtime="20201029 12:44:29.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.740" endtime="20201029 12:44:29.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.733" endtime="20201029 12:44:29.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.810" endtime="20201029 12:44:30.175"></status>
</kw>
<msg timestamp="20201029 12:44:30.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044086569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.806" endtime="20201029 12:44:30.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043995528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044086569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.185" endtime="20201029 12:44:30.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.204" endtime="20201029 12:44:30.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.798" endtime="20201029 12:44:30.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.793" endtime="20201029 12:44:30.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.223" level="INFO">${RESULT} = [{'diff': 9.104100000000004e-05}, {'diff': 9.155599999999958e-05}, {'diff': 9.144499999999556e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.1332999999999e-05}, {'diff': 9.106899999999918e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:30.213" endtime="20201029 12:44:30.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.234" level="INFO">${ACCURACY} = {'diff': [9.104100000000004e-05, 9.155599999999958e-05, 9.144499999999556e-05, 9.162499999999796e-05, 9.1332999999999e-05, 9.106899999999918e-05, 9.084699999999807e-05, 9.091700000000286e-05, 9.077799...</msg>
<status status="PASS" starttime="20201029 12:44:30.225" endtime="20201029 12:44:30.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.246" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.243" endtime="20201029 12:44:30.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.252" level="INFO">VALUE: [9.104100000000004e-05, 9.155599999999958e-05, 9.144499999999556e-05, 9.162499999999796e-05, 9.1332999999999e-05, 9.106899999999918e-05, 9.084699999999807e-05, 9.091700000000286e-05, 9.077799999999969e-05, 9.159799999999829e-05, 9.15000000000013e-05, 9.10000000000008e-05, 9.147300000000164e-05, 9.136200000000455e-05, 9.080499999999936e-05, 9.162499999999796e-05, 9.122200000000191e-05, 9.145800000000259e-05, 9.091699999999592e-05, 9.11670000000031e-05, 9.15000000000013e-05, 9.169500000000275e-05, 9.136100000000508e-05, 9.093100000000243e-05, 9.137499999999771e-05, 9.10000000000008e-05, 9.095900000000157e-05, 9.145800000000259e-05, 9.113899999999703e-05, 9.119500000000225e-05, 9.10000000000008e-05, 9.148600000000173e-05, 9.136100000000508e-05, 9.15000000000013e-05, 9.093100000000243e-05, 9.113900000000397e-05, 9.144400000000302e-05, 9.125000000000105e-05, 9.084699999999807e-05, 9.16250000000049e-05, 9.136100000000508e-05, 9.152800000000044e-05, 9.105599999999908e-05, 9.122200000000191e-05, 9.091700000000286e-05, 9.161099999999839e-05, 9.091600000000338e-05, 9.093000000000295e-05, 9.138899999999728e-05, 9.08329999999985e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.248" endtime="20201029 12:44:30.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.236" endtime="20201029 12:44:30.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.265" endtime="20201029 12:44:30.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.261" endtime="20201029 12:44:30.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.258" endtime="20201029 12:44:30.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.729" endtime="20201029 12:44:30.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.727" endtime="20201029 12:44:30.291"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.316" endtime="20201029 12:44:30.339"></status>
</kw>
<msg timestamp="20201029 12:44:30.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.312" endtime="20201029 12:44:30.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.342" endtime="20201029 12:44:30.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.350" endtime="20201029 12:44:30.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.304" endtime="20201029 12:44:30.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.298" endtime="20201029 12:44:30.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.385" endtime="20201029 12:44:30.750"></status>
</kw>
<msg timestamp="20201029 12:44:30.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043955306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044047347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.380" endtime="20201029 12:44:30.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043955306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044047347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.760" endtime="20201029 12:44:30.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.780" endtime="20201029 12:44:30.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.370" endtime="20201029 12:44:30.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.363" endtime="20201029 12:44:30.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.798" level="INFO">${RESULT} = [{'diff': 9.204100000000104e-05}, {'diff': 9.223599999999554e-05}, {'diff': 9.259699999999982e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.225000000000205e-05}, {'diff': 9.248600000000273e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.789" endtime="20201029 12:44:30.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:30.810" level="INFO">${ACCURACY} = {'diff': [9.204100000000104e-05, 9.223599999999554e-05, 9.259699999999982e-05, 9.251400000000187e-05, 9.225000000000205e-05, 9.248600000000273e-05, 9.273600000000298e-05, 9.190300000000429e-05, 9.1930...</msg>
<status status="PASS" starttime="20201029 12:44:30.801" endtime="20201029 12:44:30.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.822" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:44:30.820" endtime="20201029 12:44:30.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.829" level="INFO">VALUE: [9.204100000000104e-05, 9.223599999999554e-05, 9.259699999999982e-05, 9.251400000000187e-05, 9.225000000000205e-05, 9.248600000000273e-05, 9.273600000000298e-05, 9.190300000000429e-05, 9.193000000000395e-05, 9.223600000000248e-05, 9.258300000000025e-05, 9.227800000000119e-05, 9.224999999999511e-05, 9.225000000000205e-05, 9.261099999999939e-05, 9.245799999999665e-05, 9.218099999999674e-05, 9.212499999999846e-05, 9.204100000000104e-05, 9.20409999999941e-05, 9.225000000000205e-05, 9.259699999999982e-05, 9.237500000000565e-05, 9.238900000000522e-05, 9.237499999999871e-05, 9.193100000000343e-05, 9.174999999999461e-05, 9.259799999999929e-05, 9.259699999999982e-05, 9.222300000000239e-05, 9.261199999999886e-05, 9.191599999999744e-05, 9.234799999999904e-05, 9.272199999999647e-05, 9.180599999999983e-05, 9.1945000000003e-05, 9.218100000000368e-05, 9.259799999999929e-05, 9.261099999999939e-05, 9.204100000000104e-05, 9.177800000000069e-05, 9.206900000000018e-05, 9.270800000000384e-05, 9.204200000000051e-05, 9.181899999999993e-05, 9.233399999999947e-05, 9.256900000000068e-05, 9.222200000000291e-05, 9.224999999999511e-05, 9.236099999999914e-05]</msg>
<status status="PASS" starttime="20201029 12:44:30.825" endtime="20201029 12:44:30.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.812" endtime="20201029 12:44:30.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:30.847" endtime="20201029 12:44:30.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.842" endtime="20201029 12:44:30.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.840" endtime="20201029 12:44:30.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.293" endtime="20201029 12:44:30.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.292" endtime="20201029 12:44:30.873"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.898" endtime="20201029 12:44:30.920"></status>
</kw>
<msg timestamp="20201029 12:44:30.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.894" endtime="20201029 12:44:30.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.924" endtime="20201029 12:44:30.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.931" endtime="20201029 12:44:30.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.886" endtime="20201029 12:44:30.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.880" endtime="20201029 12:44:30.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.957" endtime="20201029 12:44:31.326"></status>
</kw>
<msg timestamp="20201029 12:44:31.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043752069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043845208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.953" endtime="20201029 12:44:31.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043752069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043845208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.337" endtime="20201029 12:44:31.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.357" endtime="20201029 12:44:31.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.945" endtime="20201029 12:44:31.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.940" endtime="20201029 12:44:31.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.375" level="INFO">${RESULT} = [{'diff': 9.313899999999903e-05}, {'diff': 9.323600000000348e-05}, {'diff': 9.361100000000039e-05}, {'diff': 9.325000000000305e-05}, {'diff': 9.279200000000126e-05}, {'diff': 9.31529999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:31.366" endtime="20201029 12:44:31.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.385" level="INFO">${ACCURACY} = {'diff': [9.313899999999903e-05, 9.323600000000348e-05, 9.361100000000039e-05, 9.325000000000305e-05, 9.279200000000126e-05, 9.31529999999986e-05, 9.31529999999986e-05, 9.286099999999964e-05, 9.336100...</msg>
<status status="PASS" starttime="20201029 12:44:31.377" endtime="20201029 12:44:31.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.397" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.395" endtime="20201029 12:44:31.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.403" level="INFO">VALUE: [9.313899999999903e-05, 9.323600000000348e-05, 9.361100000000039e-05, 9.325000000000305e-05, 9.279200000000126e-05, 9.31529999999986e-05, 9.31529999999986e-05, 9.286099999999964e-05, 9.336100000000014e-05, 9.329099999999535e-05, 9.301400000000237e-05, 9.351399999999593e-05, 9.295800000000409e-05, 9.302699999999553e-05, 9.351400000000287e-05, 9.362499999999996e-05, 9.276400000000212e-05, 9.330600000000133e-05, 9.355600000000158e-05, 9.336100000000014e-05, 9.293099999999749e-05, 9.322199999999697e-05, 9.28330000000005e-05, 9.292999999999801e-05, 9.343100000000493e-05, 9.279200000000126e-05, 9.359700000000082e-05, 9.295800000000409e-05, 9.304200000000151e-05, 9.319400000000477e-05, 9.279199999999432e-05, 9.279200000000126e-05, 9.359800000000029e-05, 9.337499999999971e-05, 9.315199999999912e-05, 9.336100000000014e-05, 9.363899999999953e-05, 9.302800000000194e-05, 9.35000000000033e-05, 9.329199999999482e-05, 9.291699999999792e-05, 9.351400000000287e-05, 9.336100000000014e-05, 9.352800000000244e-05, 9.359700000000082e-05, 9.291599999999844e-05, 9.351399999999593e-05, 9.309799999999979e-05, 9.369399999999833e-05, 9.329200000000176e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.399" endtime="20201029 12:44:31.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.387" endtime="20201029 12:44:31.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.416" endtime="20201029 12:44:31.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.411" endtime="20201029 12:44:31.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.409" endtime="20201029 12:44:31.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.875" endtime="20201029 12:44:31.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.874" endtime="20201029 12:44:31.442"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.466" endtime="20201029 12:44:31.491"></status>
</kw>
<msg timestamp="20201029 12:44:31.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.463" endtime="20201029 12:44:31.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.495" endtime="20201029 12:44:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.501" endtime="20201029 12:44:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.455" endtime="20201029 12:44:31.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.449" endtime="20201029 12:44:31.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.527" endtime="20201029 12:44:31.890"></status>
</kw>
<msg timestamp="20201029 12:44:31.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045376069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045470667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.523" endtime="20201029 12:44:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045376069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045470667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.900" endtime="20201029 12:44:31.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.920" endtime="20201029 12:44:31.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.515" endtime="20201029 12:44:31.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.510" endtime="20201029 12:44:31.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.938" level="INFO">${RESULT} = [{'diff': 9.459800000000129e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.375000000000355e-05}, {'diff': 9.448600000000473e-05}, {'diff': 9.441699999999942e-05}, {'diff': 9.427799999999625e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:31.929" endtime="20201029 12:44:31.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:31.948" level="INFO">${ACCURACY} = {'diff': [9.459800000000129e-05, 9.419499999999831e-05, 9.375000000000355e-05, 9.448600000000473e-05, 9.441699999999942e-05, 9.427799999999625e-05, 9.391699999999892e-05, 9.429199999999582e-05, 9.4639...</msg>
<status status="PASS" starttime="20201029 12:44:31.940" endtime="20201029 12:44:31.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.960" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:44:31.957" endtime="20201029 12:44:31.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.966" level="INFO">VALUE: [9.459800000000129e-05, 9.419499999999831e-05, 9.375000000000355e-05, 9.448600000000473e-05, 9.441699999999942e-05, 9.427799999999625e-05, 9.391699999999892e-05, 9.429199999999582e-05, 9.463900000000053e-05, 9.39729999999972e-05, 9.454200000000301e-05, 9.393100000000543e-05, 9.447199999999822e-05, 9.425000000000405e-05, 9.455500000000311e-05, 9.443100000000593e-05, 9.46660000000002e-05, 9.41529999999996e-05, 9.419499999999831e-05, 9.387500000000021e-05, 9.404200000000251e-05, 9.440299999999985e-05, 9.425000000000405e-05, 9.399999999999686e-05, 9.384700000000107e-05, 9.390199999999987e-05, 9.462499999999402e-05, 9.401399999999643e-05, 9.438900000000028e-05, 9.404200000000251e-05, 9.401399999999643e-05, 9.404200000000251e-05, 9.427800000000319e-05, 9.461199999999392e-05, 9.454100000000354e-05, 9.468099999999924e-05, 9.392999999999901e-05, 9.437500000000071e-05, 9.42079999999984e-05, 9.374999999999661e-05, 9.469399999999933e-05, 9.426400000000362e-05, 9.440299999999985e-05, 9.434700000000157e-05, 9.459800000000129e-05, 9.452700000000397e-05, 9.461100000000139e-05, 9.454200000000301e-05, 9.427800000000319e-05, 9.472199999999847e-05]</msg>
<status status="PASS" starttime="20201029 12:44:31.962" endtime="20201029 12:44:31.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.950" endtime="20201029 12:44:31.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:31.981" endtime="20201029 12:44:32.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.975" endtime="20201029 12:44:32.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.972" endtime="20201029 12:44:32.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.444" endtime="20201029 12:44:32.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.443" endtime="20201029 12:44:32.008"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.033" endtime="20201029 12:44:32.056"></status>
</kw>
<msg timestamp="20201029 12:44:32.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.029" endtime="20201029 12:44:32.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.059" endtime="20201029 12:44:32.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.066" endtime="20201029 12:44:32.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.021" endtime="20201029 12:44:32.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.015" endtime="20201029 12:44:32.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.091" endtime="20201029 12:44:32.455"></status>
</kw>
<msg timestamp="20201029 12:44:32.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044762083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044857597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.088" endtime="20201029 12:44:32.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044762083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044857597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.465" endtime="20201029 12:44:32.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.485" endtime="20201029 12:44:32.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.080" endtime="20201029 12:44:32.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.075" endtime="20201029 12:44:32.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.504" level="INFO">${RESULT} = [{'diff': 9.551399999999793e-05}, {'diff': 9.545799999999965e-05}, {'diff': 9.497199999999872e-05}, {'diff': 9.566599999999426e-05}, {'diff': 9.525000000000505e-05}, {'diff': 9.526400000000462e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:32.494" endtime="20201029 12:44:32.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:32.515" level="INFO">${ACCURACY} = {'diff': [9.551399999999793e-05, 9.545799999999965e-05, 9.497199999999872e-05, 9.566599999999426e-05, 9.525000000000505e-05, 9.526400000000462e-05, 9.5333000000003e-05, 9.48200000000024e-05, 9.4819999...</msg>
<status status="PASS" starttime="20201029 12:44:32.506" endtime="20201029 12:44:32.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.527" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:44:32.524" endtime="20201029 12:44:32.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.533" level="INFO">VALUE: [9.551399999999793e-05, 9.545799999999965e-05, 9.497199999999872e-05, 9.566599999999426e-05, 9.525000000000505e-05, 9.526400000000462e-05, 9.5333000000003e-05, 9.48200000000024e-05, 9.481999999999546e-05, 9.569499999999981e-05, 9.551399999999793e-05, 9.556899999999674e-05, 9.55279999999975e-05, 9.481899999999599e-05, 9.501399999999743e-05, 9.538899999999434e-05, 9.57079999999999e-05, 9.484700000000207e-05, 9.559699999999588e-05, 9.495799999999915e-05, 9.556999999999621e-05, 9.527699999999778e-05, 9.527699999999778e-05, 9.554199999999707e-05, 9.526400000000462e-05, 9.504199999999657e-05, 9.557000000000315e-05, 9.513900000000103e-05, 9.48330000000025e-05, 9.537500000000171e-05, 9.537500000000171e-05, 9.51660000000007e-05, 9.469399999999933e-05, 9.541700000000042e-05, 9.497199999999872e-05, 9.49859999999983e-05, 9.509700000000232e-05, 9.522199999999897e-05, 9.551399999999793e-05, 9.537500000000171e-05, 9.568100000000024e-05, 9.536100000000214e-05, 9.53880000000018e-05, 9.495799999999915e-05, 9.488900000000078e-05, 9.57079999999999e-05, 9.51530000000006e-05, 9.513900000000103e-05, 9.474999999999761e-05, 9.495799999999915e-05]</msg>
<status status="PASS" starttime="20201029 12:44:32.529" endtime="20201029 12:44:32.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.517" endtime="20201029 12:44:32.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:32.546" endtime="20201029 12:44:32.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.542" endtime="20201029 12:44:32.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.539" endtime="20201029 12:44:32.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.010" endtime="20201029 12:44:32.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.009" endtime="20201029 12:44:32.572"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.597" endtime="20201029 12:44:32.620"></status>
</kw>
<msg timestamp="20201029 12:44:32.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.593" endtime="20201029 12:44:32.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.624" endtime="20201029 12:44:32.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.630" endtime="20201029 12:44:32.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.585" endtime="20201029 12:44:32.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.579" endtime="20201029 12:44:32.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.655" endtime="20201029 12:44:33.018"></status>
</kw>
<msg timestamp="20201029 12:44:33.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043766028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043862389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.652" endtime="20201029 12:44:33.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043766028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043862389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.028" endtime="20201029 12:44:33.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.048" endtime="20201029 12:44:33.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.644" endtime="20201029 12:44:33.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.639" endtime="20201029 12:44:33.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.067" level="INFO">${RESULT} = [{'diff': 9.636100000000314e-05}, {'diff': 9.590299999999441e-05}, {'diff': 9.659799999999635e-05}, {'diff': 9.612500000000246e-05}, {'diff': 9.577799999999775e-05}, {'diff': 9.616599999999476e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:33.057" endtime="20201029 12:44:33.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.079" level="INFO">${ACCURACY} = {'diff': [9.636100000000314e-05, 9.590299999999441e-05, 9.659799999999635e-05, 9.612500000000246e-05, 9.577799999999775e-05, 9.616599999999476e-05, 9.67080000000009e-05, 9.668100000000124e-05, 9.66109...</msg>
<status status="PASS" starttime="20201029 12:44:33.069" endtime="20201029 12:44:33.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.090" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.088" endtime="20201029 12:44:33.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.096" level="INFO">VALUE: [9.636100000000314e-05, 9.590299999999441e-05, 9.659799999999635e-05, 9.612500000000246e-05, 9.577799999999775e-05, 9.616599999999476e-05, 9.67080000000009e-05, 9.668100000000124e-05, 9.661099999999645e-05, 9.595900000000657e-05, 9.580600000000383e-05, 9.662499999999602e-05, 9.65279999999985e-05, 9.626399999999868e-05, 9.629099999999835e-05, 9.613900000000203e-05, 9.637500000000271e-05, 9.637500000000271e-05, 9.619499999999337e-05, 9.649999999999936e-05, 9.61530000000016e-05, 9.605600000000408e-05, 9.648699999999927e-05, 9.594400000000058e-05, 9.611100000000289e-05, 9.606899999999724e-05, 9.613800000000255e-05, 9.611100000000289e-05, 9.67080000000009e-05, 9.67080000000009e-05, 9.663900000000253e-05, 9.63609999999962e-05, 9.626400000000562e-05, 9.661100000000339e-05, 9.661099999999645e-05, 9.63200000000039e-05, 9.662500000000296e-05, 9.634699999999663e-05, 9.644500000000056e-05, 9.581900000000393e-05, 9.626400000000562e-05, 9.64859999999998e-05, 9.605599999999714e-05, 9.613900000000203e-05, 9.640300000000185e-05, 9.599999999999886e-05, 9.672200000000047e-05, 9.659700000000382e-05, 9.59159999999945e-05, 9.669400000000133e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.093" endtime="20201029 12:44:33.098"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.081" endtime="20201029 12:44:33.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.110" endtime="20201029 12:44:33.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.105" endtime="20201029 12:44:33.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.102" endtime="20201029 12:44:33.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.575" endtime="20201029 12:44:33.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.573" endtime="20201029 12:44:33.136"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.160" endtime="20201029 12:44:33.183"></status>
</kw>
<msg timestamp="20201029 12:44:33.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.157" endtime="20201029 12:44:33.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.187" endtime="20201029 12:44:33.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.194" endtime="20201029 12:44:33.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.149" endtime="20201029 12:44:33.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.142" endtime="20201029 12:44:33.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.219" endtime="20201029 12:44:33.584"></status>
</kw>
<msg timestamp="20201029 12:44:33.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044386639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044483861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.215" endtime="20201029 12:44:33.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044386639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044483861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.594" endtime="20201029 12:44:33.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.614" endtime="20201029 12:44:33.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.207" endtime="20201029 12:44:33.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.202" endtime="20201029 12:44:33.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.632" level="INFO">${RESULT} = [{'diff': 9.722200000000097e-05}, {'diff': 9.768000000000276e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.722200000000097e-05}, {'diff': 9.676399999999918e-05}, {'diff': 9.673600000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:33.623" endtime="20201029 12:44:33.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:33.642" level="INFO">${ACCURACY} = {'diff': [9.722200000000097e-05, 9.768000000000276e-05, 9.755499999999917e-05, 9.722200000000097e-05, 9.676399999999918e-05, 9.673600000000004e-05, 9.740300000000285e-05, 9.681900000000493e-05, 9.6763...</msg>
<status status="PASS" starttime="20201029 12:44:33.635" endtime="20201029 12:44:33.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.654" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:44:33.652" endtime="20201029 12:44:33.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.660" level="INFO">VALUE: [9.722200000000097e-05, 9.768000000000276e-05, 9.755499999999917e-05, 9.722200000000097e-05, 9.676399999999918e-05, 9.673600000000004e-05, 9.740300000000285e-05, 9.681900000000493e-05, 9.676399999999918e-05, 9.769500000000181e-05, 9.715299999999566e-05, 9.766700000000267e-05, 9.723700000000002e-05, 9.727699999999978e-05, 9.744499999999462e-05, 9.751399999999993e-05, 9.733399999999753e-05, 9.704199999999857e-05, 9.676399999999918e-05, 9.752700000000003e-05, 9.719400000000183e-05, 9.720900000000088e-05, 9.705599999999814e-05, 9.773600000000104e-05, 9.72080000000014e-05, 9.688899999999584e-05, 9.7027999999999e-05, 9.683299999999756e-05, 9.676399999999918e-05, 9.680600000000483e-05, 9.756999999999821e-05, 9.734700000000457e-05, 9.679199999999832e-05, 9.70409999999991e-05, 9.733299999999806e-05, 9.748599999999386e-05, 9.727799999999925e-05, 9.71530000000026e-05, 9.688899999999584e-05, 9.772200000000147e-05, 9.712500000000346e-05, 9.706999999999771e-05, 9.681999999999746e-05, 9.7415999999996e-05, 9.718000000000226e-05, 9.758299999999831e-05, 9.679099999999885e-05, 9.748599999999386e-05, 9.693000000000201e-05, 9.752800000000644e-05]</msg>
<status status="PASS" starttime="20201029 12:44:33.657" endtime="20201029 12:44:33.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.644" endtime="20201029 12:44:33.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:33.666" endtime="20201029 12:44:33.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.664" endtime="20201029 12:44:33.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.663" endtime="20201029 12:44:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.138" endtime="20201029 12:44:33.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.137" endtime="20201029 12:44:33.687"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.699" endtime="20201029 12:44:33.719"></status>
</kw>
<msg timestamp="20201029 12:44:33.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.697" endtime="20201029 12:44:33.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.720" endtime="20201029 12:44:33.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.723" endtime="20201029 12:44:33.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.693" endtime="20201029 12:44:33.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.690" endtime="20201029 12:44:33.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.735" endtime="20201029 12:44:34.093"></status>
</kw>
<msg timestamp="20201029 12:44:34.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.733" endtime="20201029 12:44:34.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025811861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.103" endtime="20201029 12:44:34.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.123" endtime="20201029 12:44:34.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.730" endtime="20201029 12:44:34.128"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.728" endtime="20201029 12:44:34.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.141" level="INFO">${RESULT} = [{'diff': 9.854200000000007e-05}, {'diff': 9.773600000000104e-05}, {'diff': 9.870799999999944e-05}, {'diff': 9.837500000000124e-05}, {'diff': 9.783399999999803e-05}, {'diff': 9.805599999999914e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.132" endtime="20201029 12:44:34.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.151" level="INFO">${ACCURACY} = {'diff': [9.854200000000007e-05, 9.773600000000104e-05, 9.870799999999944e-05, 9.837500000000124e-05, 9.783399999999803e-05, 9.805599999999914e-05, 9.848599999999832e-05, 9.791699999999945e-05, 9.8542...</msg>
<status status="PASS" starttime="20201029 12:44:34.143" endtime="20201029 12:44:34.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.163" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.161" endtime="20201029 12:44:34.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.169" level="INFO">VALUE: [9.854200000000007e-05, 9.773600000000104e-05, 9.870799999999944e-05, 9.837500000000124e-05, 9.783399999999803e-05, 9.805599999999914e-05, 9.848599999999832e-05, 9.791699999999945e-05, 9.854200000000007e-05, 9.869399999999987e-05, 9.792999999999955e-05, 9.795800000000215e-05, 9.805599999999914e-05, 9.870799999999944e-05, 9.829199999999982e-05, 9.82219999999985e-05, 9.859699999999888e-05, 9.82219999999985e-05, 9.845900000000213e-05, 9.80410000000001e-05, 9.848599999999832e-05, 9.774999999999714e-05, 9.813900000000056e-05, 9.781899999999899e-05, 9.861100000000192e-05, 9.815300000000013e-05, 9.8028e-05, 9.81799999999998e-05, 9.812500000000099e-05, 9.791599999999998e-05, 9.795800000000215e-05, 9.875000000000161e-05, 9.837499999999777e-05, 9.848599999999832e-05, 9.794399999999912e-05, 9.779199999999932e-05, 9.813900000000056e-05, 9.858400000000225e-05, 9.8721999999999e-05, 9.787500000000074e-05, 9.781900000000246e-05, 9.834699999999863e-05, 9.847199999999875e-05, 9.831999999999896e-05, 9.858299999999931e-05, 9.8028e-05, 9.815300000000013e-05, 9.870899999999891e-05, 9.829100000000035e-05, 9.800000000000086e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.166" endtime="20201029 12:44:34.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.153" endtime="20201029 12:44:34.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.184" endtime="20201029 12:44:34.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.178" endtime="20201029 12:44:34.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.175" endtime="20201029 12:44:34.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.688" endtime="20201029 12:44:34.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.688" endtime="20201029 12:44:34.210"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.235" endtime="20201029 12:44:34.258"></status>
</kw>
<msg timestamp="20201029 12:44:34.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.231" endtime="20201029 12:44:34.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.262" endtime="20201029 12:44:34.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.269" endtime="20201029 12:44:34.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.223" endtime="20201029 12:44:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.217" endtime="20201029 12:44:34.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.294" endtime="20201029 12:44:34.657"></status>
</kw>
<msg timestamp="20201029 12:44:34.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044063181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.290" endtime="20201029 12:44:34.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044063181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.667" endtime="20201029 12:44:34.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.687" endtime="20201029 12:44:34.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.282" endtime="20201029 12:44:34.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.277" endtime="20201029 12:44:34.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.706" level="INFO">${RESULT} = [{'diff': 9.925000000000211e-05}, {'diff': 9.901300000000196e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.956900000000074e-05}, {'diff': 9.933399999999953e-05}, {'diff': 9.924999999999518e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.696" endtime="20201029 12:44:34.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:34.717" level="INFO">${ACCURACY} = {'diff': [9.925000000000211e-05, 9.901300000000196e-05, 9.884699999999913e-05, 9.956900000000074e-05, 9.933399999999953e-05, 9.924999999999518e-05, 9.97080000000039e-05, 9.909699999999938e-05, 9.90690...</msg>
<status status="PASS" starttime="20201029 12:44:34.708" endtime="20201029 12:44:34.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.729" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:44:34.726" endtime="20201029 12:44:34.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.735" level="INFO">VALUE: [9.925000000000211e-05, 9.901300000000196e-05, 9.884699999999913e-05, 9.956900000000074e-05, 9.933399999999953e-05, 9.924999999999518e-05, 9.97080000000039e-05, 9.909699999999938e-05, 9.906900000000024e-05, 9.919500000000331e-05, 9.962499999999902e-05, 9.883299999999956e-05, 9.911099999999895e-05, 9.9028000000001e-05, 9.938900000000528e-05, 9.945799999999672e-05, 9.902799999999407e-05, 9.965299999999816e-05, 9.972299999999601e-05, 9.904200000000057e-05, 9.873700000000152e-05, 9.908299999999981e-05, 9.950000000000236e-05, 9.958300000000031e-05, 9.91530000000046e-05, 9.88609999999987e-05, 9.890300000000435e-05, 9.927800000000125e-05, 9.926400000000168e-05, 9.970900000000338e-05, 9.94730000000027e-05, 9.892999999999708e-05, 9.892999999999708e-05, 9.892999999999708e-05, 9.926399999999475e-05, 9.883299999999956e-05, 9.934699999999963e-05, 9.897199999999579e-05, 9.905600000000014e-05, 9.922299999999551e-05, 9.940200000000537e-05, 9.90410000000011e-05, 9.961099999999945e-05, 9.952799999999457e-05, 9.890299999999741e-05, 9.905500000000067e-05, 9.940299999999791e-05, 9.956900000000074e-05, 9.908299999999981e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.731" endtime="20201029 12:44:34.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.719" endtime="20201029 12:44:34.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:34.748" endtime="20201029 12:44:34.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.743" endtime="20201029 12:44:34.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.741" endtime="20201029 12:44:34.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.212" endtime="20201029 12:44:34.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.211" endtime="20201029 12:44:34.774"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.799" endtime="20201029 12:44:34.822"></status>
</kw>
<msg timestamp="20201029 12:44:34.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.795" endtime="20201029 12:44:34.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.826" endtime="20201029 12:44:34.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.832" endtime="20201029 12:44:34.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.787" endtime="20201029 12:44:34.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.781" endtime="20201029 12:44:34.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.858" endtime="20201029 12:44:35.221"></status>
</kw>
<msg timestamp="20201029 12:44:35.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043920611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.854" endtime="20201029 12:44:35.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043820806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043920611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.231" endtime="20201029 12:44:35.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.251" endtime="20201029 12:44:35.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.846" endtime="20201029 12:44:35.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.841" endtime="20201029 12:44:35.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.269" level="INFO">${RESULT} = [{'diff': 9.980500000000142e-05}, {'diff': 9.980500000000142e-05}, {'diff': 0.00010025000000000311}, {'diff': 9.977799999999482e-05}, {'diff': 0.00010051299999999652}, {'diff': 9.981900000000099e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:35.260" endtime="20201029 12:44:35.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.281" level="INFO">${ACCURACY} = {'diff': [9.980500000000142e-05, 9.980500000000142e-05, 0.00010025000000000311, 9.977799999999482e-05, 0.00010051299999999652, 9.981900000000099e-05, 0.00010045900000000413, 0.00010043100000000499, 9....</msg>
<status status="PASS" starttime="20201029 12:44:35.271" endtime="20201029 12:44:35.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.293" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.290" endtime="20201029 12:44:35.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.298" level="INFO">VALUE: [9.980500000000142e-05, 9.980500000000142e-05, 0.00010025000000000311, 9.977799999999482e-05, 0.00010051299999999652, 9.981900000000099e-05, 0.00010045900000000413, 0.00010043100000000499, 9.983300000000056e-05, 9.993000000000501e-05, 0.00010066599999999926, 9.980500000000142e-05, 0.0001006939999999984, 9.98609999999997e-05, 0.00010004200000000157, 0.00010026399999999575, 0.00010013899999999909, 0.00010049999999999643, 0.00010013799999999962, 0.00010029100000000235, 0.00010045799999999772, 0.0001007080000000049, 0.00010056900000000174, 0.00010024999999999618, 9.982000000000046e-05, 9.993100000000449e-05, 9.990200000000587e-05, 0.00010026399999999575, 0.00010013799999999962, 0.00010029100000000235, 0.00010065299999999916, 0.0001003610000000002, 0.00010024999999999618, 9.98060000000009e-05, 0.00010049999999999643, 0.00010061100000000045, 9.97359999999961e-05, 0.00010038899999999934, 0.00010004099999999516, 0.00010052700000000303, 0.00010027800000000225, 0.00010012499999999952, 0.00010040299999999891, 0.00010072199999999754, 9.97359999999961e-05, 0.00010065299999999916, 0.00010038899999999934, 0.00010012499999999952, 0.00010059700000000088, 0.00010034700000000063]</msg>
<status status="PASS" starttime="20201029 12:44:35.295" endtime="20201029 12:44:35.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.283" endtime="20201029 12:44:35.302"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.312" endtime="20201029 12:44:35.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.307" endtime="20201029 12:44:35.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.304" endtime="20201029 12:44:35.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.776" endtime="20201029 12:44:35.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.775" endtime="20201029 12:44:35.338"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.363" endtime="20201029 12:44:35.386"></status>
</kw>
<msg timestamp="20201029 12:44:35.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.359" endtime="20201029 12:44:35.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.389" endtime="20201029 12:44:35.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.396" endtime="20201029 12:44:35.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.351" endtime="20201029 12:44:35.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.345" endtime="20201029 12:44:35.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.422" endtime="20201029 12:44:35.787"></status>
</kw>
<msg timestamp="20201029 12:44:35.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044204264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.418" endtime="20201029 12:44:35.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044103208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044204264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.797" endtime="20201029 12:44:35.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.816" endtime="20201029 12:44:35.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.410" endtime="20201029 12:44:35.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.405" endtime="20201029 12:44:35.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.834" level="INFO">${RESULT} = [{'diff': 0.00010105600000000214}, {'diff': 0.00010077799999999582}, {'diff': 0.00010162500000000102}, {'diff': 0.00010144499999999862}, {'diff': 0.0001013480000000011}, {'diff': 0.0001012230000000044...</msg>
<status status="PASS" starttime="20201029 12:44:35.825" endtime="20201029 12:44:35.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:35.844" level="INFO">${ACCURACY} = {'diff': [0.00010105600000000214, 0.00010077799999999582, 0.00010162500000000102, 0.00010144499999999862, 0.0001013480000000011, 0.00010122300000000445, 0.00010149999999999743, 0.0001016939999999994, ...</msg>
<status status="PASS" starttime="20201029 12:44:35.837" endtime="20201029 12:44:35.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.856" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:44:35.853" endtime="20201029 12:44:35.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.861" level="INFO">VALUE: [0.00010105600000000214, 0.00010077799999999582, 0.00010162500000000102, 0.00010144499999999862, 0.0001013480000000011, 0.00010122300000000445, 0.00010149999999999743, 0.0001016939999999994, 0.00010147200000000522, 0.00010106900000000224, 0.00010098599999999736, 0.0001016809999999993, 0.00010106999999999478, 0.00010127799999999632, 0.00010127799999999632, 0.00010159700000000188, 0.00010122299999999751, 0.00010094399999999865, 0.00010165300000000016, 0.00010124999999999718, 0.00010125000000000411, 0.00010158300000000231, 0.00010124999999999718, 0.00010120899999999794, 0.00010115299999999966, 0.00010162500000000102, 0.00010116699999999923, 0.00010137500000000077, 0.00010092999999999908, 0.0001011530000000066, 0.00010104199999999564, 0.0001012359999999976, 0.00010148599999999786, 0.00010112500000000052, 0.0001008060000000019, 0.0001014860000000048, 0.00010116599999999976, 0.00010083300000000156, 0.000101028000000003, 0.00010158300000000231, 0.00010125000000000411, 0.00010105600000000214, 0.00010126399999999675, 0.00010151400000000393, 0.00010138900000000034, 0.00010149999999999743, 0.00010117999999999933, 0.00010093000000000601, 0.00010166699999999973, 0.00010112500000000052]</msg>
<status status="PASS" starttime="20201029 12:44:35.858" endtime="20201029 12:44:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.846" endtime="20201029 12:44:35.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:35.881" endtime="20201029 12:44:35.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.877" endtime="20201029 12:44:35.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.874" endtime="20201029 12:44:35.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.340" endtime="20201029 12:44:35.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.339" endtime="20201029 12:44:35.907"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.932" endtime="20201029 12:44:35.958"></status>
</kw>
<msg timestamp="20201029 12:44:35.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.928" endtime="20201029 12:44:35.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.961" endtime="20201029 12:44:35.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.968" endtime="20201029 12:44:35.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.920" endtime="20201029 12:44:35.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.914" endtime="20201029 12:44:35.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.993" endtime="20201029 12:44:36.358"></status>
</kw>
<msg timestamp="20201029 12:44:36.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045783958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045885861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.990" endtime="20201029 12:44:36.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045783958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045885861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.368" endtime="20201029 12:44:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.387" endtime="20201029 12:44:36.391"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.982" endtime="20201029 12:44:36.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.977" endtime="20201029 12:44:36.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.406" level="INFO">${RESULT} = [{'diff': 0.00010190300000000041}, {'diff': 0.00010245799999999972}, {'diff': 0.00010187499999999433}, {'diff': 0.00010252799999999757}, {'diff': 0.0001018060000000029}, {'diff': 0.0001026250000000020...</msg>
<status status="PASS" starttime="20201029 12:44:36.396" endtime="20201029 12:44:36.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.416" level="INFO">${ACCURACY} = {'diff': [0.00010190300000000041, 0.00010245799999999972, 0.00010187499999999433, 0.00010252799999999757, 0.0001018060000000029, 0.00010262500000000202, 0.00010181899999999605, 0.00010216600000000076,...</msg>
<status status="PASS" starttime="20201029 12:44:36.408" endtime="20201029 12:44:36.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.427" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.425" endtime="20201029 12:44:36.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.433" level="INFO">VALUE: [0.00010190300000000041, 0.00010245799999999972, 0.00010187499999999433, 0.00010252799999999757, 0.0001018060000000029, 0.00010262500000000202, 0.00010181899999999605, 0.00010216600000000076, 0.0001023889999999944, 0.00010259700000000288, 0.0001023610000000022, 0.00010197199999999879, 0.00010240300000000091, 0.00010230500000000392, 0.00010261200000000192, 0.0001027359999999991, 0.00010247199999999929, 0.00010225000000000511, 0.0001027359999999991, 0.00010176399999999725, 0.00010259700000000288, 0.00010248599999999886, 0.00010194499999999912, 0.00010187500000000127, 0.00010261099999999551, 0.00010204199999999664, 0.00010226400000000468, 0.00010247199999999929, 0.0001023610000000022, 0.0001021939999999999, 0.00010191699999999998, 0.00010219499999999937, 0.00010194499999999912, 0.00010202799999999707, 0.00010204199999999664, 0.00010218000000000033, 0.00010266700000000073, 0.00010222199999999904, 0.00010218000000000033, 0.00010190300000000041, 0.00010238900000000134, 0.00010195799999999922, 0.00010208399999999535, 0.00010237500000000177, 0.00010197299999999826, 0.00010218000000000033, 0.00010194499999999912, 0.00010258300000000331, 0.0001022359999999986, 0.00010261099999999551]</msg>
<status status="PASS" starttime="20201029 12:44:36.430" endtime="20201029 12:44:36.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.418" endtime="20201029 12:44:36.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.452" endtime="20201029 12:44:36.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.442" endtime="20201029 12:44:36.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.439" endtime="20201029 12:44:36.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.910" endtime="20201029 12:44:36.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.908" endtime="20201029 12:44:36.478"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.503" endtime="20201029 12:44:36.526"></status>
</kw>
<msg timestamp="20201029 12:44:36.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.499" endtime="20201029 12:44:36.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.530" endtime="20201029 12:44:36.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.537" endtime="20201029 12:44:36.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.491" endtime="20201029 12:44:36.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.485" endtime="20201029 12:44:36.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.562" endtime="20201029 12:44:36.927"></status>
</kw>
<msg timestamp="20201029 12:44:36.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044184194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044287417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.558" endtime="20201029 12:44:36.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044184194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044287417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.937" endtime="20201029 12:44:36.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.957" endtime="20201029 12:44:36.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.551" endtime="20201029 12:44:36.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.545" endtime="20201029 12:44:36.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.975" level="INFO">${RESULT} = [{'diff': 0.00010322299999999951}, {'diff': 0.00010370900000000044}, {'diff': 0.00010315200000000219}, {'diff': 0.00010358300000000431}, {'diff': 0.00010348599999999986}, {'diff': 0.000103055000000004...</msg>
<status status="PASS" starttime="20201029 12:44:36.966" endtime="20201029 12:44:36.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:36.986" level="INFO">${ACCURACY} = {'diff': [0.00010322299999999951, 0.00010370900000000044, 0.00010315200000000219, 0.00010358300000000431, 0.00010348599999999986, 0.00010305500000000467, 0.00010343100000000105, 0.00010320800000000047...</msg>
<status status="PASS" starttime="20201029 12:44:36.977" endtime="20201029 12:44:36.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.998" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:44:36.995" endtime="20201029 12:44:36.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.002" level="INFO">VALUE: [0.00010322299999999951, 0.00010370900000000044, 0.00010315200000000219, 0.00010358300000000431, 0.00010348599999999986, 0.00010305500000000467, 0.00010343100000000105, 0.00010320800000000047, 0.00010281900000000399, 0.00010315300000000166, 0.00010293100000000055, 0.00010287500000000227, 0.00010291700000000098, 0.00010337499999999583, 0.00010294400000000065, 0.00010341699999999454, 0.00010316700000000123, 0.00010345800000000072, 0.00010302799999999807, 0.00010337500000000277, 0.00010329199999999789, 0.00010347299999999976, 0.00010369500000000087, 0.00010281899999999705, 0.00010354199999999814, 0.00010295800000000022, 0.00010322200000000004, 0.00010334699999999669, 0.0001036940000000014, 0.00010348599999999986, 0.00010274999999999868, 0.00010283299999999662, 0.00010359800000000335, 0.00010304199999999764, 0.00010293000000000108, 0.00010362499999999608, 0.00010288900000000184, 0.00010315300000000166, 0.00010316700000000123, 0.00010293100000000055, 0.0001031810000000008, 0.00010361099999999651, 0.00010370900000000044, 0.00010329099999999841, 0.0001033610000000032, 0.0001027359999999991, 0.00010297199999999979, 0.0001029160000000015, 0.0001036940000000014, 0.00010337499999999583]</msg>
<status status="PASS" starttime="20201029 12:44:37.000" endtime="20201029 12:44:37.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.988" endtime="20201029 12:44:37.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.008" endtime="20201029 12:44:37.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.006" endtime="20201029 12:44:37.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.005" endtime="20201029 12:44:37.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.480" endtime="20201029 12:44:37.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.479" endtime="20201029 12:44:37.029"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.040" endtime="20201029 12:44:37.060"></status>
</kw>
<msg timestamp="20201029 12:44:37.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.039" endtime="20201029 12:44:37.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.061" endtime="20201029 12:44:37.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.065" endtime="20201029 12:44:37.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.035" endtime="20201029 12:44:37.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.032" endtime="20201029 12:44:37.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.076" endtime="20201029 12:44:37.407"></status>
</kw>
<msg timestamp="20201029 12:44:37.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.075" endtime="20201029 12:44:37.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025057236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025161639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.418" endtime="20201029 12:44:37.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.437" endtime="20201029 12:44:37.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.071" endtime="20201029 12:44:37.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.069" endtime="20201029 12:44:37.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:37.456" level="INFO">${RESULT} = [{'diff': 0.00010440299999999944}, {'diff': 0.00010434700000000116}, {'diff': 0.00010405600000000167}, {'diff': 0.00010384800000000013}, {'diff': 0.00010383299999999762}, {'diff': 0.000103888999999999...</msg>
<status status="PASS" starttime="20201029 12:44:37.447" endtime="20201029 12:44:37.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:37.468" level="INFO">${ACCURACY} = {'diff': [0.00010440299999999944, 0.00010434700000000116, 0.00010405600000000167, 0.00010384800000000013, 0.00010383299999999762, 0.00010388899999999937, 0.00010417999999999886, 0.00010441599999999954...</msg>
<status status="PASS" starttime="20201029 12:44:37.458" endtime="20201029 12:44:37.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.480" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:44:37.477" endtime="20201029 12:44:37.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.485" level="INFO">VALUE: [0.00010440299999999944, 0.00010434700000000116, 0.00010405600000000167, 0.00010384800000000013, 0.00010383299999999762, 0.00010388899999999937, 0.00010417999999999886, 0.00010441599999999954, 0.00010425000000000018, 0.00010415300000000266, 0.00010416699999999876, 0.00010440299999999944, 0.00010377800000000229, 0.00010425000000000018, 0.00010456999999999828, 0.00010419399999999843, 0.00010397200000000079, 0.00010468000000000283, 0.00010425000000000018, 0.00010467999999999936, 0.0001045689999999988, 0.00010383300000000109, 0.00010427799999999932, 0.00010384800000000013, 0.00010466700000000273, 0.00010405499999999873, 0.0001043880000000004, 0.00010448600000000086, 0.00010384700000000066, 0.00010452799999999957, 0.00010413900000000309, 0.00010459699999999794, 0.00010408400000000081, 0.00010393099999999808, 0.00010391699999999851, 0.00010394399999999818, 0.00010415199999999972, 0.00010470800000000197, 0.00010391599999999904, 0.00010445799999999825, 0.00010438899999999987, 0.00010402800000000254, 0.00010393099999999808, 0.00010397200000000079, 0.00010470900000000144, 0.00010447300000000076, 0.0001042360000000006, 0.00010384700000000066, 0.00010377799999999882, 0.00010459700000000141]</msg>
<status status="PASS" starttime="20201029 12:44:37.482" endtime="20201029 12:44:37.487"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.470" endtime="20201029 12:44:37.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:37.499" endtime="20201029 12:44:37.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.494" endtime="20201029 12:44:37.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.491" endtime="20201029 12:44:37.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.030" endtime="20201029 12:44:37.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.030" endtime="20201029 12:44:37.525"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.549" endtime="20201029 12:44:37.574"></status>
</kw>
<msg timestamp="20201029 12:44:37.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.546" endtime="20201029 12:44:37.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:37.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:37.577" endtime="20201029 12:44:37.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.584" endtime="20201029 12:44:37.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.538" endtime="20201029 12:44:37.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.532" endtime="20201029 12:44:37.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:37.609" endtime="20201029 12:44:37.976"></status>
</kw>
<msg timestamp="20201029 12:44:37.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044097653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044203236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.606" endtime="20201029 12:44:37.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044097653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044203236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:37.986" endtime="20201029 12:44:38.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.006" endtime="20201029 12:44:38.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.598" endtime="20201029 12:44:38.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.593" endtime="20201029 12:44:38.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.024" level="INFO">${RESULT} = [{'diff': 0.00010558299999999937}, {'diff': 0.00010494500000000212}, {'diff': 0.00010509699999999844}, {'diff': 0.00010515299999999672}, {'diff': 0.000105514000000001}, {'diff': 0.00010516600000000376...</msg>
<status status="PASS" starttime="20201029 12:44:38.015" endtime="20201029 12:44:38.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.034" level="INFO">${ACCURACY} = {'diff': [0.00010558299999999937, 0.00010494500000000212, 0.00010509699999999844, 0.00010515299999999672, 0.000105514000000001, 0.00010516600000000376, 0.00010519399999999596, 0.00010495800000000222, ...</msg>
<status status="PASS" starttime="20201029 12:44:38.026" endtime="20201029 12:44:38.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.046" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.043" endtime="20201029 12:44:38.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.051" level="INFO">VALUE: [0.00010558299999999937, 0.00010494500000000212, 0.00010509699999999844, 0.00010515299999999672, 0.000105514000000001, 0.00010516600000000376, 0.00010519399999999596, 0.00010495800000000222, 0.00010488900000000384, 0.00010548600000000186, 0.00010516699999999629, 0.00010481899999999905, 0.00010494500000000212, 0.00010552800000000057, 0.00010566600000000426, 0.00010522300000000151, 0.00010537500000000477, 0.00010559699999999894, 0.00010570800000000297, 0.0001047360000000011, 0.00010509699999999844, 0.00010568099999999636, 0.00010561099999999851, 0.00010519500000000237, 0.0001054019999999975, 0.0001056810000000033, 0.00010495900000000169, 0.00010497200000000179, 0.00010512499999999758, 0.00010561099999999851, 0.00010480499999999948, 0.000105514000000001, 0.0001050559999999992, 0.00010559699999999894, 0.00010526400000000075, 0.00010550000000000143, 0.00010511199999999749, 0.00010537499999999783, 0.00010536099999999826, 0.000105514000000001, 0.00010512499999999758, 0.00010550000000000143, 0.00010537499999999783, 0.0001056810000000033, 0.00010570900000000244, 0.00010472300000000101, 0.00010558299999999937, 0.00010520800000000247, 0.00010552800000000057, 0.00010488900000000384]</msg>
<status status="PASS" starttime="20201029 12:44:38.048" endtime="20201029 12:44:38.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.036" endtime="20201029 12:44:38.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.065" endtime="20201029 12:44:38.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.060" endtime="20201029 12:44:38.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.057" endtime="20201029 12:44:38.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.527" endtime="20201029 12:44:38.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:37.526" endtime="20201029 12:44:38.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:43:42.664" endtime="20201029 12:44:38.091"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:43:42.532" endtime="20201029 12:44:38.093" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.111" endtime="20201029 12:44:38.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.107" endtime="20201029 12:44:38.135"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.173" endtime="20201029 12:44:38.194"></status>
</kw>
<msg timestamp="20201029 12:44:38.195" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.169" endtime="20201029 12:44:38.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.202" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.198" endtime="20201029 12:44:38.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.209" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:38.205" endtime="20201029 12:44:38.210"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:38.161" endtime="20201029 12:44:38.212"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:38.154" endtime="20201029 12:44:38.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.151" endtime="20201029 12:44:38.214"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:38.223" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:38.221" endtime="20201029 12:44:38.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.216" endtime="20201029 12:44:38.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.148" endtime="20201029 12:44:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.146" endtime="20201029 12:44:38.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.227" endtime="20201029 12:44:38.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.141" endtime="20201029 12:44:38.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.137" endtime="20201029 12:44:38.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.104" endtime="20201029 12:44:38.234"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.261" endtime="20201029 12:44:38.279"></status>
</kw>
<msg timestamp="20201029 12:44:38.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.257" endtime="20201029 12:44:38.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.283" endtime="20201029 12:44:38.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.290" endtime="20201029 12:44:38.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.249" endtime="20201029 12:44:38.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.243" endtime="20201029 12:44:38.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.316" endtime="20201029 12:44:38.690"></status>
</kw>
<msg timestamp="20201029 12:44:38.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143691653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143697639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.312" endtime="20201029 12:44:38.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143691653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143697639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.700" endtime="20201029 12:44:38.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.720" endtime="20201029 12:44:38.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.304" endtime="20201029 12:44:38.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.299" endtime="20201029 12:44:38.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:38.738" level="INFO">${RESULT} = [{'diff': 5.985999999985614e-06}, {'diff': 5.457999999985974e-06}, {'diff': 5.445000000020572e-06}, {'diff': 6.0000000000060005e-06}, {'diff': 5.9729999999924566e-06}, {'diff': 5.457999999985974e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:38.729" endtime="20201029 12:44:38.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:38.749" level="INFO">${ACCURACY} = {'diff': [5.985999999985614e-06, 5.457999999985974e-06, 5.445000000020572e-06, 6.0000000000060005e-06, 5.9729999999924566e-06, 5.457999999985974e-06, 5.444000000021099e-06, 6.04099999998442e-06, 5.416...</msg>
<status status="PASS" starttime="20201029 12:44:38.741" endtime="20201029 12:44:38.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.760" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:44:38.758" endtime="20201029 12:44:38.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.766" level="INFO">VALUE: [5.985999999985614e-06, 5.457999999985974e-06, 5.445000000020572e-06, 6.0000000000060005e-06, 5.9729999999924566e-06, 5.457999999985974e-06, 5.444000000021099e-06, 6.04099999998442e-06, 5.416000000008081e-06, 5.431000000000186e-06, 5.45800000001373e-06, 5.9720000000207385e-06, 5.445000000020572e-06, 5.444999999992817e-06, 5.971999999992983e-06, 5.973000000020212e-06, 5.9170000000219325e-06, 5.402999999987168e-06, 5.444999999992817e-06, 5.9589999999998255e-06, 6.0000000000060005e-06, 5.416999999979799e-06, 5.9720000000207385e-06, 6.0139999999986316e-06, 5.443999999993343e-06, 5.9729999999924566e-06, 5.985999999985614e-06, 5.9860000000133695e-06, 5.443999999993343e-06, 5.971999999992983e-06, 5.457999999985974e-06, 5.416000000008081e-06, 5.930999999986808e-06, 5.944000000007721e-06, 6.041999999983894e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.9729999999924566e-06, 5.9860000000133695e-06, 5.431000000000186e-06, 5.443999999993343e-06, 5.443999999993343e-06, 5.971999999992983e-06, 5.987000000012843e-06, 5.388999999994537e-06, 5.485999999998992e-06, 5.958000000000352e-06, 5.958000000000352e-06, 5.444999999992817e-06, 6.0000000000060005e-06]</msg>
<status status="PASS" starttime="20201029 12:44:38.763" endtime="20201029 12:44:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.751" endtime="20201029 12:44:38.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:38.779" endtime="20201029 12:44:38.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.774" endtime="20201029 12:44:38.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.771" endtime="20201029 12:44:38.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.238" endtime="20201029 12:44:38.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.237" endtime="20201029 12:44:38.805"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.829" endtime="20201029 12:44:38.850"></status>
</kw>
<msg timestamp="20201029 12:44:38.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.826" endtime="20201029 12:44:38.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:38.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:38.854" endtime="20201029 12:44:38.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.860" endtime="20201029 12:44:38.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.818" endtime="20201029 12:44:38.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.812" endtime="20201029 12:44:38.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:38.885" endtime="20201029 12:44:39.249"></status>
</kw>
<msg timestamp="20201029 12:44:39.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046450014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:38.882" endtime="20201029 12:44:39.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046450014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.260" endtime="20201029 12:44:39.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.279" endtime="20201029 12:44:39.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.874" endtime="20201029 12:44:39.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.869" endtime="20201029 12:44:39.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.298" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-06}, {'diff': 7.0969999999975775e-06}, {'diff': 7.0279999999992016e-06}, {'diff': 6.499999999999562e-06}, {'diff': 6.499999999999562e-06}, {'diff': 6.458000000000852e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:39.288" endtime="20201029 12:44:39.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.308" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-06, 7.0969999999975775e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.458000000000852e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.01...</msg>
<status status="PASS" starttime="20201029 12:44:39.300" endtime="20201029 12:44:39.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.320" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.317" endtime="20201029 12:44:39.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.326" level="INFO">VALUE: [6.499999999999562e-06, 7.0969999999975775e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.458000000000852e-06, 7.000000000000062e-06, 7.013999999999632e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 6.499999999999562e-06, 7.0280000000061404e-06, 7.041000000006237e-06, 6.513999999999132e-06, 7.013999999999632e-06, 6.499999999999562e-06, 6.5140000000060705e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 7.0279999999992016e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 7.0419999999987715e-06, 6.459000000000326e-06, 7.013999999999632e-06, 6.485999999999992e-06, 7.09800000000399e-06, 7.0279999999992016e-06, 6.54200000000521e-06, 7.013999999999632e-06, 7.0279999999992016e-06, 6.541999999998271e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.985999999993553e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.499999999999562e-06, 6.986000000000492e-06, 6.485999999999992e-06, 6.499999999999562e-06, 6.499999999999562e-06, 7.0279999999992016e-06]</msg>
<status status="PASS" starttime="20201029 12:44:39.322" endtime="20201029 12:44:39.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.310" endtime="20201029 12:44:39.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.340" endtime="20201029 12:44:39.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.334" endtime="20201029 12:44:39.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.331" endtime="20201029 12:44:39.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.807" endtime="20201029 12:44:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.806" endtime="20201029 12:44:39.366"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.391" endtime="20201029 12:44:39.410"></status>
</kw>
<msg timestamp="20201029 12:44:39.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.388" endtime="20201029 12:44:39.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.414" endtime="20201029 12:44:39.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.420" endtime="20201029 12:44:39.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.380" endtime="20201029 12:44:39.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.373" endtime="20201029 12:44:39.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.446" endtime="20201029 12:44:39.809"></status>
</kw>
<msg timestamp="20201029 12:44:39.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044733542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044741111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.442" endtime="20201029 12:44:39.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044733542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044741111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.819" endtime="20201029 12:44:39.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.839" endtime="20201029 12:44:39.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.434" endtime="20201029 12:44:39.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.429" endtime="20201029 12:44:39.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:39.858" level="INFO">${RESULT} = [{'diff': 7.568999999998938e-06}, {'diff': 8.082999999999008e-06}, {'diff': 8.097999999998051e-06}, {'diff': 8.125000000004656e-06}, {'diff': 7.569999999998411e-06}, {'diff': 7.555999999998841e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:39.848" endtime="20201029 12:44:39.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:39.871" level="INFO">${ACCURACY} = {'diff': [7.568999999998938e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.125000000004656e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 8.082...</msg>
<status status="PASS" starttime="20201029 12:44:39.861" endtime="20201029 12:44:39.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.884" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:44:39.881" endtime="20201029 12:44:39.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.889" level="INFO">VALUE: [7.568999999998938e-06, 8.082999999999008e-06, 8.097999999998051e-06, 8.125000000004656e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 8.082999999999008e-06, 7.554999999999368e-06, 8.068999999999438e-06, 7.568999999998938e-06, 7.554999999999368e-06, 7.527999999999702e-06, 7.554999999999368e-06, 8.082999999999008e-06, 8.083999999998481e-06, 8.09800000000499e-06, 8.096999999998578e-06, 8.041000000000298e-06, 7.568999999998938e-06, 7.555999999998841e-06, 8.083999999998481e-06, 7.554999999999368e-06, 7.554999999999368e-06, 7.554999999999368e-06, 8.096999999998578e-06, 7.026999999999728e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 8.069999999998911e-06, 7.57000000000535e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.5419999999992715e-06, 7.569999999998411e-06, 7.55600000000578e-06, 8.096999999998578e-06, 8.068999999999438e-06, 7.5419999999992715e-06, 8.110999999998147e-06, 8.000000000001062e-06, 7.555999999998841e-06, 7.473000000000896e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 8.111999999997621e-06, 8.069000000006377e-06]</msg>
<status status="PASS" starttime="20201029 12:44:39.886" endtime="20201029 12:44:39.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.874" endtime="20201029 12:44:39.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:39.902" endtime="20201029 12:44:39.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.898" endtime="20201029 12:44:39.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.895" endtime="20201029 12:44:39.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.368" endtime="20201029 12:44:39.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.367" endtime="20201029 12:44:39.929"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.960" endtime="20201029 12:44:39.982"></status>
</kw>
<msg timestamp="20201029 12:44:39.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.955" endtime="20201029 12:44:39.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.988" endtime="20201029 12:44:39.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.994" endtime="20201029 12:44:39.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.943" endtime="20201029 12:44:39.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.936" endtime="20201029 12:44:40.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.018" endtime="20201029 12:44:40.369"></status>
</kw>
<msg timestamp="20201029 12:44:40.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052113097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052121194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.015" endtime="20201029 12:44:40.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052113097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052121194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.379" endtime="20201029 12:44:40.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.399" endtime="20201029 12:44:40.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.007" endtime="20201029 12:44:40.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.002" endtime="20201029 12:44:40.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.418" level="INFO">${RESULT} = [{'diff': 8.097000000005516e-06}, {'diff': 8.639000000004726e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.069999999999911e-06}, {'diff': 8.069999999998911e-06}, {'diff': 9.166000000004892e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:40.408" endtime="20201029 12:44:40.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.430" level="INFO">${ACCURACY} = {'diff': [8.097000000005516e-06, 8.639000000004726e-06, 9.152999999997857e-06, 9.069999999999911e-06, 8.069999999998911e-06, 9.166000000004892e-06, 8.596999999999078e-06, 8.610999999998648e-06, 9.1389...</msg>
<status status="PASS" starttime="20201029 12:44:40.420" endtime="20201029 12:44:40.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.441" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:44:40.439" endtime="20201029 12:44:40.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.447" level="INFO">VALUE: [8.097000000005516e-06, 8.639000000004726e-06, 9.152999999997857e-06, 9.069999999999911e-06, 8.069999999998911e-06, 9.166000000004892e-06, 8.596999999999078e-06, 8.610999999998648e-06, 9.138999999998287e-06, 8.152999999996857e-06, 9.139000000005226e-06, 8.625000000005156e-06, 9.152999999997857e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.596999999999078e-06, 8.610999999998648e-06, 9.139000000005226e-06, 9.166999999997427e-06, 8.611000000005586e-06, 9.069000000000438e-06, 8.610999999998648e-06, 8.625000000005156e-06, 9.152999999997857e-06, 8.610999999998648e-06, 8.597999999998551e-06, 9.138999999998287e-06, 8.596999999999078e-06, 8.610999999998648e-06, 9.097999999999051e-06, 8.610999999998648e-06, 8.611000000005586e-06, 8.097000000005516e-06, 8.610999999998648e-06, 9.096999999999578e-06, 8.568999999999938e-06, 8.624999999998217e-06, 8.610999999998648e-06, 9.138999999998287e-06, 8.625000000005156e-06, 9.139000000005226e-06, 8.611000000005586e-06, 9.124999999998717e-06, 9.124999999998717e-06, 9.125000000005656e-06, 9.166999999997427e-06, 8.624999999998217e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.624999999998217e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.444" endtime="20201029 12:44:40.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.432" endtime="20201029 12:44:40.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:40.461" endtime="20201029 12:44:40.483"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.456" endtime="20201029 12:44:40.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.454" endtime="20201029 12:44:40.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.931" endtime="20201029 12:44:40.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.930" endtime="20201029 12:44:40.487"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.511" endtime="20201029 12:44:40.530"></status>
</kw>
<msg timestamp="20201029 12:44:40.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.508" endtime="20201029 12:44:40.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.534" endtime="20201029 12:44:40.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.540" endtime="20201029 12:44:40.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.500" endtime="20201029 12:44:40.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.494" endtime="20201029 12:44:40.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.566" endtime="20201029 12:44:40.937"></status>
</kw>
<msg timestamp="20201029 12:44:40.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.562" endtime="20201029 12:44:40.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044150014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.947" endtime="20201029 12:44:40.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.967" endtime="20201029 12:44:40.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.554" endtime="20201029 12:44:40.973"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.549" endtime="20201029 12:44:40.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.986" level="INFO">${RESULT} = [{'diff': 1.0221999999997233e-05}, {'diff': 1.0195000000004506e-05}, {'diff': 1.0153000000005796e-05}, {'diff': 1.0208999999997137e-05}, {'diff': 1.0264000000002882e-05}, {'diff': 9.139000000005226e-0...</msg>
<status status="PASS" starttime="20201029 12:44:40.976" endtime="20201029 12:44:40.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:40.996" level="INFO">${ACCURACY} = {'diff': [1.0221999999997233e-05, 1.0195000000004506e-05, 1.0153000000005796e-05, 1.0208999999997137e-05, 1.0264000000002882e-05, 9.139000000005226e-06, 9.194999999996567e-06, 9.665999999998454e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:44:40.988" endtime="20201029 12:44:40.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.008" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.006" endtime="20201029 12:44:41.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.016" level="INFO">VALUE: [1.0221999999997233e-05, 1.0195000000004506e-05, 1.0153000000005796e-05, 1.0208999999997137e-05, 1.0264000000002882e-05, 9.139000000005226e-06, 9.194999999996567e-06, 9.665999999998454e-06, 1.0208999999997137e-05, 9.638999999998787e-06, 9.652999999998357e-06, 1.0193999999998093e-05, 1.0193999999998093e-05, 9.667000000004866e-06, 9.667000000004866e-06, 9.624999999999218e-06, 9.679999999998024e-06, 1.0222000000004172e-05, 9.680000000004962e-06, 9.124999999998717e-06, 1.0193999999998093e-05, 9.124999999998717e-06, 9.666999999997927e-06, 9.666000000005393e-06, 1.0179999999998524e-05, 9.666000000005393e-06, 1.0208000000004602e-05, 9.680999999997497e-06, 9.665999999998454e-06, 9.707999999997163e-06, 9.208000000003602e-06, 1.0180999999997997e-05, 9.665999999998454e-06, 9.666999999997927e-06, 9.666000000005393e-06, 1.0208999999997137e-05, 1.0195000000004506e-05, 9.597000000000078e-06, 1.0193999999998093e-05, 9.652999999998357e-06, 9.666999999997927e-06, 9.597000000000078e-06, 9.666999999997927e-06, 1.0179999999998524e-05, 9.665999999998454e-06, 9.138999999998287e-06, 9.666999999997927e-06, 9.652999999998357e-06, 9.653000000005296e-06, 9.680000000004962e-06]</msg>
<status status="PASS" starttime="20201029 12:44:41.011" endtime="20201029 12:44:41.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.998" endtime="20201029 12:44:41.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.040" endtime="20201029 12:44:41.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.034" endtime="20201029 12:44:41.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.030" endtime="20201029 12:44:41.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.489" endtime="20201029 12:44:41.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.488" endtime="20201029 12:44:41.067"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.092" endtime="20201029 12:44:41.113"></status>
</kw>
<msg timestamp="20201029 12:44:41.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.088" endtime="20201029 12:44:41.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.116" endtime="20201029 12:44:41.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.123" endtime="20201029 12:44:41.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.080" endtime="20201029 12:44:41.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.074" endtime="20201029 12:44:41.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.148" endtime="20201029 12:44:41.513"></status>
</kw>
<msg timestamp="20201029 12:44:41.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046717667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.145" endtime="20201029 12:44:41.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046717667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046727847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.525" endtime="20201029 12:44:41.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.548" endtime="20201029 12:44:41.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.137" endtime="20201029 12:44:41.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.132" endtime="20201029 12:44:41.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.569" level="INFO">${RESULT} = [{'diff': 1.0180000000005462e-05}, {'diff': 1.0722000000004672e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.0708999999997637e-05}, {'diff': 1.0722999999997207e-05}, {'diff': 1.0180999999997997e-...</msg>
<status status="PASS" starttime="20201029 12:44:41.559" endtime="20201029 12:44:41.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:41.579" level="INFO">${ACCURACY} = {'diff': [1.0180000000005462e-05, 1.0722000000004672e-05, 1.1263999999996943e-05, 1.0708999999997637e-05, 1.0722999999997207e-05, 1.0180999999997997e-05, 1.0652999999999357e-05, 1.1263999999996943e-05...</msg>
<status status="PASS" starttime="20201029 12:44:41.571" endtime="20201029 12:44:41.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.591" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:44:41.588" endtime="20201029 12:44:41.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.597" level="INFO">VALUE: [1.0180000000005462e-05, 1.0722000000004672e-05, 1.1263999999996943e-05, 1.0708999999997637e-05, 1.0722999999997207e-05, 1.0180999999997997e-05, 1.0652999999999357e-05, 1.1263999999996943e-05, 1.0707999999998163e-05, 1.0721999999997733e-05, 1.0722000000004672e-05, 1.0722999999997207e-05, 1.0707999999998163e-05, 1.0723000000004146e-05, 1.0735999999997303e-05, 1.0193999999998093e-05, 1.0653000000006296e-05, 1.0721999999997733e-05, 1.0207999999997663e-05, 1.0721999999997733e-05, 1.1207999999998663e-05, 1.0722000000004672e-05, 1.0722000000004672e-05, 1.0709000000004576e-05, 1.1263999999996943e-05, 1.1249999999997373e-05, 1.0152999999998857e-05, 1.0193999999998093e-05, 1.1250000000004312e-05, 1.0708000000005102e-05, 1.0181000000004936e-05, 1.0722000000004672e-05, 1.0735999999997303e-05, 1.0209000000004076e-05, 1.0722999999997207e-05, 1.0263999999995943e-05, 1.0722000000004672e-05, 1.0722000000004672e-05, 1.0721999999997733e-05, 1.1207999999998663e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.0221999999997233e-05, 1.0721999999997733e-05, 1.0694999999998067e-05, 1.0208999999997137e-05, 1.0693999999998594e-05, 1.0708000000005102e-05, 1.0195000000004506e-05, 1.0708999999997637e-05]</msg>
<status status="PASS" starttime="20201029 12:44:41.593" endtime="20201029 12:44:41.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.581" endtime="20201029 12:44:41.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:41.616" endtime="20201029 12:44:41.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.606" endtime="20201029 12:44:41.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.603" endtime="20201029 12:44:41.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.069" endtime="20201029 12:44:41.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.068" endtime="20201029 12:44:41.642"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.667" endtime="20201029 12:44:41.685"></status>
</kw>
<msg timestamp="20201029 12:44:41.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.663" endtime="20201029 12:44:41.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.688" endtime="20201029 12:44:41.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.695" endtime="20201029 12:44:41.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.655" endtime="20201029 12:44:41.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.649" endtime="20201029 12:44:41.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.720" endtime="20201029 12:44:42.085"></status>
</kw>
<msg timestamp="20201029 12:44:42.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043895972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.717" endtime="20201029 12:44:42.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043884764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043895972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.097" endtime="20201029 12:44:42.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.127" endtime="20201029 12:44:42.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.709" endtime="20201029 12:44:42.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.704" endtime="20201029 12:44:42.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.151" level="INFO">${RESULT} = [{'diff': 1.1207999999998663e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.1693999999999594e-05}, {'diff': 1.1777000000004478e-05}, {'diff': 1.2249999999998373e-05}, {'diff': 1.1250000000004312e-...</msg>
<status status="PASS" starttime="20201029 12:44:42.141" endtime="20201029 12:44:42.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.170" level="INFO">${ACCURACY} = {'diff': [1.1207999999998663e-05, 1.1263999999996943e-05, 1.1693999999999594e-05, 1.1777000000004478e-05, 1.2249999999998373e-05, 1.1250000000004312e-05, 1.1778000000003952e-05, 1.1777999999997013e-05...</msg>
<status status="PASS" starttime="20201029 12:44:42.156" endtime="20201029 12:44:42.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.187" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.183" endtime="20201029 12:44:42.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.196" level="INFO">VALUE: [1.1207999999998663e-05, 1.1263999999996943e-05, 1.1693999999999594e-05, 1.1777000000004478e-05, 1.2249999999998373e-05, 1.1250000000004312e-05, 1.1778000000003952e-05, 1.1777999999997013e-05, 1.1235999999997803e-05, 1.1777999999997013e-05, 1.1833000000002758e-05, 1.1764000000004382e-05, 1.1791999999996583e-05, 1.1249999999997373e-05, 1.177699999999754e-05, 1.1250000000004312e-05, 1.2305999999996653e-05, 1.1806000000003092e-05, 1.1264000000003882e-05, 1.1763999999997443e-05, 1.1263999999996943e-05, 1.1721999999998733e-05, 1.1764000000004382e-05, 1.1777999999997013e-05, 1.1777999999997013e-05, 1.230499999999718e-05, 1.1237000000004216e-05, 1.1777999999997013e-05, 1.1777999999997013e-05, 1.2291999999997083e-05, 1.1777999999997013e-05, 1.1735999999998303e-05, 1.1305000000003118e-05, 1.179099999999711e-05, 1.1791999999996583e-05, 1.2291999999997083e-05, 1.1291000000003548e-05, 1.1264000000003882e-05, 1.1777999999997013e-05, 1.1250000000004312e-05, 1.1820000000002662e-05, 1.1764000000004382e-05, 1.1222000000005172e-05, 1.1221999999998233e-05, 1.1264000000003882e-05, 1.1778000000003952e-05, 1.1791999999996583e-05, 1.2347000000002828e-05, 1.1764000000004382e-05, 1.2305999999996653e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.191" endtime="20201029 12:44:42.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.173" endtime="20201029 12:44:42.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.214" endtime="20201029 12:44:42.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.208" endtime="20201029 12:44:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.204" endtime="20201029 12:44:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.644" endtime="20201029 12:44:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.643" endtime="20201029 12:44:42.242"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.273" endtime="20201029 12:44:42.298"></status>
</kw>
<msg timestamp="20201029 12:44:42.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.268" endtime="20201029 12:44:42.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.316" endtime="20201029 12:44:42.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.329" endtime="20201029 12:44:42.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.258" endtime="20201029 12:44:42.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.251" endtime="20201029 12:44:42.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.355" endtime="20201029 12:44:42.697"></status>
</kw>
<msg timestamp="20201029 12:44:42.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.056385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056397972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.351" endtime="20201029 12:44:42.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.056385153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056397972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.707" endtime="20201029 12:44:42.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.726" endtime="20201029 12:44:42.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.344" endtime="20201029 12:44:42.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.338" endtime="20201029 12:44:42.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.743" level="INFO">${RESULT} = [{'diff': 1.281899999999725e-05}, {'diff': 1.3374999999996029e-05}, {'diff': 1.281899999999725e-05}, {'diff': 1.3360999999996459e-05}, {'diff': 1.2332999999996319e-05}, {'diff': 1.2833000000003758e-05...</msg>
<status status="PASS" starttime="20201029 12:44:42.734" endtime="20201029 12:44:42.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:42.755" level="INFO">${ACCURACY} = {'diff': [1.281899999999725e-05, 1.3374999999996029e-05, 1.281899999999725e-05, 1.3360999999996459e-05, 1.2332999999996319e-05, 1.2833000000003758e-05, 1.2846999999996389e-05, 1.3360999999996459e-05, ...</msg>
<status status="PASS" starttime="20201029 12:44:42.745" endtime="20201029 12:44:42.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.769" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:44:42.765" endtime="20201029 12:44:42.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.778" level="INFO">VALUE: [1.281899999999725e-05, 1.3374999999996029e-05, 1.281899999999725e-05, 1.3360999999996459e-05, 1.2332999999996319e-05, 1.2833000000003758e-05, 1.2846999999996389e-05, 1.3360999999996459e-05, 1.3375000000002968e-05, 1.2806000000004092e-05, 1.2917000000001178e-05, 1.283299999999682e-05, 1.2820000000003662e-05, 1.2819999999996723e-05, 1.2834000000003232e-05, 1.2306000000003592e-05, 1.2320000000003162e-05, 1.2833999999996293e-05, 1.2305999999996653e-05, 1.283299999999682e-05, 1.2305000000004118e-05, 1.3361000000003398e-05, 1.2834000000003232e-05, 1.2306000000003592e-05, 1.2833000000003758e-05, 1.2862000000002372e-05, 1.3361000000003398e-05, 1.283299999999682e-05, 1.2833000000003758e-05, 1.3360999999996459e-05, 1.2264000000004882e-05, 1.2819999999996723e-05, 1.2846999999996389e-05, 1.230499999999718e-05, 1.3320000000004162e-05, 1.2820000000003662e-05, 1.2292000000004022e-05, 1.280499999999768e-05, 1.2305999999996653e-05, 1.3361000000003398e-05, 1.2806000000004092e-05, 1.2846999999996389e-05, 1.2834000000003232e-05, 1.2820000000003662e-05, 1.329099999999861e-05, 1.2264000000004882e-05, 1.2306000000003592e-05, 1.2833000000003758e-05, 1.2847999999995863e-05, 1.283299999999682e-05]</msg>
<status status="PASS" starttime="20201029 12:44:42.773" endtime="20201029 12:44:42.780"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.757" endtime="20201029 12:44:42.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:42.799" endtime="20201029 12:44:42.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.793" endtime="20201029 12:44:42.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.787" endtime="20201029 12:44:42.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.245" endtime="20201029 12:44:42.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.243" endtime="20201029 12:44:42.824"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.847" endtime="20201029 12:44:42.867"></status>
</kw>
<msg timestamp="20201029 12:44:42.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.844" endtime="20201029 12:44:42.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.871" endtime="20201029 12:44:42.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.878" endtime="20201029 12:44:42.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.837" endtime="20201029 12:44:42.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.831" endtime="20201029 12:44:42.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.902" endtime="20201029 12:44:43.279"></status>
</kw>
<msg timestamp="20201029 12:44:43.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041748833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041763264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.899" endtime="20201029 12:44:43.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041748833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041763264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.290" endtime="20201029 12:44:43.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.309" endtime="20201029 12:44:43.313"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.892" endtime="20201029 12:44:43.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.887" endtime="20201029 12:44:43.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.328" level="INFO">${RESULT} = [{'diff': 1.4431000000002248e-05}, {'diff': 1.3874999999996529e-05}, {'diff': 1.3875000000003468e-05}, {'diff': 1.3874999999996529e-05}, {'diff': 1.3346999999996889e-05}, {'diff': 1.3361000000003398e-...</msg>
<status status="PASS" starttime="20201029 12:44:43.318" endtime="20201029 12:44:43.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.338" level="INFO">${ACCURACY} = {'diff': [1.4431000000002248e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3346999999996889e-05, 1.3361000000003398e-05, 1.3889000000003038e-05, 1.3888999999996099e-05...</msg>
<status status="PASS" starttime="20201029 12:44:43.330" endtime="20201029 12:44:43.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.350" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.347" endtime="20201029 12:44:43.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.356" level="INFO">VALUE: [1.4431000000002248e-05, 1.3874999999996529e-05, 1.3875000000003468e-05, 1.3874999999996529e-05, 1.3346999999996889e-05, 1.3361000000003398e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.4444000000002344e-05, 1.3929999999995335e-05, 1.3902999999995669e-05, 1.4403000000003108e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3375000000002968e-05, 1.3889000000003038e-05, 1.4431000000002248e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3333000000004258e-05, 1.3820000000004662e-05, 1.4458000000001914e-05, 1.3346999999996889e-05, 1.3305999999997653e-05, 1.3944000000001844e-05, 1.3875000000003468e-05, 1.3888999999996099e-05, 1.3944000000001844e-05, 1.3888999999996099e-05, 1.3361000000003398e-05, 1.3347000000003828e-05, 1.3819000000005188e-05, 1.3888000000003564e-05, 1.3361000000003398e-05, 1.3347000000003828e-05, 1.3889000000003038e-05, 1.3902999999995669e-05, 1.4430999999995309e-05, 1.3360999999996459e-05, 1.3374999999996029e-05, 1.3360999999996459e-05, 1.3889000000003038e-05, 1.3888999999996099e-05, 1.3889000000003038e-05, 1.3347999999996363e-05, 1.3903000000002608e-05, 1.333299999999732e-05, 1.3917000000002178e-05, 1.3889000000003038e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.353" endtime="20201029 12:44:43.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.340" endtime="20201029 12:44:43.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.371" endtime="20201029 12:44:43.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.366" endtime="20201029 12:44:43.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.363" endtime="20201029 12:44:43.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.826" endtime="20201029 12:44:43.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.825" endtime="20201029 12:44:43.397"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.421" endtime="20201029 12:44:43.441"></status>
</kw>
<msg timestamp="20201029 12:44:43.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.418" endtime="20201029 12:44:43.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.449" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.444" endtime="20201029 12:44:43.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.451" endtime="20201029 12:44:43.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.410" endtime="20201029 12:44:43.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.404" endtime="20201029 12:44:43.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.478" endtime="20201029 12:44:43.838"></status>
</kw>
<msg timestamp="20201029 12:44:43.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044350819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04436525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:43.474" endtime="20201029 12:44:43.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044350819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04436525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:43.848" endtime="20201029 12:44:43.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.867" endtime="20201029 12:44:43.871"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.467" endtime="20201029 12:44:43.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.462" endtime="20201029 12:44:43.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.884" level="INFO">${RESULT} = [{'diff': 1.4431000000002248e-05}, {'diff': 1.4959000000001887e-05}, {'diff': 1.4431000000002248e-05}, {'diff': 1.4901999999997195e-05}, {'diff': 1.4417000000002678e-05}, {'diff': 1.4944000000002844e-...</msg>
<status status="PASS" starttime="20201029 12:44:43.875" endtime="20201029 12:44:43.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:43.894" level="INFO">${ACCURACY} = {'diff': [1.4431000000002248e-05, 1.4959000000001887e-05, 1.4431000000002248e-05, 1.4901999999997195e-05, 1.4417000000002678e-05, 1.4944000000002844e-05, 1.4402000000003634e-05, 1.4945000000002318e-05...</msg>
<status status="PASS" starttime="20201029 12:44:43.887" endtime="20201029 12:44:43.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.905" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:44:43.903" endtime="20201029 12:44:43.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.911" level="INFO">VALUE: [1.4431000000002248e-05, 1.4959000000001887e-05, 1.4431000000002248e-05, 1.4901999999997195e-05, 1.4417000000002678e-05, 1.4944000000002844e-05, 1.4402000000003634e-05, 1.4945000000002318e-05, 1.4958000000002414e-05, 1.4958999999994949e-05, 1.4944000000002844e-05, 1.4889000000004038e-05, 1.4416999999995739e-05, 1.5471999999995545e-05, 1.4403000000003108e-05, 1.4959000000001887e-05, 1.4944999999995379e-05, 1.4945000000002318e-05, 1.4958999999994949e-05, 1.4931000000002748e-05, 1.501300000000122e-05, 1.5457999999995975e-05, 1.5514000000001194e-05, 1.4417000000002678e-05, 1.4403000000003108e-05, 1.4972000000001984e-05, 1.4416999999995739e-05, 1.4417000000002678e-05, 1.4430999999995309e-05, 1.4958000000002414e-05, 1.4417000000002678e-05, 1.4930000000003274e-05, 1.4945000000002318e-05, 1.4957999999995475e-05, 1.4945000000002318e-05, 1.4416999999995739e-05, 1.4415999999996265e-05, 1.4959000000001887e-05, 1.4931000000002748e-05, 1.4430000000002774e-05, 1.4416999999995739e-05, 1.4943999999995905e-05, 1.4959000000001887e-05, 1.4929999999996335e-05, 1.4403000000003108e-05, 1.4415999999996265e-05, 1.4431000000002248e-05, 1.4417000000002678e-05, 1.4416000000003204e-05, 1.4959000000001887e-05]</msg>
<status status="PASS" starttime="20201029 12:44:43.908" endtime="20201029 12:44:43.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.896" endtime="20201029 12:44:43.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:43.925" endtime="20201029 12:44:43.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.919" endtime="20201029 12:44:43.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.917" endtime="20201029 12:44:43.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.399" endtime="20201029 12:44:43.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.398" endtime="20201029 12:44:43.951"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.974" endtime="20201029 12:44:43.993"></status>
</kw>
<msg timestamp="20201029 12:44:43.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.970" endtime="20201029 12:44:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.996" endtime="20201029 12:44:44.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.003" endtime="20201029 12:44:44.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.963" endtime="20201029 12:44:44.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.957" endtime="20201029 12:44:44.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.028" endtime="20201029 12:44:44.376"></status>
</kw>
<msg timestamp="20201029 12:44:44.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042125667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.024" endtime="20201029 12:44:44.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042125667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.386" endtime="20201029 12:44:44.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.407" endtime="20201029 12:44:44.411"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.017" endtime="20201029 12:44:44.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.012" endtime="20201029 12:44:44.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.429" level="INFO">${RESULT} = [{'diff': 1.6014000000001694e-05}, {'diff': 1.5429999999996835e-05}, {'diff': 1.5999999999995185e-05}, {'diff': 1.5473000000001957e-05}, {'diff': 1.6014000000001694e-05}, {'diff': 1.605499999999399e-0...</msg>
<status status="PASS" starttime="20201029 12:44:44.416" endtime="20201029 12:44:44.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.442" level="INFO">${ACCURACY} = {'diff': [1.6014000000001694e-05, 1.5429999999996835e-05, 1.5999999999995185e-05, 1.5473000000001957e-05, 1.6014000000001694e-05, 1.605499999999399e-05, 1.6000000000002124e-05, 1.5486000000002054e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:44.432" endtime="20201029 12:44:44.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.455" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:44:44.452" endtime="20201029 12:44:44.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.461" level="INFO">VALUE: [1.6014000000001694e-05, 1.5429999999996835e-05, 1.5999999999995185e-05, 1.5473000000001957e-05, 1.6014000000001694e-05, 1.605499999999399e-05, 1.6000000000002124e-05, 1.5486000000002054e-05, 1.6056000000000403e-05, 1.5458000000002914e-05, 1.5486000000002054e-05, 1.543099999999631e-05, 1.5473000000001957e-05, 1.6069999999999973e-05, 1.5457999999995975e-05, 1.6000000000002124e-05, 1.6042000000000833e-05, 1.6028000000001263e-05, 1.5472000000002484e-05, 1.602700000000179e-05, 1.60690000000005e-05, 1.5486000000002054e-05, 1.5999999999995185e-05, 1.601299999999528e-05, 1.6000000000002124e-05, 1.5999999999995185e-05, 1.5943999999996905e-05, 1.5472000000002484e-05, 1.5500000000001624e-05, 1.5486000000002054e-05, 1.5514000000001194e-05, 1.5999999999995185e-05, 1.6014000000001694e-05, 1.5471999999995545e-05, 1.605500000000093e-05, 1.545899999999545e-05, 1.5473000000001957e-05, 1.6000000000002124e-05, 1.5472000000002484e-05, 1.5485999999995115e-05, 1.5459000000002387e-05, 1.5472000000002484e-05, 1.6000000000002124e-05, 1.598699999999509e-05, 1.5486000000002054e-05, 1.5986000000002554e-05, 1.5459000000002387e-05, 1.5999999999995185e-05, 1.6027999999994325e-05, 1.5486000000002054e-05]</msg>
<status status="PASS" starttime="20201029 12:44:44.458" endtime="20201029 12:44:44.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.444" endtime="20201029 12:44:44.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:44.476" endtime="20201029 12:44:44.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.471" endtime="20201029 12:44:44.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.468" endtime="20201029 12:44:44.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.953" endtime="20201029 12:44:44.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.951" endtime="20201029 12:44:44.502"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.539" endtime="20201029 12:44:44.558"></status>
</kw>
<msg timestamp="20201029 12:44:44.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.535" endtime="20201029 12:44:44.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.563" endtime="20201029 12:44:44.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.569" endtime="20201029 12:44:44.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.523" endtime="20201029 12:44:44.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.510" endtime="20201029 12:44:44.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.594" endtime="20201029 12:44:44.937"></status>
</kw>
<msg timestamp="20201029 12:44:44.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05709325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:44.590" endtime="20201029 12:44:44.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057076111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05709325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:44.946" endtime="20201029 12:44:44.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.965" endtime="20201029 12:44:44.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.583" endtime="20201029 12:44:44.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.578" endtime="20201029 12:44:44.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.983" level="INFO">${RESULT} = [{'diff': 1.713899999999935e-05}, {'diff': 1.659700000000014e-05}, {'diff': 1.6527999999994825e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.645899999999645e-05}, {'diff': 1.6528000000001764e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:44.974" endtime="20201029 12:44:44.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:44.994" level="INFO">${ACCURACY} = {'diff': [1.713899999999935e-05, 1.659700000000014e-05, 1.6527999999994825e-05, 1.6528000000001764e-05, 1.645899999999645e-05, 1.6528000000001764e-05, 1.6514000000002194e-05, 1.70690000000015e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 12:44:44.985" endtime="20201029 12:44:44.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.006" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.003" endtime="20201029 12:44:45.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.011" level="INFO">VALUE: [1.713899999999935e-05, 1.659700000000014e-05, 1.6527999999994825e-05, 1.6528000000001764e-05, 1.645899999999645e-05, 1.6528000000001764e-05, 1.6514000000002194e-05, 1.70690000000015e-05, 1.6541999999994395e-05, 1.6542000000001333e-05, 1.651300000000272e-05, 1.655500000000143e-05, 1.7056000000001403e-05, 1.6527999999994825e-05, 1.705499999999499e-05, 1.6486000000003054e-05, 1.6542000000001333e-05, 1.70690000000015e-05, 1.7056000000001403e-05, 1.6527999999994825e-05, 1.6542000000001333e-05, 1.6513999999995255e-05, 1.6556000000000903e-05, 1.70969999999937e-05, 1.652700000000229e-05, 1.70690000000015e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.6597999999999613e-05, 1.70690000000015e-05, 1.652700000000229e-05, 1.6986000000003554e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.704100000000236e-05, 1.7098000000000113e-05, 1.705500000000193e-05, 1.7041999999994895e-05, 1.6528000000001764e-05, 1.7041999999994895e-05, 1.6528000000001764e-05, 1.7042000000001833e-05, 1.7028000000002264e-05, 1.7014000000002694e-05, 1.656899999999406e-05, 1.7070000000000973e-05, 1.70690000000015e-05, 1.6500000000002624e-05, 1.7042000000001833e-05, 1.652700000000229e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.008" endtime="20201029 12:44:45.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.996" endtime="20201029 12:44:45.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.024" endtime="20201029 12:44:45.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.020" endtime="20201029 12:44:45.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.017" endtime="20201029 12:44:45.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.505" endtime="20201029 12:44:45.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.503" endtime="20201029 12:44:45.049"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.073" endtime="20201029 12:44:45.091"></status>
</kw>
<msg timestamp="20201029 12:44:45.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.069" endtime="20201029 12:44:45.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.094" endtime="20201029 12:44:45.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.101" endtime="20201029 12:44:45.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.062" endtime="20201029 12:44:45.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.056" endtime="20201029 12:44:45.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.125" endtime="20201029 12:44:45.469"></status>
</kw>
<msg timestamp="20201029 12:44:45.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041979986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.121" endtime="20201029 12:44:45.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041979986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041997583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.479" endtime="20201029 12:44:45.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.497" endtime="20201029 12:44:45.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.114" endtime="20201029 12:44:45.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.109" endtime="20201029 12:44:45.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.515" level="INFO">${RESULT} = [{'diff': 1.759700000000114e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.7584000000001043e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.812499999999384e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:45.506" endtime="20201029 12:44:45.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:45.525" level="INFO">${ACCURACY} = {'diff': [1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.7584000000001043e-05, 1.7056000000001403e-05, 1.812499999999384e-05, 1.7584000000001043e-05, 1.761100000000071e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:44:45.517" endtime="20201029 12:44:45.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.536" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:44:45.534" endtime="20201029 12:44:45.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.541" level="INFO">VALUE: [1.759700000000114e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.7584000000001043e-05, 1.7056000000001403e-05, 1.812499999999384e-05, 1.7584000000001043e-05, 1.761100000000071e-05, 1.813900000000035e-05, 1.7584000000001043e-05, 1.7542000000002334e-05, 1.7569999999994534e-05, 1.7584000000001043e-05, 1.813900000000035e-05, 1.8179999999999585e-05, 1.7528000000002764e-05, 1.7584000000001043e-05, 1.758299999999463e-05, 1.812500000000078e-05, 1.75969999999942e-05, 1.759700000000114e-05, 1.705499999999499e-05, 1.811100000000121e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.812500000000078e-05, 1.8056000000002403e-05, 1.759700000000114e-05, 1.759700000000114e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.758300000000157e-05, 1.7598000000000613e-05, 1.7542000000002334e-05, 1.758300000000157e-05, 1.805499999999599e-05, 1.811100000000121e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.7584000000001043e-05, 1.811099999999427e-05, 1.811100000000121e-05, 1.7584000000001043e-05, 1.7056000000001403e-05, 1.7500000000003624e-05, 1.811099999999427e-05, 1.809700000000164e-05, 1.7584000000001043e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201029 12:44:45.538" endtime="20201029 12:44:45.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.527" endtime="20201029 12:44:45.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:45.554" endtime="20201029 12:44:45.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.550" endtime="20201029 12:44:45.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.547" endtime="20201029 12:44:45.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.052" endtime="20201029 12:44:45.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.050" endtime="20201029 12:44:45.580"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.603" endtime="20201029 12:44:45.623"></status>
</kw>
<msg timestamp="20201029 12:44:45.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.600" endtime="20201029 12:44:45.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.626" endtime="20201029 12:44:45.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.633" endtime="20201029 12:44:45.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.592" endtime="20201029 12:44:45.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.586" endtime="20201029 12:44:45.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.672" endtime="20201029 12:44:46.039"></status>
</kw>
<msg timestamp="20201029 12:44:46.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042524278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042543444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.665" endtime="20201029 12:44:46.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042524278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042543444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.049" endtime="20201029 12:44:46.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.069" endtime="20201029 12:44:46.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.652" endtime="20201029 12:44:46.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.644" endtime="20201029 12:44:46.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.087" level="INFO">${RESULT} = [{'diff': 1.9166000000001016e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.862500000000128e-05}, {'diff': 1.9166000000001016e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.863900000000085e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:46.078" endtime="20201029 12:44:46.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.098" level="INFO">${ACCURACY} = {'diff': [1.9166000000001016e-05, 1.863900000000085e-05, 1.862500000000128e-05, 1.9166000000001016e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.908299999999613e-05, 1.811099999999427e-05, 1.91...</msg>
<status status="PASS" starttime="20201029 12:44:46.090" endtime="20201029 12:44:46.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.109" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.107" endtime="20201029 12:44:46.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.115" level="INFO">VALUE: [1.9166000000001016e-05, 1.863900000000085e-05, 1.862500000000128e-05, 1.9166000000001016e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.908299999999613e-05, 1.811099999999427e-05, 1.915300000000092e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.9166000000001016e-05, 1.8680000000000085e-05, 1.9249999999998435e-05, 1.919499999999963e-05, 1.811100000000121e-05, 1.9166000000001016e-05, 1.862500000000128e-05, 1.862500000000128e-05, 1.863900000000085e-05, 1.9180000000000585e-05, 1.858300000000257e-05, 1.916700000000049e-05, 1.863900000000085e-05, 1.916700000000049e-05, 1.865300000000042e-05, 1.862500000000128e-05, 1.872299999999827e-05, 1.809700000000164e-05, 1.811100000000121e-05, 1.8556000000002904e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.8652000000000946e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.9180000000000585e-05, 1.916700000000049e-05, 1.9166000000001016e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 1.8612000000001183e-05, 1.9166000000001016e-05, 1.812500000000078e-05, 1.916700000000049e-05, 1.863900000000085e-05, 1.863900000000085e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.112" endtime="20201029 12:44:46.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.100" endtime="20201029 12:44:46.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.136" endtime="20201029 12:44:46.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.130" endtime="20201029 12:44:46.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.127" endtime="20201029 12:44:46.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.582" endtime="20201029 12:44:46.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.581" endtime="20201029 12:44:46.162"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.187" endtime="20201029 12:44:46.206"></status>
</kw>
<msg timestamp="20201029 12:44:46.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.183" endtime="20201029 12:44:46.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.210" endtime="20201029 12:44:46.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.216" endtime="20201029 12:44:46.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.176" endtime="20201029 12:44:46.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.169" endtime="20201029 12:44:46.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.242" endtime="20201029 12:44:46.606"></status>
</kw>
<msg timestamp="20201029 12:44:46.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044186694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044205889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.238" endtime="20201029 12:44:46.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044186694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044205889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.616" endtime="20201029 12:44:46.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.636" endtime="20201029 12:44:46.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.230" endtime="20201029 12:44:46.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.225" endtime="20201029 12:44:46.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.654" level="INFO">${RESULT} = [{'diff': 1.919499999999963e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 1.9708000000000225e-05}, {'diff': 1.911100000000221e-05}, {'diff': 1.965300000000142e-05}, {'diff': 1.969500000000013e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:46.645" endtime="20201029 12:44:46.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:46.666" level="INFO">${ACCURACY} = {'diff': [1.919499999999963e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 1.911100000000221e-05, 1.965300000000142e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.919499999999963e-05, 2.02...</msg>
<status status="PASS" starttime="20201029 12:44:46.656" endtime="20201029 12:44:46.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.677" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:44:46.675" endtime="20201029 12:44:46.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.683" level="INFO">VALUE: [1.919499999999963e-05, 2.0222000000000295e-05, 1.9708000000000225e-05, 1.911100000000221e-05, 1.965300000000142e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.919499999999963e-05, 2.0208000000000725e-05, 1.965300000000142e-05, 2.0208000000000725e-05, 1.969500000000013e-05, 1.9694000000000655e-05, 1.9708000000000225e-05, 1.9666000000001516e-05, 1.969500000000013e-05, 1.9680000000001086e-05, 1.915299999999398e-05, 1.969500000000013e-05, 1.916700000000049e-05, 1.969500000000013e-05, 1.9709000000006638e-05, 1.9708000000000225e-05, 1.969500000000013e-05, 2.02090000000002e-05, 2.0236000000006804e-05, 1.9708000000000225e-05, 1.915300000000092e-05, 1.9180000000000585e-05, 1.9694000000000655e-05, 1.973699999999884e-05, 2.0208000000000725e-05, 1.968100000000056e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.9166000000001016e-05, 1.9221999999999295e-05, 2.0194000000001155e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.916700000000049e-05, 1.965300000000142e-05, 2.0277999999998575e-05, 1.969500000000013e-05, 1.969500000000013e-05, 1.962500000000228e-05, 2.0235999999999865e-05]</msg>
<status status="PASS" starttime="20201029 12:44:46.680" endtime="20201029 12:44:46.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.668" endtime="20201029 12:44:46.686"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:46.697" endtime="20201029 12:44:46.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.692" endtime="20201029 12:44:46.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.689" endtime="20201029 12:44:46.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.165" endtime="20201029 12:44:46.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.163" endtime="20201029 12:44:46.723"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.747" endtime="20201029 12:44:46.767"></status>
</kw>
<msg timestamp="20201029 12:44:46.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.744" endtime="20201029 12:44:46.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.770" endtime="20201029 12:44:46.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.777" endtime="20201029 12:44:46.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.736" endtime="20201029 12:44:46.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.730" endtime="20201029 12:44:46.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.802" endtime="20201029 12:44:47.176"></status>
</kw>
<msg timestamp="20201029 12:44:47.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044204819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.799" endtime="20201029 12:44:47.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044204819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044225556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.186" endtime="20201029 12:44:47.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.205" endtime="20201029 12:44:47.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.791" endtime="20201029 12:44:47.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.786" endtime="20201029 12:44:47.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.224" level="INFO">${RESULT} = [{'diff': 2.073699999999984e-05}, {'diff': 2.0749999999999935e-05}, {'diff': 2.0763999999999505e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 2.0749999999999935e-0...</msg>
<status status="PASS" starttime="20201029 12:44:47.214" endtime="20201029 12:44:47.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.240" level="INFO">${ACCURACY} = {'diff': [2.073699999999984e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.1264000000000005e-05, 2.0222000000000295e-05, 2.0749999999999935e-05, 2.1291999999999145e-05, 2.0749999999999935e-05,...</msg>
<status status="PASS" starttime="20201029 12:44:47.226" endtime="20201029 12:44:47.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.252" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.250" endtime="20201029 12:44:47.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.258" level="INFO">VALUE: [2.073699999999984e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.1264000000000005e-05, 2.0222000000000295e-05, 2.0749999999999935e-05, 2.1291999999999145e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.0749999999999935e-05, 2.0249999999999435e-05, 2.0791999999998645e-05, 2.1277999999999575e-05, 2.0749999999999935e-05, 2.02090000000002e-05, 2.0222000000000295e-05, 2.0708000000001225e-05, 2.0194000000001155e-05, 2.0749999999999935e-05, 2.081899999999831e-05, 2.1347999999997425e-05, 2.0749999999999935e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.0235999999999865e-05, 2.0736000000000365e-05, 2.080499999999874e-05, 2.0736000000000365e-05, 2.0792000000005584e-05, 2.02769999999991e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.0249999999999435e-05, 2.0777999999999075e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.0749999999999935e-05, 2.0235999999999865e-05, 2.0763999999999505e-05, 2.072300000000027e-05, 2.0736000000000365e-05, 2.02090000000002e-05, 2.0763999999999505e-05, 2.1277999999999575e-05, 2.0235999999999865e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.255" endtime="20201029 12:44:47.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.242" endtime="20201029 12:44:47.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.271" endtime="20201029 12:44:47.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.267" endtime="20201029 12:44:47.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.264" endtime="20201029 12:44:47.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.725" endtime="20201029 12:44:47.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.724" endtime="20201029 12:44:47.297"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.322" endtime="20201029 12:44:47.340"></status>
</kw>
<msg timestamp="20201029 12:44:47.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.318" endtime="20201029 12:44:47.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.344" endtime="20201029 12:44:47.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.351" endtime="20201029 12:44:47.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.310" endtime="20201029 12:44:47.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.304" endtime="20201029 12:44:47.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.376" endtime="20201029 12:44:47.742"></status>
</kw>
<msg timestamp="20201029 12:44:47.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044003736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:47.372" endtime="20201029 12:44:47.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044003736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044025, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:47.752" endtime="20201029 12:44:47.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.772" endtime="20201029 12:44:47.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.365" endtime="20201029 12:44:47.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.360" endtime="20201029 12:44:47.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.791" level="INFO">${RESULT} = [{'diff': 2.1264000000000005e-05}, {'diff': 2.12770000000001e-05}, {'diff': 2.1291999999999145e-05}, {'diff': 2.129099999999967e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.1277999999999575e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:47.781" endtime="20201029 12:44:47.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:47.801" level="INFO">${ACCURACY} = {'diff': [2.1264000000000005e-05, 2.12770000000001e-05, 2.1291999999999145e-05, 2.129099999999967e-05, 2.181899999999931e-05, 2.1277999999999575e-05, 2.233299999999938e-05, 2.2347999999998425e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 12:44:47.793" endtime="20201029 12:44:47.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.812" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:44:47.810" endtime="20201029 12:44:47.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.818" level="INFO">VALUE: [2.1264000000000005e-05, 2.12770000000001e-05, 2.1291999999999145e-05, 2.129099999999967e-05, 2.181899999999931e-05, 2.1277999999999575e-05, 2.233299999999938e-05, 2.2347999999998425e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.129099999999967e-05, 2.2334000000005794e-05, 2.1222000000001295e-05, 2.234700000000589e-05, 2.1222000000001295e-05, 2.2292000000000145e-05, 2.180499999999974e-05, 2.187500000000453e-05, 2.1819999999998785e-05, 2.1277999999999575e-05, 2.1764000000000505e-05, 2.186099999999802e-05, 2.181899999999931e-05, 2.186099999999802e-05, 2.1819999999998785e-05, 2.1264000000000005e-05, 2.1805999999999215e-05, 2.1791999999999645e-05, 2.1277999999999575e-05, 2.1277999999999575e-05, 2.1750000000000935e-05, 2.231899999999981e-05, 2.1764000000000505e-05, 2.12770000000001e-05, 2.181899999999931e-05, 2.1778000000000075e-05, 2.1764000000000505e-05, 2.1277999999999575e-05, 2.1250000000000435e-05, 2.180499999999974e-05, 2.1736000000001365e-05, 2.231899999999981e-05, 2.1805999999999215e-05, 2.1833999999998355e-05, 2.2333999999998855e-05, 2.1750000000000935e-05, 2.236099999999852e-05, 2.1791999999999645e-05, 2.1805999999999215e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201029 12:44:47.815" endtime="20201029 12:44:47.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.803" endtime="20201029 12:44:47.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.832" endtime="20201029 12:44:47.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.827" endtime="20201029 12:44:47.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.824" endtime="20201029 12:44:47.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.299" endtime="20201029 12:44:47.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.298" endtime="20201029 12:44:47.858"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.882" endtime="20201029 12:44:47.903"></status>
</kw>
<msg timestamp="20201029 12:44:47.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.878" endtime="20201029 12:44:47.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.906" endtime="20201029 12:44:47.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.913" endtime="20201029 12:44:47.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.871" endtime="20201029 12:44:47.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.865" endtime="20201029 12:44:47.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.938" endtime="20201029 12:44:48.302"></status>
</kw>
<msg timestamp="20201029 12:44:48.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045580389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045603764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.935" endtime="20201029 12:44:48.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045580389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045603764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.312" endtime="20201029 12:44:48.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.332" endtime="20201029 12:44:48.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.927" endtime="20201029 12:44:48.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.922" endtime="20201029 12:44:48.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.350" level="INFO">${RESULT} = [{'diff': 2.337499999999909e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.293100000000381e-05}, {'diff': 2.2861999999998495e-05}, {'diff': 2.2901999999998257e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:48.341" endtime="20201029 12:44:48.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.360" level="INFO">${ACCURACY} = {'diff': [2.337499999999909e-05, 2.338899999999866e-05, 2.234699999999895e-05, 2.293100000000381e-05, 2.2861999999998495e-05, 2.2901999999998257e-05, 2.2333999999998855e-05, 2.2333999999998855e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:44:48.352" endtime="20201029 12:44:48.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.372" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.369" endtime="20201029 12:44:48.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.378" level="INFO">VALUE: [2.337499999999909e-05, 2.338899999999866e-05, 2.234699999999895e-05, 2.293100000000381e-05, 2.2861999999998495e-05, 2.2901999999998257e-05, 2.2333999999998855e-05, 2.2333999999998855e-05, 2.284699999999945e-05, 2.291700000000424e-05, 2.286099999999902e-05, 2.2848000000005864e-05, 2.287499999999859e-05, 2.2334000000005794e-05, 2.287499999999859e-05, 2.33890000000056e-05, 2.2943999999996967e-05, 2.2333999999998855e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.2347999999998425e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.2861999999998495e-05, 2.240299999999723e-05, 2.287499999999859e-05, 2.284699999999945e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.2861999999998495e-05, 2.2861999999998495e-05, 2.236099999999852e-05, 2.233299999999938e-05, 2.233300000000632e-05, 2.2819999999999785e-05, 2.3361999999998995e-05, 2.33890000000056e-05, 2.280500000000074e-05, 2.234699999999895e-05, 2.234699999999895e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.236099999999852e-05, 2.236099999999852e-05, 2.294500000000338e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.2334000000005794e-05, 2.2333999999998855e-05, 2.283299999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.374" endtime="20201029 12:44:48.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.362" endtime="20201029 12:44:48.381"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.393" endtime="20201029 12:44:48.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.387" endtime="20201029 12:44:48.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.384" endtime="20201029 12:44:48.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.860" endtime="20201029 12:44:48.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.859" endtime="20201029 12:44:48.419"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.443" endtime="20201029 12:44:48.464"></status>
</kw>
<msg timestamp="20201029 12:44:48.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.439" endtime="20201029 12:44:48.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:48.467" endtime="20201029 12:44:48.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.474" endtime="20201029 12:44:48.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.432" endtime="20201029 12:44:48.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.426" endtime="20201029 12:44:48.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.499" endtime="20201029 12:44:48.868"></status>
</kw>
<msg timestamp="20201029 12:44:48.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043940417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.496" endtime="20201029 12:44:48.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043940417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043975319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:48.878" endtime="20201029 12:44:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:48.899" endtime="20201029 12:44:48.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.488" endtime="20201029 12:44:48.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.482" endtime="20201029 12:44:48.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:48.918" level="INFO">${RESULT} = [{'diff': 3.490199999999638e-05}, {'diff': 3.51250000000039e-05}, {'diff': 3.5110999999997394e-05}, {'diff': 3.4776999999999725e-05}, {'diff': 3.526400000000013e-05}, {'diff': 3.5318999999998935e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:48.909" endtime="20201029 12:44:48.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:48.930" level="INFO">${ACCURACY} = {'diff': [3.490199999999638e-05, 3.51250000000039e-05, 3.5110999999997394e-05, 3.4776999999999725e-05, 3.526400000000013e-05, 3.5318999999998935e-05, 3.466600000000264e-05, 3.475000000000006e-05, 3.45...</msg>
<status status="PASS" starttime="20201029 12:44:48.920" endtime="20201029 12:44:48.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.941" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:44:48.939" endtime="20201029 12:44:48.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:48.947" level="INFO">VALUE: [3.490199999999638e-05, 3.51250000000039e-05, 3.5110999999997394e-05, 3.4776999999999725e-05, 3.526400000000013e-05, 3.5318999999998935e-05, 3.466600000000264e-05, 3.475000000000006e-05, 3.4554999999998615e-05, 3.54580000000021e-05, 3.45700000000046e-05, 3.5332999999998504e-05, 3.455599999999809e-05, 3.5124999999996964e-05, 3.523600000000099e-05, 3.5124999999996964e-05, 3.548700000000071e-05, 3.520900000000132e-05, 3.500000000000031e-05, 3.490300000000279e-05, 3.490300000000279e-05, 3.500000000000031e-05, 3.529199999999927e-05, 3.488900000000322e-05, 3.547200000000167e-05, 3.490199999999638e-05, 3.544399999999559e-05, 3.465199999999613e-05, 3.490199999999638e-05, 3.523600000000099e-05, 3.4888999999996284e-05, 3.5110999999997394e-05, 3.5110999999997394e-05, 3.477800000000614e-05, 3.5332999999998504e-05, 3.479199999999877e-05, 3.4554999999998615e-05, 3.526400000000013e-05, 3.522200000000142e-05, 3.516600000000314e-05, 3.5263000000000655e-05, 3.547200000000167e-05, 3.5445000000002e-05, 3.501399999999988e-05, 3.522300000000089e-05, 3.4624999999996464e-05, 3.470900000000082e-05, 3.4680999999994744e-05, 3.5445000000002e-05, 3.466700000000211e-05]</msg>
<status status="PASS" starttime="20201029 12:44:48.944" endtime="20201029 12:44:48.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.932" endtime="20201029 12:44:48.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:48.961" endtime="20201029 12:44:48.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.956" endtime="20201029 12:44:48.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.953" endtime="20201029 12:44:48.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.421" endtime="20201029 12:44:48.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.420" endtime="20201029 12:44:48.987"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.012" endtime="20201029 12:44:49.031"></status>
</kw>
<msg timestamp="20201029 12:44:49.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.008" endtime="20201029 12:44:49.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.035" endtime="20201029 12:44:49.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.042" endtime="20201029 12:44:49.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.000" endtime="20201029 12:44:49.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.994" endtime="20201029 12:44:49.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.067" endtime="20201029 12:44:49.430"></status>
</kw>
<msg timestamp="20201029 12:44:49.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044919389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044955139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.063" endtime="20201029 12:44:49.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044919389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044955139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.440" endtime="20201029 12:44:49.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.460" endtime="20201029 12:44:49.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.056" endtime="20201029 12:44:49.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.050" endtime="20201029 12:44:49.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:49.478" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.623599999999505e-05}, {'diff': 3.64580000000031e-05}, {'diff': 3.630599999999984e-05}, {'diff': 3.6332999999999505e-05}, {'diff': 3.57780000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:49.469" endtime="20201029 12:44:49.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:49.490" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.623599999999505e-05, 3.64580000000031e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.640300000000429e-05, 3.62220...</msg>
<status status="PASS" starttime="20201029 12:44:49.480" endtime="20201029 12:44:49.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.502" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:44:49.500" endtime="20201029 12:44:49.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.508" level="INFO">VALUE: [3.575000000000106e-05, 3.623599999999505e-05, 3.64580000000031e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.57780000000002e-05, 3.579199999999977e-05, 3.640300000000429e-05, 3.622200000000242e-05, 3.566700000000311e-05, 3.569500000000225e-05, 3.555600000000603e-05, 3.64580000000031e-05, 3.566700000000311e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.570900000000182e-05, 3.647300000000214e-05, 3.566700000000311e-05, 3.601400000000088e-05, 3.647300000000214e-05, 3.57780000000002e-05, 3.59859999999948e-05, 3.55700000000056e-05, 3.6346999999999074e-05, 3.555599999999909e-05, 3.642999999999702e-05, 3.6318999999999935e-05, 3.6263000000001655e-05, 3.608399999999873e-05, 3.6332999999999505e-05, 3.622199999999548e-05, 3.568000000000321e-05, 3.641599999999745e-05, 3.622200000000242e-05, 3.601400000000088e-05, 3.611100000000533e-05, 3.643000000000396e-05, 3.629200000000027e-05, 3.566700000000311e-05, 3.555599999999909e-05, 3.6138999999997534e-05, 3.5680999999995744e-05, 3.55979999999978e-05, 3.636200000000506e-05, 3.5680999999995744e-05, 3.584799999999805e-05, 3.6124999999997964e-05, 3.620900000000232e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201029 12:44:49.504" endtime="20201029 12:44:49.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.492" endtime="20201029 12:44:49.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:49.521" endtime="20201029 12:44:49.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.517" endtime="20201029 12:44:49.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.514" endtime="20201029 12:44:49.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.989" endtime="20201029 12:44:49.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:48.988" endtime="20201029 12:44:49.548"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.574" endtime="20201029 12:44:49.594"></status>
</kw>
<msg timestamp="20201029 12:44:49.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.570" endtime="20201029 12:44:49.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:49.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:49.598" endtime="20201029 12:44:49.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.604" endtime="20201029 12:44:49.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.562" endtime="20201029 12:44:49.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.555" endtime="20201029 12:44:49.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:49.630" endtime="20201029 12:44:49.995"></status>
</kw>
<msg timestamp="20201029 12:44:50.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046167333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:49.626" endtime="20201029 12:44:50.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046129875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046167333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.006" endtime="20201029 12:44:50.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.026" endtime="20201029 12:44:50.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.618" endtime="20201029 12:44:50.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.613" endtime="20201029 12:44:50.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.044" level="INFO">${RESULT} = [{'diff': 3.745799999999716e-05}, {'diff': 3.744399999999759e-05}, {'diff': 3.745799999999716e-05}, {'diff': 3.715300000000504e-05}, {'diff': 3.723599999999605e-05}, {'diff': 3.720800000000385e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:50.035" endtime="20201029 12:44:50.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.054" level="INFO">${ACCURACY} = {'diff': [3.745799999999716e-05, 3.744399999999759e-05, 3.745799999999716e-05, 3.715300000000504e-05, 3.723599999999605e-05, 3.720800000000385e-05, 3.698600000000274e-05, 3.74580000000041e-05, 3.73330...</msg>
<status status="PASS" starttime="20201029 12:44:50.046" endtime="20201029 12:44:50.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.066" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.064" endtime="20201029 12:44:50.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.072" level="INFO">VALUE: [3.745799999999716e-05, 3.744399999999759e-05, 3.745799999999716e-05, 3.715300000000504e-05, 3.723599999999605e-05, 3.720800000000385e-05, 3.698600000000274e-05, 3.74580000000041e-05, 3.7333000000000505e-05, 3.655600000000009e-05, 3.7138999999998534e-05, 3.679200000000077e-05, 3.722199999999648e-05, 3.71250000000059e-05, 3.7166999999997674e-05, 3.67780000000012e-05, 3.655600000000009e-05, 3.679200000000077e-05, 3.7124999999998964e-05, 3.676400000000163e-05, 3.7416999999997924e-05, 3.7027000000001975e-05, 3.6569000000000185e-05, 3.6846999999999575e-05, 3.6554999999993676e-05, 3.666600000000464e-05, 3.665199999999813e-05, 3.702800000000145e-05, 3.6805000000000865e-05, 3.741599999999845e-05, 3.749999999999587e-05, 3.6888999999998284e-05, 3.6888999999998284e-05, 3.7347000000000075e-05, 3.7347000000000075e-05, 3.6610999999998894e-05, 3.7110999999999394e-05, 3.7124999999998964e-05, 3.6541000000001045e-05, 3.679200000000077e-05, 3.698600000000274e-05, 3.680600000000034e-05, 3.6874999999998714e-05, 3.658400000000617e-05, 3.7110999999999394e-05, 3.715200000000557e-05, 3.667999999999727e-05, 3.6833000000000005e-05, 3.733399999999998e-05, 3.66659999999977e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.069" endtime="20201029 12:44:50.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.056" endtime="20201029 12:44:50.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.085" endtime="20201029 12:44:50.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.081" endtime="20201029 12:44:50.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.078" endtime="20201029 12:44:50.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.550" endtime="20201029 12:44:50.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:49.549" endtime="20201029 12:44:50.111"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.136" endtime="20201029 12:44:50.158"></status>
</kw>
<msg timestamp="20201029 12:44:50.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.132" endtime="20201029 12:44:50.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.162" endtime="20201029 12:44:50.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.169" endtime="20201029 12:44:50.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.125" endtime="20201029 12:44:50.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.118" endtime="20201029 12:44:50.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.194" endtime="20201029 12:44:50.564"></status>
</kw>
<msg timestamp="20201029 12:44:50.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046043167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.190" endtime="20201029 12:44:50.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046043167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.574" endtime="20201029 12:44:50.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.595" endtime="20201029 12:44:50.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.182" endtime="20201029 12:44:50.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.177" endtime="20201029 12:44:50.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:50.614" level="INFO">${RESULT} = [{'diff': 3.791599999999895e-05}, {'diff': 3.844399999999859e-05}, {'diff': 3.8333000000001505e-05}, {'diff': 3.76659999999987e-05}, {'diff': 3.7861000000000145e-05}, {'diff': 3.8319000000001935e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:50.605" endtime="20201029 12:44:50.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:50.625" level="INFO">${ACCURACY} = {'diff': [3.791599999999895e-05, 3.844399999999859e-05, 3.8333000000001505e-05, 3.76659999999987e-05, 3.7861000000000145e-05, 3.8319000000001935e-05, 3.8124999999999964e-05, 3.8333000000001505e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:44:50.617" endtime="20201029 12:44:50.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.636" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:44:50.634" endtime="20201029 12:44:50.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.642" level="INFO">VALUE: [3.791599999999895e-05, 3.844399999999859e-05, 3.8333000000001505e-05, 3.76659999999987e-05, 3.7861000000000145e-05, 3.8319000000001935e-05, 3.8124999999999964e-05, 3.8333000000001505e-05, 3.84580000000051e-05, 3.802800000000245e-05, 3.766700000000511e-05, 3.844400000000553e-05, 3.823599999999705e-05, 3.8082999999994316e-05, 3.757000000000066e-05, 3.77780000000022e-05, 3.8402999999999354e-05, 3.77780000000022e-05, 3.8111000000000395e-05, 3.770799999999741e-05, 3.7680999999997744e-05, 3.757000000000066e-05, 3.772200000000392e-05, 3.768100000000468e-05, 3.7610999999999895e-05, 3.807000000000116e-05, 3.8013000000003405e-05, 3.7847000000000575e-05, 3.7554999999994676e-05, 3.769400000000478e-05, 3.7861000000000145e-05, 3.822199999999748e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.76659999999987e-05, 3.790300000000579e-05, 3.8110999999993456e-05, 3.755600000000109e-05, 3.8318999999994996e-05, 3.8458999999997634e-05, 3.801400000000288e-05, 3.8097000000000825e-05, 3.8458999999997634e-05, 3.801400000000288e-05, 3.820900000000432e-05, 3.768100000000468e-05, 3.836200000000012e-05, 3.8444999999998064e-05, 3.770799999999741e-05, 3.7902999999998854e-05]</msg>
<status status="PASS" starttime="20201029 12:44:50.639" endtime="20201029 12:44:50.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.627" endtime="20201029 12:44:50.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:50.657" endtime="20201029 12:44:50.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.651" endtime="20201029 12:44:50.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.648" endtime="20201029 12:44:50.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.114" endtime="20201029 12:44:50.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.112" endtime="20201029 12:44:50.683"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.708" endtime="20201029 12:44:50.727"></status>
</kw>
<msg timestamp="20201029 12:44:50.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.704" endtime="20201029 12:44:50.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.731" endtime="20201029 12:44:50.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.738" endtime="20201029 12:44:50.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.697" endtime="20201029 12:44:50.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.690" endtime="20201029 12:44:50.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.763" endtime="20201029 12:44:51.128"></status>
</kw>
<msg timestamp="20201029 12:44:51.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044010986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.759" endtime="20201029 12:44:51.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044010986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.138" endtime="20201029 12:44:51.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.158" endtime="20201029 12:44:51.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.752" endtime="20201029 12:44:51.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.746" endtime="20201029 12:44:51.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.176" level="INFO">${RESULT} = [{'diff': 3.8805000000002865e-05}, {'diff': 3.86659999999997e-05}, {'diff': 3.901400000000388e-05}, {'diff': 3.8902999999999854e-05}, {'diff': 3.8680999999998744e-05}, {'diff': 3.9333000000002505e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:51.167" endtime="20201029 12:44:51.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.188" level="INFO">${ACCURACY} = {'diff': [3.8805000000002865e-05, 3.86659999999997e-05, 3.901400000000388e-05, 3.8902999999999854e-05, 3.8680999999998744e-05, 3.9333000000002505e-05, 3.855600000000209e-05, 3.899999999999737e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 12:44:51.178" endtime="20201029 12:44:51.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.200" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.197" endtime="20201029 12:44:51.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.206" level="INFO">VALUE: [3.8805000000002865e-05, 3.86659999999997e-05, 3.901400000000388e-05, 3.8902999999999854e-05, 3.8680999999998744e-05, 3.9333000000002505e-05, 3.855600000000209e-05, 3.899999999999737e-05, 3.8625000000000465e-05, 3.9444999999999064e-05, 3.923599999999805e-05, 3.9346999999995136e-05, 3.8875000000000715e-05, 3.87780000000032e-05, 3.929200000000327e-05, 3.879200000000277e-05, 3.868100000000568e-05, 3.911200000000087e-05, 3.8875000000000715e-05, 3.8569000000002185e-05, 3.869399999999884e-05, 3.9097000000001825e-05, 3.945799999999916e-05, 3.922199999999848e-05, 3.86659999999997e-05, 3.875000000000406e-05, 3.86659999999997e-05, 3.87780000000032e-05, 3.877799999999626e-05, 3.94580000000061e-05, 3.945799999999916e-05, 3.875000000000406e-05, 3.9097000000001825e-05, 3.9097000000001825e-05, 3.870799999999841e-05, 3.9445000000006e-05, 3.9361000000001645e-05, 3.87780000000032e-05, 3.87780000000032e-05, 3.869399999999884e-05, 3.933400000000198e-05, 3.9222999999997954e-05, 3.890200000000038e-05, 3.911200000000087e-05, 3.890200000000038e-05, 3.9361000000001645e-05, 3.9180999999999244e-05, 3.945799999999916e-05, 3.9333000000002505e-05, 3.9444999999999064e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.202" endtime="20201029 12:44:51.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.190" endtime="20201029 12:44:51.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.225" endtime="20201029 12:44:51.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.221" endtime="20201029 12:44:51.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.218" endtime="20201029 12:44:51.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.686" endtime="20201029 12:44:51.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.684" endtime="20201029 12:44:51.251"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.276" endtime="20201029 12:44:51.296"></status>
</kw>
<msg timestamp="20201029 12:44:51.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.272" endtime="20201029 12:44:51.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.300" endtime="20201029 12:44:51.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.306" endtime="20201029 12:44:51.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.265" endtime="20201029 12:44:51.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.258" endtime="20201029 12:44:51.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.331" endtime="20201029 12:44:51.694"></status>
</kw>
<msg timestamp="20201029 12:44:51.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044449806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044489819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.328" endtime="20201029 12:44:51.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044449806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044489819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.704" endtime="20201029 12:44:51.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.723" endtime="20201029 12:44:51.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.320" endtime="20201029 12:44:51.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.315" endtime="20201029 12:44:51.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.742" level="INFO">${RESULT} = [{'diff': 4.0012999999998466e-05}, {'diff': 3.96660000000007e-05}, {'diff': 4.045800000000016e-05}, {'diff': 3.9540999999997106e-05}, {'diff': 3.9555000000003615e-05}, {'diff': 3.968000000000027e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:51.732" endtime="20201029 12:44:51.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:51.754" level="INFO">${ACCURACY} = {'diff': [4.0012999999998466e-05, 3.96660000000007e-05, 4.045800000000016e-05, 3.9540999999997106e-05, 3.9555000000003615e-05, 3.968000000000027e-05, 3.969399999999984e-05, 3.9847000000002575e-05, 3.9...</msg>
<status status="PASS" starttime="20201029 12:44:51.744" endtime="20201029 12:44:51.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.765" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:44:51.763" endtime="20201029 12:44:51.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.771" level="INFO">VALUE: [4.0012999999998466e-05, 3.96660000000007e-05, 4.045800000000016e-05, 3.9540999999997106e-05, 3.9555000000003615e-05, 3.968000000000027e-05, 3.969399999999984e-05, 3.9847000000002575e-05, 3.9667000000000174e-05, 4.007000000000316e-05, 3.9694999999999314e-05, 3.9847000000002575e-05, 4.047199999999973e-05, 4.024999999999862e-05, 4.020799999999991e-05, 3.957000000000266e-05, 4.024999999999862e-05, 3.955600000000309e-05, 4.033400000000298e-05, 3.9667000000000174e-05, 3.991600000000095e-05, 4.0445000000000064e-05, 3.9889000000001285e-05, 4.047199999999973e-05, 3.9554999999996676e-05, 3.993000000000052e-05, 4.045800000000016e-05, 4.0124999999995026e-05, 3.976399999999769e-05, 3.9903000000000854e-05, 3.9917000000000424e-05, 3.9889000000001285e-05, 3.9568999999996246e-05, 3.9889000000001285e-05, 3.9667000000000174e-05, 3.9568999999996246e-05, 3.99859999999988e-05, 3.954199999999658e-05, 3.958400000000223e-05, 3.9653000000000604e-05, 4.032000000000341e-05, 4.0458999999999634e-05, 4.0111000000002395e-05, 4.022199999999948e-05, 4.001400000000488e-05, 4.0431000000000494e-05, 3.983400000000248e-05, 4.033400000000298e-05, 3.955600000000309e-05, 4.0026999999998036e-05]</msg>
<status status="PASS" starttime="20201029 12:44:51.768" endtime="20201029 12:44:51.773"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.756" endtime="20201029 12:44:51.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.785" endtime="20201029 12:44:51.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.780" endtime="20201029 12:44:51.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.777" endtime="20201029 12:44:51.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.254" endtime="20201029 12:44:51.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.252" endtime="20201029 12:44:51.811"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.835" endtime="20201029 12:44:51.856"></status>
</kw>
<msg timestamp="20201029 12:44:51.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.832" endtime="20201029 12:44:51.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.860" endtime="20201029 12:44:51.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.866" endtime="20201029 12:44:51.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.824" endtime="20201029 12:44:51.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.818" endtime="20201029 12:44:51.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.891" endtime="20201029 12:44:52.257"></status>
</kw>
<msg timestamp="20201029 12:44:52.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044636042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044676958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.888" endtime="20201029 12:44:52.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044636042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044676958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.268" endtime="20201029 12:44:52.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.288" endtime="20201029 12:44:52.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.880" endtime="20201029 12:44:52.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.875" endtime="20201029 12:44:52.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.306" level="INFO">${RESULT} = [{'diff': 4.091600000000195e-05}, {'diff': 4.0554999999997676e-05}, {'diff': 4.122200000000048e-05}, {'diff': 4.1082999999997316e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 4.0568999999997246e-05...</msg>
<status status="PASS" starttime="20201029 12:44:52.297" endtime="20201029 12:44:52.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.316" level="INFO">${ACCURACY} = {'diff': [4.091600000000195e-05, 4.0554999999997676e-05, 4.122200000000048e-05, 4.1082999999997316e-05, 4.1125000000002965e-05, 4.0568999999997246e-05, 4.0903000000001855e-05, 4.123600000000005e-05, 4...</msg>
<status status="PASS" starttime="20201029 12:44:52.308" endtime="20201029 12:44:52.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.328" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.326" endtime="20201029 12:44:52.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.334" level="INFO">VALUE: [4.091600000000195e-05, 4.0554999999997676e-05, 4.122200000000048e-05, 4.1082999999997316e-05, 4.1125000000002965e-05, 4.0568999999997246e-05, 4.0903000000001855e-05, 4.123600000000005e-05, 4.0888999999995346e-05, 4.1332999999997566e-05, 4.122200000000048e-05, 4.147200000000073e-05, 4.101399999999894e-05, 4.0832999999997066e-05, 4.1125000000002965e-05, 4.1096999999996886e-05, 4.057000000000366e-05, 4.076399999999869e-05, 4.149999999999987e-05, 4.0860999999996206e-05, 4.100000000000631e-05, 4.072199999999998e-05, 4.0860999999996206e-05, 4.09859999999998e-05, 4.088800000000281e-05, 4.1360999999996706e-05, 4.0889000000002285e-05, 4.0889000000002285e-05, 4.099999999999937e-05, 4.1125000000002965e-05, 4.099999999999937e-05, 4.1318999999997996e-05, 4.099999999999937e-05, 4.145800000000116e-05, 4.1318999999997996e-05, 4.0903000000001855e-05, 4.101399999999894e-05, 4.077799999999826e-05, 4.1431000000001494e-05, 4.123600000000005e-05, 4.058400000000323e-05, 4.1458999999993695e-05, 4.123600000000005e-05, 4.0875000000002715e-05, 4.0582999999996816e-05, 4.090200000000238e-05, 4.067999999999433e-05, 4.1360999999996706e-05, 4.1111000000003395e-05, 4.1304999999998426e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.330" endtime="20201029 12:44:52.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.318" endtime="20201029 12:44:52.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.347" endtime="20201029 12:44:52.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.343" endtime="20201029 12:44:52.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.340" endtime="20201029 12:44:52.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.813" endtime="20201029 12:44:52.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.812" endtime="20201029 12:44:52.373"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.398" endtime="20201029 12:44:52.424"></status>
</kw>
<msg timestamp="20201029 12:44:52.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.394" endtime="20201029 12:44:52.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:52.427" endtime="20201029 12:44:52.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.434" endtime="20201029 12:44:52.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.386" endtime="20201029 12:44:52.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.380" endtime="20201029 12:44:52.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.459" endtime="20201029 12:44:52.835"></status>
</kw>
<msg timestamp="20201029 12:44:52.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050042653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050084347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.456" endtime="20201029 12:44:52.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050042653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050084347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:52.844" endtime="20201029 12:44:52.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:52.862" endtime="20201029 12:44:52.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.448" endtime="20201029 12:44:52.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.443" endtime="20201029 12:44:52.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:52.880" level="INFO">${RESULT} = [{'diff': 4.169400000000184e-05}, {'diff': 4.199999999999343e-05}, {'diff': 4.205599999999865e-05}, {'diff': 4.2111000000004395e-05}, {'diff': 4.241600000000345e-05}, {'diff': 4.245800000000216e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:52.871" endtime="20201029 12:44:52.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:52.889" level="INFO">${ACCURACY} = {'diff': [4.169400000000184e-05, 4.199999999999343e-05, 4.205599999999865e-05, 4.2111000000004395e-05, 4.241600000000345e-05, 4.245800000000216e-05, 4.2346999999998136e-05, 4.222200000000148e-05, 4.22...</msg>
<status status="PASS" starttime="20201029 12:44:52.882" endtime="20201029 12:44:52.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.900" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:44:52.898" endtime="20201029 12:44:52.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:52.906" level="INFO">VALUE: [4.169400000000184e-05, 4.199999999999343e-05, 4.205599999999865e-05, 4.2111000000004395e-05, 4.241600000000345e-05, 4.245800000000216e-05, 4.2346999999998136e-05, 4.222200000000148e-05, 4.2290999999999856e-05, 4.155599999999815e-05, 4.154199999999858e-05, 4.1611000000003895e-05, 4.2111000000004395e-05, 4.1916999999995486e-05, 4.154199999999858e-05, 4.247199999999479e-05, 4.2237000000000524e-05, 4.1875000000003715e-05, 4.223600000000105e-05, 4.165199999999619e-05, 4.166599999999576e-05, 4.188799999999687e-05, 4.1610999999996956e-05, 4.244399999999565e-05, 4.1568999999998246e-05, 4.19860000000008e-05, 4.2332999999998566e-05, 4.2110999999997456e-05, 4.2167000000002675e-05, 4.198599999999386e-05, 4.181999999999797e-05, 4.244400000000259e-05, 4.2332999999998566e-05, 4.222200000000148e-05, 4.200000000000037e-05, 4.181999999999797e-05, 4.155600000000509e-05, 4.186199999999668e-05, 4.19860000000008e-05, 4.2040999999999606e-05, 4.1902999999995916e-05, 4.2068999999998746e-05, 4.155600000000509e-05, 4.1526999999999537e-05, 4.1790999999999356e-05, 4.1625000000003465e-05, 4.166599999999576e-05, 4.223600000000105e-05, 4.1568999999998246e-05, 4.2153000000003105e-05]</msg>
<status status="PASS" starttime="20201029 12:44:52.903" endtime="20201029 12:44:52.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.891" endtime="20201029 12:44:52.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:52.927" endtime="20201029 12:44:52.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.914" endtime="20201029 12:44:52.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.911" endtime="20201029 12:44:52.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.375" endtime="20201029 12:44:52.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.374" endtime="20201029 12:44:52.969"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.013" endtime="20201029 12:44:53.040"></status>
</kw>
<msg timestamp="20201029 12:44:53.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.008" endtime="20201029 12:44:53.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.046" endtime="20201029 12:44:53.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.053" endtime="20201029 12:44:53.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.995" endtime="20201029 12:44:53.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.984" endtime="20201029 12:44:53.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.079" endtime="20201029 12:44:53.442"></status>
</kw>
<msg timestamp="20201029 12:44:53.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081447069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081489875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.075" endtime="20201029 12:44:53.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081447069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.081489875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.452" endtime="20201029 12:44:53.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.471" endtime="20201029 12:44:53.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.067" endtime="20201029 12:44:53.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.062" endtime="20201029 12:44:53.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:53.490" level="INFO">${RESULT} = [{'diff': 4.280600000000634e-05}, {'diff': 4.277799999999332e-05}, {'diff': 4.2902999999996916e-05}, {'diff': 4.277799999999332e-05}, {'diff': 4.312499999999109e-05}, {'diff': 4.347199999998885e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:53.480" endtime="20201029 12:44:53.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:53.501" level="INFO">${ACCURACY} = {'diff': [4.280600000000634e-05, 4.277799999999332e-05, 4.2902999999996916e-05, 4.277799999999332e-05, 4.312499999999109e-05, 4.347199999998885e-05, 4.3486999999994835e-05, 4.3445000000003064e-05, 4.3...</msg>
<status status="PASS" starttime="20201029 12:44:53.492" endtime="20201029 12:44:53.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.513" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:44:53.511" endtime="20201029 12:44:53.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.519" level="INFO">VALUE: [4.280600000000634e-05, 4.277799999999332e-05, 4.2902999999996916e-05, 4.277799999999332e-05, 4.312499999999109e-05, 4.347199999998885e-05, 4.3486999999994835e-05, 4.3445000000003064e-05, 4.309699999999195e-05, 4.27780000000072e-05, 4.257000000000566e-05, 4.3445000000003064e-05, 4.330499999999349e-05, 4.3445000000003064e-05, 4.333400000000598e-05, 4.252800000000001e-05, 4.2653000000003605e-05, 4.34580000000101e-05, 4.2597000000005325e-05, 4.3110999999998456e-05, 4.3110999999998456e-05, 4.301400000000788e-05, 4.277799999999332e-05, 4.300000000000137e-05, 4.277799999999332e-05, 4.272199999999504e-05, 4.2722999999994515e-05, 4.279199999999983e-05, 4.3110999999998456e-05, 4.34580000000101e-05, 4.277799999999332e-05, 4.2666999999996236e-05, 4.300000000000137e-05, 4.298599999999486e-05, 4.2889000000004285e-05, 4.2681000000002745e-05, 4.333400000000598e-05, 4.2874999999997776e-05, 4.255599999999915e-05, 4.2930999999996056e-05, 4.2791000000000357e-05, 4.3347000000013014e-05, 4.323600000000205e-05, 4.3291000000000857e-05, 4.2903000000010794e-05, 4.277799999999332e-05, 4.2666999999996236e-05, 4.333299999999263e-05, 4.267999999998939e-05, 4.3013999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:44:53.516" endtime="20201029 12:44:53.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.503" endtime="20201029 12:44:53.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:53.533" endtime="20201029 12:44:53.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.528" endtime="20201029 12:44:53.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.525" endtime="20201029 12:44:53.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.975" endtime="20201029 12:44:53.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:52.971" endtime="20201029 12:44:53.558"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.583" endtime="20201029 12:44:53.604"></status>
</kw>
<msg timestamp="20201029 12:44:53.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.579" endtime="20201029 12:44:53.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:53.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:53.607" endtime="20201029 12:44:53.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.614" endtime="20201029 12:44:53.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.572" endtime="20201029 12:44:53.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.565" endtime="20201029 12:44:53.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:53.639" endtime="20201029 12:44:54.003"></status>
</kw>
<msg timestamp="20201029 12:44:54.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044034083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:53.636" endtime="20201029 12:44:54.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044034083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044077986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.013" endtime="20201029 12:44:54.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.032" endtime="20201029 12:44:54.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.628" endtime="20201029 12:44:54.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.623" endtime="20201029 12:44:54.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.051" level="INFO">${RESULT} = [{'diff': 4.3902999999997916e-05}, {'diff': 4.3582999999999816e-05}, {'diff': 4.447200000000373e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.35139999999945e-05}, {'diff': 4.43060000000009e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:54.041" endtime="20201029 12:44:54.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.063" level="INFO">${ACCURACY} = {'diff': [4.3902999999997916e-05, 4.3582999999999816e-05, 4.447200000000373e-05, 4.354200000000058e-05, 4.35139999999945e-05, 4.43060000000009e-05, 4.347199999999579e-05, 4.3846999999999636e-05, 4.376...</msg>
<status status="PASS" starttime="20201029 12:44:54.053" endtime="20201029 12:44:54.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.075" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.072" endtime="20201029 12:44:54.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.080" level="INFO">VALUE: [4.3902999999997916e-05, 4.3582999999999816e-05, 4.447200000000373e-05, 4.354200000000058e-05, 4.35139999999945e-05, 4.43060000000009e-05, 4.347199999999579e-05, 4.3846999999999636e-05, 4.376400000000169e-05, 4.450000000000287e-05, 4.3902999999997916e-05, 4.398599999999586e-05, 4.4124999999999026e-05, 4.367999999999733e-05, 4.3652999999997666e-05, 4.401300000000247e-05, 4.3555000000000677e-05, 4.4124999999999026e-05, 4.401400000000194e-05, 4.422200000000348e-05, 4.4347000000000136e-05, 4.444399999999765e-05, 4.4124999999999026e-05, 4.3708999999995946e-05, 4.4125000000005965e-05, 4.3917000000004425e-05, 4.3667000000004175e-05, 4.3653000000004605e-05, 4.39860000000028e-05, 4.417999999999783e-05, 4.355600000000015e-05, 4.4416999999997986e-05, 4.3666999999997236e-05, 4.4222999999996015e-05, 4.3860999999999206e-05, 4.3903000000004855e-05, 4.4444999999997126e-05, 4.4124999999999026e-05, 4.420799999999697e-05, 4.379100000000136e-05, 4.423599999999611e-05, 4.366599999999776e-05, 4.4333000000000566e-05, 4.420800000000391e-05, 4.400000000000237e-05, 4.373600000000255e-05, 4.447199999999679e-05, 4.3652999999997666e-05, 4.3888999999998346e-05, 4.3888999999998346e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.077" endtime="20201029 12:44:54.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.065" endtime="20201029 12:44:54.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.094" endtime="20201029 12:44:54.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.089" endtime="20201029 12:44:54.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.087" endtime="20201029 12:44:54.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.561" endtime="20201029 12:44:54.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:53.559" endtime="20201029 12:44:54.120"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.145" endtime="20201029 12:44:54.166"></status>
</kw>
<msg timestamp="20201029 12:44:54.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.141" endtime="20201029 12:44:54.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.169" endtime="20201029 12:44:54.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.176" endtime="20201029 12:44:54.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.133" endtime="20201029 12:44:54.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.127" endtime="20201029 12:44:54.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.201" endtime="20201029 12:44:54.566"></status>
</kw>
<msg timestamp="20201029 12:44:54.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044017014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044061931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.198" endtime="20201029 12:44:54.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044017014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044061931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.577" endtime="20201029 12:44:54.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.596" endtime="20201029 12:44:54.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.190" endtime="20201029 12:44:54.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.185" endtime="20201029 12:44:54.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.615" level="INFO">${RESULT} = [{'diff': 4.4916999999998486e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.505600000000165e-05}, {'diff': 4.5223000000003954e-05}, {'diff': 4.5347000000001136e-05}, {'diff': 4.4555000000001677e-0...</msg>
<status status="PASS" starttime="20201029 12:44:54.606" endtime="20201029 12:44:54.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:54.625" level="INFO">${ACCURACY} = {'diff': [4.4916999999998486e-05, 4.5375000000000276e-05, 4.505600000000165e-05, 4.5223000000003954e-05, 4.5347000000001136e-05, 4.4555000000001677e-05, 4.46660000000057e-05, 4.501400000000294e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:44:54.617" endtime="20201029 12:44:54.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.637" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:44:54.634" endtime="20201029 12:44:54.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.643" level="INFO">VALUE: [4.4916999999998486e-05, 4.5375000000000276e-05, 4.505600000000165e-05, 4.5223000000003954e-05, 4.5347000000001136e-05, 4.4555000000001677e-05, 4.46660000000057e-05, 4.501400000000294e-05, 4.480500000000193e-05, 4.501400000000294e-05, 4.476399999999575e-05, 4.4888999999999346e-05, 4.522200000000448e-05, 4.455600000000115e-05, 4.5347000000001136e-05, 4.5333000000001566e-05, 4.473599999999661e-05, 4.504100000000261e-05, 4.4888999999999346e-05, 4.53469999999942e-05, 4.457000000000072e-05, 4.4666999999998236e-05, 4.4681000000004745e-05, 4.50269999999961e-05, 4.4902999999998916e-05, 4.5125000000000026e-05, 4.5222999999997016e-05, 4.499999999999643e-05, 4.4597000000000386e-05, 4.505600000000165e-05, 4.516599999999926e-05, 4.523599999999711e-05, 4.483400000000054e-05, 4.4874999999999776e-05, 4.5125000000000026e-05, 4.533299999999463e-05, 4.5417000000005925e-05, 4.502800000000251e-05, 4.4861000000000206e-05, 4.524999999999668e-05, 4.5208999999997446e-05, 4.454200000000158e-05, 4.4638999999999096e-05, 4.452800000000201e-05, 4.524999999999668e-05, 4.5223000000003954e-05, 4.4666999999998236e-05, 4.4902999999998916e-05, 4.533400000000104e-05, 4.4569000000001247e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.639" endtime="20201029 12:44:54.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.627" endtime="20201029 12:44:54.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.656" endtime="20201029 12:44:54.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.651" endtime="20201029 12:44:54.680"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.649" endtime="20201029 12:44:54.681"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.122" endtime="20201029 12:44:54.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.121" endtime="20201029 12:44:54.682"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.707" endtime="20201029 12:44:54.730"></status>
</kw>
<msg timestamp="20201029 12:44:54.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.703" endtime="20201029 12:44:54.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.734" endtime="20201029 12:44:54.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.741" endtime="20201029 12:44:54.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.695" endtime="20201029 12:44:54.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.689" endtime="20201029 12:44:54.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.766" endtime="20201029 12:44:55.130"></status>
</kw>
<msg timestamp="20201029 12:44:55.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04579225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045838056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:54.763" endtime="20201029 12:44:55.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04579225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045838056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:55.141" endtime="20201029 12:44:55.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.160" endtime="20201029 12:44:55.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.755" endtime="20201029 12:44:55.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.750" endtime="20201029 12:44:55.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.179" level="INFO">${RESULT} = [{'diff': 4.58060000000024e-05}, {'diff': 4.555600000000215e-05}, {'diff': 4.554200000000258e-05}, {'diff': 4.648599999999836e-05}, {'diff': 4.6333000000002567e-05}, {'diff': 4.573599999999761e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:55.169" endtime="20201029 12:44:55.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.189" level="INFO">${ACCURACY} = {'diff': [4.58060000000024e-05, 4.555600000000215e-05, 4.554200000000258e-05, 4.648599999999836e-05, 4.6333000000002567e-05, 4.573599999999761e-05, 4.577700000000379e-05, 4.644399999999965e-05, 4.5665...</msg>
<status status="PASS" starttime="20201029 12:44:55.181" endtime="20201029 12:44:55.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.200" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.198" endtime="20201029 12:44:55.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.207" level="INFO">VALUE: [4.58060000000024e-05, 4.555600000000215e-05, 4.554200000000258e-05, 4.648599999999836e-05, 4.6333000000002567e-05, 4.573599999999761e-05, 4.577700000000379e-05, 4.644399999999965e-05, 4.566599999999976e-05, 4.579200000000283e-05, 4.5583000000001817e-05, 4.55139999999965e-05, 4.622199999999854e-05, 4.599999999999743e-05, 4.647199999999879e-05, 4.5680999999998806e-05, 4.577800000000326e-05, 4.5889000000000346e-05, 4.579199999999589e-05, 4.632000000000247e-05, 4.573600000000455e-05, 4.6125000000001026e-05, 4.595799999999872e-05, 4.579199999999589e-05, 4.624999999999768e-05, 4.590200000000044e-05, 4.601400000000394e-05, 4.591600000000001e-05, 4.566599999999976e-05, 4.620799999999897e-05, 4.605600000000265e-05, 4.56939999999989e-05, 4.555500000000268e-05, 4.5889000000000346e-05, 4.645800000000616e-05, 4.605599999999571e-05, 4.623599999999811e-05, 4.605599999999571e-05, 4.6444999999999126e-05, 4.622199999999854e-05, 4.558400000000129e-05, 4.570800000000541e-05, 4.576400000000369e-05, 4.6222999999998016e-05, 4.634800000000161e-05, 4.601400000000394e-05, 4.5875000000000776e-05, 4.577699999999685e-05, 4.590200000000044e-05, 4.6347000000002136e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.203" endtime="20201029 12:44:55.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.191" endtime="20201029 12:44:55.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.222" endtime="20201029 12:44:55.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.216" endtime="20201029 12:44:55.246"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.213" endtime="20201029 12:44:55.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.684" endtime="20201029 12:44:55.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.683" endtime="20201029 12:44:55.248"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.273" endtime="20201029 12:44:55.293"></status>
</kw>
<msg timestamp="20201029 12:44:55.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.269" endtime="20201029 12:44:55.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.297" endtime="20201029 12:44:55.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.303" endtime="20201029 12:44:55.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.261" endtime="20201029 12:44:55.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.255" endtime="20201029 12:44:55.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.328" endtime="20201029 12:44:55.696"></status>
</kw>
<msg timestamp="20201029 12:44:55.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044072875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044120139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.325" endtime="20201029 12:44:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044072875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044120139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:55.706" endtime="20201029 12:44:55.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.726" endtime="20201029 12:44:55.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.317" endtime="20201029 12:44:55.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.312" endtime="20201029 12:44:55.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:55.744" level="INFO">${RESULT} = [{'diff': 4.726400000000519e-05}, {'diff': 4.6889000000001346e-05}, {'diff': 4.6889000000001346e-05}, {'diff': 4.699999999999843e-05}, {'diff': 4.6680999999999806e-05}, {'diff': 4.679199999999689e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:55.735" endtime="20201029 12:44:55.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:55.756" level="INFO">${ACCURACY} = {'diff': [4.726400000000519e-05, 4.6889000000001346e-05, 4.6889000000001346e-05, 4.699999999999843e-05, 4.6680999999999806e-05, 4.679199999999689e-05, 4.700000000000537e-05, 4.701400000000494e-05, 4.7...</msg>
<status status="PASS" starttime="20201029 12:44:55.747" endtime="20201029 12:44:55.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.769" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:44:55.766" endtime="20201029 12:44:55.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.775" level="INFO">VALUE: [4.726400000000519e-05, 4.6889000000001346e-05, 4.6889000000001346e-05, 4.699999999999843e-05, 4.6680999999999806e-05, 4.679199999999689e-05, 4.700000000000537e-05, 4.701400000000494e-05, 4.747199999999979e-05, 4.665299999999373e-05, 4.7445000000000126e-05, 4.663899999999416e-05, 4.7347000000003137e-05, 4.7013999999998e-05, 4.699999999999843e-05, 4.679099999999742e-05, 4.731899999999706e-05, 4.6679999999993393e-05, 4.655499999999674e-05, 4.688899999999441e-05, 4.7111000000002456e-05, 4.744400000000065e-05, 4.7125000000002026e-05, 4.688899999999441e-05, 4.656999999999578e-05, 4.7111000000002456e-05, 4.708300000000332e-05, 4.682000000000297e-05, 4.657000000000272e-05, 4.656999999999578e-05, 4.656999999999578e-05, 4.69860000000058e-05, 4.6889000000001346e-05, 4.677799999999732e-05, 4.720799999999997e-05, 4.722199999999954e-05, 4.690200000000144e-05, 4.699999999999843e-05, 4.655500000000368e-05, 4.654199999999664e-05, 4.666600000000076e-05, 4.744400000000065e-05, 4.7417000000000986e-05, 4.6889000000001346e-05, 4.679200000000383e-05, 4.731899999999706e-05, 4.745800000000022e-05, 4.656900000000325e-05, 4.7445000000000126e-05, 4.677799999999732e-05]</msg>
<status status="PASS" starttime="20201029 12:44:55.771" endtime="20201029 12:44:55.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.758" endtime="20201029 12:44:55.779"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:55.789" endtime="20201029 12:44:55.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.784" endtime="20201029 12:44:55.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.781" endtime="20201029 12:44:55.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.250" endtime="20201029 12:44:55.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.249" endtime="20201029 12:44:55.815"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.840" endtime="20201029 12:44:55.860"></status>
</kw>
<msg timestamp="20201029 12:44:55.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.836" endtime="20201029 12:44:55.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:55.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:55.864" endtime="20201029 12:44:55.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.870" endtime="20201029 12:44:55.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.828" endtime="20201029 12:44:55.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.822" endtime="20201029 12:44:55.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:55.896" endtime="20201029 12:44:56.260"></status>
</kw>
<msg timestamp="20201029 12:44:56.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04419575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:55.892" endtime="20201029 12:44:56.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04419575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:56.270" endtime="20201029 12:44:56.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.289" endtime="20201029 12:44:56.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.884" endtime="20201029 12:44:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.879" endtime="20201029 12:44:56.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.308" level="INFO">${RESULT} = [{'diff': 4.758299999999688e-05}, {'diff': 4.822200000000054e-05}, {'diff': 4.841699999999505e-05}, {'diff': 4.833300000000457e-05}, {'diff': 4.81669999999948e-05}, {'diff': 4.802799999999857e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:56.298" endtime="20201029 12:44:56.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.320" level="INFO">${ACCURACY} = {'diff': [4.758299999999688e-05, 4.822200000000054e-05, 4.841699999999505e-05, 4.833300000000457e-05, 4.81669999999948e-05, 4.802799999999857e-05, 4.826299999999978e-05, 4.779199999999789e-05, 4.84450...</msg>
<status status="PASS" starttime="20201029 12:44:56.310" endtime="20201029 12:44:56.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.331" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.329" endtime="20201029 12:44:56.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.337" level="INFO">VALUE: [4.758299999999688e-05, 4.822200000000054e-05, 4.841699999999505e-05, 4.833300000000457e-05, 4.81669999999948e-05, 4.802799999999857e-05, 4.826299999999978e-05, 4.779199999999789e-05, 4.8445000000001126e-05, 4.758299999999688e-05, 4.843099999999462e-05, 4.779099999999842e-05, 4.797200000000029e-05, 4.770800000000047e-05, 4.766600000000176e-05, 4.8111000000003457e-05, 4.780500000000493e-05, 4.845800000000122e-05, 4.765299999999473e-05, 4.845800000000122e-05, 4.7681000000000806e-05, 4.7625000000002526e-05, 4.7653000000001666e-05, 4.8125000000003026e-05, 4.755600000000415e-05, 4.802800000000551e-05, 4.8473000000000266e-05, 4.756999999999678e-05, 4.8459000000000696e-05, 4.755600000000415e-05, 4.811099999999652e-05, 4.799999999999943e-05, 4.755600000000415e-05, 4.809699999999695e-05, 4.8111000000003457e-05, 4.824999999999968e-05, 4.799999999999943e-05, 4.7889000000002346e-05, 4.755500000000468e-05, 4.8111000000003457e-05, 4.824999999999968e-05, 4.811099999999652e-05, 4.755600000000415e-05, 4.808399999999685e-05, 4.8111000000003457e-05, 4.824999999999968e-05, 4.833299999999763e-05, 4.802799999999857e-05, 4.755600000000415e-05, 4.812499999999609e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.334" endtime="20201029 12:44:56.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.322" endtime="20201029 12:44:56.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.358" endtime="20201029 12:44:56.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.353" endtime="20201029 12:44:56.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.350" endtime="20201029 12:44:56.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.817" endtime="20201029 12:44:56.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:55.816" endtime="20201029 12:44:56.383"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.408" endtime="20201029 12:44:56.428"></status>
</kw>
<msg timestamp="20201029 12:44:56.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.404" endtime="20201029 12:44:56.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.432" endtime="20201029 12:44:56.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.439" endtime="20201029 12:44:56.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.397" endtime="20201029 12:44:56.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.390" endtime="20201029 12:44:56.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.464" endtime="20201029 12:44:56.829"></status>
</kw>
<msg timestamp="20201029 12:44:56.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043863514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043912736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.460" endtime="20201029 12:44:56.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043863514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043912736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:56.839" endtime="20201029 12:44:56.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.859" endtime="20201029 12:44:56.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.452" endtime="20201029 12:44:56.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.447" endtime="20201029 12:44:56.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:56.877" level="INFO">${RESULT} = [{'diff': 4.922200000000154e-05}, {'diff': 4.947200000000179e-05}, {'diff': 4.9181000000002306e-05}, {'diff': 4.876399999999975e-05}, {'diff': 4.876399999999975e-05}, {'diff': 4.898600000000086e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:56.868" endtime="20201029 12:44:56.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:56.888" level="INFO">${ACCURACY} = {'diff': [4.922200000000154e-05, 4.947200000000179e-05, 4.9181000000002306e-05, 4.876399999999975e-05, 4.876399999999975e-05, 4.898600000000086e-05, 4.8903000000002916e-05, 4.877799999999932e-05, 4.91...</msg>
<status status="PASS" starttime="20201029 12:44:56.880" endtime="20201029 12:44:56.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.899" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:44:56.897" endtime="20201029 12:44:56.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.905" level="INFO">VALUE: [4.922200000000154e-05, 4.947200000000179e-05, 4.9181000000002306e-05, 4.876399999999975e-05, 4.876399999999975e-05, 4.898600000000086e-05, 4.8903000000002916e-05, 4.877799999999932e-05, 4.9167000000002736e-05, 4.905599999999871e-05, 4.9431000000002556e-05, 4.900000000000043e-05, 4.901300000000053e-05, 4.911100000000446e-05, 4.865200000000319e-05, 4.8889000000003346e-05, 4.900000000000043e-05, 4.9443999999995714e-05, 4.9014e-05, 4.93469999999982e-05, 4.9443999999995714e-05, 4.855499999999874e-05, 4.881999999999803e-05, 4.944400000000265e-05, 4.857000000000472e-05, 4.9445000000002126e-05, 4.911099999999752e-05, 4.876399999999975e-05, 4.888899999999641e-05, 4.8917000000002486e-05, 4.944499999999519e-05, 4.93339999999981e-05, 4.887499999999684e-05, 4.8973000000000766e-05, 4.88469999999977e-05, 4.877699999999985e-05, 4.888899999999641e-05, 4.925000000000068e-05, 4.8679999999995394e-05, 4.883299999999813e-05, 4.941600000000351e-05, 4.854199999999864e-05, 4.888899999999641e-05, 4.856899999999831e-05, 4.906999999999828e-05, 4.8695000000001376e-05, 4.9125000000004027e-05, 4.900000000000043e-05, 4.902800000000651e-05, 4.9431000000002556e-05]</msg>
<status status="PASS" starttime="20201029 12:44:56.902" endtime="20201029 12:44:56.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.889" endtime="20201029 12:44:56.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:56.919" endtime="20201029 12:44:56.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.914" endtime="20201029 12:44:56.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.911" endtime="20201029 12:44:56.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.386" endtime="20201029 12:44:56.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.384" endtime="20201029 12:44:56.944"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:56.969" endtime="20201029 12:44:56.991"></status>
</kw>
<msg timestamp="20201029 12:44:56.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.965" endtime="20201029 12:44:56.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:56.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:56.995" endtime="20201029 12:44:57.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.001" endtime="20201029 12:44:57.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.958" endtime="20201029 12:44:57.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.951" endtime="20201029 12:44:57.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.027" endtime="20201029 12:44:57.391"></status>
</kw>
<msg timestamp="20201029 12:44:57.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045678931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.023" endtime="20201029 12:44:57.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045678931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045729278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.401" endtime="20201029 12:44:57.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.421" endtime="20201029 12:44:57.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.016" endtime="20201029 12:44:57.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.010" endtime="20201029 12:44:57.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:57.440" level="INFO">${RESULT} = [{'diff': 5.03469999999992e-05}, {'diff': 4.997200000000229e-05}, {'diff': 4.956999999999878e-05}, {'diff': 5.040299999999748e-05}, {'diff': 5.0237000000001586e-05}, {'diff': 4.958300000000582e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:57.430" endtime="20201029 12:44:57.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:57.450" level="INFO">${ACCURACY} = {'diff': [5.03469999999992e-05, 4.997200000000229e-05, 4.956999999999878e-05, 5.040299999999748e-05, 5.0237000000001586e-05, 4.958300000000582e-05, 5.0223000000002016e-05, 5.00270000000011e-05, 5.0332...</msg>
<status status="PASS" starttime="20201029 12:44:57.442" endtime="20201029 12:44:57.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.462" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:44:57.459" endtime="20201029 12:44:57.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.467" level="INFO">VALUE: [5.03469999999992e-05, 4.997200000000229e-05, 4.956999999999878e-05, 5.040299999999748e-05, 5.0237000000001586e-05, 4.958300000000582e-05, 5.0223000000002016e-05, 5.00270000000011e-05, 5.033299999999963e-05, 4.975000000000118e-05, 5.031900000000006e-05, 5.027800000000082e-05, 4.9679999999996394e-05, 4.956899999999931e-05, 5.023600000000211e-05, 5.025000000000168e-05, 4.955599999999921e-05, 4.988899999999741e-05, 4.9917000000003486e-05, 5.033299999999963e-05, 4.956999999999878e-05, 4.987499999999784e-05, 5.043099999999662e-05, 4.956999999999878e-05, 4.96669999999963e-05, 5.0459000000002696e-05, 5.001300000000153e-05, 4.958300000000582e-05, 5.015200000000469e-05, 4.954100000000017e-05, 5.033299999999963e-05, 5.0401999999998004e-05, 4.986099999999827e-05, 4.986200000000468e-05, 5.036099999999877e-05, 5.033299999999963e-05, 4.96669999999963e-05, 5.0457999999996284e-05, 5.000000000000143e-05, 4.956999999999878e-05, 5.0431000000003556e-05, 4.98469999999987e-05, 4.9667000000003236e-05, 4.9903000000003916e-05, 4.956999999999878e-05, 4.9889000000004347e-05, 5.034799999999867e-05, 4.977799999999338e-05, 4.9679999999996394e-05, 5.033299999999963e-05]</msg>
<status status="PASS" starttime="20201029 12:44:57.464" endtime="20201029 12:44:57.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.452" endtime="20201029 12:44:57.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:57.483" endtime="20201029 12:44:57.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.476" endtime="20201029 12:44:57.507"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.474" endtime="20201029 12:44:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.947" endtime="20201029 12:44:57.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:56.945" endtime="20201029 12:44:57.509"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.534" endtime="20201029 12:44:57.555"></status>
</kw>
<msg timestamp="20201029 12:44:57.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.530" endtime="20201029 12:44:57.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.558" endtime="20201029 12:44:57.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.565" endtime="20201029 12:44:57.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.522" endtime="20201029 12:44:57.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.516" endtime="20201029 12:44:57.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.590" endtime="20201029 12:44:57.956"></status>
</kw>
<msg timestamp="20201029 12:44:57.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044290681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044341514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.587" endtime="20201029 12:44:57.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044290681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044341514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:57.966" endtime="20201029 12:44:57.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.986" endtime="20201029 12:44:57.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.579" endtime="20201029 12:44:57.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.574" endtime="20201029 12:44:57.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.005" level="INFO">${RESULT} = [{'diff': 5.083300000000013e-05}, {'diff': 5.143099999999762e-05}, {'diff': 5.097200000000329e-05}, {'diff': 5.10419999999942e-05}, {'diff': 5.112499999999909e-05}, {'diff': 5.1223000000003016e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:57.995" endtime="20201029 12:44:58.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.021" level="INFO">${ACCURACY} = {'diff': [5.083300000000013e-05, 5.143099999999762e-05, 5.097200000000329e-05, 5.10419999999942e-05, 5.112499999999909e-05, 5.1223000000003016e-05, 5.081900000000056e-05, 5.144499999999719e-05, 5.0986...</msg>
<status status="PASS" starttime="20201029 12:44:58.007" endtime="20201029 12:44:58.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.033" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.030" endtime="20201029 12:44:58.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.038" level="INFO">VALUE: [5.083300000000013e-05, 5.143099999999762e-05, 5.097200000000329e-05, 5.10419999999942e-05, 5.112499999999909e-05, 5.1223000000003016e-05, 5.081900000000056e-05, 5.144499999999719e-05, 5.098600000000286e-05, 5.133299999999369e-05, 5.1221999999996604e-05, 5.112499999999909e-05, 5.1443999999997714e-05, 5.055500000000074e-05, 5.054100000000117e-05, 5.063899999999816e-05, 5.094400000000415e-05, 5.095899999999626e-05, 5.055600000000021e-05, 5.058399999999935e-05, 5.141699999999805e-05, 5.134799999999967e-05, 5.112499999999909e-05, 5.0653000000004667e-05, 5.134799999999967e-05, 5.088899999999841e-05, 5.080499999999405e-05, 5.054200000000064e-05, 5.13340000000001e-05, 5.13470000000002e-05, 5.125000000000268e-05, 5.1153000000005167e-05, 5.0665999999997824e-05, 5.123600000000311e-05, 5.080499999999405e-05, 5.058299999999988e-05, 5.1235999999996173e-05, 5.077800000000132e-05, 5.145899999999676e-05, 5.077800000000132e-05, 5.088899999999841e-05, 5.090299999999798e-05, 5.119499999999694e-05, 5.056999999999978e-05, 5.123600000000311e-05, 5.055600000000021e-05, 5.144499999999719e-05, 5.0487000000001836e-05, 5.111199999999899e-05, 5.13470000000002e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.035" endtime="20201029 12:44:58.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.023" endtime="20201029 12:44:58.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.052" endtime="20201029 12:44:58.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.047" endtime="20201029 12:44:58.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.045" endtime="20201029 12:44:58.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.511" endtime="20201029 12:44:58.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.510" endtime="20201029 12:44:58.078"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.102" endtime="20201029 12:44:58.124"></status>
</kw>
<msg timestamp="20201029 12:44:58.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.099" endtime="20201029 12:44:58.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.127" endtime="20201029 12:44:58.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.134" endtime="20201029 12:44:58.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.091" endtime="20201029 12:44:58.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.085" endtime="20201029 12:44:58.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.159" endtime="20201029 12:44:58.523"></status>
</kw>
<msg timestamp="20201029 12:44:58.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04420025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:58.156" endtime="20201029 12:44:58.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044148236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04420025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:58.533" endtime="20201029 12:44:58.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.553" endtime="20201029 12:44:58.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.148" endtime="20201029 12:44:58.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.143" endtime="20201029 12:44:58.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.572" level="INFO">${RESULT} = [{'diff': 5.2014000000003e-05}, {'diff': 5.223600000000411e-05}, {'diff': 5.200000000000343e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.2445000000005126e-05}, {'diff': 5.230500000000249e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:58.562" endtime="20201029 12:44:58.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:58.584" level="INFO">${ACCURACY} = {'diff': [5.2014000000003e-05, 5.223600000000411e-05, 5.200000000000343e-05, 5.212500000000009e-05, 5.2445000000005126e-05, 5.230500000000249e-05, 5.1681000000004806e-05, 5.190300000000592e-05, 5.1556...</msg>
<status status="PASS" starttime="20201029 12:44:58.574" endtime="20201029 12:44:58.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.595" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:44:58.593" endtime="20201029 12:44:58.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.601" level="INFO">VALUE: [5.2014000000003e-05, 5.223600000000411e-05, 5.200000000000343e-05, 5.212500000000009e-05, 5.2445000000005126e-05, 5.230500000000249e-05, 5.1681000000004806e-05, 5.190300000000592e-05, 5.155600000000121e-05, 5.212500000000009e-05, 5.211100000000052e-05, 5.156900000000131e-05, 5.212500000000009e-05, 5.2165999999999324e-05, 5.156900000000131e-05, 5.168000000000533e-05, 5.2235999999997174e-05, 5.231900000000206e-05, 5.179200000000189e-05, 5.159700000000045e-05, 5.202800000000257e-05, 5.1943999999998214e-05, 5.245899999999776e-05, 5.155600000000121e-05, 5.188899999999941e-05, 5.187499999999984e-05, 5.168099999999787e-05, 5.1681000000004806e-05, 5.201299999999659e-05, 5.179099999999548e-05, 5.179100000000242e-05, 5.23470000000012e-05, 5.200000000000343e-05, 5.2014000000003e-05, 5.154099999999523e-05, 5.211100000000052e-05, 5.244400000000565e-05, 5.188899999999941e-05, 5.244400000000565e-05, 5.244499999999819e-05, 5.2249999999996743e-05, 5.23470000000012e-05, 5.2014000000003e-05, 5.188900000000635e-05, 5.16669999999983e-05, 5.154200000000164e-05, 5.2445000000005126e-05, 5.1999999999996493e-05, 5.16669999999983e-05, 5.1679999999998394e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.598" endtime="20201029 12:44:58.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.586" endtime="20201029 12:44:58.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.615" endtime="20201029 12:44:58.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.610" endtime="20201029 12:44:58.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.607" endtime="20201029 12:44:58.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.080" endtime="20201029 12:44:58.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.079" endtime="20201029 12:44:58.641"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.665" endtime="20201029 12:44:58.686"></status>
</kw>
<msg timestamp="20201029 12:44:58.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.661" endtime="20201029 12:44:58.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.690" endtime="20201029 12:44:58.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.696" endtime="20201029 12:44:58.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.654" endtime="20201029 12:44:58.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.647" endtime="20201029 12:44:58.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.721" endtime="20201029 12:44:59.093"></status>
</kw>
<msg timestamp="20201029 12:44:59.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043967611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044020278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.718" endtime="20201029 12:44:59.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043967611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044020278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.103" endtime="20201029 12:44:59.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.123" endtime="20201029 12:44:59.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.710" endtime="20201029 12:44:59.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.705" endtime="20201029 12:44:59.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.141" level="INFO">${RESULT} = [{'diff': 5.2667000000006237e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.279199999999595e-05}, {'diff': 5.3013999999997063e-05}, {'diff': 5.291699999999955e-05}, {'diff': 5.325000000000468e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:59.132" endtime="20201029 12:44:59.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.151" level="INFO">${ACCURACY} = {'diff': [5.2667000000006237e-05, 5.26669999999993e-05, 5.279199999999595e-05, 5.3013999999997063e-05, 5.291699999999955e-05, 5.325000000000468e-05, 5.252699999999666e-05, 5.333300000000263e-05, 5.311...</msg>
<status status="PASS" starttime="20201029 12:44:59.143" endtime="20201029 12:44:59.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.163" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.161" endtime="20201029 12:44:59.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.169" level="INFO">VALUE: [5.2667000000006237e-05, 5.26669999999993e-05, 5.279199999999595e-05, 5.3013999999997063e-05, 5.291699999999955e-05, 5.325000000000468e-05, 5.252699999999666e-05, 5.333300000000263e-05, 5.311099999999458e-05, 5.277699999999691e-05, 5.333300000000263e-05, 5.28340000000016e-05, 5.33470000000022e-05, 5.256900000000231e-05, 5.3235999999998174e-05, 5.3457999999999284e-05, 5.337500000000134e-05, 5.2707999999998534e-05, 5.258400000000135e-05, 5.258400000000135e-05, 5.311099999999458e-05, 5.307000000000228e-05, 5.255599999999527e-05, 5.283399999999466e-05, 5.312500000000109e-05, 5.331899999999612e-05, 5.2971999999998354e-05, 5.312500000000109e-05, 5.276400000000375e-05, 5.311100000000152e-05, 5.336100000000177e-05, 5.334699999999526e-05, 5.2763999999996813e-05, 5.261099999999408e-05, 5.3221999999998604e-05, 5.333300000000263e-05, 5.290299999999998e-05, 5.333300000000263e-05, 5.282000000000203e-05, 5.312500000000109e-05, 5.269499999999844e-05, 5.3445000000006126e-05, 5.26940000000059e-05, 5.277799999999638e-05, 5.311100000000152e-05, 5.331899999999612e-05, 5.28470000000017e-05, 5.333300000000263e-05, 5.275000000000418e-05, 5.254099999999623e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.166" endtime="20201029 12:44:59.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.153" endtime="20201029 12:44:59.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.182" endtime="20201029 12:44:59.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.178" endtime="20201029 12:44:59.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.175" endtime="20201029 12:44:59.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.643" endtime="20201029 12:44:59.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.641" endtime="20201029 12:44:59.208"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.233" endtime="20201029 12:44:59.256"></status>
</kw>
<msg timestamp="20201029 12:44:59.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.229" endtime="20201029 12:44:59.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.259" endtime="20201029 12:44:59.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.266" endtime="20201029 12:44:59.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.221" endtime="20201029 12:44:59.272"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.215" endtime="20201029 12:44:59.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.291" endtime="20201029 12:44:59.653"></status>
</kw>
<msg timestamp="20201029 12:44:59.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045568111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045622514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.288" endtime="20201029 12:44:59.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045568111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045622514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.663" endtime="20201029 12:44:59.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.683" endtime="20201029 12:44:59.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.280" endtime="20201029 12:44:59.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.275" endtime="20201029 12:44:59.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:59.701" level="INFO">${RESULT} = [{'diff': 5.440300000000148e-05}, {'diff': 5.4444000000000714e-05}, {'diff': 5.377800000000432e-05}, {'diff': 5.355500000000374e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.377800000000432e-05},...</msg>
<status status="PASS" starttime="20201029 12:44:59.692" endtime="20201029 12:44:59.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:44:59.711" level="INFO">${ACCURACY} = {'diff': [5.440300000000148e-05, 5.4444000000000714e-05, 5.377800000000432e-05, 5.355500000000374e-05, 5.4458000000000284e-05, 5.377800000000432e-05, 5.379200000000389e-05, 5.411099999999558e-05, 5.42...</msg>
<status status="PASS" starttime="20201029 12:44:59.704" endtime="20201029 12:44:59.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.723" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:44:59.721" endtime="20201029 12:44:59.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.729" level="INFO">VALUE: [5.440300000000148e-05, 5.4444000000000714e-05, 5.377800000000432e-05, 5.355500000000374e-05, 5.4458000000000284e-05, 5.377800000000432e-05, 5.379200000000389e-05, 5.411099999999558e-05, 5.423600000000611e-05, 5.3763999999997814e-05, 5.43340000000031e-05, 5.36670000000003e-05, 5.444500000000019e-05, 5.436099999999583e-05, 5.3999999999998494e-05, 5.3666000000000824e-05, 5.354100000000417e-05, 5.4221999999999604e-05, 5.411099999999558e-05, 5.4499999999998994e-05, 5.388900000000141e-05, 5.390300000000098e-05, 5.368099999999987e-05, 5.379199999999695e-05, 5.4235999999999174e-05, 5.433299999999669e-05, 5.445899999999976e-05, 5.3735999999998674e-05, 5.448600000000636e-05, 5.386100000000227e-05, 5.3944000000000214e-05, 5.354200000000364e-05, 5.411200000000199e-05, 5.4458000000000284e-05, 5.377699999999791e-05, 5.355500000000374e-05, 5.3666000000000824e-05, 5.3985999999998924e-05, 5.413900000000166e-05, 5.386100000000227e-05, 5.4444000000000714e-05, 5.3527999999997133e-05, 5.422200000000654e-05, 5.368099999999987e-05, 5.390300000000098e-05, 5.36670000000003e-05, 5.355600000000321e-05, 5.445899999999976e-05, 5.4221999999999604e-05, 5.412499999999515e-05]</msg>
<status status="PASS" starttime="20201029 12:44:59.726" endtime="20201029 12:44:59.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.713" endtime="20201029 12:44:59.732"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:59.744" endtime="20201029 12:44:59.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.738" endtime="20201029 12:44:59.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.735" endtime="20201029 12:44:59.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.210" endtime="20201029 12:44:59.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.209" endtime="20201029 12:44:59.770"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.795" endtime="20201029 12:44:59.817"></status>
</kw>
<msg timestamp="20201029 12:44:59.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.791" endtime="20201029 12:44:59.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:59.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:59.820" endtime="20201029 12:44:59.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.827" endtime="20201029 12:44:59.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.783" endtime="20201029 12:44:59.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.777" endtime="20201029 12:44:59.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:59.852" endtime="20201029 12:45:00.217"></status>
</kw>
<msg timestamp="20201029 12:45:00.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044643361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:59.849" endtime="20201029 12:45:00.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044588236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044643361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.227" endtime="20201029 12:45:00.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.247" endtime="20201029 12:45:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.841" endtime="20201029 12:45:00.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.836" endtime="20201029 12:45:00.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.266" level="INFO">${RESULT} = [{'diff': 5.512499999999615e-05}, {'diff': 5.5472000000000854e-05}, {'diff': 5.4666000000001824e-05}, {'diff': 5.459699999999651e-05}, {'diff': 5.509699999999701e-05}, {'diff': 5.533299999999769e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:00.256" endtime="20201029 12:45:00.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.277" level="INFO">${ACCURACY} = {'diff': [5.512499999999615e-05, 5.5472000000000854e-05, 5.4666000000001824e-05, 5.459699999999651e-05, 5.509699999999701e-05, 5.533299999999769e-05, 5.462499999999565e-05, 5.515299999999529e-05, 5.54...</msg>
<status status="PASS" starttime="20201029 12:45:00.268" endtime="20201029 12:45:00.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.289" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.287" endtime="20201029 12:45:00.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.295" level="INFO">VALUE: [5.512499999999615e-05, 5.5472000000000854e-05, 5.4666000000001824e-05, 5.459699999999651e-05, 5.509699999999701e-05, 5.533299999999769e-05, 5.462499999999565e-05, 5.515299999999529e-05, 5.5429999999995205e-05, 5.4999999999999494e-05, 5.476400000000575e-05, 5.4791999999997953e-05, 5.515299999999529e-05, 5.4999999999999494e-05, 5.4777999999998384e-05, 5.454200000000464e-05, 5.5027999999998634e-05, 5.4777999999998384e-05, 5.540300000000248e-05, 5.4902000000002504e-05, 5.5471999999993915e-05, 5.4902000000002504e-05, 5.480499999999805e-05, 5.5444000000001714e-05, 5.4777999999998384e-05, 5.5236000000000174e-05, 5.456899999999737e-05, 5.479200000000489e-05, 5.513900000000266e-05, 5.511099999999658e-05, 5.456999999999684e-05, 5.488900000000241e-05, 5.547300000000033e-05, 5.488900000000241e-05, 5.457000000000378e-05, 5.4791999999997953e-05, 5.463900000000216e-05, 5.490300000000198e-05, 5.520900000000051e-05, 5.5415999999995635e-05, 5.5444000000001714e-05, 5.512500000000309e-05, 5.5222000000000604e-05, 5.512500000000309e-05, 5.494500000000069e-05, 5.479200000000489e-05, 5.488899999999547e-05, 5.456900000000431e-05, 5.540299999999554e-05, 5.5236000000000174e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.292" endtime="20201029 12:45:00.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.279" endtime="20201029 12:45:00.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.309" endtime="20201029 12:45:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.304" endtime="20201029 12:45:00.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.301" endtime="20201029 12:45:00.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.772" endtime="20201029 12:45:00.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:59.771" endtime="20201029 12:45:00.335"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.359" endtime="20201029 12:45:00.380"></status>
</kw>
<msg timestamp="20201029 12:45:00.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.356" endtime="20201029 12:45:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.384" endtime="20201029 12:45:00.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.390" endtime="20201029 12:45:00.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.348" endtime="20201029 12:45:00.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.342" endtime="20201029 12:45:00.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.416" endtime="20201029 12:45:00.779"></status>
</kw>
<msg timestamp="20201029 12:45:00.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044235861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044291764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.412" endtime="20201029 12:45:00.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044235861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044291764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.789" endtime="20201029 12:45:00.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.809" endtime="20201029 12:45:00.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.404" endtime="20201029 12:45:00.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.399" endtime="20201029 12:45:00.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:00.827" level="INFO">${RESULT} = [{'diff': 5.590299999999604e-05}, {'diff': 5.615299999999629e-05}, {'diff': 5.558400000000435e-05}, {'diff': 5.594500000000169e-05}, {'diff': 5.594499999999475e-05}, {'diff': 5.588899999999647e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:00.818" endtime="20201029 12:45:00.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:00.839" level="INFO">${ACCURACY} = {'diff': [5.590299999999604e-05, 5.615299999999629e-05, 5.558400000000435e-05, 5.594500000000169e-05, 5.594499999999475e-05, 5.588899999999647e-05, 5.612499999999715e-05, 5.6444000000002714e-05, 5.644...</msg>
<status status="PASS" starttime="20201029 12:45:00.829" endtime="20201029 12:45:00.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.851" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:45:00.849" endtime="20201029 12:45:00.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.857" level="INFO">VALUE: [5.590299999999604e-05, 5.615299999999629e-05, 5.558400000000435e-05, 5.594500000000169e-05, 5.594499999999475e-05, 5.588899999999647e-05, 5.612499999999715e-05, 5.6444000000002714e-05, 5.6444000000002714e-05, 5.627700000000041e-05, 5.586099999999733e-05, 5.577699999999991e-05, 5.633299999999869e-05, 5.588899999999647e-05, 5.612500000000409e-05, 5.556900000000531e-05, 5.5513999999999564e-05, 5.6000000000000494e-05, 5.556999999999784e-05, 5.5499999999999994e-05, 5.557000000000478e-05, 5.6222000000001604e-05, 5.6014000000000064e-05, 5.588899999999647e-05, 5.622300000000108e-05, 5.5750000000000244e-05, 5.6457999999995345e-05, 5.612499999999715e-05, 5.590299999999604e-05, 5.611100000000452e-05, 5.6500000000000994e-05, 5.58749999999969e-05, 5.6014000000000064e-05, 5.6443999999995775e-05, 5.5736000000000674e-05, 5.633299999999869e-05, 5.556999999999784e-05, 5.588900000000341e-05, 5.588900000000341e-05, 5.590300000000298e-05, 5.6236000000001174e-05, 5.6055999999998773e-05, 5.644499999999525e-05, 5.612500000000409e-05, 5.5541999999998704e-05, 5.611099999999758e-05, 5.5930000000002644e-05, 5.6250000000000744e-05, 5.6444000000002714e-05, 5.5680000000002394e-05]</msg>
<status status="PASS" starttime="20201029 12:45:00.854" endtime="20201029 12:45:00.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.841" endtime="20201029 12:45:00.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:00.871" endtime="20201029 12:45:00.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.866" endtime="20201029 12:45:00.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.863" endtime="20201029 12:45:00.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.337" endtime="20201029 12:45:00.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.336" endtime="20201029 12:45:00.896"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.922" endtime="20201029 12:45:00.944"></status>
</kw>
<msg timestamp="20201029 12:45:00.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.918" endtime="20201029 12:45:00.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:00.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:00.947" endtime="20201029 12:45:00.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.953" endtime="20201029 12:45:00.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.910" endtime="20201029 12:45:00.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.903" endtime="20201029 12:45:00.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:00.977" endtime="20201029 12:45:01.325"></status>
</kw>
<msg timestamp="20201029 12:45:01.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045610778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045667597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:00.974" endtime="20201029 12:45:01.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045610778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045667597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.335" endtime="20201029 12:45:01.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.354" endtime="20201029 12:45:01.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.966" endtime="20201029 12:45:01.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.962" endtime="20201029 12:45:01.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.371" level="INFO">${RESULT} = [{'diff': 5.681899999999962e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.711099999999858e-05}, {'diff': 5.7264000000001314e-05}, {'diff': 5.6694000000002964e-05}, {'diff': 5.6778000000000384e-05...</msg>
<status status="PASS" starttime="20201029 12:45:01.362" endtime="20201029 12:45:01.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.381" level="INFO">${ACCURACY} = {'diff': [5.681899999999962e-05, 5.7222000000002604e-05, 5.711099999999858e-05, 5.7264000000001314e-05, 5.6694000000002964e-05, 5.6778000000000384e-05, 5.669500000000244e-05, 5.690300000000398e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:45:01.373" endtime="20201029 12:45:01.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.392" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.390" endtime="20201029 12:45:01.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.398" level="INFO">VALUE: [5.681899999999962e-05, 5.7222000000002604e-05, 5.711099999999858e-05, 5.7264000000001314e-05, 5.6694000000002964e-05, 5.6778000000000384e-05, 5.669500000000244e-05, 5.690300000000398e-05, 5.712500000000509e-05, 5.688900000000441e-05, 5.6778000000000384e-05, 5.688900000000441e-05, 5.734799999999873e-05, 5.6778000000000384e-05, 5.7000000000001494e-05, 5.656900000000631e-05, 5.711200000000499e-05, 5.7014000000001064e-05, 5.65549999999998e-05, 5.6666000000003824e-05, 5.6651999999997316e-05, 5.712499999999815e-05, 5.711099999999858e-05, 5.7221999999995665e-05, 5.656900000000631e-05, 5.741699999999711e-05, 5.6778000000000384e-05, 5.7472000000002854e-05, 5.693100000000312e-05, 5.736099999999883e-05, 5.666699999999636e-05, 5.723700000000165e-05, 5.6778000000000384e-05, 5.688899999999747e-05, 5.709800000000542e-05, 5.679100000000048e-05, 5.67629999999944e-05, 5.6666000000003824e-05, 5.711100000000552e-05, 5.6791999999999954e-05, 5.66670000000033e-05, 5.656899999999937e-05, 5.7443999999996775e-05, 5.734699999999926e-05, 5.6499999999994055e-05, 5.7222000000002604e-05, 5.6555999999999274e-05, 5.6528000000000134e-05, 5.6778000000000384e-05, 5.668100000000287e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.394" endtime="20201029 12:45:01.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.383" endtime="20201029 12:45:01.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.416" endtime="20201029 12:45:01.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.412" endtime="20201029 12:45:01.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.409" endtime="20201029 12:45:01.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.899" endtime="20201029 12:45:01.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:00.897" endtime="20201029 12:45:01.442"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.465" endtime="20201029 12:45:01.487"></status>
</kw>
<msg timestamp="20201029 12:45:01.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.462" endtime="20201029 12:45:01.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.491" endtime="20201029 12:45:01.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.497" endtime="20201029 12:45:01.501"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.454" endtime="20201029 12:45:01.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.448" endtime="20201029 12:45:01.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.521" endtime="20201029 12:45:01.881"></status>
</kw>
<msg timestamp="20201029 12:45:01.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043948847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.518" endtime="20201029 12:45:01.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043891097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043948847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.891" endtime="20201029 12:45:01.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.909" endtime="20201029 12:45:01.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.511" endtime="20201029 12:45:01.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.506" endtime="20201029 12:45:01.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.927" level="INFO">${RESULT} = [{'diff': 5.7750000000002244e-05}, {'diff': 5.7679999999997456e-05}, {'diff': 5.7999999999995555e-05}, {'diff': 5.8222000000003604e-05}, {'diff': 5.76670000000043e-05}, {'diff': 5.7778000000001384e-05...</msg>
<status status="PASS" starttime="20201029 12:45:01.918" endtime="20201029 12:45:01.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:01.937" level="INFO">${ACCURACY} = {'diff': [5.7750000000002244e-05, 5.7679999999997456e-05, 5.7999999999995555e-05, 5.8222000000003604e-05, 5.76670000000043e-05, 5.7778000000001384e-05, 5.834700000000026e-05, 5.7777999999994445e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:45:01.929" endtime="20201029 12:45:01.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.948" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:45:01.946" endtime="20201029 12:45:01.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.954" level="INFO">VALUE: [5.7750000000002244e-05, 5.7679999999997456e-05, 5.7999999999995555e-05, 5.8222000000003604e-05, 5.76670000000043e-05, 5.7778000000001384e-05, 5.834700000000026e-05, 5.7777999999994445e-05, 5.8013999999995125e-05, 5.8222000000003604e-05, 5.8180000000004894e-05, 5.822300000000308e-05, 5.843099999999768e-05, 5.7971999999996415e-05, 5.83749999999994e-05, 5.7665999999997886e-05, 5.781900000000062e-05, 5.8000000000002494e-05, 5.7652000000005255e-05, 5.833300000000069e-05, 5.8014000000002064e-05, 5.833300000000069e-05, 5.808300000000044e-05, 5.8221999999996665e-05, 5.7764000000001814e-05, 5.845900000000376e-05, 5.7556000000000274e-05, 5.795900000000326e-05, 5.844500000000419e-05, 5.8486000000003424e-05, 5.8347999999999733e-05, 5.801300000000259e-05, 5.8471999999996915e-05, 5.8221999999996665e-05, 5.75550000000008e-05, 5.7957999999996845e-05, 5.784699999999976e-05, 5.790299999999804e-05, 5.794500000000369e-05, 5.833300000000069e-05, 5.8013999999995125e-05, 5.811099999999958e-05, 5.8235999999996235e-05, 5.840299999999854e-05, 5.845900000000376e-05, 5.8013999999995125e-05, 5.8000000000002494e-05, 5.811099999999958e-05, 5.7556000000000274e-05, 5.7556000000000274e-05]</msg>
<status status="PASS" starttime="20201029 12:45:01.951" endtime="20201029 12:45:01.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.939" endtime="20201029 12:45:01.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.970" endtime="20201029 12:45:01.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.963" endtime="20201029 12:45:01.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.961" endtime="20201029 12:45:01.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.444" endtime="20201029 12:45:01.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.443" endtime="20201029 12:45:01.995"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.019" endtime="20201029 12:45:02.040"></status>
</kw>
<msg timestamp="20201029 12:45:02.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.016" endtime="20201029 12:45:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.044" endtime="20201029 12:45:02.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.050" endtime="20201029 12:45:02.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.008" endtime="20201029 12:45:02.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.002" endtime="20201029 12:45:02.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.075" endtime="20201029 12:45:02.384"></status>
</kw>
<msg timestamp="20201029 12:45:02.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.071" endtime="20201029 12:45:02.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042828431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.394" endtime="20201029 12:45:02.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.413" endtime="20201029 12:45:02.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.064" endtime="20201029 12:45:02.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.059" endtime="20201029 12:45:02.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.430" level="INFO">${RESULT} = [{'diff': 5.890299999999904e-05}, {'diff': 5.9457999999998346e-05}, {'diff': 5.9222000000004604e-05}, {'diff': 5.9222000000004604e-05}, {'diff': 5.9235999999997235e-05}, {'diff': 5.9457999999998346e-0...</msg>
<status status="PASS" starttime="20201029 12:45:02.421" endtime="20201029 12:45:02.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.441" level="INFO">${ACCURACY} = {'diff': [5.890299999999904e-05, 5.9457999999998346e-05, 5.9222000000004604e-05, 5.9222000000004604e-05, 5.9235999999997235e-05, 5.9457999999998346e-05, 5.8778000000002384e-05, 5.912500000000015e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:02.432" endtime="20201029 12:45:02.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.452" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.450" endtime="20201029 12:45:02.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.458" level="INFO">VALUE: [5.890299999999904e-05, 5.9457999999998346e-05, 5.9222000000004604e-05, 5.9222000000004604e-05, 5.9235999999997235e-05, 5.9457999999998346e-05, 5.8778000000002384e-05, 5.912500000000015e-05, 5.933300000000169e-05, 5.869500000000444e-05, 5.8763999999995875e-05, 5.93750000000004e-05, 5.8778000000002384e-05, 5.9334000000001164e-05, 5.8777999999995445e-05, 5.947300000000433e-05, 5.8570000000000844e-05, 5.9000000000003494e-05, 5.943100000000562e-05, 5.901300000000359e-05, 5.9277999999995945e-05, 5.9249999999996805e-05, 5.85550000000018e-05, 5.9250000000003744e-05, 5.8792000000001954e-05, 5.930499999999561e-05, 5.9443999999998776e-05, 5.856899999999443e-05, 5.943099999999868e-05, 5.868100000000487e-05, 5.8569999999993905e-05, 5.869500000000444e-05, 5.9334000000001164e-05, 5.9028000000002634e-05, 5.8527999999995195e-05, 5.9334000000001164e-05, 5.922299999999714e-05, 5.8929999999998706e-05, 5.8665999999998886e-05, 5.9235999999997235e-05, 5.877700000000291e-05, 5.911100000000058e-05, 5.9443999999998776e-05, 5.933300000000169e-05, 5.866699999999836e-05, 5.9236000000004174e-05, 5.883300000000119e-05, 5.861100000000008e-05, 5.888899999999947e-05, 5.9500000000003994e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.455" endtime="20201029 12:45:02.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.443" endtime="20201029 12:45:02.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:02.471" endtime="20201029 12:45:02.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.467" endtime="20201029 12:45:02.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.464" endtime="20201029 12:45:02.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.998" endtime="20201029 12:45:02.496"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.996" endtime="20201029 12:45:02.497"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.520" endtime="20201029 12:45:02.541"></status>
</kw>
<msg timestamp="20201029 12:45:02.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.516" endtime="20201029 12:45:02.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.545" endtime="20201029 12:45:02.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.551" endtime="20201029 12:45:02.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.509" endtime="20201029 12:45:02.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.503" endtime="20201029 12:45:02.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.575" endtime="20201029 12:45:02.921"></status>
</kw>
<msg timestamp="20201029 12:45:02.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042617917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.572" endtime="20201029 12:45:02.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042558389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042617917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:02.930" endtime="20201029 12:45:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.949" endtime="20201029 12:45:02.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.565" endtime="20201029 12:45:02.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.560" endtime="20201029 12:45:02.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:02.966" level="INFO">${RESULT} = [{'diff': 5.9527999999996195e-05}, {'diff': 6.0334000000002164e-05}, {'diff': 6.0111999999994115e-05}, {'diff': 6.0028000000003634e-05}, {'diff': 6.033300000000269e-05}, {'diff': 6.0443999999999776e-0...</msg>
<status status="PASS" starttime="20201029 12:45:02.957" endtime="20201029 12:45:02.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:02.977" level="INFO">${ACCURACY} = {'diff': [5.9527999999996195e-05, 6.0334000000002164e-05, 6.0111999999994115e-05, 6.0028000000003634e-05, 6.033300000000269e-05, 6.0443999999999776e-05, 6.034700000000226e-05, 5.954100000000323e-05, 6...</msg>
<status status="PASS" starttime="20201029 12:45:02.968" endtime="20201029 12:45:02.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.989" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:45:02.986" endtime="20201029 12:45:02.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:02.995" level="INFO">VALUE: [5.9527999999996195e-05, 6.0334000000002164e-05, 6.0111999999994115e-05, 6.0028000000003634e-05, 6.033300000000269e-05, 6.0443999999999776e-05, 6.034700000000226e-05, 5.954100000000323e-05, 6.0013999999997125e-05, 5.965300000000673e-05, 5.9792000000002954e-05, 6.0207999999999096e-05, 5.990300000000004e-05, 6.0221999999998665e-05, 5.9806000000002524e-05, 6.0000000000004494e-05, 5.9778000000003384e-05, 6.0221999999998665e-05, 6.0334000000002164e-05, 5.9985999999997985e-05, 5.9999999999997555e-05, 6.016699999999986e-05, 5.977700000000391e-05, 6.0457999999999346e-05, 6.0513999999997625e-05, 6.034699999999532e-05, 5.991699999999961e-05, 5.958300000000194e-05, 5.955499999999586e-05, 5.988900000000047e-05, 5.9584000000001414e-05, 5.9791999999996015e-05, 6.0236000000005174e-05, 5.990300000000004e-05, 6.0000000000004494e-05, 6.034700000000226e-05, 5.965299999999979e-05, 5.99870000000044e-05, 5.970899999999807e-05, 6.012500000000115e-05, 5.98750000000009e-05, 6.034699999999532e-05, 5.9652000000000316e-05, 5.95550000000028e-05, 6.034700000000226e-05, 6.0443999999999776e-05, 6.0027999999996695e-05, 5.98750000000009e-05, 6.034700000000226e-05, 5.9999999999997555e-05]</msg>
<status status="PASS" starttime="20201029 12:45:02.991" endtime="20201029 12:45:02.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.979" endtime="20201029 12:45:02.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.008" endtime="20201029 12:45:03.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.004" endtime="20201029 12:45:03.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.000" endtime="20201029 12:45:03.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.499" endtime="20201029 12:45:03.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.497" endtime="20201029 12:45:03.034"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.057" endtime="20201029 12:45:03.077"></status>
</kw>
<msg timestamp="20201029 12:45:03.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.053" endtime="20201029 12:45:03.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.081" endtime="20201029 12:45:03.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.087" endtime="20201029 12:45:03.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.046" endtime="20201029 12:45:03.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.040" endtime="20201029 12:45:03.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.110" endtime="20201029 12:45:03.452"></status>
</kw>
<msg timestamp="20201029 12:45:03.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.107" endtime="20201029 12:45:03.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.462" endtime="20201029 12:45:03.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.480" endtime="20201029 12:45:03.484"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.100" endtime="20201029 12:45:03.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.095" endtime="20201029 12:45:03.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:03.498" level="INFO">${RESULT} = [{'diff': 6.115300000000129e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.123599999999924e-05}, {'diff': 6.0834000000002664e-05}, {'diff': 6.0569999999995905e-05}, {'diff': 6.062500000000165e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:03.489" endtime="20201029 12:45:03.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:03.507" level="INFO">${ACCURACY} = {'diff': [6.115300000000129e-05, 6.090300000000104e-05, 6.123599999999924e-05, 6.0834000000002664e-05, 6.0569999999995905e-05, 6.062500000000165e-05, 6.066700000000036e-05, 6.095899999999932e-05, 6.08...</msg>
<status status="PASS" starttime="20201029 12:45:03.500" endtime="20201029 12:45:03.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.518" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:45:03.516" endtime="20201029 12:45:03.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.523" level="INFO">VALUE: [6.115300000000129e-05, 6.090300000000104e-05, 6.123599999999924e-05, 6.0834000000002664e-05, 6.0569999999995905e-05, 6.062500000000165e-05, 6.066700000000036e-05, 6.095899999999932e-05, 6.088799999999506e-05, 6.111100000000258e-05, 6.122199999999967e-05, 6.112500000000215e-05, 6.055499999999686e-05, 6.090300000000104e-05, 6.090300000000104e-05, 6.134699999999632e-05, 6.131899999999718e-05, 6.068099999999993e-05, 6.0792000000003954e-05, 6.129099999999804e-05, 6.122199999999967e-05, 6.122299999999914e-05, 6.109799999999554e-05, 6.0999999999998555e-05, 6.111099999999564e-05, 6.133299999999675e-05, 6.104199999999727e-05, 6.1013999999998125e-05, 6.136100000000283e-05, 6.0666000000000886e-05, 6.0777999999997445e-05, 6.0556000000003274e-05, 6.0971999999999416e-05, 6.065300000000079e-05, 6.113900000000172e-05, 6.120899999999957e-05, 6.1195e-05, 6.115300000000129e-05, 6.111099999999564e-05, 6.090300000000104e-05, 6.0999999999998555e-05, 6.066699999999342e-05, 6.102699999999822e-05, 6.133299999999675e-05, 6.112500000000215e-05, 6.109700000000301e-05, 6.123599999999924e-05, 6.14300000000012e-05, 6.111099999999564e-05, 6.0971999999999416e-05]</msg>
<status status="PASS" starttime="20201029 12:45:03.520" endtime="20201029 12:45:03.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.509" endtime="20201029 12:45:03.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:03.536" endtime="20201029 12:45:03.557"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.531" endtime="20201029 12:45:03.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.529" endtime="20201029 12:45:03.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.036" endtime="20201029 12:45:03.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.034" endtime="20201029 12:45:03.561"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.584" endtime="20201029 12:45:03.606"></status>
</kw>
<msg timestamp="20201029 12:45:03.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.580" endtime="20201029 12:45:03.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:03.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:03.609" endtime="20201029 12:45:03.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.615" endtime="20201029 12:45:03.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.573" endtime="20201029 12:45:03.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.567" endtime="20201029 12:45:03.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:03.639" endtime="20201029 12:45:03.977"></status>
</kw>
<msg timestamp="20201029 12:45:03.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042846569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.635" endtime="20201029 12:45:03.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042846569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042908875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:03.987" endtime="20201029 12:45:04.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.006" endtime="20201029 12:45:04.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.628" endtime="20201029 12:45:04.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.624" endtime="20201029 12:45:04.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.024" level="INFO">${RESULT} = [{'diff': 6.230599999999809e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.223600000000024e-05}, {'diff': 6.222200000000067e-05}, {'diff': 6.244400000000178e-05}, {'diff': 6.154099999999829e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:04.014" endtime="20201029 12:45:04.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.034" level="INFO">${ACCURACY} = {'diff': [6.230599999999809e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.222200000000067e-05, 6.244400000000178e-05, 6.154099999999829e-05, 6.180600000000452e-05, 6.211100000000358e-05, 6.2125...</msg>
<status status="PASS" starttime="20201029 12:45:04.026" endtime="20201029 12:45:04.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.046" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.043" endtime="20201029 12:45:04.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.051" level="INFO">VALUE: [6.230599999999809e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.222200000000067e-05, 6.244400000000178e-05, 6.154099999999829e-05, 6.180600000000452e-05, 6.211100000000358e-05, 6.212500000000315e-05, 6.188900000000247e-05, 6.168100000000093e-05, 6.1500000000006e-05, 6.22499999999998e-05, 6.209700000000401e-05, 6.18750000000029e-05, 6.199999999999956e-05, 6.243100000000168e-05, 6.190199999999563e-05, 6.22080000000011e-05, 6.233299999999775e-05, 6.213899999999578e-05, 6.180500000000505e-05, 6.233300000000469e-05, 6.223600000000024e-05, 6.211100000000358e-05, 6.213900000000272e-05, 6.199999999999956e-05, 6.236099999999689e-05, 6.234699999999732e-05, 6.199999999999956e-05, 6.193099999999424e-05, 6.15279999999982e-05, 6.169400000000103e-05, 6.222300000000014e-05, 6.198599999999999e-05, 6.211100000000358e-05, 6.247200000000092e-05, 6.190300000000204e-05, 6.201399999999913e-05, 6.191700000000161e-05, 6.247200000000092e-05, 6.188900000000247e-05, 6.187499999999596e-05, 6.154199999999777e-05, 6.233300000000469e-05, 6.168100000000093e-05, 6.177799999999845e-05, 6.243100000000168e-05, 6.245899999999388e-05, 6.163900000000222e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.048" endtime="20201029 12:45:04.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.036" endtime="20201029 12:45:04.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.066" endtime="20201029 12:45:04.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.060" endtime="20201029 12:45:04.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.058" endtime="20201029 12:45:04.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.563" endtime="20201029 12:45:04.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:03.562" endtime="20201029 12:45:04.091"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.115" endtime="20201029 12:45:04.135"></status>
</kw>
<msg timestamp="20201029 12:45:04.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.111" endtime="20201029 12:45:04.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.139" endtime="20201029 12:45:04.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.145" endtime="20201029 12:45:04.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.104" endtime="20201029 12:45:04.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.098" endtime="20201029 12:45:04.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.169" endtime="20201029 12:45:04.513"></status>
</kw>
<msg timestamp="20201029 12:45:04.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.165" endtime="20201029 12:45:04.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042111139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042173806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:04.522" endtime="20201029 12:45:04.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.541" endtime="20201029 12:45:04.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.158" endtime="20201029 12:45:04.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.153" endtime="20201029 12:45:04.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:04.560" level="INFO">${RESULT} = [{'diff': 6.266700000000236e-05}, {'diff': 6.268099999999499e-05}, {'diff': 6.255600000000527e-05}, {'diff': 6.331899999999918e-05}, {'diff': 6.344400000000278e-05}, {'diff': 6.316600000000339e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:04.551" endtime="20201029 12:45:04.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:04.571" level="INFO">${ACCURACY} = {'diff': [6.266700000000236e-05, 6.268099999999499e-05, 6.255600000000527e-05, 6.331899999999918e-05, 6.344400000000278e-05, 6.316600000000339e-05, 6.333299999999875e-05, 6.277799999999945e-05, 6.2777...</msg>
<status status="PASS" starttime="20201029 12:45:04.562" endtime="20201029 12:45:04.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.583" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:45:04.580" endtime="20201029 12:45:04.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.588" level="INFO">VALUE: [6.266700000000236e-05, 6.268099999999499e-05, 6.255600000000527e-05, 6.331899999999918e-05, 6.344400000000278e-05, 6.316600000000339e-05, 6.333299999999875e-05, 6.277799999999945e-05, 6.277799999999945e-05, 6.334700000000526e-05, 6.322200000000167e-05, 6.25420000000057e-05, 6.26950000000015e-05, 6.311099999999764e-05, 6.323600000000124e-05, 6.276399999999988e-05, 6.25279999999992e-05, 6.287499999999696e-05, 6.333399999999823e-05, 6.300000000000056e-05, 6.254099999999929e-05, 6.345800000000235e-05, 6.28750000000039e-05, 6.283299999999825e-05, 6.312499999999721e-05, 6.255499999999886e-05, 6.344400000000278e-05, 6.277799999999945e-05, 6.262499999999671e-05, 6.344500000000225e-05, 6.252800000000613e-05, 6.25699999999979e-05, 6.254199999999877e-05, 6.318100000000243e-05, 6.280499999999911e-05, 6.256899999999843e-05, 6.308300000000544e-05, 6.309699999999807e-05, 6.256900000000537e-05, 6.293100000000218e-05, 6.259699999999757e-05, 6.256900000000537e-05, 6.345799999999541e-05, 6.29029999999961e-05, 6.268100000000193e-05, 6.311100000000458e-05, 6.254199999999877e-05, 6.301400000000013e-05, 6.25699999999979e-05, 6.273600000000074e-05]</msg>
<status status="PASS" starttime="20201029 12:45:04.585" endtime="20201029 12:45:04.590"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.573" endtime="20201029 12:45:04.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:04.601" endtime="20201029 12:45:04.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.597" endtime="20201029 12:45:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.594" endtime="20201029 12:45:04.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.094" endtime="20201029 12:45:04.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.092" endtime="20201029 12:45:04.626"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.650" endtime="20201029 12:45:04.671"></status>
</kw>
<msg timestamp="20201029 12:45:04.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.646" endtime="20201029 12:45:04.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:04.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:04.675" endtime="20201029 12:45:04.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.681" endtime="20201029 12:45:04.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.639" endtime="20201029 12:45:04.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.633" endtime="20201029 12:45:04.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:04.705" endtime="20201029 12:45:05.048"></status>
</kw>
<msg timestamp="20201029 12:45:05.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042587153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:04.701" endtime="20201029 12:45:05.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042587153, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:05.057" endtime="20201029 12:45:05.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.077" endtime="20201029 12:45:05.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.694" endtime="20201029 12:45:05.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.689" endtime="20201029 12:45:05.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.095" level="INFO">${RESULT} = [{'diff': 6.415300000000429e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.368100000000293e-05}, {'diff': 6.433399999999923e-05}, {'diff': 6.367999999999652e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:05.086" endtime="20201029 12:45:05.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.107" level="INFO">${ACCURACY} = {'diff': [6.415300000000429e-05, 6.377800000000045e-05, 6.377800000000045e-05, 6.368100000000293e-05, 6.433399999999923e-05, 6.367999999999652e-05, 6.355599999999934e-05, 6.356900000000637e-05, 6.4000...</msg>
<status status="PASS" starttime="20201029 12:45:05.097" endtime="20201029 12:45:05.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.118" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.116" endtime="20201029 12:45:05.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.123" level="INFO">VALUE: [6.415300000000429e-05, 6.377800000000045e-05, 6.377800000000045e-05, 6.368100000000293e-05, 6.433399999999923e-05, 6.367999999999652e-05, 6.355599999999934e-05, 6.356900000000637e-05, 6.400000000000156e-05, 6.411099999999864e-05, 6.376399999999394e-05, 6.367999999999652e-05, 6.434699999999932e-05, 6.422200000000267e-05, 6.36950000000025e-05, 6.401399999999419e-05, 6.433399999999923e-05, 6.358399999999848e-05, 6.401399999999419e-05, 6.411099999999864e-05, 6.445900000000282e-05, 6.35699999999989e-05, 6.422300000000214e-05, 6.401300000000165e-05, 6.377700000000097e-05, 6.379100000000054e-05, 6.398600000000199e-05, 6.379100000000054e-05, 6.433299999999975e-05, 6.366699999999642e-05, 6.391700000000361e-05, 6.39029999999971e-05, 6.361200000000455e-05, 6.433299999999975e-05, 6.42500000000018e-05, 6.355599999999934e-05, 6.372200000000217e-05, 6.397300000000189e-05, 6.358300000000594e-05, 6.400000000000156e-05, 6.412499999999821e-05, 6.377700000000097e-05, 6.400000000000156e-05, 6.369400000000303e-05, 6.411099999999864e-05, 6.355499999999986e-05, 6.444399999999684e-05, 6.379200000000002e-05, 6.377800000000045e-05, 6.40699999999994e-05]</msg>
<status status="PASS" starttime="20201029 12:45:05.120" endtime="20201029 12:45:05.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.109" endtime="20201029 12:45:05.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.136" endtime="20201029 12:45:05.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.132" endtime="20201029 12:45:05.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.129" endtime="20201029 12:45:05.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.628" endtime="20201029 12:45:05.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:04.627" endtime="20201029 12:45:05.162"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.185" endtime="20201029 12:45:05.208"></status>
</kw>
<msg timestamp="20201029 12:45:05.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.182" endtime="20201029 12:45:05.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.211" endtime="20201029 12:45:05.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.217" endtime="20201029 12:45:05.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.174" endtime="20201029 12:45:05.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.168" endtime="20201029 12:45:05.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.241" endtime="20201029 12:45:05.586"></status>
</kw>
<msg timestamp="20201029 12:45:05.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042520667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.238" endtime="20201029 12:45:05.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042455764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042520667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.595" endtime="20201029 12:45:05.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.614" endtime="20201029 12:45:05.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.231" endtime="20201029 12:45:05.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.226" endtime="20201029 12:45:05.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.631" level="INFO">${RESULT} = [{'diff': 6.49029999999981e-05}, {'diff': 6.477700000000197e-05}, {'diff': 6.499999999999562e-05}, {'diff': 6.501300000000265e-05}, {'diff': 6.454100000000129e-05}, {'diff': 6.467999999999752e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:05.622" endtime="20201029 12:45:05.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:05.641" level="INFO">${ACCURACY} = {'diff': [6.49029999999981e-05, 6.477700000000197e-05, 6.499999999999562e-05, 6.501300000000265e-05, 6.454100000000129e-05, 6.467999999999752e-05, 6.48750000000059e-05, 6.501399999999519e-05, 6.545799...</msg>
<status status="PASS" starttime="20201029 12:45:05.634" endtime="20201029 12:45:05.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.652" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:45:05.650" endtime="20201029 12:45:05.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.658" level="INFO">VALUE: [6.49029999999981e-05, 6.477700000000197e-05, 6.499999999999562e-05, 6.501300000000265e-05, 6.454100000000129e-05, 6.467999999999752e-05, 6.48750000000059e-05, 6.501399999999519e-05, 6.545799999999741e-05, 6.466699999999742e-05, 6.479200000000102e-05, 6.520799999999716e-05, 6.45699999999999e-05, 6.500000000000256e-05, 6.49029999999981e-05, 6.520900000000357e-05, 6.52359999999963e-05, 6.522300000000314e-05, 6.449999999999512e-05, 6.52080000000041e-05, 6.454100000000129e-05, 6.547200000000392e-05, 6.466599999999795e-05, 6.500000000000256e-05, 6.477800000000145e-05, 6.544399999999784e-05, 6.519399999999759e-05, 6.544400000000478e-05, 6.54029999999986e-05, 6.522200000000367e-05, 6.459699999999957e-05, 6.488899999999853e-05, 6.512499999999921e-05, 6.543099999999774e-05, 6.455500000000086e-05, 6.481899999999374e-05, 6.536099999999989e-05, 6.481900000000068e-05, 6.476399999999494e-05, 6.469400000000403e-05, 6.477800000000145e-05, 6.545799999999741e-05, 6.544399999999784e-05, 6.47500000000023e-05, 6.511099999999964e-05, 6.472200000000317e-05, 6.501399999999519e-05, 6.511099999999964e-05, 6.501400000000213e-05, 6.533400000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:45:05.655" endtime="20201029 12:45:05.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.643" endtime="20201029 12:45:05.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.671" endtime="20201029 12:45:05.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.666" endtime="20201029 12:45:05.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.664" endtime="20201029 12:45:05.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.164" endtime="20201029 12:45:05.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.163" endtime="20201029 12:45:05.696"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.719" endtime="20201029 12:45:05.741"></status>
</kw>
<msg timestamp="20201029 12:45:05.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.716" endtime="20201029 12:45:05.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.745" endtime="20201029 12:45:05.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.751" endtime="20201029 12:45:05.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.709" endtime="20201029 12:45:05.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.702" endtime="20201029 12:45:05.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.776" endtime="20201029 12:45:06.090"></status>
</kw>
<msg timestamp="20201029 12:45:06.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043758056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:05.772" endtime="20201029 12:45:06.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043758056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.095" endtime="20201029 12:45:06.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.104" endtime="20201029 12:45:06.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.765" endtime="20201029 12:45:06.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.760" endtime="20201029 12:45:06.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.112" level="INFO">${RESULT} = [{'diff': 6.581900000000168e-05}, {'diff': 6.60830000000015e-05}, {'diff': 6.57779999999955e-05}, {'diff': 6.599999999999662e-05}, {'diff': 6.599999999999662e-05}, {'diff': 6.556999999999397e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:06.108" endtime="20201029 12:45:06.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.116" level="INFO">${ACCURACY} = {'diff': [6.581900000000168e-05, 6.60830000000015e-05, 6.57779999999955e-05, 6.599999999999662e-05, 6.599999999999662e-05, 6.556999999999397e-05, 6.555600000000134e-05, 6.59029999999991e-05, 6.5999999...</msg>
<status status="PASS" starttime="20201029 12:45:06.113" endtime="20201029 12:45:06.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.122" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.120" endtime="20201029 12:45:06.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.124" level="INFO">VALUE: [6.581900000000168e-05, 6.60830000000015e-05, 6.57779999999955e-05, 6.599999999999662e-05, 6.599999999999662e-05, 6.556999999999397e-05, 6.555600000000134e-05, 6.59029999999991e-05, 6.599999999999662e-05, 6.644499999999831e-05, 6.63480000000008e-05, 6.633400000000123e-05, 6.601299999999671e-05, 6.601399999999619e-05, 6.623600000000424e-05, 6.599999999999662e-05, 6.554100000000229e-05, 6.568000000000546e-05, 6.570799999999766e-05, 6.627800000000295e-05, 6.573600000000374e-05, 6.586100000000039e-05, 6.634700000000132e-05, 6.579200000000202e-05, 6.645899999999788e-05, 6.59029999999991e-05, 6.633400000000123e-05, 6.602799999999576e-05, 6.622199999999773e-05, 6.622200000000467e-05, 6.576399999999594e-05, 6.551400000000263e-05, 6.57779999999955e-05, 6.59029999999991e-05, 6.550000000000306e-05, 6.591700000000561e-05, 6.55700000000009e-05, 6.647199999999798e-05, 6.59029999999991e-05, 6.612500000000021e-05, 6.55700000000009e-05, 6.644499999999831e-05, 6.644499999999831e-05, 6.566699999999842e-05, 6.580500000000211e-05, 6.60280000000027e-05, 6.588899999999953e-05, 6.623600000000424e-05, 6.609700000000107e-05, 6.556900000000143e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.123" endtime="20201029 12:45:06.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.117" endtime="20201029 12:45:06.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.131" endtime="20201029 12:45:06.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.128" endtime="20201029 12:45:06.154"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.127" endtime="20201029 12:45:06.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.698" endtime="20201029 12:45:06.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.697" endtime="20201029 12:45:06.156"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.179" endtime="20201029 12:45:06.200"></status>
</kw>
<msg timestamp="20201029 12:45:06.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.176" endtime="20201029 12:45:06.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.204" endtime="20201029 12:45:06.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.210" endtime="20201029 12:45:06.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.169" endtime="20201029 12:45:06.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.163" endtime="20201029 12:45:06.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.234" endtime="20201029 12:45:06.576"></status>
</kw>
<msg timestamp="20201029 12:45:06.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.231" endtime="20201029 12:45:06.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042090972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.585" endtime="20201029 12:45:06.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.604" endtime="20201029 12:45:06.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.224" endtime="20201029 12:45:06.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.219" endtime="20201029 12:45:06.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:06.621" level="INFO">${RESULT} = [{'diff': 6.724999999999787e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.734700000000232e-05}, {'diff': 6.713900000000078e-05}, {'diff': 6.680599999999565e-05}, {'diff': 6.679199999999608e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:06.613" endtime="20201029 12:45:06.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:06.632" level="INFO">${ACCURACY} = {'diff': [6.724999999999787e-05, 6.745799999999941e-05, 6.734700000000232e-05, 6.713900000000078e-05, 6.680599999999565e-05, 6.679199999999608e-05, 6.700000000000456e-05, 6.669499999999856e-05, 6.7417...</msg>
<status status="PASS" starttime="20201029 12:45:06.624" endtime="20201029 12:45:06.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.644" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:45:06.641" endtime="20201029 12:45:06.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.649" level="INFO">VALUE: [6.724999999999787e-05, 6.745799999999941e-05, 6.734700000000232e-05, 6.713900000000078e-05, 6.680599999999565e-05, 6.679199999999608e-05, 6.700000000000456e-05, 6.669499999999856e-05, 6.741700000000017e-05, 6.688900000000053e-05, 6.733399999999529e-05, 6.724999999999787e-05, 6.655600000000234e-05, 6.683300000000225e-05, 6.6583000000002e-05, 6.679100000000354e-05, 6.745799999999941e-05, 6.679199999999608e-05, 6.733300000000275e-05, 6.744399999999984e-05, 6.688900000000053e-05, 6.687500000000096e-05, 6.666699999999942e-05, 6.724999999999787e-05, 6.661100000000114e-05, 6.680599999999565e-05, 6.679200000000302e-05, 6.732000000000266e-05, 6.734699999999538e-05, 6.733400000000223e-05, 6.656900000000243e-05, 6.654099999999635e-05, 6.649999999999712e-05, 6.694399999999934e-05, 6.731899999999624e-05, 6.747199999999898e-05, 6.654200000000277e-05, 6.69030000000001e-05, 6.733300000000275e-05, 6.670799999999866e-05, 6.65700000000019e-05, 6.72359999999983e-05, 6.67500000000043e-05, 6.700000000000456e-05, 6.711200000000112e-05, 6.733400000000223e-05, 6.715300000000035e-05, 6.697199999999848e-05, 6.666599999999995e-05, 6.656900000000243e-05]</msg>
<status status="PASS" starttime="20201029 12:45:06.646" endtime="20201029 12:45:06.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.634" endtime="20201029 12:45:06.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:06.669" endtime="20201029 12:45:06.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.665" endtime="20201029 12:45:06.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.662" endtime="20201029 12:45:06.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.158" endtime="20201029 12:45:06.694"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.157" endtime="20201029 12:45:06.694"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.717" endtime="20201029 12:45:06.739"></status>
</kw>
<msg timestamp="20201029 12:45:06.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.714" endtime="20201029 12:45:06.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:06.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:06.742" endtime="20201029 12:45:06.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.749" endtime="20201029 12:45:06.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.707" endtime="20201029 12:45:06.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.701" endtime="20201029 12:45:06.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:06.773" endtime="20201029 12:45:07.115"></status>
</kw>
<msg timestamp="20201029 12:45:07.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042044139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042111931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:06.769" endtime="20201029 12:45:07.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042044139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042111931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.124" endtime="20201029 12:45:07.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.144" endtime="20201029 12:45:07.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.762" endtime="20201029 12:45:07.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.757" endtime="20201029 12:45:07.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.161" level="INFO">${RESULT} = [{'diff': 6.779199999999708e-05}, {'diff': 6.82359999999993e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.843000000000127e-05}, {'diff': 6.80280000000047e-05}, {'diff': 6.756899999999649e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:07.152" endtime="20201029 12:45:07.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.173" level="INFO">${ACCURACY} = {'diff': [6.779199999999708e-05, 6.82359999999993e-05, 6.845800000000041e-05, 6.843000000000127e-05, 6.80280000000047e-05, 6.756899999999649e-05, 6.770799999999966e-05, 6.777799999999751e-05, 6.844500...</msg>
<status status="PASS" starttime="20201029 12:45:07.163" endtime="20201029 12:45:07.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.184" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.182" endtime="20201029 12:45:07.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.189" level="INFO">VALUE: [6.779199999999708e-05, 6.82359999999993e-05, 6.845800000000041e-05, 6.843000000000127e-05, 6.80280000000047e-05, 6.756899999999649e-05, 6.770799999999966e-05, 6.777799999999751e-05, 6.844500000000031e-05, 6.769499999999956e-05, 6.822199999999973e-05, 6.802799999999776e-05, 6.776399999999794e-05, 6.840299999999466e-05, 6.811100000000264e-05, 6.833400000000323e-05, 6.756900000000343e-05, 6.766599999999401e-05, 6.755499999999692e-05, 6.822199999999973e-05, 6.795899999999938e-05, 6.772199999999923e-05, 6.812499999999527e-05, 6.834700000000332e-05, 6.80280000000047e-05, 6.801400000000513e-05, 6.787499999999502e-05, 6.788900000000153e-05, 6.758400000000248e-05, 6.83480000000028e-05, 6.822200000000667e-05, 6.780500000000411e-05, 6.82359999999993e-05, 6.80559999999969e-05, 6.783299999999631e-05, 6.77909999999976e-05, 6.822199999999973e-05, 6.758299999999606e-05, 6.800000000000556e-05, 6.841699999999423e-05, 6.80280000000047e-05, 6.822199999999973e-05, 6.777799999999751e-05, 6.759700000000257e-05, 6.815199999999494e-05, 6.759800000000205e-05, 6.766700000000042e-05, 6.776399999999794e-05, 6.758299999999606e-05, 6.836099999999595e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.186" endtime="20201029 12:45:07.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.175" endtime="20201029 12:45:07.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.202" endtime="20201029 12:45:07.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.198" endtime="20201029 12:45:07.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.195" endtime="20201029 12:45:07.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.696" endtime="20201029 12:45:07.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:06.695" endtime="20201029 12:45:07.228"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.251" endtime="20201029 12:45:07.272"></status>
</kw>
<msg timestamp="20201029 12:45:07.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.248" endtime="20201029 12:45:07.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.276" endtime="20201029 12:45:07.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.282" endtime="20201029 12:45:07.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.240" endtime="20201029 12:45:07.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.234" endtime="20201029 12:45:07.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.317" endtime="20201029 12:45:07.687"></status>
</kw>
<msg timestamp="20201029 12:45:07.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042227028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.312" endtime="20201029 12:45:07.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042227028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042295986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.697" endtime="20201029 12:45:07.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.717" endtime="20201029 12:45:07.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.300" endtime="20201029 12:45:07.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.290" endtime="20201029 12:45:07.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:07.735" level="INFO">${RESULT} = [{'diff': 6.895800000000091e-05}, {'diff': 6.934699999999738e-05}, {'diff': 6.880500000000511e-05}, {'diff': 6.922200000000073e-05}, {'diff': 6.912499999999627e-05}, {'diff': 6.880599999999765e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:07.726" endtime="20201029 12:45:07.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:07.745" level="INFO">${ACCURACY} = {'diff': [6.895800000000091e-05, 6.934699999999738e-05, 6.880500000000511e-05, 6.922200000000073e-05, 6.912499999999627e-05, 6.880599999999765e-05, 6.933299999999781e-05, 6.91109999999967e-05, 6.91110...</msg>
<status status="PASS" starttime="20201029 12:45:07.737" endtime="20201029 12:45:07.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.757" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:45:07.754" endtime="20201029 12:45:07.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.763" level="INFO">VALUE: [6.895800000000091e-05, 6.934699999999738e-05, 6.880500000000511e-05, 6.922200000000073e-05, 6.912499999999627e-05, 6.880599999999765e-05, 6.933299999999781e-05, 6.91109999999967e-05, 6.911100000000364e-05, 6.92360000000003e-05, 6.920799999999422e-05, 6.944500000000131e-05, 6.945900000000088e-05, 6.876399999999894e-05, 6.890199999999569e-05, 6.886099999999645e-05, 6.924999999999987e-05, 6.933299999999781e-05, 6.891699999999473e-05, 6.901399999999919e-05, 6.888899999999559e-05, 6.947200000000098e-05, 6.855499999999792e-05, 6.877799999999851e-05, 6.915300000000235e-05, 6.85559999999974e-05, 6.92360000000003e-05, 6.938900000000303e-05, 6.85559999999974e-05, 6.941700000000217e-05, 6.934699999999738e-05, 6.913900000000278e-05, 6.905499999999842e-05, 6.936099999999695e-05, 6.92360000000003e-05, 6.945799999999447e-05, 6.895800000000091e-05, 6.89030000000021e-05, 6.879199999999808e-05, 6.899999999999962e-05, 6.916600000000245e-05, 6.888900000000253e-05, 6.865300000000185e-05, 6.901399999999919e-05, 6.92360000000003e-05, 6.8583000000004e-05, 6.894400000000134e-05, 6.930499999999867e-05, 6.901399999999919e-05, 6.922200000000073e-05]</msg>
<status status="PASS" starttime="20201029 12:45:07.759" endtime="20201029 12:45:07.764"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.747" endtime="20201029 12:45:07.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:07.776" endtime="20201029 12:45:07.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.771" endtime="20201029 12:45:07.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.769" endtime="20201029 12:45:07.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.230" endtime="20201029 12:45:07.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.228" endtime="20201029 12:45:07.802"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.827" endtime="20201029 12:45:07.850"></status>
</kw>
<msg timestamp="20201029 12:45:07.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.823" endtime="20201029 12:45:07.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:07.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:07.853" endtime="20201029 12:45:07.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.860" endtime="20201029 12:45:07.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.816" endtime="20201029 12:45:07.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.809" endtime="20201029 12:45:07.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:07.886" endtime="20201029 12:45:08.243"></status>
</kw>
<msg timestamp="20201029 12:45:08.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:07.882" endtime="20201029 12:45:08.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045950875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046021361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.252" endtime="20201029 12:45:08.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.271" endtime="20201029 12:45:08.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.874" endtime="20201029 12:45:08.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.869" endtime="20201029 12:45:08.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.288" level="INFO">${RESULT} = [{'diff': 7.048599999999461e-05}, {'diff': 6.955499999999892e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.991699999999573e-05}, {'diff': 6.998600000000105e-05}, {'diff': 7.012500000000421e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:08.279" endtime="20201029 12:45:08.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.298" level="INFO">${ACCURACY} = {'diff': [7.048599999999461e-05, 6.955499999999892e-05, 7.001400000000019e-05, 6.991699999999573e-05, 6.998600000000105e-05, 7.012500000000421e-05, 7.01109999999977e-05, 7.011100000000464e-05, 7.01390...</msg>
<status status="PASS" starttime="20201029 12:45:08.290" endtime="20201029 12:45:08.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.309" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.306" endtime="20201029 12:45:08.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.314" level="INFO">VALUE: [7.048599999999461e-05, 6.955499999999892e-05, 7.001400000000019e-05, 6.991699999999573e-05, 6.998600000000105e-05, 7.012500000000421e-05, 7.01109999999977e-05, 7.011100000000464e-05, 7.013900000000378e-05, 7.012499999999727e-05, 6.968100000000199e-05, 7.017999999999608e-05, 6.96109999999972e-05, 7.002799999999976e-05, 6.968000000000252e-05, 6.9583000000005e-05, 7.045800000000241e-05, 6.987499999999702e-05, 6.979199999999908e-05, 6.979199999999908e-05, 7.02360000000013e-05, 6.95559999999984e-05, 7.022200000000173e-05, 7.037499999999752e-05, 7.001300000000071e-05, 7.045899999999494e-05, 7.000000000000062e-05, 7.012499999999727e-05, 7.001400000000019e-05, 6.954099999999935e-05, 6.955500000000586e-05, 6.988899999999659e-05, 7.025000000000087e-05, 6.958299999999806e-05, 6.987500000000396e-05, 7.051399999999375e-05, 6.99030000000031e-05, 6.979199999999908e-05, 7.001400000000019e-05, 7.011199999999718e-05, 6.988899999999659e-05, 6.96109999999972e-05, 7.012499999999727e-05, 7.044400000000284e-05, 7.001400000000019e-05, 6.956899999999849e-05, 7.033299999999881e-05, 7.001400000000019e-05, 6.956899999999849e-05, 7.02910000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.311" endtime="20201029 12:45:08.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.299" endtime="20201029 12:45:08.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.332" endtime="20201029 12:45:08.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.322" endtime="20201029 12:45:08.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.320" endtime="20201029 12:45:08.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.804" endtime="20201029 12:45:08.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:07.803" endtime="20201029 12:45:08.357"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.380" endtime="20201029 12:45:08.401"></status>
</kw>
<msg timestamp="20201029 12:45:08.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.377" endtime="20201029 12:45:08.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.405" endtime="20201029 12:45:08.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.411" endtime="20201029 12:45:08.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.370" endtime="20201029 12:45:08.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.364" endtime="20201029 12:45:08.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.435" endtime="20201029 12:45:08.772"></status>
</kw>
<msg timestamp="20201029 12:45:08.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041406069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.431" endtime="20201029 12:45:08.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041334806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041406069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.782" endtime="20201029 12:45:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.800" endtime="20201029 12:45:08.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.424" endtime="20201029 12:45:08.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.419" endtime="20201029 12:45:08.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:08.818" level="INFO">${RESULT} = [{'diff': 7.126299999999502e-05}, {'diff': 7.100000000000162e-05}, {'diff': 7.090200000000463e-05}, {'diff': 7.09160000000042e-05}, {'diff': 7.145800000000341e-05}, {'diff': 7.063899999999734e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:08.809" endtime="20201029 12:45:08.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:08.828" level="INFO">${ACCURACY} = {'diff': [7.126299999999502e-05, 7.100000000000162e-05, 7.090200000000463e-05, 7.09160000000042e-05, 7.145800000000341e-05, 7.063899999999734e-05, 7.134699999999938e-05, 7.123599999999536e-05, 7.13469...</msg>
<status status="PASS" starttime="20201029 12:45:08.820" endtime="20201029 12:45:08.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.839" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:45:08.837" endtime="20201029 12:45:08.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.845" level="INFO">VALUE: [7.126299999999502e-05, 7.100000000000162e-05, 7.090200000000463e-05, 7.09160000000042e-05, 7.145800000000341e-05, 7.063899999999734e-05, 7.134699999999938e-05, 7.123599999999536e-05, 7.134699999999938e-05, 7.120799999999622e-05, 7.12360000000023e-05, 7.077800000000051e-05, 7.145900000000288e-05, 7.136199999999843e-05, 7.141700000000417e-05, 7.06109999999982e-05, 7.066699999999648e-05, 7.148600000000255e-05, 7.113899999999784e-05, 7.145799999999647e-05, 7.062499999999777e-05, 7.076400000000094e-05, 7.079200000000008e-05, 7.090299999999716e-05, 7.066700000000342e-05, 7.069499999999562e-05, 7.144499999999637e-05, 7.077800000000051e-05, 7.080600000000659e-05, 7.12230000000022e-05, 7.08480000000053e-05, 7.097300000000195e-05, 7.084699999999888e-05, 7.134699999999938e-05, 7.052700000000078e-05, 7.05689999999995e-05, 7.076400000000094e-05, 7.069500000000256e-05, 7.097200000000248e-05, 7.052800000000026e-05, 7.056999999999897e-05, 7.130600000000015e-05, 7.144499999999637e-05, 7.068099999999605e-05, 7.133399999999929e-05, 7.136099999999895e-05, 7.134699999999938e-05, 7.077700000000103e-05, 7.054100000000035e-05, 7.133299999999981e-05]</msg>
<status status="PASS" starttime="20201029 12:45:08.841" endtime="20201029 12:45:08.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.830" endtime="20201029 12:45:08.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:08.857" endtime="20201029 12:45:08.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.853" endtime="20201029 12:45:08.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.850" endtime="20201029 12:45:08.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.359" endtime="20201029 12:45:08.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.358" endtime="20201029 12:45:08.882"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.905" endtime="20201029 12:45:08.927"></status>
</kw>
<msg timestamp="20201029 12:45:08.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.902" endtime="20201029 12:45:08.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.930" endtime="20201029 12:45:08.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.936" endtime="20201029 12:45:08.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.894" endtime="20201029 12:45:08.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.889" endtime="20201029 12:45:08.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.960" endtime="20201029 12:45:09.298"></status>
</kw>
<msg timestamp="20201029 12:45:09.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:08.956" endtime="20201029 12:45:09.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041383667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:09.307" endtime="20201029 12:45:09.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.326" endtime="20201029 12:45:09.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.949" endtime="20201029 12:45:09.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.944" endtime="20201029 12:45:09.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.343" level="INFO">${RESULT} = [{'diff': 7.238899999999909e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.222200000000373e-05}, {'diff': 7.230599999999421e-05}, {'diff': 7.223599999999636e-05}, {'diff': 7.15560000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:09.334" endtime="20201029 12:45:09.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.354" level="INFO">${ACCURACY} = {'diff': [7.238899999999909e-05, 7.15560000000004e-05, 7.222200000000373e-05, 7.230599999999421e-05, 7.223599999999636e-05, 7.15560000000004e-05, 7.158300000000006e-05, 7.211199999999918e-05, 7.188799...</msg>
<status status="PASS" starttime="20201029 12:45:09.345" endtime="20201029 12:45:09.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.365" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.363" endtime="20201029 12:45:09.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.371" level="INFO">VALUE: [7.238899999999909e-05, 7.15560000000004e-05, 7.222200000000373e-05, 7.230599999999421e-05, 7.223599999999636e-05, 7.15560000000004e-05, 7.158300000000006e-05, 7.211199999999918e-05, 7.188799999999912e-05, 7.212499999999927e-05, 7.209700000000013e-05, 7.154099999999441e-05, 7.169400000000409e-05, 7.186099999999945e-05, 7.224999999999593e-05, 7.156999999999997e-05, 7.194499999999687e-05, 7.201400000000219e-05, 7.234799999999986e-05, 7.190299999999816e-05, 7.232000000000072e-05, 7.200000000000262e-05, 7.212499999999927e-05, 7.188800000000606e-05, 7.17910000000016e-05, 7.233300000000081e-05, 7.204100000000185e-05, 7.233299999999387e-05, 7.166700000000442e-05, 7.200000000000262e-05, 7.223599999999636e-05, 7.245900000000388e-05, 7.201400000000219e-05, 7.181900000000074e-05, 7.212499999999927e-05, 7.166700000000442e-05, 7.240200000000613e-05, 7.168000000000452e-05, 7.212499999999927e-05, 7.158300000000006e-05, 7.24439999999979e-05, 7.155500000000092e-05, 7.223599999999636e-05, 7.233300000000081e-05, 7.179199999999414e-05, 7.211100000000664e-05, 7.233300000000081e-05, 7.168099999999705e-05, 7.188899999999859e-05, 7.247299999999651e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.368" endtime="20201029 12:45:09.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.356" endtime="20201029 12:45:09.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.383" endtime="20201029 12:45:09.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.379" endtime="20201029 12:45:09.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.376" endtime="20201029 12:45:09.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.884" endtime="20201029 12:45:09.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.883" endtime="20201029 12:45:09.408"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.431" endtime="20201029 12:45:09.452"></status>
</kw>
<msg timestamp="20201029 12:45:09.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.428" endtime="20201029 12:45:09.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.455" endtime="20201029 12:45:09.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.462" endtime="20201029 12:45:09.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.420" endtime="20201029 12:45:09.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.415" endtime="20201029 12:45:09.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.485" endtime="20201029 12:45:09.825"></status>
</kw>
<msg timestamp="20201029 12:45:09.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041556611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04162975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:09.482" endtime="20201029 12:45:09.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041556611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04162975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:09.834" endtime="20201029 12:45:09.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.853" endtime="20201029 12:45:09.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.475" endtime="20201029 12:45:09.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.470" endtime="20201029 12:45:09.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.870" level="INFO">${RESULT} = [{'diff': 7.313899999999984e-05}, {'diff': 7.254200000000183e-05}, {'diff': 7.325000000000387e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.325000000000387e-05}, {'diff': 7.301399999999625e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:09.861" endtime="20201029 12:45:09.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:09.879" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.254200000000183e-05, 7.325000000000387e-05, 7.268099999999805e-05, 7.325000000000387e-05, 7.301399999999625e-05, 7.277800000000251e-05, 7.254199999999489e-05, 7.3125...</msg>
<status status="PASS" starttime="20201029 12:45:09.872" endtime="20201029 12:45:09.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.890" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:45:09.888" endtime="20201029 12:45:09.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.896" level="INFO">VALUE: [7.313899999999984e-05, 7.254200000000183e-05, 7.325000000000387e-05, 7.268099999999805e-05, 7.325000000000387e-05, 7.301399999999625e-05, 7.277800000000251e-05, 7.254199999999489e-05, 7.312500000000027e-05, 7.27910000000026e-05, 7.31110000000007e-05, 7.334700000000138e-05, 7.322199999999779e-05, 7.301400000000319e-05, 7.348600000000455e-05, 7.334700000000138e-05, 7.265299999999891e-05, 7.341699999999923e-05, 7.333400000000129e-05, 7.31110000000007e-05, 7.31110000000007e-05, 7.345899999999794e-05, 7.290199999999969e-05, 7.27910000000026e-05, 7.331900000000224e-05, 7.31110000000007e-05, 7.301400000000319e-05, 7.279199999999514e-05, 7.286099999999351e-05, 7.322199999999779e-05, 7.312500000000027e-05, 7.276400000000294e-05, 7.345899999999794e-05, 7.2763999999996e-05, 7.344500000000531e-05, 7.313800000000037e-05, 7.287500000000002e-05, 7.256899999999455e-05, 7.277700000000303e-05, 7.30969999999942e-05, 7.323599999999736e-05, 7.334700000000138e-05, 7.34439999999989e-05, 7.25690000000015e-05, 7.255599999999446e-05, 7.325000000000387e-05, 7.25560000000014e-05, 7.322199999999779e-05, 7.343100000000574e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.893" endtime="20201029 12:45:09.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.881" endtime="20201029 12:45:09.899"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.908" endtime="20201029 12:45:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.904" endtime="20201029 12:45:09.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.901" endtime="20201029 12:45:09.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.410" endtime="20201029 12:45:09.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.409" endtime="20201029 12:45:09.934"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.956" endtime="20201029 12:45:09.980"></status>
</kw>
<msg timestamp="20201029 12:45:09.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.953" endtime="20201029 12:45:09.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.984" endtime="20201029 12:45:09.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.990" endtime="20201029 12:45:09.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.946" endtime="20201029 12:45:09.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.940" endtime="20201029 12:45:09.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.014" endtime="20201029 12:45:10.354"></status>
</kw>
<msg timestamp="20201029 12:45:10.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043930319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.011" endtime="20201029 12:45:10.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043930319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.363" endtime="20201029 12:45:10.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.381" endtime="20201029 12:45:10.385"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.003" endtime="20201029 12:45:10.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.998" endtime="20201029 12:45:10.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.399" level="INFO">${RESULT} = [{'diff': 7.358300000000206e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.367999999999958e-05}, {'diff': 7.387500000000102e-05}, {'diff': 7.42360000000053e-05}, {'diff': 7.354099999999641e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:10.390" endtime="20201029 12:45:10.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.408" level="INFO">${ACCURACY} = {'diff': [7.358300000000206e-05, 7.412500000000127e-05, 7.367999999999958e-05, 7.387500000000102e-05, 7.42360000000053e-05, 7.354099999999641e-05, 7.391699999999973e-05, 7.401399999999725e-05, 7.41250...</msg>
<status status="PASS" starttime="20201029 12:45:10.401" endtime="20201029 12:45:10.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.419" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.417" endtime="20201029 12:45:10.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.424" level="INFO">VALUE: [7.358300000000206e-05, 7.412500000000127e-05, 7.367999999999958e-05, 7.387500000000102e-05, 7.42360000000053e-05, 7.354099999999641e-05, 7.391699999999973e-05, 7.401399999999725e-05, 7.412500000000127e-05, 7.380600000000265e-05, 7.357000000000197e-05, 7.372200000000523e-05, 7.368099999999905e-05, 7.400000000000462e-05, 7.392999999999983e-05, 7.390300000000016e-05, 7.420899999999869e-05, 7.447199999999904e-05, 7.354100000000335e-05, 7.355499999999598e-05, 7.355499999999598e-05, 7.422199999999879e-05, 7.387500000000102e-05, 7.401399999999725e-05, 7.44309999999998e-05, 7.447299999999851e-05, 7.366699999999948e-05, 7.377800000000351e-05, 7.432000000000272e-05, 7.355599999999546e-05, 7.412500000000127e-05, 7.422200000000573e-05, 7.372199999999829e-05, 7.354099999999641e-05, 7.37769999999971e-05, 7.391699999999973e-05, 7.422199999999879e-05, 7.366699999999948e-05, 7.373699999999733e-05, 7.35839999999946e-05, 7.433300000000281e-05, 7.368099999999905e-05, 7.433400000000229e-05, 7.355599999999546e-05, 7.380500000000317e-05, 7.387500000000102e-05, 7.44439999999999e-05, 7.366600000000001e-05, 7.373599999999786e-05, 7.366600000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:45:10.421" endtime="20201029 12:45:10.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.410" endtime="20201029 12:45:10.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.439" endtime="20201029 12:45:10.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.433" endtime="20201029 12:45:10.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.430" endtime="20201029 12:45:10.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.936" endtime="20201029 12:45:10.463"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.934" endtime="20201029 12:45:10.464"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.486" endtime="20201029 12:45:10.508"></status>
</kw>
<msg timestamp="20201029 12:45:10.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.483" endtime="20201029 12:45:10.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.511" endtime="20201029 12:45:10.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.517" endtime="20201029 12:45:10.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.476" endtime="20201029 12:45:10.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.470" endtime="20201029 12:45:10.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.541" endtime="20201029 12:45:10.857"></status>
</kw>
<msg timestamp="20201029 12:45:10.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041240472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041315292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.538" endtime="20201029 12:45:10.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041240472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041315292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:10.867" endtime="20201029 12:45:10.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.885" endtime="20201029 12:45:10.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.530" endtime="20201029 12:45:10.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.525" endtime="20201029 12:45:10.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:10.902" level="INFO">${RESULT} = [{'diff': 7.482000000000322e-05}, {'diff': 7.457000000000297e-05}, {'diff': 7.522199999999979e-05}, {'diff': 7.455599999999646e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.465300000000091e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:10.894" endtime="20201029 12:45:10.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:10.913" level="INFO">${ACCURACY} = {'diff': [7.482000000000322e-05, 7.457000000000297e-05, 7.522199999999979e-05, 7.455599999999646e-05, 7.488900000000159e-05, 7.465300000000091e-05, 7.52910000000051e-05, 7.490200000000169e-05, 7.51110...</msg>
<status status="PASS" starttime="20201029 12:45:10.905" endtime="20201029 12:45:10.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.924" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:45:10.922" endtime="20201029 12:45:10.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:10.929" level="INFO">VALUE: [7.482000000000322e-05, 7.457000000000297e-05, 7.522199999999979e-05, 7.455599999999646e-05, 7.488900000000159e-05, 7.465300000000091e-05, 7.52910000000051e-05, 7.490200000000169e-05, 7.51110000000027e-05, 7.49440000000004e-05, 7.499999999999868e-05, 7.476400000000494e-05, 7.490300000000116e-05, 7.545800000000047e-05, 7.512499999999533e-05, 7.490300000000116e-05, 7.456999999999603e-05, 7.501399999999825e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.495799999999997e-05, 7.506899999999705e-05, 7.547200000000004e-05, 7.516699999999404e-05, 7.54440000000009e-05, 7.523599999999936e-05, 7.51110000000027e-05, 7.54440000000009e-05, 7.547200000000004e-05, 7.468100000000005e-05, 7.4763999999998e-05, 7.545899999999994e-05, 7.487500000000202e-05, 7.545800000000047e-05, 7.456899999999655e-05, 7.488800000000212e-05, 7.480499999999723e-05, 7.484800000000236e-05, 7.498599999999911e-05, 7.512500000000227e-05, 7.481999999999628e-05, 7.499999999999868e-05, 7.466700000000048e-05, 7.51110000000027e-05, 7.468100000000005e-05, 7.463900000000134e-05, 7.524999999999893e-05, 7.480499999999723e-05, 7.501299999999878e-05, 7.533299999999687e-05]</msg>
<status status="PASS" starttime="20201029 12:45:10.926" endtime="20201029 12:45:10.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.915" endtime="20201029 12:45:10.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:10.942" endtime="20201029 12:45:10.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.938" endtime="20201029 12:45:10.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.935" endtime="20201029 12:45:10.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.466" endtime="20201029 12:45:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.464" endtime="20201029 12:45:10.967"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:10.990" endtime="20201029 12:45:11.012"></status>
</kw>
<msg timestamp="20201029 12:45:11.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:10.987" endtime="20201029 12:45:11.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.015" endtime="20201029 12:45:11.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.021" endtime="20201029 12:45:11.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.979" endtime="20201029 12:45:11.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.974" endtime="20201029 12:45:11.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.045" endtime="20201029 12:45:11.382"></status>
</kw>
<msg timestamp="20201029 12:45:11.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041224319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.042" endtime="20201029 12:45:11.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041224319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.392" endtime="20201029 12:45:11.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.411" endtime="20201029 12:45:11.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.034" endtime="20201029 12:45:11.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.030" endtime="20201029 12:45:11.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.428" level="INFO">${RESULT} = [{'diff': 7.569400000000115e-05}, {'diff': 7.554100000000535e-05}, {'diff': 7.566599999999507e-05}, {'diff': 7.612500000000327e-05}, {'diff': 7.604200000000533e-05}, {'diff': 7.552799999999832e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:11.419" endtime="20201029 12:45:11.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.439" level="INFO">${ACCURACY} = {'diff': [7.569400000000115e-05, 7.554100000000535e-05, 7.566599999999507e-05, 7.612500000000327e-05, 7.604200000000533e-05, 7.552799999999832e-05, 7.633299999999787e-05, 7.612499999999633e-05, 7.6236...</msg>
<status status="PASS" starttime="20201029 12:45:11.430" endtime="20201029 12:45:11.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.450" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.448" endtime="20201029 12:45:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.456" level="INFO">VALUE: [7.569400000000115e-05, 7.554100000000535e-05, 7.566599999999507e-05, 7.612500000000327e-05, 7.604200000000533e-05, 7.552799999999832e-05, 7.633299999999787e-05, 7.612499999999633e-05, 7.623600000000036e-05, 7.612500000000327e-05, 7.631999999999778e-05, 7.623600000000036e-05, 7.612500000000327e-05, 7.605499999999848e-05, 7.613900000000284e-05, 7.61110000000037e-05, 7.574999999999943e-05, 7.590300000000216e-05, 7.583299999999737e-05, 7.58890000000026e-05, 7.645799999999453e-05, 7.650000000000018e-05, 7.568100000000105e-05, 7.55560000000044e-05, 7.602799999999882e-05, 7.602699999999935e-05, 7.622300000000026e-05, 7.606899999999805e-05, 7.579099999999866e-05, 7.590199999999575e-05, 7.556899999999755e-05, 7.573599999999986e-05, 7.5763999999999e-05, 7.61110000000037e-05, 7.620799999999428e-05, 7.633299999999787e-05, 7.601399999999925e-05, 7.573599999999986e-05, 7.633400000000429e-05, 7.55839999999966e-05, 7.551299999999928e-05, 7.64310000000018e-05, 7.562500000000277e-05, 7.579099999999866e-05, 7.590199999999575e-05, 7.583300000000431e-05, 7.58890000000026e-05, 7.619400000000165e-05, 7.64440000000019e-05, 7.600000000000662e-05]</msg>
<status status="PASS" starttime="20201029 12:45:11.453" endtime="20201029 12:45:11.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.441" endtime="20201029 12:45:11.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:11.468" endtime="20201029 12:45:11.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.464" endtime="20201029 12:45:11.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.461" endtime="20201029 12:45:11.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.969" endtime="20201029 12:45:11.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:10.968" endtime="20201029 12:45:11.493"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.516" endtime="20201029 12:45:11.538"></status>
</kw>
<msg timestamp="20201029 12:45:11.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.513" endtime="20201029 12:45:11.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:11.541" endtime="20201029 12:45:11.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.547" endtime="20201029 12:45:11.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.505" endtime="20201029 12:45:11.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.500" endtime="20201029 12:45:11.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.571" endtime="20201029 12:45:11.909"></status>
</kw>
<msg timestamp="20201029 12:45:11.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.567" endtime="20201029 12:45:11.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041536514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:11.919" endtime="20201029 12:45:11.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:11.938" endtime="20201029 12:45:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.560" endtime="20201029 12:45:11.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.555" endtime="20201029 12:45:11.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:11.955" level="INFO">${RESULT} = [{'diff': 7.687500000000402e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.6764e-05}, {'diff': 7.668099999999511e-05}, {'diff': 7.745800000000247e-05}, {'diff': 7.65690000000055e-05}, {'diff': 7.67...</msg>
<status status="PASS" starttime="20201029 12:45:11.946" endtime="20201029 12:45:11.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:11.964" level="INFO">${ACCURACY} = {'diff': [7.687500000000402e-05, 7.702799999999982e-05, 7.6764e-05, 7.668099999999511e-05, 7.745800000000247e-05, 7.65690000000055e-05, 7.679099999999967e-05, 7.712499999999733e-05, 7.722200000000179e...</msg>
<status status="PASS" starttime="20201029 12:45:11.957" endtime="20201029 12:45:11.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.975" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:45:11.973" endtime="20201029 12:45:11.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:11.980" level="INFO">VALUE: [7.687500000000402e-05, 7.702799999999982e-05, 7.6764e-05, 7.668099999999511e-05, 7.745800000000247e-05, 7.65690000000055e-05, 7.679099999999967e-05, 7.712499999999733e-05, 7.722200000000179e-05, 7.723600000000136e-05, 7.712500000000427e-05, 7.687499999999708e-05, 7.69589999999945e-05, 7.713900000000384e-05, 7.677799999999957e-05, 7.677799999999957e-05, 7.709799999999767e-05, 7.716599999999657e-05, 7.702700000000035e-05, 7.701300000000078e-05, 7.655499999999898e-05, 7.723600000000136e-05, 7.734699999999844e-05, 7.712500000000427e-05, 7.694500000000187e-05, 7.711099999999776e-05, 7.691700000000273e-05, 7.702799999999982e-05, 7.722200000000179e-05, 7.668100000000205e-05, 7.745900000000194e-05, 7.71110000000047e-05, 7.712499999999733e-05, 7.700000000000068e-05, 7.667999999999564e-05, 7.745799999999553e-05, 7.734699999999844e-05, 7.677799999999957e-05, 7.71389999999969e-05, 7.744399999999596e-05, 7.711099999999776e-05, 7.651399999999975e-05, 7.677799999999957e-05, 7.658400000000454e-05, 7.677799999999957e-05, 7.654199999999889e-05, 7.668100000000205e-05, 7.679099999999967e-05, 7.688799999999718e-05, 7.668000000000258e-05]</msg>
<status status="PASS" starttime="20201029 12:45:11.977" endtime="20201029 12:45:11.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.966" endtime="20201029 12:45:11.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.000" endtime="20201029 12:45:12.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.995" endtime="20201029 12:45:12.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.993" endtime="20201029 12:45:12.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.495" endtime="20201029 12:45:12.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:11.494" endtime="20201029 12:45:12.026"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.051" endtime="20201029 12:45:12.076"></status>
</kw>
<msg timestamp="20201029 12:45:12.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.047" endtime="20201029 12:45:12.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.079" endtime="20201029 12:45:12.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.086" endtime="20201029 12:45:12.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.040" endtime="20201029 12:45:12.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.033" endtime="20201029 12:45:12.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.111" endtime="20201029 12:45:12.466"></status>
</kw>
<msg timestamp="20201029 12:45:12.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0464945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046572736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:12.107" endtime="20201029 12:45:12.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0464945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046572736, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:12.476" endtime="20201029 12:45:12.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.494" endtime="20201029 12:45:12.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.100" endtime="20201029 12:45:12.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.095" endtime="20201029 12:45:12.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:12.511" level="INFO">${RESULT} = [{'diff': 7.823600000000236e-05}, {'diff': 7.815299999999747e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.790299999999722e-05}, {'diff': 7.845900000000294e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:12.503" endtime="20201029 12:45:12.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:12.521" level="INFO">${ACCURACY} = {'diff': [7.823600000000236e-05, 7.815299999999747e-05, 7.827800000000107e-05, 7.834699999999944e-05, 7.790299999999722e-05, 7.845900000000294e-05, 7.843099999999686e-05, 7.809799999999867e-05, 7.8110...</msg>
<status status="PASS" starttime="20201029 12:45:12.514" endtime="20201029 12:45:12.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.532" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:45:12.530" endtime="20201029 12:45:12.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.538" level="INFO">VALUE: [7.823600000000236e-05, 7.815299999999747e-05, 7.827800000000107e-05, 7.834699999999944e-05, 7.790299999999722e-05, 7.845900000000294e-05, 7.843099999999686e-05, 7.809799999999867e-05, 7.811099999999876e-05, 7.792999999999689e-05, 7.819400000000365e-05, 7.755499999999999e-05, 7.754100000000042e-05, 7.769399999999621e-05, 7.812499999999833e-05, 7.845799999999653e-05, 7.844500000000337e-05, 7.780599999999971e-05, 7.801400000000125e-05, 7.777800000000057e-05, 7.843099999999686e-05, 7.801299999999484e-05, 7.779100000000067e-05, 7.773600000000186e-05, 7.788899999999765e-05, 7.75839999999986e-05, 7.779200000000014e-05, 7.844399999999696e-05, 7.766699999999654e-05, 7.788899999999765e-05, 7.800000000000168e-05, 7.811099999999876e-05, 7.766700000000348e-05, 7.8458999999996e-05, 7.777800000000057e-05, 7.766599999999707e-05, 7.75690000000065e-05, 7.75969999999987e-05, 7.822199999999585e-05, 7.838899999999815e-05, 7.766700000000348e-05, 7.802800000000082e-05, 7.851400000000175e-05, 7.78890000000046e-05, 7.784699999999894e-05, 7.756999999999903e-05, 7.840300000000466e-05, 7.790300000000416e-05, 7.80969999999992e-05, 7.7764000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:45:12.535" endtime="20201029 12:45:12.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.523" endtime="20201029 12:45:12.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:12.552" endtime="20201029 12:45:12.573"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.546" endtime="20201029 12:45:12.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.543" endtime="20201029 12:45:12.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.029" endtime="20201029 12:45:12.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.027" endtime="20201029 12:45:12.577"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.599" endtime="20201029 12:45:12.620"></status>
</kw>
<msg timestamp="20201029 12:45:12.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.596" endtime="20201029 12:45:12.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.624" endtime="20201029 12:45:12.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.630" endtime="20201029 12:45:12.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.589" endtime="20201029 12:45:12.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.583" endtime="20201029 12:45:12.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.655" endtime="20201029 12:45:13.000"></status>
</kw>
<msg timestamp="20201029 12:45:13.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041287097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:12.651" endtime="20201029 12:45:13.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041287097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.010" endtime="20201029 12:45:13.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.028" endtime="20201029 12:45:13.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.643" endtime="20201029 12:45:13.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.638" endtime="20201029 12:45:13.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.046" level="INFO">${RESULT} = [{'diff': 7.851400000000175e-05}, {'diff': 7.944399999999796e-05}, {'diff': 7.945799999999753e-05}, {'diff': 7.879200000000114e-05}, {'diff': 7.877800000000157e-05}, {'diff': 7.85839999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:13.037" endtime="20201029 12:45:13.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.057" level="INFO">${ACCURACY} = {'diff': [7.851400000000175e-05, 7.944399999999796e-05, 7.945799999999753e-05, 7.879200000000114e-05, 7.877800000000157e-05, 7.85839999999996e-05, 7.86389999999984e-05, 7.879200000000114e-05, 7.858300...</msg>
<status status="PASS" starttime="20201029 12:45:13.048" endtime="20201029 12:45:13.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.068" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.065" endtime="20201029 12:45:13.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.073" level="INFO">VALUE: [7.851400000000175e-05, 7.944399999999796e-05, 7.945799999999753e-05, 7.879200000000114e-05, 7.877800000000157e-05, 7.85839999999996e-05, 7.86389999999984e-05, 7.879200000000114e-05, 7.858300000000012e-05, 7.865300000000491e-05, 7.872200000000329e-05, 7.93890000000061e-05, 7.931899999999437e-05, 7.912500000000627e-05, 7.947200000000404e-05, 7.868099999999711e-05, 7.94719999999971e-05, 7.877800000000157e-05, 7.877799999999463e-05, 7.936100000000001e-05, 7.855600000000046e-05, 7.88890000000056e-05, 7.906899999999412e-05, 7.879100000000167e-05, 7.866599999999807e-05, 7.901400000000225e-05, 7.851400000000175e-05, 7.945799999999753e-05, 7.856900000000056e-05, 7.945800000000447e-05, 7.866699999999754e-05, 7.923599999999642e-05, 7.857000000000003e-05, 7.887500000000602e-05, 7.85969999999997e-05, 7.898699999999564e-05, 7.912499999999933e-05, 7.919500000000412e-05, 7.890300000000516e-05, 7.922199999999685e-05, 7.924999999999599e-05, 7.879200000000114e-05, 7.93190000000013e-05, 7.876399999999506e-05, 7.944499999999743e-05, 7.933300000000088e-05, 7.944499999999743e-05, 7.868099999999711e-05, 7.890299999999822e-05, 7.887499999999908e-05]</msg>
<status status="PASS" starttime="20201029 12:45:13.070" endtime="20201029 12:45:13.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.058" endtime="20201029 12:45:13.076"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.086" endtime="20201029 12:45:13.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.081" endtime="20201029 12:45:13.109"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.079" endtime="20201029 12:45:13.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.579" endtime="20201029 12:45:13.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.578" endtime="20201029 12:45:13.111"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.134" endtime="20201029 12:45:13.155"></status>
</kw>
<msg timestamp="20201029 12:45:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.130" endtime="20201029 12:45:13.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.159" endtime="20201029 12:45:13.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.165" endtime="20201029 12:45:13.169"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.123" endtime="20201029 12:45:13.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.117" endtime="20201029 12:45:13.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.188" endtime="20201029 12:45:13.527"></status>
</kw>
<msg timestamp="20201029 12:45:13.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041525153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.185" endtime="20201029 12:45:13.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041525153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.536" endtime="20201029 12:45:13.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.554" endtime="20201029 12:45:13.558"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.178" endtime="20201029 12:45:13.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.173" endtime="20201029 12:45:13.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:13.571" level="INFO">${RESULT} = [{'diff': 7.958300000000113e-05}, {'diff': 7.990299999999922e-05}, {'diff': 8.034700000000145e-05}, {'diff': 8.031899999999537e-05}, {'diff': 8.023599999999742e-05}, {'diff': 7.998599999999717e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:13.563" endtime="20201029 12:45:13.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:13.587" level="INFO">${ACCURACY} = {'diff': [7.958300000000113e-05, 7.990299999999922e-05, 8.034700000000145e-05, 8.031899999999537e-05, 8.023599999999742e-05, 7.998599999999717e-05, 8.012500000000033e-05, 8.034800000000092e-05, 8.0347...</msg>
<status status="PASS" starttime="20201029 12:45:13.574" endtime="20201029 12:45:13.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.598" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:45:13.595" endtime="20201029 12:45:13.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.603" level="INFO">VALUE: [7.958300000000113e-05, 7.990299999999922e-05, 8.034700000000145e-05, 8.031899999999537e-05, 8.023599999999742e-05, 7.998599999999717e-05, 8.012500000000033e-05, 8.034800000000092e-05, 8.034700000000145e-05, 7.988899999999965e-05, 8.03469999999945e-05, 7.961100000000026e-05, 7.990299999999922e-05, 7.993099999999836e-05, 7.958299999999419e-05, 7.986100000000051e-05, 8.020799999999828e-05, 8.045800000000547e-05, 7.973599999999692e-05, 7.979200000000214e-05, 8.033400000000135e-05, 8.044499999999843e-05, 8.037500000000058e-05, 7.984700000000094e-05, 7.96519999999995e-05, 8.022199999999785e-05, 7.977799999999563e-05, 8.034700000000145e-05, 7.97369999999964e-05, 8.020799999999828e-05, 8.016600000000651e-05, 7.968099999999811e-05, 7.983299999999444e-05, 7.999999999999674e-05, 7.988800000000018e-05, 7.968099999999811e-05, 7.967999999999864e-05, 7.966600000000601e-05, 7.983299999999444e-05, 8.044399999999896e-05, 8.008300000000163e-05, 8.033300000000188e-05, 8.011100000000076e-05, 7.954200000000189e-05, 7.96389999999994e-05, 7.957000000000103e-05, 8.022199999999785e-05, 8.012500000000033e-05, 7.991599999999932e-05, 7.966700000000548e-05]</msg>
<status status="PASS" starttime="20201029 12:45:13.600" endtime="20201029 12:45:13.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.589" endtime="20201029 12:45:13.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:13.616" endtime="20201029 12:45:13.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.611" endtime="20201029 12:45:13.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.609" endtime="20201029 12:45:13.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.113" endtime="20201029 12:45:13.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.112" endtime="20201029 12:45:13.640"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.663" endtime="20201029 12:45:13.684"></status>
</kw>
<msg timestamp="20201029 12:45:13.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.660" endtime="20201029 12:45:13.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:13.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:13.688" endtime="20201029 12:45:13.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.694" endtime="20201029 12:45:13.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.653" endtime="20201029 12:45:13.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.647" endtime="20201029 12:45:13.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:13.718" endtime="20201029 12:45:14.057"></status>
</kw>
<msg timestamp="20201029 12:45:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041312708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:13.714" endtime="20201029 12:45:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041312708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.066" endtime="20201029 12:45:14.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.084" endtime="20201029 12:45:14.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.707" endtime="20201029 12:45:14.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.702" endtime="20201029 12:45:14.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:14.102" level="INFO">${RESULT} = [{'diff': 8.105600000000296e-05}, {'diff': 8.14170000000003e-05}, {'diff': 8.14719999999991e-05}, {'diff': 8.131999999999584e-05}, {'diff': 8.052799999999638e-05}, {'diff': 8.077799999999663e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:14.093" endtime="20201029 12:45:14.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:14.111" level="INFO">${ACCURACY} = {'diff': [8.105600000000296e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.131999999999584e-05, 8.052799999999638e-05, 8.077799999999663e-05, 8.108299999999569e-05, 8.07919999999962e-05, 8.0735999...</msg>
<status status="PASS" starttime="20201029 12:45:14.104" endtime="20201029 12:45:14.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.122" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:45:14.120" endtime="20201029 12:45:14.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.127" level="INFO">VALUE: [8.105600000000296e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.131999999999584e-05, 8.052799999999638e-05, 8.077799999999663e-05, 8.108299999999569e-05, 8.07919999999962e-05, 8.073599999999792e-05, 8.092999999999989e-05, 8.066600000000007e-05, 8.111100000000177e-05, 8.056900000000256e-05, 8.127799999999713e-05, 8.079200000000314e-05, 8.122199999999885e-05, 8.055600000000246e-05, 8.144499999999943e-05, 8.11390000000009e-05, 8.055600000000246e-05, 8.077800000000357e-05, 8.124999999999799e-05, 8.13469999999955e-05, 8.099999999999774e-05, 8.061100000000126e-05, 8.090300000000022e-05, 8.122200000000579e-05, 8.145799999999953e-05, 8.055600000000246e-05, 8.083300000000238e-05, 8.057000000000203e-05, 8.148599999999867e-05, 8.111099999999483e-05, 8.068099999999911e-05, 8.116599999999363e-05, 8.13190000000033e-05, 8.122199999999885e-05, 8.133300000000288e-05, 8.098599999999817e-05, 8.099999999999774e-05, 8.10970000000022e-05, 8.111100000000177e-05, 8.111100000000177e-05, 8.10970000000022e-05, 8.077799999999663e-05, 8.104200000000339e-05, 8.123599999999842e-05, 8.077799999999663e-05, 8.109800000000167e-05, 8.133300000000288e-05]</msg>
<status status="PASS" starttime="20201029 12:45:14.124" endtime="20201029 12:45:14.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.113" endtime="20201029 12:45:14.131"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.140" endtime="20201029 12:45:14.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.136" endtime="20201029 12:45:14.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.133" endtime="20201029 12:45:14.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.643" endtime="20201029 12:45:14.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:13.641" endtime="20201029 12:45:14.165"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.188" endtime="20201029 12:45:14.211"></status>
</kw>
<msg timestamp="20201029 12:45:14.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.185" endtime="20201029 12:45:14.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.215" endtime="20201029 12:45:14.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.221" endtime="20201029 12:45:14.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.177" endtime="20201029 12:45:14.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.172" endtime="20201029 12:45:14.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.245" endtime="20201029 12:45:14.584"></status>
</kw>
<msg timestamp="20201029 12:45:14.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043036833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043118847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.241" endtime="20201029 12:45:14.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043036833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043118847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.593" endtime="20201029 12:45:14.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.612" endtime="20201029 12:45:14.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.234" endtime="20201029 12:45:14.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.229" endtime="20201029 12:45:14.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:14.629" level="INFO">${RESULT} = [{'diff': 8.201400000000525e-05}, {'diff': 8.188900000000165e-05}, {'diff': 8.21390000000019e-05}, {'diff': 8.199999999999874e-05}, {'diff': 8.218100000000061e-05}, {'diff': 8.157000000000303e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:14.620" endtime="20201029 12:45:14.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:14.638" level="INFO">${ACCURACY} = {'diff': [8.201400000000525e-05, 8.188900000000165e-05, 8.21390000000019e-05, 8.199999999999874e-05, 8.218100000000061e-05, 8.157000000000303e-05, 8.213899999999497e-05, 8.166700000000054e-05, 8.20139...</msg>
<status status="PASS" starttime="20201029 12:45:14.631" endtime="20201029 12:45:14.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.649" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:45:14.647" endtime="20201029 12:45:14.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.655" level="INFO">VALUE: [8.201400000000525e-05, 8.188900000000165e-05, 8.21390000000019e-05, 8.199999999999874e-05, 8.218100000000061e-05, 8.157000000000303e-05, 8.213899999999497e-05, 8.166700000000054e-05, 8.201399999999831e-05, 8.234700000000345e-05, 8.151300000000528e-05, 8.177699999999816e-05, 8.169400000000021e-05, 8.156899999999662e-05, 8.199999999999874e-05, 8.168100000000011e-05, 8.234700000000345e-05, 8.2459e-05, 8.2459e-05, 8.21249999999954e-05, 8.243100000000086e-05, 8.157000000000303e-05, 8.223599999999942e-05, 8.156899999999662e-05, 8.209699999999626e-05, 8.177799999999763e-05, 8.231899999999737e-05, 8.156900000000356e-05, 8.17919999999972e-05, 8.172199999999935e-05, 8.201400000000525e-05, 8.2459e-05, 8.179200000000414e-05, 8.156999999999609e-05, 8.190300000000122e-05, 8.219400000000071e-05, 8.223599999999942e-05, 8.21390000000019e-05, 8.223599999999942e-05, 8.227799999999813e-05, 8.21390000000019e-05, 8.165300000000097e-05, 8.229099999999823e-05, 8.219500000000018e-05, 8.188899999999472e-05, 8.22369999999989e-05, 8.233399999999641e-05, 8.158300000000313e-05, 8.212500000000234e-05, 8.212500000000234e-05]</msg>
<status status="PASS" starttime="20201029 12:45:14.651" endtime="20201029 12:45:14.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.640" endtime="20201029 12:45:14.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:14.669" endtime="20201029 12:45:14.690"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.663" endtime="20201029 12:45:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.660" endtime="20201029 12:45:14.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.167" endtime="20201029 12:45:14.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.166" endtime="20201029 12:45:14.694"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.716" endtime="20201029 12:45:14.738"></status>
</kw>
<msg timestamp="20201029 12:45:14.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.713" endtime="20201029 12:45:14.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:14.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:14.741" endtime="20201029 12:45:14.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.748" endtime="20201029 12:45:14.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.706" endtime="20201029 12:45:14.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.700" endtime="20201029 12:45:14.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:14.771" endtime="20201029 12:45:15.109"></status>
</kw>
<msg timestamp="20201029 12:45:15.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041184194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:14.768" endtime="20201029 12:45:15.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041101167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041184194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.118" endtime="20201029 12:45:15.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.136" endtime="20201029 12:45:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.760" endtime="20201029 12:45:15.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.756" endtime="20201029 12:45:15.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.153" level="INFO">${RESULT} = [{'diff': 8.302699999999941e-05}, {'diff': 8.288800000000318e-05}, {'diff': 8.266600000000207e-05}, {'diff': 8.254100000000542e-05}, {'diff': 8.318000000000214e-05}, {'diff': 8.344400000000196e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:15.145" endtime="20201029 12:45:15.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.164" level="INFO">${ACCURACY} = {'diff': [8.302699999999941e-05, 8.288800000000318e-05, 8.266600000000207e-05, 8.254100000000542e-05, 8.318000000000214e-05, 8.344400000000196e-05, 8.299999999999974e-05, 8.294500000000093e-05, 8.3291...</msg>
<status status="PASS" starttime="20201029 12:45:15.156" endtime="20201029 12:45:15.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.175" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.173" endtime="20201029 12:45:15.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.181" level="INFO">VALUE: [8.302699999999941e-05, 8.288800000000318e-05, 8.266600000000207e-05, 8.254100000000542e-05, 8.318000000000214e-05, 8.344400000000196e-05, 8.299999999999974e-05, 8.294500000000093e-05, 8.32919999999987e-05, 8.29720000000006e-05, 8.323600000000042e-05, 8.276399999999906e-05, 8.269400000000121e-05, 8.323600000000042e-05, 8.345800000000153e-05, 8.255500000000499e-05, 8.311100000000377e-05, 8.306899999999812e-05, 8.299999999999974e-05, 8.327799999999913e-05, 8.290300000000222e-05, 8.333300000000488e-05, 8.255600000000446e-05, 8.268100000000111e-05, 8.344500000000143e-05, 8.301399999999931e-05, 8.319400000000171e-05, 8.28190000000048e-05, 8.287499999999615e-05, 8.266700000000154e-05, 8.27919999999982e-05, 8.288899999999572e-05, 8.32919999999987e-05, 8.301399999999931e-05, 8.301400000000625e-05, 8.272199999999341e-05, 8.26390000000024e-05, 8.313800000000343e-05, 8.301299999999984e-05, 8.290200000000275e-05, 8.301399999999931e-05, 8.343000000000239e-05, 8.345799999999459e-05, 8.323600000000042e-05, 8.287500000000309e-05, 8.350000000000024e-05, 8.280599999999777e-05, 8.261100000000327e-05, 8.34449999999945e-05, 8.3459000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:45:15.177" endtime="20201029 12:45:15.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.166" endtime="20201029 12:45:15.184"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.193" endtime="20201029 12:45:15.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.189" endtime="20201029 12:45:15.216"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.186" endtime="20201029 12:45:15.217"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.696" endtime="20201029 12:45:15.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:14.694" endtime="20201029 12:45:15.218"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.241" endtime="20201029 12:45:15.263"></status>
</kw>
<msg timestamp="20201029 12:45:15.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.238" endtime="20201029 12:45:15.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.267" endtime="20201029 12:45:15.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.273" endtime="20201029 12:45:15.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.230" endtime="20201029 12:45:15.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.225" endtime="20201029 12:45:15.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.297" endtime="20201029 12:45:15.635"></status>
</kw>
<msg timestamp="20201029 12:45:15.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041535222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041619694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.293" endtime="20201029 12:45:15.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041535222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041619694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:15.645" endtime="20201029 12:45:15.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.663" endtime="20201029 12:45:15.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.286" endtime="20201029 12:45:15.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.281" endtime="20201029 12:45:15.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:15.680" level="INFO">${RESULT} = [{'diff': 8.44720000000021e-05}, {'diff': 8.43469999999985e-05}, {'diff': 8.379099999999973e-05}, {'diff': 8.368000000000264e-05}, {'diff': 8.37919999999992e-05}, {'diff': 8.386099999999758e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:15.671" endtime="20201029 12:45:15.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:15.691" level="INFO">${ACCURACY} = {'diff': [8.44720000000021e-05, 8.43469999999985e-05, 8.379099999999973e-05, 8.368000000000264e-05, 8.37919999999992e-05, 8.386099999999758e-05, 8.369500000000168e-05, 8.43469999999985e-05, 8.37919999...</msg>
<status status="PASS" starttime="20201029 12:45:15.682" endtime="20201029 12:45:15.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.702" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:45:15.700" endtime="20201029 12:45:15.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.708" level="INFO">VALUE: [8.44720000000021e-05, 8.43469999999985e-05, 8.379099999999973e-05, 8.368000000000264e-05, 8.37919999999992e-05, 8.386099999999758e-05, 8.369500000000168e-05, 8.43469999999985e-05, 8.37919999999992e-05, 8.358299999999819e-05, 8.445899999999507e-05, 8.37370000000004e-05, 8.36799999999957e-05, 8.381899999999887e-05, 8.454199999999995e-05, 8.401400000000031e-05, 8.402799999999988e-05, 8.351399999999981e-05, 8.44720000000021e-05, 8.443099999999593e-05, 8.355599999999852e-05, 8.359800000000417e-05, 8.366700000000254e-05, 8.356999999999809e-05, 8.413799999999749e-05, 8.377700000000016e-05, 8.409699999999826e-05, 8.390200000000375e-05, 8.400000000000074e-05, 8.395800000000203e-05, 8.436099999999808e-05, 8.3944999999995e-05, 8.368099999999518e-05, 8.423600000000142e-05, 8.380599999999877e-05, 8.355599999999852e-05, 8.434799999999798e-05, 8.38049999999993e-05, 8.401300000000084e-05, 8.374999999999355e-05, 8.413899999999697e-05, 8.41390000000039e-05, 8.352799999999938e-05, 8.413899999999697e-05, 8.390299999999629e-05, 8.422200000000185e-05, 8.377799999999963e-05, 8.372199999999441e-05, 8.376400000000006e-05, 8.36669999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:45:15.705" endtime="20201029 12:45:15.709"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.693" endtime="20201029 12:45:15.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:15.720" endtime="20201029 12:45:15.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.716" endtime="20201029 12:45:15.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.714" endtime="20201029 12:45:15.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.220" endtime="20201029 12:45:15.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.219" endtime="20201029 12:45:15.745"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.768" endtime="20201029 12:45:15.790"></status>
</kw>
<msg timestamp="20201029 12:45:15.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.765" endtime="20201029 12:45:15.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:15.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:15.794" endtime="20201029 12:45:15.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.800" endtime="20201029 12:45:15.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.758" endtime="20201029 12:45:15.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.752" endtime="20201029 12:45:15.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:15.823" endtime="20201029 12:45:16.164"></status>
</kw>
<msg timestamp="20201029 12:45:16.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041524056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:15.820" endtime="20201029 12:45:16.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04143875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041524056, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:16.168" endtime="20201029 12:45:16.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.177" endtime="20201029 12:45:16.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.813" endtime="20201029 12:45:16.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.808" endtime="20201029 12:45:16.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.185" level="INFO">${RESULT} = [{'diff': 8.530599999999333e-05}, {'diff': 8.523600000000242e-05}, {'diff': 8.490299999999729e-05}, {'diff': 8.46669999999966e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.477800000000063e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:16.181" endtime="20201029 12:45:16.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.189" level="INFO">${ACCURACY} = {'diff': [8.530599999999333e-05, 8.523600000000242e-05, 8.490299999999729e-05, 8.46669999999966e-05, 8.461099999999833e-05, 8.477800000000063e-05, 8.470900000000225e-05, 8.465299999999704e-05, 8.52910...</msg>
<status status="PASS" starttime="20201029 12:45:16.186" endtime="20201029 12:45:16.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.195" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.193" endtime="20201029 12:45:16.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.197" level="INFO">VALUE: [8.530599999999333e-05, 8.523600000000242e-05, 8.490299999999729e-05, 8.46669999999966e-05, 8.461099999999833e-05, 8.477800000000063e-05, 8.470900000000225e-05, 8.465299999999704e-05, 8.529100000000123e-05, 8.511099999999883e-05, 8.479100000000073e-05, 8.513899999999797e-05, 8.511099999999883e-05, 8.455500000000005e-05, 8.500000000000174e-05, 8.545799999999659e-05, 8.456999999999909e-05, 8.5459000000003e-05, 8.534799999999898e-05, 8.468100000000311e-05, 8.533399999999941e-05, 8.520800000000328e-05, 8.477700000000116e-05, 8.466599999999713e-05, 8.477800000000063e-05, 8.501400000000131e-05, 8.501399999999437e-05, 8.477800000000063e-05, 8.513899999999797e-05, 8.468099999999618e-05, 8.480599999999977e-05, 8.509799999999873e-05, 8.490300000000423e-05, 8.529100000000123e-05, 8.543000000000439e-05, 8.455500000000005e-05, 8.490300000000423e-05, 8.542999999999745e-05, 8.501400000000131e-05, 8.502799999999394e-05, 8.469499999999575e-05, 8.511099999999883e-05, 8.469500000000268e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.522199999999591e-05, 8.534700000000645e-05, 8.54720000000031e-05, 8.523600000000242e-05, 8.502800000000088e-05]</msg>
<status status="PASS" starttime="20201029 12:45:16.196" endtime="20201029 12:45:16.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.190" endtime="20201029 12:45:16.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.203" endtime="20201029 12:45:16.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.201" endtime="20201029 12:45:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.200" endtime="20201029 12:45:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.747" endtime="20201029 12:45:16.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:15.746" endtime="20201029 12:45:16.224"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.235" endtime="20201029 12:45:16.254"></status>
</kw>
<msg timestamp="20201029 12:45:16.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.233" endtime="20201029 12:45:16.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.256" endtime="20201029 12:45:16.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.259" endtime="20201029 12:45:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.230" endtime="20201029 12:45:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.227" endtime="20201029 12:45:16.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.277" endtime="20201029 12:45:16.616"></status>
</kw>
<msg timestamp="20201029 12:45:16.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025514069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.273" endtime="20201029 12:45:16.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025514069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025600028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.625" endtime="20201029 12:45:16.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.644" endtime="20201029 12:45:16.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.266" endtime="20201029 12:45:16.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.263" endtime="20201029 12:45:16.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.661" level="INFO">${RESULT} = [{'diff': 8.595900000000004e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.622300000000332e-05}, {'diff': 8.611099999999983e-05}, {'diff': 8.590200000000228e-05}, {'diff': 8.556899999999715e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:16.652" endtime="20201029 12:45:16.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:16.671" level="INFO">${ACCURACY} = {'diff': [8.595900000000004e-05, 8.557000000000009e-05, 8.622300000000332e-05, 8.611099999999983e-05, 8.590200000000228e-05, 8.556899999999715e-05, 8.619399999999777e-05, 8.622200000000038e-05, 8.6110...</msg>
<status status="PASS" starttime="20201029 12:45:16.663" endtime="20201029 12:45:16.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.681" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:45:16.679" endtime="20201029 12:45:16.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.687" level="INFO">VALUE: [8.595900000000004e-05, 8.557000000000009e-05, 8.622300000000332e-05, 8.611099999999983e-05, 8.590200000000228e-05, 8.556899999999715e-05, 8.619399999999777e-05, 8.622200000000038e-05, 8.611099999999983e-05, 8.601399999999884e-05, 8.587500000000262e-05, 8.559699999999976e-05, 8.602800000000188e-05, 8.558300000000019e-05, 8.611099999999983e-05, 8.599999999999927e-05, 8.590199999999881e-05, 8.63470000000005e-05, 8.642999999999845e-05, 8.554099999999801e-05, 8.577800000000163e-05, 8.601399999999884e-05, 8.652699999999944e-05, 8.557000000000009e-05, 8.640299999999879e-05, 8.554200000000095e-05, 8.568100000000065e-05, 8.568000000000117e-05, 8.645800000000106e-05, 8.5847e-05, 8.605600000000102e-05, 8.645799999999759e-05, 8.644400000000149e-05, 8.642999999999845e-05, 8.611099999999983e-05, 8.576399999999859e-05, 8.557000000000009e-05, 8.591700000000133e-05, 8.623599999999995e-05, 8.634799999999998e-05, 8.577800000000163e-05, 8.570800000000031e-05, 8.574999999999902e-05, 8.566599999999813e-05, 8.588899999999872e-05, 8.566700000000108e-05, 8.608300000000069e-05, 8.609700000000026e-05, 8.637499999999965e-05, 8.63470000000005e-05]</msg>
<status status="PASS" starttime="20201029 12:45:16.684" endtime="20201029 12:45:16.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.672" endtime="20201029 12:45:16.690"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.701" endtime="20201029 12:45:16.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.695" endtime="20201029 12:45:16.724"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.693" endtime="20201029 12:45:16.725"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.225" endtime="20201029 12:45:16.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.225" endtime="20201029 12:45:16.726"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.749" endtime="20201029 12:45:16.771"></status>
</kw>
<msg timestamp="20201029 12:45:16.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.746" endtime="20201029 12:45:16.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.775" endtime="20201029 12:45:16.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.781" endtime="20201029 12:45:16.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.738" endtime="20201029 12:45:16.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.732" endtime="20201029 12:45:16.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.805" endtime="20201029 12:45:17.141"></status>
</kw>
<msg timestamp="20201029 12:45:17.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041273681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041361028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.801" endtime="20201029 12:45:17.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041273681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041361028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.151" endtime="20201029 12:45:17.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.169" endtime="20201029 12:45:17.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.794" endtime="20201029 12:45:17.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.789" endtime="20201029 12:45:17.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.187" level="INFO">${RESULT} = [{'diff': 8.73470000000015e-05}, {'diff': 8.695799999999809e-05}, {'diff': 8.677799999999569e-05}, {'diff': 8.73470000000015e-05}, {'diff': 8.701399999999637e-05}, {'diff': 8.656899999999468e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:17.178" endtime="20201029 12:45:17.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.197" level="INFO">${ACCURACY} = {'diff': [8.73470000000015e-05, 8.695799999999809e-05, 8.677799999999569e-05, 8.73470000000015e-05, 8.701399999999637e-05, 8.656899999999468e-05, 8.679100000000273e-05, 8.734699999999457e-05, 8.688899...</msg>
<status status="PASS" starttime="20201029 12:45:17.189" endtime="20201029 12:45:17.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.208" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.206" endtime="20201029 12:45:17.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.214" level="INFO">VALUE: [8.73470000000015e-05, 8.695799999999809e-05, 8.677799999999569e-05, 8.73470000000015e-05, 8.701399999999637e-05, 8.656899999999468e-05, 8.679100000000273e-05, 8.734699999999457e-05, 8.688899999999972e-05, 8.690299999999929e-05, 8.655600000000152e-05, 8.688899999999972e-05, 8.690299999999929e-05, 8.668099999999818e-05, 8.677799999999569e-05, 8.744500000000544e-05, 8.724999999999705e-05, 8.737500000000065e-05, 8.733300000000194e-05, 8.701400000000331e-05, 8.66669999999986e-05, 8.745799999999859e-05, 8.713899999999997e-05, 8.740299999999979e-05, 8.668099999999818e-05, 8.655600000000152e-05, 8.709800000000073e-05, 8.668099999999818e-05, 8.713899999999997e-05, 8.677700000000316e-05, 8.731900000000237e-05, 8.73470000000015e-05, 8.663899999999947e-05, 8.71669999999991e-05, 8.71250000000004e-05, 8.745800000000553e-05, 8.665299999999904e-05, 8.701400000000331e-05, 8.66669999999986e-05, 8.720799999999834e-05, 8.658300000000119e-05, 8.666599999999913e-05, 8.744400000000596e-05, 8.673599999999698e-05, 8.69999999999968e-05, 8.687500000000015e-05, 8.656900000000162e-05, 8.73470000000015e-05, 8.677800000000263e-05, 8.668099999999818e-05]</msg>
<status status="PASS" starttime="20201029 12:45:17.210" endtime="20201029 12:45:17.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.199" endtime="20201029 12:45:17.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.234" endtime="20201029 12:45:17.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.229" endtime="20201029 12:45:17.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.227" endtime="20201029 12:45:17.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.728" endtime="20201029 12:45:17.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.727" endtime="20201029 12:45:17.260"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.285" endtime="20201029 12:45:17.307"></status>
</kw>
<msg timestamp="20201029 12:45:17.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.281" endtime="20201029 12:45:17.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.311" endtime="20201029 12:45:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.318" endtime="20201029 12:45:17.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.273" endtime="20201029 12:45:17.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.267" endtime="20201029 12:45:17.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.343" endtime="20201029 12:45:17.698"></status>
</kw>
<msg timestamp="20201029 12:45:17.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044201444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.339" endtime="20201029 12:45:17.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044201444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044289472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.707" endtime="20201029 12:45:17.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.726" endtime="20201029 12:45:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.331" endtime="20201029 12:45:17.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.326" endtime="20201029 12:45:17.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.743" level="INFO">${RESULT} = [{'diff': 8.802800000000388e-05}, {'diff': 8.751400000000381e-05}, {'diff': 8.754200000000295e-05}, {'diff': 8.788900000000072e-05}, {'diff': 8.834699999999557e-05}, {'diff': 8.788900000000072e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:17.734" endtime="20201029 12:45:17.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:17.754" level="INFO">${ACCURACY} = {'diff': [8.802800000000388e-05, 8.751400000000381e-05, 8.754200000000295e-05, 8.788900000000072e-05, 8.834699999999557e-05, 8.788900000000072e-05, 8.822199999999891e-05, 8.800000000000474e-05, 8.8444...</msg>
<status status="PASS" starttime="20201029 12:45:17.745" endtime="20201029 12:45:17.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.765" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:45:17.763" endtime="20201029 12:45:17.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.771" level="INFO">VALUE: [8.802800000000388e-05, 8.751400000000381e-05, 8.754200000000295e-05, 8.788900000000072e-05, 8.834699999999557e-05, 8.788900000000072e-05, 8.822199999999891e-05, 8.800000000000474e-05, 8.844400000000002e-05, 8.824999999999805e-05, 8.788800000000124e-05, 8.754100000000348e-05, 8.756900000000262e-05, 8.823599999999848e-05, 8.756900000000262e-05, 8.833300000000294e-05, 8.845799999999959e-05, 8.81250000000014e-05, 8.788900000000072e-05, 8.833399999999547e-05, 8.834800000000198e-05, 8.792999999999995e-05, 8.834700000000251e-05, 8.8332999999996e-05, 8.800000000000474e-05, 8.81250000000014e-05, 8.844400000000002e-05, 8.768099999999918e-05, 8.824999999999805e-05, 8.801400000000431e-05, 8.765300000000004e-05, 8.777799999999669e-05, 8.788900000000072e-05, 8.823599999999848e-05, 8.811199999999436e-05, 8.845799999999959e-05, 8.790200000000081e-05, 8.756899999999568e-05, 8.766600000000013e-05, 8.77920000000032e-05, 8.81250000000014e-05, 8.776400000000406e-05, 8.788900000000072e-05, 8.802800000000388e-05, 8.834800000000198e-05, 8.820899999999882e-05, 8.79869999999977e-05, 8.809700000000226e-05, 8.838900000000122e-05, 8.820799999999934e-05]</msg>
<status status="PASS" starttime="20201029 12:45:17.768" endtime="20201029 12:45:17.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.756" endtime="20201029 12:45:17.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.784" endtime="20201029 12:45:17.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.779" endtime="20201029 12:45:17.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.777" endtime="20201029 12:45:17.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.262" endtime="20201029 12:45:17.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.261" endtime="20201029 12:45:17.809"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.832" endtime="20201029 12:45:17.855"></status>
</kw>
<msg timestamp="20201029 12:45:17.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.829" endtime="20201029 12:45:17.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.858" endtime="20201029 12:45:17.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.865" endtime="20201029 12:45:17.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.821" endtime="20201029 12:45:17.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.816" endtime="20201029 12:45:17.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.888" endtime="20201029 12:45:18.240"></status>
</kw>
<msg timestamp="20201029 12:45:18.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042369375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.885" endtime="20201029 12:45:18.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042369375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.250" endtime="20201029 12:45:18.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.269" endtime="20201029 12:45:18.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.878" endtime="20201029 12:45:18.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.873" endtime="20201029 12:45:18.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.287" level="INFO">${RESULT} = [{'diff': 8.947200000000016e-05}, {'diff': 8.890300000000129e-05}, {'diff': 8.911100000000283e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.912499999999546e-05}, {'diff': 8.868100000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:18.277" endtime="20201029 12:45:18.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:18.296" level="INFO">${ACCURACY} = {'diff': [8.947200000000016e-05, 8.890300000000129e-05, 8.911100000000283e-05, 8.89999999999988e-05, 8.912499999999546e-05, 8.868100000000018e-05, 8.901399999999837e-05, 8.940299999999485e-05, 8.86940...</msg>
<status status="PASS" starttime="20201029 12:45:18.289" endtime="20201029 12:45:18.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.307" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:45:18.305" endtime="20201029 12:45:18.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.313" level="INFO">VALUE: [8.947200000000016e-05, 8.890300000000129e-05, 8.911100000000283e-05, 8.89999999999988e-05, 8.912499999999546e-05, 8.868100000000018e-05, 8.901399999999837e-05, 8.940299999999485e-05, 8.869400000000027e-05, 8.880499999999736e-05, 8.856900000000362e-05, 8.920800000000034e-05, 8.890300000000129e-05, 8.869499999999975e-05, 8.86670000000006e-05, 8.87920000000042e-05, 8.890300000000129e-05, 8.924999999999905e-05, 8.856900000000362e-05, 8.883300000000344e-05, 8.869400000000027e-05, 8.866600000000113e-05, 8.86800000000007e-05, 8.877800000000463e-05, 8.9332999999997e-05, 8.86250000000019e-05, 8.91250000000024e-05, 8.890299999999435e-05, 8.924999999999905e-05, 8.901400000000531e-05, 8.876399999999812e-05, 8.933300000000394e-05, 8.931899999999743e-05, 8.945800000000059e-05, 8.922199999999991e-05, 8.869499999999975e-05, 8.902799999999794e-05, 8.891700000000086e-05, 8.877799999999769e-05, 8.883300000000344e-05, 8.93199999999969e-05, 8.933399999999647e-05, 8.94450000000005e-05, 8.902699999999847e-05, 8.925000000000599e-05, 8.945800000000059e-05, 8.922199999999991e-05, 8.922199999999991e-05, 8.877800000000463e-05, 8.890300000000129e-05]</msg>
<status status="PASS" starttime="20201029 12:45:18.310" endtime="20201029 12:45:18.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.298" endtime="20201029 12:45:18.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.325" endtime="20201029 12:45:18.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.321" endtime="20201029 12:45:18.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.319" endtime="20201029 12:45:18.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.811" endtime="20201029 12:45:18.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.810" endtime="20201029 12:45:18.351"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.374" endtime="20201029 12:45:18.401"></status>
</kw>
<msg timestamp="20201029 12:45:18.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.370" endtime="20201029 12:45:18.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.405" endtime="20201029 12:45:18.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.411" endtime="20201029 12:45:18.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.363" endtime="20201029 12:45:18.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.357" endtime="20201029 12:45:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.435" endtime="20201029 12:45:18.789"></status>
</kw>
<msg timestamp="20201029 12:45:18.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047528889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047618458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.432" endtime="20201029 12:45:18.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047528889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047618458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.798" endtime="20201029 12:45:18.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.817" endtime="20201029 12:45:18.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.424" endtime="20201029 12:45:18.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.419" endtime="20201029 12:45:18.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.834" level="INFO">${RESULT} = [{'diff': 8.956900000000462e-05}, {'diff': 9.001399999999937e-05}, {'diff': 9.043000000000245e-05}, {'diff': 9.01250000000034e-05}, {'diff': 8.956900000000462e-05}, {'diff': 9.012499999999646e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:18.825" endtime="20201029 12:45:18.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:18.845" level="INFO">${ACCURACY} = {'diff': [8.956900000000462e-05, 9.001399999999937e-05, 9.043000000000245e-05, 9.01250000000034e-05, 8.956900000000462e-05, 9.012499999999646e-05, 8.963900000000247e-05, 9.045900000000107e-05, 9.02360...</msg>
<status status="PASS" starttime="20201029 12:45:18.836" endtime="20201029 12:45:18.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.855" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:45:18.853" endtime="20201029 12:45:18.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.861" level="INFO">VALUE: [8.956900000000462e-05, 9.001399999999937e-05, 9.043000000000245e-05, 9.01250000000034e-05, 8.956900000000462e-05, 9.012499999999646e-05, 8.963900000000247e-05, 9.045900000000107e-05, 9.023600000000048e-05, 8.987499999999621e-05, 9.001399999999937e-05, 9.01250000000034e-05, 8.966600000000213e-05, 8.990300000000229e-05, 9.047200000000116e-05, 8.96800000000017e-05, 8.958300000000419e-05, 8.976400000000606e-05, 9.0332999999998e-05, 9.012499999999646e-05, 8.961099999999639e-05, 9.001399999999937e-05, 8.963899999999553e-05, 9.034700000000451e-05, 8.98329999999975e-05, 9.022200000000091e-05, 8.956900000000462e-05, 9.052799999999944e-05, 8.94999999999993e-05, 8.972299999999989e-05, 8.955599999999758e-05, 8.977799999999869e-05, 8.99999999999998e-05, 8.962499999999596e-05, 8.990300000000229e-05, 8.96800000000017e-05, 8.990200000000281e-05, 9.044400000000202e-05, 9.041700000000236e-05, 9.025000000000005e-05, 8.990299999999535e-05, 8.963899999999553e-05, 8.979199999999826e-05, 9.001399999999937e-05, 9.008400000000416e-05, 9.009799999999679e-05, 9.045899999999413e-05, 8.962499999999596e-05, 8.96800000000017e-05, 9.011099999999689e-05]</msg>
<status status="PASS" starttime="20201029 12:45:18.858" endtime="20201029 12:45:18.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.846" endtime="20201029 12:45:18.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.875" endtime="20201029 12:45:18.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.869" endtime="20201029 12:45:18.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.867" endtime="20201029 12:45:18.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.353" endtime="20201029 12:45:18.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.352" endtime="20201029 12:45:18.900"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.923" endtime="20201029 12:45:18.945"></status>
</kw>
<msg timestamp="20201029 12:45:18.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.920" endtime="20201029 12:45:18.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.949" endtime="20201029 12:45:18.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.955" endtime="20201029 12:45:18.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.912" endtime="20201029 12:45:18.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.907" endtime="20201029 12:45:18.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.978" endtime="20201029 12:45:19.333"></status>
</kw>
<msg timestamp="20201029 12:45:19.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041633653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041724583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.975" endtime="20201029 12:45:19.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041633653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041724583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.343" endtime="20201029 12:45:19.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.361" endtime="20201029 12:45:19.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.968" endtime="20201029 12:45:19.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.963" endtime="20201029 12:45:19.368"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.379" level="INFO">${RESULT} = [{'diff': 9.093000000000295e-05}, {'diff': 9.055499999999911e-05}, {'diff': 9.123600000000148e-05}, {'diff': 9.145800000000259e-05}, {'diff': 9.11250000000044e-05}, {'diff': 9.123599999999454e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:19.370" endtime="20201029 12:45:19.379"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:19.389" level="INFO">${ACCURACY} = {'diff': [9.093000000000295e-05, 9.055499999999911e-05, 9.123600000000148e-05, 9.145800000000259e-05, 9.11250000000044e-05, 9.123599999999454e-05, 9.1332999999999e-05, 9.11250000000044e-05, 9.06669999...</msg>
<status status="PASS" starttime="20201029 12:45:19.381" endtime="20201029 12:45:19.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.400" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:45:19.398" endtime="20201029 12:45:19.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.406" level="INFO">VALUE: [9.093000000000295e-05, 9.055499999999911e-05, 9.123600000000148e-05, 9.145800000000259e-05, 9.11250000000044e-05, 9.123599999999454e-05, 9.1332999999999e-05, 9.11250000000044e-05, 9.066699999999567e-05, 9.057000000000509e-05, 9.122300000000139e-05, 9.056899999999868e-05, 9.091600000000338e-05, 9.134700000000551e-05, 9.084699999999807e-05, 9.088899999999678e-05, 9.051399999999987e-05, 9.123600000000148e-05, 9.054199999999901e-05, 9.111099999999789e-05, 9.104199999999951e-05, 9.133399999999847e-05, 9.079199999999926e-05, 9.134700000000551e-05, 9.067999999999576e-05, 9.134699999999857e-05, 9.108299999999875e-05, 9.123600000000148e-05, 9.123600000000148e-05, 9.068099999999524e-05, 9.090300000000329e-05, 9.077799999999969e-05, 9.069500000000175e-05, 9.145899999999513e-05, 9.06670000000026e-05, 9.10130000000009e-05, 9.123600000000148e-05, 9.137499999999771e-05, 9.056899999999868e-05, 9.144400000000302e-05, 9.083399999999797e-05, 9.091700000000286e-05, 9.13199999999989e-05, 9.052799999999944e-05, 9.055600000000552e-05, 9.101400000000037e-05, 9.134799999999804e-05, 9.06670000000026e-05, 9.088900000000372e-05, 9.123600000000148e-05]</msg>
<status status="PASS" starttime="20201029 12:45:19.403" endtime="20201029 12:45:19.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.391" endtime="20201029 12:45:19.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.418" endtime="20201029 12:45:19.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.414" endtime="20201029 12:45:19.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.412" endtime="20201029 12:45:19.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.902" endtime="20201029 12:45:19.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.901" endtime="20201029 12:45:19.445"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.467" endtime="20201029 12:45:19.490"></status>
</kw>
<msg timestamp="20201029 12:45:19.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.464" endtime="20201029 12:45:19.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.494" endtime="20201029 12:45:19.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.500" endtime="20201029 12:45:19.503"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.457" endtime="20201029 12:45:19.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.451" endtime="20201029 12:45:19.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.513" endtime="20201029 12:45:19.836"></status>
</kw>
<msg timestamp="20201029 12:45:19.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.511" endtime="20201029 12:45:19.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042521292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.845" endtime="20201029 12:45:19.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.864" endtime="20201029 12:45:19.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.508" endtime="20201029 12:45:19.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.505" endtime="20201029 12:45:19.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.881" level="INFO">${RESULT} = [{'diff': 9.208399999999922e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.245799999999665e-05}, {'diff': 9.223600000000248e-05}, {'diff': 9.202700000000147e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:19.872" endtime="20201029 12:45:19.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:19.892" level="INFO">${ACCURACY} = {'diff': [9.208399999999922e-05, 9.179200000000026e-05, 9.162499999999796e-05, 9.245799999999665e-05, 9.223600000000248e-05, 9.202700000000147e-05, 9.168099999999624e-05, 9.166699999999667e-05, 9.2124...</msg>
<status status="PASS" starttime="20201029 12:45:19.883" endtime="20201029 12:45:19.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.903" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:45:19.901" endtime="20201029 12:45:19.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.909" level="INFO">VALUE: [9.208399999999922e-05, 9.179200000000026e-05, 9.162499999999796e-05, 9.245799999999665e-05, 9.223600000000248e-05, 9.202700000000147e-05, 9.168099999999624e-05, 9.166699999999667e-05, 9.212499999999846e-05, 9.234699999999957e-05, 9.211099999999889e-05, 9.188900000000472e-05, 9.151400000000087e-05, 9.158299999999925e-05, 9.244499999999656e-05, 9.16670000000036e-05, 9.213900000000497e-05, 9.216600000000463e-05, 9.179200000000026e-05, 9.166699999999667e-05, 9.220800000000334e-05, 9.173600000000198e-05, 9.245800000000359e-05, 9.234699999999957e-05, 9.201400000000137e-05, 9.184700000000601e-05, 9.169500000000275e-05, 9.223599999999554e-05, 9.202800000000094e-05, 9.225000000000205e-05, 9.180500000000036e-05, 9.186099999999864e-05, 9.244399999999708e-05, 9.156899999999968e-05, 9.245800000000359e-05, 9.179200000000026e-05, 9.179200000000026e-05, 9.16529999999971e-05, 9.244499999999656e-05, 9.155599999999958e-05, 9.20000000000018e-05, 9.155599999999958e-05, 9.173600000000198e-05, 9.156899999999968e-05, 9.191600000000438e-05, 9.209699999999932e-05, 9.234699999999957e-05, 9.16670000000036e-05, 9.184700000000601e-05, 9.172199999999547e-05]</msg>
<status status="PASS" starttime="20201029 12:45:19.905" endtime="20201029 12:45:19.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.894" endtime="20201029 12:45:19.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.921" endtime="20201029 12:45:19.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.917" endtime="20201029 12:45:19.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.914" endtime="20201029 12:45:19.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.447" endtime="20201029 12:45:19.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.445" endtime="20201029 12:45:19.946"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.970" endtime="20201029 12:45:19.992"></status>
</kw>
<msg timestamp="20201029 12:45:19.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.966" endtime="20201029 12:45:19.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.995" endtime="20201029 12:45:20.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.002" endtime="20201029 12:45:20.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.959" endtime="20201029 12:45:20.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.952" endtime="20201029 12:45:20.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.025" endtime="20201029 12:45:20.364"></status>
</kw>
<msg timestamp="20201029 12:45:20.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041902542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.022" endtime="20201029 12:45:20.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041902542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041995139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.374" endtime="20201029 12:45:20.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.392" endtime="20201029 12:45:20.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.015" endtime="20201029 12:45:20.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.010" endtime="20201029 12:45:20.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.409" level="INFO">${RESULT} = [{'diff': 9.259699999999982e-05}, {'diff': 9.280600000000083e-05}, {'diff': 9.284700000000007e-05}, {'diff': 9.334800000000004e-05}, {'diff': 9.336199999999961e-05}, {'diff': 9.334800000000004e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:20.400" endtime="20201029 12:45:20.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:20.419" level="INFO">${ACCURACY} = {'diff': [9.259699999999982e-05, 9.280600000000083e-05, 9.284700000000007e-05, 9.334800000000004e-05, 9.336199999999961e-05, 9.334800000000004e-05, 9.287499999999921e-05, 9.277699999999528e-05, 9.3333...</msg>
<status status="PASS" starttime="20201029 12:45:20.411" endtime="20201029 12:45:20.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.429" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:45:20.427" endtime="20201029 12:45:20.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.435" level="INFO">VALUE: [9.259699999999982e-05, 9.280600000000083e-05, 9.284700000000007e-05, 9.334800000000004e-05, 9.336199999999961e-05, 9.334800000000004e-05, 9.287499999999921e-05, 9.277699999999528e-05, 9.3333000000001e-05, 9.307000000000065e-05, 9.280600000000083e-05, 9.301400000000237e-05, 9.331900000000143e-05, 9.266699999999767e-05, 9.333400000000047e-05, 9.280600000000083e-05, 9.288899999999878e-05, 9.347199999999722e-05, 9.267999999999776e-05, 9.290300000000529e-05, 9.334700000000057e-05, 9.30000000000028e-05, 9.334700000000057e-05, 9.301400000000237e-05, 9.30000000000028e-05, 9.323600000000348e-05, 9.290300000000529e-05, 9.293000000000495e-05, 9.301299999999596e-05, 9.259699999999982e-05, 9.344400000000502e-05, 9.267999999999776e-05, 9.279100000000179e-05, 9.347199999999722e-05, 9.255500000000111e-05, 9.330500000000186e-05, 9.26529999999981e-05, 9.34450000000045e-05, 9.333400000000047e-05, 9.299999999999586e-05, 9.340299999999885e-05, 9.279100000000179e-05, 9.334700000000057e-05, 9.334700000000057e-05, 9.277800000000169e-05, 9.337499999999971e-05, 9.337499999999971e-05, 9.268099999999724e-05, 9.311099999999989e-05, 9.34729999999967e-05]</msg>
<status status="PASS" starttime="20201029 12:45:20.432" endtime="20201029 12:45:20.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.420" endtime="20201029 12:45:20.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.448" endtime="20201029 12:45:20.469"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.443" endtime="20201029 12:45:20.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.441" endtime="20201029 12:45:20.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.948" endtime="20201029 12:45:20.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.947" endtime="20201029 12:45:20.472"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.495" endtime="20201029 12:45:20.519"></status>
</kw>
<msg timestamp="20201029 12:45:20.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.492" endtime="20201029 12:45:20.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.523" endtime="20201029 12:45:20.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.529" endtime="20201029 12:45:20.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.485" endtime="20201029 12:45:20.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.479" endtime="20201029 12:45:20.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.553" endtime="20201029 12:45:20.890"></status>
</kw>
<msg timestamp="20201029 12:45:20.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042921444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043015042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.549" endtime="20201029 12:45:20.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042921444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043015042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.899" endtime="20201029 12:45:20.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.918" endtime="20201029 12:45:20.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.542" endtime="20201029 12:45:20.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.537" endtime="20201029 12:45:20.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.935" level="INFO">${RESULT} = [{'diff': 9.359800000000029e-05}, {'diff': 9.417999999999926e-05}, {'diff': 9.355600000000158e-05}, {'diff': 9.437500000000071e-05}, {'diff': 9.411100000000089e-05}, {'diff': 9.401399999999643e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:20.926" endtime="20201029 12:45:20.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:20.944" level="INFO">${ACCURACY} = {'diff': [9.359800000000029e-05, 9.417999999999926e-05, 9.355600000000158e-05, 9.437500000000071e-05, 9.411100000000089e-05, 9.401399999999643e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.4416...</msg>
<status status="PASS" starttime="20201029 12:45:20.937" endtime="20201029 12:45:20.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.955" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:45:20.953" endtime="20201029 12:45:20.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.961" level="INFO">VALUE: [9.359800000000029e-05, 9.417999999999926e-05, 9.355600000000158e-05, 9.437500000000071e-05, 9.411100000000089e-05, 9.401399999999643e-05, 9.412500000000046e-05, 9.411100000000089e-05, 9.441699999999942e-05, 9.39859999999973e-05, 9.368100000000518e-05, 9.380600000000183e-05, 9.379200000000226e-05, 9.355600000000158e-05, 9.391599999999944e-05, 9.422199999999797e-05, 9.401400000000337e-05, 9.444400000000602e-05, 9.412500000000046e-05, 9.399999999999686e-05, 9.4333000000002e-05, 9.368100000000518e-05, 9.412499999999352e-05, 9.43200000000019e-05, 9.412500000000046e-05, 9.390299999999935e-05, 9.402700000000347e-05, 9.36800000000057e-05, 9.392999999999901e-05, 9.412500000000046e-05, 9.4333000000002e-05, 9.423600000000448e-05, 9.366699999999867e-05, 9.423600000000448e-05, 9.380600000000183e-05, 9.368100000000518e-05, 9.415200000000012e-05, 9.411200000000036e-05, 9.369399999999833e-05, 9.437500000000071e-05, 9.379099999999585e-05, 9.36529999999991e-05, 9.355500000000211e-05, 9.402800000000294e-05, 9.397300000000414e-05, 9.405499999999567e-05, 9.376400000000312e-05, 9.377799999999575e-05, 9.355599999999464e-05, 9.412500000000046e-05]</msg>
<status status="PASS" starttime="20201029 12:45:20.957" endtime="20201029 12:45:20.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.946" endtime="20201029 12:45:20.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.975" endtime="20201029 12:45:20.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.969" endtime="20201029 12:45:20.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.966" endtime="20201029 12:45:20.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.475" endtime="20201029 12:45:20.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.473" endtime="20201029 12:45:21.000"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.023" endtime="20201029 12:45:21.045"></status>
</kw>
<msg timestamp="20201029 12:45:21.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.020" endtime="20201029 12:45:21.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.048" endtime="20201029 12:45:21.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.054" endtime="20201029 12:45:21.058"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.012" endtime="20201029 12:45:21.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.006" endtime="20201029 12:45:21.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.078" endtime="20201029 12:45:21.415"></status>
</kw>
<msg timestamp="20201029 12:45:21.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041543194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.074" endtime="20201029 12:45:21.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041543194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041638653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.424" endtime="20201029 12:45:21.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.442" endtime="20201029 12:45:21.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.067" endtime="20201029 12:45:21.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.062" endtime="20201029 12:45:21.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.460" level="INFO">${RESULT} = [{'diff': 9.545899999999913e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.486199999999417e-05}, {'diff': 9.511100000000189e-05}, {'diff': 9.527699999999778e-05}, {'diff': 9.488900000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:21.451" endtime="20201029 12:45:21.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:21.471" level="INFO">${ACCURACY} = {'diff': [9.545899999999913e-05, 9.474999999999761e-05, 9.486199999999417e-05, 9.511100000000189e-05, 9.527699999999778e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.490300000000035e-05, 9.4945...</msg>
<status status="PASS" starttime="20201029 12:45:21.462" endtime="20201029 12:45:21.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.482" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:45:21.479" endtime="20201029 12:45:21.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.487" level="INFO">VALUE: [9.545899999999913e-05, 9.474999999999761e-05, 9.486199999999417e-05, 9.511100000000189e-05, 9.527699999999778e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.490300000000035e-05, 9.4945000000006e-05, 9.511100000000189e-05, 9.523599999999854e-05, 9.508400000000222e-05, 9.522299999999845e-05, 9.522300000000539e-05, 9.466699999999967e-05, 9.544400000000008e-05, 9.46660000000002e-05, 9.467999999999976e-05, 9.46530000000001e-05, 9.511100000000189e-05, 9.466699999999967e-05, 9.545799999999965e-05, 9.479199999999632e-05, 9.479199999999632e-05, 9.519499999999931e-05, 9.487500000000121e-05, 9.523599999999854e-05, 9.467999999999976e-05, 9.533299999999606e-05, 9.512500000000146e-05, 9.534699999999563e-05, 9.534699999999563e-05, 9.505599999999614e-05, 9.476400000000412e-05, 9.533399999999553e-05, 9.522299999999845e-05, 9.491600000000044e-05, 9.456899999999574e-05, 9.487500000000121e-05, 9.50000000000048e-05, 9.523599999999854e-05, 9.540300000000085e-05, 9.490300000000035e-05, 9.490300000000035e-05, 9.458400000000172e-05, 9.524999999999811e-05, 9.457000000000215e-05, 9.491600000000044e-05, 9.488900000000078e-05, 9.50000000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:45:21.484" endtime="20201029 12:45:21.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.472" endtime="20201029 12:45:21.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:21.500" endtime="20201029 12:45:21.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.495" endtime="20201029 12:45:21.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.493" endtime="20201029 12:45:21.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.002" endtime="20201029 12:45:21.524"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.001" endtime="20201029 12:45:21.524"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.547" endtime="20201029 12:45:21.569"></status>
</kw>
<msg timestamp="20201029 12:45:21.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.544" endtime="20201029 12:45:21.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.572" endtime="20201029 12:45:21.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.579" endtime="20201029 12:45:21.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.537" endtime="20201029 12:45:21.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.531" endtime="20201029 12:45:21.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.603" endtime="20201029 12:45:21.939"></status>
</kw>
<msg timestamp="20201029 12:45:21.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041178444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.600" endtime="20201029 12:45:21.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041178444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041274681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.948" endtime="20201029 12:45:21.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.966" endtime="20201029 12:45:21.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.592" endtime="20201029 12:45:21.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.587" endtime="20201029 12:45:21.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.983" level="INFO">${RESULT} = [{'diff': 9.623699999999902e-05}, {'diff': 9.561100000000239e-05}, {'diff': 9.567999999999383e-05}, {'diff': 9.556900000000368e-05}, {'diff': 9.616699999999423e-05}, {'diff': 9.588900000000178e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:21.975" endtime="20201029 12:45:21.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:21.995" level="INFO">${ACCURACY} = {'diff': [9.623699999999902e-05, 9.561100000000239e-05, 9.567999999999383e-05, 9.556900000000368e-05, 9.616699999999423e-05, 9.588900000000178e-05, 9.551399999999793e-05, 9.63609999999962e-05, 9.60700...</msg>
<status status="PASS" starttime="20201029 12:45:21.986" endtime="20201029 12:45:21.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.008" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:45:22.005" endtime="20201029 12:45:22.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.015" level="INFO">VALUE: [9.623699999999902e-05, 9.561100000000239e-05, 9.567999999999383e-05, 9.556900000000368e-05, 9.616699999999423e-05, 9.588900000000178e-05, 9.551399999999793e-05, 9.63609999999962e-05, 9.607000000000365e-05, 9.622299999999945e-05, 9.618100000000074e-05, 9.595800000000015e-05, 9.590199999999494e-05, 9.590200000000187e-05, 9.599999999999886e-05, 9.590300000000135e-05, 9.615299999999466e-05, 9.570899999999938e-05, 9.611100000000289e-05, 9.634700000000357e-05, 9.633400000000347e-05, 9.579199999999732e-05, 9.601399999999843e-05, 9.636100000000314e-05, 9.58880000000023e-05, 9.59859999999993e-05, 9.634700000000357e-05, 9.616700000000117e-05, 9.613899999999509e-05, 9.588900000000178e-05, 9.643099999999405e-05, 9.569499999999981e-05, 9.634800000000304e-05, 9.612500000000246e-05, 9.623600000000648e-05, 9.60000000000058e-05, 9.579099999999785e-05, 9.608299999999681e-05, 9.576399999999818e-05, 9.576399999999818e-05, 9.577799999999775e-05, 9.579199999999732e-05, 9.63200000000039e-05, 9.562500000000196e-05, 9.569400000000033e-05, 9.598699999999877e-05, 9.622199999999997e-05, 9.626400000000562e-05, 9.576400000000512e-05, 9.556900000000368e-05]</msg>
<status status="PASS" starttime="20201029 12:45:22.011" endtime="20201029 12:45:22.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.997" endtime="20201029 12:45:22.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.028" endtime="20201029 12:45:22.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.024" endtime="20201029 12:45:22.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.021" endtime="20201029 12:45:22.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.527" endtime="20201029 12:45:22.052"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.525" endtime="20201029 12:45:22.053"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.076" endtime="20201029 12:45:22.098"></status>
</kw>
<msg timestamp="20201029 12:45:22.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.072" endtime="20201029 12:45:22.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.101" endtime="20201029 12:45:22.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.108" endtime="20201029 12:45:22.111"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.065" endtime="20201029 12:45:22.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.059" endtime="20201029 12:45:22.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.131" endtime="20201029 12:45:22.471"></status>
</kw>
<msg timestamp="20201029 12:45:22.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041586111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.128" endtime="20201029 12:45:22.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041586111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041682819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.480" endtime="20201029 12:45:22.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.499" endtime="20201029 12:45:22.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.121" endtime="20201029 12:45:22.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.116" endtime="20201029 12:45:22.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:22.516" level="INFO">${RESULT} = [{'diff': 9.67080000000009e-05}, {'diff': 9.669400000000133e-05}, {'diff': 9.693099999999455e-05}, {'diff': 9.74730000000007e-05}, {'diff': 9.72080000000014e-05}, {'diff': 9.747200000000122e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:22.507" endtime="20201029 12:45:22.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:22.525" level="INFO">${ACCURACY} = {'diff': [9.67080000000009e-05, 9.669400000000133e-05, 9.693099999999455e-05, 9.74730000000007e-05, 9.72080000000014e-05, 9.747200000000122e-05, 9.691700000000192e-05, 9.681999999999746e-05, 9.7458999...</msg>
<status status="PASS" starttime="20201029 12:45:22.518" endtime="20201029 12:45:22.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.536" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:45:22.534" endtime="20201029 12:45:22.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.542" level="INFO">VALUE: [9.67080000000009e-05, 9.669400000000133e-05, 9.693099999999455e-05, 9.74730000000007e-05, 9.72080000000014e-05, 9.747200000000122e-05, 9.691700000000192e-05, 9.681999999999746e-05, 9.745899999999419e-05, 9.679199999999832e-05, 9.722300000000045e-05, 9.655600000000458e-05, 9.658299999999731e-05, 9.712500000000346e-05, 9.713900000000303e-05, 9.701399999999943e-05, 9.658300000000425e-05, 9.677799999999875e-05, 9.690300000000235e-05, 9.734699999999763e-05, 9.701399999999943e-05, 9.694400000000158e-05, 9.733400000000447e-05, 9.656900000000468e-05, 9.734699999999763e-05, 9.688900000000278e-05, 9.690299999999541e-05, 9.679199999999832e-05, 9.658300000000425e-05, 9.737499999999677e-05, 9.659799999999635e-05, 9.74730000000007e-05, 9.708399999999728e-05, 9.745900000000113e-05, 9.712500000000346e-05, 9.723600000000054e-05, 9.701400000000637e-05, 9.701399999999943e-05, 9.734700000000457e-05, 9.656899999999774e-05, 9.688899999999584e-05, 9.701400000000637e-05, 9.701399999999943e-05, 9.681999999999746e-05, 9.68330000000045e-05, 9.740300000000285e-05, 9.701299999999996e-05, 9.672200000000047e-05, 9.656899999999774e-05, 9.744399999999515e-05]</msg>
<status status="PASS" starttime="20201029 12:45:22.539" endtime="20201029 12:45:22.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.527" endtime="20201029 12:45:22.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.562" endtime="20201029 12:45:22.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.557" endtime="20201029 12:45:22.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.554" endtime="20201029 12:45:22.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.055" endtime="20201029 12:45:22.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.054" endtime="20201029 12:45:22.588"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.612" endtime="20201029 12:45:22.641"></status>
</kw>
<msg timestamp="20201029 12:45:22.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.608" endtime="20201029 12:45:22.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.645" endtime="20201029 12:45:22.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.652" endtime="20201029 12:45:22.656"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.601" endtime="20201029 12:45:22.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.595" endtime="20201029 12:45:22.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.676" endtime="20201029 12:45:22.988"></status>
</kw>
<msg timestamp="20201029 12:45:22.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045941153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.673" endtime="20201029 12:45:22.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045843458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045941153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.992" endtime="20201029 12:45:22.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.000" endtime="20201029 12:45:23.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.666" endtime="20201029 12:45:23.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.661" endtime="20201029 12:45:23.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.008" level="INFO">${RESULT} = [{'diff': 9.769500000000181e-05}, {'diff': 9.823700000000102e-05}, {'diff': 9.844499999999562e-05}, {'diff': 9.790299999999641e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.833299999999906e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:23.004" endtime="20201029 12:45:23.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:23.013" level="INFO">${ACCURACY} = {'diff': [9.769500000000181e-05, 9.823700000000102e-05, 9.844499999999562e-05, 9.790299999999641e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.766599999999626e-05, 9.776400000000018e-05, 9.7555...</msg>
<status status="PASS" starttime="20201029 12:45:23.009" endtime="20201029 12:45:23.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.018" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:45:23.017" endtime="20201029 12:45:23.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.021" level="INFO">VALUE: [9.769500000000181e-05, 9.823700000000102e-05, 9.844499999999562e-05, 9.790299999999641e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.766599999999626e-05, 9.776400000000018e-05, 9.755599999999864e-05, 9.823600000000154e-05, 9.845799999999572e-05, 9.800000000000086e-05, 9.772200000000147e-05, 9.811099999999795e-05, 9.811200000000436e-05, 9.781899999999899e-05, 9.842999999999658e-05, 9.754199999999907e-05, 9.77080000000019e-05, 9.765299999999616e-05, 9.8028e-05, 9.825000000000111e-05, 9.757000000000515e-05, 9.78059999999989e-05, 9.829199999999982e-05, 9.826399999999375e-05, 9.834700000000557e-05, 9.801400000000043e-05, 9.791700000000292e-05, 9.8028e-05, 9.800000000000086e-05, 9.845799999999572e-05, 9.83609999999982e-05, 9.779199999999932e-05, 9.844500000000256e-05, 9.844499999999562e-05, 9.767999999999583e-05, 9.790199999999694e-05, 9.813899999999709e-05, 9.780499999999942e-05, 9.800000000000086e-05, 9.756999999999821e-05, 9.834700000000557e-05, 9.834700000000557e-05, 9.790299999999641e-05, 9.790299999999641e-05, 9.766700000000267e-05, 9.78880000000043e-05, 9.847200000000222e-05, 9.845800000000265e-05]</msg>
<status status="PASS" starttime="20201029 12:45:23.019" endtime="20201029 12:45:23.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.014" endtime="20201029 12:45:23.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.032" endtime="20201029 12:45:23.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.026" endtime="20201029 12:45:23.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.024" endtime="20201029 12:45:23.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.590" endtime="20201029 12:45:23.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.588" endtime="20201029 12:45:23.057"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.080" endtime="20201029 12:45:23.103"></status>
</kw>
<msg timestamp="20201029 12:45:23.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.077" endtime="20201029 12:45:23.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.106" endtime="20201029 12:45:23.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.113" endtime="20201029 12:45:23.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.069" endtime="20201029 12:45:23.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.064" endtime="20201029 12:45:23.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.130" endtime="20201029 12:45:23.416"></status>
</kw>
<msg timestamp="20201029 12:45:23.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.129" endtime="20201029 12:45:23.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041415431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041514333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.420" endtime="20201029 12:45:23.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.429" endtime="20201029 12:45:23.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.125" endtime="20201029 12:45:23.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.121" endtime="20201029 12:45:23.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.437" level="INFO">${RESULT} = [{'diff': 9.890199999999794e-05}, {'diff': 9.890299999999741e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.870799999999597e-05}, {'diff': 9.945800000000365e-05}, {'diff': 9.916699999999723e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:23.433" endtime="20201029 12:45:23.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:23.445" level="INFO">${ACCURACY} = {'diff': [9.890199999999794e-05, 9.890299999999741e-05, 9.934699999999963e-05, 9.870799999999597e-05, 9.945800000000365e-05, 9.916699999999723e-05, 9.906999999999971e-05, 9.901400000000143e-05, 9.8888...</msg>
<status status="PASS" starttime="20201029 12:45:23.438" endtime="20201029 12:45:23.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.451" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:45:23.450" endtime="20201029 12:45:23.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.453" level="INFO">VALUE: [9.890199999999794e-05, 9.890299999999741e-05, 9.934699999999963e-05, 9.870799999999597e-05, 9.945800000000365e-05, 9.916699999999723e-05, 9.906999999999971e-05, 9.901400000000143e-05, 9.888899999999784e-05, 9.924999999999518e-05, 9.909699999999938e-05, 9.944399999999715e-05, 9.901400000000143e-05, 9.911099999999895e-05, 9.858299999999931e-05, 9.934699999999963e-05, 9.869500000000281e-05, 9.890300000000435e-05, 9.890300000000435e-05, 9.93609999999992e-05, 9.915199999999819e-05, 9.879100000000085e-05, 9.913899999999809e-05, 9.879100000000085e-05, 9.90139999999945e-05, 9.877799999999382e-05, 9.856999999999921e-05, 9.92359999999956e-05, 9.863899999999759e-05, 9.945800000000365e-05, 9.945900000000313e-05, 9.902700000000153e-05, 9.863900000000453e-05, 9.890199999999794e-05, 9.899999999999493e-05, 9.890299999999741e-05, 9.866699999999673e-05, 9.913899999999809e-05, 9.866700000000367e-05, 9.866699999999673e-05, 9.912499999999852e-05, 9.925000000000211e-05, 9.911200000000536e-05, 9.912499999999852e-05, 9.947199999999629e-05, 9.9028000000001e-05, 9.893099999999655e-05, 9.855599999999964e-05, 9.884699999999913e-05, 9.92359999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:45:23.452" endtime="20201029 12:45:23.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.446" endtime="20201029 12:45:23.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.459" endtime="20201029 12:45:23.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.457" endtime="20201029 12:45:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.456" endtime="20201029 12:45:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.059" endtime="20201029 12:45:23.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.058" endtime="20201029 12:45:23.480"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.491" endtime="20201029 12:45:23.511"></status>
</kw>
<msg timestamp="20201029 12:45:23.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.489" endtime="20201029 12:45:23.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.513" endtime="20201029 12:45:23.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.516" endtime="20201029 12:45:23.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.486" endtime="20201029 12:45:23.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.484" endtime="20201029 12:45:23.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.527" endtime="20201029 12:45:23.863"></status>
</kw>
<msg timestamp="20201029 12:45:23.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.525" endtime="20201029 12:45:23.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024612542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024712125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.872" endtime="20201029 12:45:23.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.890" endtime="20201029 12:45:23.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.522" endtime="20201029 12:45:23.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.520" endtime="20201029 12:45:23.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.907" level="INFO">${RESULT} = [{'diff': 9.958300000000031e-05}, {'diff': 0.00010024999999999964}, {'diff': 0.00010020799999999747}, {'diff': 9.96670000000012e-05}, {'diff': 0.00010034699999999716}, {'diff': 9.977800000000175e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:23.899" endtime="20201029 12:45:23.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:23.918" level="INFO">${ACCURACY} = {'diff': [9.958300000000031e-05, 0.00010024999999999964, 0.00010020799999999747, 9.96670000000012e-05, 0.00010034699999999716, 9.977800000000175e-05, 9.990299999999841e-05, 9.965199999999869e-05, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:23.909" endtime="20201029 12:45:23.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.929" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:45:23.927" endtime="20201029 12:45:23.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.935" level="INFO">VALUE: [9.958300000000031e-05, 0.00010024999999999964, 0.00010020799999999747, 9.96670000000012e-05, 0.00010034699999999716, 9.977800000000175e-05, 9.990299999999841e-05, 9.965199999999869e-05, 0.00010024999999999964, 9.977699999999881e-05, 0.00010033299999999759, 9.977800000000175e-05, 9.962499999999902e-05, 0.0001003610000000002, 9.991700000000145e-05, 0.00010044499999999762, 9.979200000000132e-05, 0.00010002699999999906, 0.00010034700000000063, 9.979099999999838e-05, 9.994400000000112e-05, 9.977799999999828e-05, 9.995799999999722e-05, 0.00010023600000000008, 0.00010047200000000076, 0.0001004869999999998, 9.957000000000021e-05, 9.957000000000021e-05, 9.959699999999988e-05, 9.96939999999974e-05, 9.969400000000087e-05, 0.00010034699999999716, 9.956900000000074e-05, 0.00010045800000000119, 0.00010023600000000008, 9.990299999999841e-05, 0.00010045900000000066, 9.958300000000031e-05, 9.968100000000077e-05, 0.00010001300000000296, 9.956899999999727e-05, 9.966599999999826e-05, 9.962500000000249e-05, 0.00010001400000000243, 9.995899999999669e-05, 9.955600000000064e-05, 0.00010034700000000063, 0.00010045900000000066, 0.00010002799999999853, 0.00010024999999999964]</msg>
<status status="PASS" starttime="20201029 12:45:23.932" endtime="20201029 12:45:23.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.920" endtime="20201029 12:45:23.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.947" endtime="20201029 12:45:23.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.943" endtime="20201029 12:45:23.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.940" endtime="20201029 12:45:23.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.481" endtime="20201029 12:45:23.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.481" endtime="20201029 12:45:23.972"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.995" endtime="20201029 12:45:24.018"></status>
</kw>
<msg timestamp="20201029 12:45:24.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.992" endtime="20201029 12:45:24.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.021" endtime="20201029 12:45:24.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.028" endtime="20201029 12:45:24.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.985" endtime="20201029 12:45:24.033"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.979" endtime="20201029 12:45:24.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.051" endtime="20201029 12:45:24.403"></status>
</kw>
<msg timestamp="20201029 12:45:24.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.048" endtime="20201029 12:45:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041520958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041621847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.421" endtime="20201029 12:45:24.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.439" endtime="20201029 12:45:24.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.041" endtime="20201029 12:45:24.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.036" endtime="20201029 12:45:24.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.458" level="INFO">${RESULT} = [{'diff': 0.00010088899999999984}, {'diff': 0.00010077799999999582}, {'diff': 0.00010124999999999718}, {'diff': 0.00010134699999999469}, {'diff': 0.00010093099999999855}, {'diff': 0.000100666999999998...</msg>
<status status="PASS" starttime="20201029 12:45:24.449" endtime="20201029 12:45:24.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:24.468" level="INFO">${ACCURACY} = {'diff': [0.00010088899999999984, 0.00010077799999999582, 0.00010124999999999718, 0.00010134699999999469, 0.00010093099999999855, 0.00010066699999999873, 0.00010090299999999941, 0.00010092999999999908...</msg>
<status status="PASS" starttime="20201029 12:45:24.461" endtime="20201029 12:45:24.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.479" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:45:24.477" endtime="20201029 12:45:24.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.485" level="INFO">VALUE: [0.00010088899999999984, 0.00010077799999999582, 0.00010124999999999718, 0.00010134699999999469, 0.00010093099999999855, 0.00010066699999999873, 0.00010090299999999941, 0.00010092999999999908, 0.00010109700000000138, 0.00010142999999999958, 0.0001008610000000007, 0.00010091699999999898, 0.00010133300000000206, 0.00010056900000000174, 0.00010104199999999564, 0.00010145899999999819, 0.00010099999999999693, 0.00010113800000000062, 0.00010066699999999873, 0.00010112500000000052, 0.00010090299999999941, 0.00010081899999999505, 0.00010079200000000232, 0.00010094499999999812, 0.00010123600000000454, 0.00010098599999999736, 0.00010150000000000436, 0.0001006809999999983, 0.00010147199999999829, 0.00010124999999999718, 0.00010111100000000095, 0.00010055500000000217, 0.00010137500000000077, 0.00010079200000000232, 0.00010129199999999589, 0.00010136099999999426, 0.00010090299999999941, 0.00010055600000000164, 0.00010065299999999916, 0.0001013480000000011, 0.00010145799999999872, 0.00010091699999999898, 0.00010136099999999426, 0.00010131899999999555, 0.00010082000000000146, 0.00010079199999999539, 0.00010123600000000454, 0.00010145899999999819, 0.00010066699999999873, 0.0001013480000000011]</msg>
<status status="PASS" starttime="20201029 12:45:24.481" endtime="20201029 12:45:24.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.470" endtime="20201029 12:45:24.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:24.498" endtime="20201029 12:45:24.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.493" endtime="20201029 12:45:24.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.491" endtime="20201029 12:45:24.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.975" endtime="20201029 12:45:24.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.973" endtime="20201029 12:45:24.523"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.547" endtime="20201029 12:45:24.572"></status>
</kw>
<msg timestamp="20201029 12:45:24.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.544" endtime="20201029 12:45:24.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.575" endtime="20201029 12:45:24.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.581" endtime="20201029 12:45:24.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.536" endtime="20201029 12:45:24.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.530" endtime="20201029 12:45:24.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.606" endtime="20201029 12:45:24.949"></status>
</kw>
<msg timestamp="20201029 12:45:24.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044745361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.602" endtime="20201029 12:45:24.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044642903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044745361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.958" endtime="20201029 12:45:24.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.977" endtime="20201029 12:45:24.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.595" endtime="20201029 12:45:24.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.590" endtime="20201029 12:45:24.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.994" level="INFO">${RESULT} = [{'diff': 0.00010245799999999972}, {'diff': 0.00010188900000000084}, {'diff': 0.00010175000000000461}, {'diff': 0.0001020139999999975}, {'diff': 0.00010245899999999919}, {'diff': 0.0001015700000000022...</msg>
<status status="PASS" starttime="20201029 12:45:24.985" endtime="20201029 12:45:24.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:25.004" level="INFO">${ACCURACY} = {'diff': [0.00010245799999999972, 0.00010188900000000084, 0.00010175000000000461, 0.0001020139999999975, 0.00010245899999999919, 0.00010157000000000221, 0.00010222299999999851, 0.00010188800000000137,...</msg>
<status status="PASS" starttime="20201029 12:45:24.996" endtime="20201029 12:45:25.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.015" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:45:25.013" endtime="20201029 12:45:25.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.022" level="INFO">VALUE: [0.00010245799999999972, 0.00010188900000000084, 0.00010175000000000461, 0.0001020139999999975, 0.00010245899999999919, 0.00010157000000000221, 0.00010222299999999851, 0.00010188800000000137, 0.0001016939999999994, 0.00010207000000000271, 0.0001020139999999975, 0.00010197199999999879, 0.00010224999999999818, 0.00010204099999999716, 0.00010158400000000178, 0.00010220899999999894, 0.0001016939999999994, 0.00010201300000000496, 0.00010176399999999725, 0.00010188900000000084, 0.00010199999999999793, 0.00010156900000000274, 0.00010184700000000213, 0.00010169499999999887, 0.00010177799999999682, 0.00010213800000000162, 0.00010201400000000443, 0.00010199999999999793, 0.0001022359999999986, 0.00010222199999999904, 0.0001023610000000022, 0.00010212500000000152, 0.0001016809999999993, 0.00010190300000000041, 0.0001022359999999986, 0.0001019860000000053, 0.00010199999999999793, 0.00010158300000000231, 0.00010167999999999983, 0.00010231899999999655, 0.00010208299999999587, 0.00010202799999999707, 0.00010215300000000066, 0.00010224999999999818, 0.00010234700000000263, 0.00010222199999999904, 0.0001018889999999939, 0.0001015559999999957, 0.0001020139999999975, 0.0001021939999999999]</msg>
<status status="PASS" starttime="20201029 12:45:25.018" endtime="20201029 12:45:25.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.006" endtime="20201029 12:45:25.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.038" endtime="20201029 12:45:25.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.032" endtime="20201029 12:45:25.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.029" endtime="20201029 12:45:25.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.525" endtime="20201029 12:45:25.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.524" endtime="20201029 12:45:25.063"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.086" endtime="20201029 12:45:25.109"></status>
</kw>
<msg timestamp="20201029 12:45:25.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.083" endtime="20201029 12:45:25.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.113" endtime="20201029 12:45:25.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.119" endtime="20201029 12:45:25.123"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.075" endtime="20201029 12:45:25.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.069" endtime="20201029 12:45:25.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.143" endtime="20201029 12:45:25.487"></status>
</kw>
<msg timestamp="20201029 12:45:25.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.140" endtime="20201029 12:45:25.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042003528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.496" endtime="20201029 12:45:25.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.515" endtime="20201029 12:45:25.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.133" endtime="20201029 12:45:25.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.128" endtime="20201029 12:45:25.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.533" level="INFO">${RESULT} = [{'diff': 0.00010280500000000442}, {'diff': 0.00010347200000000029}, {'diff': 0.00010345800000000072}, {'diff': 0.00010279199999999739}, {'diff': 0.00010287500000000227}, {'diff': 0.000103445000000000...</msg>
<status status="PASS" starttime="20201029 12:45:25.524" endtime="20201029 12:45:25.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:25.543" level="INFO">${ACCURACY} = {'diff': [0.00010280500000000442, 0.00010347200000000029, 0.00010345800000000072, 0.00010279199999999739, 0.00010287500000000227, 0.00010344500000000062, 0.00010345900000000019, 0.0001030139999999985,...</msg>
<status status="PASS" starttime="20201029 12:45:25.535" endtime="20201029 12:45:25.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.555" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:45:25.552" endtime="20201029 12:45:25.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.560" level="INFO">VALUE: [0.00010280500000000442, 0.00010347200000000029, 0.00010345800000000072, 0.00010279199999999739, 0.00010287500000000227, 0.00010344500000000062, 0.00010345900000000019, 0.0001030139999999985, 0.00010263800000000212, 0.00010255500000000417, 0.00010279099999999791, 0.00010274999999999868, 0.00010266700000000073, 0.00010279199999999739, 0.00010341700000000148, 0.00010269499999999987, 0.00010334699999999669, 0.00010299999999999893, 0.00010311199999999549, 0.00010258299999999637, 0.00010347200000000029, 0.00010326399999999875, 0.0001028610000000027, 0.00010288900000000184, 0.00010312499999999558, 0.00010344400000000115, 0.00010291700000000098, 0.00010334700000000363, 0.00010331999999999703, 0.0001033610000000032, 0.0001032359999999996, 0.00010255499999999723, 0.00010249999999999843, 0.000102513999999998, 0.00010320800000000047, 0.0001025280000000045, 0.00010331900000000449, 0.00010311100000000295, 0.00010322200000000004, 0.00010277799999999782, 0.0001033480000000031, 0.0001029160000000015, 0.00010279099999999791, 0.00010279100000000485, 0.00010266700000000073, 0.00010254199999999714, 0.00010309700000000338, 0.0001030139999999985, 0.0001027359999999991, 0.00010277799999999782]</msg>
<status status="PASS" starttime="20201029 12:45:25.557" endtime="20201029 12:45:25.562"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.545" endtime="20201029 12:45:25.563"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.573" endtime="20201029 12:45:25.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.569" endtime="20201029 12:45:25.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.566" endtime="20201029 12:45:25.597"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.065" endtime="20201029 12:45:25.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.064" endtime="20201029 12:45:25.598"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.622" endtime="20201029 12:45:25.644"></status>
</kw>
<msg timestamp="20201029 12:45:25.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.618" endtime="20201029 12:45:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.648" endtime="20201029 12:45:25.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.655" endtime="20201029 12:45:25.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.611" endtime="20201029 12:45:25.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.605" endtime="20201029 12:45:25.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.679" endtime="20201029 12:45:26.021"></status>
</kw>
<msg timestamp="20201029 12:45:26.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042422528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.675" endtime="20201029 12:45:26.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042422528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.031" endtime="20201029 12:45:26.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.049" endtime="20201029 12:45:26.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.668" endtime="20201029 12:45:26.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.663" endtime="20201029 12:45:26.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.067" level="INFO">${RESULT} = [{'diff': 0.00010381899999999805}, {'diff': 0.00010380500000000542}, {'diff': 0.00010355499999999823}, {'diff': 0.0001035689999999978}, {'diff': 0.0001035559999999977}, {'diff': 0.00010359800000000335...</msg>
<status status="PASS" starttime="20201029 12:45:26.058" endtime="20201029 12:45:26.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:26.078" level="INFO">${ACCURACY} = {'diff': [0.00010381899999999805, 0.00010380500000000542, 0.00010355499999999823, 0.0001035689999999978, 0.0001035559999999977, 0.00010359800000000335, 0.0001035559999999977, 0.00010404199999999864, 0...</msg>
<status status="PASS" starttime="20201029 12:45:26.069" endtime="20201029 12:45:26.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.089" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:45:26.087" endtime="20201029 12:45:26.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.094" level="INFO">VALUE: [0.00010381899999999805, 0.00010380500000000542, 0.00010355499999999823, 0.0001035689999999978, 0.0001035559999999977, 0.00010359800000000335, 0.0001035559999999977, 0.00010404199999999864, 0.00010372200000000054, 0.00010383300000000456, 0.00010401300000000002, 0.00010437500000000377, 0.00010377699999999934, 0.00010355499999999823, 0.00010355499999999823, 0.00010402799999999907, 0.00010431999999999803, 0.0001036810000000013, 0.00010432000000000496, 0.00010356999999999728, 0.00010362499999999608, 0.00010452799999999957, 0.00010355499999999823, 0.00010409699999999744, 0.0001036940000000014, 0.00010425000000000018, 0.00010437500000000377, 0.00010445900000000119, 0.00010437500000000377, 0.00010447300000000076, 0.0001040139999999995, 0.00010379099999999891, 0.00010370800000000097, 0.00010405499999999873, 0.00010355500000000517, 0.00010444399999999521, 0.00010379199999999839, 0.00010445800000000172, 0.00010402799999999907, 0.00010436200000000367, 0.00010357000000000421, 0.00010445800000000172, 0.00010411100000000395, 0.00010399999999999993, 0.00010445799999999478, 0.00010411099999999701, 0.00010399999999999993, 0.00010369500000000087, 0.00010409700000000438, 0.0001043339999999976]</msg>
<status status="PASS" starttime="20201029 12:45:26.091" endtime="20201029 12:45:26.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.080" endtime="20201029 12:45:26.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.108" endtime="20201029 12:45:26.129"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.103" endtime="20201029 12:45:26.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.100" endtime="20201029 12:45:26.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.600" endtime="20201029 12:45:26.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.599" endtime="20201029 12:45:26.133"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.156" endtime="20201029 12:45:26.179"></status>
</kw>
<msg timestamp="20201029 12:45:26.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.153" endtime="20201029 12:45:26.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.183" endtime="20201029 12:45:26.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.189" endtime="20201029 12:45:26.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.145" endtime="20201029 12:45:26.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.139" endtime="20201029 12:45:26.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.213" endtime="20201029 12:45:26.559"></status>
</kw>
<msg timestamp="20201029 12:45:26.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042325917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.210" endtime="20201029 12:45:26.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042325917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.569" endtime="20201029 12:45:26.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.587" endtime="20201029 12:45:26.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.202" endtime="20201029 12:45:26.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.197" endtime="20201029 12:45:26.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.605" level="INFO">${RESULT} = [{'diff': 0.00010490200000000394}, {'diff': 0.00010463900000000359}, {'diff': 0.00010534699999999869}, {'diff': 0.00010512500000000452}, {'diff': 0.00010534699999999869}, {'diff': 0.000105347999999998...</msg>
<status status="PASS" starttime="20201029 12:45:26.596" endtime="20201029 12:45:26.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:26.614" level="INFO">${ACCURACY} = {'diff': [0.00010490200000000394, 0.00010463900000000359, 0.00010534699999999869, 0.00010512500000000452, 0.00010534699999999869, 0.00010534799999999817, 0.00010466700000000273, 0.00010512499999999758...</msg>
<status status="PASS" starttime="20201029 12:45:26.607" endtime="20201029 12:45:26.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.625" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:45:26.623" endtime="20201029 12:45:26.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.630" level="INFO">VALUE: [0.00010490200000000394, 0.00010463900000000359, 0.00010534699999999869, 0.00010512500000000452, 0.00010534699999999869, 0.00010534799999999817, 0.00010466700000000273, 0.00010512499999999758, 0.00010540299999999697, 0.00010465300000000316, 0.00010511200000000442, 0.00010531899999999955, 0.00010540299999999697, 0.00010458299999999837, 0.00010516699999999629, 0.00010502800000000007, 0.0001048889999999969, 0.00010522200000000204, 0.00010513899999999715, 0.00010544499999999568, 0.00010523700000000108, 0.00010512499999999758, 0.00010515300000000366, 0.00010534699999999869, 0.00010509699999999844, 0.00010466699999999579, 0.00010490300000000341, 0.0001052360000000016, 0.00010458400000000478, 0.00010483299999999862, 0.0001046810000000023, 0.00010479099999999991, 0.00010545800000000272, 0.0001052360000000016, 0.00010481899999999905, 0.0001045689999999988, 0.00010455600000000564, 0.00010516700000000323, 0.00010534699999999869, 0.00010511099999999801, 0.00010545900000000219, 0.00010461100000000445, 0.00010458299999999837, 0.00010455499999999923, 0.00010477799999999982, 0.00010543100000000305, 0.00010545799999999578, 0.0001048889999999969, 0.00010545799999999578, 0.00010545900000000219]</msg>
<status status="PASS" starttime="20201029 12:45:26.627" endtime="20201029 12:45:26.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.616" endtime="20201029 12:45:26.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.643" endtime="20201029 12:45:26.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.639" endtime="20201029 12:45:26.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.636" endtime="20201029 12:45:26.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.135" endtime="20201029 12:45:26.668"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.134" endtime="20201029 12:45:26.669"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.692" endtime="20201029 12:45:26.717"></status>
</kw>
<msg timestamp="20201029 12:45:26.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.688" endtime="20201029 12:45:26.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.720" endtime="20201029 12:45:26.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.727" endtime="20201029 12:45:26.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.681" endtime="20201029 12:45:26.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.675" endtime="20201029 12:45:26.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.751" endtime="20201029 12:45:27.074"></status>
</kw>
<msg timestamp="20201029 12:45:27.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044035889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044142236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.747" endtime="20201029 12:45:27.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044035889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044142236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.084" endtime="20201029 12:45:27.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.102" endtime="20201029 12:45:27.106"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.740" endtime="20201029 12:45:27.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.735" endtime="20201029 12:45:27.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.120" level="INFO">${RESULT} = [{'diff': 0.00010634699999999969}, {'diff': 0.00010611099999999901}, {'diff': 0.00010600000000000193}, {'diff': 0.00010577800000000082}, {'diff': 0.00010563899999999765}, {'diff': 0.000106347999999999...</msg>
<status status="PASS" starttime="20201029 12:45:27.111" endtime="20201029 12:45:27.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:27.129" level="INFO">${ACCURACY} = {'diff': [0.00010634699999999969, 0.00010611099999999901, 0.00010600000000000193, 0.00010577800000000082, 0.00010563899999999765, 0.00010634799999999917, 0.00010649999999999549, 0.00010645799999999678...</msg>
<status status="PASS" starttime="20201029 12:45:27.122" endtime="20201029 12:45:27.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.140" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:45:27.138" endtime="20201029 12:45:27.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.146" level="INFO">VALUE: [0.00010634699999999969, 0.00010611099999999901, 0.00010600000000000193, 0.00010577800000000082, 0.00010563899999999765, 0.00010634799999999917, 0.00010649999999999549, 0.00010645799999999678, 0.0001060140000000015, 0.0001058889999999979, 0.0001058889999999979, 0.00010612499999999858, 0.0001055689999999998, 0.00010591700000000398, 0.00010624999999999524, 0.00010569500000000287, 0.00010576400000000125, 0.00010588799999999843, 0.00010645799999999678, 0.00010554100000000066, 0.00010601399999999456, 0.00010568000000000383, 0.00010602800000000107, 0.0001057219999999956, 0.00010608399999999935, 0.00010558399999999885, 0.0001058889999999979, 0.00010587499999999833, 0.0001062219999999961, 0.00010623599999999567, 0.00010568000000000383, 0.0001062360000000026, 0.0001056810000000033, 0.00010574999999999474, 0.00010569500000000287, 0.00010612499999999858, 0.00010611199999999849, 0.00010625000000000218, 0.0001055689999999998, 0.0001055689999999998, 0.0001055689999999998, 0.00010591700000000398, 0.00010561100000000545, 0.00010612499999999858, 0.00010643100000000405, 0.0001056810000000033, 0.00010636200000000567, 0.00010579100000000091, 0.00010633300000000012, 0.0001060140000000015]</msg>
<status status="PASS" starttime="20201029 12:45:27.142" endtime="20201029 12:45:27.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.131" endtime="20201029 12:45:27.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.160" endtime="20201029 12:45:27.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.154" endtime="20201029 12:45:27.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.151" endtime="20201029 12:45:27.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.671" endtime="20201029 12:45:27.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.669" endtime="20201029 12:45:27.185"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.209" endtime="20201029 12:45:27.232"></status>
</kw>
<msg timestamp="20201029 12:45:27.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.205" endtime="20201029 12:45:27.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.235" endtime="20201029 12:45:27.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.241" endtime="20201029 12:45:27.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.198" endtime="20201029 12:45:27.247"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.192" endtime="20201029 12:45:27.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.266" endtime="20201029 12:45:27.629"></status>
</kw>
<msg timestamp="20201029 12:45:27.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042162389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042269639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.262" endtime="20201029 12:45:27.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042162389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042269639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.638" endtime="20201029 12:45:27.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.659" endtime="20201029 12:45:27.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.255" endtime="20201029 12:45:27.667"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.250" endtime="20201029 12:45:27.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.681" level="INFO">${RESULT} = [{'diff': 0.00010724999999999624}, {'diff': 0.00010686099999999976}, {'diff': 0.00010744500000000462}, {'diff': 0.00010747199999999735}, {'diff': 0.00010680499999999454}, {'diff': 0.000106944999999997...</msg>
<status status="PASS" starttime="20201029 12:45:27.671" endtime="20201029 12:45:27.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:27.694" level="INFO">${ACCURACY} = {'diff': [0.00010724999999999624, 0.00010686099999999976, 0.00010744500000000462, 0.00010747199999999735, 0.00010680499999999454, 0.00010694499999999718, 0.00010666599999999832, 0.00010681900000000105...</msg>
<status status="PASS" starttime="20201029 12:45:27.684" endtime="20201029 12:45:27.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.708" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:45:27.705" endtime="20201029 12:45:27.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.715" level="INFO">VALUE: [0.00010724999999999624, 0.00010686099999999976, 0.00010744500000000462, 0.00010747199999999735, 0.00010680499999999454, 0.00010694499999999718, 0.00010666599999999832, 0.00010681900000000105, 0.00010724999999999624, 0.00010690299999999847, 0.00010669499999999693, 0.00010717999999999839, 0.0001070140000000025, 0.00010679200000000139, 0.00010701299999999608, 0.00010731900000000155, 0.00010663899999999865, 0.00010716699999999829, 0.00010726399999999581, 0.00010665299999999822, 0.0001070140000000025, 0.00010679200000000139, 0.00010745899999999725, 0.0001070140000000025, 0.00010732000000000103, 0.00010736100000000026, 0.00010734700000000069, 0.0001066940000000044, 0.00010679200000000139, 0.00010725000000000318, 0.00010694499999999718, 0.00010658399999999985, 0.00010709700000000044, 0.0001065560000000007, 0.00010669399999999746, 0.0001065690000000008, 0.00010668000000000483, 0.00010745799999999778, 0.00010745799999999778, 0.0001065560000000007, 0.00010734700000000069, 0.0001068889999999989, 0.0001073340000000006, 0.00010666599999999832, 0.00010690299999999847, 0.00010726400000000275, 0.00010699999999999599, 0.00010655499999999429, 0.00010712499999999958, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201029 12:45:27.711" endtime="20201029 12:45:27.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.696" endtime="20201029 12:45:27.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.731" endtime="20201029 12:45:27.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.726" endtime="20201029 12:45:27.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.722" endtime="20201029 12:45:27.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.187" endtime="20201029 12:45:27.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.186" endtime="20201029 12:45:27.759"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.790" endtime="20201029 12:45:27.815"></status>
</kw>
<msg timestamp="20201029 12:45:27.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.786" endtime="20201029 12:45:27.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.819" endtime="20201029 12:45:27.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.826" endtime="20201029 12:45:27.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.776" endtime="20201029 12:45:27.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.768" endtime="20201029 12:45:27.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.852" endtime="20201029 12:45:28.197"></status>
</kw>
<msg timestamp="20201029 12:45:28.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053787847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053895764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.849" endtime="20201029 12:45:28.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.053787847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.053895764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.206" endtime="20201029 12:45:28.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.224" endtime="20201029 12:45:28.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.841" endtime="20201029 12:45:28.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.835" endtime="20201029 12:45:28.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.242" level="INFO">${RESULT} = [{'diff': 0.00010791699999999904}, {'diff': 0.00010848599999999792}, {'diff': 0.00010800000000000393}, {'diff': 0.00010800000000000393}, {'diff': 0.00010824999999999724}, {'diff': 0.000108250000000004...</msg>
<status status="PASS" starttime="20201029 12:45:28.233" endtime="20201029 12:45:28.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:28.253" level="INFO">${ACCURACY} = {'diff': [0.00010791699999999904, 0.00010848599999999792, 0.00010800000000000393, 0.00010800000000000393, 0.00010824999999999724, 0.00010825000000000418, 0.00010845799999999878, 0.00010820799999999853...</msg>
<status status="PASS" starttime="20201029 12:45:28.244" endtime="20201029 12:45:28.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.264" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:45:28.262" endtime="20201029 12:45:28.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.270" level="INFO">VALUE: [0.00010791699999999904, 0.00010848599999999792, 0.00010800000000000393, 0.00010800000000000393, 0.00010824999999999724, 0.00010825000000000418, 0.00010845799999999878, 0.00010820799999999853, 0.00010826400000000375, 0.00010802800000000307, 0.00010780599999999502, 0.00010751399999999606, 0.00010801399999999656, 0.00010834799999999423, 0.00010768099999999836, 0.00010802700000000359, 0.00010799999999999699, 0.00010812500000000058, 0.00010770799999999803, 0.00010782000000000153, 0.0001082360000000046, 0.00010779200000000239, 0.0001083340000000016, 0.00010757000000000128, 0.00010811200000000049, 0.00010787500000000033, 0.00010844400000000615, 0.00010812499999999364, 0.00010824999999999724, 0.00010776399999999631, 0.0001082360000000046, 0.00010766699999999879, 0.00010801399999999656, 0.00010802800000000307, 0.00010766699999999879, 0.00010822299999999757, 0.00010831900000000255, 0.00010812500000000058, 0.00010836100000000126, 0.00010767999999999889, 0.00010834700000000169, 0.00010773599999999717, 0.00010834700000000169, 0.00010777799999999588, 0.00010790299999999947, 0.00010824999999999724, 0.00010767999999999889, 0.00010761100000000051, 0.00010791700000000598, 0.00010784700000000119]</msg>
<status status="PASS" starttime="20201029 12:45:28.267" endtime="20201029 12:45:28.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.255" endtime="20201029 12:45:28.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.283" endtime="20201029 12:45:28.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.278" endtime="20201029 12:45:28.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.276" endtime="20201029 12:45:28.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.762" endtime="20201029 12:45:28.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.760" endtime="20201029 12:45:28.308"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.331" endtime="20201029 12:45:28.355"></status>
</kw>
<msg timestamp="20201029 12:45:28.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.328" endtime="20201029 12:45:28.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.359" endtime="20201029 12:45:28.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.365" endtime="20201029 12:45:28.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.321" endtime="20201029 12:45:28.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.315" endtime="20201029 12:45:28.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.389" endtime="20201029 12:45:28.739"></status>
</kw>
<msg timestamp="20201029 12:45:28.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042152361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.386" endtime="20201029 12:45:28.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042152361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042260931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.748" endtime="20201029 12:45:28.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.767" endtime="20201029 12:45:28.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.378" endtime="20201029 12:45:28.772"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.373" endtime="20201029 12:45:28.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.785" level="INFO">${RESULT} = [{'diff': 0.00010857000000000228}, {'diff': 0.00010923599999999867}, {'diff': 0.00010879100000000391}, {'diff': 0.00010934699999999575}, {'diff': 0.0001092219999999991}, {'diff': 0.0001091250000000015...</msg>
<status status="PASS" starttime="20201029 12:45:28.776" endtime="20201029 12:45:28.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:28.794" level="INFO">${ACCURACY} = {'diff': [0.00010857000000000228, 0.00010923599999999867, 0.00010879100000000391, 0.00010934699999999575, 0.0001092219999999991, 0.00010912500000000158, 0.00010934700000000269, 0.00010936100000000226,...</msg>
<status status="PASS" starttime="20201029 12:45:28.787" endtime="20201029 12:45:28.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.805" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:45:28.803" endtime="20201029 12:45:28.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.811" level="INFO">VALUE: [0.00010857000000000228, 0.00010923599999999867, 0.00010879100000000391, 0.00010934699999999575, 0.0001092219999999991, 0.00010912500000000158, 0.00010934700000000269, 0.00010936100000000226, 0.00010940300000000097, 0.00010893000000000014, 0.00010868099999999936, 0.00010891600000000057, 0.00010949999999999849, 0.00010945799999999978, 0.00010913900000000115, 0.00010877799999999688, 0.00010868099999999936, 0.00010945899999999925, 0.00010923599999999867, 0.00010943100000000011, 0.00010877800000000382, 0.00010944400000000021, 0.00010945799999999978, 0.00010879099999999697, 0.00010868099999999936, 0.00010943100000000011, 0.00010857000000000228, 0.00010923599999999867, 0.00010879200000000339, 0.00010909800000000192, 0.00010944499999999968, 0.00010923599999999867, 0.00010945799999999978, 0.00010934700000000269, 0.00010890300000000047, 0.00010934700000000269, 0.00010934700000000269, 0.0001093340000000026, 0.0001093619999999948, 0.0001086810000000063, 0.0001085560000000027, 0.00010945799999999978, 0.00010933300000000312, 0.00010945799999999978, 0.00010912500000000158, 0.00010912500000000158, 0.00010934700000000269, 0.00010880600000000296, 0.00010913900000000115, 0.00010932000000000303]</msg>
<status status="PASS" starttime="20201029 12:45:28.808" endtime="20201029 12:45:28.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.796" endtime="20201029 12:45:28.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.823" endtime="20201029 12:45:28.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.819" endtime="20201029 12:45:28.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.816" endtime="20201029 12:45:28.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.310" endtime="20201029 12:45:28.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.309" endtime="20201029 12:45:28.862"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.887" endtime="20201029 12:45:28.911"></status>
</kw>
<msg timestamp="20201029 12:45:28.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.883" endtime="20201029 12:45:28.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.915" endtime="20201029 12:45:28.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.921" endtime="20201029 12:45:28.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.876" endtime="20201029 12:45:28.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.870" endtime="20201029 12:45:28.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.945" endtime="20201029 12:45:29.287"></status>
</kw>
<msg timestamp="20201029 12:45:29.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058759361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058869708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.942" endtime="20201029 12:45:29.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.058759361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058869708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.297" endtime="20201029 12:45:29.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.315" endtime="20201029 12:45:29.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.934" endtime="20201029 12:45:29.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.929" endtime="20201029 12:45:29.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:29.333" level="INFO">${RESULT} = [{'diff': 0.00011034699999999675}, {'diff': 0.00010979099999999797}, {'diff': 0.00011008299999999693}, {'diff': 0.00011023599999999967}, {'diff': 0.00011025000000000618}, {'diff': 0.000109903000000001...</msg>
<status status="PASS" starttime="20201029 12:45:29.324" endtime="20201029 12:45:29.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:29.342" level="INFO">${ACCURACY} = {'diff': [0.00011034699999999675, 0.00010979099999999797, 0.00011008299999999693, 0.00011023599999999967, 0.00011025000000000618, 0.00010990300000000147, 0.00010995899999999975, 0.00011011099999999607...</msg>
<status status="PASS" starttime="20201029 12:45:29.335" endtime="20201029 12:45:29.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.353" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:45:29.351" endtime="20201029 12:45:29.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.359" level="INFO">VALUE: [0.00011034699999999675, 0.00010979099999999797, 0.00011008299999999693, 0.00011023599999999967, 0.00011025000000000618, 0.00010990300000000147, 0.00010995899999999975, 0.00011011099999999607, 0.00010966599999999438, 0.00011024999999999924, 0.00011044400000000121, 0.0001102360000000066, 0.00010970800000000003, 0.00010947199999999935, 0.00011029199999999795, 0.00011023599999999967, 0.00010968100000000036, 0.00011024999999999924, 0.00010990300000000147, 0.00010958300000000337, 0.00010958299999999643, 0.00010973599999999917, 0.00010990299999999453, 0.00011023599999999967, 0.00010966700000000079, 0.00010976399999999831, 0.00010966700000000079, 0.00011034800000000317, 0.00010952799999999763, 0.00011033299999999718, 0.00010980499999999754, 0.00010958299999999643, 0.0001102360000000066, 0.00010980600000000396, 0.00010955599999999677, 0.00011040299999999503, 0.00010966700000000773, 0.0001100140000000055, 0.00010979200000001132, 0.00011011100000000995, 0.00011045800000000772, 0.00010991700000000104, 0.00011008399999999641, 0.00011036100000000326, 0.00011044500000000068, 0.00011012500000000258, 0.000110209, 0.00010955599999999677, 0.00011013799999999574, 0.00011022199999999316]</msg>
<status status="PASS" starttime="20201029 12:45:29.355" endtime="20201029 12:45:29.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.344" endtime="20201029 12:45:29.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:29.373" endtime="20201029 12:45:29.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.367" endtime="20201029 12:45:29.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.365" endtime="20201029 12:45:29.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.865" endtime="20201029 12:45:29.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.864" endtime="20201029 12:45:29.398"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.422" endtime="20201029 12:45:29.446"></status>
</kw>
<msg timestamp="20201029 12:45:29.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.419" endtime="20201029 12:45:29.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.449" endtime="20201029 12:45:29.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.456" endtime="20201029 12:45:29.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.411" endtime="20201029 12:45:29.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.405" endtime="20201029 12:45:29.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.480" endtime="20201029 12:45:29.823"></status>
</kw>
<msg timestamp="20201029 12:45:29.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042327028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042438167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.476" endtime="20201029 12:45:29.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042327028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042438167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.832" endtime="20201029 12:45:29.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.850" endtime="20201029 12:45:29.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.469" endtime="20201029 12:45:29.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.464" endtime="20201029 12:45:29.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:29.868" level="INFO">${RESULT} = [{'diff': 0.00011113899999999621}, {'diff': 0.00011097300000000032}, {'diff': 0.00011136099999999732}, {'diff': 0.0001107769999999994}, {'diff': 0.0001110549999999988}, {'diff': 0.0001112220000000011}...</msg>
<status status="PASS" starttime="20201029 12:45:29.859" endtime="20201029 12:45:29.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:29.879" level="INFO">${ACCURACY} = {'diff': [0.00011113899999999621, 0.00011097300000000032, 0.00011136099999999732, 0.0001107769999999994, 0.0001110549999999988, 0.0001112220000000011, 0.00011112499999999664, 0.00011077799999999888, 0...</msg>
<status status="PASS" starttime="20201029 12:45:29.870" endtime="20201029 12:45:29.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.890" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:45:29.888" endtime="20201029 12:45:29.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.896" level="INFO">VALUE: [0.00011113899999999621, 0.00011097300000000032, 0.00011136099999999732, 0.0001107769999999994, 0.0001110549999999988, 0.0001112220000000011, 0.00011112499999999664, 0.00011077799999999888, 0.00011077799999999888, 0.00011077800000000582, 0.00011145900000000125, 0.00011133399999999766, 0.00011084800000000367, 0.0001107769999999994, 0.00011118099999999492, 0.00011056899999999786, 0.00011125000000000024, 0.00011145799999999484, 0.00011080600000000496, 0.00011090299999999553, 0.0001113619999999968, 0.00011147200000000135, 0.00011056899999999786, 0.00011091599999999563, 0.00011090300000000247, 0.00011058299999999743, 0.0001112220000000011, 0.00011079199999999845, 0.00011136099999999732, 0.0001107220000000006, 0.00011133399999999766, 0.00011101399999999956, 0.00011091600000000257, 0.00011136099999999732, 0.00011080499999999854, 0.00011090299999999553, 0.00011056899999999786, 0.00011104200000000564, 0.00011101399999999956, 0.00011069500000000093, 0.00011136200000000374, 0.00011104099999999922, 0.00011112500000000358, 0.0001108890000000029, 0.00011145800000000178, 0.0001105690000000048, 0.00011147200000000135, 0.00011141700000000254, 0.00011077799999999888, 0.00011130599999999852]</msg>
<status status="PASS" starttime="20201029 12:45:29.893" endtime="20201029 12:45:29.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.881" endtime="20201029 12:45:29.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:29.910" endtime="20201029 12:45:29.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.905" endtime="20201029 12:45:29.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.902" endtime="20201029 12:45:29.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.401" endtime="20201029 12:45:29.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.399" endtime="20201029 12:45:29.936"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.959" endtime="20201029 12:45:29.983"></status>
</kw>
<msg timestamp="20201029 12:45:29.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.956" endtime="20201029 12:45:29.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.987" endtime="20201029 12:45:29.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.993" endtime="20201029 12:45:29.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.948" endtime="20201029 12:45:29.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.942" endtime="20201029 12:45:30.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.017" endtime="20201029 12:45:30.361"></status>
</kw>
<msg timestamp="20201029 12:45:30.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042776208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.014" endtime="20201029 12:45:30.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042664625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042776208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.370" endtime="20201029 12:45:30.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.388" endtime="20201029 12:45:30.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.006" endtime="20201029 12:45:30.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.001" endtime="20201029 12:45:30.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.406" level="INFO">${RESULT} = [{'diff': 0.00011158300000000537}, {'diff': 0.00011212499999999764}, {'diff': 0.00011233299999999918}, {'diff': 0.0001123749999999979}, {'diff': 0.00011195799999999534}, {'diff': 0.0001121249999999976...</msg>
<status status="PASS" starttime="20201029 12:45:30.397" endtime="20201029 12:45:30.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:30.417" level="INFO">${ACCURACY} = {'diff': [0.00011158300000000537, 0.00011212499999999764, 0.00011233299999999918, 0.0001123749999999979, 0.00011195799999999534, 0.00011212499999999764, 0.00011188899999999696, 0.00011247300000000182,...</msg>
<status status="PASS" starttime="20201029 12:45:30.408" endtime="20201029 12:45:30.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.428" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:45:30.426" endtime="20201029 12:45:30.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.434" level="INFO">VALUE: [0.00011158300000000537, 0.00011212499999999764, 0.00011233299999999918, 0.0001123749999999979, 0.00011195799999999534, 0.00011212499999999764, 0.00011188899999999696, 0.00011247300000000182, 0.00011236099999999832, 0.00011234699999999875, 0.00011247200000000235, 0.00011201400000000056, 0.00011202800000000013, 0.00011162500000000408, 0.00011245900000000225, 0.00011179199999999945, 0.00011209799999999798, 0.0001115560000000057, 0.00011244400000000321, 0.00011211100000000501, 0.00011244400000000321, 0.00011180599999999902, 0.00011201400000000056, 0.00011223600000000167, 0.00011193100000000261, 0.00011201399999999362, 0.0001123619999999978, 0.00011212500000000458, 0.00011190199999999706, 0.0001122499999999943, 0.00011212499999999764, 0.0001115549999999993, 0.00011190300000000347, 0.00011206899999999936, 0.00011155599999999877, 0.00011156999999999834, 0.00011245900000000225, 0.00011190299999999653, 0.00011194400000000271, 0.00011168000000000289, 0.00011148600000000092, 0.00011244399999999627, 0.00011213900000000415, 0.00011223600000000167, 0.00011213899999999721, 0.00011245900000000225, 0.00011231999999999909, 0.00011213899999999721, 0.00011187500000000433, 0.00011183300000000562]</msg>
<status status="PASS" starttime="20201029 12:45:30.431" endtime="20201029 12:45:30.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.419" endtime="20201029 12:45:30.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.447" endtime="20201029 12:45:30.468"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.442" endtime="20201029 12:45:30.470"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.440" endtime="20201029 12:45:30.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.938" endtime="20201029 12:45:30.471"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.937" endtime="20201029 12:45:30.472"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.496" endtime="20201029 12:45:30.518"></status>
</kw>
<msg timestamp="20201029 12:45:30.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.492" endtime="20201029 12:45:30.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.522" endtime="20201029 12:45:30.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.528" endtime="20201029 12:45:30.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.484" endtime="20201029 12:45:30.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.478" endtime="20201029 12:45:30.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.552" endtime="20201029 12:45:30.896"></status>
</kw>
<msg timestamp="20201029 12:45:30.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042563042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.549" endtime="20201029 12:45:30.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042563042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.905" endtime="20201029 12:45:30.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.924" endtime="20201029 12:45:30.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.541" endtime="20201029 12:45:30.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.536" endtime="20201029 12:45:30.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.942" level="INFO">${RESULT} = [{'diff': 0.00011281999999999959}, {'diff': 0.00011312499999999864}, {'diff': 0.00011347200000000335}, {'diff': 0.00011279100000000097}, {'diff': 0.00011301400000000156}, {'diff': 0.000113458000000003...</msg>
<status status="PASS" starttime="20201029 12:45:30.933" endtime="20201029 12:45:30.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:30.952" level="INFO">${ACCURACY} = {'diff': [0.00011281999999999959, 0.00011312499999999864, 0.00011347200000000335, 0.00011279100000000097, 0.00011301400000000156, 0.00011345800000000378, 0.00011344399999999727, 0.00011256899999999986...</msg>
<status status="PASS" starttime="20201029 12:45:30.945" endtime="20201029 12:45:30.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.963" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:45:30.961" endtime="20201029 12:45:30.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.969" level="INFO">VALUE: [0.00011281999999999959, 0.00011312499999999864, 0.00011347200000000335, 0.00011279100000000097, 0.00011301400000000156, 0.00011345800000000378, 0.00011344399999999727, 0.00011256899999999986, 0.00011295900000000275, 0.000112596999999999, 0.00011319500000000343, 0.00011323700000000214, 0.00011345799999999684, 0.00011288799999999849, 0.00011300000000000199, 0.00011329200000000095, 0.00011315299999999778, 0.00011302800000000113, 0.00011265299999999728, 0.00011287500000000533, 0.00011266700000000379, 0.00011268100000000336, 0.00011347199999999641, 0.00011312500000000558, 0.00011347199999999641, 0.00011340299999999803, 0.00011280600000000002, 0.00011266699999999685, 0.00011301400000000156, 0.00011295800000000328, 0.00011277800000000088, 0.00011263900000000465, 0.00011279100000000097, 0.00011318100000000386, 0.00011277699999999447, 0.0001125420000000002, 0.00011290299999999753, 0.00011334700000000669, 0.00011256999999999934, 0.00011345899999999631, 0.00011279200000000045, 0.00011312499999999864, 0.00011334699999999975, 0.00011334699999999975, 0.00011295900000000275, 0.0001125550000000003, 0.00011277800000000088, 0.00011258399999999891, 0.00011301399999999462, 0.00011279200000000045]</msg>
<status status="PASS" starttime="20201029 12:45:30.966" endtime="20201029 12:45:30.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.954" endtime="20201029 12:45:30.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.982" endtime="20201029 12:45:31.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.977" endtime="20201029 12:45:31.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.975" endtime="20201029 12:45:31.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.474" endtime="20201029 12:45:31.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.473" endtime="20201029 12:45:31.007"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.031" endtime="20201029 12:45:31.056"></status>
</kw>
<msg timestamp="20201029 12:45:31.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.027" endtime="20201029 12:45:31.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.059" endtime="20201029 12:45:31.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.066" endtime="20201029 12:45:31.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.020" endtime="20201029 12:45:31.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.014" endtime="20201029 12:45:31.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.090" endtime="20201029 12:45:31.401"></status>
</kw>
<msg timestamp="20201029 12:45:31.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044056611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044170181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.087" endtime="20201029 12:45:31.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044056611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044170181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.406" endtime="20201029 12:45:31.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.414" endtime="20201029 12:45:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.079" endtime="20201029 12:45:31.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.075" endtime="20201029 12:45:31.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.422" level="INFO">${RESULT} = [{'diff': 0.00011357000000000034}, {'diff': 0.00011356900000000086}, {'diff': 0.0001142499999999963}, {'diff': 0.00011369400000000446}, {'diff': 0.00011399999999999605}, {'diff': 0.0001136809999999974...</msg>
<status status="PASS" starttime="20201029 12:45:31.418" endtime="20201029 12:45:31.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:31.426" level="INFO">${ACCURACY} = {'diff': [0.00011357000000000034, 0.00011356900000000086, 0.0001142499999999963, 0.00011369400000000446, 0.00011399999999999605, 0.00011368099999999742, 0.00011395800000000428, 0.00011369499999999699,...</msg>
<status status="PASS" starttime="20201029 12:45:31.423" endtime="20201029 12:45:31.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.432" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:45:31.430" endtime="20201029 12:45:31.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.434" level="INFO">VALUE: [0.00011357000000000034, 0.00011356900000000086, 0.0001142499999999963, 0.00011369400000000446, 0.00011399999999999605, 0.00011368099999999742, 0.00011395800000000428, 0.00011369499999999699, 0.00011425000000000324, 0.00011415199999999931, 0.0001139299999999982, 0.00011399999999999605, 0.0001135550000000013, 0.00011354099999999478, 0.0001140970000000005, 0.00011433300000000118, 0.00011380600000000102, 0.00011357000000000034, 0.00011433400000000066, 0.00011369399999999752, 0.00011380500000000154, 0.00011412499999999964, 0.00011422199999999716, 0.00011377800000000188, 0.00011401399999999562, 0.00011361099999999957, 0.00011358399999999991, 0.00011445900000000425, 0.00011452799999999569, 0.00011366699999999785, 0.0001142220000000041, 0.00011418099999999792, 0.00011348599999999598, 0.00011383400000000016, 0.00011402800000000213, 0.00011434700000000075, 0.00011412499999999964, 0.00011411100000000007, 0.0001140550000000018, 0.00011375000000000274, 0.00011367999999999795, 0.00011356900000000086, 0.0001143749999999999, 0.00011423599999999673, 0.00011383400000000016, 0.00011438799999999999, 0.00011407000000000084, 0.00011443099999999817, 0.00011445800000000478, 0.00011356900000000086]</msg>
<status status="PASS" starttime="20201029 12:45:31.433" endtime="20201029 12:45:31.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.427" endtime="20201029 12:45:31.436"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.441" endtime="20201029 12:45:31.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.438" endtime="20201029 12:45:31.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.437" endtime="20201029 12:45:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.009" endtime="20201029 12:45:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.008" endtime="20201029 12:45:31.466"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.489" endtime="20201029 12:45:31.513"></status>
</kw>
<msg timestamp="20201029 12:45:31.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.486" endtime="20201029 12:45:31.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.517" endtime="20201029 12:45:31.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.523" endtime="20201029 12:45:31.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.478" endtime="20201029 12:45:31.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.472" endtime="20201029 12:45:31.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.547" endtime="20201029 12:45:31.889"></status>
</kw>
<msg timestamp="20201029 12:45:31.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042208875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.544" endtime="20201029 12:45:31.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042093417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042208875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.898" endtime="20201029 12:45:31.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.917" endtime="20201029 12:45:31.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.536" endtime="20201029 12:45:31.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.531" endtime="20201029 12:45:31.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.934" level="INFO">${RESULT} = [{'diff': 0.00011545799999999884}, {'diff': 0.00011457000000000134}, {'diff': 0.00011490300000000647}, {'diff': 0.00011468099999999842}, {'diff': 0.00011458300000000143}, {'diff': 0.000114943999999998...</msg>
<status status="PASS" starttime="20201029 12:45:31.926" endtime="20201029 12:45:31.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:31.945" level="INFO">${ACCURACY} = {'diff': [0.00011545799999999884, 0.00011457000000000134, 0.00011490300000000647, 0.00011468099999999842, 0.00011458300000000143, 0.00011494399999999877, 0.00011534700000000175, 0.00011481899999999517...</msg>
<status status="PASS" starttime="20201029 12:45:31.937" endtime="20201029 12:45:31.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.957" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:45:31.955" endtime="20201029 12:45:31.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.963" level="INFO">VALUE: [0.00011545799999999884, 0.00011457000000000134, 0.00011490300000000647, 0.00011468099999999842, 0.00011458300000000143, 0.00011494399999999877, 0.00011534700000000175, 0.00011481899999999517, 0.00011547199999999841, 0.00011538900000000046, 0.00011545799999999884, 0.0001154169999999996, 0.00011544499999999874, 0.00011479199999999551, 0.00011552800000000363, 0.00011458300000000143, 0.00011545899999999831, 0.00011454100000000272, 0.00011468099999999842, 0.00011512500000000064, 0.00011512500000000064, 0.00011537499999999395, 0.0001149299999999992, 0.00011509800000000098, 0.00011502700000000365, 0.00011450000000000349, 0.00011488899999999996, 0.00011458300000000143, 0.00011451400000000306, 0.00011512500000000064, 0.00011536100000000132, 0.00011531900000000261, 0.00011470799999999809, 0.00011536100000000132, 0.00011544399999999927, 0.00011467999999999895, 0.00011531900000000261, 0.00011455499999999535, 0.00011511100000000107, 0.00011501399999999662, 0.00011501400000000356, 0.00011457000000000134, 0.00011484699999999431, 0.00011512500000000064, 0.00011512500000000064, 0.00011488899999999996, 0.00011511100000000107, 0.00011545799999999884, 0.00011490300000000647, 0.00011538800000000099]</msg>
<status status="PASS" starttime="20201029 12:45:31.960" endtime="20201029 12:45:31.964"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.947" endtime="20201029 12:45:31.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.977" endtime="20201029 12:45:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.972" endtime="20201029 12:45:32.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.969" endtime="20201029 12:45:32.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.468" endtime="20201029 12:45:32.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.467" endtime="20201029 12:45:32.002"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.026" endtime="20201029 12:45:32.050"></status>
</kw>
<msg timestamp="20201029 12:45:32.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.023" endtime="20201029 12:45:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.054" endtime="20201029 12:45:32.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.060" endtime="20201029 12:45:32.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.015" endtime="20201029 12:45:32.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.009" endtime="20201029 12:45:32.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.084" endtime="20201029 12:45:32.427"></status>
</kw>
<msg timestamp="20201029 12:45:32.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043073292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.081" endtime="20201029 12:45:32.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043073292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043189347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.436" endtime="20201029 12:45:32.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.455" endtime="20201029 12:45:32.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.074" endtime="20201029 12:45:32.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.069" endtime="20201029 12:45:32.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.472" level="INFO">${RESULT} = [{'diff': 0.0001160550000000038}, {'diff': 0.00011622199999999916}, {'diff': 0.00011644400000000027}, {'diff': 0.00011583299999999574}, {'diff': 0.00011641600000000113}, {'diff': 0.0001156390000000007...</msg>
<status status="PASS" starttime="20201029 12:45:32.463" endtime="20201029 12:45:32.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:32.484" level="INFO">${ACCURACY} = {'diff': [0.0001160550000000038, 0.00011622199999999916, 0.00011644400000000027, 0.00011583299999999574, 0.00011641600000000113, 0.00011563900000000071, 0.00011634800000000223, 0.00011613800000000174,...</msg>
<status status="PASS" starttime="20201029 12:45:32.475" endtime="20201029 12:45:32.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.495" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:45:32.492" endtime="20201029 12:45:32.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.500" level="INFO">VALUE: [0.0001160550000000038, 0.00011622199999999916, 0.00011644400000000027, 0.00011583299999999574, 0.00011641600000000113, 0.00011563900000000071, 0.00011634800000000223, 0.00011613800000000174, 0.00011647199999999941, 0.00011567999999999995, 0.00011569499999999899, 0.00011602800000000413, 0.00011579200000000345, 0.0001159170000000001, 0.00011634699999999581, 0.00011612500000000164, 0.00011615199999999437, 0.0001157220000000056, 0.00011590200000000106, 0.00011623599999999873, 0.00011613900000000121, 0.00011633300000000318, 0.00011580600000000302, 0.00011557000000000234, 0.00011623599999999873, 0.00011570799999999909, 0.00011554199999999626, 0.00011587499999999445, 0.00011613900000000121, 0.00011612500000000164, 0.00011556900000000286, 0.00011612500000000164, 0.00011568099999999942, 0.00011644499999999974, 0.00011562500000000114, 0.00011590300000000053, 0.00011618099999999992, 0.00011588900000000096, 0.00011634699999999581, 0.00011551399999999712, 0.00011613900000000121, 0.00011577799999999694, 0.00011558400000000191, 0.0001158750000000014, 0.00011568099999999942, 0.00011633300000000318, 0.00011622199999999916, 0.00011598599999999848, 0.00011590300000000053, 0.00011644400000000027]</msg>
<status status="PASS" starttime="20201029 12:45:32.497" endtime="20201029 12:45:32.502"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.486" endtime="20201029 12:45:32.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.513" endtime="20201029 12:45:32.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.509" endtime="20201029 12:45:32.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.506" endtime="20201029 12:45:32.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.005" endtime="20201029 12:45:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.003" endtime="20201029 12:45:32.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:38.235" endtime="20201029 12:45:32.538"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:38.097" endtime="20201029 12:45:32.540" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:43:38.169" endtime="20201029 12:45:32.549"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.690" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:32.706" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:33.542" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:32.686" endtime="20201029 12:45:33.544"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.550" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:45:33.546" endtime="20201029 12:45:36.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.683" endtime="20201029 12:45:36.553"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:36.557" endtime="20201029 12:45:36.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.554" endtime="20201029 12:45:36.936"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.966" endtime="20201029 12:45:36.989"></status>
</kw>
<msg timestamp="20201029 12:45:36.990" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 12:45:36.962" endtime="20201029 12:45:36.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.996" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 12:45:36.992" endtime="20201029 12:45:36.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:36.999" endtime="20201029 12:45:37.004"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:36.956" endtime="20201029 12:45:37.006"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:36.950" endtime="20201029 12:45:37.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.948" endtime="20201029 12:45:37.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:37.016" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:37.015" endtime="20201029 12:45:37.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.010" endtime="20201029 12:45:37.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.946" endtime="20201029 12:45:37.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.944" endtime="20201029 12:45:37.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.020" endtime="20201029 12:45:37.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.941" endtime="20201029 12:45:37.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.027" endtime="20201029 12:45:37.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.938" endtime="20201029 12:45:37.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.680" endtime="20201029 12:45:37.033"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:37.047" endtime="20201029 12:45:37.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.043" endtime="20201029 12:45:37.073"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.107" endtime="20201029 12:45:37.125"></status>
</kw>
<msg timestamp="20201029 12:45:37.127" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.104" endtime="20201029 12:45:37.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.134" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.129" endtime="20201029 12:45:37.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:37.141" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:37.136" endtime="20201029 12:45:37.141"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:37.096" endtime="20201029 12:45:37.143"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:37.090" endtime="20201029 12:45:37.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.087" endtime="20201029 12:45:37.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:37.162" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:37.160" endtime="20201029 12:45:37.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.149" endtime="20201029 12:45:37.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.085" endtime="20201029 12:45:37.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.083" endtime="20201029 12:45:37.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.172" endtime="20201029 12:45:37.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.079" endtime="20201029 12:45:37.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.075" endtime="20201029 12:45:37.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.040" endtime="20201029 12:45:37.185"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:37.213" endtime="20201029 12:45:43.338"></status>
</kw>
<msg timestamp="20201029 12:45:43.340" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:37.209" endtime="20201029 12:45:43.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.347" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.342" endtime="20201029 12:45:43.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.350" endtime="20201029 12:45:43.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.200" endtime="20201029 12:45:43.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.192" endtime="20201029 12:45:43.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.363" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:45:43.359" endtime="20201029 12:45:43.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.377" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:43.372" endtime="20201029 12:45:43.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.382" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:43.379" endtime="20201029 12:45:43.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.366" endtime="20201029 12:45:43.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.395" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:43.392" endtime="20201029 12:45:43.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.400" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:43.398" endtime="20201029 12:45:43.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.386" endtime="20201029 12:45:43.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.413" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:43.410" endtime="20201029 12:45:43.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.418" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:45:43.415" endtime="20201029 12:45:43.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.404" endtime="20201029 12:45:43.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.438" endtime="20201029 12:45:43.826"></status>
</kw>
<msg timestamp="20201029 12:45:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.255822833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.255823375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:43.434" endtime="20201029 12:45:43.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.255822833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.255823375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 12:45:43.835" endtime="20201029 12:45:43.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.854" endtime="20201029 12:45:43.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.426" endtime="20201029 12:45:43.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.421" endtime="20201029 12:45:43.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:43.872" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10000933299999998}, {'diff': 5.410000000205528e-07}, {'diff': 5.420000001032932e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922...</msg>
<status status="PASS" starttime="20201029 12:45:43.863" endtime="20201029 12:45:43.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:43.882" level="INFO">${RESULT} = {'diff': [0, 0.10000933299999998, 5.410000000205528e-07, 5.420000001032932e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.100...</msg>
<status status="PASS" starttime="20201029 12:45:43.874" endtime="20201029 12:45:43.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.894" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:43.891" endtime="20201029 12:45:43.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:43.900" level="INFO">VALUE: [0, 0.10000933299999998, 5.410000000205528e-07, 5.420000001032932e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001079199999996, 0.10001029100000003, 0.10001030500000008, 0.10001031999999999, 0.10001029200000011, 0.10001030499999986, 0.10001030500000008, 0.10001030599999994, 0.10001031999999999, 0.10001031999999999, 0.10001029200000033, 0.10001033299999973, 0.10001027800000006, 0.10001031999999999, 0.10001030600000016, 0.1000103189999999, 0.10001033300000017, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 0.10001084700000007, 0.1000103750000001, 0.10001038899999992, 0.1000103750000001, 0.10001038899999992, 0.10001040300000019, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 12:45:43.897" endtime="20201029 12:45:43.901"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.884" endtime="20201029 12:45:43.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:37.186" endtime="20201029 12:45:43.905"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:37.034" endtime="20201029 12:45:43.906" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:43.924" endtime="20201029 12:45:43.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.920" endtime="20201029 12:45:43.948"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:43.984" endtime="20201029 12:45:44.004"></status>
</kw>
<msg timestamp="20201029 12:45:44.006" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:43.980" endtime="20201029 12:45:44.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.012" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.008" endtime="20201029 12:45:44.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.019" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:44.015" endtime="20201029 12:45:44.020"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:43.973" endtime="20201029 12:45:44.022"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:43.966" endtime="20201029 12:45:44.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.963" endtime="20201029 12:45:44.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:44.033" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:44.031" endtime="20201029 12:45:44.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.027" endtime="20201029 12:45:44.034"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.961" endtime="20201029 12:45:44.035"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.959" endtime="20201029 12:45:44.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.037" endtime="20201029 12:45:44.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.955" endtime="20201029 12:45:44.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.950" endtime="20201029 12:45:44.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:43.917" endtime="20201029 12:45:44.045"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.070" endtime="20201029 12:45:50.195"></status>
</kw>
<msg timestamp="20201029 12:45:50.196" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.064" endtime="20201029 12:45:50.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.203" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.199" endtime="20201029 12:45:50.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.206" endtime="20201029 12:45:50.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.056" endtime="20201029 12:45:50.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.050" endtime="20201029 12:45:50.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.220" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:45:50.215" endtime="20201029 12:45:50.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.231" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:50.228" endtime="20201029 12:45:50.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.236" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:50.233" endtime="20201029 12:45:50.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.222" endtime="20201029 12:45:50.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.249" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:50.246" endtime="20201029 12:45:50.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.253" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:50.251" endtime="20201029 12:45:50.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.239" endtime="20201029 12:45:50.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.267" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:50.264" endtime="20201029 12:45:50.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.272" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:45:50.269" endtime="20201029 12:45:50.273"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.257" endtime="20201029 12:45:50.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.292" endtime="20201029 12:45:50.663"></status>
</kw>
<msg timestamp="20201029 12:45:50.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237354625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.289" endtime="20201029 12:45:50.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237354625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.673" endtime="20201029 12:45:50.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.692" endtime="20201029 12:45:50.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.281" endtime="20201029 12:45:50.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.276" endtime="20201029 12:45:50.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:50.711" level="INFO">${FILTERED} = [{'diff': 0.100083111}, {'diff': 0.09995836099999997}, {'diff': 0.10001086099999995}, {'diff': 0.10001038900000003}, {'diff': 0.10001038900000003}, {'diff': 0.10001037499999998}, {'diff': 0.1000103749...</msg>
<status status="PASS" starttime="20201029 12:45:50.702" endtime="20201029 12:45:50.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.722" level="INFO">${RESULT} = {'diff': [0.100083111, 0.09995836099999997, 0.10001086099999995, 0.10001038900000003, 0.10001038900000003, 0.10001037499999998, 0.10001037499999998, 0.1000103750000001, 0.10001045899999994, 5.40999999...</msg>
<status status="PASS" starttime="20201029 12:45:50.713" endtime="20201029 12:45:50.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.733" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:50.731" endtime="20201029 12:45:50.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.739" level="INFO">VALUE: [0.100083111, 0.09995836099999997, 0.10001086099999995, 0.10001038900000003, 0.10001038900000003, 0.10001037499999998, 0.10001037499999998, 0.1000103750000001, 0.10001045899999994, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001087499999994, 0.10001037499999987, 0.10001038900000014, 0.10001034699999978, 0.10001040300000019, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001081899999997, 0.100010347, 0.100010347, 0.1000103189999999, 0.10001033300000017, 0.100010347, 0.10001033300000017, 0.10001033299999973, 0.100010347, 0.10001038899999992, 5.409999999095305e-07, 0.10001080600000023, 0.10001031999999999, 0.10001033399999981, 0.10001034799999964, 0.10001033400000026, 0.10001033400000026, 0.10001034699999956, 0.10001033299999929, 0.10001033300000017, 0.10001034700000044, 0.10001033300000017, 0.10001033300000017, 0.10001033300000017, 0.10001034700000044, 0.10001033300000017]</msg>
<status status="PASS" starttime="20201029 12:45:50.735" endtime="20201029 12:45:50.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.724" endtime="20201029 12:45:50.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.046" endtime="20201029 12:45:50.744"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:43.911" endtime="20201029 12:45:50.745" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.763" endtime="20201029 12:45:50.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.759" endtime="20201029 12:45:50.787"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.823" endtime="20201029 12:45:50.843"></status>
</kw>
<msg timestamp="20201029 12:45:50.844" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.819" endtime="20201029 12:45:50.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.847" endtime="20201029 12:45:50.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.858" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:50.854" endtime="20201029 12:45:50.859"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.811" endtime="20201029 12:45:50.861"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:50.804" endtime="20201029 12:45:50.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.801" endtime="20201029 12:45:50.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:50.872" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:50.870" endtime="20201029 12:45:50.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.866" endtime="20201029 12:45:50.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.799" endtime="20201029 12:45:50.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.798" endtime="20201029 12:45:50.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.876" endtime="20201029 12:45:50.880"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.793" endtime="20201029 12:45:50.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.788" endtime="20201029 12:45:50.883"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.756" endtime="20201029 12:45:50.884"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.909" endtime="20201029 12:45:57.034"></status>
</kw>
<msg timestamp="20201029 12:45:57.035" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.905" endtime="20201029 12:45:57.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.041" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.037" endtime="20201029 12:45:57.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.043" endtime="20201029 12:45:57.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.897" endtime="20201029 12:45:57.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.889" endtime="20201029 12:45:57.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.057" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:45:57.052" endtime="20201029 12:45:57.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.067" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:57.065" endtime="20201029 12:45:57.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.071" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:45:57.069" endtime="20201029 12:45:57.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.058" endtime="20201029 12:45:57.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.089" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:45:57.086" endtime="20201029 12:45:57.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.095" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:45:57.092" endtime="20201029 12:45:57.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.075" endtime="20201029 12:45:57.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.110" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:45:57.107" endtime="20201029 12:45:57.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.116" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:45:57.113" endtime="20201029 12:45:57.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.099" endtime="20201029 12:45:57.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.140" endtime="20201029 12:45:57.501"></status>
</kw>
<msg timestamp="20201029 12:45:57.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137489972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237640333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.136" endtime="20201029 12:45:57.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137489972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.237640333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.510" endtime="20201029 12:45:57.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.528" endtime="20201029 12:45:57.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.127" endtime="20201029 12:45:57.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.121" endtime="20201029 12:45:57.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:45:57.545" level="INFO">${FILTERED} = [{'diff': 0.10015036100000002}, {'diff': 0.10004929199999998}, {'diff': 0.09985559799999999}, {'diff': 0.100010347}, {'diff': 0.100010347}, {'diff': 0.10001041700000002}, {'diff': 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201029 12:45:57.537" endtime="20201029 12:45:57.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.556" level="INFO">${RESULT} = {'diff': [0.10015036100000002, 0.10004929199999998, 0.09985559799999999, 0.100010347, 0.100010347, 0.10001041700000002, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000001315751e-07, 5.410000001...</msg>
<status status="PASS" starttime="20201029 12:45:57.547" endtime="20201029 12:45:57.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.566" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:45:57.564" endtime="20201029 12:45:57.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.571" level="INFO">VALUE: [0.10015036100000002, 0.10004929199999998, 0.09985559799999999, 0.100010347, 0.100010347, 0.10001041700000002, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000001315751e-07, 5.410000001315751e-07, 0.1000108329999998, 0.100010347, 0.10001036099999983, 0.10001033300000017, 0.10001036099999983, 0.10001034799999986, 0.100010347, 0.10001036099999983, 0.10001029200000033, 0.10001030599999972, 0.10001029199999989, 0.1000103189999999, 0.10001029199999989, 0.10001031999999999, 0.10001030599999972, 0.10001033300000017, 0.10001029100000025, 0.1000103189999999, 0.10001029199999989, 0.10001030600000016, 0.10001030500000008, 0.10001030500000008, 0.1000103189999999, 0.10001030599999972, 0.10001030599999972, 0.10001030500000008, 0.10001030500000008, 0.10001030600000016, 0.10001031999999999, 0.10001031999999999, 0.10001030599999972, 0.10001029100000025, 0.10001038899999948, 0.10001036099999983, 0.1000103750000001, 0.1000103750000001, 0.1000103750000001, 0.10001038900000037, 0.10001034700000044, 0.10001038900000037]</msg>
<status status="PASS" starttime="20201029 12:45:57.568" endtime="20201029 12:45:57.579"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.558" endtime="20201029 12:45:57.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.885" endtime="20201029 12:45:57.582"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:50.750" endtime="20201029 12:45:57.584" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.601" endtime="20201029 12:45:57.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.597" endtime="20201029 12:45:57.624"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.657" endtime="20201029 12:45:57.676"></status>
</kw>
<msg timestamp="20201029 12:45:57.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.654" endtime="20201029 12:45:57.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.679" endtime="20201029 12:45:57.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:57.686" endtime="20201029 12:45:57.692"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:57.647" endtime="20201029 12:45:57.694"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:57.640" endtime="20201029 12:45:57.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.638" endtime="20201029 12:45:57.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:57.704" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:57.703" endtime="20201029 12:45:57.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.698" endtime="20201029 12:45:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.636" endtime="20201029 12:45:57.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.634" endtime="20201029 12:45:57.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.708" endtime="20201029 12:45:57.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.630" endtime="20201029 12:45:57.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.626" endtime="20201029 12:45:57.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.594" endtime="20201029 12:45:57.715"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.736" endtime="20201029 12:46:03.860"></status>
</kw>
<msg timestamp="20201029 12:46:03.861" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.733" endtime="20201029 12:46:03.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.864" endtime="20201029 12:46:03.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.870" endtime="20201029 12:46:03.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.726" endtime="20201029 12:46:03.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.720" endtime="20201029 12:46:03.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.883" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:46:03.878" endtime="20201029 12:46:03.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.893" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:03.891" endtime="20201029 12:46:03.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.898" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:03.896" endtime="20201029 12:46:03.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.885" endtime="20201029 12:46:03.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.910" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:03.908" endtime="20201029 12:46:03.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.914" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:03.912" endtime="20201029 12:46:03.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.901" endtime="20201029 12:46:03.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.926" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:03.924" endtime="20201029 12:46:03.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.931" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:46:03.928" endtime="20201029 12:46:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.918" endtime="20201029 12:46:03.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.950" endtime="20201029 12:46:04.311"></status>
</kw>
<msg timestamp="20201029 12:46:04.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127279333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227542653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.946" endtime="20201029 12:46:04.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127279333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227542653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.320" endtime="20201029 12:46:04.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.337" endtime="20201029 12:46:04.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.939" endtime="20201029 12:46:04.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.934" endtime="20201029 12:46:04.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:04.358" level="INFO">${FILTERED} = [{'diff': 0.10026332000000002}, {'diff': 0.100054223}, {'diff': 0.09974266699999995}, {'diff': 0.10000937499999996}, {'diff': 0.10001038900000003}, {'diff': 0.10001037499999998}, {'diff': 0.1000103879...</msg>
<status status="PASS" starttime="20201029 12:46:04.349" endtime="20201029 12:46:04.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.367" level="INFO">${RESULT} = {'diff': [0.10026332000000002, 0.100054223, 0.09974266699999995, 0.10000937499999996, 0.10001038900000003, 0.10001037499999998, 0.10001038799999995, 0.10001043099999996, 5.410000001315751e-07, 5.41999...</msg>
<status status="PASS" starttime="20201029 12:46:04.360" endtime="20201029 12:46:04.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.377" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:04.375" endtime="20201029 12:46:04.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.382" level="INFO">VALUE: [0.10026332000000002, 0.100054223, 0.09974266699999995, 0.10000937499999996, 0.10001038900000003, 0.10001037499999998, 0.10001038799999995, 0.10001043099999996, 5.410000001315751e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.410000001315751e-07, 5.420000002143155e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001087499999972, 5.419999999922709e-07, 0.1000108609999999, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 0.10001086100000034, 0.1000103750000001, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:46:04.379" endtime="20201029 12:46:04.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.369" endtime="20201029 12:46:04.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.716" endtime="20201029 12:46:04.387"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:57.588" endtime="20201029 12:46:04.389" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.405" endtime="20201029 12:46:04.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.401" endtime="20201029 12:46:04.428"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.463" endtime="20201029 12:46:04.482"></status>
</kw>
<msg timestamp="20201029 12:46:04.483" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.460" endtime="20201029 12:46:04.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.489" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.485" endtime="20201029 12:46:04.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.496" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:04.492" endtime="20201029 12:46:04.497"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.453" endtime="20201029 12:46:04.498"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:04.445" endtime="20201029 12:46:04.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.442" endtime="20201029 12:46:04.501"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:04.508" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:04.507" endtime="20201029 12:46:04.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.502" endtime="20201029 12:46:04.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.440" endtime="20201029 12:46:04.510"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.438" endtime="20201029 12:46:04.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.512" endtime="20201029 12:46:04.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.434" endtime="20201029 12:46:04.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.430" endtime="20201029 12:46:04.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.398" endtime="20201029 12:46:04.519"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.540" endtime="20201029 12:46:10.664"></status>
</kw>
<msg timestamp="20201029 12:46:10.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.537" endtime="20201029 12:46:10.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.671" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.667" endtime="20201029 12:46:10.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.674" endtime="20201029 12:46:10.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.530" endtime="20201029 12:46:10.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.524" endtime="20201029 12:46:10.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.687" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:46:10.682" endtime="20201029 12:46:10.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.697" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:10.695" endtime="20201029 12:46:10.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.701" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:10.699" endtime="20201029 12:46:10.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.689" endtime="20201029 12:46:10.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.713" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:10.711" endtime="20201029 12:46:10.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.718" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:10.716" endtime="20201029 12:46:10.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.705" endtime="20201029 12:46:10.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.730" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:10.727" endtime="20201029 12:46:10.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.734" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:46:10.732" endtime="20201029 12:46:10.735"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.721" endtime="20201029 12:46:10.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.755" endtime="20201029 12:46:11.124"></status>
</kw>
<msg timestamp="20201029 12:46:11.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127187139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227590333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.752" endtime="20201029 12:46:11.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127187139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227590333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.133" endtime="20201029 12:46:11.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.151" endtime="20201029 12:46:11.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.745" endtime="20201029 12:46:11.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.738" endtime="20201029 12:46:11.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:11.168" level="INFO">${FILTERED} = [{'diff': 0.100403194}, {'diff': 0.100064972}, {'diff': 0.09959509700000002}, {'diff': 0.10001034699999994}, {'diff': 0.100010347}, {'diff': 0.10001037499999998}, {'diff': 0.100010347}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201029 12:46:11.159" endtime="20201029 12:46:11.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.177" level="INFO">${RESULT} = {'diff': [0.100403194, 0.100064972, 0.09959509700000002, 0.10001034699999994, 0.100010347, 0.10001037499999998, 0.100010347, 0.10001037499999998, 0.10001030499999997, 0.10001029200000011, 0.1000103059...</msg>
<status status="PASS" starttime="20201029 12:46:11.170" endtime="20201029 12:46:11.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.187" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:11.185" endtime="20201029 12:46:11.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.192" level="INFO">VALUE: [0.100403194, 0.100064972, 0.09959509700000002, 0.10001034699999994, 0.100010347, 0.10001037499999998, 0.100010347, 0.10001037499999998, 0.10001030499999997, 0.10001029200000011, 0.10001030599999994, 0.10001033300000017, 0.10001030499999986, 0.10001029100000003, 0.10001031999999999, 0.10001031999999999, 0.10001031999999999, 0.10001033399999981, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201029 12:46:11.189" endtime="20201029 12:46:11.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.179" endtime="20201029 12:46:11.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.520" endtime="20201029 12:46:11.197"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:04.393" endtime="20201029 12:46:11.199" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.215" endtime="20201029 12:46:11.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.211" endtime="20201029 12:46:11.239"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.274" endtime="20201029 12:46:11.292"></status>
</kw>
<msg timestamp="20201029 12:46:11.293" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.271" endtime="20201029 12:46:11.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.296" endtime="20201029 12:46:11.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.306" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:11.302" endtime="20201029 12:46:11.307"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:11.264" endtime="20201029 12:46:11.309"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:11.257" endtime="20201029 12:46:11.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.254" endtime="20201029 12:46:11.311"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:11.319" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:11.318" endtime="20201029 12:46:11.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.313" endtime="20201029 12:46:11.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.253" endtime="20201029 12:46:11.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.251" endtime="20201029 12:46:11.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.323" endtime="20201029 12:46:11.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.247" endtime="20201029 12:46:11.328"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.240" endtime="20201029 12:46:11.329"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.208" endtime="20201029 12:46:11.330"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.351" endtime="20201029 12:46:17.475"></status>
</kw>
<msg timestamp="20201029 12:46:17.476" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.348" endtime="20201029 12:46:17.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.482" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.478" endtime="20201029 12:46:17.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.484" endtime="20201029 12:46:17.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.340" endtime="20201029 12:46:17.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.335" endtime="20201029 12:46:17.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.498" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:46:17.493" endtime="20201029 12:46:17.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.508" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:17.505" endtime="20201029 12:46:17.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.512" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:46:17.510" endtime="20201029 12:46:17.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.499" endtime="20201029 12:46:17.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.530" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:46:17.522" endtime="20201029 12:46:17.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.535" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:46:17.532" endtime="20201029 12:46:17.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.516" endtime="20201029 12:46:17.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.547" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:46:17.544" endtime="20201029 12:46:17.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.551" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:46:17.549" endtime="20201029 12:46:17.552"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.538" endtime="20201029 12:46:17.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.570" endtime="20201029 12:46:17.894"></status>
</kw>
<msg timestamp="20201029 12:46:17.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127311333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227896903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.567" endtime="20201029 12:46:17.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127311333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227896903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.903" endtime="20201029 12:46:17.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.920" endtime="20201029 12:46:17.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.559" endtime="20201029 12:46:17.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.555" endtime="20201029 12:46:17.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:46:17.937" level="INFO">${FILTERED} = [{'diff': 0.10058557000000001}, {'diff': 0.10006965299999998}, {'diff': 0.09941194400000003}, {'diff': 0.10001037499999998}, {'diff': 0.100010402}, {'diff': 0.10001036100000005}, {'diff': 0.1000103749...</msg>
<status status="PASS" starttime="20201029 12:46:17.929" endtime="20201029 12:46:17.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.946" level="INFO">${RESULT} = {'diff': [0.10058557000000001, 0.10006965299999998, 0.09941194400000003, 0.10001037499999998, 0.100010402, 0.10001036100000005, 0.10001037499999998, 0.10001036100000005, 0.10001040299999997, 0.1000103...</msg>
<status status="PASS" starttime="20201029 12:46:17.939" endtime="20201029 12:46:17.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.956" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:46:17.954" endtime="20201029 12:46:17.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.963" level="INFO">VALUE: [0.10058557000000001, 0.10006965299999998, 0.09941194400000003, 0.10001037499999998, 0.100010402, 0.10001036100000005, 0.10001037499999998, 0.10001036100000005, 0.10001040299999997, 0.10001036100000005, 0.10001036100000005, 0.1000103750000001, 0.10001037499999987, 0.1000103750000001, 0.10001045899999994, 0.10001080500000015, 0.10001030499999986, 0.100010347, 0.10001030500000008, 0.10001033300000017, 0.10001031999999999, 0.10001033399999981, 0.10001033399999981, 0.10001030600000016, 0.10001034800000008, 0.10001030600000016, 0.10001033299999973, 0.10001033300000017, 0.1000103189999999, 0.1000103189999999, 0.10001036100000027, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999994654413e-07, 0.10001087499999972, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07]</msg>
<status status="PASS" starttime="20201029 12:46:17.960" endtime="20201029 12:46:17.965"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.948" endtime="20201029 12:46:17.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.331" endtime="20201029 12:46:17.968"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:11.203" endtime="20201029 12:46:17.969" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:32.574" endtime="20201029 12:46:17.998"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:42:26.609" endtime="20201029 12:46:18.081"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
