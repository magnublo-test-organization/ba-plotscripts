<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201029 18:13:48.670" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:13:50.023" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:13:50.044" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:13:50.889" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:13:50.018" endtime="20201029 18:13:50.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:13:53.896" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:13:50.893" endtime="20201029 18:13:53.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:50.015" endtime="20201029 18:13:53.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:13:53.904" endtime="20201029 18:13:54.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:53.901" endtime="20201029 18:13:54.245"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.278" endtime="20201029 18:13:54.299"></status>
</kw>
<msg timestamp="20201029 18:13:54.300" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.274" endtime="20201029 18:13:54.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.307" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.302" endtime="20201029 18:13:54.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.314" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:13:54.309" endtime="20201029 18:13:54.315"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:54.268" endtime="20201029 18:13:54.317"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:54.261" endtime="20201029 18:13:54.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.258" endtime="20201029 18:13:54.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:13:54.328" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:13:54.326" endtime="20201029 18:13:54.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.322" endtime="20201029 18:13:54.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.256" endtime="20201029 18:13:54.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.254" endtime="20201029 18:13:54.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.333" endtime="20201029 18:13:54.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.250" endtime="20201029 18:13:54.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.340" endtime="20201029 18:13:54.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.247" endtime="20201029 18:13:54.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:50.011" endtime="20201029 18:13:54.346"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:13:54.362" endtime="20201029 18:13:54.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.358" endtime="20201029 18:13:54.386"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.437" endtime="20201029 18:13:54.457"></status>
</kw>
<msg timestamp="20201029 18:13:54.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.433" endtime="20201029 18:13:54.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.465" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.460" endtime="20201029 18:13:54.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.472" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:13:54.467" endtime="20201029 18:13:54.472"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:54.426" endtime="20201029 18:13:54.474"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:54.418" endtime="20201029 18:13:54.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.401" endtime="20201029 18:13:54.477"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:13:54.485" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:13:54.484" endtime="20201029 18:13:54.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.479" endtime="20201029 18:13:54.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.399" endtime="20201029 18:13:54.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.397" endtime="20201029 18:13:54.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.489" endtime="20201029 18:13:54.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.392" endtime="20201029 18:13:54.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.388" endtime="20201029 18:13:54.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.355" endtime="20201029 18:13:54.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.515" endtime="20201029 18:13:54.529"></status>
</kw>
<msg timestamp="20201029 18:13:54.531" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.511" endtime="20201029 18:13:54.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.537" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:54.533" endtime="20201029 18:13:54.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:54.539" endtime="20201029 18:13:54.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.503" endtime="20201029 18:13:54.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.498" endtime="20201029 18:13:54.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.556" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:13:54.553" endtime="20201029 18:13:54.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.560" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:13:54.558" endtime="20201029 18:13:54.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.547" endtime="20201029 18:13:54.562"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:13:54.348" endtime="20201029 18:13:54.564" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:13:48.929" endtime="20201029 18:13:54.571"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:13:54.720" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:13:54.736" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:13:55.588" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:13:54.716" endtime="20201029 18:13:55.590"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:13:58.598" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:13:55.592" endtime="20201029 18:13:58.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.713" endtime="20201029 18:13:58.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:13:58.606" endtime="20201029 18:13:58.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.603" endtime="20201029 18:13:58.946"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:58.975" endtime="20201029 18:13:58.999"></status>
</kw>
<msg timestamp="20201029 18:13:59.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:13:58.972" endtime="20201029 18:13:59.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.011" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:13:59.006" endtime="20201029 18:13:59.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.018" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:13:59.014" endtime="20201029 18:13:59.019"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:58.966" endtime="20201029 18:13:59.021"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:58.960" endtime="20201029 18:13:59.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.957" endtime="20201029 18:13:59.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:13:59.032" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:13:59.030" endtime="20201029 18:13:59.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.026" endtime="20201029 18:13:59.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.956" endtime="20201029 18:13:59.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.954" endtime="20201029 18:13:59.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.036" endtime="20201029 18:13:59.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.951" endtime="20201029 18:13:59.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.043" endtime="20201029 18:13:59.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:58.947" endtime="20201029 18:13:59.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:54.711" endtime="20201029 18:13:59.049"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:13:59.064" endtime="20201029 18:13:59.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.060" endtime="20201029 18:13:59.088"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.189" endtime="20201029 18:13:59.209"></status>
</kw>
<msg timestamp="20201029 18:13:59.210" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.185" endtime="20201029 18:13:59.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.213" endtime="20201029 18:13:59.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.224" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:13:59.220" endtime="20201029 18:13:59.225"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:59.178" endtime="20201029 18:13:59.227"></status>
</kw>
<status status="FAIL" starttime="20201029 18:13:59.105" endtime="20201029 18:13:59.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.102" endtime="20201029 18:13:59.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:13:59.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:13:59.236" endtime="20201029 18:13:59.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.231" endtime="20201029 18:13:59.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.100" endtime="20201029 18:13:59.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.098" endtime="20201029 18:13:59.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.241" endtime="20201029 18:13:59.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.094" endtime="20201029 18:13:59.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.089" endtime="20201029 18:13:59.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.057" endtime="20201029 18:13:59.249"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.272" endtime="20201029 18:13:59.286"></status>
</kw>
<msg timestamp="20201029 18:13:59.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.269" endtime="20201029 18:13:59.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.290" endtime="20201029 18:13:59.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.297" endtime="20201029 18:13:59.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.261" endtime="20201029 18:13:59.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.256" endtime="20201029 18:13:59.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.324" endtime="20201029 18:13:59.680"></status>
</kw>
<msg timestamp="20201029 18:13:59.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199553139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199565986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:13:59.320" endtime="20201029 18:13:59.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199553139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199565986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:13:59.687" endtime="20201029 18:13:59.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.700" endtime="20201029 18:13:59.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.311" endtime="20201029 18:13:59.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.306" endtime="20201029 18:13:59.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:13:59.716" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.889000000012915e-06}, {'diff': 9.999999999982245e-06}, {'diff': 1.587499999999853e-05}, {'diff': 1.7181000000004998e-05}, {'diff': 1.447299999998708e-05}, {'diff': 1.377799999...</msg>
<status status="PASS" starttime="20201029 18:13:59.708" endtime="20201029 18:13:59.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:13:59.732" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.889000000012915e-06, 9.999999999982245e-06, 1.587499999999853e-05, 1.7181000000004998e-05, 1.447299999998708e-05, 1.3777999999992074e-05, 1.1097999999987174e-05, 1.1917000000000177e-05,...</msg>
<status status="PASS" starttime="20201029 18:13:59.727" endtime="20201029 18:13:59.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.742" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:13:59.740" endtime="20201029 18:13:59.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.747" level="INFO">VALUE: [0, 9.889000000012915e-06, 9.999999999982245e-06, 1.587499999999853e-05, 1.7181000000004998e-05, 1.447299999998708e-05, 1.3777999999992074e-05, 1.1097999999987174e-05, 1.1917000000000177e-05, 1.6709000000003638e-05, 1.1334000000001732e-05, 1.5999999999988246e-05, 1.045800000001873e-05, 1.6013999999980877e-05, 6.3200000000041e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2333000000003258e-05, 1.079200000000946e-05, 1.6985999999996615e-05, 1.2125000000001718e-05, 8.680000000010901e-06, 1.6569999999993534e-05, 8.124999999997717e-06, 1.0666999999991988e-05]</msg>
<status status="PASS" starttime="20201029 18:13:59.745" endtime="20201029 18:13:59.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.734" endtime="20201029 18:13:59.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.253" endtime="20201029 18:13:59.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.251" endtime="20201029 18:13:59.752"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.787" endtime="20201029 18:13:59.803"></status>
</kw>
<msg timestamp="20201029 18:13:59.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.781" endtime="20201029 18:13:59.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:13:59.810" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:13:59.806" endtime="20201029 18:13:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.813" endtime="20201029 18:13:59.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.769" endtime="20201029 18:13:59.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.758" endtime="20201029 18:13:59.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:13:59.836" endtime="20201029 18:14:00.176"></status>
</kw>
<msg timestamp="20201029 18:14:00.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199553139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199565986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:13:59.833" endtime="20201029 18:14:00.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199553139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199565986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:00.185" endtime="20201029 18:14:00.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.204" endtime="20201029 18:14:00.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.826" endtime="20201029 18:14:00.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.821" endtime="20201029 18:14:00.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:00.221" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 9.889000000012915e-06}, {'diff': 9.999999999982245e-06}, {'diff': 1.587499999999853e-05}, {'diff': 1.7181000000004998e-05}, {'diff': 1.447299999998708e-05}, {'diff': 1.377799999...</msg>
<status status="PASS" starttime="20201029 18:14:00.212" endtime="20201029 18:14:00.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:00.230" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 9.889000000012915e-06, 9.999999999982245e-06, 1.587499999999853e-05, 1.7181000000004998e-05, 1.447299999998708e-05, 1.3777999999992074e-05, 1.1097999999987174e-05, 1.1917000000000177e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:00.223" endtime="20201029 18:14:00.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.241" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:00.239" endtime="20201029 18:14:00.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.247" level="INFO">VALUE: [0, 9.889000000012915e-06, 9.999999999982245e-06, 1.587499999999853e-05, 1.7181000000004998e-05, 1.447299999998708e-05, 1.3777999999992074e-05, 1.1097999999987174e-05, 1.1917000000000177e-05, 1.6709000000003638e-05, 1.1334000000001732e-05, 1.5999999999988246e-05, 1.045800000001873e-05, 1.6013999999980877e-05, 6.3200000000041e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2333000000003258e-05, 1.079200000000946e-05, 1.6985999999996615e-05, 1.2125000000001718e-05, 8.680000000010901e-06, 1.6569999999993534e-05, 8.124999999997717e-06, 1.0666999999991988e-05, 0.505190041, 1.2486000000033748e-05, 1.020799999995603e-05, 1.3917000000085444e-05, 1.1653000000055869e-05, 1.4791999999985705e-05, 1.57640000000292e-05, 1.3735999999986426e-05, 1.5125000000004718e-05, 1.0889000000013915e-05, 1.2013999999949121e-05, 1.4402999999996169e-05, 1.2153000000014735e-05, 9.916999999970422e-06, 1.6903000000012547e-05, 9.99999999995449e-06, 9.88899999998516e-06, 1.6985999999996615e-05, 1.5902000000012073e-05, 8.667000000017744e-06, 9.236000000023559e-06, 6.111000000030842e-06, 1.4554999999916163e-05, 1.45269999999309e-05, 1.1556000000023658e-05]</msg>
<status status="PASS" starttime="20201029 18:14:00.244" endtime="20201029 18:14:00.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.233" endtime="20201029 18:14:00.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.753" endtime="20201029 18:14:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.752" endtime="20201029 18:14:00.251"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.271" endtime="20201029 18:14:00.286"></status>
</kw>
<msg timestamp="20201029 18:14:00.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:00.268" endtime="20201029 18:14:00.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:00.289" endtime="20201029 18:14:00.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.296" endtime="20201029 18:14:00.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.261" endtime="20201029 18:14:00.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.256" endtime="20201029 18:14:00.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.319" endtime="20201029 18:14:00.681"></status>
</kw>
<msg timestamp="20201029 18:14:00.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199824125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199839153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:00.315" endtime="20201029 18:14:00.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.199824125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.199839153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:00.692" endtime="20201029 18:14:00.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.714" endtime="20201029 18:14:00.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.308" endtime="20201029 18:14:00.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.304" endtime="20201029 18:14:00.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:00.732" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.045800000001873e-05}, {'diff': 1.6013999999980877e-05}, {'diff': 6.3200000000041e-06}, {'diff': 1.3889000000016916e-05}, {'diff': 1.6221999999982417e-05}, {'diff': 1.233300000...</msg>
<status status="PASS" starttime="20201029 18:14:00.722" endtime="20201029 18:14:00.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:00.744" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.045800000001873e-05, 1.6013999999980877e-05, 6.3200000000041e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2333000000003258e-05, 1.079200000000946e-05, 1.6985999999996615e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:00.734" endtime="20201029 18:14:00.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.755" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:00.753" endtime="20201029 18:14:00.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.761" level="INFO">VALUE: [0, 1.045800000001873e-05, 1.6013999999980877e-05, 6.3200000000041e-06, 1.3889000000016916e-05, 1.6221999999982417e-05, 1.2333000000003258e-05, 1.079200000000946e-05, 1.6985999999996615e-05, 1.2125000000001718e-05, 8.680000000010901e-06, 1.6569999999993534e-05, 8.124999999997717e-06, 1.0666999999991988e-05, 0.505190041, 1.2486000000033748e-05, 1.020799999995603e-05, 1.3917000000085444e-05, 1.1653000000055869e-05, 1.4791999999985705e-05, 1.57640000000292e-05, 1.3735999999986426e-05, 1.5125000000004718e-05, 1.0889000000013915e-05, 1.2013999999949121e-05, 1.4402999999996169e-05, 1.2153000000014735e-05, 9.916999999970422e-06, 1.6903000000012547e-05, 9.99999999995449e-06, 9.88899999998516e-06, 1.6985999999996615e-05, 1.5902000000012073e-05, 8.667000000017744e-06, 9.236000000023559e-06, 6.111000000030842e-06, 1.4554999999916163e-05, 1.45269999999309e-05, 1.1556000000023658e-05, 0.4735556109999999, 1.254199999989325e-05, 6.111000000030842e-06, 1.501400000014641e-05, 9.332999999944747e-06, 1.1888999999820626e-05, 9.097000000179989e-06, 1.1444999999943306e-05, 1.4431000000092453e-05, 1.7624999999910074e-05, 6.430000000001712e-06, 1.3068999999976683e-05, 8.999999999925734e-06, 7.67999999995439e-06, 1.0222999999864868e-05, 1.273599999995767e-05, 1.4555000000138207e-05, 1.6459000000024204e-05, 1.7222999999955135e-05, 8.665999999823981e-06, 1.020799999995603e-05, 1.3207999999931275e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.38899999991527e-06]</msg>
<status status="PASS" starttime="20201029 18:14:00.758" endtime="20201029 18:14:00.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.746" endtime="20201029 18:14:00.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.253" endtime="20201029 18:14:00.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.252" endtime="20201029 18:14:00.766"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.787" endtime="20201029 18:14:00.800"></status>
</kw>
<msg timestamp="20201029 18:14:00.801" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:00.783" endtime="20201029 18:14:00.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:00.808" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:00.804" endtime="20201029 18:14:00.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.810" endtime="20201029 18:14:00.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.776" endtime="20201029 18:14:00.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.771" endtime="20201029 18:14:00.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:00.840" endtime="20201029 18:14:01.191"></status>
</kw>
<msg timestamp="20201029 18:14:01.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.705613889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.705622097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:00.835" endtime="20201029 18:14:01.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.705613889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.705622097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:01.202" endtime="20201029 18:14:01.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.224" endtime="20201029 18:14:01.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.825" endtime="20201029 18:14:01.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.818" endtime="20201029 18:14:01.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:01.242" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.2153000000014735e-05}, {'diff': 9.916999999970422e-06}, {'diff': 1.6903000000012547e-05}, {'diff': 9.99999999995449e-06}, {'diff': 9.88899999998516e-06}, {'diff': 1.6985999999...</msg>
<status status="PASS" starttime="20201029 18:14:01.232" endtime="20201029 18:14:01.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:01.254" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.2153000000014735e-05, 9.916999999970422e-06, 1.6903000000012547e-05, 9.99999999995449e-06, 9.88899999998516e-06, 1.6985999999996615e-05, 1.5902000000012073e-05, 8.667000000017744e-06, 9...</msg>
<status status="PASS" starttime="20201029 18:14:01.244" endtime="20201029 18:14:01.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.265" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:01.263" endtime="20201029 18:14:01.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.271" level="INFO">VALUE: [0, 1.2153000000014735e-05, 9.916999999970422e-06, 1.6903000000012547e-05, 9.99999999995449e-06, 9.88899999998516e-06, 1.6985999999996615e-05, 1.5902000000012073e-05, 8.667000000017744e-06, 9.236000000023559e-06, 6.111000000030842e-06, 1.4554999999916163e-05, 1.45269999999309e-05, 1.1556000000023658e-05, 0.4735556109999999, 1.254199999989325e-05, 6.111000000030842e-06, 1.501400000014641e-05, 9.332999999944747e-06, 1.1888999999820626e-05, 9.097000000179989e-06, 1.1444999999943306e-05, 1.4431000000092453e-05, 1.7624999999910074e-05, 6.430000000001712e-06, 1.3068999999976683e-05, 8.999999999925734e-06, 7.67999999995439e-06, 1.0222999999864868e-05, 1.273599999995767e-05, 1.4555000000138207e-05, 1.6459000000024204e-05, 1.7222999999955135e-05, 8.665999999823981e-06, 1.020799999995603e-05, 1.3207999999931275e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.38899999991527e-06, 0.503606, 1.1903000000090813e-05, 1.355499999999843e-05, 6.500000000020378e-06, 9.44500000010784e-06, 1.333400000014251e-05, 1.4665999999996515e-05, 1.1943999999930455e-05, 1.377800000001983e-05, 1.1221999999921906e-05, 1.3221999999979417e-05, 1.2332999999919991e-05, 1.5318999999847094e-05, 1.0778000000044585e-05, 7.777999999847296e-06, 1.3083000000024825e-05, 1.2999999999818712e-05, 7.65300000016289e-06, 1.1554999999940918e-05, 1.5056000000068792e-05, 1.7874999999945018e-05, 6.917000000106199e-06, 1.1111000000063598e-05, 1.3916999999974422e-05, 1.419400000002291e-05]</msg>
<status status="PASS" starttime="20201029 18:14:01.267" endtime="20201029 18:14:01.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.257" endtime="20201029 18:14:01.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.767" endtime="20201029 18:14:01.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:00.766" endtime="20201029 18:14:01.275"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.295" endtime="20201029 18:14:01.308"></status>
</kw>
<msg timestamp="20201029 18:14:01.310" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:01.292" endtime="20201029 18:14:01.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.318" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:01.314" endtime="20201029 18:14:01.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.322" endtime="20201029 18:14:01.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.285" endtime="20201029 18:14:01.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.280" endtime="20201029 18:14:01.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.362" endtime="20201029 18:14:01.719"></status>
</kw>
<msg timestamp="20201029 18:14:01.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.179749083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.179764528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:01.358" endtime="20201029 18:14:01.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.179749083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.179764528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:01.731" endtime="20201029 18:14:01.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.756" endtime="20201029 18:14:01.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.339" endtime="20201029 18:14:01.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.334" endtime="20201029 18:14:01.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:01.777" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.999999999925734e-06}, {'diff': 7.67999999995439e-06}, {'diff': 1.0222999999864868e-05}, {'diff': 1.273599999995767e-05}, {'diff': 1.4555000000138207e-05}, {'diff': 1.645900000...</msg>
<status status="PASS" starttime="20201029 18:14:01.767" endtime="20201029 18:14:01.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:01.788" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.999999999925734e-06, 7.67999999995439e-06, 1.0222999999864868e-05, 1.273599999995767e-05, 1.4555000000138207e-05, 1.6459000000024204e-05, 1.7222999999955135e-05, 8.665999999823981e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:01.779" endtime="20201029 18:14:01.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.799" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:01.797" endtime="20201029 18:14:01.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.804" level="INFO">VALUE: [0, 8.999999999925734e-06, 7.67999999995439e-06, 1.0222999999864868e-05, 1.273599999995767e-05, 1.4555000000138207e-05, 1.6459000000024204e-05, 1.7222999999955135e-05, 8.665999999823981e-06, 1.020799999995603e-05, 1.3207999999931275e-05, 1.5125000000004718e-05, 7.222999999889623e-06, 9.38899999991527e-06, 0.503606, 1.1903000000090813e-05, 1.355499999999843e-05, 6.500000000020378e-06, 9.44500000010784e-06, 1.333400000014251e-05, 1.4665999999996515e-05, 1.1943999999930455e-05, 1.377800000001983e-05, 1.1221999999921906e-05, 1.3221999999979417e-05, 1.2332999999919991e-05, 1.5318999999847094e-05, 1.0778000000044585e-05, 7.777999999847296e-06, 1.3083000000024825e-05, 1.2999999999818712e-05, 7.65300000016289e-06, 1.1554999999940918e-05, 1.5056000000068792e-05, 1.7874999999945018e-05, 6.917000000106199e-06, 1.1111000000063598e-05, 1.3916999999974422e-05, 1.419400000002291e-05, 0.49974883299999995, 1.1666999999881966e-05, 1.729100000025241e-05, 9.638999999950215e-06, 1.2222000000061684e-05, 1.4249999999993435e-05, 8.320000000061611e-06, 1.0443999999942832e-05, 1.750000000022567e-05, 6.320000000226145e-06, 6.792000000199749e-06, 8.332999999804969e-06, 1.3014000000310944e-05, 8.652999999636535e-06, 1.0458000000213019e-05, 1.5680000000184435e-05, 9.276999999752178e-06, 9.138999999880326e-06, 1.144500000016535e-05, 1.13470000000504e-05, 7.973000000216501e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.458000000073241e-06, 1.6818999999834716e-05]</msg>
<status status="PASS" starttime="20201029 18:14:01.801" endtime="20201029 18:14:01.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.790" endtime="20201029 18:14:01.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.277" endtime="20201029 18:14:01.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.276" endtime="20201029 18:14:01.809"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.829" endtime="20201029 18:14:01.844"></status>
</kw>
<msg timestamp="20201029 18:14:01.845" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:01.826" endtime="20201029 18:14:01.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:01.851" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:01.847" endtime="20201029 18:14:01.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.853" endtime="20201029 18:14:01.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.819" endtime="20201029 18:14:01.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.814" endtime="20201029 18:14:01.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:01.877" endtime="20201029 18:14:02.277"></status>
</kw>
<msg timestamp="20201029 18:14:02.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.683924819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.683933375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:01.874" endtime="20201029 18:14:02.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.683924819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.683933375, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:02.289" endtime="20201029 18:14:02.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.311" endtime="20201029 18:14:02.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.867" endtime="20201029 18:14:02.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.861" endtime="20201029 18:14:02.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:02.329" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5318999999847094e-05}, {'diff': 1.0778000000044585e-05}, {'diff': 7.777999999847296e-06}, {'diff': 1.3083000000024825e-05}, {'diff': 1.2999999999818712e-05}, {'diff': 7.653000...</msg>
<status status="PASS" starttime="20201029 18:14:02.319" endtime="20201029 18:14:02.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:02.340" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5318999999847094e-05, 1.0778000000044585e-05, 7.777999999847296e-06, 1.3083000000024825e-05, 1.2999999999818712e-05, 7.65300000016289e-06, 1.1554999999940918e-05, 1.5056000000068792e-05...</msg>
<status status="PASS" starttime="20201029 18:14:02.331" endtime="20201029 18:14:02.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.351" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:02.349" endtime="20201029 18:14:02.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.357" level="INFO">VALUE: [0, 1.5318999999847094e-05, 1.0778000000044585e-05, 7.777999999847296e-06, 1.3083000000024825e-05, 1.2999999999818712e-05, 7.65300000016289e-06, 1.1554999999940918e-05, 1.5056000000068792e-05, 1.7874999999945018e-05, 6.917000000106199e-06, 1.1111000000063598e-05, 1.3916999999974422e-05, 1.419400000002291e-05, 0.49974883299999995, 1.1666999999881966e-05, 1.729100000025241e-05, 9.638999999950215e-06, 1.2222000000061684e-05, 1.4249999999993435e-05, 8.320000000061611e-06, 1.0443999999942832e-05, 1.750000000022567e-05, 6.320000000226145e-06, 6.792000000199749e-06, 8.332999999804969e-06, 1.3014000000310944e-05, 8.652999999636535e-06, 1.0458000000213019e-05, 1.5680000000184435e-05, 9.276999999752178e-06, 9.138999999880326e-06, 1.144500000016535e-05, 1.13470000000504e-05, 7.973000000216501e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.458000000073241e-06, 1.6818999999834716e-05, 0.5248523469999999, 7.221999999806883e-06, 1.705599999990426e-05, 1.1778000000184363e-05, 7.83400000026191e-06, 1.1763999999914176e-05, 1.1332999999780213e-05, 1.2555000000080696e-05, 1.3000000000040757e-05, 7.443999999967588e-06, 1.09999999997612e-05, 9.556000000188192e-06, 1.040200000002045e-05, 1.4236000000167337e-05, 1.3889000000322227e-05, 1.3569000000046572e-05, 1.8167000000346434e-05, 8.541000000139576e-06, 1.2429999999952202e-05, 1.0790999999787942e-05, 1.1334000000307043e-05, 7.652999999940846e-06, 1.100000000020529e-05, 1.0889000000346982e-05, 1.3903000000148324e-05]</msg>
<status status="PASS" starttime="20201029 18:14:02.354" endtime="20201029 18:14:02.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.343" endtime="20201029 18:14:02.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.810" endtime="20201029 18:14:02.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:01.809" endtime="20201029 18:14:02.361"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.383" endtime="20201029 18:14:02.396"></status>
</kw>
<msg timestamp="20201029 18:14:02.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:02.379" endtime="20201029 18:14:02.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:02.399" endtime="20201029 18:14:02.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.406" endtime="20201029 18:14:02.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.372" endtime="20201029 18:14:02.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.366" endtime="20201029 18:14:02.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.434" endtime="20201029 18:14:02.809"></status>
</kw>
<msg timestamp="20201029 18:14:02.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184244944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.184255167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:02.425" endtime="20201029 18:14:02.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.184244944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.184255167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:02.820" endtime="20201029 18:14:02.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.842" endtime="20201029 18:14:02.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.418" endtime="20201029 18:14:02.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.414" endtime="20201029 18:14:02.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:02.860" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3014000000310944e-05}, {'diff': 8.652999999636535e-06}, {'diff': 1.0458000000213019e-05}, {'diff': 1.5680000000184435e-05}, {'diff': 9.276999999752178e-06}, {'diff': 9.1389999...</msg>
<status status="PASS" starttime="20201029 18:14:02.851" endtime="20201029 18:14:02.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:02.872" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3014000000310944e-05, 8.652999999636535e-06, 1.0458000000213019e-05, 1.5680000000184435e-05, 9.276999999752178e-06, 9.138999999880326e-06, 1.144500000016535e-05, 1.13470000000504e-05, 7...</msg>
<status status="PASS" starttime="20201029 18:14:02.862" endtime="20201029 18:14:02.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.884" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:02.881" endtime="20201029 18:14:02.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.889" level="INFO">VALUE: [0, 1.3014000000310944e-05, 8.652999999636535e-06, 1.0458000000213019e-05, 1.5680000000184435e-05, 9.276999999752178e-06, 9.138999999880326e-06, 1.144500000016535e-05, 1.13470000000504e-05, 7.973000000216501e-06, 1.1111000000063598e-05, 9.332999999944747e-06, 9.458000000073241e-06, 1.6818999999834716e-05, 0.5248523469999999, 7.221999999806883e-06, 1.705599999990426e-05, 1.1778000000184363e-05, 7.83400000026191e-06, 1.1763999999914176e-05, 1.1332999999780213e-05, 1.2555000000080696e-05, 1.3000000000040757e-05, 7.443999999967588e-06, 1.09999999997612e-05, 9.556000000188192e-06, 1.040200000002045e-05, 1.4236000000167337e-05, 1.3889000000322227e-05, 1.3569000000046572e-05, 1.8167000000346434e-05, 8.541000000139576e-06, 1.2429999999952202e-05, 1.0790999999787942e-05, 1.1334000000307043e-05, 7.652999999940846e-06, 1.100000000020529e-05, 1.0889000000346982e-05, 1.3903000000148324e-05, 0.5434165970000002, 9.499999999995623e-06, 6.44399999982781e-06, 1.5429999999927446e-05, 1.3403000000078436e-05, 1.0985999999935103e-05, 1.1986000000074881e-05, 7.110999999948575e-06, 1.2332999999919991e-05, 1.3569000000046572e-05, 1.6443999999893322e-05, 1.065199999983335e-05, 1.6125000000144496e-05, 1.2874999999912262e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2903000000008547e-05, 1.2819999999802434e-05, 8.443999999663276e-06, 7.555999999908636e-06, 1.57640000000292e-05, 1.5222000000036928e-05, 1.4583000000012447e-05, 1.744499999967175e-05, 1.734700000000089e-05]</msg>
<status status="PASS" starttime="20201029 18:14:02.886" endtime="20201029 18:14:02.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.875" endtime="20201029 18:14:02.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.363" endtime="20201029 18:14:02.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.362" endtime="20201029 18:14:02.894"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.914" endtime="20201029 18:14:02.927"></status>
</kw>
<msg timestamp="20201029 18:14:02.928" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:02.910" endtime="20201029 18:14:02.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:02.934" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:02.930" endtime="20201029 18:14:02.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.937" endtime="20201029 18:14:02.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.903" endtime="20201029 18:14:02.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.899" endtime="20201029 18:14:02.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:02.960" endtime="20201029 18:14:03.331"></status>
</kw>
<msg timestamp="20201029 18:14:03.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.709648139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.709664292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:02.957" endtime="20201029 18:14:03.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.709648139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.709664292, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:03.343" endtime="20201029 18:14:03.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.365" endtime="20201029 18:14:03.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.949" endtime="20201029 18:14:03.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.945" endtime="20201029 18:14:03.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:03.383" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.040200000002045e-05}, {'diff': 1.4236000000167337e-05}, {'diff': 1.3889000000322227e-05}, {'diff': 1.3569000000046572e-05}, {'diff': 1.8167000000346434e-05}, {'diff': 8.541000...</msg>
<status status="PASS" starttime="20201029 18:14:03.373" endtime="20201029 18:14:03.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:03.395" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.040200000002045e-05, 1.4236000000167337e-05, 1.3889000000322227e-05, 1.3569000000046572e-05, 1.8167000000346434e-05, 8.541000000139576e-06, 1.2429999999952202e-05, 1.0790999999787942e-0...</msg>
<status status="PASS" starttime="20201029 18:14:03.385" endtime="20201029 18:14:03.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.408" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:03.406" endtime="20201029 18:14:03.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.415" level="INFO">VALUE: [0, 1.040200000002045e-05, 1.4236000000167337e-05, 1.3889000000322227e-05, 1.3569000000046572e-05, 1.8167000000346434e-05, 8.541000000139576e-06, 1.2429999999952202e-05, 1.0790999999787942e-05, 1.1334000000307043e-05, 7.652999999940846e-06, 1.100000000020529e-05, 1.0889000000346982e-05, 1.3903000000148324e-05, 0.5434165970000002, 9.499999999995623e-06, 6.44399999982781e-06, 1.5429999999927446e-05, 1.3403000000078436e-05, 1.0985999999935103e-05, 1.1986000000074881e-05, 7.110999999948575e-06, 1.2332999999919991e-05, 1.3569000000046572e-05, 1.6443999999893322e-05, 1.065199999983335e-05, 1.6125000000144496e-05, 1.2874999999912262e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2903000000008547e-05, 1.2819999999802434e-05, 8.443999999663276e-06, 7.555999999908636e-06, 1.57640000000292e-05, 1.5222000000036928e-05, 1.4583000000012447e-05, 1.744499999967175e-05, 1.734700000000089e-05, 0.5204276389999998, 8.332999999804969e-06, 1.531999999970779e-05, 1.3097000000072967e-05, 1.144500000016535e-05, 1.545800000002373e-05, 1.2431000000034942e-05, 6.2230000001939345e-06, 1.5792000000125483e-05, 7.194000000154688e-06, 1.4444000000057855e-05, 8.02799999988224e-06, 8.556000000048414e-06, 8.889000000067426e-06, 1.2429999999952202e-05, 1.3221999999757372e-05, 9.901999999950561e-06, 8.792000000035216e-06, 9.818999999744449e-06, 1.5097999999991174e-05, 9.903000000033302e-06, 1.1208000000095808e-05, 1.263899999992546e-05, 1.0221999999782128e-05, 1.555499999961185e-05]</msg>
<status status="PASS" starttime="20201029 18:14:03.411" endtime="20201029 18:14:03.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.398" endtime="20201029 18:14:03.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.895" endtime="20201029 18:14:03.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:02.894" endtime="20201029 18:14:03.421"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.445" endtime="20201029 18:14:03.460"></status>
</kw>
<msg timestamp="20201029 18:14:03.461" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:03.441" endtime="20201029 18:14:03.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:03.463" endtime="20201029 18:14:03.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.470" endtime="20201029 18:14:03.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.433" endtime="20201029 18:14:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.427" endtime="20201029 18:14:03.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.495" endtime="20201029 18:14:03.868"></status>
</kw>
<msg timestamp="20201029 18:14:03.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.253647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.253658819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:03.491" endtime="20201029 18:14:03.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.253647708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.253658819, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:03.879" endtime="20201029 18:14:03.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.901" endtime="20201029 18:14:03.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.483" endtime="20201029 18:14:03.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.479" endtime="20201029 18:14:03.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:03.919" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6125000000144496e-05}, {'diff': 1.2874999999912262e-05}, {'diff': 1.6221999999732617e-05}, {'diff': 1.2111000000203376e-05}, {'diff': 1.2903000000008547e-05}, {'diff': 1.28199...</msg>
<status status="PASS" starttime="20201029 18:14:03.909" endtime="20201029 18:14:03.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:03.934" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6125000000144496e-05, 1.2874999999912262e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2903000000008547e-05, 1.2819999999802434e-05, 8.443999999663276e-06, 7.555999999908636e-0...</msg>
<status status="PASS" starttime="20201029 18:14:03.921" endtime="20201029 18:14:03.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.946" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:03.943" endtime="20201029 18:14:03.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.951" level="INFO">VALUE: [0, 1.6125000000144496e-05, 1.2874999999912262e-05, 1.6221999999732617e-05, 1.2111000000203376e-05, 1.2903000000008547e-05, 1.2819999999802434e-05, 8.443999999663276e-06, 7.555999999908636e-06, 1.57640000000292e-05, 1.5222000000036928e-05, 1.4583000000012447e-05, 1.744499999967175e-05, 1.734700000000089e-05, 0.5204276389999998, 8.332999999804969e-06, 1.531999999970779e-05, 1.3097000000072967e-05, 1.144500000016535e-05, 1.545800000002373e-05, 1.2431000000034942e-05, 6.2230000001939345e-06, 1.5792000000125483e-05, 7.194000000154688e-06, 1.4444000000057855e-05, 8.02799999988224e-06, 8.556000000048414e-06, 8.889000000067426e-06, 1.2429999999952202e-05, 1.3221999999757372e-05, 9.901999999950561e-06, 8.792000000035216e-06, 9.818999999744449e-06, 1.5097999999991174e-05, 9.903000000033302e-06, 1.1208000000095808e-05, 1.263899999992546e-05, 1.0221999999782128e-05, 1.555499999961185e-05, 0.5202490560000004, 1.1471999999734805e-05, 1.1999999999900979e-05, 1.5110999999734531e-05, 1.402799999983273e-05, 1.333300000005977e-05, 1.3444999999556728e-05, 1.3861000000225943e-05, 1.2111000000203376e-05, 1.4555999999998903e-05, 8.81900000049285e-06, 1.0624999999819806e-05, 1.645800000016351e-05, 1.1111000000063598e-05, 1.46670000003013e-05, 1.2332999999919991e-05, 1.0138999999576015e-05, 1.3903000000148324e-05, 1.4207999999626963e-05, 8.806000000305403e-06, 6.111000000252886e-06, 1.5624999999630518e-05, 1.4666999999413122e-05, 7.693999999780488e-06, 5.221999999527327e-06]</msg>
<status status="PASS" starttime="20201029 18:14:03.948" endtime="20201029 18:14:03.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.937" endtime="20201029 18:14:03.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.423" endtime="20201029 18:14:03.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.422" endtime="20201029 18:14:03.955"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.976" endtime="20201029 18:14:03.990"></status>
</kw>
<msg timestamp="20201029 18:14:03.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:03.972" endtime="20201029 18:14:03.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:03.997" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:03.993" endtime="20201029 18:14:03.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:03.999" endtime="20201029 18:14:04.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.965" endtime="20201029 18:14:04.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.960" endtime="20201029 18:14:04.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.022" endtime="20201029 18:14:04.414"></status>
</kw>
<msg timestamp="20201029 18:14:04.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.774689917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.774703333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:04.019" endtime="20201029 18:14:04.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:04.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.774689917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.774703333, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:04.427" endtime="20201029 18:14:04.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.449" endtime="20201029 18:14:04.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.012" endtime="20201029 18:14:04.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.007" endtime="20201029 18:14:04.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:04.467" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 8.556000000048414e-06}, {'diff': 8.889000000067426e-06}, {'diff': 1.2429999999952202e-05}, {'diff': 1.3221999999757372e-05}, {'diff': 9.901999999950561e-06}, {'diff': 8.79200000...</msg>
<status status="PASS" starttime="20201029 18:14:04.458" endtime="20201029 18:14:04.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:04.479" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 8.556000000048414e-06, 8.889000000067426e-06, 1.2429999999952202e-05, 1.3221999999757372e-05, 9.901999999950561e-06, 8.792000000035216e-06, 9.818999999744449e-06, 1.5097999999991174e-05, ...</msg>
<status status="PASS" starttime="20201029 18:14:04.469" endtime="20201029 18:14:04.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:04.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:04.488" endtime="20201029 18:14:04.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:04.496" level="INFO">VALUE: [0, 8.556000000048414e-06, 8.889000000067426e-06, 1.2429999999952202e-05, 1.3221999999757372e-05, 9.901999999950561e-06, 8.792000000035216e-06, 9.818999999744449e-06, 1.5097999999991174e-05, 9.903000000033302e-06, 1.1208000000095808e-05, 1.263899999992546e-05, 1.0221999999782128e-05, 1.555499999961185e-05, 0.5202490560000004, 1.1471999999734805e-05, 1.1999999999900979e-05, 1.5110999999734531e-05, 1.402799999983273e-05, 1.333300000005977e-05, 1.3444999999556728e-05, 1.3861000000225943e-05, 1.2111000000203376e-05, 1.4555999999998903e-05, 8.81900000049285e-06, 1.0624999999819806e-05, 1.645800000016351e-05, 1.1111000000063598e-05, 1.46670000003013e-05, 1.2332999999919991e-05, 1.0138999999576015e-05, 1.3903000000148324e-05, 1.4207999999626963e-05, 8.806000000305403e-06, 6.111000000252886e-06, 1.5624999999630518e-05, 1.4666999999413122e-05, 7.693999999780488e-06, 5.221999999527327e-06, 0.5187226529999993, 1.5541999999868494e-05, 1.0319999999452989e-05, 9.556000000188192e-06, 1.0000000000509601e-05, 1.8652999999702047e-05, 1.09999999997612e-05, 1.5638999999900705e-05, 1.1737000000344722e-05, 5.014000000080898e-06, 1.3652999999891335e-05, 8.889000000067426e-06, 1.4097000000212745e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.223000000638024e-06, 1.3443999999473988e-05, 7.652999999940846e-06, 1.1681000000152153e-05, 1.1556000000467748e-05, 1.1555000000385007e-05, 9.930999999241408e-06, 9.444999999885795e-06, 1.1778000000184363e-05, 1.0666999999742188e-05]</msg>
<status status="PASS" starttime="20201029 18:14:04.493" endtime="20201029 18:14:04.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.482" endtime="20201029 18:14:04.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.957" endtime="20201029 18:14:04.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:03.956" endtime="20201029 18:14:04.501"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.522" endtime="20201029 18:14:04.535"></status>
</kw>
<msg timestamp="20201029 18:14:04.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:04.518" endtime="20201029 18:14:04.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:04.543" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:04.539" endtime="20201029 18:14:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.545" endtime="20201029 18:14:04.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.511" endtime="20201029 18:14:04.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.506" endtime="20201029 18:14:04.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.569" endtime="20201029 18:14:04.957"></status>
</kw>
<msg timestamp="20201029 18:14:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.295515014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.295523, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 18:14:04.565" endtime="20201029 18:14:04.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:04.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.295515014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.295523, 'source': 'DUT_IC', 'event': 'RISIN...</msg>
<status status="PASS" starttime="20201029 18:14:04.969" endtime="20201029 18:14:04.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:04.991" endtime="20201029 18:14:04.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.558" endtime="20201029 18:14:04.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.553" endtime="20201029 18:14:04.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:05.010" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.645800000016351e-05}, {'diff': 1.1111000000063598e-05}, {'diff': 1.46670000003013e-05}, {'diff': 1.2332999999919991e-05}, {'diff': 1.0138999999576015e-05}, {'diff': 1.39030000...</msg>
<status status="PASS" starttime="20201029 18:14:05.000" endtime="20201029 18:14:05.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:05.021" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.645800000016351e-05, 1.1111000000063598e-05, 1.46670000003013e-05, 1.2332999999919991e-05, 1.0138999999576015e-05, 1.3903000000148324e-05, 1.4207999999626963e-05, 8.806000000305403e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:05.012" endtime="20201029 18:14:05.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.039" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:05.037" endtime="20201029 18:14:05.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.045" level="INFO">VALUE: [0, 1.645800000016351e-05, 1.1111000000063598e-05, 1.46670000003013e-05, 1.2332999999919991e-05, 1.0138999999576015e-05, 1.3903000000148324e-05, 1.4207999999626963e-05, 8.806000000305403e-06, 6.111000000252886e-06, 1.5624999999630518e-05, 1.4666999999413122e-05, 7.693999999780488e-06, 5.221999999527327e-06, 0.5187226529999993, 1.5541999999868494e-05, 1.0319999999452989e-05, 9.556000000188192e-06, 1.0000000000509601e-05, 1.8652999999702047e-05, 1.09999999997612e-05, 1.5638999999900705e-05, 1.1737000000344722e-05, 5.014000000080898e-06, 1.3652999999891335e-05, 8.889000000067426e-06, 1.4097000000212745e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.223000000638024e-06, 1.3443999999473988e-05, 7.652999999940846e-06, 1.1681000000152153e-05, 1.1556000000467748e-05, 1.1555000000385007e-05, 9.930999999241408e-06, 9.444999999885795e-06, 1.1778000000184363e-05, 1.0666999999742188e-05, 0.5360733890000002, 8.471999999315472e-06, 1.5986000000189904e-05, 1.3195000000187918e-05, 8.986000000099637e-06, 1.1444999999277172e-05, 1.3888000000683576e-05, 1.3443999999473988e-05, 9.66599999951967e-06, 1.0055999999813992e-05, 8.180000000024279e-06, 1.5333999999533887e-05, 1.0347999999993363e-05, 1.0778000000044585e-05, 1.4903000000288102e-05, 1.174999999964399e-05, 1.1473000000705724e-05, 1.0762999999691658e-05, 8.47200000020365e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.1014000000031388e-05, 8.249999999598856e-06, 1.4569999999380912e-05, 1.0319999999452989e-05]</msg>
<status status="PASS" starttime="20201029 18:14:05.042" endtime="20201029 18:14:05.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.030" endtime="20201029 18:14:05.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.502" endtime="20201029 18:14:05.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:04.501" endtime="20201029 18:14:05.050"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.072" endtime="20201029 18:14:05.087"></status>
</kw>
<msg timestamp="20201029 18:14:05.088" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:05.068" endtime="20201029 18:14:05.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.095" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:05.091" endtime="20201029 18:14:05.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.097" endtime="20201029 18:14:05.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.060" endtime="20201029 18:14:05.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.055" endtime="20201029 18:14:05.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.122" endtime="20201029 18:14:05.527"></status>
</kw>
<msg timestamp="20201029 18:14:05.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.814812403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.814823528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:05.119" endtime="20201029 18:14:05.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.814812403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.814823528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:05.539" endtime="20201029 18:14:05.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.564" endtime="20201029 18:14:05.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.111" endtime="20201029 18:14:05.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.106" endtime="20201029 18:14:05.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:05.583" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4097000000212745e-05}, {'diff': 1.5443999999753544e-05}, {'diff': 1.3000000000040757e-05}, {'diff': 6.223000000638024e-06}, {'diff': 1.3443999999473988e-05}, {'diff': 7.652999...</msg>
<status status="PASS" starttime="20201029 18:14:05.572" endtime="20201029 18:14:05.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:05.595" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4097000000212745e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.223000000638024e-06, 1.3443999999473988e-05, 7.652999999940846e-06, 1.1681000000152153e-05, 1.1556000000467748e-0...</msg>
<status status="PASS" starttime="20201029 18:14:05.585" endtime="20201029 18:14:05.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.607" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:05.605" endtime="20201029 18:14:05.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.613" level="INFO">VALUE: [0, 1.4097000000212745e-05, 1.5443999999753544e-05, 1.3000000000040757e-05, 6.223000000638024e-06, 1.3443999999473988e-05, 7.652999999940846e-06, 1.1681000000152153e-05, 1.1556000000467748e-05, 1.1555000000385007e-05, 9.930999999241408e-06, 9.444999999885795e-06, 1.1778000000184363e-05, 1.0666999999742188e-05, 0.5360733890000002, 8.471999999315472e-06, 1.5986000000189904e-05, 1.3195000000187918e-05, 8.986000000099637e-06, 1.1444999999277172e-05, 1.3888000000683576e-05, 1.3443999999473988e-05, 9.66599999951967e-06, 1.0055999999813992e-05, 8.180000000024279e-06, 1.5333999999533887e-05, 1.0347999999993363e-05, 1.0778000000044585e-05, 1.4903000000288102e-05, 1.174999999964399e-05, 1.1473000000705724e-05, 1.0762999999691658e-05, 8.47200000020365e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.1014000000031388e-05, 8.249999999598856e-06, 1.4569999999380912e-05, 1.0319999999452989e-05, 0.5407285139999995, 8.320000000061611e-06, 1.5971999999919717e-05, 8.444999999746017e-06, 1.144500000016535e-05, 7.888999999927648e-06, 1.1820000000106745e-05, 1.0875000000076795e-05, 1.3110999999454975e-05, 9.778000000792986e-06, 1.5125000000004718e-05, 1.3778000000463919e-05, 1.1222999999560557e-05, 4.999999999810711e-06, 1.0333000000528614e-05, 1.5971999999919717e-05, 1.2096999999933189e-05, 1.3000000000040757e-05, 1.5999999999571912e-05, 1.1999999999900979e-05, 8.972000000717628e-06, 1.4000000000180535e-05, 1.1443999999194432e-05, 1.5472000000293917e-05, 1.1332999999780213e-05]</msg>
<status status="PASS" starttime="20201029 18:14:05.610" endtime="20201029 18:14:05.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.598" endtime="20201029 18:14:05.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.052" endtime="20201029 18:14:05.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.051" endtime="20201029 18:14:05.618"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.640" endtime="20201029 18:14:05.654"></status>
</kw>
<msg timestamp="20201029 18:14:05.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:05.636" endtime="20201029 18:14:05.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:05.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:05.658" endtime="20201029 18:14:05.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.664" endtime="20201029 18:14:05.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.628" endtime="20201029 18:14:05.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.623" endtime="20201029 18:14:05.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:05.689" endtime="20201029 18:14:06.087"></status>
</kw>
<msg timestamp="20201029 18:14:06.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.351447681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.351463583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:05.686" endtime="20201029 18:14:06.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.351447681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.351463583, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:06.099" endtime="20201029 18:14:06.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.122" endtime="20201029 18:14:06.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.678" endtime="20201029 18:14:06.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.673" endtime="20201029 18:14:06.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:06.141" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0347999999993363e-05}, {'diff': 1.0778000000044585e-05}, {'diff': 1.4903000000288102e-05}, {'diff': 1.174999999964399e-05}, {'diff': 1.1473000000705724e-05}, {'diff': 1.076299...</msg>
<status status="PASS" starttime="20201029 18:14:06.131" endtime="20201029 18:14:06.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:06.154" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0347999999993363e-05, 1.0778000000044585e-05, 1.4903000000288102e-05, 1.174999999964399e-05, 1.1473000000705724e-05, 1.0762999999691658e-05, 8.47200000020365e-06, 1.3347000000329956e-05...</msg>
<status status="PASS" starttime="20201029 18:14:06.143" endtime="20201029 18:14:06.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.166" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:06.163" endtime="20201029 18:14:06.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.172" level="INFO">VALUE: [0, 1.0347999999993363e-05, 1.0778000000044585e-05, 1.4903000000288102e-05, 1.174999999964399e-05, 1.1473000000705724e-05, 1.0762999999691658e-05, 8.47200000020365e-06, 1.3347000000329956e-05, 1.2347000000190178e-05, 1.1014000000031388e-05, 8.249999999598856e-06, 1.4569999999380912e-05, 1.0319999999452989e-05, 0.5407285139999995, 8.320000000061611e-06, 1.5971999999919717e-05, 8.444999999746017e-06, 1.144500000016535e-05, 7.888999999927648e-06, 1.1820000000106745e-05, 1.0875000000076795e-05, 1.3110999999454975e-05, 9.778000000792986e-06, 1.5125000000004718e-05, 1.3778000000463919e-05, 1.1222999999560557e-05, 4.999999999810711e-06, 1.0333000000528614e-05, 1.5971999999919717e-05, 1.2096999999933189e-05, 1.3000000000040757e-05, 1.5999999999571912e-05, 1.1999999999900979e-05, 8.972000000717628e-06, 1.4000000000180535e-05, 1.1443999999194432e-05, 1.5472000000293917e-05, 1.1332999999780213e-05, 0.5563325279999995, 1.700000000059987e-05, 1.0778000000044585e-05, 1.6430000000511313e-05, 1.2444000000222388e-05, 1.5181000000197287e-05, 1.2458000000492575e-05, 1.2555999999719347e-05, 5.666999999931477e-06, 1.576400000047329e-05, 1.179200000045455e-05, 6.332999999969502e-06, 1.3111000000343154e-05, 1.6570000000548646e-05, 1.3222999999840113e-05, 1.4194000000244955e-05, 7.888999999927648e-06, 1.4777000000520957e-05, 7.2500000003472564e-06, 1.090299999972899e-05, 8.611000000158242e-06, 1.3319999999872323e-05, 1.3693999999730977e-05, 1.3221999999757372e-05, 1.590300000042788e-05]</msg>
<status status="PASS" starttime="20201029 18:14:06.168" endtime="20201029 18:14:06.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.157" endtime="20201029 18:14:06.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.620" endtime="20201029 18:14:06.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:05.619" endtime="20201029 18:14:06.176"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.198" endtime="20201029 18:14:06.212"></status>
</kw>
<msg timestamp="20201029 18:14:06.213" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:06.194" endtime="20201029 18:14:06.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.219" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:06.215" endtime="20201029 18:14:06.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.222" endtime="20201029 18:14:06.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.187" endtime="20201029 18:14:06.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.182" endtime="20201029 18:14:06.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.247" endtime="20201029 18:14:06.636"></status>
</kw>
<msg timestamp="20201029 18:14:06.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.892741347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.892749569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:06.243" endtime="20201029 18:14:06.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.892741347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.892749569, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:06.648" endtime="20201029 18:14:06.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.672" endtime="20201029 18:14:06.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.236" endtime="20201029 18:14:06.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.231" endtime="20201029 18:14:06.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:06.691" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1222999999560557e-05}, {'diff': 4.999999999810711e-06}, {'diff': 1.0333000000528614e-05}, {'diff': 1.5971999999919717e-05}, {'diff': 1.2096999999933189e-05}, {'diff': 1.300000...</msg>
<status status="PASS" starttime="20201029 18:14:06.681" endtime="20201029 18:14:06.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:06.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1222999999560557e-05, 4.999999999810711e-06, 1.0333000000528614e-05, 1.5971999999919717e-05, 1.2096999999933189e-05, 1.3000000000040757e-05, 1.5999999999571912e-05, 1.1999999999900979e-...</msg>
<status status="PASS" starttime="20201029 18:14:06.694" endtime="20201029 18:14:06.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.714" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:06.712" endtime="20201029 18:14:06.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.720" level="INFO">VALUE: [0, 1.1222999999560557e-05, 4.999999999810711e-06, 1.0333000000528614e-05, 1.5971999999919717e-05, 1.2096999999933189e-05, 1.3000000000040757e-05, 1.5999999999571912e-05, 1.1999999999900979e-05, 8.972000000717628e-06, 1.4000000000180535e-05, 1.1443999999194432e-05, 1.5472000000293917e-05, 1.1332999999780213e-05, 0.5563325279999995, 1.700000000059987e-05, 1.0778000000044585e-05, 1.6430000000511313e-05, 1.2444000000222388e-05, 1.5181000000197287e-05, 1.2458000000492575e-05, 1.2555999999719347e-05, 5.666999999931477e-06, 1.576400000047329e-05, 1.179200000045455e-05, 6.332999999969502e-06, 1.3111000000343154e-05, 1.6570000000548646e-05, 1.3222999999840113e-05, 1.4194000000244955e-05, 7.888999999927648e-06, 1.4777000000520957e-05, 7.2500000003472564e-06, 1.090299999972899e-05, 8.611000000158242e-06, 1.3319999999872323e-05, 1.3693999999730977e-05, 1.3221999999757372e-05, 1.590300000042788e-05, 0.5474302089999998, 9.792000000174994e-06, 7.013999999472276e-06, 1.2693999999591199e-05, 1.372200000027135e-05, 6.222000000555283e-06, 1.3014000000310944e-05, 1.6222000000176706e-05, 1.4986000000050126e-05, 1.144500000016535e-05, 1.4874999999747729e-05, 7.749999999973056e-06, 1.1457999999464619e-05, 8.986000000099637e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0667000000630367e-05, 1.2222000000505773e-05, 1.2542000000337339e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4889000000017916e-05, 1.2209000000318326e-05, 1.3458000000632353e-05, 1.555600000013868e-05]</msg>
<status status="PASS" starttime="20201029 18:14:06.717" endtime="20201029 18:14:06.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.705" endtime="20201029 18:14:06.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.178" endtime="20201029 18:14:06.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.177" endtime="20201029 18:14:06.725"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.747" endtime="20201029 18:14:06.762"></status>
</kw>
<msg timestamp="20201029 18:14:06.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:06.743" endtime="20201029 18:14:06.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:06.770" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:06.766" endtime="20201029 18:14:06.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.772" endtime="20201029 18:14:06.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.735" endtime="20201029 18:14:06.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.730" endtime="20201029 18:14:06.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:06.797" endtime="20201029 18:14:07.177"></status>
</kw>
<msg timestamp="20201029 18:14:07.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.4496715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.449682833, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 18:14:06.794" endtime="20201029 18:14:07.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.4496715, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.449682833, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201029 18:14:07.188" endtime="20201029 18:14:07.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.210" endtime="20201029 18:14:07.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.786" endtime="20201029 18:14:07.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.781" endtime="20201029 18:14:07.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:07.229" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.3111000000343154e-05}, {'diff': 1.6570000000548646e-05}, {'diff': 1.3222999999840113e-05}, {'diff': 1.4194000000244955e-05}, {'diff': 7.888999999927648e-06}, {'diff': 1.477700...</msg>
<status status="PASS" starttime="20201029 18:14:07.219" endtime="20201029 18:14:07.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:07.241" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.3111000000343154e-05, 1.6570000000548646e-05, 1.3222999999840113e-05, 1.4194000000244955e-05, 7.888999999927648e-06, 1.4777000000520957e-05, 7.2500000003472564e-06, 1.090299999972899e-0...</msg>
<status status="PASS" starttime="20201029 18:14:07.231" endtime="20201029 18:14:07.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.252" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:07.250" endtime="20201029 18:14:07.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.258" level="INFO">VALUE: [0, 1.3111000000343154e-05, 1.6570000000548646e-05, 1.3222999999840113e-05, 1.4194000000244955e-05, 7.888999999927648e-06, 1.4777000000520957e-05, 7.2500000003472564e-06, 1.090299999972899e-05, 8.611000000158242e-06, 1.3319999999872323e-05, 1.3693999999730977e-05, 1.3221999999757372e-05, 1.590300000042788e-05, 0.5474302089999998, 9.792000000174994e-06, 7.013999999472276e-06, 1.2693999999591199e-05, 1.372200000027135e-05, 6.222000000555283e-06, 1.3014000000310944e-05, 1.6222000000176706e-05, 1.4986000000050126e-05, 1.144500000016535e-05, 1.4874999999747729e-05, 7.749999999973056e-06, 1.1457999999464619e-05, 8.986000000099637e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0667000000630367e-05, 1.2222000000505773e-05, 1.2542000000337339e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4889000000017916e-05, 1.2209000000318326e-05, 1.3458000000632353e-05, 1.555600000013868e-05, 0.5395680410000008, 9.888999999319026e-06, 1.1888999999598582e-05, 9.653000000220402e-06, 1.3110999999454975e-05, 1.4333000000199547e-05, 1.1235999999748003e-05, 8.541999999778227e-06, 1.422299999997989e-05, 1.6834000000187643e-05, 1.144400000008261e-05, 1.3000000000040757e-05, 1.0721999999852017e-05, 9.971999999969228e-06, 1.611099999987431e-05, 1.4986000000050126e-05, 1.5791000000042743e-05, 7.6249999994004725e-06, 8.47300000028639e-06, 8.417000000093822e-06, 1.4611000000108731e-05, 1.5000000000320313e-05, 8.666999999462632e-06, 1.4305000000547352e-05, 9.791000000092254e-06]</msg>
<status status="PASS" starttime="20201029 18:14:07.254" endtime="20201029 18:14:07.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.243" endtime="20201029 18:14:07.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.727" endtime="20201029 18:14:07.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:06.726" endtime="20201029 18:14:07.262"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.283" endtime="20201029 18:14:07.296"></status>
</kw>
<msg timestamp="20201029 18:14:07.298" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:07.279" endtime="20201029 18:14:07.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.304" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:07.300" endtime="20201029 18:14:07.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.306" endtime="20201029 18:14:07.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.272" endtime="20201029 18:14:07.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.267" endtime="20201029 18:14:07.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.330" endtime="20201029 18:14:07.698"></status>
</kw>
<msg timestamp="20201029 18:14:07.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.997699236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.997707056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:07.327" endtime="20201029 18:14:07.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.997699236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.997707056, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:07.709" endtime="20201029 18:14:07.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.731" endtime="20201029 18:14:07.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.319" endtime="20201029 18:14:07.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.314" endtime="20201029 18:14:07.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:07.750" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1457999999464619e-05}, {'diff': 8.986000000099637e-06}, {'diff': 1.2667000000021744e-05}, {'diff': 8.000000000230045e-06}, {'diff': 1.0667000000630367e-05}, {'diff': 1.2222000...</msg>
<status status="PASS" starttime="20201029 18:14:07.740" endtime="20201029 18:14:07.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:07.763" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1457999999464619e-05, 8.986000000099637e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0667000000630367e-05, 1.2222000000505773e-05, 1.2542000000337339e-05, 1.2347000000190178e-0...</msg>
<status status="PASS" starttime="20201029 18:14:07.752" endtime="20201029 18:14:07.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.773" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:07.771" endtime="20201029 18:14:07.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.779" level="INFO">VALUE: [0, 1.1457999999464619e-05, 8.986000000099637e-06, 1.2667000000021744e-05, 8.000000000230045e-06, 1.0667000000630367e-05, 1.2222000000505773e-05, 1.2542000000337339e-05, 1.2347000000190178e-05, 1.5222000000036928e-05, 1.4889000000017916e-05, 1.2209000000318326e-05, 1.3458000000632353e-05, 1.555600000013868e-05, 0.5395680410000008, 9.888999999319026e-06, 1.1888999999598582e-05, 9.653000000220402e-06, 1.3110999999454975e-05, 1.4333000000199547e-05, 1.1235999999748003e-05, 8.541999999778227e-06, 1.422299999997989e-05, 1.6834000000187643e-05, 1.144400000008261e-05, 1.3000000000040757e-05, 1.0721999999852017e-05, 9.971999999969228e-06, 1.611099999987431e-05, 1.4986000000050126e-05, 1.5791000000042743e-05, 7.6249999994004725e-06, 8.47300000028639e-06, 8.417000000093822e-06, 1.4611000000108731e-05, 1.5000000000320313e-05, 8.666999999462632e-06, 1.4305000000547352e-05, 9.791000000092254e-06, 0.5228164169999996, 1.4445000001472863e-05, 1.4333000001087726e-05, 1.5097000000352523e-05, 1.1888999999598582e-05, 8.97199999982945e-06, 8.681000000620998e-06, 1.3138999999995349e-05, 1.2972000000388562e-05, 1.5902999999539702e-05, 1.5443999998865365e-05, 8.263999999869043e-06, 1.312500000061334e-05, 1.452699999937579e-05, 1.1887999999515841e-05, 1.238900000011256e-05, 1.1693999999451421e-05, 1.3221999999757372e-05, 1.1221999999477816e-05, 1.0987000001350111e-05, 1.0041999999543805e-05, 9.319999998425033e-06, 9.194000000434244e-06, 1.1416999999624977e-05, 8.653000000080624e-06]</msg>
<status status="PASS" starttime="20201029 18:14:07.775" endtime="20201029 18:14:07.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.765" endtime="20201029 18:14:07.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.264" endtime="20201029 18:14:07.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.263" endtime="20201029 18:14:07.783"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.804" endtime="20201029 18:14:07.817"></status>
</kw>
<msg timestamp="20201029 18:14:07.819" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:07.800" endtime="20201029 18:14:07.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:07.825" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:07.821" endtime="20201029 18:14:07.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.827" endtime="20201029 18:14:07.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.793" endtime="20201029 18:14:07.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.788" endtime="20201029 18:14:07.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:07.851" endtime="20201029 18:14:08.228"></status>
</kw>
<msg timestamp="20201029 18:14:08.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.537845319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.537855167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:07.847" endtime="20201029 18:14:08.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.537845319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.537855167, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:08.239" endtime="20201029 18:14:08.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.262" endtime="20201029 18:14:08.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.840" endtime="20201029 18:14:08.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.835" endtime="20201029 18:14:08.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:08.280" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.0721999999852017e-05}, {'diff': 9.971999999969228e-06}, {'diff': 1.611099999987431e-05}, {'diff': 1.4986000000050126e-05}, {'diff': 1.5791000000042743e-05}, {'diff': 7.6249999...</msg>
<status status="PASS" starttime="20201029 18:14:08.270" endtime="20201029 18:14:08.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:08.291" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.0721999999852017e-05, 9.971999999969228e-06, 1.611099999987431e-05, 1.4986000000050126e-05, 1.5791000000042743e-05, 7.6249999994004725e-06, 8.47300000028639e-06, 8.417000000093822e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:08.282" endtime="20201029 18:14:08.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.301" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:08.299" endtime="20201029 18:14:08.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.307" level="INFO">VALUE: [0, 1.0721999999852017e-05, 9.971999999969228e-06, 1.611099999987431e-05, 1.4986000000050126e-05, 1.5791000000042743e-05, 7.6249999994004725e-06, 8.47300000028639e-06, 8.417000000093822e-06, 1.4611000000108731e-05, 1.5000000000320313e-05, 8.666999999462632e-06, 1.4305000000547352e-05, 9.791000000092254e-06, 0.5228164169999996, 1.4445000001472863e-05, 1.4333000001087726e-05, 1.5097000000352523e-05, 1.1888999999598582e-05, 8.97199999982945e-06, 8.681000000620998e-06, 1.3138999999995349e-05, 1.2972000000388562e-05, 1.5902999999539702e-05, 1.5443999998865365e-05, 8.263999999869043e-06, 1.312500000061334e-05, 1.452699999937579e-05, 1.1887999999515841e-05, 1.238900000011256e-05, 1.1693999999451421e-05, 1.3221999999757372e-05, 1.1221999999477816e-05, 1.0987000001350111e-05, 1.0041999999543805e-05, 9.319999998425033e-06, 9.194000000434244e-06, 1.1416999999624977e-05, 8.653000000080624e-06, 0.5097743470000005, 9.153000000594602e-06, 1.5110999999734531e-05, 1.5333000000339325e-05, 9.151999998735505e-06, 9.667000000490589e-06, 1.4888999999129737e-05, 1.3556000000747304e-05, 1.1374999999702595e-05, 1.3542000001365295e-05, 1.36670000010497e-05, 9.347000000659023e-06, 1.219500000004814e-05, 6.541999999498671e-06, 1.1346999999162222e-05, 7.068999998693926e-06, 1.0680999999124197e-05, 9.222000000974617e-06, 9.444000001579411e-06, 1.090299999972899e-05, 1.620799999990652e-05, 1.2347000000190178e-05, 1.1985999998742614e-05, 8.986000000987815e-06, 9.651999999249483e-06]</msg>
<status status="PASS" starttime="20201029 18:14:08.303" endtime="20201029 18:14:08.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.292" endtime="20201029 18:14:08.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.785" endtime="20201029 18:14:08.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:07.784" endtime="20201029 18:14:08.311"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.331" endtime="20201029 18:14:08.346"></status>
</kw>
<msg timestamp="20201029 18:14:08.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:08.328" endtime="20201029 18:14:08.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.353" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:08.349" endtime="20201029 18:14:08.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.356" endtime="20201029 18:14:08.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.321" endtime="20201029 18:14:08.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.316" endtime="20201029 18:14:08.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.379" endtime="20201029 18:14:08.749"></status>
</kw>
<msg timestamp="20201029 18:14:08.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.061229847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.061243139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:08.376" endtime="20201029 18:14:08.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.061229847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.061243139, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:08.760" endtime="20201029 18:14:08.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.782" endtime="20201029 18:14:08.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.368" endtime="20201029 18:14:08.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.364" endtime="20201029 18:14:08.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:08.801" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.312500000061334e-05}, {'diff': 1.452699999937579e-05}, {'diff': 1.1887999999515841e-05}, {'diff': 1.238900000011256e-05}, {'diff': 1.1693999999451421e-05}, {'diff': 1.32219999...</msg>
<status status="PASS" starttime="20201029 18:14:08.791" endtime="20201029 18:14:08.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:08.817" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.312500000061334e-05, 1.452699999937579e-05, 1.1887999999515841e-05, 1.238900000011256e-05, 1.1693999999451421e-05, 1.3221999999757372e-05, 1.1221999999477816e-05, 1.0987000001350111e-05...</msg>
<status status="PASS" starttime="20201029 18:14:08.803" endtime="20201029 18:14:08.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.827" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:08.825" endtime="20201029 18:14:08.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.832" level="INFO">VALUE: [0, 1.312500000061334e-05, 1.452699999937579e-05, 1.1887999999515841e-05, 1.238900000011256e-05, 1.1693999999451421e-05, 1.3221999999757372e-05, 1.1221999999477816e-05, 1.0987000001350111e-05, 1.0041999999543805e-05, 9.319999998425033e-06, 9.194000000434244e-06, 1.1416999999624977e-05, 8.653000000080624e-06, 0.5097743470000005, 9.153000000594602e-06, 1.5110999999734531e-05, 1.5333000000339325e-05, 9.151999998735505e-06, 9.667000000490589e-06, 1.4888999999129737e-05, 1.3556000000747304e-05, 1.1374999999702595e-05, 1.3542000001365295e-05, 1.36670000010497e-05, 9.347000000659023e-06, 1.219500000004814e-05, 6.541999999498671e-06, 1.1346999999162222e-05, 7.068999998693926e-06, 1.0680999999124197e-05, 9.222000000974617e-06, 9.444000001579411e-06, 1.090299999972899e-05, 1.620799999990652e-05, 1.2347000000190178e-05, 1.1985999998742614e-05, 8.986000000987815e-06, 9.651999999249483e-06, 0.5180823889999999, 1.4389000000392116e-05, 1.452799999945853e-05, 1.165299999961178e-05, 9.667000000490589e-06, 8.23599999932867e-06, 1.2207999999347408e-05, 1.4013999999562543e-05, 1.8014000000121655e-05, 5.666999999931477e-06, 1.1084000000494143e-05, 7.861000000275453e-06, 1.7111000000014087e-05, 1.1999999999900979e-05, 1.4291000001165344e-05, 6.665999999100336e-06, 6.985999998931902e-06, 1.1861000000834565e-05, 1.2222000000505773e-05, 1.60139999998421e-05, 8.444999998857838e-06, 1.190199999889785e-05, 1.5110999999734531e-05, 1.3458999999826915e-05, 1.3902999999260146e-05]</msg>
<status status="PASS" starttime="20201029 18:14:08.829" endtime="20201029 18:14:08.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.818" endtime="20201029 18:14:08.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.313" endtime="20201029 18:14:08.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.312" endtime="20201029 18:14:08.837"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.857" endtime="20201029 18:14:08.870"></status>
</kw>
<msg timestamp="20201029 18:14:08.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:08.854" endtime="20201029 18:14:08.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:08.878" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:08.874" endtime="20201029 18:14:08.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.880" endtime="20201029 18:14:08.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.846" endtime="20201029 18:14:08.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.842" endtime="20201029 18:14:08.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:08.903" endtime="20201029 18:14:09.261"></status>
</kw>
<msg timestamp="20201029 18:14:09.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.571589222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.571602986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:08.900" endtime="20201029 18:14:09.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.571589222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.571602986, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:09.272" endtime="20201029 18:14:09.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.295" endtime="20201029 18:14:09.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.892" endtime="20201029 18:14:09.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.888" endtime="20201029 18:14:09.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:09.313" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.219500000004814e-05}, {'diff': 6.541999999498671e-06}, {'diff': 1.1346999999162222e-05}, {'diff': 7.068999998693926e-06}, {'diff': 1.0680999999124197e-05}, {'diff': 9.22200000...</msg>
<status status="PASS" starttime="20201029 18:14:09.304" endtime="20201029 18:14:09.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:09.325" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.219500000004814e-05, 6.541999999498671e-06, 1.1346999999162222e-05, 7.068999998693926e-06, 1.0680999999124197e-05, 9.222000000974617e-06, 9.444000001579411e-06, 1.090299999972899e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:14:09.315" endtime="20201029 18:14:09.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.336" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:09.333" endtime="20201029 18:14:09.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.341" level="INFO">VALUE: [0, 1.219500000004814e-05, 6.541999999498671e-06, 1.1346999999162222e-05, 7.068999998693926e-06, 1.0680999999124197e-05, 9.222000000974617e-06, 9.444000001579411e-06, 1.090299999972899e-05, 1.620799999990652e-05, 1.2347000000190178e-05, 1.1985999998742614e-05, 8.986000000987815e-06, 9.651999999249483e-06, 0.5180823889999999, 1.4389000000392116e-05, 1.452799999945853e-05, 1.165299999961178e-05, 9.667000000490589e-06, 8.23599999932867e-06, 1.2207999999347408e-05, 1.4013999999562543e-05, 1.8014000000121655e-05, 5.666999999931477e-06, 1.1084000000494143e-05, 7.861000000275453e-06, 1.7111000000014087e-05, 1.1999999999900979e-05, 1.4291000001165344e-05, 6.665999999100336e-06, 6.985999998931902e-06, 1.1861000000834565e-05, 1.2222000000505773e-05, 1.60139999998421e-05, 8.444999998857838e-06, 1.190199999889785e-05, 1.5110999999734531e-05, 1.3458999999826915e-05, 1.3902999999260146e-05, 0.5130489170000008, 1.0750000001280569e-05, 1.1666000000687404e-05, 1.273600000040176e-05, 1.3166999998759366e-05, 1.1332999999780213e-05, 1.322300000161647e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4499999998918156e-05, 1.0542000000057783e-05, 1.1208000000095808e-05, 1.1888999999598582e-05, 1.5790999999154565e-05, 1.2778000000324141e-05, 1.198600000051897e-05, 1.7389000001699628e-05, 7.458000000681864e-06, 1.477799999882734e-05, 1.1332999999780213e-05, 1.1903000000756947e-05, 1.352800000020693e-05, 1.090299999972899e-05, 9.000000000369823e-06]</msg>
<status status="PASS" starttime="20201029 18:14:09.338" endtime="20201029 18:14:09.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.327" endtime="20201029 18:14:09.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.838" endtime="20201029 18:14:09.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:08.837" endtime="20201029 18:14:09.345"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.366" endtime="20201029 18:14:09.379"></status>
</kw>
<msg timestamp="20201029 18:14:09.381" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:09.363" endtime="20201029 18:14:09.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.387" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:09.383" endtime="20201029 18:14:09.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.389" endtime="20201029 18:14:09.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.356" endtime="20201029 18:14:09.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.351" endtime="20201029 18:14:09.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.412" endtime="20201029 18:14:09.770"></status>
</kw>
<msg timestamp="20201029 18:14:09.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.090253514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.090259625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:09.409" endtime="20201029 18:14:09.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.090253514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 9.090259625, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:09.782" endtime="20201029 18:14:09.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.805" endtime="20201029 18:14:09.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.402" endtime="20201029 18:14:09.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.397" endtime="20201029 18:14:09.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:09.823" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.7111000000014087e-05}, {'diff': 1.1999999999900979e-05}, {'diff': 1.4291000001165344e-05}, {'diff': 6.665999999100336e-06}, {'diff': 6.985999998931902e-06}, {'diff': 1.1861000...</msg>
<status status="PASS" starttime="20201029 18:14:09.813" endtime="20201029 18:14:09.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:09.834" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.7111000000014087e-05, 1.1999999999900979e-05, 1.4291000001165344e-05, 6.665999999100336e-06, 6.985999998931902e-06, 1.1861000000834565e-05, 1.2222000000505773e-05, 1.60139999998421e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:09.825" endtime="20201029 18:14:09.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.844" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:14:09.842" endtime="20201029 18:14:09.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.850" level="INFO">VALUE: [0, 1.7111000000014087e-05, 1.1999999999900979e-05, 1.4291000001165344e-05, 6.665999999100336e-06, 6.985999998931902e-06, 1.1861000000834565e-05, 1.2222000000505773e-05, 1.60139999998421e-05, 8.444999998857838e-06, 1.190199999889785e-05, 1.5110999999734531e-05, 1.3458999999826915e-05, 1.3902999999260146e-05, 0.5130489170000008, 1.0750000001280569e-05, 1.1666000000687404e-05, 1.273600000040176e-05, 1.3166999998759366e-05, 1.1332999999780213e-05, 1.322300000161647e-05, 9.667000000490589e-06, 1.1999999999900979e-05, 1.1763999999914176e-05, 1.4499999998918156e-05, 1.0542000000057783e-05, 1.1208000000095808e-05, 1.1888999999598582e-05, 1.5790999999154565e-05, 1.2778000000324141e-05, 1.198600000051897e-05, 1.7389000001699628e-05, 7.458000000681864e-06, 1.477799999882734e-05, 1.1332999999780213e-05, 1.1903000000756947e-05, 1.352800000020693e-05, 1.090299999972899e-05, 9.000000000369823e-06, 0.49831930600000085, 1.2458000000492575e-05, 1.5333000000339325e-05, 1.1221999999477816e-05, 1.0680999999124197e-05, 1.3666999999273344e-05, 1.60139999998421e-05, 1.7319000001236873e-05, 7.333000000997458e-06, 1.233400000089091e-05, 1.5570000000408868e-05, 1.224999999926979e-05, 5.333999999024286e-06, 1.0777999998268228e-05, 1.4555999999998903e-05, 9.110999998895863e-06, 1.2568999999018615e-05, 1.3056000000233325e-05, 1.2653000000639736e-05, 1.263899999948137e-05, 7.43000000014149e-06, 1.3110999999454975e-05, 7.999999999341867e-06, 7.583000000366269e-06, 1.1556000000467748e-05]</msg>
<status status="PASS" starttime="20201029 18:14:09.846" endtime="20201029 18:14:09.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.836" endtime="20201029 18:14:09.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.347" endtime="20201029 18:14:09.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.346" endtime="20201029 18:14:09.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:13:59.250" endtime="20201029 18:14:09.855"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:13:59.050" endtime="20201029 18:14:09.856" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:09.873" endtime="20201029 18:14:09.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.869" endtime="20201029 18:14:09.896"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.931" endtime="20201029 18:14:09.949"></status>
</kw>
<msg timestamp="20201029 18:14:09.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:09.928" endtime="20201029 18:14:09.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.957" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:09.953" endtime="20201029 18:14:09.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:09.964" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:09.959" endtime="20201029 18:14:09.964"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:09.921" endtime="20201029 18:14:09.966"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:09.914" endtime="20201029 18:14:09.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.911" endtime="20201029 18:14:09.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:09.977" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:09.976" endtime="20201029 18:14:09.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.971" endtime="20201029 18:14:09.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.908" endtime="20201029 18:14:09.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.906" endtime="20201029 18:14:09.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:09.980" endtime="20201029 18:14:09.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.902" endtime="20201029 18:14:09.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.898" endtime="20201029 18:14:09.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.867" endtime="20201029 18:14:09.988"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.010" endtime="20201029 18:14:10.024"></status>
</kw>
<msg timestamp="20201029 18:14:10.026" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.006" endtime="20201029 18:14:10.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.028" endtime="20201029 18:14:10.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.034" endtime="20201029 18:14:10.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.999" endtime="20201029 18:14:10.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.994" endtime="20201029 18:14:10.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.057" endtime="20201029 18:14:10.438"></status>
</kw>
<msg timestamp="20201029 18:14:10.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128425347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128426917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:10.054" endtime="20201029 18:14:10.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128425347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128426917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:10.459" endtime="20201029 18:14:10.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.487" endtime="20201029 18:14:10.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.047" endtime="20201029 18:14:10.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.042" endtime="20201029 18:14:10.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:10.512" level="INFO">${RESULT} = [{'diff': 1.5700000000062886e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.5560000000136576e-06}, {'diff': 1.52800000000064e-06},...</msg>
<status status="PASS" starttime="20201029 18:14:10.501" endtime="20201029 18:14:10.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:10.523" level="INFO">${OVERHEAD} = {'diff': [1.5700000000062886e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.596999999992077e-06, 1.5...</msg>
<status status="PASS" starttime="20201029 18:14:10.515" endtime="20201029 18:14:10.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.538" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:10.535" endtime="20201029 18:14:10.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.546" level="INFO">VALUE: [1.5700000000062886e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5549999999864283e-06, 1.5560000000136576e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.596999999992077e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.5979999999915506e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.5269999999734107e-06, 1.5689999999790594e-06, 1.541999999993271e-06, 1.5420000000210266e-06, 1.5549999999864283e-06, 1.52800000000064e-06, 1.596999999992077e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5560000000136576e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5560000000136576e-06, 1.514000000008009e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.5560000000136576e-06, 1.5420000000210266e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.5420000000210266e-06, 1.5549999999864283e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.5560000000136576e-06, 1.541999999993271e-06]</msg>
<status status="PASS" starttime="20201029 18:14:10.541" endtime="20201029 18:14:10.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.526" endtime="20201029 18:14:10.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.991" endtime="20201029 18:14:10.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.990" endtime="20201029 18:14:10.554"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.579" endtime="20201029 18:14:10.594"></status>
</kw>
<msg timestamp="20201029 18:14:10.595" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.575" endtime="20201029 18:14:10.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:10.601" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:10.597" endtime="20201029 18:14:10.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.603" endtime="20201029 18:14:10.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.567" endtime="20201029 18:14:10.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.561" endtime="20201029 18:14:10.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:10.628" endtime="20201029 18:14:11.007"></status>
</kw>
<msg timestamp="20201029 18:14:11.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128693139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:10.625" endtime="20201029 18:14:11.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128691597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128693139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:11.018" endtime="20201029 18:14:11.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.045" endtime="20201029 18:14:11.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.616" endtime="20201029 18:14:11.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.611" endtime="20201029 18:14:11.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:11.071" level="INFO">${RESULT} = [{'diff': 1.5420000000210266e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.541999999993271e-06}, {'diff': 1.541000000021553e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:11.057" endtime="20201029 18:14:11.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:11.084" level="INFO">${OVERHEAD} = {'diff': [1.5420000000210266e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.5420000000210266e-06, 1.5549999999864283e-06, 1.54...</msg>
<status status="PASS" starttime="20201029 18:14:11.074" endtime="20201029 18:14:11.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.094" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:11.092" endtime="20201029 18:14:11.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.101" level="INFO">VALUE: [1.5420000000210266e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.541000000021553e-06, 1.5420000000210266e-06, 1.5549999999864283e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.52800000000064e-06, 1.5560000000136576e-06, 1.541999999993271e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5279999999728844e-06, 1.5559999999581464e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.4870000000222205e-06, 1.5549999999864283e-06, 1.5420000000210266e-06, 1.4580000000652404e-06, 1.5549999999864283e-06, 1.5420000000210266e-06, 1.5280000000839067e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.6109999999569524e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5410000000493085e-06, 1.5420000000210266e-06, 1.4999999999876223e-06, 1.5420000000210266e-06, 1.5420000000210266e-06, 1.5409999999382862e-06, 1.5270000000011663e-06, 1.5409999999382862e-06, 1.5409999999382862e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5409999999382862e-06, 1.5840000000544308e-06, 1.4720000000023603e-06, 1.5559999999581464e-06, 1.5270000000011663e-06, 1.5139999999247422e-06]</msg>
<status status="PASS" starttime="20201029 18:14:11.096" endtime="20201029 18:14:11.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.086" endtime="20201029 18:14:11.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.556" endtime="20201029 18:14:11.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:10.555" endtime="20201029 18:14:11.106"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.127" endtime="20201029 18:14:11.142"></status>
</kw>
<msg timestamp="20201029 18:14:11.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.124" endtime="20201029 18:14:11.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.149" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.145" endtime="20201029 18:14:11.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.151" endtime="20201029 18:14:11.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.116" endtime="20201029 18:14:11.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.111" endtime="20201029 18:14:11.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.175" endtime="20201029 18:14:11.551"></status>
</kw>
<msg timestamp="20201029 18:14:11.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.686716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.686718, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:11.172" endtime="20201029 18:14:11.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.686716444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.686718, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:11.563" endtime="20201029 18:14:11.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.585" endtime="20201029 18:14:11.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.164" endtime="20201029 18:14:11.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.160" endtime="20201029 18:14:11.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:11.603" level="INFO">${RESULT} = [{'diff': 1.5560000000691687e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.5279999999728844e-06}, {'diff': 1.5420000000210266e-06}, {'diff': 1.5560000000691687e-06}, {'diff': 1.5420000000210266e-...</msg>
<status status="PASS" starttime="20201029 18:14:11.593" endtime="20201029 18:14:11.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:11.615" level="INFO">${OVERHEAD} = {'diff': [1.5560000000691687e-06, 1.5420000000210266e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5409999999382862e-06...</msg>
<status status="PASS" starttime="20201029 18:14:11.605" endtime="20201029 18:14:11.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.625" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:11.623" endtime="20201029 18:14:11.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.631" level="INFO">VALUE: [1.5560000000691687e-06, 1.5420000000210266e-06, 1.5279999999728844e-06, 1.5420000000210266e-06, 1.5560000000691687e-06, 1.5420000000210266e-06, 1.5410000000493085e-06, 1.5409999999382862e-06, 1.5409999999382862e-06, 1.5840000000544308e-06, 1.4720000000023603e-06, 1.5559999999581464e-06, 1.5270000000011663e-06, 1.5139999999247422e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5970000000198326e-06, 1.554999999875406e-06, 1.4999999999876223e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5419999999100042e-06, 1.5840000000544308e-06, 1.5410000000493085e-06, 1.5270000000011663e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5550000000974507e-06, 1.4999999999876223e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5270000000011663e-06, 1.5690000001455928e-06, 1.5419999999100042e-06, 1.5409999998272639e-06, 1.5409999998272639e-06, 1.5280000000839067e-06, 1.5970000000198326e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.556000000180191e-06, 1.5420000001320489e-06]</msg>
<status status="PASS" starttime="20201029 18:14:11.627" endtime="20201029 18:14:11.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.617" endtime="20201029 18:14:11.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.108" endtime="20201029 18:14:11.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.107" endtime="20201029 18:14:11.636"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.656" endtime="20201029 18:14:11.671"></status>
</kw>
<msg timestamp="20201029 18:14:11.672" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.652" endtime="20201029 18:14:11.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:11.678" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:11.674" endtime="20201029 18:14:11.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.680" endtime="20201029 18:14:11.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.645" endtime="20201029 18:14:11.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.641" endtime="20201029 18:14:11.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:11.712" endtime="20201029 18:14:12.084"></status>
</kw>
<msg timestamp="20201029 18:14:12.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.22611875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.226120347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:11.708" endtime="20201029 18:14:12.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.22611875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.226120347, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:12.095" endtime="20201029 18:14:12.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.117" endtime="20201029 18:14:12.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.700" endtime="20201029 18:14:12.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.695" endtime="20201029 18:14:12.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:12.137" level="INFO">${RESULT} = [{'diff': 1.5970000000198326e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999999100042e-06}, {'diff': 1.5419999999100042e-06}, {'diff': 1.5410000000493085e-0...</msg>
<status status="PASS" starttime="20201029 18:14:12.126" endtime="20201029 18:14:12.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:12.148" level="INFO">${OVERHEAD} = {'diff': [1.5970000000198326e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:12.139" endtime="20201029 18:14:12.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.158" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:12.156" endtime="20201029 18:14:12.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.164" level="INFO">VALUE: [1.5970000000198326e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.556000000180191e-06, 1.5420000001320489e-06, 1.5280000000839067e-06, 1.471999999891338e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5840000000544308e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5550000000974507e-06, 1.556000000180191e-06, 1.5280000000839067e-06, 1.5410000000493085e-06, 1.556000000180191e-06, 1.5559999999581464e-06, 1.4999999999876223e-06, 1.5420000001320489e-06, 1.5409999998272639e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5280000000839067e-06, 1.5419999999100042e-06, 1.5270000000011663e-06, 1.5559999999581464e-06, 1.5280000000839067e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.556000000180191e-06, 1.5689999999235482e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5270000000011663e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5690000001455928e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.527999999861862e-06]</msg>
<status status="PASS" starttime="20201029 18:14:12.161" endtime="20201029 18:14:12.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.150" endtime="20201029 18:14:12.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.637" endtime="20201029 18:14:12.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:11.636" endtime="20201029 18:14:12.169"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.190" endtime="20201029 18:14:12.205"></status>
</kw>
<msg timestamp="20201029 18:14:12.206" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.186" endtime="20201029 18:14:12.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.208" endtime="20201029 18:14:12.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.215" endtime="20201029 18:14:12.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.179" endtime="20201029 18:14:12.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.174" endtime="20201029 18:14:12.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.240" endtime="20201029 18:14:12.623"></status>
</kw>
<msg timestamp="20201029 18:14:12.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.745067014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.745068556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:12.237" endtime="20201029 18:14:12.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.745067014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.745068556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:12.634" endtime="20201029 18:14:12.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.656" endtime="20201029 18:14:12.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.228" endtime="20201029 18:14:12.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.223" endtime="20201029 18:14:12.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:12.674" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5409999998272639e-...</msg>
<status status="PASS" starttime="20201029 18:14:12.664" endtime="20201029 18:14:12.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:12.685" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5270000000011663e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201029 18:14:12.676" endtime="20201029 18:14:12.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.694" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:12.692" endtime="20201029 18:14:12.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.700" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5270000000011663e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5409999998272639e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.5419999999100042e-06, 1.4999999999876223e-06, 1.5690000001455928e-06, 1.5419999999100042e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.4859999999394802e-06, 1.5559999999581464e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5269999997791217e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.4860000003835694e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.527999999861862e-06, 1.569999999784244e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.4859999999394802e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.527999999861862e-06]</msg>
<status status="PASS" starttime="20201029 18:14:12.697" endtime="20201029 18:14:12.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.686" endtime="20201029 18:14:12.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.171" endtime="20201029 18:14:12.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.170" endtime="20201029 18:14:12.705"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.727" endtime="20201029 18:14:12.742"></status>
</kw>
<msg timestamp="20201029 18:14:12.743" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.724" endtime="20201029 18:14:12.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:12.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:12.745" endtime="20201029 18:14:12.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.752" endtime="20201029 18:14:12.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.717" endtime="20201029 18:14:12.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.710" endtime="20201029 18:14:12.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:12.777" endtime="20201029 18:14:13.136"></status>
</kw>
<msg timestamp="20201029 18:14:13.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.270794181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.270795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:12.773" endtime="20201029 18:14:13.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.270794181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.270795667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:13.147" endtime="20201029 18:14:13.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.170" endtime="20201029 18:14:13.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.766" endtime="20201029 18:14:13.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.761" endtime="20201029 18:14:13.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:13.194" level="INFO">${RESULT} = [{'diff': 1.4859999999394802e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5419999996879596e-...</msg>
<status status="PASS" starttime="20201029 18:14:13.183" endtime="20201029 18:14:13.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:13.207" level="INFO">${OVERHEAD} = {'diff': [1.4859999999394802e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201029 18:14:13.196" endtime="20201029 18:14:13.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.219" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:13.217" endtime="20201029 18:14:13.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.225" level="INFO">VALUE: [1.4859999999394802e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5689999997015036e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5560000004022356e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5269999997791217e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.500000000209667e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 18:14:13.221" endtime="20201029 18:14:13.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.210" endtime="20201029 18:14:13.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.707" endtime="20201029 18:14:13.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:12.706" endtime="20201029 18:14:13.230"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.250" endtime="20201029 18:14:13.264"></status>
</kw>
<msg timestamp="20201029 18:14:13.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.247" endtime="20201029 18:14:13.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.268" endtime="20201029 18:14:13.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.274" endtime="20201029 18:14:13.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.239" endtime="20201029 18:14:13.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.235" endtime="20201029 18:14:13.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.297" endtime="20201029 18:14:13.690"></status>
</kw>
<msg timestamp="20201029 18:14:13.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.797032931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.7970345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:13.294" endtime="20201029 18:14:13.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.797032931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.7970345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:13.702" endtime="20201029 18:14:13.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.725" endtime="20201029 18:14:13.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.287" endtime="20201029 18:14:13.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.282" endtime="20201029 18:14:13.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:13.744" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.500000000209667e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-06}, {'diff': 1.5410000000493085e-0...</msg>
<status status="PASS" starttime="20201029 18:14:13.734" endtime="20201029 18:14:13.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:13.761" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.500000000209667e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:13.747" endtime="20201029 18:14:13.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.772" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:13.770" endtime="20201029 18:14:13.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.778" level="INFO">VALUE: [1.5690000001455928e-06, 1.500000000209667e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5129999999530241e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5269999997791217e-06, 1.5409999996052193e-06, 1.5410000000493085e-06, 1.500000000209667e-06, 1.5970000002418772e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:14:13.775" endtime="20201029 18:14:13.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.763" endtime="20201029 18:14:13.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.231" endtime="20201029 18:14:13.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.230" endtime="20201029 18:14:13.783"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.806" endtime="20201029 18:14:13.822"></status>
</kw>
<msg timestamp="20201029 18:14:13.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.802" endtime="20201029 18:14:13.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:13.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:13.826" endtime="20201029 18:14:13.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.833" endtime="20201029 18:14:13.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.794" endtime="20201029 18:14:13.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.789" endtime="20201029 18:14:13.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:13.858" endtime="20201029 18:14:14.304"></status>
</kw>
<msg timestamp="20201029 18:14:14.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.309406556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.309408083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:13.854" endtime="20201029 18:14:14.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.309406556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.309408083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.317" endtime="20201029 18:14:14.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.339" endtime="20201029 18:14:14.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.847" endtime="20201029 18:14:14.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.841" endtime="20201029 18:14:14.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:14.357" level="INFO">${RESULT} = [{'diff': 1.527000000223211e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 18:14:14.347" endtime="20201029 18:14:14.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:14.368" level="INFO">${OVERHEAD} = {'diff': [1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:14.359" endtime="20201029 18:14:14.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.378" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:14.375" endtime="20201029 18:14:14.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.383" level="INFO">VALUE: [1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5269999997791217e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5410000000493085e-06, 1.5420000001320489e-06, 1.5689999997015036e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.5419999996879596e-06, 1.5410000000493085e-06, 1.5560000004022356e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.527999999861862e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5269999997791217e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.4579999998431958e-06, 1.527999999861862e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.5420000001320489e-06]</msg>
<status status="PASS" starttime="20201029 18:14:14.380" endtime="20201029 18:14:14.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.369" endtime="20201029 18:14:14.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.785" endtime="20201029 18:14:14.388"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:13.784" endtime="20201029 18:14:14.388"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.410" endtime="20201029 18:14:14.425"></status>
</kw>
<msg timestamp="20201029 18:14:14.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.405" endtime="20201029 18:14:14.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.428" endtime="20201029 18:14:14.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.435" endtime="20201029 18:14:14.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.398" endtime="20201029 18:14:14.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.393" endtime="20201029 18:14:14.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.458" endtime="20201029 18:14:14.821"></status>
</kw>
<msg timestamp="20201029 18:14:14.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.856347472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.856349014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.454" endtime="20201029 18:14:14.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.856347472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.856349014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.834" endtime="20201029 18:14:14.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.858" endtime="20201029 18:14:14.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.447" endtime="20201029 18:14:14.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.443" endtime="20201029 18:14:14.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:14.878" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.5420000001320489e-0...</msg>
<status status="PASS" starttime="20201029 18:14:14.868" endtime="20201029 18:14:14.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:14.890" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5140000000357645e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:14.880" endtime="20201029 18:14:14.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.901" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:14.899" endtime="20201029 18:14:14.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.908" level="INFO">VALUE: [1.5420000001320489e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5000000006537562e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.5279999994177729e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5550000007635845e-06, 1.527000000223211e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:14:14.904" endtime="20201029 18:14:14.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.892" endtime="20201029 18:14:14.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.390" endtime="20201029 18:14:14.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.389" endtime="20201029 18:14:14.913"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.947" endtime="20201029 18:14:14.967"></status>
</kw>
<msg timestamp="20201029 18:14:14.968" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.941" endtime="20201029 18:14:14.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:14.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:14.971" endtime="20201029 18:14:14.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:14.978" endtime="20201029 18:14:14.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.930" endtime="20201029 18:14:14.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.924" endtime="20201029 18:14:14.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.002" endtime="20201029 18:14:15.373"></status>
</kw>
<msg timestamp="20201029 18:14:15.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.449355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.449357208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:14.999" endtime="20201029 18:14:15.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.449355653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.449357208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.385" endtime="20201029 18:14:15.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.407" endtime="20201029 18:14:15.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.991" endtime="20201029 18:14:15.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.987" endtime="20201029 18:14:15.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.426" level="INFO">${RESULT} = [{'diff': 1.5550000007635845e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201029 18:14:15.416" endtime="20201029 18:14:15.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.438" level="INFO">${OVERHEAD} = {'diff': [1.5550000007635845e-06, 1.527000000223211e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:15.428" endtime="20201029 18:14:15.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.448" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:15.446" endtime="20201029 18:14:15.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.454" level="INFO">VALUE: [1.5550000007635845e-06, 1.527000000223211e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5269999993350325e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5000000006537562e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.5140000000357645e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5279999994177729e-06, 1.5410000004933977e-06]</msg>
<status status="PASS" starttime="20201029 18:14:15.451" endtime="20201029 18:14:15.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.440" endtime="20201029 18:14:15.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.915" endtime="20201029 18:14:15.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:14.914" endtime="20201029 18:14:15.459"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.480" endtime="20201029 18:14:15.494"></status>
</kw>
<msg timestamp="20201029 18:14:15.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.477" endtime="20201029 18:14:15.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.502" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:15.498" endtime="20201029 18:14:15.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.504" endtime="20201029 18:14:15.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.469" endtime="20201029 18:14:15.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.464" endtime="20201029 18:14:15.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.528" endtime="20201029 18:14:15.907"></status>
</kw>
<msg timestamp="20201029 18:14:15.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.979141319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.979142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.525" endtime="20201029 18:14:15.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.979141319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.979142847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:15.918" endtime="20201029 18:14:15.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:15.941" endtime="20201029 18:14:15.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.517" endtime="20201029 18:14:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.512" endtime="20201029 18:14:15.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:15.959" level="INFO">${RESULT} = [{'diff': 1.5280000003059513e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5419999996879596e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:15.949" endtime="20201029 18:14:15.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:15.970" level="INFO">${OVERHEAD} = {'diff': [1.5280000003059513e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:14:15.962" endtime="20201029 18:14:15.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.981" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:15.978" endtime="20201029 18:14:15.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:15.986" level="INFO">VALUE: [1.5280000003059513e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.5280000003059513e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 18:14:15.983" endtime="20201029 18:14:15.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.972" endtime="20201029 18:14:15.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.461" endtime="20201029 18:14:15.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.460" endtime="20201029 18:14:15.998"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.020" endtime="20201029 18:14:16.037"></status>
</kw>
<msg timestamp="20201029 18:14:16.039" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.017" endtime="20201029 18:14:16.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.041" endtime="20201029 18:14:16.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.048" endtime="20201029 18:14:16.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.009" endtime="20201029 18:14:16.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.004" endtime="20201029 18:14:16.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.083" endtime="20201029 18:14:16.500"></status>
</kw>
<msg timestamp="20201029 18:14:16.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.500085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.500087319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.078" endtime="20201029 18:14:16.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.500085792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.500087319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.512" endtime="20201029 18:14:16.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.535" endtime="20201029 18:14:16.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.070" endtime="20201029 18:14:16.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.065" endtime="20201029 18:14:16.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:16.553" level="INFO">${RESULT} = [{'diff': 1.527000000223211e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.542000000576138e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:16.543" endtime="20201029 18:14:16.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:16.564" level="INFO">${OVERHEAD} = {'diff': [1.527000000223211e-06, 1.527000000223211e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:14:16.555" endtime="20201029 18:14:16.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.575" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:16.572" endtime="20201029 18:14:16.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.580" level="INFO">VALUE: [1.527000000223211e-06, 1.527000000223211e-06, 1.5410000004933977e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.6109999991797963e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4589999999259362e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.542000000576138e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5980000007687067e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 18:14:16.577" endtime="20201029 18:14:16.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.566" endtime="20201029 18:14:16.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.000" endtime="20201029 18:14:16.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:15.999" endtime="20201029 18:14:16.585"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.606" endtime="20201029 18:14:16.621"></status>
</kw>
<msg timestamp="20201029 18:14:16.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.602" endtime="20201029 18:14:16.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:16.628" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:16.624" endtime="20201029 18:14:16.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.631" endtime="20201029 18:14:16.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.595" endtime="20201029 18:14:16.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.591" endtime="20201029 18:14:16.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:16.654" endtime="20201029 18:14:17.042"></status>
</kw>
<msg timestamp="20201029 18:14:17.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.033659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.033661417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:16.650" endtime="20201029 18:14:17.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.033659847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.033661417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.054" endtime="20201029 18:14:17.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.076" endtime="20201029 18:14:17.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.643" endtime="20201029 18:14:17.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.639" endtime="20201029 18:14:17.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.094" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5980000007687067e-...</msg>
<status status="PASS" starttime="20201029 18:14:17.084" endtime="20201029 18:14:17.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.107" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5980000007687067e-06, 1.5279999994177729e-06, 1.5410000004933977e-06...</msg>
<status status="PASS" starttime="20201029 18:14:17.096" endtime="20201029 18:14:17.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:17.115" endtime="20201029 18:14:17.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.123" level="INFO">VALUE: [1.5700000002283332e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5410000004933977e-06, 1.5980000007687067e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.4860000003835694e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5970000006859664e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 18:14:17.119" endtime="20201029 18:14:17.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.109" endtime="20201029 18:14:17.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.587" endtime="20201029 18:14:17.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:16.586" endtime="20201029 18:14:17.128"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.148" endtime="20201029 18:14:17.163"></status>
</kw>
<msg timestamp="20201029 18:14:17.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.145" endtime="20201029 18:14:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.166" endtime="20201029 18:14:17.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.173" endtime="20201029 18:14:17.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.137" endtime="20201029 18:14:17.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.133" endtime="20201029 18:14:17.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.196" endtime="20201029 18:14:17.569"></status>
</kw>
<msg timestamp="20201029 18:14:17.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.606907, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.606908542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:17.193" endtime="20201029 18:14:17.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.606907, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.606908542, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:17.580" endtime="20201029 18:14:17.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.603" endtime="20201029 18:14:17.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.186" endtime="20201029 18:14:17.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.181" endtime="20201029 18:14:17.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:17.621" level="INFO">${RESULT} = [{'diff': 1.542000000576138e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.542000000576138e-06}...</msg>
<status status="PASS" starttime="20201029 18:14:17.611" endtime="20201029 18:14:17.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:17.631" level="INFO">${OVERHEAD} = {'diff': [1.542000000576138e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:14:17.623" endtime="20201029 18:14:17.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.641" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:17.639" endtime="20201029 18:14:17.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.647" level="INFO">VALUE: [1.542000000576138e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.596999999797788e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5689999992574144e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5279999994177729e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 18:14:17.644" endtime="20201029 18:14:17.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.633" endtime="20201029 18:14:17.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.129" endtime="20201029 18:14:17.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.129" endtime="20201029 18:14:17.652"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.672" endtime="20201029 18:14:17.689"></status>
</kw>
<msg timestamp="20201029 18:14:17.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.669" endtime="20201029 18:14:17.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:17.696" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:17.692" endtime="20201029 18:14:17.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.698" endtime="20201029 18:14:17.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.662" endtime="20201029 18:14:17.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.657" endtime="20201029 18:14:17.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:17.723" endtime="20201029 18:14:18.110"></status>
</kw>
<msg timestamp="20201029 18:14:18.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.140008792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.140010333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:17.719" endtime="20201029 18:14:18.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.140008792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.140010333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.122" endtime="20201029 18:14:18.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.146" endtime="20201029 18:14:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.712" endtime="20201029 18:14:18.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.708" endtime="20201029 18:14:18.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.165" level="INFO">${RESULT} = [{'diff': 1.5410000004933977e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5269999993350325e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5279999994177729e-0...</msg>
<status status="PASS" starttime="20201029 18:14:18.155" endtime="20201029 18:14:18.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.177" level="INFO">${OVERHEAD} = {'diff': [1.5410000004933977e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:18.167" endtime="20201029 18:14:18.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.188" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:18.186" endtime="20201029 18:14:18.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.194" level="INFO">VALUE: [1.5410000004933977e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.527000000223211e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5279999994177729e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.485999999495391e-06, 1.542000000576138e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5279999994177729e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.4860000003835694e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5279999994177729e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.191" endtime="20201029 18:14:18.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.179" endtime="20201029 18:14:18.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.654" endtime="20201029 18:14:18.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:17.653" endtime="20201029 18:14:18.199"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.221" endtime="20201029 18:14:18.236"></status>
</kw>
<msg timestamp="20201029 18:14:18.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.218" endtime="20201029 18:14:18.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.244" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.240" endtime="20201029 18:14:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.247" endtime="20201029 18:14:18.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.210" endtime="20201029 18:14:18.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.205" endtime="20201029 18:14:18.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.272" endtime="20201029 18:14:18.662"></status>
</kw>
<msg timestamp="20201029 18:14:18.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.658094097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.658095625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.269" endtime="20201029 18:14:18.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.658094097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.658095625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.674" endtime="20201029 18:14:18.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.698" endtime="20201029 18:14:18.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.261" endtime="20201029 18:14:18.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.256" endtime="20201029 18:14:18.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:18.717" level="INFO">${RESULT} = [{'diff': 1.5279999994177729e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201029 18:14:18.707" endtime="20201029 18:14:18.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:18.734" level="INFO">${OVERHEAD} = {'diff': [1.5279999994177729e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.4999999997655777e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:18.719" endtime="20201029 18:14:18.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.745" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:18.742" endtime="20201029 18:14:18.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.751" level="INFO">VALUE: [1.5279999994177729e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.542000000576138e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.4860000003835694e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.514000000923943e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5969999989096095e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.513999999147586e-06, 1.5420000014643165e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 18:14:18.747" endtime="20201029 18:14:18.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.736" endtime="20201029 18:14:18.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.201" endtime="20201029 18:14:18.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.200" endtime="20201029 18:14:18.756"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.778" endtime="20201029 18:14:18.794"></status>
</kw>
<msg timestamp="20201029 18:14:18.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.774" endtime="20201029 18:14:18.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:18.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:18.797" endtime="20201029 18:14:18.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.804" endtime="20201029 18:14:18.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.767" endtime="20201029 18:14:18.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.762" endtime="20201029 18:14:18.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:18.829" endtime="20201029 18:14:19.224"></status>
</kw>
<msg timestamp="20201029 18:14:19.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.195773417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.195774903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:18.826" endtime="20201029 18:14:19.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.195773417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.195774903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.235" endtime="20201029 18:14:19.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.258" endtime="20201029 18:14:19.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.818" endtime="20201029 18:14:19.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.813" endtime="20201029 18:14:19.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.276" level="INFO">${RESULT} = [{'diff': 1.4860000003835694e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5280000003059513e-0...</msg>
<status status="PASS" starttime="20201029 18:14:19.266" endtime="20201029 18:14:19.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.287" level="INFO">${OVERHEAD} = {'diff': [1.4860000003835694e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:19.278" endtime="20201029 18:14:19.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.297" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:19.295" endtime="20201029 18:14:19.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.303" level="INFO">VALUE: [1.4860000003835694e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4729999993079446e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5420000014643165e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.299" endtime="20201029 18:14:19.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.289" endtime="20201029 18:14:19.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.758" endtime="20201029 18:14:19.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:18.757" endtime="20201029 18:14:19.308"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.329" endtime="20201029 18:14:19.345"></status>
</kw>
<msg timestamp="20201029 18:14:19.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.325" endtime="20201029 18:14:19.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.353" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.349" endtime="20201029 18:14:19.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.355" endtime="20201029 18:14:19.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.318" endtime="20201029 18:14:19.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.313" endtime="20201029 18:14:19.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.379" endtime="20201029 18:14:19.782"></status>
</kw>
<msg timestamp="20201029 18:14:19.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.740876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.740877861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.375" endtime="20201029 18:14:19.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.740876319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.740877861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.794" endtime="20201029 18:14:19.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.817" endtime="20201029 18:14:19.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.368" endtime="20201029 18:14:19.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.363" endtime="20201029 18:14:19.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:19.837" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.555999999069968e-0...</msg>
<status status="PASS" starttime="20201029 18:14:19.826" endtime="20201029 18:14:19.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:19.849" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:19.839" endtime="20201029 18:14:19.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.860" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:19.858" endtime="20201029 18:14:19.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.866" level="INFO">VALUE: [1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5839999996103415e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5420000014643165e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.514000000923943e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.526999998446854e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5839999996103415e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201029 18:14:19.862" endtime="20201029 18:14:19.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.851" endtime="20201029 18:14:19.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.310" endtime="20201029 18:14:19.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.309" endtime="20201029 18:14:19.871"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.893" endtime="20201029 18:14:19.909"></status>
</kw>
<msg timestamp="20201029 18:14:19.910" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.890" endtime="20201029 18:14:19.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:19.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:19.912" endtime="20201029 18:14:19.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.919" endtime="20201029 18:14:19.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.882" endtime="20201029 18:14:19.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.877" endtime="20201029 18:14:19.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:19.944" endtime="20201029 18:14:20.350"></status>
</kw>
<msg timestamp="20201029 18:14:20.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.282887181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.282888722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:19.940" endtime="20201029 18:14:20.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.282887181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.282888722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.362" endtime="20201029 18:14:20.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.386" endtime="20201029 18:14:20.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.932" endtime="20201029 18:14:20.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.928" endtime="20201029 18:14:20.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.405" level="INFO">${RESULT} = [{'diff': 1.5409999996052193e-06}, {'diff': 1.5409999996052193e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.526999998446854e-06}, {'diff': 1.5549999989872276e-06...</msg>
<status status="PASS" starttime="20201029 18:14:20.395" endtime="20201029 18:14:20.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:20.418" level="INFO">${OVERHEAD} = {'diff': [1.5409999996052193e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.526999998446854e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, ...</msg>
<status status="PASS" starttime="20201029 18:14:20.408" endtime="20201029 18:14:20.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.429" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:20.427" endtime="20201029 18:14:20.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.435" level="INFO">VALUE: [1.5409999996052193e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.526999998446854e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5839999996103415e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.5000000015419346e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5410000013815761e-06, 1.5280000003059513e-06, 1.5280000003059513e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.526999998446854e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.583000001303958e-06, 1.5550000007635845e-06, 1.5969999989096095e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.4999999997655777e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 18:14:20.432" endtime="20201029 18:14:20.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.420" endtime="20201029 18:14:20.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.873" endtime="20201029 18:14:20.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:19.872" endtime="20201029 18:14:20.440"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.462" endtime="20201029 18:14:20.478"></status>
</kw>
<msg timestamp="20201029 18:14:20.479" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.459" endtime="20201029 18:14:20.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.485" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:20.481" endtime="20201029 18:14:20.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.488" endtime="20201029 18:14:20.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.451" endtime="20201029 18:14:20.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.446" endtime="20201029 18:14:20.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.513" endtime="20201029 18:14:20.921"></status>
</kw>
<msg timestamp="20201029 18:14:20.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.835923931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.835925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.509" endtime="20201029 18:14:20.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:20.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.835923931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.835925486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:20.938" endtime="20201029 18:14:20.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:20.971" endtime="20201029 18:14:20.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.501" endtime="20201029 18:14:20.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.497" endtime="20201029 18:14:20.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:20.990" level="INFO">${RESULT} = [{'diff': 1.5550000007635845e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5420000014643165e-0...</msg>
<status status="PASS" starttime="20201029 18:14:20.980" endtime="20201029 18:14:20.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.000" level="INFO">${OVERHEAD} = {'diff': [1.5550000007635845e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.4999999997655777e-06, 1.5420000014643165e-06,...</msg>
<status status="PASS" starttime="20201029 18:14:20.992" endtime="20201029 18:14:21.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.011" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:14:21.008" endtime="20201029 18:14:21.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.017" level="INFO">VALUE: [1.5550000007635845e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.4999999997655777e-06, 1.5420000014643165e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.527000000223211e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5279999985295944e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5980000007687067e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5409999996052193e-06, 1.527000000223211e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.526999998446854e-06, 1.513999999147586e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5409999996052193e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5419999996879596e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.013" endtime="20201029 18:14:21.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.002" endtime="20201029 18:14:21.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.442" endtime="20201029 18:14:21.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:20.441" endtime="20201029 18:14:21.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:09.988" endtime="20201029 18:14:21.043"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:09.861" endtime="20201029 18:14:21.045" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:21.063" endtime="20201029 18:14:21.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.059" endtime="20201029 18:14:21.087"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.122" endtime="20201029 18:14:21.141"></status>
</kw>
<msg timestamp="20201029 18:14:21.142" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.119" endtime="20201029 18:14:21.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.148" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.144" endtime="20201029 18:14:21.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.155" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:21.151" endtime="20201029 18:14:21.156"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:21.112" endtime="20201029 18:14:21.157"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:21.104" endtime="20201029 18:14:21.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.101" endtime="20201029 18:14:21.160"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:21.167" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:21.166" endtime="20201029 18:14:21.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.161" endtime="20201029 18:14:21.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.098" endtime="20201029 18:14:21.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.096" endtime="20201029 18:14:21.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.171" endtime="20201029 18:14:21.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.092" endtime="20201029 18:14:21.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.088" endtime="20201029 18:14:21.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.056" endtime="20201029 18:14:21.178"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.200" endtime="20201029 18:14:21.223"></status>
</kw>
<msg timestamp="20201029 18:14:21.224" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.197" endtime="20201029 18:14:21.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.231" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.226" endtime="20201029 18:14:21.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.233" endtime="20201029 18:14:21.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.190" endtime="20201029 18:14:21.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.184" endtime="20201029 18:14:21.240"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.245" endtime="20201029 18:14:21.250"></status>
</kw>
<msg timestamp="20201029 18:14:21.251" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:21.242" endtime="20201029 18:14:21.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.261" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:21.258" endtime="20201029 18:14:21.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.265" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:21.263" endtime="20201029 18:14:21.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.252" endtime="20201029 18:14:21.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.277" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:21.275" endtime="20201029 18:14:21.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.282" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:21.279" endtime="20201029 18:14:21.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.269" endtime="20201029 18:14:21.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.302" endtime="20201029 18:14:21.655"></status>
</kw>
<msg timestamp="20201029 18:14:21.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130584597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130588931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.299" endtime="20201029 18:14:21.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130584597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130588931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:21.665" endtime="20201029 18:14:21.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.684" endtime="20201029 18:14:21.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.292" endtime="20201029 18:14:21.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.287" endtime="20201029 18:14:21.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:21.701" level="INFO">${RESULT} = [{'diff': 4.333999999994731e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.4720000000053606e-06}, {'diff': 4.499999999990623e-06}, {'diff': 4.485999999997992e-06}, {'diff': 4.485999999997992e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:14:21.692" endtime="20201029 18:14:21.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:21.710" level="INFO">${OVERHEAD} = {'diff': [4.333999999994731e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.486000000025747e-06, 4.499...</msg>
<status status="PASS" starttime="20201029 18:14:21.703" endtime="20201029 18:14:21.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.721" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:21.719" endtime="20201029 18:14:21.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.727" level="INFO">VALUE: [4.333999999994731e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.486000000025747e-06, 4.499999999990623e-06, 4.473000000004834e-06, 4.4720000000053606e-06, 4.471999999977605e-06, 4.485999999997992e-06, 4.486999999997465e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.500000000018378e-06, 4.500000000018378e-06, 4.485999999997992e-06, 4.459000000012203e-06, 4.471999999977605e-06, 4.4580000000127296e-06, 4.500000000018378e-06, 4.541999999996271e-06, 4.4580000000127296e-06, 4.4720000000053606e-06, 4.485999999997992e-06, 4.514000000011009e-06, 4.485999999997992e-06, 4.471999999977605e-06, 4.487000000025221e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.471999999977605e-06, 4.416999999978799e-06, 4.485999999997992e-06, 4.4440000000200985e-06, 4.540999999996798e-06, 4.485999999997992e-06, 4.472999999977079e-06, 4.485999999997992e-06, 4.52800000000364e-06, 4.499999999990623e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.486000000025747e-06, 4.485999999997992e-06, 4.4720000000053606e-06, 4.486999999997465e-06]</msg>
<status status="PASS" starttime="20201029 18:14:21.724" endtime="20201029 18:14:21.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.712" endtime="20201029 18:14:21.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.179" endtime="20201029 18:14:21.732"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:21.050" endtime="20201029 18:14:21.733" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:21.752" endtime="20201029 18:14:21.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.747" endtime="20201029 18:14:21.775"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.808" endtime="20201029 18:14:21.827"></status>
</kw>
<msg timestamp="20201029 18:14:21.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.805" endtime="20201029 18:14:21.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.835" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.830" endtime="20201029 18:14:21.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.841" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:21.837" endtime="20201029 18:14:21.842"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:21.798" endtime="20201029 18:14:21.844"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:21.791" endtime="20201029 18:14:21.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.789" endtime="20201029 18:14:21.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:21.854" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:21.852" endtime="20201029 18:14:21.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.848" endtime="20201029 18:14:21.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.787" endtime="20201029 18:14:21.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.785" endtime="20201029 18:14:21.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.857" endtime="20201029 18:14:21.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.781" endtime="20201029 18:14:21.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.777" endtime="20201029 18:14:21.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.744" endtime="20201029 18:14:21.864"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.887" endtime="20201029 18:14:21.967"></status>
</kw>
<msg timestamp="20201029 18:14:21.968" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.883" endtime="20201029 18:14:21.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:21.975" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:21.971" endtime="20201029 18:14:21.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.977" endtime="20201029 18:14:21.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.876" endtime="20201029 18:14:21.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.870" endtime="20201029 18:14:21.984"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:21.989" endtime="20201029 18:14:21.994"></status>
</kw>
<msg timestamp="20201029 18:14:21.995" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:21.986" endtime="20201029 18:14:21.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.007" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:22.003" endtime="20201029 18:14:22.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.012" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:22.010" endtime="20201029 18:14:22.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.997" endtime="20201029 18:14:22.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.024" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:22.021" endtime="20201029 18:14:22.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.028" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:22.026" endtime="20201029 18:14:22.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.015" endtime="20201029 18:14:22.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.047" endtime="20201029 18:14:22.408"></status>
</kw>
<msg timestamp="20201029 18:14:22.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129187667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129228653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.044" endtime="20201029 18:14:22.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129187667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129228653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.418" endtime="20201029 18:14:22.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.436" endtime="20201029 18:14:22.440"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.036" endtime="20201029 18:14:22.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.032" endtime="20201029 18:14:22.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:22.454" level="INFO">${RESULT} = [{'diff': 4.098599999999286e-05}, {'diff': 4.094399999998721e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.0917000000001424e-05}, {'diff': 4.098599999999286e-05}, {'diff': 4.0944999999986686e-05},...</msg>
<status status="PASS" starttime="20201029 18:14:22.445" endtime="20201029 18:14:22.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:22.463" level="INFO">${OVERHEAD} = {'diff': [4.098599999999286e-05, 4.094399999998721e-05, 4.098599999999286e-05, 4.0917000000001424e-05, 4.098599999999286e-05, 4.0944999999986686e-05, 4.094500000001444e-05, 4.0930999999994055e-05, 4.0...</msg>
<status status="PASS" starttime="20201029 18:14:22.456" endtime="20201029 18:14:22.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.476" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:22.472" endtime="20201029 18:14:22.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.482" level="INFO">VALUE: [4.098599999999286e-05, 4.094399999998721e-05, 4.098599999999286e-05, 4.0917000000001424e-05, 4.098599999999286e-05, 4.0944999999986686e-05, 4.094500000001444e-05, 4.0930999999994055e-05, 4.092999999999458e-05, 4.093000000002234e-05, 4.094399999998721e-05, 4.098599999999286e-05, 4.094500000001444e-05, 4.090200000000932e-05, 4.094400000001497e-05, 4.0930999999994055e-05, 4.09580000000076e-05, 4.095900000000707e-05, 4.094500000001444e-05, 4.0903000000008793e-05, 4.091600000000195e-05, 4.092999999999458e-05, 4.094399999998721e-05, 4.0944999999986686e-05, 4.0944999999986686e-05, 4.09580000000076e-05, 4.095900000000707e-05, 4.09580000000076e-05, 4.0957999999979844e-05, 4.0972999999999704e-05, 4.09580000000076e-05, 4.094399999998721e-05, 4.092999999999458e-05, 4.094400000001497e-05, 4.097200000000023e-05, 4.094399999998721e-05, 4.100000000001325e-05, 4.095900000000707e-05, 4.0972999999999704e-05, 4.09580000000076e-05, 4.097200000000023e-05, 4.094399999998721e-05, 4.094400000001497e-05, 4.101400000000588e-05, 4.0944999999986686e-05, 4.0903000000008793e-05, 4.09580000000076e-05, 4.09580000000076e-05, 4.0930999999994055e-05, 4.09580000000076e-05]</msg>
<status status="PASS" starttime="20201029 18:14:22.478" endtime="20201029 18:14:22.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.465" endtime="20201029 18:14:22.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:21.866" endtime="20201029 18:14:22.487"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:21.738" endtime="20201029 18:14:22.490" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:22.508" endtime="20201029 18:14:22.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.504" endtime="20201029 18:14:22.532"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.566" endtime="20201029 18:14:22.585"></status>
</kw>
<msg timestamp="20201029 18:14:22.586" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.562" endtime="20201029 18:14:22.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.592" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.588" endtime="20201029 18:14:22.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.599" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:22.595" endtime="20201029 18:14:22.600"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:22.555" endtime="20201029 18:14:22.602"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:22.548" endtime="20201029 18:14:22.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.546" endtime="20201029 18:14:22.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:22.612" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:22.610" endtime="20201029 18:14:22.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.606" endtime="20201029 18:14:22.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.544" endtime="20201029 18:14:22.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.542" endtime="20201029 18:14:22.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.615" endtime="20201029 18:14:22.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.538" endtime="20201029 18:14:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.533" endtime="20201029 18:14:22.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.501" endtime="20201029 18:14:22.622"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.647" endtime="20201029 18:14:22.883"></status>
</kw>
<msg timestamp="20201029 18:14:22.885" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.642" endtime="20201029 18:14:22.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.891" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:22.887" endtime="20201029 18:14:22.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.893" endtime="20201029 18:14:22.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.634" endtime="20201029 18:14:22.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.628" endtime="20201029 18:14:22.900"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.905" endtime="20201029 18:14:22.910"></status>
</kw>
<msg timestamp="20201029 18:14:22.911" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:22.902" endtime="20201029 18:14:22.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.921" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:22.919" endtime="20201029 18:14:22.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.926" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:22.924" endtime="20201029 18:14:22.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.913" endtime="20201029 18:14:22.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.938" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:22.936" endtime="20201029 18:14:22.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:22.943" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:22.941" endtime="20201029 18:14:22.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.930" endtime="20201029 18:14:22.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:22.962" endtime="20201029 18:14:23.333"></status>
</kw>
<msg timestamp="20201029 18:14:23.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135713833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135793042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:22.959" endtime="20201029 18:14:23.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135713833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135793042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.343" endtime="20201029 18:14:23.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.361" endtime="20201029 18:14:23.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.951" endtime="20201029 18:14:23.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.947" endtime="20201029 18:14:23.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:23.378" level="INFO">${RESULT} = [{'diff': 7.920899999999675e-05}, {'diff': 7.869400000001803e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.859699999998582e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.827799999998719e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:23.369" endtime="20201029 18:14:23.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:23.392" level="INFO">${OVERHEAD} = {'diff': [7.920899999999675e-05, 7.869400000001803e-05, 7.862499999999883e-05, 7.859699999998582e-05, 7.862499999999883e-05, 7.827799999998719e-05, 7.863899999999147e-05, 7.862499999999883e-05, 7.8624...</msg>
<status status="PASS" starttime="20201029 18:14:23.380" endtime="20201029 18:14:23.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.404" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:23.402" endtime="20201029 18:14:23.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.409" level="INFO">VALUE: [7.920899999999675e-05, 7.869400000001803e-05, 7.862499999999883e-05, 7.859699999998582e-05, 7.862499999999883e-05, 7.827799999998719e-05, 7.863899999999147e-05, 7.862499999999883e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.837499999999165e-05, 7.863899999999147e-05, 7.863899999999147e-05, 7.86110000000062e-05, 7.86110000000062e-05, 7.859799999998529e-05, 7.862499999999883e-05, 7.834700000000638e-05, 7.862499999999883e-05, 7.866699999997673e-05, 7.865199999998462e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.865300000001185e-05, 7.863899999999147e-05, 7.834700000003414e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.858399999999266e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.862499999999883e-05, 7.87079999999829e-05, 7.83750000000194e-05, 7.86110000000062e-05, 7.861199999997792e-05, 7.862499999999883e-05, 7.861199999997792e-05, 7.862499999999883e-05, 7.86110000000062e-05, 7.83750000000194e-05, 7.86110000000062e-05, 7.867999999999764e-05, 7.86110000000062e-05, 7.863899999999147e-05, 7.86110000000062e-05, 7.859700000001357e-05]</msg>
<status status="PASS" starttime="20201029 18:14:23.406" endtime="20201029 18:14:23.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.394" endtime="20201029 18:14:23.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:22.624" endtime="20201029 18:14:23.413"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:22.495" endtime="20201029 18:14:23.415" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:23.432" endtime="20201029 18:14:23.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.429" endtime="20201029 18:14:23.456"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.489" endtime="20201029 18:14:23.508"></status>
</kw>
<msg timestamp="20201029 18:14:23.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.485" endtime="20201029 18:14:23.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.512" endtime="20201029 18:14:23.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:23.520" endtime="20201029 18:14:23.526"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:23.478" endtime="20201029 18:14:23.528"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:23.471" endtime="20201029 18:14:23.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.469" endtime="20201029 18:14:23.531"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:23.541" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:23.539" endtime="20201029 18:14:23.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.533" endtime="20201029 18:14:23.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.467" endtime="20201029 18:14:23.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.465" endtime="20201029 18:14:23.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.546" endtime="20201029 18:14:23.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.461" endtime="20201029 18:14:23.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.457" endtime="20201029 18:14:23.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.426" endtime="20201029 18:14:23.555"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.580" endtime="20201029 18:14:23.605"></status>
</kw>
<msg timestamp="20201029 18:14:23.606" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.577" endtime="20201029 18:14:23.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.612" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:23.609" endtime="20201029 18:14:23.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.615" endtime="20201029 18:14:23.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.568" endtime="20201029 18:14:23.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.562" endtime="20201029 18:14:23.621"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.626" endtime="20201029 18:14:23.631"></status>
</kw>
<msg timestamp="20201029 18:14:23.632" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:23.623" endtime="20201029 18:14:23.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.643" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:23.640" endtime="20201029 18:14:23.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.647" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:23.645" endtime="20201029 18:14:23.648"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.634" endtime="20201029 18:14:23.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.659" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:23.657" endtime="20201029 18:14:23.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:23.663" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:23.661" endtime="20201029 18:14:23.664"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.651" endtime="20201029 18:14:23.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:23.682" endtime="20201029 18:14:24.103"></status>
</kw>
<msg timestamp="20201029 18:14:24.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142875167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:23.679" endtime="20201029 18:14:24.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142875167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142876514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.113" endtime="20201029 18:14:24.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.132" endtime="20201029 18:14:24.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.672" endtime="20201029 18:14:24.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.667" endtime="20201029 18:14:24.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.152" level="INFO">${RESULT} = [{'diff': 1.3470000000126436e-06}, {'diff': 1.3610000000052747e-06}, {'diff': 1.346999999984888e-06}, {'diff': 1.3749999999979057e-06}, {'diff': 1.2920000000138376e-06}, {'diff': 1.346999999984888e-06...</msg>
<status status="PASS" starttime="20201029 18:14:24.142" endtime="20201029 18:14:24.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.164" level="INFO">${OVERHEAD} = {'diff': [1.3470000000126436e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.2920000000138376e-06, 1.346999999984888e-06, 1.318999999999626e-06, 1.3470000000126436e-06, 1...</msg>
<status status="PASS" starttime="20201029 18:14:24.154" endtime="20201029 18:14:24.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.176" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:14:24.174" endtime="20201029 18:14:24.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.182" level="INFO">VALUE: [1.3470000000126436e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.2920000000138376e-06, 1.346999999984888e-06, 1.318999999999626e-06, 1.3470000000126436e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.318999999999626e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.346999999984888e-06, 1.3330000000200126e-06, 1.3480000000121173e-06, 1.3470000000126436e-06, 1.3610000000052747e-06, 1.3339999999917307e-06, 1.3470000000126436e-06, 1.318999999999626e-06, 1.332999999992257e-06, 1.3610000000052747e-06, 1.3470000000126436e-06, 1.360999999977519e-06, 1.3480000000121173e-06, 1.291999999986082e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.2909999999866084e-06, 1.346999999984888e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.346999999984888e-06, 1.3470000000126436e-06, 1.3479999999843617e-06, 1.3470000000126436e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.346999999984888e-06, 1.3479999999843617e-06, 1.3610000000052747e-06, 1.332999999992257e-06, 1.346999999984888e-06]</msg>
<status status="PASS" starttime="20201029 18:14:24.179" endtime="20201029 18:14:24.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.166" endtime="20201029 18:14:24.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:23.556" endtime="20201029 18:14:24.186"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:23.419" endtime="20201029 18:14:24.188" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:24.232" endtime="20201029 18:14:24.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.226" endtime="20201029 18:14:24.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.290" endtime="20201029 18:14:24.308"></status>
</kw>
<msg timestamp="20201029 18:14:24.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.286" endtime="20201029 18:14:24.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.311" endtime="20201029 18:14:24.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:24.318" endtime="20201029 18:14:24.322"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.279" endtime="20201029 18:14:24.324"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:24.272" endtime="20201029 18:14:24.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.270" endtime="20201029 18:14:24.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:24.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:24.333" endtime="20201029 18:14:24.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.328" endtime="20201029 18:14:24.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.268" endtime="20201029 18:14:24.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.266" endtime="20201029 18:14:24.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.338" endtime="20201029 18:14:24.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.262" endtime="20201029 18:14:24.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.258" endtime="20201029 18:14:24.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.218" endtime="20201029 18:14:24.345"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.370" endtime="20201029 18:14:24.452"></status>
</kw>
<msg timestamp="20201029 18:14:24.453" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.366" endtime="20201029 18:14:24.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.459" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:24.455" endtime="20201029 18:14:24.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.461" endtime="20201029 18:14:24.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.359" endtime="20201029 18:14:24.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.351" endtime="20201029 18:14:24.468"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.473" endtime="20201029 18:14:24.477"></status>
</kw>
<msg timestamp="20201029 18:14:24.478" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:24.470" endtime="20201029 18:14:24.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.491" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:24.488" endtime="20201029 18:14:24.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.499" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:24.496" endtime="20201029 18:14:24.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.480" endtime="20201029 18:14:24.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.516" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:24.513" endtime="20201029 18:14:24.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.525" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:24.521" endtime="20201029 18:14:24.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.504" endtime="20201029 18:14:24.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.548" endtime="20201029 18:14:24.916"></status>
</kw>
<msg timestamp="20201029 18:14:24.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131217097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131231375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.544" endtime="20201029 18:14:24.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131217097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131231375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:24.925" endtime="20201029 18:14:24.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:24.944" endtime="20201029 18:14:24.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.537" endtime="20201029 18:14:24.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.530" endtime="20201029 18:14:24.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:24.961" level="INFO">${RESULT} = [{'diff': 1.4278000000006452e-05}, {'diff': 1.4221999999980417e-05}, {'diff': 1.4278000000006452e-05}, {'diff': 1.4222000000008173e-05}, {'diff': 1.4291999999999083e-05}, {'diff': 1.4278000000006452e-...</msg>
<status status="PASS" starttime="20201029 18:14:24.952" endtime="20201029 18:14:24.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:24.972" level="INFO">${OVERHEAD} = {'diff': [1.4278000000006452e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4222000000008173e-05, 1.4291999999999083e-05, 1.4278000000006452e-05, 1.434699999999789e-05, 1.4276999999979223e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:24.963" endtime="20201029 18:14:24.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.983" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:14:24.980" endtime="20201029 18:14:24.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:24.988" level="INFO">VALUE: [1.4278000000006452e-05, 1.4221999999980417e-05, 1.4278000000006452e-05, 1.4222000000008173e-05, 1.4291999999999083e-05, 1.4278000000006452e-05, 1.434699999999789e-05, 1.4276999999979223e-05, 1.434699999999789e-05, 1.4291999999999083e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4236000000000804e-05, 1.4278000000006452e-05, 1.429099999999961e-05, 1.4277999999978697e-05, 1.4278000000006452e-05, 1.4236000000000804e-05, 1.4263999999986066e-05, 1.4277000000006979e-05, 1.4277000000006979e-05, 1.4278000000006452e-05, 1.434699999999789e-05, 1.4264000000013821e-05, 1.4264000000013821e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4276999999979223e-05, 1.4264000000013821e-05, 1.4276999999979223e-05, 1.4222000000008173e-05, 1.4278000000006452e-05, 1.4195000000022384e-05, 1.4263999999986066e-05, 1.4264000000013821e-05, 1.4291999999999083e-05, 1.4277999999978697e-05, 1.4278000000006452e-05, 1.4278000000006452e-05, 1.4249999999993435e-05, 1.4193999999995155e-05, 1.430499999999224e-05, 1.430499999999224e-05, 1.4291999999999083e-05, 1.4277999999978697e-05]</msg>
<status status="PASS" starttime="20201029 18:14:24.985" endtime="20201029 18:14:24.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.973" endtime="20201029 18:14:24.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:24.347" endtime="20201029 18:14:24.992"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:24.199" endtime="20201029 18:14:24.994" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:25.013" endtime="20201029 18:14:25.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.007" endtime="20201029 18:14:25.036"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.069" endtime="20201029 18:14:25.088"></status>
</kw>
<msg timestamp="20201029 18:14:25.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.066" endtime="20201029 18:14:25.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.096" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.092" endtime="20201029 18:14:25.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.103" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:25.098" endtime="20201029 18:14:25.103"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:25.059" endtime="20201029 18:14:25.105"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:25.053" endtime="20201029 18:14:25.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.050" endtime="20201029 18:14:25.107"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:25.115" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:25.114" endtime="20201029 18:14:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.109" endtime="20201029 18:14:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.048" endtime="20201029 18:14:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.047" endtime="20201029 18:14:25.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.120" endtime="20201029 18:14:25.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.042" endtime="20201029 18:14:25.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.038" endtime="20201029 18:14:25.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.005" endtime="20201029 18:14:25.127"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.150" endtime="20201029 18:14:25.389"></status>
</kw>
<msg timestamp="20201029 18:14:25.390" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.146" endtime="20201029 18:14:25.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.396" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.392" endtime="20201029 18:14:25.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.399" endtime="20201029 18:14:25.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.139" endtime="20201029 18:14:25.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.133" endtime="20201029 18:14:25.405"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.411" endtime="20201029 18:14:25.416"></status>
</kw>
<msg timestamp="20201029 18:14:25.417" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:14:25.407" endtime="20201029 18:14:25.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.427" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:14:25.425" endtime="20201029 18:14:25.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.432" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:14:25.430" endtime="20201029 18:14:25.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.418" endtime="20201029 18:14:25.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.444" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:14:25.441" endtime="20201029 18:14:25.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.448" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:14:25.446" endtime="20201029 18:14:25.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.435" endtime="20201029 18:14:25.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.467" endtime="20201029 18:14:25.837"></status>
</kw>
<msg timestamp="20201029 18:14:25.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.464" endtime="20201029 18:14:25.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134631014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.134658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:25.846" endtime="20201029 18:14:25.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.864" endtime="20201029 18:14:25.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.457" endtime="20201029 18:14:25.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.452" endtime="20201029 18:14:25.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:25.881" level="INFO">${RESULT} = [{'diff': 2.742999999999496e-05}, {'diff': 2.7458000000007976e-05}, {'diff': 2.7486999999992712e-05}, {'diff': 2.7485999999993238e-05}, {'diff': 2.7485999999993238e-05}, {'diff': 2.7485999999993238e-0...</msg>
<status status="PASS" starttime="20201029 18:14:25.872" endtime="20201029 18:14:25.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:14:25.892" level="INFO">${OVERHEAD} = {'diff': [2.742999999999496e-05, 2.7458000000007976e-05, 2.7486999999992712e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7458000000007976e-05, 2.7514000000006256e-05,...</msg>
<status status="PASS" starttime="20201029 18:14:25.883" endtime="20201029 18:14:25.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.903" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:14:25.901" endtime="20201029 18:14:25.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:25.909" level="INFO">VALUE: [2.742999999999496e-05, 2.7458000000007976e-05, 2.7486999999992712e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.7458000000007976e-05, 2.7514000000006256e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.745799999998022e-05, 2.745799999998022e-05, 2.7485999999993238e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7485999999993238e-05, 2.747300000000008e-05, 2.7458000000007976e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7500000000013625e-05, 2.7472000000000607e-05, 2.747300000000008e-05, 2.742999999999496e-05, 2.7444000000015345e-05, 2.7500000000013625e-05, 2.7431000000022188e-05, 2.745800000003573e-05, 2.7416999999974045e-05, 2.7486000000020994e-05, 2.745800000003573e-05, 2.7486000000020994e-05, 2.747300000000008e-05, 2.745900000000745e-05, 2.745900000000745e-05, 2.747300000000008e-05, 2.7486000000020994e-05, 2.745799999998022e-05, 2.745799999998022e-05, 2.7485999999965482e-05, 2.7472000000028363e-05, 2.7514000000006256e-05, 2.7499999999958114e-05, 2.745900000000745e-05, 2.755499999995692e-05, 2.7485999999965482e-05, 2.747199999997285e-05, 2.747199999997285e-05, 2.7485999999965482e-05]</msg>
<status status="PASS" starttime="20201029 18:14:25.906" endtime="20201029 18:14:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.894" endtime="20201029 18:14:25.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.129" endtime="20201029 18:14:25.912"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:24.998" endtime="20201029 18:14:25.914" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:25.939" endtime="20201029 18:14:25.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.933" endtime="20201029 18:14:25.965"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:25.999" endtime="20201029 18:14:26.019"></status>
</kw>
<msg timestamp="20201029 18:14:26.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:25.996" endtime="20201029 18:14:26.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.027" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:26.023" endtime="20201029 18:14:26.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:26.029" endtime="20201029 18:14:26.034"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:25.988" endtime="20201029 18:14:26.036"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:25.982" endtime="20201029 18:14:26.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.979" endtime="20201029 18:14:26.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:26.046" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:26.045" endtime="20201029 18:14:26.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.040" endtime="20201029 18:14:26.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.977" endtime="20201029 18:14:26.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.976" endtime="20201029 18:14:26.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:26.050" endtime="20201029 18:14:26.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.972" endtime="20201029 18:14:26.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.967" endtime="20201029 18:14:26.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:25.928" endtime="20201029 18:14:26.057"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:26.066" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:26.082" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:26.976" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:26.062" endtime="20201029 18:14:26.977"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:29.982" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:14:26.979" endtime="20201029 18:14:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:26.058" endtime="20201029 18:14:29.986"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:29.994" endtime="20201029 18:14:30.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.990" endtime="20201029 18:14:30.018"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.040" endtime="20201029 18:14:30.050"></status>
</kw>
<msg timestamp="20201029 18:14:30.051" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.036" endtime="20201029 18:14:30.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.058" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.054" endtime="20201029 18:14:30.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.060" endtime="20201029 18:14:30.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.029" endtime="20201029 18:14:30.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.023" endtime="20201029 18:14:30.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.085" endtime="20201029 18:14:30.443"></status>
</kw>
<msg timestamp="20201029 18:14:30.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.036697069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:30.082" endtime="20201029 18:14:30.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036695583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.036697069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:14:30.453" endtime="20201029 18:14:30.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.476" endtime="20201029 18:14:30.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.074" endtime="20201029 18:14:30.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.069" endtime="20201029 18:14:30.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:30.500" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 4.57000000000235e-06}, {'diff': 4.5549999999963675e-06}, {'diff': 4.55600000000278e-06}, {'diff': 4.555999999995841e-06}, {'diff': 4.555000000003306e-06}, {'diff': 4.57000000000...</msg>
<status status="PASS" starttime="20201029 18:14:30.489" endtime="20201029 18:14:30.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:30.512" level="INFO">${RESULT} = {'diff': [0, 4.57000000000235e-06, 4.5549999999963675e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.57000000000235e-06, 4.55600000000278e-06, 4.5410000000037365e-06, 4.527...</msg>
<status status="PASS" starttime="20201029 18:14:30.503" endtime="20201029 18:14:30.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.523" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:30.521" endtime="20201029 18:14:30.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.529" level="INFO">VALUE: [0, 4.57000000000235e-06, 4.5549999999963675e-06, 4.55600000000278e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.57000000000235e-06, 4.55600000000278e-06, 4.5410000000037365e-06, 4.527999999996701e-06, 4.55600000000278e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.541999999996271e-06, 4.569000000002876e-06, 4.541999999996271e-06, 4.57000000000235e-06, 4.624999999994217e-06, 4.55600000000278e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.625000000001156e-06, 4.569999999995411e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.55600000000278e-06, 4.5549999999963675e-06, 4.55600000000278e-06, 4.569999999995411e-06, 4.51400000000407e-06, 4.55600000000278e-06, 4.57000000000235e-06, 4.555000000003306e-06, 4.555999999995841e-06, 4.55600000000278e-06, 4.57000000000235e-06, 4.513000000004597e-06, 4.555999999995841e-06, 4.555000000003306e-06, 4.568999999995937e-06, 4.57000000000235e-06, 4.610999999994647e-06, 4.555000000003306e-06, 4.541999999996271e-06, 4.5549999999963675e-06, 4.625000000001156e-06, 4.555999999995841e-06, 4.569000000002876e-06, 4.596999999995077e-06, 4.55600000000278e-06]</msg>
<status status="PASS" starttime="20201029 18:14:30.526" endtime="20201029 18:14:30.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.514" endtime="20201029 18:14:30.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.019" endtime="20201029 18:14:30.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.988" endtime="20201029 18:14:30.533"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:30.539" endtime="20201029 18:14:30.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.535" endtime="20201029 18:14:30.563"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.584" endtime="20201029 18:14:30.594"></status>
</kw>
<msg timestamp="20201029 18:14:30.595" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.581" endtime="20201029 18:14:30.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.602" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:30.598" endtime="20201029 18:14:30.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.604" endtime="20201029 18:14:30.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.573" endtime="20201029 18:14:30.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.568" endtime="20201029 18:14:30.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:30.630" endtime="20201029 18:14:30.971"></status>
</kw>
<msg timestamp="20201029 18:14:30.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035471764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035480597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.627" endtime="20201029 18:14:30.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:30.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035471764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035480597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:30.981" endtime="20201029 18:14:30.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.000" endtime="20201029 18:14:31.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.618" endtime="20201029 18:14:31.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.613" endtime="20201029 18:14:31.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:31.017" level="INFO">${PHILIP_RES} = [{'diff': 8.832999999999758e-06}, {'diff': 8.792000000000522e-06}, {'diff': 8.846999999999328e-06}, {'diff': 8.874999999998467e-06}, {'diff': 8.805000000000618e-06}, {'diff': 8.832999999999758e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:14:31.009" endtime="20201029 18:14:31.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.027" level="INFO">${RESULT} = {'diff': [8.832999999999758e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.8609...</msg>
<status status="PASS" starttime="20201029 18:14:31.019" endtime="20201029 18:14:31.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.037" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:31.035" endtime="20201029 18:14:31.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.043" level="INFO">VALUE: [8.832999999999758e-06, 8.792000000000522e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.805000000000618e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.874999999998467e-06, 8.832999999999758e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.874999999998467e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.806000000000092e-06, 8.860999999998898e-06, 8.847999999998801e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.847999999998801e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.847999999998801e-06, 8.860999999998898e-06, 8.860999999998898e-06, 8.847999999998801e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.860999999998898e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.791000000001048e-06, 8.806000000000092e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.833999999999231e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201029 18:14:31.040" endtime="20201029 18:14:31.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.028" endtime="20201029 18:14:31.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.564" endtime="20201029 18:14:31.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:30.534" endtime="20201029 18:14:31.047"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:31.053" endtime="20201029 18:14:31.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.049" endtime="20201029 18:14:31.076"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.099" endtime="20201029 18:14:31.110"></status>
</kw>
<msg timestamp="20201029 18:14:31.112" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.096" endtime="20201029 18:14:31.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.118" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.114" endtime="20201029 18:14:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.121" endtime="20201029 18:14:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.087" endtime="20201029 18:14:31.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.082" endtime="20201029 18:14:31.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.145" endtime="20201029 18:14:31.499"></status>
</kw>
<msg timestamp="20201029 18:14:31.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036350417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036364319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.141" endtime="20201029 18:14:31.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036350417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036364319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.509" endtime="20201029 18:14:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.532" endtime="20201029 18:14:31.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.134" endtime="20201029 18:14:31.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.129" endtime="20201029 18:14:31.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:31.549" level="INFO">${PHILIP_RES} = [{'diff': 1.3901999999996195e-05}, {'diff': 1.3875000000003468e-05}, {'diff': 1.3889000000003038e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3888999999996099e-05}, {'diff': 1.3915999999995765e-...</msg>
<status status="PASS" starttime="20201029 18:14:31.541" endtime="20201029 18:14:31.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:31.558" level="INFO">${RESULT} = {'diff': [1.3901999999996195e-05, 1.3875000000003468e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3915999999995765e-05, 1.3903000000002608e-05, 1.3903000000002608e-05...</msg>
<status status="PASS" starttime="20201029 18:14:31.551" endtime="20201029 18:14:31.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.570" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:31.567" endtime="20201029 18:14:31.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.576" level="INFO">VALUE: [1.3901999999996195e-05, 1.3875000000003468e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3888999999996099e-05, 1.3915999999995765e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3944000000001844e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3902000000003134e-05, 1.3888999999996099e-05, 1.3916999999995239e-05, 1.3916999999995239e-05, 1.3903000000002608e-05, 1.3902000000003134e-05, 1.3917000000002178e-05, 1.3902999999995669e-05, 1.3902999999995669e-05, 1.3916000000002704e-05, 1.3902000000003134e-05, 1.3972000000000984e-05, 1.3903000000002608e-05, 1.3945000000001317e-05, 1.3888999999996099e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3861000000003898e-05, 1.3888999999996099e-05, 1.3901999999996195e-05, 1.3902999999995669e-05, 1.3972000000000984e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3929999999995335e-05, 1.3901999999996195e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3917000000002178e-05, 1.3902000000003134e-05, 1.3916999999995239e-05, 1.3930999999994809e-05, 1.3945000000001317e-05, 1.3875000000003468e-05, 1.3916000000002704e-05, 1.3903000000002608e-05]</msg>
<status status="PASS" starttime="20201029 18:14:31.573" endtime="20201029 18:14:31.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.560" endtime="20201029 18:14:31.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.078" endtime="20201029 18:14:31.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.048" endtime="20201029 18:14:31.581"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:31.588" endtime="20201029 18:14:31.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.583" endtime="20201029 18:14:31.621"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.647" endtime="20201029 18:14:31.658"></status>
</kw>
<msg timestamp="20201029 18:14:31.659" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.644" endtime="20201029 18:14:31.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:31.666" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:31.661" endtime="20201029 18:14:31.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.668" endtime="20201029 18:14:31.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.635" endtime="20201029 18:14:31.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.629" endtime="20201029 18:14:31.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:31.692" endtime="20201029 18:14:32.076"></status>
</kw>
<msg timestamp="20201029 18:14:32.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044261569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044281306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:31.688" endtime="20201029 18:14:32.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044261569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044281306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.085" endtime="20201029 18:14:32.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.104" endtime="20201029 18:14:32.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.681" endtime="20201029 18:14:32.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.677" endtime="20201029 18:14:32.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:32.121" level="INFO">${PHILIP_RES} = [{'diff': 1.973699999999884e-05}, {'diff': 1.97089999999997e-05}, {'diff': 1.972299999999927e-05}, {'diff': 1.969500000000013e-05}, {'diff': 1.972299999999927e-05}, {'diff': 1.9737000000005778e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:32.113" endtime="20201029 18:14:32.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.137" level="INFO">${RESULT} = {'diff': [1.973699999999884e-05, 1.97089999999997e-05, 1.972299999999927e-05, 1.969500000000013e-05, 1.972299999999927e-05, 1.9737000000005778e-05, 1.9736000000006304e-05, 1.9721999999999795e-05, 1.97...</msg>
<status status="PASS" starttime="20201029 18:14:32.123" endtime="20201029 18:14:32.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.148" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:32.145" endtime="20201029 18:14:32.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.153" level="INFO">VALUE: [1.973699999999884e-05, 1.97089999999997e-05, 1.972299999999927e-05, 1.969500000000013e-05, 1.972299999999927e-05, 1.9737000000005778e-05, 1.9736000000006304e-05, 1.9721999999999795e-05, 1.972299999999927e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9694000000000655e-05, 1.9763999999998505e-05, 1.9666000000001516e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9763999999998505e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 1.9708000000000225e-05, 1.9721999999999795e-05, 1.9749999999998935e-05, 1.9722000000006734e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.968100000000056e-05, 1.9735999999999365e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9721999999999795e-05, 1.9736000000006304e-05, 1.9750000000005874e-05, 1.972299999999927e-05, 1.972299999999927e-05]</msg>
<status status="PASS" starttime="20201029 18:14:32.150" endtime="20201029 18:14:32.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.139" endtime="20201029 18:14:32.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.622" endtime="20201029 18:14:32.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:31.582" endtime="20201029 18:14:32.158"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.163" endtime="20201029 18:14:32.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.160" endtime="20201029 18:14:32.187"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.208" endtime="20201029 18:14:32.220"></status>
</kw>
<msg timestamp="20201029 18:14:32.222" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.205" endtime="20201029 18:14:32.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.228" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.224" endtime="20201029 18:14:32.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.230" endtime="20201029 18:14:32.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.197" endtime="20201029 18:14:32.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.192" endtime="20201029 18:14:32.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.254" endtime="20201029 18:14:32.601"></status>
</kw>
<msg timestamp="20201029 18:14:32.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034915139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.251" endtime="20201029 18:14:32.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034915139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034941431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.610" endtime="20201029 18:14:32.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.629" endtime="20201029 18:14:32.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.244" endtime="20201029 18:14:32.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.239" endtime="20201029 18:14:32.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:32.646" level="INFO">${PHILIP_RES} = [{'diff': 2.6292000000004145e-05}, {'diff': 2.637500000000209e-05}, {'diff': 2.6306000000003715e-05}, {'diff': 2.631900000000381e-05}, {'diff': 2.630500000000424e-05}, {'diff': 2.6236000000005866e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:32.638" endtime="20201029 18:14:32.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:32.657" level="INFO">${RESULT} = {'diff': [2.6292000000004145e-05, 2.637500000000209e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.630500000000424e-05, 2.6236000000005866e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:14:32.648" endtime="20201029 18:14:32.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.668" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:32.666" endtime="20201029 18:14:32.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.673" level="INFO">VALUE: [2.6292000000004145e-05, 2.637500000000209e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.630500000000424e-05, 2.6236000000005866e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.6305999999996776e-05, 2.6318999999996873e-05, 2.6291999999997206e-05, 2.6304999999997303e-05, 2.6304999999997303e-05, 2.6319999999996346e-05, 2.6304999999997303e-05, 2.6318999999996873e-05, 2.6263999999998067e-05, 2.6346999999996012e-05, 2.6319999999996346e-05, 2.6263999999998067e-05, 2.6304999999997303e-05, 2.6319999999996346e-05, 2.6249999999998497e-05, 2.6304999999997303e-05, 2.6277999999997637e-05, 2.6304999999997303e-05, 2.6318999999996873e-05, 2.6306000000003715e-05, 2.630500000000424e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.631900000000381e-05, 2.6306000000003715e-05, 2.633300000000338e-05, 2.631900000000381e-05, 2.6292000000004145e-05, 2.6277000000005102e-05, 2.630500000000424e-05, 2.6306000000003715e-05, 2.631900000000381e-05, 2.6305999999996776e-05, 2.6305999999996776e-05, 2.6290999999997733e-05, 2.6348000000002425e-05, 2.6304999999997303e-05, 2.6304999999997303e-05, 2.6305999999996776e-05]</msg>
<status status="PASS" starttime="20201029 18:14:32.670" endtime="20201029 18:14:32.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.659" endtime="20201029 18:14:32.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.188" endtime="20201029 18:14:32.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.158" endtime="20201029 18:14:32.678"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:32.683" endtime="20201029 18:14:32.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.680" endtime="20201029 18:14:32.707"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.729" endtime="20201029 18:14:32.740"></status>
</kw>
<msg timestamp="20201029 18:14:32.741" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.725" endtime="20201029 18:14:32.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:32.748" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:32.744" endtime="20201029 18:14:32.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.750" endtime="20201029 18:14:32.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.717" endtime="20201029 18:14:32.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.712" endtime="20201029 18:14:32.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:32.774" endtime="20201029 18:14:33.122"></status>
</kw>
<msg timestamp="20201029 18:14:33.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035749639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:32.771" endtime="20201029 18:14:33.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035749639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035783278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:33.132" endtime="20201029 18:14:33.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.151" endtime="20201029 18:14:33.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.763" endtime="20201029 18:14:33.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.758" endtime="20201029 18:14:33.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:33.167" level="INFO">${PHILIP_RES} = [{'diff': 3.363900000000197e-05}, {'diff': 3.366700000000111e-05}, {'diff': 3.361100000000283e-05}, {'diff': 3.365200000000207e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.365300000000154e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:33.159" endtime="20201029 18:14:33.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.177" level="INFO">${RESULT} = {'diff': [3.363900000000197e-05, 3.366700000000111e-05, 3.361100000000283e-05, 3.365200000000207e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.3652999999994604e-05, 3.365...</msg>
<status status="PASS" starttime="20201029 18:14:33.169" endtime="20201029 18:14:33.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.187" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:33.185" endtime="20201029 18:14:33.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.193" level="INFO">VALUE: [3.363900000000197e-05, 3.366700000000111e-05, 3.361100000000283e-05, 3.365200000000207e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.370800000000035e-05, 3.3652999999994604e-05, 3.365199999999513e-05, 3.365199999999513e-05, 3.3624999999995464e-05, 3.3652999999994604e-05, 3.3652999999994604e-05, 3.370899999999982e-05, 3.365200000000207e-05, 3.368000000000121e-05, 3.3596999999996324e-05, 3.369500000000025e-05, 3.366700000000111e-05, 3.365200000000207e-05, 3.361200000000231e-05, 3.368100000000068e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.363900000000197e-05, 3.359700000000326e-05, 3.363900000000197e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.366700000000111e-05, 3.366600000000164e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.363900000000197e-05, 3.365300000000154e-05, 3.365199999999513e-05, 3.3652999999994604e-05, 3.370800000000035e-05, 3.3652999999994604e-05, 3.3666999999994174e-05, 3.3624999999995464e-05, 3.3610999999995894e-05, 3.3638999999995034e-05, 3.3652999999994604e-05, 3.368100000000068e-05, 3.3624999999995464e-05, 3.366600000000164e-05, 3.363900000000197e-05, 3.363900000000197e-05, 3.366700000000111e-05]</msg>
<status status="PASS" starttime="20201029 18:14:33.189" endtime="20201029 18:14:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.178" endtime="20201029 18:14:33.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.708" endtime="20201029 18:14:33.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:32.678" endtime="20201029 18:14:33.197"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.203" endtime="20201029 18:14:33.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.199" endtime="20201029 18:14:33.226"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.248" endtime="20201029 18:14:33.262"></status>
</kw>
<msg timestamp="20201029 18:14:33.264" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.245" endtime="20201029 18:14:33.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.270" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.266" endtime="20201029 18:14:33.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.272" endtime="20201029 18:14:33.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.237" endtime="20201029 18:14:33.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.231" endtime="20201029 18:14:33.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.296" endtime="20201029 18:14:33.637"></status>
</kw>
<msg timestamp="20201029 18:14:33.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03734625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037399111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:33.293" endtime="20201029 18:14:33.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03734625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037399111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:33.647" endtime="20201029 18:14:33.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.666" endtime="20201029 18:14:33.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.285" endtime="20201029 18:14:33.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.280" endtime="20201029 18:14:33.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:33.682" level="INFO">${PHILIP_RES} = [{'diff': 5.286100000000127e-05}, {'diff': 4.179199999999883e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.176399999999969e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:33.674" endtime="20201029 18:14:33.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:33.692" level="INFO">${RESULT} = {'diff': [5.286100000000127e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.176299999999328e-05, 4.1763...</msg>
<status status="PASS" starttime="20201029 18:14:33.684" endtime="20201029 18:14:33.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.702" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:33.700" endtime="20201029 18:14:33.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.708" level="INFO">VALUE: [5.286100000000127e-05, 4.179199999999883e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.176299999999328e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.1776999999999787e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.1776999999999787e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.176300000000022e-05, 4.177799999999926e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.1832999999998066e-05, 4.176400000000663e-05, 4.179199999999883e-05, 4.175000000000012e-05, 4.176399999999969e-05, 4.181999999999797e-05, 4.176399999999969e-05, 4.177799999999926e-05, 4.175000000000012e-05, 4.1776999999999787e-05, 4.175000000000012e-05, 4.179200000000577e-05, 4.1776999999999787e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.175000000000012e-05, 4.177799999999926e-05, 4.1776999999999787e-05, 4.177799999999926e-05, 4.172200000000098e-05, 4.176399999999969e-05, 4.176399999999969e-05, 4.17780000000062e-05]</msg>
<status status="PASS" starttime="20201029 18:14:33.705" endtime="20201029 18:14:33.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.694" endtime="20201029 18:14:33.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.228" endtime="20201029 18:14:33.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.198" endtime="20201029 18:14:33.712"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:33.718" endtime="20201029 18:14:33.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.714" endtime="20201029 18:14:33.741"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.765" endtime="20201029 18:14:33.778"></status>
</kw>
<msg timestamp="20201029 18:14:33.779" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.762" endtime="20201029 18:14:33.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:33.785" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:33.781" endtime="20201029 18:14:33.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.788" endtime="20201029 18:14:33.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.754" endtime="20201029 18:14:33.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.748" endtime="20201029 18:14:33.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:33.812" endtime="20201029 18:14:34.153"></status>
</kw>
<msg timestamp="20201029 18:14:34.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037307847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:33.808" endtime="20201029 18:14:34.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037307847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0373585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:14:34.162" endtime="20201029 18:14:34.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.181" endtime="20201029 18:14:34.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.801" endtime="20201029 18:14:34.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.796" endtime="20201029 18:14:34.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:34.198" level="INFO">${PHILIP_RES} = [{'diff': 5.0653000000004667e-05}, {'diff': 5.062499999999859e-05}, {'diff': 5.068099999999687e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.0653000000004667e-05}, {'diff': 5.0639000000005097e-05}...</msg>
<status status="PASS" starttime="20201029 18:14:34.190" endtime="20201029 18:14:34.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.207" level="INFO">${RESULT} = {'diff': [5.0653000000004667e-05, 5.062499999999859e-05, 5.068099999999687e-05, 5.063899999999816e-05, 5.0653000000004667e-05, 5.0639000000005097e-05, 5.073600000000261e-05, 5.065299999999773e-05, 5.0...</msg>
<status status="PASS" starttime="20201029 18:14:34.200" endtime="20201029 18:14:34.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.218" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:34.216" endtime="20201029 18:14:34.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.225" level="INFO">VALUE: [5.0653000000004667e-05, 5.062499999999859e-05, 5.068099999999687e-05, 5.063899999999816e-05, 5.0653000000004667e-05, 5.0639000000005097e-05, 5.073600000000261e-05, 5.065299999999773e-05, 5.065299999999773e-05, 5.066600000000476e-05, 5.0651999999998254e-05, 5.0651999999998254e-05, 5.065299999999773e-05, 5.062499999999859e-05, 5.0639000000005097e-05, 5.0709000000002946e-05, 5.063899999999816e-05, 5.063899999999816e-05, 5.0667000000004236e-05, 5.0653000000004667e-05, 5.063899999999816e-05, 5.0693999999996964e-05, 5.062499999999859e-05, 5.070800000000347e-05, 5.062499999999859e-05, 5.065299999999773e-05, 5.063899999999816e-05, 5.065299999999773e-05, 5.072200000000304e-05, 5.0651999999998254e-05, 5.0637999999998684e-05, 5.0665999999997824e-05, 5.0639000000005097e-05, 5.0639000000005097e-05, 5.062499999999859e-05, 5.062499999999859e-05, 5.061099999999902e-05, 5.058299999999988e-05, 5.0639000000005097e-05, 5.065299999999773e-05, 5.0707999999996534e-05, 5.063899999999816e-05, 5.0667000000004236e-05, 5.061099999999902e-05, 5.065299999999773e-05, 5.061099999999902e-05, 5.063899999999816e-05, 5.066600000000476e-05, 5.0637999999998684e-05, 5.0637999999998684e-05]</msg>
<status status="PASS" starttime="20201029 18:14:34.220" endtime="20201029 18:14:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.209" endtime="20201029 18:14:34.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.743" endtime="20201029 18:14:34.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:33.713" endtime="20201029 18:14:34.229"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.235" endtime="20201029 18:14:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.232" endtime="20201029 18:14:34.259"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.281" endtime="20201029 18:14:34.294"></status>
</kw>
<msg timestamp="20201029 18:14:34.295" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.277" endtime="20201029 18:14:34.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.301" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.297" endtime="20201029 18:14:34.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.304" endtime="20201029 18:14:34.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.270" endtime="20201029 18:14:34.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.265" endtime="20201029 18:14:34.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.327" endtime="20201029 18:14:34.673"></status>
</kw>
<msg timestamp="20201029 18:14:34.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035979278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036039556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.324" endtime="20201029 18:14:34.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035979278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036039556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.683" endtime="20201029 18:14:34.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.702" endtime="20201029 18:14:34.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.317" endtime="20201029 18:14:34.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.312" endtime="20201029 18:14:34.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:34.718" level="INFO">${PHILIP_RES} = [{'diff': 6.0277999999996945e-05}, {'diff': 6.0292000000003454e-05}, {'diff': 6.0263999999997375e-05}, {'diff': 6.0292000000003454e-05}, {'diff': 6.0320000000002594e-05}, {'diff': 6.0263999999997375e-...</msg>
<status status="PASS" starttime="20201029 18:14:34.710" endtime="20201029 18:14:34.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:34.729" level="INFO">${RESULT} = {'diff': [6.0277999999996945e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0292000000003454e-05, 6.0320000000002594e-05, 6.0263999999997375e-05, 6.0264000000004314e-05, 6.0291999999996515e-05...</msg>
<status status="PASS" starttime="20201029 18:14:34.720" endtime="20201029 18:14:34.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.740" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:34.738" endtime="20201029 18:14:34.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.746" level="INFO">VALUE: [6.0277999999996945e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0292000000003454e-05, 6.0320000000002594e-05, 6.0263999999997375e-05, 6.0264000000004314e-05, 6.0291999999996515e-05, 6.0306000000003024e-05, 6.0292000000003454e-05, 6.0361999999994365e-05, 6.029100000000398e-05, 6.02629999999979e-05, 6.0263999999997375e-05, 6.0292000000003454e-05, 6.0263999999997375e-05, 6.0306000000003024e-05, 6.0291999999996515e-05, 6.027699999999747e-05, 6.030500000000355e-05, 6.0291999999996515e-05, 6.0306000000003024e-05, 6.0263999999997375e-05, 6.031899999999618e-05, 6.027700000000441e-05, 6.036100000000183e-05, 6.0291999999996515e-05, 6.0264000000004314e-05, 6.0291999999996515e-05, 6.0278000000003884e-05, 6.029099999999704e-05, 6.0277999999996945e-05, 6.0292000000003454e-05, 6.0277999999996945e-05, 6.0334000000002164e-05, 6.0292000000003454e-05, 6.0291999999996515e-05, 6.029100000000398e-05, 6.0291999999996515e-05, 6.0291999999996515e-05, 6.0278000000003884e-05, 6.0263999999997375e-05, 6.031900000000312e-05, 6.0249999999997805e-05, 6.0291999999996515e-05, 6.0278000000003884e-05, 6.0291999999996515e-05, 6.0306000000003024e-05, 6.0264000000004314e-05, 6.027699999999747e-05]</msg>
<status status="PASS" starttime="20201029 18:14:34.742" endtime="20201029 18:14:34.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.731" endtime="20201029 18:14:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.261" endtime="20201029 18:14:34.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.230" endtime="20201029 18:14:34.750"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:34.756" endtime="20201029 18:14:34.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.752" endtime="20201029 18:14:34.780"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.801" endtime="20201029 18:14:34.815"></status>
</kw>
<msg timestamp="20201029 18:14:34.816" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.798" endtime="20201029 18:14:34.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:34.822" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:34.818" endtime="20201029 18:14:34.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.824" endtime="20201029 18:14:34.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.790" endtime="20201029 18:14:34.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.785" endtime="20201029 18:14:34.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:34.848" endtime="20201029 18:14:35.190"></status>
</kw>
<msg timestamp="20201029 18:14:35.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035288764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:34.845" endtime="20201029 18:14:35.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035218083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035288764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.200" endtime="20201029 18:14:35.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.219" endtime="20201029 18:14:35.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.837" endtime="20201029 18:14:35.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.833" endtime="20201029 18:14:35.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:35.235" level="INFO">${PHILIP_RES} = [{'diff': 7.068100000000299e-05}, {'diff': 7.067999999999658e-05}, {'diff': 7.066600000000395e-05}, {'diff': 7.068099999999605e-05}, {'diff': 7.063899999999734e-05}, {'diff': 7.066600000000395e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:35.227" endtime="20201029 18:14:35.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.246" level="INFO">${RESULT} = {'diff': [7.068100000000299e-05, 7.067999999999658e-05, 7.066600000000395e-05, 7.068099999999605e-05, 7.063899999999734e-05, 7.066600000000395e-05, 7.069399999999615e-05, 7.068100000000299e-05, 7.0721...</msg>
<status status="PASS" starttime="20201029 18:14:35.237" endtime="20201029 18:14:35.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.257" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:35.255" endtime="20201029 18:14:35.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.262" level="INFO">VALUE: [7.068100000000299e-05, 7.067999999999658e-05, 7.066600000000395e-05, 7.068099999999605e-05, 7.063899999999734e-05, 7.066600000000395e-05, 7.069399999999615e-05, 7.068100000000299e-05, 7.072199999999529e-05, 7.069399999999615e-05, 7.068100000000299e-05, 7.068099999999605e-05, 7.068100000000299e-05, 7.069399999999615e-05, 7.070799999999572e-05, 7.069500000000256e-05, 7.067999999999658e-05, 7.070800000000266e-05, 7.066699999999648e-05, 7.069499999999562e-05, 7.069400000000309e-05, 7.067999999999658e-05, 7.076400000000094e-05, 7.069500000000256e-05, 7.066599999999701e-05, 7.069400000000309e-05, 7.070899999999519e-05, 7.068100000000299e-05, 7.062499999999777e-05, 7.069399999999615e-05, 7.068100000000299e-05, 7.069499999999562e-05, 7.069400000000309e-05, 7.066700000000342e-05, 7.072199999999529e-05, 7.069400000000309e-05, 7.063899999999734e-05, 7.070800000000266e-05, 7.068100000000299e-05, 7.068099999999605e-05, 7.069400000000309e-05, 7.066699999999648e-05, 7.063899999999734e-05, 7.069400000000309e-05, 7.070799999999572e-05, 7.068100000000299e-05, 7.068099999999605e-05, 7.069400000000309e-05, 7.068000000000352e-05, 7.068099999999605e-05]</msg>
<status status="PASS" starttime="20201029 18:14:35.259" endtime="20201029 18:14:35.263"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.248" endtime="20201029 18:14:35.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.781" endtime="20201029 18:14:35.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:34.751" endtime="20201029 18:14:35.267"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.273" endtime="20201029 18:14:35.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.270" endtime="20201029 18:14:35.297"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.318" endtime="20201029 18:14:35.333"></status>
</kw>
<msg timestamp="20201029 18:14:35.335" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.315" endtime="20201029 18:14:35.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.341" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.337" endtime="20201029 18:14:35.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.343" endtime="20201029 18:14:35.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.308" endtime="20201029 18:14:35.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.302" endtime="20201029 18:14:35.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.367" endtime="20201029 18:14:35.710"></status>
</kw>
<msg timestamp="20201029 18:14:35.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035199403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.364" endtime="20201029 18:14:35.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035199403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035281222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:35.720" endtime="20201029 18:14:35.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.739" endtime="20201029 18:14:35.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.356" endtime="20201029 18:14:35.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.351" endtime="20201029 18:14:35.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:35.756" level="INFO">${PHILIP_RES} = [{'diff': 8.18190000000038e-05}, {'diff': 8.183300000000338e-05}, {'diff': 8.187500000000208e-05}, {'diff': 8.186099999999558e-05}, {'diff': 8.183299999999644e-05}, {'diff': 8.183399999999591e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:35.748" endtime="20201029 18:14:35.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:35.765" level="INFO">${RESULT} = {'diff': [8.18190000000038e-05, 8.183300000000338e-05, 8.187500000000208e-05, 8.186099999999558e-05, 8.183299999999644e-05, 8.183399999999591e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.18750...</msg>
<status status="PASS" starttime="20201029 18:14:35.758" endtime="20201029 18:14:35.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.776" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:35.774" endtime="20201029 18:14:35.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.781" level="INFO">VALUE: [8.18190000000038e-05, 8.183300000000338e-05, 8.187500000000208e-05, 8.186099999999558e-05, 8.183299999999644e-05, 8.183399999999591e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.184800000000242e-05, 8.180599999999677e-05, 8.186100000000252e-05, 8.19170000000008e-05, 8.187499999999515e-05, 8.1846999999996e-05, 8.184700000000295e-05, 8.186100000000252e-05, 8.184800000000242e-05, 8.186100000000252e-05, 8.17919999999972e-05, 8.183299999999644e-05, 8.183399999999591e-05, 8.186099999999558e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.179200000000414e-05, 8.187500000000208e-05, 8.186100000000252e-05, 8.184700000000295e-05, 8.183399999999591e-05, 8.1846999999996e-05, 8.1846999999996e-05, 8.184700000000295e-05, 8.187500000000208e-05, 8.186100000000252e-05, 8.187500000000208e-05, 8.190300000000122e-05, 8.184800000000242e-05, 8.184799999999548e-05, 8.186099999999558e-05, 8.183299999999644e-05, 8.183400000000285e-05, 8.187500000000208e-05, 8.179200000000414e-05, 8.184700000000295e-05, 8.187500000000208e-05, 8.187499999999515e-05, 8.1846999999996e-05, 8.1846999999996e-05, 8.187500000000208e-05]</msg>
<status status="PASS" starttime="20201029 18:14:35.778" endtime="20201029 18:14:35.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.767" endtime="20201029 18:14:35.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.298" endtime="20201029 18:14:35.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.268" endtime="20201029 18:14:35.787"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:35.792" endtime="20201029 18:14:35.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.789" endtime="20201029 18:14:35.816"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.837" endtime="20201029 18:14:35.853"></status>
</kw>
<msg timestamp="20201029 18:14:35.854" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.834" endtime="20201029 18:14:35.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:35.860" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:35.856" endtime="20201029 18:14:35.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.862" endtime="20201029 18:14:35.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.827" endtime="20201029 18:14:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.821" endtime="20201029 18:14:35.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:35.888" endtime="20201029 18:14:36.230"></status>
</kw>
<msg timestamp="20201029 18:14:36.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035250958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03534475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:35.884" endtime="20201029 18:14:36.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035250958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03534475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:36.239" endtime="20201029 18:14:36.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.258" endtime="20201029 18:14:36.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.877" endtime="20201029 18:14:36.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.872" endtime="20201029 18:14:36.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:36.275" level="INFO">${PHILIP_RES} = [{'diff': 9.379200000000226e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.384800000000054e-05}, {'diff': 9.377699999999628e-05}, {'diff': 9.379100000000279e-05}, {'diff': 9.375000000000355e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:14:36.267" endtime="20201029 18:14:36.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.284" level="INFO">${RESULT} = {'diff': [9.379200000000226e-05, 9.380600000000183e-05, 9.384800000000054e-05, 9.377699999999628e-05, 9.379100000000279e-05, 9.375000000000355e-05, 9.38330000000015e-05, 9.379199999999532e-05, 9.37920...</msg>
<status status="PASS" starttime="20201029 18:14:36.277" endtime="20201029 18:14:36.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.295" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:36.293" endtime="20201029 18:14:36.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.300" level="INFO">VALUE: [9.379200000000226e-05, 9.380600000000183e-05, 9.384800000000054e-05, 9.377699999999628e-05, 9.379100000000279e-05, 9.375000000000355e-05, 9.38330000000015e-05, 9.379199999999532e-05, 9.379200000000226e-05, 9.377800000000269e-05, 9.379100000000279e-05, 9.380500000000236e-05, 0.00010431899999999855, 9.376300000000365e-05, 9.380499999999542e-05, 9.379199999999532e-05, 9.379200000000226e-05, 9.384700000000107e-05, 9.379200000000226e-05, 9.377799999999575e-05, 9.377699999999628e-05, 9.379100000000279e-05, 9.379200000000226e-05, 9.377799999999575e-05, 9.38059999999949e-05, 9.38330000000015e-05, 9.379200000000226e-05, 9.380500000000236e-05, 9.380499999999542e-05, 9.377699999999628e-05, 9.372299999999695e-05, 9.379200000000226e-05, 9.377799999999575e-05, 9.377799999999575e-05, 9.380600000000183e-05, 9.379100000000279e-05, 9.379100000000279e-05, 9.380499999999542e-05, 9.379199999999532e-05, 9.376400000000312e-05, 9.373600000000398e-05, 9.377800000000269e-05, 9.376399999999618e-05, 9.384800000000054e-05, 9.379100000000279e-05, 9.377800000000269e-05, 9.376400000000312e-05, 9.38059999999949e-05, 9.379200000000226e-05, 9.377800000000269e-05]</msg>
<status status="PASS" starttime="20201029 18:14:36.297" endtime="20201029 18:14:36.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.286" endtime="20201029 18:14:36.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.817" endtime="20201029 18:14:36.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:35.787" endtime="20201029 18:14:36.305"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:36.311" endtime="20201029 18:14:36.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.308" endtime="20201029 18:14:36.335"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.357" endtime="20201029 18:14:36.373"></status>
</kw>
<msg timestamp="20201029 18:14:36.374" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.354" endtime="20201029 18:14:36.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.381" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.377" endtime="20201029 18:14:36.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.383" endtime="20201029 18:14:36.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.347" endtime="20201029 18:14:36.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.341" endtime="20201029 18:14:36.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.407" endtime="20201029 18:14:36.753"></status>
</kw>
<msg timestamp="20201029 18:14:36.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.404" endtime="20201029 18:14:36.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036812792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036919292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.762" endtime="20201029 18:14:36.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.781" endtime="20201029 18:14:36.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.396" endtime="20201029 18:14:36.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.391" endtime="20201029 18:14:36.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:36.797" level="INFO">${PHILIP_RES} = [{'diff': 0.00010650000000000243}, {'diff': 0.00010647299999999582}, {'diff': 0.00010652800000000157}, {'diff': 0.00010645799999999678}, {'diff': 0.00010647200000000329}, {'diff': 0.000106443999999997...</msg>
<status status="PASS" starttime="20201029 18:14:36.789" endtime="20201029 18:14:36.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:36.806" level="INFO">${RESULT} = {'diff': [0.00010650000000000243, 0.00010647299999999582, 0.00010652800000000157, 0.00010645799999999678, 0.00010647200000000329, 0.00010644399999999721, 0.00010647199999999635, 0.00010652800000000157...</msg>
<status status="PASS" starttime="20201029 18:14:36.799" endtime="20201029 18:14:36.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.817" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:36.814" endtime="20201029 18:14:36.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.824" level="INFO">VALUE: [0.00010650000000000243, 0.00010647299999999582, 0.00010652800000000157, 0.00010645799999999678, 0.00010647200000000329, 0.00010644399999999721, 0.00010647199999999635, 0.00010652800000000157, 0.00010641699999999754, 0.00010648600000000286, 0.00010647200000000329, 0.00010645899999999625, 0.00010654200000000114, 0.00010645799999999678, 0.00010645800000000372, 0.00010650000000000243, 0.00010649999999999549, 0.00010648600000000286, 0.00010647199999999635, 0.00010648600000000286, 0.00010648600000000286, 0.00010649999999999549, 0.00010647200000000329, 0.00010647199999999635, 0.000106514000000002, 0.00010648600000000286, 0.00010652799999999463, 0.0001065690000000008, 0.00010648599999999592, 0.00010641700000000448, 0.00010648700000000233, 0.00010647199999999635, 0.00010645800000000372, 0.00010648600000000286, 0.00010648599999999592, 0.00010648600000000286, 0.00010649999999999549, 0.00010654100000000166, 0.00010648700000000233, 0.00010647299999999582, 0.00010647300000000276, 0.00010648599999999592, 0.00010648600000000286, 0.00010645799999999678, 0.00011594399999999977, 0.00010644399999999721, 0.000106514000000002, 0.00010645799999999678, 0.00010649999999999549, 0.00010647300000000276]</msg>
<status status="PASS" starttime="20201029 18:14:36.819" endtime="20201029 18:14:36.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.808" endtime="20201029 18:14:36.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.336" endtime="20201029 18:14:36.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.306" endtime="20201029 18:14:36.835"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:36.841" endtime="20201029 18:14:36.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.837" endtime="20201029 18:14:36.864"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.886" endtime="20201029 18:14:36.903"></status>
</kw>
<msg timestamp="20201029 18:14:36.904" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.882" endtime="20201029 18:14:36.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:36.910" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:36.906" endtime="20201029 18:14:36.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.913" endtime="20201029 18:14:36.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.875" endtime="20201029 18:14:36.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.870" endtime="20201029 18:14:36.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:36.937" endtime="20201029 18:14:37.278"></status>
</kw>
<msg timestamp="20201029 18:14:37.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035491306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035611264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:36.933" endtime="20201029 18:14:37.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035491306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035611264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.288" endtime="20201029 18:14:37.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.306" endtime="20201029 18:14:37.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.926" endtime="20201029 18:14:37.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.921" endtime="20201029 18:14:37.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:37.322" level="INFO">${PHILIP_RES} = [{'diff': 0.0001199579999999964}, {'diff': 0.00011987499999999846}, {'diff': 0.00011992999999999726}, {'diff': 0.00011993099999999673}, {'diff': 0.00011994399999999683}, {'diff': 0.0001199169999999971...</msg>
<status status="PASS" starttime="20201029 18:14:37.315" endtime="20201029 18:14:37.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.337" level="INFO">${RESULT} = {'diff': [0.0001199579999999964, 0.00011987499999999846, 0.00011992999999999726, 0.00011993099999999673, 0.00011994399999999683, 0.00011991699999999716, 0.00011994399999999683, 0.0001199029999999976, ...</msg>
<status status="PASS" starttime="20201029 18:14:37.325" endtime="20201029 18:14:37.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.348" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:37.345" endtime="20201029 18:14:37.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.353" level="INFO">VALUE: [0.0001199579999999964, 0.00011987499999999846, 0.00011992999999999726, 0.00011993099999999673, 0.00011994399999999683, 0.00011991699999999716, 0.00011994399999999683, 0.0001199029999999976, 0.00011992999999999726, 0.00012941699999999973, 0.00011995900000000281, 0.00011995800000000334, 0.0001199449999999963, 0.00011994399999999683, 0.0001199449999999963, 0.00011994399999999683, 0.00011994399999999683, 0.00011995899999999587, 0.00011992999999999726, 0.00011998599999999554, 0.00011994399999999683, 0.0001199449999999963, 0.00011994400000000377, 0.00011994500000000324, 0.00011994400000000377, 0.00011994400000000377, 0.00011994400000000377, 0.00011995800000000334, 0.0001198750000000054, 0.00011990300000000453, 0.00011990300000000453, 0.00011994400000000377, 0.00011991699999999716, 0.00011994399999999683, 0.0001199449999999963, 0.00011994399999999683, 0.00011994399999999683, 0.00011994399999999683, 0.0001199579999999964, 0.00011995899999999587, 0.0001199579999999964, 0.00011987499999999846, 0.00011995800000000334, 0.00011993100000000367, 0.00011991599999999769, 0.0001199170000000041, 0.00011995800000000334, 0.00011988899999999802, 0.00011994400000000377, 0.00011995800000000334]</msg>
<status status="PASS" starttime="20201029 18:14:37.350" endtime="20201029 18:14:37.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.339" endtime="20201029 18:14:37.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.866" endtime="20201029 18:14:37.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:36.836" endtime="20201029 18:14:37.358"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.364" endtime="20201029 18:14:37.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.360" endtime="20201029 18:14:37.387"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.409" endtime="20201029 18:14:37.425"></status>
</kw>
<msg timestamp="20201029 18:14:37.427" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.405" endtime="20201029 18:14:37.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.433" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.429" endtime="20201029 18:14:37.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.435" endtime="20201029 18:14:37.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.398" endtime="20201029 18:14:37.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.393" endtime="20201029 18:14:37.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.459" endtime="20201029 18:14:37.802"></status>
</kw>
<msg timestamp="20201029 18:14:37.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035047375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035181528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.455" endtime="20201029 18:14:37.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035047375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035181528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.811" endtime="20201029 18:14:37.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.830" endtime="20201029 18:14:37.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.448" endtime="20201029 18:14:37.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.443" endtime="20201029 18:14:37.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:37.846" level="INFO">${PHILIP_RES} = [{'diff': 0.00013415299999999797}, {'diff': 0.00013416699999999754}, {'diff': 0.0001341809999999971}, {'diff': 0.00013416700000000448}, {'diff': 0.00013416699999999754}, {'diff': 0.0001341670000000044...</msg>
<status status="PASS" starttime="20201029 18:14:37.838" endtime="20201029 18:14:37.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:37.857" level="INFO">${RESULT} = {'diff': [0.00013415299999999797, 0.00013416699999999754, 0.0001341809999999971, 0.00013416700000000448, 0.00013416699999999754, 0.00013416700000000448, 0.00013417999999999763, 0.00013413800000000586,...</msg>
<status status="PASS" starttime="20201029 18:14:37.848" endtime="20201029 18:14:37.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.868" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:37.866" endtime="20201029 18:14:37.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.873" level="INFO">VALUE: [0.00013415299999999797, 0.00013416699999999754, 0.0001341809999999971, 0.00013416700000000448, 0.00013416699999999754, 0.00013416700000000448, 0.00013417999999999763, 0.00013413800000000586, 0.0001341939999999972, 0.00013416700000000448, 0.00013415299999999797, 0.00013418100000000405, 0.00013416699999999754, 0.0001341809999999971, 0.0001341389999999984, 0.0001341389999999984, 0.00013417999999999763, 0.00013417999999999763, 0.000134166000000005, 0.00013416599999999806, 0.00014523599999999998, 0.00013419499999999668, 0.0001341809999999971, 0.00013416700000000448, 0.0001341389999999984, 0.0001341530000000049, 0.00013416599999999806, 0.000134166000000005, 0.00013415299999999797, 0.00013418100000000405, 0.00013415299999999797, 0.00013416700000000448, 0.0001341809999999971, 0.00013416699999999754, 0.00013416700000000448, 0.00013416699999999754, 0.000134166000000005, 0.00013416599999999806, 0.00013411099999999926, 0.00013416699999999754, 0.0001341530000000049, 0.0001341809999999971, 0.00013416700000000448, 0.00013416699999999754, 0.00013415299999999797, 0.00013416699999999754, 0.00013412499999999883, 0.00013417999999999763, 0.00013420799999999677, 0.00013412499999999883]</msg>
<status status="PASS" starttime="20201029 18:14:37.870" endtime="20201029 18:14:37.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.859" endtime="20201029 18:14:37.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.389" endtime="20201029 18:14:37.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.359" endtime="20201029 18:14:37.878"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:37.884" endtime="20201029 18:14:37.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.881" endtime="20201029 18:14:37.908"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.929" endtime="20201029 18:14:37.947"></status>
</kw>
<msg timestamp="20201029 18:14:37.948" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.926" endtime="20201029 18:14:37.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:37.955" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:37.951" endtime="20201029 18:14:37.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.957" endtime="20201029 18:14:37.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.918" endtime="20201029 18:14:37.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.913" endtime="20201029 18:14:37.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:37.981" endtime="20201029 18:14:38.324"></status>
</kw>
<msg timestamp="20201029 18:14:38.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035013056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035162208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:37.977" endtime="20201029 18:14:38.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035013056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035162208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.334" endtime="20201029 18:14:38.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.352" endtime="20201029 18:14:38.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.970" endtime="20201029 18:14:38.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.965" endtime="20201029 18:14:38.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.368" level="INFO">${PHILIP_RES} = [{'diff': 0.00014915199999999962}, {'diff': 0.00014913899999999952}, {'diff': 0.00014919399999999833}, {'diff': 0.0001491529999999991}, {'diff': 0.00014912499999999995}, {'diff': 0.0001491530000000060...</msg>
<status status="PASS" starttime="20201029 18:14:38.361" endtime="20201029 18:14:38.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.378" level="INFO">${RESULT} = {'diff': [0.00014915199999999962, 0.00014913899999999952, 0.00014919399999999833, 0.0001491529999999991, 0.00014912499999999995, 0.00014915300000000603, 0.00014915199999999962, 0.00014916699999999866,...</msg>
<status status="PASS" starttime="20201029 18:14:38.370" endtime="20201029 18:14:38.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.388" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.386" endtime="20201029 18:14:38.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.394" level="INFO">VALUE: [0.00014915199999999962, 0.00014913899999999952, 0.00014919399999999833, 0.0001491529999999991, 0.00014912499999999995, 0.00014915300000000603, 0.00014915199999999962, 0.00014916699999999866, 0.0001491659999999992, 0.0001491529999999991, 0.0001491659999999992, 0.00014913899999999952, 0.00014912499999999995, 0.00014916699999999866, 0.0001491659999999992, 0.0001491670000000056, 0.00014913900000000646, 0.00014916699999999866, 0.00014913899999999952, 0.00014913899999999952, 0.00014916699999999866, 0.00014913899999999952, 0.0001491529999999991, 0.0001491659999999992, 0.0001491529999999991, 0.00014915199999999962, 0.0001491670000000056, 0.00014916600000000613, 0.00014918100000000517, 0.00014915199999999962, 0.00014913899999999952, 0.00014913800000000005, 0.00014916699999999866, 0.00014923599999999704, 0.0001491529999999991, 0.00014913899999999952, 0.0001491529999999991, 0.0001491529999999991, 0.0001491670000000056, 0.00014911100000000038, 0.0001491529999999991, 0.00016458300000000287, 0.0001491529999999991, 0.00014913899999999952, 0.00014915300000000603, 0.00014913899999999952, 0.00014913899999999952, 0.00014915199999999962, 0.0001491529999999991, 0.00014915199999999962]</msg>
<status status="PASS" starttime="20201029 18:14:38.391" endtime="20201029 18:14:38.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.379" endtime="20201029 18:14:38.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.909" endtime="20201029 18:14:38.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:37.879" endtime="20201029 18:14:38.399"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.405" endtime="20201029 18:14:38.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.401" endtime="20201029 18:14:38.428"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.449" endtime="20201029 18:14:38.468"></status>
</kw>
<msg timestamp="20201029 18:14:38.470" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.446" endtime="20201029 18:14:38.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.476" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.472" endtime="20201029 18:14:38.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.478" endtime="20201029 18:14:38.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.439" endtime="20201029 18:14:38.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.433" endtime="20201029 18:14:38.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.502" endtime="20201029 18:14:38.848"></status>
</kw>
<msg timestamp="20201029 18:14:38.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.499" endtime="20201029 18:14:38.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035170375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035335278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:38.857" endtime="20201029 18:14:38.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.876" endtime="20201029 18:14:38.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.491" endtime="20201029 18:14:38.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.487" endtime="20201029 18:14:38.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:38.892" level="INFO">${PHILIP_RES} = [{'diff': 0.00016490300000000097}, {'diff': 0.0001648890000000014}, {'diff': 0.0001649440000000002}, {'diff': 0.00016493000000000063}, {'diff': 0.00016491700000000054}, {'diff': 0.00016491700000000054...</msg>
<status status="PASS" starttime="20201029 18:14:38.884" endtime="20201029 18:14:38.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:38.901" level="INFO">${RESULT} = {'diff': [0.00016490300000000097, 0.0001648890000000014, 0.0001649440000000002, 0.00016493000000000063, 0.00016491700000000054, 0.00016491700000000054, 0.00016494499999999968, 0.00016488899999999446, ...</msg>
<status status="PASS" starttime="20201029 18:14:38.894" endtime="20201029 18:14:38.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.911" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:38.909" endtime="20201029 18:14:38.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:38.917" level="INFO">VALUE: [0.00016490300000000097, 0.0001648890000000014, 0.0001649440000000002, 0.00016493000000000063, 0.00016491700000000054, 0.00016491700000000054, 0.00016494499999999968, 0.00016488899999999446, 0.00016487500000000183, 0.0001649020000000015, 0.00016488899999999446, 0.00016491700000000054, 0.00016490300000000097, 0.0001649310000000001, 0.00016491600000000106, 0.00016491600000000106, 0.00016490300000000097, 0.0001648890000000014, 0.00016483300000000312, 0.0001648890000000014, 0.00016490299999999403, 0.0001648890000000014, 0.00016487500000000183, 0.00016490300000000097, 0.00016490300000000097, 0.0001648890000000014, 0.00016493000000000063, 0.00016491600000000106, 0.0001649020000000015, 0.00016490300000000097, 0.00016490299999999403, 0.00016490300000000097, 0.00016495799999999977, 0.00016488799999999498, 0.00016491600000000106, 0.0001649310000000001, 0.00016490300000000097, 0.00016491700000000054, 0.00016490300000000097, 0.0001649020000000015, 0.0001649020000000015, 0.00016490300000000097, 0.00016491700000000054, 0.0001649310000000001, 0.00016491700000000054, 0.00016490300000000097, 0.0001649859999999989, 0.00016490300000000097, 0.0001648890000000014, 0.00016490300000000097]</msg>
<status status="PASS" starttime="20201029 18:14:38.914" endtime="20201029 18:14:38.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.903" endtime="20201029 18:14:38.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.429" endtime="20201029 18:14:38.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.400" endtime="20201029 18:14:38.922"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:38.928" endtime="20201029 18:14:38.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.924" endtime="20201029 18:14:38.951"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:38.974" endtime="20201029 18:14:38.994"></status>
</kw>
<msg timestamp="20201029 18:14:38.995" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.971" endtime="20201029 18:14:38.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.001" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:38.997" endtime="20201029 18:14:39.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.004" endtime="20201029 18:14:39.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.963" endtime="20201029 18:14:39.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.958" endtime="20201029 18:14:39.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.028" endtime="20201029 18:14:39.368"></status>
</kw>
<msg timestamp="20201029 18:14:39.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036817847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036999264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.025" endtime="20201029 18:14:39.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036817847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036999264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.378" endtime="20201029 18:14:39.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.396" endtime="20201029 18:14:39.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.017" endtime="20201029 18:14:39.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.012" endtime="20201029 18:14:39.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.412" level="INFO">${PHILIP_RES} = [{'diff': 0.00018141699999999622}, {'diff': 0.00018140299999999665}, {'diff': 0.00018141700000000316}, {'diff': 0.0001814309999999958}, {'diff': 0.00018141699999999622}, {'diff': 0.0001814310000000027...</msg>
<status status="PASS" starttime="20201029 18:14:39.405" endtime="20201029 18:14:39.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.422" level="INFO">${RESULT} = {'diff': [0.00018141699999999622, 0.00018140299999999665, 0.00018141700000000316, 0.0001814309999999958, 0.00018141699999999622, 0.00018143100000000273, 0.00018140299999999665, 0.00018140299999999665,...</msg>
<status status="PASS" starttime="20201029 18:14:39.414" endtime="20201029 18:14:39.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.432" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.430" endtime="20201029 18:14:39.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.439" level="INFO">VALUE: [0.00018141699999999622, 0.00018140299999999665, 0.00018141700000000316, 0.0001814309999999958, 0.00018141699999999622, 0.00018143100000000273, 0.00018140299999999665, 0.00018140299999999665, 0.00018141700000000316, 0.00018141599999999675, 0.00018141600000000369, 0.00018141600000000369, 0.00018140199999999718, 0.00018140200000000412, 0.00018141600000000369, 0.00018142999999999632, 0.00018144400000000283, 0.00018144400000000283, 0.00018141699999999622, 0.00018143100000000273, 0.00018134699999999837, 0.00018143100000000273, 0.00018148600000000153, 0.00018140299999999665, 0.00018147300000000144, 0.0001814030000000036, 0.0001814309999999958, 0.00018141700000000316, 0.00018137500000000445, 0.00018138899999999708, 0.00018143000000000326, 0.0001814030000000036, 0.00018141599999999675, 0.00018141600000000369, 0.00018141600000000369, 0.00018140199999999718, 0.00018148600000000153, 0.00018140299999999665, 0.00018140299999999665, 0.0001814450000000023, 0.00018141699999999622, 0.00018143100000000273, 0.00018141700000000316, 0.00018141699999999622, 0.00018141700000000316, 0.0001814030000000036, 0.00018145899999999493, 0.00018141700000000316, 0.0001814450000000023, 0.0001814309999999958]</msg>
<status status="PASS" starttime="20201029 18:14:39.435" endtime="20201029 18:14:39.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.424" endtime="20201029 18:14:39.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.952" endtime="20201029 18:14:39.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:38.923" endtime="20201029 18:14:39.445"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.450" endtime="20201029 18:14:39.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.447" endtime="20201029 18:14:39.474"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.495" endtime="20201029 18:14:39.517"></status>
</kw>
<msg timestamp="20201029 18:14:39.518" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.492" endtime="20201029 18:14:39.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.524" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:39.520" endtime="20201029 18:14:39.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.527" endtime="20201029 18:14:39.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.484" endtime="20201029 18:14:39.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.479" endtime="20201029 18:14:39.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.551" endtime="20201029 18:14:39.893"></status>
</kw>
<msg timestamp="20201029 18:14:39.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035241431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035440153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.547" endtime="20201029 18:14:39.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035241431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035440153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:39.902" endtime="20201029 18:14:39.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:39.920" endtime="20201029 18:14:39.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.540" endtime="20201029 18:14:39.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.535" endtime="20201029 18:14:39.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:39.937" level="INFO">${PHILIP_RES} = [{'diff': 0.00019872200000000534}, {'diff': 0.00019872200000000534}, {'diff': 0.00019869399999999926}, {'diff': 0.00019870900000000524}, {'diff': 0.00019870799999999883}, {'diff': 0.000198694999999998...</msg>
<status status="PASS" starttime="20201029 18:14:39.929" endtime="20201029 18:14:39.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:39.948" level="INFO">${RESULT} = {'diff': [0.00019872200000000534, 0.00019872200000000534, 0.00019869399999999926, 0.00019870900000000524, 0.00019870799999999883, 0.00019869499999999873, 0.0001987089999999983, 0.00019869499999999873,...</msg>
<status status="PASS" starttime="20201029 18:14:39.939" endtime="20201029 18:14:39.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.958" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:39.956" endtime="20201029 18:14:39.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:39.964" level="INFO">VALUE: [0.00019872200000000534, 0.00019872200000000534, 0.00019869399999999926, 0.00019870900000000524, 0.00019870799999999883, 0.00019869499999999873, 0.0001987089999999983, 0.00019869499999999873, 0.00019870799999999883, 0.00019863900000000045, 0.00019869399999999926, 0.00019865200000000055, 0.00019869499999999873, 0.00019868099999999916, 0.00019869499999999873, 0.00019870799999999883, 0.00019872200000000534, 0.00019875000000000448, 0.00019872200000000534, 0.0001987089999999983, 0.00019865300000000002, 0.0001986669999999996, 0.00019874999999999754, 0.00019869399999999926, 0.00019869399999999926, 0.0001986799999999997, 0.0001987089999999983, 0.00019872299999999787, 0.00019868099999999916, 0.00019870799999999883, 0.00019869399999999926, 0.00019870800000000577, 0.00019868000000000663, 0.00019870800000000577, 0.00019872200000000534, 0.0001987089999999983, 0.00019869399999999926, 0.00019865300000000002, 0.00019870799999999883, 0.00019873599999999797, 0.00019870799999999883, 0.0001987089999999983, 0.00019872299999999787, 0.00019870799999999883, 0.0001986799999999997, 0.0001987639999999971, 0.00019870799999999883, 0.00019875000000000448, 0.00019870900000000524, 0.0001987230000000048]</msg>
<status status="PASS" starttime="20201029 18:14:39.961" endtime="20201029 18:14:39.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.950" endtime="20201029 18:14:39.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.475" endtime="20201029 18:14:39.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.445" endtime="20201029 18:14:39.969"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:39.975" endtime="20201029 18:14:39.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.971" endtime="20201029 18:14:39.998"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.020" endtime="20201029 18:14:40.042"></status>
</kw>
<msg timestamp="20201029 18:14:40.044" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.017" endtime="20201029 18:14:40.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.050" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.046" endtime="20201029 18:14:40.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.052" endtime="20201029 18:14:40.056"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.009" endtime="20201029 18:14:40.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.004" endtime="20201029 18:14:40.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.076" endtime="20201029 18:14:40.417"></status>
</kw>
<msg timestamp="20201029 18:14:40.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036113667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.073" endtime="20201029 18:14:40.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035896931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036113667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.426" endtime="20201029 18:14:40.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.445" endtime="20201029 18:14:40.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.065" endtime="20201029 18:14:40.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.061" endtime="20201029 18:14:40.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0002167360000000021}, {'diff': 0.00021675000000000166}, {'diff': 0.0002167360000000021}, {'diff': 0.00021676400000000123}, {'diff': 0.00021669399999999645}, {'diff': 0.00021673599999999515...</msg>
<status status="PASS" starttime="20201029 18:14:40.453" endtime="20201029 18:14:40.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.472" level="INFO">${RESULT} = {'diff': [0.0002167360000000021, 0.00021675000000000166, 0.0002167360000000021, 0.00021676400000000123, 0.00021669399999999645, 0.00021673599999999515, 0.0002167360000000021, 0.00021673700000000157, 0...</msg>
<status status="PASS" starttime="20201029 18:14:40.463" endtime="20201029 18:14:40.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.483" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:40.480" endtime="20201029 18:14:40.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.488" level="INFO">VALUE: [0.0002167360000000021, 0.00021675000000000166, 0.0002167360000000021, 0.00021676400000000123, 0.00021669399999999645, 0.00021673599999999515, 0.0002167360000000021, 0.00021673700000000157, 0.00021676300000000176, 0.0002167769999999944, 0.00021674999999999472, 0.00021675000000000166, 0.00021675000000000166, 0.00021675000000000166, 0.00021672200000000252, 0.00021673700000000157, 0.00021673699999999463, 0.00021675000000000166, 0.00021669500000000286, 0.00021675000000000166, 0.00021675000000000166, 0.00021676400000000123, 0.00021672199999999558, 0.00021670900000000243, 0.000216723000000002, 0.00021672200000000252, 0.00021676400000000123, 0.00021668099999999635, 0.00021674999999999472, 0.00021675000000000166, 0.00021675000000000166, 0.0002167360000000021, 0.000216723000000002, 0.00021673599999999515, 0.00021673599999999515, 0.00021675000000000166, 0.00021670800000000295, 0.00021675000000000166, 0.00021669399999999645, 0.00021672199999999558, 0.0002167360000000021, 0.0002167360000000021, 0.00021676400000000123, 0.00021677700000000133, 0.0002167360000000021, 0.00021673599999999515, 0.00021675000000000166, 0.00021675000000000166, 0.00021669400000000338, 0.00021675000000000166]</msg>
<status status="PASS" starttime="20201029 18:14:40.485" endtime="20201029 18:14:40.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.474" endtime="20201029 18:14:40.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.999" endtime="20201029 18:14:40.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:39.970" endtime="20201029 18:14:40.493"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:40.499" endtime="20201029 18:14:40.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.495" endtime="20201029 18:14:40.522"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.544" endtime="20201029 18:14:40.567"></status>
</kw>
<msg timestamp="20201029 18:14:40.568" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.540" endtime="20201029 18:14:40.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.574" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:40.570" endtime="20201029 18:14:40.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.577" endtime="20201029 18:14:40.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.533" endtime="20201029 18:14:40.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.528" endtime="20201029 18:14:40.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.601" endtime="20201029 18:14:40.945"></status>
</kw>
<msg timestamp="20201029 18:14:40.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035259319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035494903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.597" endtime="20201029 18:14:40.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:40.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035259319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035494903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:40.954" endtime="20201029 18:14:40.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:40.973" endtime="20201029 18:14:40.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.590" endtime="20201029 18:14:40.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.585" endtime="20201029 18:14:40.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:40.989" level="INFO">${PHILIP_RES} = [{'diff': 0.00023558400000000396}, {'diff': 0.00023555599999999788}, {'diff': 0.0002354999999999996}, {'diff': 0.00023555600000000482}, {'diff': 0.00023556999999999745}, {'diff': 0.0002355559999999978...</msg>
<status status="PASS" starttime="20201029 18:14:40.982" endtime="20201029 18:14:40.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:40.999" level="INFO">${RESULT} = {'diff': [0.00023558400000000396, 0.00023555599999999788, 0.0002354999999999996, 0.00023555600000000482, 0.00023556999999999745, 0.00023555599999999788, 0.00023548600000000003, 0.00023555599999999788,...</msg>
<status status="PASS" starttime="20201029 18:14:40.991" endtime="20201029 18:14:40.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.010" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.008" endtime="20201029 18:14:41.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.016" level="INFO">VALUE: [0.00023558400000000396, 0.00023555599999999788, 0.0002354999999999996, 0.00023555600000000482, 0.00023556999999999745, 0.00023555599999999788, 0.00023548600000000003, 0.00023555599999999788, 0.00023554200000000525, 0.00023551399999999917, 0.00023555599999999788, 0.0002355700000000044, 0.00023555599999999788, 0.00023555599999999788, 0.00023555600000000482, 0.00023555599999999788, 0.0002354999999999996, 0.00023558400000000396, 0.0002355419999999983, 0.0002355419999999983, 0.00023554200000000525, 0.00023556999999999745, 0.0002355419999999983, 0.00023554200000000525, 0.00023555599999999788, 0.0002355419999999983, 0.0002355419999999983, 0.0002355419999999983, 0.0002356250000000032, 0.00023555599999999788, 0.00023561099999999668, 0.0002355700000000044, 0.00023555599999999788, 0.00023556999999999745, 0.00023552800000000568, 0.0002355419999999983, 0.00023555599999999788, 0.0002355700000000044, 0.00023555599999999788, 0.00023556999999999745, 0.00023555600000000482, 0.00023556999999999745, 0.00023552799999999874, 0.00023555600000000482, 0.00023558399999999702, 0.00023556999999999745, 0.0002355419999999983, 0.0002355419999999983, 0.00023552799999999874, 0.0002355419999999983]</msg>
<status status="PASS" starttime="20201029 18:14:41.012" endtime="20201029 18:14:41.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.001" endtime="20201029 18:14:41.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.524" endtime="20201029 18:14:41.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:40.494" endtime="20201029 18:14:41.021"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.027" endtime="20201029 18:14:41.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.023" endtime="20201029 18:14:41.050"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.071" endtime="20201029 18:14:41.096"></status>
</kw>
<msg timestamp="20201029 18:14:41.097" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.068" endtime="20201029 18:14:41.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.104" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.100" endtime="20201029 18:14:41.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.107" endtime="20201029 18:14:41.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.061" endtime="20201029 18:14:41.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.055" endtime="20201029 18:14:41.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.132" endtime="20201029 18:14:41.477"></status>
</kw>
<msg timestamp="20201029 18:14:41.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036745889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037000986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.128" endtime="20201029 18:14:41.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036745889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037000986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.487" endtime="20201029 18:14:41.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.505" endtime="20201029 18:14:41.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.121" endtime="20201029 18:14:41.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.116" endtime="20201029 18:14:41.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:41.522" level="INFO">${PHILIP_RES} = [{'diff': 0.00025509700000000274}, {'diff': 0.000255153000000001}, {'diff': 0.00025508299999999623}, {'diff': 0.00025512499999999494}, {'diff': 0.0002551250000000019}, {'diff': 0.000255153000000001}, ...</msg>
<status status="PASS" starttime="20201029 18:14:41.514" endtime="20201029 18:14:41.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:41.531" level="INFO">${RESULT} = {'diff': [0.00025509700000000274, 0.000255153000000001, 0.00025508299999999623, 0.00025512499999999494, 0.0002551250000000019, 0.000255153000000001, 0.0002551120000000018, 0.0002551389999999945, 0.000...</msg>
<status status="PASS" starttime="20201029 18:14:41.524" endtime="20201029 18:14:41.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.542" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:41.539" endtime="20201029 18:14:41.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.547" level="INFO">VALUE: [0.00025509700000000274, 0.000255153000000001, 0.00025508299999999623, 0.00025512499999999494, 0.0002551250000000019, 0.000255153000000001, 0.0002551120000000018, 0.0002551389999999945, 0.00025513900000000145, 0.00025512499999999494, 0.0002550980000000022, 0.00025511099999999537, 0.0002551250000000019, 0.00025512499999999494, 0.00025513900000000145, 0.0002551250000000019, 0.0002551110000000023, 0.0002551110000000023, 0.0002551250000000019, 0.000255153000000001, 0.0002551250000000019, 0.00025513900000000145, 0.0002551110000000023, 0.0002551250000000019, 0.00025512499999999494, 0.0002551250000000019, 0.00025511099999999537, 0.00025518100000000016, 0.00025506899999999666, 0.0002550690000000036, 0.00025512499999999494, 0.0002551110000000023, 0.00026509699999999886, 0.00025512499999999494, 0.0002551110000000023, 0.00025506899999999666, 0.0002551250000000019, 0.0002550969999999958, 0.0002551250000000019, 0.0002551250000000019, 0.00025513900000000145, 0.0002551250000000019, 0.00025513900000000145, 0.000255138000000002, 0.00025511099999999537, 0.0002551250000000019, 0.0002551800000000007, 0.0002551120000000018, 0.00025512499999999494, 0.0002551110000000023]</msg>
<status status="PASS" starttime="20201029 18:14:41.544" endtime="20201029 18:14:41.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.533" endtime="20201029 18:14:41.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.051" endtime="20201029 18:14:41.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.022" endtime="20201029 18:14:41.552"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:41.558" endtime="20201029 18:14:41.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.554" endtime="20201029 18:14:41.581"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.605" endtime="20201029 18:14:41.630"></status>
</kw>
<msg timestamp="20201029 18:14:41.632" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.601" endtime="20201029 18:14:41.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:41.638" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:41.634" endtime="20201029 18:14:41.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.641" endtime="20201029 18:14:41.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.594" endtime="20201029 18:14:41.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.588" endtime="20201029 18:14:41.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:41.664" endtime="20201029 18:14:42.007"></status>
</kw>
<msg timestamp="20201029 18:14:42.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037165222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037440694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:41.661" endtime="20201029 18:14:42.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037165222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037440694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.017" endtime="20201029 18:14:42.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.035" endtime="20201029 18:14:42.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.654" endtime="20201029 18:14:42.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.649" endtime="20201029 18:14:42.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.051" level="INFO">${PHILIP_RES} = [{'diff': 0.00027547199999999883}, {'diff': 0.00027545799999999926}, {'diff': 0.00027545799999999926}, {'diff': 0.0002754729999999983}, {'diff': 0.0002754439999999997}, {'diff': 0.0002754729999999983}...</msg>
<status status="PASS" starttime="20201029 18:14:42.044" endtime="20201029 18:14:42.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.061" level="INFO">${RESULT} = {'diff': [0.00027547199999999883, 0.00027545799999999926, 0.00027545799999999926, 0.0002754729999999983, 0.0002754439999999997, 0.0002754729999999983, 0.00027547199999999883, 0.00027547199999999883, 0...</msg>
<status status="PASS" starttime="20201029 18:14:42.054" endtime="20201029 18:14:42.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.071" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.069" endtime="20201029 18:14:42.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.078" level="INFO">VALUE: [0.00027547199999999883, 0.00027545799999999926, 0.00027545799999999926, 0.0002754729999999983, 0.0002754439999999997, 0.0002754729999999983, 0.00027547199999999883, 0.00027547199999999883, 0.00027544499999999916, 0.00027545799999999926, 0.0002754450000000061, 0.00027545799999999926, 0.00027547200000000577, 0.00027544499999999916, 0.00027545799999999926, 0.00027544499999999916, 0.00027551399999999754, 0.0002754439999999997, 0.00027545799999999926, 0.00027545799999999926, 0.0002754729999999983, 0.00027547200000000577, 0.0002754439999999997, 0.00027548600000000534, 0.00027545799999999926, 0.00027540300000000045, 0.00027547199999999883, 0.000275402000000001, 0.0002754859999999984, 0.00027547199999999883, 0.00027545899999999873, 0.0002754439999999997, 0.00027538799999999447, 0.00027545799999999926, 0.00027547200000000577, 0.00027545899999999873, 0.0002755409999999972, 0.00027545799999999926, 0.00027545799999999926, 0.00027545799999999926, 0.0002754309999999996, 0.00027545799999999926, 0.00027544499999999916, 0.0002754029999999935, 0.00027545799999999926, 0.00027547300000000524, 0.00027547199999999883, 0.000275402000000001, 0.0002754309999999996, 0.00027545799999999926]</msg>
<status status="PASS" starttime="20201029 18:14:42.074" endtime="20201029 18:14:42.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.062" endtime="20201029 18:14:42.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.583" endtime="20201029 18:14:42.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:41.553" endtime="20201029 18:14:42.090"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.096" endtime="20201029 18:14:42.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.092" endtime="20201029 18:14:42.120"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.143" endtime="20201029 18:14:42.169"></status>
</kw>
<msg timestamp="20201029 18:14:42.171" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.139" endtime="20201029 18:14:42.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.177" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.173" endtime="20201029 18:14:42.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.180" endtime="20201029 18:14:42.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.132" endtime="20201029 18:14:42.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.126" endtime="20201029 18:14:42.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.205" endtime="20201029 18:14:42.577"></status>
</kw>
<msg timestamp="20201029 18:14:42.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037209486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037506069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.201" endtime="20201029 18:14:42.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037209486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037506069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.587" endtime="20201029 18:14:42.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.607" endtime="20201029 18:14:42.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.194" endtime="20201029 18:14:42.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.188" endtime="20201029 18:14:42.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:42.624" level="INFO">${PHILIP_RES} = [{'diff': 0.00029658300000000304}, {'diff': 0.00029655599999999643}, {'diff': 0.00029656900000000347}, {'diff': 0.00029655499999999696}, {'diff': 0.0002965550000000039}, {'diff': 0.0002965139999999977...</msg>
<status status="PASS" starttime="20201029 18:14:42.616" endtime="20201029 18:14:42.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:42.639" level="INFO">${RESULT} = {'diff': [0.00029658300000000304, 0.00029655599999999643, 0.00029656900000000347, 0.00029655499999999696, 0.0002965550000000039, 0.0002965139999999977, 0.00029656900000000347, 0.00029655499999999696, ...</msg>
<status status="PASS" starttime="20201029 18:14:42.626" endtime="20201029 18:14:42.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.650" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:42.648" endtime="20201029 18:14:42.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.656" level="INFO">VALUE: [0.00029658300000000304, 0.00029655599999999643, 0.00029656900000000347, 0.00029655499999999696, 0.0002965550000000039, 0.0002965139999999977, 0.00029656900000000347, 0.00029655499999999696, 0.00029654199999999686, 0.00029652800000000423, 0.000296569999999996, 0.00029655600000000337, 0.00029654199999999686, 0.00029655600000000337, 0.00029655599999999643, 0.00029655600000000337, 0.0002966390000000013, 0.00029651299999999825, 0.00029656900000000347, 0.00029656899999999653, 0.00029656900000000347, 0.00029656899999999653, 0.00029656900000000347, 0.0002965409999999974, 0.0002965139999999977, 0.00029658300000000304, 0.000296569999999996, 0.0002965420000000038, 0.0002965839999999956, 0.00029655600000000337, 0.00029662500000000175, 0.00029649999999999815, 0.00029657000000000294, 0.00029654199999999686, 0.0002965420000000038, 0.00029656899999999653, 0.00029658300000000304, 0.00029656899999999653, 0.0002965550000000039, 0.0002965829999999961, 0.00029655499999999696, 0.0002965550000000039, 0.00029654199999999686, 0.00029657000000000294, 0.00029654199999999686, 0.00029655600000000337, 0.00029655599999999643, 0.0002965279999999973, 0.00029657000000000294, 0.00029654199999999686]</msg>
<status status="PASS" starttime="20201029 18:14:42.653" endtime="20201029 18:14:42.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.641" endtime="20201029 18:14:42.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.122" endtime="20201029 18:14:42.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.091" endtime="20201029 18:14:42.661"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:42.668" endtime="20201029 18:14:42.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.664" endtime="20201029 18:14:42.692"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.714" endtime="20201029 18:14:42.741"></status>
</kw>
<msg timestamp="20201029 18:14:42.743" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.710" endtime="20201029 18:14:42.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:42.749" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:42.745" endtime="20201029 18:14:42.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.752" endtime="20201029 18:14:42.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.703" endtime="20201029 18:14:42.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.697" endtime="20201029 18:14:42.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:42.777" endtime="20201029 18:14:43.150"></status>
</kw>
<msg timestamp="20201029 18:14:43.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036956458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037274903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:42.774" endtime="20201029 18:14:43.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036956458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037274903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.160" endtime="20201029 18:14:43.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.179" endtime="20201029 18:14:43.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.766" endtime="20201029 18:14:43.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.760" endtime="20201029 18:14:43.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.196" level="INFO">${PHILIP_RES} = [{'diff': 0.00031844500000000053}, {'diff': 0.00031843100000000096}, {'diff': 0.00031843100000000096}, {'diff': 0.0003184160000000019}, {'diff': 0.0003184170000000014}, {'diff': 0.0003184170000000014}...</msg>
<status status="PASS" starttime="20201029 18:14:43.188" endtime="20201029 18:14:43.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.208" level="INFO">${RESULT} = {'diff': [0.00031844500000000053, 0.00031843100000000096, 0.00031843100000000096, 0.0003184160000000019, 0.0003184170000000014, 0.0003184170000000014, 0.0003184160000000019, 0.0003184170000000014, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:43.198" endtime="20201029 18:14:43.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.219" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.217" endtime="20201029 18:14:43.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.225" level="INFO">VALUE: [0.00031844500000000053, 0.00031843100000000096, 0.00031843100000000096, 0.0003184160000000019, 0.0003184170000000014, 0.0003184170000000014, 0.0003184160000000019, 0.0003184170000000014, 0.00031843100000000096, 0.0003184300000000015, 0.00031844500000000053, 0.0003184160000000019, 0.00031841699999999445, 0.0003184170000000014, 0.000318415999999995, 0.0003184030000000018, 0.000318430999999994, 0.00031834700000000354, 0.0003310969999999955, 0.00031849999999999934, 0.00031843100000000096, 0.0003184160000000019, 0.00031848599999999977, 0.0003184170000000014, 0.0003184300000000015, 0.00031845800000000063, 0.0003184170000000014, 0.0003183609999999962, 0.00031843100000000096, 0.0003184030000000018, 0.0003184160000000019, 0.0003184029999999949, 0.0003184300000000015, 0.00031841699999999445, 0.00031843100000000096, 0.0003184439999999941, 0.0003184170000000014, 0.000318430999999994, 0.0003183880000000028, 0.00031843100000000096, 0.0003184030000000018, 0.0003184170000000014, 0.00031844400000000106, 0.0003184300000000015, 0.00031843100000000096, 0.0003184170000000014, 0.0003184160000000019, 0.00031843100000000096, 0.0003184170000000014, 0.0003184160000000019]</msg>
<status status="PASS" starttime="20201029 18:14:43.222" endtime="20201029 18:14:43.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.210" endtime="20201029 18:14:43.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.693" endtime="20201029 18:14:43.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:42.662" endtime="20201029 18:14:43.230"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.236" endtime="20201029 18:14:43.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.232" endtime="20201029 18:14:43.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.283" endtime="20201029 18:14:43.312"></status>
</kw>
<msg timestamp="20201029 18:14:43.314" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.279" endtime="20201029 18:14:43.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.320" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.316" endtime="20201029 18:14:43.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.323" endtime="20201029 18:14:43.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.271" endtime="20201029 18:14:43.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.266" endtime="20201029 18:14:43.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.348" endtime="20201029 18:14:43.710"></status>
</kw>
<msg timestamp="20201029 18:14:43.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037182597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037523639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.344" endtime="20201029 18:14:43.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037182597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037523639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.719" endtime="20201029 18:14:43.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.737" endtime="20201029 18:14:43.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.336" endtime="20201029 18:14:43.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.331" endtime="20201029 18:14:43.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:43.753" level="INFO">${PHILIP_RES} = [{'diff': 0.00034104199999999973}, {'diff': 0.00034104199999999973}, {'diff': 0.00034105499999999983}, {'diff': 0.0003410559999999993}, {'diff': 0.00034105499999999983}, {'diff': 0.0003410140000000006...</msg>
<status status="PASS" starttime="20201029 18:14:43.746" endtime="20201029 18:14:43.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:43.762" level="INFO">${RESULT} = {'diff': [0.00034104199999999973, 0.00034104199999999973, 0.00034105499999999983, 0.0003410559999999993, 0.00034105499999999983, 0.0003410140000000006, 0.0003410559999999993, 0.00034104199999999973, 0...</msg>
<status status="PASS" starttime="20201029 18:14:43.755" endtime="20201029 18:14:43.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.773" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:43.770" endtime="20201029 18:14:43.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.778" level="INFO">VALUE: [0.00034104199999999973, 0.00034104199999999973, 0.00034105499999999983, 0.0003410559999999993, 0.00034105499999999983, 0.0003410140000000006, 0.0003410559999999993, 0.00034104199999999973, 0.0003410689999999994, 0.0003410140000000006, 0.00034109699999999854, 0.0003410689999999994, 0.00034104199999999973, 0.0003410559999999993, 0.00034097199999999495, 0.00034098600000000145, 0.0003410559999999993, 0.00034105499999999983, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.0003410140000000006, 0.0003410559999999993, 0.00034105499999999983, 0.0003410140000000006, 0.00034104199999999973, 0.00034104100000000026, 0.00034104199999999973, 0.0003410559999999993, 0.00034105499999999983, 0.00034105499999999983, 0.0003410559999999993, 0.00034105499999999983, 0.0003410689999999994, 0.00034102800000000016, 0.00034102800000000016, 0.00034104199999999973, 0.00034104199999999973, 0.00034104199999999973, 0.00034102800000000016, 0.0003410559999999993, 0.0003410559999999993, 0.00034105500000000677, 0.0003410699999999989, 0.0003410559999999993, 0.00034105499999999983, 0.0003410559999999993, 0.00034104199999999973, 0.00034104100000000026, 0.00034104199999999973]</msg>
<status status="PASS" starttime="20201029 18:14:43.775" endtime="20201029 18:14:43.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.764" endtime="20201029 18:14:43.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.262" endtime="20201029 18:14:43.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.231" endtime="20201029 18:14:43.783"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:43.789" endtime="20201029 18:14:43.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.785" endtime="20201029 18:14:43.814"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.838" endtime="20201029 18:14:43.869"></status>
</kw>
<msg timestamp="20201029 18:14:43.870" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.834" endtime="20201029 18:14:43.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:43.877" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:43.873" endtime="20201029 18:14:43.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.880" endtime="20201029 18:14:43.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.826" endtime="20201029 18:14:43.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.820" endtime="20201029 18:14:43.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:43.905" endtime="20201029 18:14:44.279"></status>
</kw>
<msg timestamp="20201029 18:14:44.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041775722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:43.901" endtime="20201029 18:14:44.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041411264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041775722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.289" endtime="20201029 18:14:44.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.308" endtime="20201029 18:14:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.894" endtime="20201029 18:14:44.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.889" endtime="20201029 18:14:44.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.325" level="INFO">${PHILIP_RES} = [{'diff': 0.00036445799999999806}, {'diff': 0.0003644439999999985}, {'diff': 0.0003644299999999989}, {'diff': 0.00036444400000000543}, {'diff': 0.00036444499999999797}, {'diff': 0.0003644309999999984}...</msg>
<status status="PASS" starttime="20201029 18:14:44.317" endtime="20201029 18:14:44.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.335" level="INFO">${RESULT} = {'diff': [0.00036445799999999806, 0.0003644439999999985, 0.0003644299999999989, 0.00036444400000000543, 0.00036444499999999797, 0.0003644309999999984, 0.0003644309999999984, 0.0003644309999999984, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:44.327" endtime="20201029 18:14:44.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.346" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.344" endtime="20201029 18:14:44.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.352" level="INFO">VALUE: [0.00036445799999999806, 0.0003644439999999985, 0.0003644299999999989, 0.00036444400000000543, 0.00036444499999999797, 0.0003644309999999984, 0.0003644309999999984, 0.0003644309999999984, 0.00036447199999999763, 0.0003644439999999985, 0.00036443000000000586, 0.0003644439999999985, 0.00036444499999999797, 0.00036443100000000533, 0.0003644450000000049, 0.0003644169999999988, 0.00036441599999999935, 0.0003644019999999998, 0.00036445799999999806, 0.00036445799999999806, 0.0003644450000000049, 0.0003644309999999984, 0.00036444499999999797, 0.00036444499999999797, 0.00036444400000000543, 0.0003644299999999989, 0.0003644299999999989, 0.000364458000000005, 0.00036445899999999753, 0.00036444499999999797, 0.0003644309999999984, 0.0003644450000000049, 0.0003644299999999989, 0.0003644439999999985, 0.0003644439999999985, 0.0003644299999999989, 0.0003644309999999984, 0.0003643889999999997, 0.00036440299999999926, 0.0003644439999999985, 0.00036445799999999806, 0.00036444400000000543, 0.0003644439999999985, 0.0003644439999999985, 0.0003644169999999988, 0.00036441700000000576, 0.0003644309999999984, 0.0003644309999999984, 0.0003644439999999985, 0.00036449999999999677]</msg>
<status status="PASS" starttime="20201029 18:14:44.349" endtime="20201029 18:14:44.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.337" endtime="20201029 18:14:44.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.815" endtime="20201029 18:14:44.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:43.784" endtime="20201029 18:14:44.357"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.363" endtime="20201029 18:14:44.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.359" endtime="20201029 18:14:44.388"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.412" endtime="20201029 18:14:44.444"></status>
</kw>
<msg timestamp="20201029 18:14:44.446" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.408" endtime="20201029 18:14:44.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.452" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.448" endtime="20201029 18:14:44.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.455" endtime="20201029 18:14:44.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.401" endtime="20201029 18:14:44.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.395" endtime="20201029 18:14:44.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.480" endtime="20201029 18:14:44.822"></status>
</kw>
<msg timestamp="20201029 18:14:44.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039444792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.476" endtime="20201029 18:14:44.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039056194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039444792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:44.832" endtime="20201029 18:14:44.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.852" endtime="20201029 18:14:44.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.469" endtime="20201029 18:14:44.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.464" endtime="20201029 18:14:44.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:44.870" level="INFO">${PHILIP_RES} = [{'diff': 0.00038859799999999695}, {'diff': 0.00038859799999999695}, {'diff': 0.0003886249999999966}, {'diff': 0.0003886249999999966}, {'diff': 0.00038861099999999704}, {'diff': 0.00038855499999999876...</msg>
<status status="PASS" starttime="20201029 18:14:44.861" endtime="20201029 18:14:44.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:44.880" level="INFO">${RESULT} = {'diff': [0.00038859799999999695, 0.00038859799999999695, 0.0003886249999999966, 0.0003886249999999966, 0.00038861099999999704, 0.00038855499999999876, 0.000388611000000004, 0.00038851300000000005, 0....</msg>
<status status="PASS" starttime="20201029 18:14:44.872" endtime="20201029 18:14:44.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.891" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:44.888" endtime="20201029 18:14:44.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.898" level="INFO">VALUE: [0.00038859799999999695, 0.00038859799999999695, 0.0003886249999999966, 0.0003886249999999966, 0.00038861099999999704, 0.00038855499999999876, 0.000388611000000004, 0.00038851300000000005, 0.00038855499999999876, 0.00038859699999999747, 0.0003885409999999992, 0.00038859699999999747, 0.00038859699999999747, 0.0003885829999999979, 0.00038859699999999747, 0.00038859699999999747, 0.000388611000000004, 0.0003885970000000044, 0.00038856900000000527, 0.0003885279999999991, 0.0003885970000000044, 0.0003885829999999979, 0.00038859699999999747, 0.00038855599999999824, 0.00038859699999999747, 0.0003885829999999979, 0.0003885279999999991, 0.0003885839999999974, 0.0003885839999999974, 0.00040562499999999974, 0.0003885829999999979, 0.00038859699999999747, 0.0003886530000000027, 0.00038854100000000613, 0.0003885970000000044, 0.0003885970000000044, 0.0003886389999999962, 0.0003885829999999979, 0.00038859699999999747, 0.00038859699999999747, 0.00038859699999999747, 0.0003885829999999979, 0.00038859699999999747, 0.0003885829999999979, 0.00038858300000000484, 0.000388611000000004, 0.0003885840000000043, 0.0003885970000000044, 0.0003886249999999966, 0.00038861099999999704]</msg>
<status status="PASS" starttime="20201029 18:14:44.893" endtime="20201029 18:14:44.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.881" endtime="20201029 18:14:44.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.389" endtime="20201029 18:14:44.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.358" endtime="20201029 18:14:44.904"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:44.910" endtime="20201029 18:14:44.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.906" endtime="20201029 18:14:44.934"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.957" endtime="20201029 18:14:44.989"></status>
</kw>
<msg timestamp="20201029 18:14:44.990" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.953" endtime="20201029 18:14:44.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:44.997" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:44.993" endtime="20201029 18:14:44.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:44.999" endtime="20201029 18:14:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.945" endtime="20201029 18:14:45.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.939" endtime="20201029 18:14:45.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.025" endtime="20201029 18:14:45.399"></status>
</kw>
<msg timestamp="20201029 18:14:45.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037362375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037775875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.021" endtime="20201029 18:14:45.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037362375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037775875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.409" endtime="20201029 18:14:45.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.429" endtime="20201029 18:14:45.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.013" endtime="20201029 18:14:45.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.008" endtime="20201029 18:14:45.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:45.446" level="INFO">${PHILIP_RES} = [{'diff': 0.0004134999999999972}, {'diff': 0.0004135280000000033}, {'diff': 0.0004135139999999968}, {'diff': 0.00041348599999999763}, {'diff': 0.00041352799999999634}, {'diff': 0.0004135280000000033},...</msg>
<status status="PASS" starttime="20201029 18:14:45.438" endtime="20201029 18:14:45.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:45.458" level="INFO">${RESULT} = {'diff': [0.0004134999999999972, 0.0004135280000000033, 0.0004135139999999968, 0.00041348599999999763, 0.00041352799999999634, 0.0004135280000000033, 0.0004135280000000033, 0.0004135280000000033, 0.00...</msg>
<status status="PASS" starttime="20201029 18:14:45.448" endtime="20201029 18:14:45.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.469" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:45.466" endtime="20201029 18:14:45.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.474" level="INFO">VALUE: [0.0004134999999999972, 0.0004135280000000033, 0.0004135139999999968, 0.00041348599999999763, 0.00041352799999999634, 0.0004135280000000033, 0.0004135280000000033, 0.0004135280000000033, 0.00041354200000000285, 0.00041352799999999634, 0.00041348599999999763, 0.00041352799999999634, 0.0004135140000000037, 0.00041350000000000414, 0.0004135129999999973, 0.0004135129999999973, 0.0004134999999999972, 0.0004135140000000037, 0.0004135140000000037, 0.0004135280000000033, 0.0004135139999999968, 0.0004135139999999968, 0.0004135139999999968, 0.0004135280000000033, 0.0004135140000000037, 0.0004135140000000037, 0.0004134999999999972, 0.0004134999999999972, 0.00041352699999999687, 0.0004135280000000033, 0.0004135140000000037, 0.0004134730000000045, 0.0004135690000000025, 0.00041352799999999634, 0.00041352799999999634, 0.00041350000000000414, 0.00041348600000000457, 0.0004135140000000037, 0.0004134579999999985, 0.00041347199999999806, 0.0004135139999999968, 0.0004135280000000033, 0.00041350000000000414, 0.0004135140000000037, 0.0004135139999999968, 0.0004134999999999972, 0.00041345899999999797, 0.0004135140000000037, 0.00041351300000000424, 0.00041351300000000424]</msg>
<status status="PASS" starttime="20201029 18:14:45.471" endtime="20201029 18:14:45.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.459" endtime="20201029 18:14:45.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.935" endtime="20201029 18:14:45.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:44.905" endtime="20201029 18:14:45.480"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:45.486" endtime="20201029 18:14:45.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.482" endtime="20201029 18:14:45.510"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.533" endtime="20201029 18:14:45.567"></status>
</kw>
<msg timestamp="20201029 18:14:45.568" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.529" endtime="20201029 18:14:45.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:45.575" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:45.570" endtime="20201029 18:14:45.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.577" endtime="20201029 18:14:45.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.521" endtime="20201029 18:14:45.583"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.516" endtime="20201029 18:14:45.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:45.602" endtime="20201029 18:14:45.976"></status>
</kw>
<msg timestamp="20201029 18:14:45.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037387069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037826264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.599" endtime="20201029 18:14:45.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037387069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037826264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:45.986" endtime="20201029 18:14:46.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.006" endtime="20201029 18:14:46.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.591" endtime="20201029 18:14:46.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.586" endtime="20201029 18:14:46.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.023" level="INFO">${PHILIP_RES} = [{'diff': 0.0004391949999999964}, {'diff': 0.00043919500000000333}, {'diff': 0.00043922199999999606}, {'diff': 0.00043919400000000386}, {'diff': 0.00043916699999999725}, {'diff': 0.0004391670000000042...</msg>
<status status="PASS" starttime="20201029 18:14:46.015" endtime="20201029 18:14:46.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.035" level="INFO">${RESULT} = {'diff': [0.0004391949999999964, 0.00043919500000000333, 0.00043922199999999606, 0.00043919400000000386, 0.00043916699999999725, 0.0004391670000000042, 0.0004391949999999964, 0.0004391529999999977, 0....</msg>
<status status="PASS" starttime="20201029 18:14:46.025" endtime="20201029 18:14:46.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.046" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.043" endtime="20201029 18:14:46.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.051" level="INFO">VALUE: [0.0004391949999999964, 0.00043919500000000333, 0.00043922199999999606, 0.00043919400000000386, 0.00043916699999999725, 0.0004391670000000042, 0.0004391949999999964, 0.0004391529999999977, 0.0004391939999999969, 0.0004391809999999968, 0.00043919500000000333, 0.00043919500000000333, 0.0004518749999999974, 0.00043916699999999725, 0.0004391800000000043, 0.0004391939999999969, 0.0004391250000000055, 0.00043929099999999444, 0.00043919500000000333, 0.0004391809999999968, 0.00043919400000000386, 0.00043929200000000085, 0.000439222000000003, 0.0004391949999999964, 0.0004392090000000029, 0.0004391809999999968, 0.00043923600000000257, 0.00043922199999999606, 0.0004392090000000029, 0.00043916699999999725, 0.00043919500000000333, 0.00043922199999999606, 0.00043919400000000386, 0.00043916699999999725, 0.0004392090000000029, 0.0004391660000000047, 0.0004392079999999965, 0.00043913900000000505, 0.00043922199999999606, 0.00043919500000000333, 0.0004391949999999964, 0.00043920800000000343, 0.0004392499999999952, 0.00043919400000000386, 0.00043920899999999596, 0.0004392090000000029, 0.0004392079999999965, 0.00043919400000000386, 0.0004392079999999965, 0.00043920800000000343]</msg>
<status status="PASS" starttime="20201029 18:14:46.048" endtime="20201029 18:14:46.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.036" endtime="20201029 18:14:46.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.511" endtime="20201029 18:14:46.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:45.480" endtime="20201029 18:14:46.057"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.063" endtime="20201029 18:14:46.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.059" endtime="20201029 18:14:46.087"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.109" endtime="20201029 18:14:46.145"></status>
</kw>
<msg timestamp="20201029 18:14:46.146" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.106" endtime="20201029 18:14:46.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.153" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.148" endtime="20201029 18:14:46.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.155" endtime="20201029 18:14:46.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.098" endtime="20201029 18:14:46.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.092" endtime="20201029 18:14:46.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.180" endtime="20201029 18:14:46.546"></status>
</kw>
<msg timestamp="20201029 18:14:46.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036899319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037364958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.177" endtime="20201029 18:14:46.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036899319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037364958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.556" endtime="20201029 18:14:46.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.576" endtime="20201029 18:14:46.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.169" endtime="20201029 18:14:46.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.164" endtime="20201029 18:14:46.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:46.598" level="INFO">${PHILIP_RES} = [{'diff': 0.00046563899999999686}, {'diff': 0.0004655700000000054}, {'diff': 0.00046562500000000423}, {'diff': 0.0004656249999999973}, {'diff': 0.0004656109999999977}, {'diff': 0.00046563899999999686}...</msg>
<status status="PASS" starttime="20201029 18:14:46.590" endtime="20201029 18:14:46.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:46.608" level="INFO">${RESULT} = {'diff': [0.00046563899999999686, 0.0004655700000000054, 0.00046562500000000423, 0.0004656249999999973, 0.0004656109999999977, 0.00046563899999999686, 0.0004656390000000038, 0.0004656390000000038, 0.0...</msg>
<status status="PASS" starttime="20201029 18:14:46.600" endtime="20201029 18:14:46.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.619" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:46.617" endtime="20201029 18:14:46.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.625" level="INFO">VALUE: [0.00046563899999999686, 0.0004655700000000054, 0.00046562500000000423, 0.0004656249999999973, 0.0004656109999999977, 0.00046563899999999686, 0.0004656390000000038, 0.0004656390000000038, 0.00046566700000000294, 0.0004656390000000038, 0.00046565299999999643, 0.00046565199999999696, 0.00046565299999999643, 0.0004656390000000038, 0.0004656390000000038, 0.00046563899999999686, 0.00046563899999999686, 0.0004656249999999973, 0.0004656249999999973, 0.0004655970000000051, 0.0004657080000000022, 0.00046565300000000337, 0.00046565299999999643, 0.00046565299999999643, 0.00046559699999999815, 0.0004656520000000039, 0.0004656940000000026, 0.0004656390000000038, 0.00046563899999999686, 0.00046563899999999686, 0.0004656249999999973, 0.00046566700000000294, 0.00046562500000000423, 0.0004656390000000038, 0.00046559699999999815, 0.00046565299999999643, 0.0004656379999999974, 0.0004886809999999978, 0.00046566599999999653, 0.0004656390000000038, 0.00046568000000000304, 0.000465568999999999, 0.00046558399999999805, 0.00046563899999999686, 0.00046565299999999643, 0.00046565199999999696, 0.00046562500000000423, 0.0004656390000000038, 0.00046565300000000337, 0.00046563899999999686]</msg>
<status status="PASS" starttime="20201029 18:14:46.622" endtime="20201029 18:14:46.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.610" endtime="20201029 18:14:46.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.088" endtime="20201029 18:14:46.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.058" endtime="20201029 18:14:46.630"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:46.637" endtime="20201029 18:14:46.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.633" endtime="20201029 18:14:46.661"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.683" endtime="20201029 18:14:46.721"></status>
</kw>
<msg timestamp="20201029 18:14:46.723" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.680" endtime="20201029 18:14:46.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:46.729" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:46.725" endtime="20201029 18:14:46.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.732" endtime="20201029 18:14:46.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.672" endtime="20201029 18:14:46.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.666" endtime="20201029 18:14:46.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:46.758" endtime="20201029 18:14:47.121"></status>
</kw>
<msg timestamp="20201029 18:14:47.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:46.755" endtime="20201029 18:14:47.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038672681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039165542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.131" endtime="20201029 18:14:47.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.150" endtime="20201029 18:14:47.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.747" endtime="20201029 18:14:47.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.741" endtime="20201029 18:14:47.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.167" level="INFO">${PHILIP_RES} = [{'diff': 0.0004928609999999972}, {'diff': 0.0005083050000000006}, {'diff': 0.0004928619999999967}, {'diff': 0.0004928609999999972}, {'diff': 0.0004928750000000037}, {'diff': 0.0004928750000000037}, {...</msg>
<status status="PASS" starttime="20201029 18:14:47.159" endtime="20201029 18:14:47.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.176" level="INFO">${RESULT} = {'diff': [0.0004928609999999972, 0.0005083050000000006, 0.0004928619999999967, 0.0004928609999999972, 0.0004928750000000037, 0.0004928750000000037, 0.0004928609999999972, 0.0004928609999999972, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:14:47.169" endtime="20201029 18:14:47.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.188" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.185" endtime="20201029 18:14:47.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.193" level="INFO">VALUE: [0.0004928609999999972, 0.0005083050000000006, 0.0004928619999999967, 0.0004928609999999972, 0.0004928750000000037, 0.0004928750000000037, 0.0004928609999999972, 0.0004928609999999972, 0.0004928470000000046, 0.0004928469999999976, 0.0004928749999999968, 0.0004928609999999972, 0.0004928610000000042, 0.0004928329999999981, 0.0004928609999999972, 0.0004928609999999972, 0.0004928610000000042, 0.0004928479999999971, 0.0004928329999999981, 0.0004928469999999976, 0.0004928750000000037, 0.0004928619999999967, 0.0004928059999999984, 0.0004928609999999972, 0.000492833000000005, 0.0004928049999999989, 0.0004928619999999967, 0.0004928610000000042, 0.0004928610000000042, 0.0004928469999999976, 0.0004928469999999976, 0.0004928480000000041, 0.0004928470000000046, 0.0004928059999999984, 0.0004928609999999972, 0.0004928470000000046, 0.0004928480000000041, 0.0004928609999999972, 0.0004928469999999976, 0.0004928890000000033, 0.0004928609999999972, 0.0004928609999999972, 0.0004928889999999964, 0.0004928469999999976, 0.0004928750000000037, 0.0004928750000000037, 0.0004928750000000037, 0.0004928470000000046, 0.0004927920000000058, 0.0004928470000000046]</msg>
<status status="PASS" starttime="20201029 18:14:47.190" endtime="20201029 18:14:47.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.178" endtime="20201029 18:14:47.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.662" endtime="20201029 18:14:47.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:46.631" endtime="20201029 18:14:47.207"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.213" endtime="20201029 18:14:47.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.209" endtime="20201029 18:14:47.238"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.262" endtime="20201029 18:14:47.300"></status>
</kw>
<msg timestamp="20201029 18:14:47.301" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.258" endtime="20201029 18:14:47.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.308" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.304" endtime="20201029 18:14:47.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.311" endtime="20201029 18:14:47.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.250" endtime="20201029 18:14:47.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.245" endtime="20201029 18:14:47.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.336" endtime="20201029 18:14:47.699"></status>
</kw>
<msg timestamp="20201029 18:14:47.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038742236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039263056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.332" endtime="20201029 18:14:47.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038742236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039263056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.709" endtime="20201029 18:14:47.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.728" endtime="20201029 18:14:47.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.324" endtime="20201029 18:14:47.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.319" endtime="20201029 18:14:47.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:47.745" level="INFO">${PHILIP_RES} = [{'diff': 0.0005208199999999982}, {'diff': 0.0005208470000000048}, {'diff': 0.0005208329999999983}, {'diff': 0.0005208339999999978}, {'diff': 0.0005208329999999983}, {'diff': 0.0005208330000000053}, {...</msg>
<status status="PASS" starttime="20201029 18:14:47.737" endtime="20201029 18:14:47.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:47.755" level="INFO">${RESULT} = {'diff': [0.0005208199999999982, 0.0005208470000000048, 0.0005208329999999983, 0.0005208339999999978, 0.0005208329999999983, 0.0005208330000000053, 0.0005208329999999983, 0.0005208339999999978, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:47.747" endtime="20201029 18:14:47.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.766" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:47.763" endtime="20201029 18:14:47.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.773" level="INFO">VALUE: [0.0005208199999999982, 0.0005208470000000048, 0.0005208329999999983, 0.0005208339999999978, 0.0005208329999999983, 0.0005208330000000053, 0.0005208329999999983, 0.0005208339999999978, 0.0005208189999999988, 0.0005208470000000048, 0.0005208469999999979, 0.0005208339999999978, 0.0005208470000000048, 0.0005208329999999983, 0.0005208199999999982, 0.0005208479999999974, 0.0005208190000000057, 0.0005208329999999983, 0.0005208329999999983, 0.0005208339999999978, 0.000520764, 0.0005208469999999979, 0.0005208479999999974, 0.0005208470000000048, 0.0005421939999999958, 0.0005208330000000053, 0.0005208339999999978, 0.0005208329999999983, 0.0005208469999999979, 0.0005208200000000052, 0.0005208339999999978, 0.0005208469999999979, 0.0005208329999999983, 0.0005208330000000053, 0.0005208199999999982, 0.0005208329999999983, 0.0005208190000000057, 0.0005208480000000043, 0.0005208469999999979, 0.0005208329999999983, 0.0005208190000000057, 0.0005208619999999969, 0.0005209029999999962, 0.0005208329999999983, 0.0005208329999999983, 0.0005208339999999978, 0.0005208329999999983, 0.0005208609999999975, 0.000520792000000006, 0.0005208340000000117]</msg>
<status status="PASS" starttime="20201029 18:14:47.768" endtime="20201029 18:14:47.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.757" endtime="20201029 18:14:47.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.239" endtime="20201029 18:14:47.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.208" endtime="20201029 18:14:47.779"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:47.785" endtime="20201029 18:14:47.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.781" endtime="20201029 18:14:47.809"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.831" endtime="20201029 18:14:47.871"></status>
</kw>
<msg timestamp="20201029 18:14:47.872" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.828" endtime="20201029 18:14:47.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:47.879" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:47.875" endtime="20201029 18:14:47.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.881" endtime="20201029 18:14:47.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.820" endtime="20201029 18:14:47.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.814" endtime="20201029 18:14:47.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:47.907" endtime="20201029 18:14:48.222"></status>
</kw>
<msg timestamp="20201029 18:14:48.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037087528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037637097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:47.903" endtime="20201029 18:14:48.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037087528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037637097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:48.227" endtime="20201029 18:14:48.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.235" endtime="20201029 18:14:48.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.895" endtime="20201029 18:14:48.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.890" endtime="20201029 18:14:48.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.243" level="INFO">${PHILIP_RES} = [{'diff': 0.0005495689999999998}, {'diff': 0.0005736669999999999}, {'diff': 0.0005495699999999992}, {'diff': 0.0005495689999999998}, {'diff': 0.0005495969999999989}, {'diff': 0.0005496110000000054}, {...</msg>
<status status="PASS" starttime="20201029 18:14:48.239" endtime="20201029 18:14:48.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.254" level="INFO">${RESULT} = {'diff': [0.0005495689999999998, 0.0005736669999999999, 0.0005495699999999992, 0.0005495689999999998, 0.0005495969999999989, 0.0005496110000000054, 0.0005495689999999998, 0.0005496109999999985, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:14:48.244" endtime="20201029 18:14:48.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.265" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.263" endtime="20201029 18:14:48.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.271" level="INFO">VALUE: [0.0005495689999999998, 0.0005736669999999999, 0.0005495699999999992, 0.0005495689999999998, 0.0005495969999999989, 0.0005496110000000054, 0.0005495689999999998, 0.0005496109999999985, 0.0005495699999999992, 0.0005495840000000057, 0.0005495550000000002, 0.0005495550000000002, 0.0005495829999999993, 0.0005495970000000058, 0.0005495699999999992, 0.0005495699999999992, 0.0005495839999999988, 0.0005495279999999936, 0.0005495550000000002, 0.0005495550000000002, 0.0005495829999999993, 0.0005495559999999997, 0.0005495699999999992, 0.0005495829999999993, 0.000549514000000001, 0.0005495410000000006, 0.0005495969999999989, 0.0005495559999999997, 0.0005495559999999997, 0.0005495839999999988, 0.0005495550000000002, 0.0005495689999999998, 0.0005495410000000006, 0.0005495559999999997, 0.0005495839999999988, 0.0005495699999999992, 0.000549514000000001, 0.0005495969999999989, 0.0005495829999999993, 0.0005495689999999998, 0.0005495700000000062, 0.0005495839999999988, 0.0005495969999999989, 0.0005495689999999998, 0.0005495549999999932, 0.0005495829999999924, 0.0005496390000000045, 0.0005495420000000001, 0.0005495839999999919, 0.0005495689999999998]</msg>
<status status="PASS" starttime="20201029 18:14:48.268" endtime="20201029 18:14:48.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.256" endtime="20201029 18:14:48.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.810" endtime="20201029 18:14:48.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:47.780" endtime="20201029 18:14:48.276"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.282" endtime="20201029 18:14:48.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.278" endtime="20201029 18:14:48.306"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.329" endtime="20201029 18:14:48.370"></status>
</kw>
<msg timestamp="20201029 18:14:48.371" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.325" endtime="20201029 18:14:48.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.378" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.374" endtime="20201029 18:14:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.381" endtime="20201029 18:14:48.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.317" endtime="20201029 18:14:48.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.312" endtime="20201029 18:14:48.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.406" endtime="20201029 18:14:48.774"></status>
</kw>
<msg timestamp="20201029 18:14:48.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03709175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:48.402" endtime="20201029 18:14:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03709175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037670819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:48.784" endtime="20201029 18:14:48.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.802" endtime="20201029 18:14:48.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.394" endtime="20201029 18:14:48.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.389" endtime="20201029 18:14:48.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:48.820" level="INFO">${PHILIP_RES} = [{'diff': 0.0005790690000000015}, {'diff': 0.000579070000000001}, {'diff': 0.0005790690000000015}, {'diff': 0.0005790550000000019}, {'diff': 0.0005790830000000011}, {'diff': 0.000579070000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:48.811" endtime="20201029 18:14:48.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:48.834" level="INFO">${RESULT} = {'diff': [0.0005790690000000015, 0.000579070000000001, 0.0005790690000000015, 0.0005790550000000019, 0.0005790830000000011, 0.000579070000000001, 0.0005790830000000011, 0.0005790980000000001, 0.000579...</msg>
<status status="PASS" starttime="20201029 18:14:48.823" endtime="20201029 18:14:48.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.847" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:48.844" endtime="20201029 18:14:48.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.855" level="INFO">VALUE: [0.0005790690000000015, 0.000579070000000001, 0.0005790690000000015, 0.0005790550000000019, 0.0005790830000000011, 0.000579070000000001, 0.0005790830000000011, 0.0005790980000000001, 0.0005790830000000011, 0.000579069999999994, 0.0005790689999999946, 0.0005790270000000028, 0.0005790830000000011, 0.0005790690000000015, 0.000579070000000001, 0.0005790969999999937, 0.0005791529999999989, 0.0005790000000000031, 0.0005791389999999993, 0.0005790970000000006, 0.0005790139999999958, 0.000579054999999995, 0.0005790840000000005, 0.0005790830000000011, 0.0005790830000000011, 0.0005790560000000014, 0.0005790550000000019, 0.0005791390000000063, 0.0005791389999999993, 0.000579070000000001, 0.0005790830000000011, 0.0005790980000000001, 0.0005790830000000011, 0.000579069999999994, 0.0005790690000000015, 0.0005790280000000023, 0.0005790560000000014, 0.0005790830000000011, 0.0005790830000000011, 0.0005790689999999946, 0.0005791249999999998, 0.0005790690000000015, 0.000579070000000001, 0.0005790690000000015, 0.0005790970000000006, 0.0005912500000000015, 0.0005790980000000001, 0.0005790560000000083, 0.0005790839999999936, 0.0005790970000000006]</msg>
<status status="PASS" starttime="20201029 18:14:48.851" endtime="20201029 18:14:48.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.836" endtime="20201029 18:14:48.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.308" endtime="20201029 18:14:48.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.277" endtime="20201029 18:14:48.861"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:48.869" endtime="20201029 18:14:48.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.864" endtime="20201029 18:14:48.894"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.920" endtime="20201029 18:14:48.965"></status>
</kw>
<msg timestamp="20201029 18:14:48.967" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.916" endtime="20201029 18:14:48.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:48.974" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:48.970" endtime="20201029 18:14:48.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:48.977" endtime="20201029 18:14:48.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.907" endtime="20201029 18:14:48.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.901" endtime="20201029 18:14:48.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.007" endtime="20201029 18:14:49.350"></status>
</kw>
<msg timestamp="20201029 18:14:49.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.004" endtime="20201029 18:14:49.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042164583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042773931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.360" endtime="20201029 18:14:49.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.378" endtime="20201029 18:14:49.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.995" endtime="20201029 18:14:49.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.989" endtime="20201029 18:14:49.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.394" level="INFO">${PHILIP_RES} = [{'diff': 0.0006093480000000026}, {'diff': 0.0006092909999999979}, {'diff': 0.0006093470000000031}, {'diff': 0.0006093339999999961}, {'diff': 0.0006093610000000027}, {'diff': 0.0006093329999999966}, {...</msg>
<status status="PASS" starttime="20201029 18:14:49.387" endtime="20201029 18:14:49.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.404" level="INFO">${RESULT} = {'diff': [0.0006093480000000026, 0.0006092909999999979, 0.0006093470000000031, 0.0006093339999999961, 0.0006093610000000027, 0.0006093329999999966, 0.0006093610000000027, 0.0006093610000000027, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:49.396" endtime="20201029 18:14:49.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.414" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.412" endtime="20201029 18:14:49.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.420" level="INFO">VALUE: [0.0006093480000000026, 0.0006092909999999979, 0.0006093470000000031, 0.0006093339999999961, 0.0006093610000000027, 0.0006093329999999966, 0.0006093610000000027, 0.0006093610000000027, 0.0006093469999999962, 0.0006093050000000044, 0.0006093189999999971, 0.000609334000000003, 0.0006093189999999971, 0.0006094030000000014, 0.0006092919999999974, 0.0006093470000000031, 0.0006093609999999958, 0.000609334000000003, 0.0006093469999999962, 0.0006093330000000036, 0.0006093479999999957, 0.0006093329999999966, 0.0006093330000000036, 0.0006093480000000026, 0.000609319000000004, 0.0006093469999999962, 0.0006093480000000026, 0.0006093609999999958, 0.0006093610000000027, 0.0006093479999999957, 0.0006093470000000031, 0.0006093330000000036, 0.000609334000000003, 0.0006093330000000036, 0.0006093480000000095, 0.0006093469999999962, 0.0006093469999999962, 0.000609334000000003, 0.0006093749999999953, 0.0006258469999999988, 0.000609334000000003, 0.0006094029999999945, 0.0006093469999999962, 0.0006093620000000022, 0.0006093609999999888, 0.0006093469999999962, 0.0006093479999999957, 0.0006093330000000036, 0.0006093890000000018, 0.000609334000000003]</msg>
<status status="PASS" starttime="20201029 18:14:49.417" endtime="20201029 18:14:49.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.405" endtime="20201029 18:14:49.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.896" endtime="20201029 18:14:49.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:48.863" endtime="20201029 18:14:49.425"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.430" endtime="20201029 18:14:49.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.427" endtime="20201029 18:14:49.454"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.475" endtime="20201029 18:14:49.521"></status>
</kw>
<msg timestamp="20201029 18:14:49.522" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.472" endtime="20201029 18:14:49.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.528" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:49.524" endtime="20201029 18:14:49.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.530" endtime="20201029 18:14:49.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.464" endtime="20201029 18:14:49.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.459" endtime="20201029 18:14:49.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.555" endtime="20201029 18:14:49.897"></status>
</kw>
<msg timestamp="20201029 18:14:49.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036626528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037266931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.551" endtime="20201029 18:14:49.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036626528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037266931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:49.906" endtime="20201029 18:14:49.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:49.925" endtime="20201029 18:14:49.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.544" endtime="20201029 18:14:49.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.539" endtime="20201029 18:14:49.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:49.941" level="INFO">${PHILIP_RES} = [{'diff': 0.0006404030000000047}, {'diff': 0.000640360999999999}, {'diff': 0.0006403190000000003}, {'diff': 0.000640360999999999}, {'diff': 0.0006404019999999983}, {'diff': 0.0006403469999999994}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:49.933" endtime="20201029 18:14:49.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:49.950" level="INFO">${RESULT} = {'diff': [0.0006404030000000047, 0.000640360999999999, 0.0006403190000000003, 0.000640360999999999, 0.0006404019999999983, 0.0006403469999999994, 0.0006403329999999999, 0.0006403749999999986, 0.000640...</msg>
<status status="PASS" starttime="20201029 18:14:49.943" endtime="20201029 18:14:49.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.961" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:49.958" endtime="20201029 18:14:49.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:49.966" level="INFO">VALUE: [0.0006404030000000047, 0.000640360999999999, 0.0006403190000000003, 0.000640360999999999, 0.0006404019999999983, 0.0006403469999999994, 0.0006403329999999999, 0.0006403749999999986, 0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.000640360999999999, 0.0006403620000000054, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999986, 0.0006403619999999985, 0.000640360999999999, 0.000640361000000006, 0.0006403749999999986, 0.0006403889999999982, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999986, 0.0006403329999999999, 0.0006403750000000055, 0.0006404030000000047, 0.0006403619999999985, 0.0006403469999999994, 0.0006403749999999986, 0.0006403889999999982, 0.0006403880000000056, 0.000640360999999999, 0.0006403749999999986, 0.0006404029999999977, 0.0006403749999999986, 0.0006403749999999986, 0.0006403749999999916, 0.0006402920000000006, 0.0006403609999999921, 0.0006552640000000026, 0.0006403329999999929, 0.0006403749999999986, 0.0006403890000000051, 0.0006403890000000051, 0.0006403749999999986, 0.000640361000000006, 0.0006403469999999994, 0.0006403890000000051, 0.0006403890000000051]</msg>
<status status="PASS" starttime="20201029 18:14:49.963" endtime="20201029 18:14:49.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.952" endtime="20201029 18:14:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.455" endtime="20201029 18:14:49.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.425" endtime="20201029 18:14:49.971"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:49.977" endtime="20201029 18:14:49.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.973" endtime="20201029 18:14:50.001"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.025" endtime="20201029 18:14:50.071"></status>
</kw>
<msg timestamp="20201029 18:14:50.072" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.021" endtime="20201029 18:14:50.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.078" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.074" endtime="20201029 18:14:50.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.081" endtime="20201029 18:14:50.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.014" endtime="20201029 18:14:50.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.008" endtime="20201029 18:14:50.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.105" endtime="20201029 18:14:50.445"></status>
</kw>
<msg timestamp="20201029 18:14:50.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038692222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039364389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.101" endtime="20201029 18:14:50.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038692222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039364389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.454" endtime="20201029 18:14:50.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.472" endtime="20201029 18:14:50.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.094" endtime="20201029 18:14:50.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.089" endtime="20201029 18:14:50.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:50.489" level="INFO">${PHILIP_RES} = [{'diff': 0.0006721670000000013}, {'diff': 0.0006721530000000017}, {'diff': 0.0006721659999999949}, {'diff': 0.0006721669999999944}, {'diff': 0.0006913610000000014}, {'diff': 0.0006721670000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:14:50.481" endtime="20201029 18:14:50.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:50.498" level="INFO">${RESULT} = {'diff': [0.0006721670000000013, 0.0006721530000000017, 0.0006721659999999949, 0.0006721669999999944, 0.0006913610000000014, 0.0006721670000000013, 0.0006721800000000014, 0.0006721800000000014, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:14:50.491" endtime="20201029 18:14:50.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.509" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:50.506" endtime="20201029 18:14:50.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.516" level="INFO">VALUE: [0.0006721670000000013, 0.0006721530000000017, 0.0006721659999999949, 0.0006721669999999944, 0.0006913610000000014, 0.0006721670000000013, 0.0006721800000000014, 0.0006721800000000014, 0.0006721810000000009, 0.0006721810000000009, 0.0006721660000000018, 0.000672209, 0.0006721529999999948, 0.0006721799999999944, 0.0006721529999999948, 0.0006721670000000013, 0.000672194000000001, 0.0006721520000000022, 0.000672111000000003, 0.0006721530000000017, 0.0006721380000000027, 0.0006721670000000013, 0.0006721669999999944, 0.0006721529999999948, 0.000672194000000001, 0.0006721670000000013, 0.0006721810000000009, 0.0006721660000000018, 0.000672209, 0.0006721950000000004, 0.0006721520000000022, 0.0006721799999999944, 0.0006721949999999935, 0.0006721530000000017, 0.0006721660000000018, 0.0006721950000000004, 0.0006721529999999948, 0.0006721660000000018, 0.0006721670000000013, 0.0006721249999999956, 0.0006721809999999939, 0.0006721660000000018, 0.0006721809999999939, 0.0006721670000000013, 0.0006721660000000018, 0.0006722229999999996, 0.0006721670000000013, 0.0006721529999999948, 0.0006721799999999944, 0.0006721670000000013]</msg>
<status status="PASS" starttime="20201029 18:14:50.511" endtime="20201029 18:14:50.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.500" endtime="20201029 18:14:50.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.002" endtime="20201029 18:14:50.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:49.972" endtime="20201029 18:14:50.521"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:50.527" endtime="20201029 18:14:50.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.523" endtime="20201029 18:14:50.550"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.571" endtime="20201029 18:14:50.620"></status>
</kw>
<msg timestamp="20201029 18:14:50.621" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.568" endtime="20201029 18:14:50.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:50.627" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:50.623" endtime="20201029 18:14:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.630" endtime="20201029 18:14:50.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.561" endtime="20201029 18:14:50.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.555" endtime="20201029 18:14:50.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:50.653" endtime="20201029 18:14:50.995"></status>
</kw>
<msg timestamp="20201029 18:14:51.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035354319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:50.650" endtime="20201029 18:14:51.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035354319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036059028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.005" endtime="20201029 18:14:51.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.024" endtime="20201029 18:14:51.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.643" endtime="20201029 18:14:51.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.638" endtime="20201029 18:14:51.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.040" level="INFO">${PHILIP_RES} = [{'diff': 0.0007047089999999978}, {'diff': 0.0007046939999999988}, {'diff': 0.0007047220000000048}, {'diff': 0.000704749999999997}, {'diff': 0.0007047359999999975}, {'diff': 0.000704750000000004}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:51.033" endtime="20201029 18:14:51.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.052" level="INFO">${RESULT} = {'diff': [0.0007047089999999978, 0.0007046939999999988, 0.0007047220000000048, 0.000704749999999997, 0.0007047359999999975, 0.000704750000000004, 0.0007047360000000044, 0.0007047219999999979, 0.000704...</msg>
<status status="PASS" starttime="20201029 18:14:51.043" endtime="20201029 18:14:51.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.063" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.060" endtime="20201029 18:14:51.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.069" level="INFO">VALUE: [0.0007047089999999978, 0.0007046939999999988, 0.0007047220000000048, 0.000704749999999997, 0.0007047359999999975, 0.000704750000000004, 0.0007047360000000044, 0.0007047219999999979, 0.0007047359999999975, 0.0007047360000000044, 0.0007046799999999992, 0.0007047359999999975, 0.0007047370000000039, 0.0007047779999999962, 0.0007047359999999975, 0.0007047360000000044, 0.0007047359999999975, 0.0007047219999999979, 0.000731500000000003, 0.0007047219999999979, 0.000704750000000004, 0.0007046799999999992, 0.0007047219999999979, 0.000704736999999997, 0.0007047780000000031, 0.0007047359999999975, 0.000704749999999997, 0.0007047220000000048, 0.0007047079999999983, 0.0007047219999999979, 0.0007047229999999974, 0.0007047360000000044, 0.0007046669999999991, 0.0007047359999999975, 0.0007047220000000048, 0.0007047639999999966, 0.0007047220000000048, 0.0007047639999999966, 0.0007047220000000048, 0.0007047090000000117, 0.0007047359999999975, 0.0007047639999999966, 0.0007047360000000114, 0.0007047359999999975, 0.0007047089999999978, 0.0007047079999999983, 0.0007047230000000043, 0.000704721999999991, 0.0007047359999999975, 0.0007047360000000114]</msg>
<status status="PASS" starttime="20201029 18:14:51.065" endtime="20201029 18:14:51.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.054" endtime="20201029 18:14:51.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.551" endtime="20201029 18:14:51.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:50.522" endtime="20201029 18:14:51.074"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.080" endtime="20201029 18:14:51.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.076" endtime="20201029 18:14:51.103"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.125" endtime="20201029 18:14:51.174"></status>
</kw>
<msg timestamp="20201029 18:14:51.175" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.121" endtime="20201029 18:14:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.182" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.178" endtime="20201029 18:14:51.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.184" endtime="20201029 18:14:51.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.114" endtime="20201029 18:14:51.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.109" endtime="20201029 18:14:51.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.208" endtime="20201029 18:14:51.549"></status>
</kw>
<msg timestamp="20201029 18:14:51.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035265111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.204" endtime="20201029 18:14:51.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035265111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.558" endtime="20201029 18:14:51.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.577" endtime="20201029 18:14:51.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.197" endtime="20201029 18:14:51.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.192" endtime="20201029 18:14:51.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:51.593" level="INFO">${PHILIP_RES} = [{'diff': 0.0007380560000000008}, {'diff': 0.0007380420000000013}, {'diff': 0.0007380970000000001}, {'diff': 0.0007380420000000013}, {'diff': 0.0007380560000000008}, {'diff': 0.0007380830000000005}, {...</msg>
<status status="PASS" starttime="20201029 18:14:51.585" endtime="20201029 18:14:51.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:51.604" level="INFO">${RESULT} = {'diff': [0.0007380560000000008, 0.0007380420000000013, 0.0007380970000000001, 0.0007380420000000013, 0.0007380560000000008, 0.0007380830000000005, 0.0007380970000000001, 0.0007380700000000004, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:14:51.595" endtime="20201029 18:14:51.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.615" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:51.612" endtime="20201029 18:14:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.620" level="INFO">VALUE: [0.0007380560000000008, 0.0007380420000000013, 0.0007380970000000001, 0.0007380420000000013, 0.0007380560000000008, 0.0007380830000000005, 0.0007380970000000001, 0.0007380700000000004, 0.0007380280000000017, 0.0007380420000000013, 0.0007380560000000008, 0.0007380550000000013, 0.0007380550000000013, 0.0007380420000000013, 0.0007380690000000009, 0.0007380549999999944, 0.0007380690000000009, 0.0007379999999999956, 0.0007380410000000018, 0.0007380560000000008, 0.0007380420000000013, 0.0007380270000000022, 0.0007664999999999964, 0.0007380970000000001, 0.0007380700000000004, 0.0007380550000000013, 0.0007380410000000018, 0.0007380420000000013, 0.0007380560000000008, 0.0007380549999999944, 0.0007380560000000008, 0.000738084, 0.0007380550000000013, 0.0007380420000000013, 0.0007380699999999935, 0.0007380550000000013, 0.0007380419999999943, 0.0007380699999999935, 0.0007380410000000087, 0.0007380419999999943, 0.0007380420000000082, 0.0007380559999999869, 0.0007380550000000013, 0.000738097000000007, 0.0007381249999999923, 0.000738068999999994, 0.0007380280000000017, 0.000738084, 0.0007379720000000034, 0.0007380280000000017]</msg>
<status status="PASS" starttime="20201029 18:14:51.617" endtime="20201029 18:14:51.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.606" endtime="20201029 18:14:51.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.105" endtime="20201029 18:14:51.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.075" endtime="20201029 18:14:51.625"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:51.631" endtime="20201029 18:14:51.653"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.627" endtime="20201029 18:14:51.654"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.676" endtime="20201029 18:14:51.727"></status>
</kw>
<msg timestamp="20201029 18:14:51.728" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.672" endtime="20201029 18:14:51.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:51.735" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:51.730" endtime="20201029 18:14:51.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.737" endtime="20201029 18:14:51.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.665" endtime="20201029 18:14:51.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.660" endtime="20201029 18:14:51.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:51.761" endtime="20201029 18:14:52.106"></status>
</kw>
<msg timestamp="20201029 18:14:52.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035952972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:51.757" endtime="20201029 18:14:52.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035180833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035952972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.115" endtime="20201029 18:14:52.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.134" endtime="20201029 18:14:52.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.750" endtime="20201029 18:14:52.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.745" endtime="20201029 18:14:52.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.150" level="INFO">${PHILIP_RES} = [{'diff': 0.0007721389999999981}, {'diff': 0.000772139000000005}, {'diff': 0.0007721669999999972}, {'diff': 0.0007721670000000042}, {'diff': 0.0007721810000000037}, {'diff': 0.0007721389999999981}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:52.142" endtime="20201029 18:14:52.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.159" level="INFO">${RESULT} = {'diff': [0.0007721389999999981, 0.000772139000000005, 0.0007721669999999972, 0.0007721670000000042, 0.0007721810000000037, 0.0007721389999999981, 0.0007721389999999981, 0.0007721389999999981, 0.00077...</msg>
<status status="PASS" starttime="20201029 18:14:52.152" endtime="20201029 18:14:52.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.170" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.168" endtime="20201029 18:14:52.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.175" level="INFO">VALUE: [0.0007721389999999981, 0.000772139000000005, 0.0007721669999999972, 0.0007721670000000042, 0.0007721810000000037, 0.0007721389999999981, 0.0007721389999999981, 0.0007721389999999981, 0.0007721940000000038, 0.0007721529999999976, 0.000772139000000005, 0.0007721249999999985, 0.000772139000000005, 0.0007721389999999981, 0.0007721249999999985, 0.0007721249999999985, 0.0007721379999999986, 0.0007721249999999985, 0.0007721389999999981, 0.0007721389999999981, 0.0007720690000000002, 0.000772139000000005, 0.0007721389999999981, 0.000772139000000005, 0.0007721950000000033, 0.000772221999999996, 0.0007721389999999981, 0.0007721669999999972, 0.0007721389999999981, 0.000792971999999996, 0.0007721389999999981, 0.0007721249999999985, 0.0007721389999999981, 0.0007721810000000037, 0.0007721249999999985, 0.000772139000000005, 0.0007721249999999985, 0.0007721529999999976, 0.0007721389999999911, 0.0007721519999999982, 0.0007722079999999965, 0.000772139000000005, 0.0007721379999999917, 0.0007721380000000055, 0.0007721249999999985, 0.0007721110000000059, 0.000772139000000005, 0.000772139000000005, 0.0007721670000000042, 0.0007721249999999985]</msg>
<status status="PASS" starttime="20201029 18:14:52.172" endtime="20201029 18:14:52.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.161" endtime="20201029 18:14:52.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.656" endtime="20201029 18:14:52.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:51.626" endtime="20201029 18:14:52.180"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.186" endtime="20201029 18:14:52.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.183" endtime="20201029 18:14:52.210"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.231" endtime="20201029 18:14:52.286"></status>
</kw>
<msg timestamp="20201029 18:14:52.287" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.228" endtime="20201029 18:14:52.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.293" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.289" endtime="20201029 18:14:52.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.296" endtime="20201029 18:14:52.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.220" endtime="20201029 18:14:52.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.215" endtime="20201029 18:14:52.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.307" endtime="20201029 18:14:52.592"></status>
</kw>
<msg timestamp="20201029 18:14:52.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036891389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037698361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.306" endtime="20201029 18:14:52.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036891389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037698361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.596" endtime="20201029 18:14:52.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.612" endtime="20201029 18:14:52.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.302" endtime="20201029 18:14:52.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.300" endtime="20201029 18:14:52.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:52.628" level="INFO">${PHILIP_RES} = [{'diff': 0.000806972000000003}, {'diff': 0.0008069860000000026}, {'diff': 0.0008069719999999961}, {'diff': 0.0008070000000000022}, {'diff': 0.0008069999999999952}, {'diff': 0.0008069860000000026}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:52.621" endtime="20201029 18:14:52.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:52.637" level="INFO">${RESULT} = {'diff': [0.000806972000000003, 0.0008069860000000026, 0.0008069719999999961, 0.0008070000000000022, 0.0008069999999999952, 0.0008069860000000026, 0.0008070000000000022, 0.0008070139999999948, 0.00080...</msg>
<status status="PASS" starttime="20201029 18:14:52.630" endtime="20201029 18:14:52.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.648" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:52.646" endtime="20201029 18:14:52.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.654" level="INFO">VALUE: [0.000806972000000003, 0.0008069860000000026, 0.0008069719999999961, 0.0008070000000000022, 0.0008069999999999952, 0.0008069860000000026, 0.0008070000000000022, 0.0008070139999999948, 0.0008070280000000013, 0.0008069999999999952, 0.0008070000000000022, 0.0008070140000000017, 0.0008069859999999957, 0.0008069860000000026, 0.0008069719999999961, 0.000806972000000003, 0.0008070000000000022, 0.0008069860000000026, 0.0008069870000000021, 0.0008069999999999952, 0.0008070000000000022, 0.0008069719999999961, 0.0008069870000000021, 0.0008070000000000022, 0.0008069999999999952, 0.0008069450000000034, 0.0008070139999999948, 0.0008069860000000026, 0.0008261810000000022, 0.0008070560000000004, 0.0008069859999999957, 0.0008070000000000022, 0.0008070409999999945, 0.000806972000000003, 0.000807055000000001, 0.0008070280000000013, 0.0008069860000000095, 0.0008069999999999883, 0.0008069590000000099, 0.0008069300000000112, 0.0008069869999999951, 0.0008070000000000022, 0.0008070419999999939, 0.0008069859999999957, 0.0008070140000000087, 0.0008069859999999957, 0.0008070000000000022, 0.0008070280000000013, 0.0008070000000000022, 0.0008070270000000018]</msg>
<status status="PASS" starttime="20201029 18:14:52.650" endtime="20201029 18:14:52.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.639" endtime="20201029 18:14:52.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.211" endtime="20201029 18:14:52.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.181" endtime="20201029 18:14:52.659"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:52.665" endtime="20201029 18:14:52.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.661" endtime="20201029 18:14:52.688"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.711" endtime="20201029 18:14:52.766"></status>
</kw>
<msg timestamp="20201029 18:14:52.768" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.708" endtime="20201029 18:14:52.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:52.774" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:52.770" endtime="20201029 18:14:52.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.776" endtime="20201029 18:14:52.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.700" endtime="20201029 18:14:52.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.695" endtime="20201029 18:14:52.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:52.800" endtime="20201029 18:14:53.135"></status>
</kw>
<msg timestamp="20201029 18:14:53.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037039347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:52.796" endtime="20201029 18:14:53.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037039347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.145" endtime="20201029 18:14:53.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.163" endtime="20201029 18:14:53.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.789" endtime="20201029 18:14:53.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.784" endtime="20201029 18:14:53.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.179" level="INFO">${PHILIP_RES} = [{'diff': 0.0008426389999999992}, {'diff': 0.0008425410000000022}, {'diff': 0.0008426249999999996}, {'diff': 0.0008425830000000009}, {'diff': 0.0008426110000000001}, {'diff': 0.0008425970000000005}, {...</msg>
<status status="PASS" starttime="20201029 18:14:53.171" endtime="20201029 18:14:53.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.188" level="INFO">${RESULT} = {'diff': [0.0008426389999999992, 0.0008425410000000022, 0.0008426249999999996, 0.0008425830000000009, 0.0008426110000000001, 0.0008425970000000005, 0.0008426110000000001, 0.0008425139999999956, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:14:53.181" endtime="20201029 18:14:53.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.198" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.196" endtime="20201029 18:14:53.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.205" level="INFO">VALUE: [0.0008426389999999992, 0.0008425410000000022, 0.0008426249999999996, 0.0008425830000000009, 0.0008426110000000001, 0.0008425970000000005, 0.0008426110000000001, 0.0008425139999999956, 0.0008425970000000005, 0.0008425840000000004, 0.000842598, 0.0008425830000000009, 0.0008426110000000001, 0.0008426110000000001, 0.000842582999999994, 0.0008425970000000005, 0.0008425420000000017, 0.0008425970000000005, 0.0008425560000000012, 0.000842598, 0.0008426119999999995, 0.0008425969999999935, 0.0008425970000000005, 0.0008426249999999996, 0.0008425420000000017, 0.0008426519999999993, 0.0008426110000000001, 0.0008425840000000004, 0.000842597999999993, 0.000842598, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.000842611000000007, 0.000842611000000007, 0.0008425970000000005, 0.000842598, 0.000842598, 0.0008425970000000005, 0.000842611000000007, 0.000867764000000007, 0.0008426109999999931, 0.0008425839999999934, 0.0008425970000000005, 0.0008425830000000079, 0.0008425970000000005, 0.0008425970000000005, 0.0008425970000000005, 0.0008426109999999931]</msg>
<status status="PASS" starttime="20201029 18:14:53.200" endtime="20201029 18:14:53.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.189" endtime="20201029 18:14:53.208"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.689" endtime="20201029 18:14:53.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:52.660" endtime="20201029 18:14:53.210"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.216" endtime="20201029 18:14:53.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.212" endtime="20201029 18:14:53.239"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.264" endtime="20201029 18:14:53.321"></status>
</kw>
<msg timestamp="20201029 18:14:53.322" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.260" endtime="20201029 18:14:53.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.329" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.325" endtime="20201029 18:14:53.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.331" endtime="20201029 18:14:53.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.251" endtime="20201029 18:14:53.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.245" endtime="20201029 18:14:53.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.354" endtime="20201029 18:14:53.691"></status>
</kw>
<msg timestamp="20201029 18:14:53.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039178014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:53.351" endtime="20201029 18:14:53.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039178014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040057, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:14:53.700" endtime="20201029 18:14:53.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.718" endtime="20201029 18:14:53.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.344" endtime="20201029 18:14:53.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.339" endtime="20201029 18:14:53.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:53.734" level="INFO">${PHILIP_RES} = [{'diff': 0.0008789860000000052}, {'diff': 0.0008789719999999987}, {'diff': 0.0008789860000000052}, {'diff': 0.0008789589999999986}, {'diff': 0.0008790140000000043}, {'diff': 0.0008789859999999983}, {...</msg>
<status status="PASS" starttime="20201029 18:14:53.727" endtime="20201029 18:14:53.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:53.749" level="INFO">${RESULT} = {'diff': [0.0008789860000000052, 0.0008789719999999987, 0.0008789860000000052, 0.0008789589999999986, 0.0008790140000000043, 0.0008789859999999983, 0.0008789860000000052, 0.0008789859999999983, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:14:53.736" endtime="20201029 18:14:53.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.759" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:53.757" endtime="20201029 18:14:53.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.765" level="INFO">VALUE: [0.0008789860000000052, 0.0008789719999999987, 0.0008789860000000052, 0.0008789589999999986, 0.0008790140000000043, 0.0008789859999999983, 0.0008789860000000052, 0.0008789859999999983, 0.0009100839999999985, 0.0008789729999999982, 0.0008789579999999991, 0.0008790139999999974, 0.0008789579999999991, 0.0008789999999999978, 0.0008789729999999982, 0.0008789859999999983, 0.0008789719999999987, 0.0008789719999999987, 0.0008789719999999987, 0.0008790139999999974, 0.0008789719999999987, 0.0008789859999999983, 0.0008789859999999983, 0.0008789859999999983, 0.0008789869999999977, 0.0008789859999999983, 0.0008789579999999991, 0.0008790419999999965, 0.0008789859999999983, 0.0008789030000000003, 0.0008789859999999983, 0.0008789999999999909, 0.0008789579999999991, 0.0008789720000000056, 0.0008789859999999983, 0.000878916999999993, 0.0008789579999999991, 0.0008790139999999974, 0.0008789859999999983, 0.0008789999999999909, 0.0008789860000000121, 0.0008790139999999974, 0.0008789860000000121, 0.0008789719999999918, 0.0008922500000000111, 0.0008789859999999983, 0.0008789730000000051, 0.0008789859999999983, 0.0008790280000000039, 0.00087893]</msg>
<status status="PASS" starttime="20201029 18:14:53.762" endtime="20201029 18:14:53.766"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.751" endtime="20201029 18:14:53.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.240" endtime="20201029 18:14:53.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.211" endtime="20201029 18:14:53.770"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:53.775" endtime="20201029 18:14:53.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.772" endtime="20201029 18:14:53.799"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.820" endtime="20201029 18:14:53.878"></status>
</kw>
<msg timestamp="20201029 18:14:53.879" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.817" endtime="20201029 18:14:53.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:53.885" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:53.881" endtime="20201029 18:14:53.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.887" endtime="20201029 18:14:53.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.809" endtime="20201029 18:14:53.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.804" endtime="20201029 18:14:53.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:53.911" endtime="20201029 18:14:54.248"></status>
</kw>
<msg timestamp="20201029 18:14:54.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034765361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035681486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:53.907" endtime="20201029 18:14:54.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034765361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035681486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:54.257" endtime="20201029 18:14:54.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.275" endtime="20201029 18:14:54.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.900" endtime="20201029 18:14:54.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.895" endtime="20201029 18:14:54.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.291" level="INFO">${PHILIP_RES} = [{'diff': 0.0009161249999999968}, {'diff': 0.0009161380000000038}, {'diff': 0.0009161389999999964}, {'diff': 0.0009161249999999968}, {'diff': 0.0009161250000000037}, {'diff': 0.0009161529999999959}, {...</msg>
<status status="PASS" starttime="20201029 18:14:54.284" endtime="20201029 18:14:54.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.302" level="INFO">${RESULT} = {'diff': [0.0009161249999999968, 0.0009161380000000038, 0.0009161389999999964, 0.0009161249999999968, 0.0009161250000000037, 0.0009161529999999959, 0.0009161250000000037, 0.0009161109999999972, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:14:54.293" endtime="20201029 18:14:54.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.313" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.310" endtime="20201029 18:14:54.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.318" level="INFO">VALUE: [0.0009161249999999968, 0.0009161380000000038, 0.0009161389999999964, 0.0009161249999999968, 0.0009161250000000037, 0.0009161529999999959, 0.0009161250000000037, 0.0009161109999999972, 0.0009160969999999977, 0.000916166000000003, 0.0009434860000000003, 0.0009161109999999972, 0.0009161249999999968, 0.0009160970000000046, 0.0009161389999999964, 0.0009161390000000033, 0.0009161530000000029, 0.0009161249999999968, 0.0009161250000000037, 0.0009161119999999967, 0.0009161249999999968, 0.0009161250000000037, 0.0009161389999999964, 0.0009161110000000042, 0.0009161809999999951, 0.0009161109999999972, 0.0009161110000000042, 0.0009161249999999968, 0.0009161669999999955, 0.0009161250000000037, 0.0009161250000000037, 0.0009161249999999899, 0.0009161389999999964, 0.0009160970000000046, 0.0009161389999999964, 0.0009161250000000037, 0.0009161250000000037, 0.0009161389999999964, 0.0009161109999999972, 0.0009161669999999955, 0.0009161670000000094, 0.000916152999999989, 0.0009161390000000103, 0.0009161250000000037, 0.0009391390000000055, 0.0009161109999999972, 0.0009161660000000099, 0.0009161389999999964, 0.0009161249999999899, 0.0009161250000000037]</msg>
<status status="PASS" starttime="20201029 18:14:54.315" endtime="20201029 18:14:54.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.304" endtime="20201029 18:14:54.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.800" endtime="20201029 18:14:54.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:53.770" endtime="20201029 18:14:54.323"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.329" endtime="20201029 18:14:54.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.325" endtime="20201029 18:14:54.352"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.373" endtime="20201029 18:14:54.434"></status>
</kw>
<msg timestamp="20201029 18:14:54.435" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.370" endtime="20201029 18:14:54.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.441" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.437" endtime="20201029 18:14:54.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.443" endtime="20201029 18:14:54.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.362" endtime="20201029 18:14:54.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.357" endtime="20201029 18:14:54.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.467" endtime="20201029 18:14:54.806"></status>
</kw>
<msg timestamp="20201029 18:14:54.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034737278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03569125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:54.464" endtime="20201029 18:14:54.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034737278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03569125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:14:54.816" endtime="20201029 18:14:54.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.834" endtime="20201029 18:14:54.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.456" endtime="20201029 18:14:54.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.451" endtime="20201029 18:14:54.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:54.850" level="INFO">${PHILIP_RES} = [{'diff': 0.0009539719999999974}, {'diff': 0.0009539579999999978}, {'diff': 0.0009540279999999957}, {'diff': 0.0009539440000000052}, {'diff': 0.0009540420000000022}, {'diff': 0.0009540700000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:14:54.842" endtime="20201029 18:14:54.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:54.859" level="INFO">${RESULT} = {'diff': [0.0009539719999999974, 0.0009539579999999978, 0.0009540279999999957, 0.0009539440000000052, 0.0009540420000000022, 0.0009540700000000013, 0.0009540559999999948, 0.0009540279999999957, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:14:54.852" endtime="20201029 18:14:54.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.869" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:54.867" endtime="20201029 18:14:54.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:54.875" level="INFO">VALUE: [0.0009539719999999974, 0.0009539579999999978, 0.0009540279999999957, 0.0009539440000000052, 0.0009540420000000022, 0.0009540700000000013, 0.0009540559999999948, 0.0009540279999999957, 0.0009540280000000026, 0.0009540700000000013, 0.0009540280000000026, 0.0009540279999999957, 0.0009540269999999962, 0.0009540560000000017, 0.0009689160000000002, 0.0009540279999999957, 0.0009540550000000023, 0.0009540420000000022, 0.0009540280000000026, 0.0009540419999999952, 0.0009540279999999957, 0.000954014000000003, 0.0009540420000000022, 0.0009540280000000026, 0.0009540839999999939, 0.0009540550000000023, 0.0009540420000000022, 0.0009540410000000027, 0.000954014000000003, 0.0009540420000000022, 0.0009540549999999953, 0.0009539719999999974, 0.0009540279999999957, 0.000954014000000003, 0.0009540420000000022, 0.0009540560000000087, 0.000954014000000003, 0.0009540279999999957, 0.0009540279999999957, 0.0009540420000000022, 0.0009539579999999909, 0.0009540139999999891, 0.0009540410000000027, 0.0009540420000000022, 0.0009540559999999948, 0.0009540420000000022, 0.0009802920000000076, 0.0009540549999999953, 0.0009540279999999957, 0.0009540269999999962]</msg>
<status status="PASS" starttime="20201029 18:14:54.872" endtime="20201029 18:14:54.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.860" endtime="20201029 18:14:54.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.353" endtime="20201029 18:14:54.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.324" endtime="20201029 18:14:54.879"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:54.885" endtime="20201029 18:14:54.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.881" endtime="20201029 18:14:54.909"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:54.930" endtime="20201029 18:14:54.994"></status>
</kw>
<msg timestamp="20201029 18:14:54.995" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.926" endtime="20201029 18:14:54.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.001" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:54.997" endtime="20201029 18:14:55.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.004" endtime="20201029 18:14:55.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.919" endtime="20201029 18:14:55.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.914" endtime="20201029 18:14:55.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.027" endtime="20201029 18:14:55.365"></status>
</kw>
<msg timestamp="20201029 18:14:55.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036291986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037284694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.024" endtime="20201029 18:14:55.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036291986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037284694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.374" endtime="20201029 18:14:55.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.392" endtime="20201029 18:14:55.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.017" endtime="20201029 18:14:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.012" endtime="20201029 18:14:55.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.408" level="INFO">${PHILIP_RES} = [{'diff': 0.0009927080000000019}, {'diff': 0.0009927090000000013}, {'diff': 0.0009927220000000014}, {'diff': 0.0009926950000000018}, {'diff': 0.0009927080000000019}, {'diff': 0.0009927090000000013}, {...</msg>
<status status="PASS" starttime="20201029 18:14:55.401" endtime="20201029 18:14:55.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.418" level="INFO">${RESULT} = {'diff': [0.0009927080000000019, 0.0009927090000000013, 0.0009927220000000014, 0.0009926950000000018, 0.0009927080000000019, 0.0009927090000000013, 0.0009927220000000014, 0.0009926940000000023, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:14:55.411" endtime="20201029 18:14:55.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.428" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.426" endtime="20201029 18:14:55.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.433" level="INFO">VALUE: [0.0009927080000000019, 0.0009927090000000013, 0.0009927220000000014, 0.0009926950000000018, 0.0009927080000000019, 0.0009927090000000013, 0.0009927220000000014, 0.0009926940000000023, 0.0009926950000000018, 0.0009926940000000023, 0.000992736000000001, 0.0009927080000000019, 0.0010184310000000002, 0.0009926940000000023, 0.0009927090000000013, 0.0009926940000000023, 0.0009927090000000013, 0.0009926940000000023, 0.0009926940000000023, 0.0009927090000000013, 0.0009927080000000019, 0.0009927090000000013, 0.0009927080000000019, 0.0009927080000000019, 0.0009926950000000018, 0.000992707999999995, 0.0009927089999999944, 0.0009926389999999896, 0.0009926810000000091, 0.0009927220000000014, 0.0009926940000000023, 0.0009927080000000088, 0.0009926109999999905, 0.0009926950000000018, 0.0009927080000000088, 0.0009926809999999953, 0.0009926950000000018, 0.0009926940000000023, 0.0009927500000000006, 0.0009926940000000023, 0.000992723000000001, 0.0009926940000000023, 0.0009927220000000014, 0.0010222500000000023, 0.0009926940000000023, 0.0009926950000000018, 0.0009926940000000023, 0.0009926940000000023, 0.0009926390000000035, 0.0009927080000000088]</msg>
<status status="PASS" starttime="20201029 18:14:55.430" endtime="20201029 18:14:55.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.419" endtime="20201029 18:14:55.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.910" endtime="20201029 18:14:55.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:54.880" endtime="20201029 18:14:55.438"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:55.444" endtime="20201029 18:14:55.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.440" endtime="20201029 18:14:55.468"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.490" endtime="20201029 18:14:55.554"></status>
</kw>
<msg timestamp="20201029 18:14:55.555" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.487" endtime="20201029 18:14:55.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.562" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:55.557" endtime="20201029 18:14:55.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.564" endtime="20201029 18:14:55.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.480" endtime="20201029 18:14:55.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.474" endtime="20201029 18:14:55.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.587" endtime="20201029 18:14:55.926"></status>
</kw>
<msg timestamp="20201029 18:14:55.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036333708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037365764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.584" endtime="20201029 18:14:55.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036333708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037365764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:55.936" endtime="20201029 18:14:55.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:55.954" endtime="20201029 18:14:55.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.577" endtime="20201029 18:14:55.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.572" endtime="20201029 18:14:55.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:55.970" level="INFO">${PHILIP_RES} = [{'diff': 0.0010320560000000034}, {'diff': 0.001032152999999994}, {'diff': 0.0010321520000000015}, {'diff': 0.0010321250000000018}, {'diff': 0.001032152999999994}, {'diff': 0.0010321390000000014}, {'d...</msg>
<status status="PASS" starttime="20201029 18:14:55.963" endtime="20201029 18:14:55.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:55.980" level="INFO">${RESULT} = {'diff': [0.0010320560000000034, 0.001032152999999994, 0.0010321520000000015, 0.0010321250000000018, 0.001032152999999994, 0.0010321390000000014, 0.0010321250000000018, 0.001032153000000001, 0.0010321...</msg>
<status status="PASS" starttime="20201029 18:14:55.973" endtime="20201029 18:14:55.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.990" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:55.988" endtime="20201029 18:14:55.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:55.997" level="INFO">VALUE: [0.0010320560000000034, 0.001032152999999994, 0.0010321520000000015, 0.0010321250000000018, 0.001032152999999994, 0.0010321390000000014, 0.0010321250000000018, 0.001032153000000001, 0.0010321390000000014, 0.001032153000000001, 0.0010551519999999967, 0.0010321250000000018, 0.0010321390000000014, 0.0010321389999999944, 0.001032153000000001, 0.0010321390000000014, 0.0010321249999999949, 0.0010321250000000018, 0.0010321390000000014, 0.0010321250000000018, 0.0010321390000000014, 0.0010321390000000014, 0.0010321800000000006, 0.001032152999999994, 0.0010321390000000014, 0.0010321390000000014, 0.0010321390000000014, 0.0010321249999999949, 0.0010321519999999945, 0.0010321530000000079, 0.0010321390000000014, 0.0010321249999999949, 0.0010321799999999937, 0.0010321390000000014, 0.0010321530000000079, 0.0010321380000000019, 0.0010321390000000014, 0.0010321670000000005, 0.0010321530000000079, 0.0010321249999999949, 0.001056236000000002, 0.0010321949999999996, 0.001032166000000001, 0.0010321250000000087, 0.001032181000000007, 0.001032181000000007, 0.0010321249999999949, 0.0010321389999999875, 0.0010321530000000079, 0.0010321390000000014]</msg>
<status status="PASS" starttime="20201029 18:14:55.992" endtime="20201029 18:14:55.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.981" endtime="20201029 18:14:56.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.469" endtime="20201029 18:14:56.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:55.439" endtime="20201029 18:14:56.002"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.008" endtime="20201029 18:14:56.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.004" endtime="20201029 18:14:56.031"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.052" endtime="20201029 18:14:56.118"></status>
</kw>
<msg timestamp="20201029 18:14:56.119" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.048" endtime="20201029 18:14:56.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.126" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.122" endtime="20201029 18:14:56.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.128" endtime="20201029 18:14:56.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.041" endtime="20201029 18:14:56.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.036" endtime="20201029 18:14:56.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.151" endtime="20201029 18:14:56.489"></status>
</kw>
<msg timestamp="20201029 18:14:56.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035535139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.148" endtime="20201029 18:14:56.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034462806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035535139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.498" endtime="20201029 18:14:56.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.516" endtime="20201029 18:14:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.141" endtime="20201029 18:14:56.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.136" endtime="20201029 18:14:56.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:56.532" level="INFO">${PHILIP_RES} = [{'diff': 0.0010723330000000017}, {'diff': 0.0010723339999999942}, {'diff': 0.0010724299999999992}, {'diff': 0.0010723470000000013}, {'diff': 0.0010723469999999943}, {'diff': 0.0010723330000000017}, {...</msg>
<status status="PASS" starttime="20201029 18:14:56.525" endtime="20201029 18:14:56.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:56.543" level="INFO">${RESULT} = {'diff': [0.0010723330000000017, 0.0010723339999999942, 0.0010724299999999992, 0.0010723470000000013, 0.0010723469999999943, 0.0010723330000000017, 0.0010828610000000044, 0.0010723200000000016, 0.0010...</msg>
<status status="PASS" starttime="20201029 18:14:56.534" endtime="20201029 18:14:56.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.550" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:56.549" endtime="20201029 18:14:56.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.553" level="INFO">VALUE: [0.0010723330000000017, 0.0010723339999999942, 0.0010724299999999992, 0.0010723470000000013, 0.0010723469999999943, 0.0010723330000000017, 0.0010828610000000044, 0.0010723200000000016, 0.0010723480000000007, 0.0010723340000000012, 0.0010723340000000012, 0.001072278000000003, 0.0010723340000000012, 0.0010723340000000012, 0.0010723610000000008, 0.0010723610000000008, 0.0010723329999999948, 0.0010722920000000025, 0.001072306000000002, 0.0010723469999999943, 0.0010723750000000004, 0.0010723750000000004, 0.0010723189999999952, 0.0010723330000000017, 0.001072402, 0.0010723329999999948, 0.001072388999999993, 0.0010723470000000013, 0.0010723190000000021, 0.0010723470000000013, 0.0010723329999999948, 0.0010723470000000013, 0.0010723470000000013, 0.0010723470000000013, 0.0010723329999999948, 0.0010723329999999948, 0.0010723330000000086, 0.0010723330000000086, 0.0010723330000000086, 0.0010723470000000013, 0.0010723470000000013, 0.0010723049999999956, 0.0010723330000000086, 0.0010723470000000013, 0.0010723470000000013, 0.0010723330000000086, 0.0010723049999999956, 0.0010723470000000013, 0.0010723470000000013, 0.0010723329999999948]</msg>
<status status="PASS" starttime="20201029 18:14:56.551" endtime="20201029 18:14:56.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.545" endtime="20201029 18:14:56.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.032" endtime="20201029 18:14:56.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.003" endtime="20201029 18:14:56.555"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:56.558" endtime="20201029 18:14:56.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.556" endtime="20201029 18:14:56.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.588" endtime="20201029 18:14:56.654"></status>
</kw>
<msg timestamp="20201029 18:14:56.654" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.586" endtime="20201029 18:14:56.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:56.657" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:56.655" endtime="20201029 18:14:56.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.658" endtime="20201029 18:14:56.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.583" endtime="20201029 18:14:56.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.580" endtime="20201029 18:14:56.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:56.670" endtime="20201029 18:14:56.992"></status>
</kw>
<msg timestamp="20201029 18:14:56.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:56.668" endtime="20201029 18:14:57.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019828667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020941958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:14:57.002" endtime="20201029 18:14:57.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:57.020" endtime="20201029 18:14:57.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.665" endtime="20201029 18:14:57.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.662" endtime="20201029 18:14:57.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:14:57.036" level="INFO">${PHILIP_RES} = [{'diff': 0.001113290999999999}, {'diff': 0.0011132779999999988}, {'diff': 0.0011133060000000014}, {'diff': 0.0011132910000000024}, {'diff': 0.0011132220000000005}, {'diff': 0.0011133060000000014}, {'...</msg>
<status status="PASS" starttime="20201029 18:14:57.029" endtime="20201029 18:14:57.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:14:57.047" level="INFO">${RESULT} = {'diff': [0.001113290999999999, 0.0011132779999999988, 0.0011133060000000014, 0.0011132910000000024, 0.0011132220000000005, 0.0011133060000000014, 0.0011132910000000024, 0.0011133060000000014, 0.00111...</msg>
<status status="PASS" starttime="20201029 18:14:57.038" endtime="20201029 18:14:57.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.058" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:14:57.055" endtime="20201029 18:14:57.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.063" level="INFO">VALUE: [0.001113290999999999, 0.0011132779999999988, 0.0011133060000000014, 0.0011132910000000024, 0.0011132220000000005, 0.0011133060000000014, 0.0011132910000000024, 0.0011133060000000014, 0.001113318999999998, 0.001113290999999999, 0.0011132639999999958, 0.001113305000000002, 0.0011133190000000015, 0.0011133060000000014, 0.0011133190000000015, 0.0011132920000000018, 0.0011132920000000018, 0.0011132910000000024, 0.0011133060000000014, 0.0011133060000000014, 0.0011133190000000015, 0.0011132780000000023, 0.0011133060000000014, 0.0011132910000000024, 0.001113320000000001, 0.0011270280000000021, 0.0011133059999999945, 0.001113304999999995, 0.001113291999999995, 0.0011132909999999954, 0.0011133059999999945, 0.0011132359999999966, 0.0011132910000000024, 0.0011132920000000018, 0.0011132499999999962, 0.0011133470000000006, 0.0011133060000000014, 0.001113320000000001, 0.0011132909999999885, 0.0011132779999999953, 0.0011132779999999953, 0.0011133610000000072, 0.0011133059999999945, 0.0011132909999999885, 0.0011133050000000089, 0.0011132920000000018, 0.0011132909999999885, 0.001113304999999995, 0.0011133059999999945, 0.0011133050000000089]</msg>
<status status="PASS" starttime="20201029 18:14:57.060" endtime="20201029 18:14:57.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.049" endtime="20201029 18:14:57.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.579" endtime="20201029 18:14:57.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:56.555" endtime="20201029 18:14:57.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:29.986" endtime="20201029 18:14:57.068"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:25.920" endtime="20201029 18:14:57.070" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:13:54.584" endtime="20201029 18:14:57.092"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.270" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:57.286" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:58.111" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:57.266" endtime="20201029 18:14:58.112"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.119" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:14:58.115" endtime="20201029 18:15:01.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.263" endtime="20201029 18:15:01.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.129" endtime="20201029 18:15:01.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.125" endtime="20201029 18:15:01.464"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.493" endtime="20201029 18:15:01.515"></status>
</kw>
<msg timestamp="20201029 18:15:01.516" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.490" endtime="20201029 18:15:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.522" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.518" endtime="20201029 18:15:01.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.529" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.524" endtime="20201029 18:15:01.529"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.484" endtime="20201029 18:15:01.531"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.478" endtime="20201029 18:15:01.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.475" endtime="20201029 18:15:01.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.544" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.542" endtime="20201029 18:15:01.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.536" endtime="20201029 18:15:01.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.473" endtime="20201029 18:15:01.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.472" endtime="20201029 18:15:01.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.547" endtime="20201029 18:15:01.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.468" endtime="20201029 18:15:01.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.554" endtime="20201029 18:15:01.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.465" endtime="20201029 18:15:01.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.260" endtime="20201029 18:15:01.560"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.574" endtime="20201029 18:15:01.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.570" endtime="20201029 18:15:01.597"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.632" endtime="20201029 18:15:01.652"></status>
</kw>
<msg timestamp="20201029 18:15:01.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.627" endtime="20201029 18:15:01.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.660" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.656" endtime="20201029 18:15:01.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.662" endtime="20201029 18:15:01.667"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.620" endtime="20201029 18:15:01.669"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.614" endtime="20201029 18:15:01.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.611" endtime="20201029 18:15:01.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.706" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.702" endtime="20201029 18:15:01.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.689" endtime="20201029 18:15:01.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.609" endtime="20201029 18:15:01.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.607" endtime="20201029 18:15:01.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.716" endtime="20201029 18:15:01.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.603" endtime="20201029 18:15:01.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.599" endtime="20201029 18:15:01.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.567" endtime="20201029 18:15:01.729"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.758" endtime="20201029 18:15:01.777"></status>
</kw>
<msg timestamp="20201029 18:15:01.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.754" endtime="20201029 18:15:01.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.780" endtime="20201029 18:15:01.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.787" endtime="20201029 18:15:01.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.745" endtime="20201029 18:15:01.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.738" endtime="20201029 18:15:01.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.832" endtime="20201029 18:15:02.227"></status>
</kw>
<msg timestamp="20201029 18:15:02.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.178251792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.178259958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:15:01.825" endtime="20201029 18:15:02.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.178251792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.178259958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201029 18:15:02.238" endtime="20201029 18:15:02.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.257" endtime="20201029 18:15:02.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.811" endtime="20201029 18:15:02.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.801" endtime="20201029 18:15:02.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.274" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.9450000000041943e-06}, {'diff': 3.4720000000043605e-06}, {'diff': 2.9170000000189322e-06}, {'diff': 3.473000000003834e-06}, {'diff': 2.9310000000115632e-06}, {'diff': 3.499999...</msg>
<status status="PASS" starttime="20201029 18:15:02.265" endtime="20201029 18:15:02.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.284" level="INFO">${ACCURACY} = {'diff': [0, 2.9450000000041943e-06, 3.4720000000043605e-06, 2.9170000000189322e-06, 3.473000000003834e-06, 2.9310000000115632e-06, 3.4999999999896225e-06, 3.4589999999834475e-06, 2.9440000000047206e-...</msg>
<status status="PASS" starttime="20201029 18:15:02.276" endtime="20201029 18:15:02.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.295" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.293" endtime="20201029 18:15:02.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.300" level="INFO">VALUE: [0, 2.9450000000041943e-06, 3.4720000000043605e-06, 2.9170000000189322e-06, 3.473000000003834e-06, 2.9310000000115632e-06, 3.4999999999896225e-06, 3.4589999999834475e-06, 2.9440000000047206e-06, 3.4309999999981855e-06, 2.9450000000041943e-06, 3.5139999999822535e-06, 3.4440000000190985e-06, 3.4440000000190985e-06, 3.986000000011369e-06, 3.4720000000043605e-06, 3.459000000011203e-06, 2.9450000000041943e-06, 3.4720000000043605e-06, 2.9440000000047206e-06, 2.915999999991703e-06, 2.929999999984334e-06, 3.5270000000031665e-06, 3.457999999983974e-06, 2.9300000000120896e-06, 3.459000000011203e-06, 2.9309999999838077e-06, 3.429999999998712e-06, 2.9029999999985456e-06, 3.473000000003834e-06, 2.9310000000115632e-06, 3.4580000000117295e-06, 2.929999999984334e-06, 2.9170000000189322e-06, 3.4720000000043605e-06, 2.9309999999838077e-06, 3.4859999999969915e-06, 3.459000000011203e-06, 2.9310000000115632e-06, 2.9169999999911767e-06, 2.9169999999911767e-06, 3.4720000000043605e-06, 3.459000000011203e-06, 2.9860000000103692e-06, 3.471999999976605e-06, 3.4729999999760786e-06, 2.9169999999911767e-06, 3.457999999983974e-06, 3.4720000000043605e-06, 2.9310000000115632e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.297" endtime="20201029 18:15:02.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.286" endtime="20201029 18:15:02.303"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.315" endtime="20201029 18:15:02.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.310" endtime="20201029 18:15:02.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.305" endtime="20201029 18:15:02.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.733" endtime="20201029 18:15:02.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.732" endtime="20201029 18:15:02.340"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.372" endtime="20201029 18:15:02.393"></status>
</kw>
<msg timestamp="20201029 18:15:02.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.367" endtime="20201029 18:15:02.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.398" endtime="20201029 18:15:02.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.405" endtime="20201029 18:15:02.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.357" endtime="20201029 18:15:02.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.349" endtime="20201029 18:15:02.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.430" endtime="20201029 18:15:02.779"></status>
</kw>
<msg timestamp="20201029 18:15:02.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051414264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051418319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.426" endtime="20201029 18:15:02.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051414264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051418319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.791" endtime="20201029 18:15:02.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.814" endtime="20201029 18:15:02.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.418" endtime="20201029 18:15:02.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.413" endtime="20201029 18:15:02.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.832" level="INFO">${RESULT} = [{'diff': 4.0549999999958675e-06}, {'diff': 3.9720000000048605e-06}, {'diff': 4.526999999997228e-06}, {'diff': 3.9859999999974915e-06}, {'diff': 4.513999999997131e-06}, {'diff': 3.987000000003904e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:02.823" endtime="20201029 18:15:02.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:02.843" level="INFO">${ACCURACY} = {'diff': [4.0549999999958675e-06, 3.9720000000048605e-06, 4.526999999997228e-06, 3.9859999999974915e-06, 4.513999999997131e-06, 3.987000000003904e-06, 3.9859999999974915e-06, 4.51400000000407e-06, 4.5...</msg>
<status status="PASS" starttime="20201029 18:15:02.834" endtime="20201029 18:15:02.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.854" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:02.852" endtime="20201029 18:15:02.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.860" level="INFO">VALUE: [4.0549999999958675e-06, 3.9720000000048605e-06, 4.526999999997228e-06, 3.9859999999974915e-06, 4.513999999997131e-06, 3.987000000003904e-06, 3.9859999999974915e-06, 4.51400000000407e-06, 4.51400000000407e-06, 3.9859999999974915e-06, 4.513999999997131e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 3.971999999997922e-06, 3.9859999999974915e-06, 4.51400000000407e-06, 3.9860000000044304e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 3.9859999999974915e-06, 3.9720000000048605e-06, 3.9860000000044304e-06, 4.51400000000407e-06, 4.52800000000364e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 3.9999999999970615e-06, 3.916999999999116e-06, 4.54200000000321e-06, 4.513999999997131e-06, 3.9860000000044304e-06, 4.01400000000357e-06, 4.526999999997228e-06, 3.958999999997825e-06, 4.527999999996701e-06, 4.4999999999975615e-06, 4.5000000000045e-06, 4.540999999996798e-06, 4.51400000000407e-06, 4.527999999996701e-06, 3.9859999999974915e-06, 4.4999999999975615e-06, 4.513999999997131e-06, 4.512999999997658e-06, 3.943999999998782e-06, 3.9859999999974915e-06, 4.526999999997228e-06, 4.527999999996701e-06, 4.513999999997131e-06, 4.000000000004e-06]</msg>
<status status="PASS" starttime="20201029 18:15:02.857" endtime="20201029 18:15:02.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.845" endtime="20201029 18:15:02.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:02.872" endtime="20201029 18:15:02.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.867" endtime="20201029 18:15:02.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.865" endtime="20201029 18:15:02.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.343" endtime="20201029 18:15:02.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.341" endtime="20201029 18:15:02.897"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.920" endtime="20201029 18:15:02.937"></status>
</kw>
<msg timestamp="20201029 18:15:02.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.917" endtime="20201029 18:15:02.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.941" endtime="20201029 18:15:02.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.947" endtime="20201029 18:15:02.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.909" endtime="20201029 18:15:02.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.903" endtime="20201029 18:15:02.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.972" endtime="20201029 18:15:03.321"></status>
</kw>
<msg timestamp="20201029 18:15:03.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041123764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.969" endtime="20201029 18:15:03.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041123764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.330" endtime="20201029 18:15:03.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.350" endtime="20201029 18:15:03.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.961" endtime="20201029 18:15:03.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.956" endtime="20201029 18:15:03.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.367" level="INFO">${RESULT} = [{'diff': 5.027999999997201e-06}, {'diff': 5.569000000003876e-06}, {'diff': 5.027999999997201e-06}, {'diff': 4.985999999998492e-06}, {'diff': 5.069000000003376e-06}, {'diff': 5.569999999996411e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.358" endtime="20201029 18:15:03.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.378" level="INFO">${ACCURACY} = {'diff': [5.027999999997201e-06, 5.569000000003876e-06, 5.027999999997201e-06, 4.985999999998492e-06, 5.069000000003376e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.639000000001726e-06, 5.0140...</msg>
<status status="PASS" starttime="20201029 18:15:03.369" endtime="20201029 18:15:03.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.389" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.387" endtime="20201029 18:15:03.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.395" level="INFO">VALUE: [5.027999999997201e-06, 5.569000000003876e-06, 5.027999999997201e-06, 4.985999999998492e-06, 5.069000000003376e-06, 5.569999999996411e-06, 5.569000000003876e-06, 5.639000000001726e-06, 5.01400000000457e-06, 5.569999999996411e-06, 5.041999999996771e-06, 5.027999999997201e-06, 5.569999999996411e-06, 5.04200000000371e-06, 5.55600000000378e-06, 5.0410000000042365e-06, 5.5689999999969375e-06, 5.55600000000378e-06, 5.597000000003016e-06, 5.041999999996771e-06, 5.555999999996841e-06, 5.583000000003446e-06, 5.5689999999969375e-06, 5.040999999997298e-06, 5.55600000000378e-06, 5.04200000000371e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.5689999999969375e-06, 5.082999999996007e-06, 5.05600000000328e-06, 5.04200000000371e-06, 5.0139999999976315e-06, 5.027999999997201e-06, 5.02800000000414e-06, 5.57000000000335e-06, 5.041999999996771e-06, 5.569000000003876e-06, 5.582999999996507e-06, 5.582999999996507e-06, 5.069999999995911e-06, 5.0410000000042365e-06, 5.096999999995577e-06, 5.040999999997298e-06, 5.5689999999969375e-06, 5.027999999997201e-06, 5.04200000000371e-06, 5.0410000000042365e-06, 5.02800000000414e-06, 5.569999999996411e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.391" endtime="20201029 18:15:03.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.380" endtime="20201029 18:15:03.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.406" endtime="20201029 18:15:03.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.402" endtime="20201029 18:15:03.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.399" endtime="20201029 18:15:03.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.899" endtime="20201029 18:15:03.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.898" endtime="20201029 18:15:03.431"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.457" endtime="20201029 18:15:03.476"></status>
</kw>
<msg timestamp="20201029 18:15:03.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.453" endtime="20201029 18:15:03.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.479" endtime="20201029 18:15:03.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.487" endtime="20201029 18:15:03.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.445" endtime="20201029 18:15:03.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.438" endtime="20201029 18:15:03.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.512" endtime="20201029 18:15:03.888"></status>
</kw>
<msg timestamp="20201029 18:15:03.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044181861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044187972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.508" endtime="20201029 18:15:03.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044181861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044187972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.898" endtime="20201029 18:15:03.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.916" endtime="20201029 18:15:03.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.500" endtime="20201029 18:15:03.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.495" endtime="20201029 18:15:03.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.933" level="INFO">${RESULT} = [{'diff': 6.110999999996147e-06}, {'diff': 6.625000000003156e-06}, {'diff': 6.625000000003156e-06}, {'diff': 6.624999999996217e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.625000000003156e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:03.925" endtime="20201029 18:15:03.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:03.944" level="INFO">${ACCURACY} = {'diff': [6.110999999996147e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.167000000001366e-06, 6.625000000003156e-06, 5.569000000003876e-06, 6.097000000003516e-06, 6.6249...</msg>
<status status="PASS" starttime="20201029 18:15:03.936" endtime="20201029 18:15:03.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.955" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:03.952" endtime="20201029 18:15:03.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.960" level="INFO">VALUE: [6.110999999996147e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.624999999996217e-06, 6.167000000001366e-06, 6.625000000003156e-06, 5.569000000003876e-06, 6.097000000003516e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.625000000003156e-06, 6.083000000003946e-06, 6.639000000002726e-06, 6.096999999996577e-06, 6.097000000003516e-06, 6.639000000002726e-06, 6.09800000000299e-06, 6.096999999996577e-06, 6.541999999998271e-06, 6.624999999996217e-06, 6.097000000003516e-06, 5.499999999998562e-06, 6.0690000000043764e-06, 6.583999999996981e-06, 6.097000000003516e-06, 6.096999999996577e-06, 6.625000000003156e-06, 6.09800000000299e-06, 6.111000000003086e-06, 6.09800000000299e-06, 6.054999999997868e-06, 6.625000000003156e-06, 6.680000000001962e-06, 6.097000000003516e-06, 6.097000000003516e-06, 6.08400000000342e-06, 6.624999999996217e-06, 6.625000000003156e-06, 6.138999999995287e-06, 6.09800000000299e-06, 6.653000000002296e-06, 6.0139999999986316e-06, 6.624999999996217e-06, 6.05600000000428e-06, 6.0690000000043764e-06, 6.625000000003156e-06, 6.09800000000299e-06, 5.611999999995121e-06, 6.639000000002726e-06, 6.083999999996481e-06]</msg>
<status status="PASS" starttime="20201029 18:15:03.957" endtime="20201029 18:15:03.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.946" endtime="20201029 18:15:03.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:03.972" endtime="20201029 18:15:03.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.967" endtime="20201029 18:15:03.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.965" endtime="20201029 18:15:03.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.433" endtime="20201029 18:15:03.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.432" endtime="20201029 18:15:03.997"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.020" endtime="20201029 18:15:04.039"></status>
</kw>
<msg timestamp="20201029 18:15:04.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.017" endtime="20201029 18:15:04.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.042" endtime="20201029 18:15:04.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.048" endtime="20201029 18:15:04.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.010" endtime="20201029 18:15:04.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.003" endtime="20201029 18:15:04.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.073" endtime="20201029 18:15:04.419"></status>
</kw>
<msg timestamp="20201029 18:15:04.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042414069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04242175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:04.070" endtime="20201029 18:15:04.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042414069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04242175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:04.429" endtime="20201029 18:15:04.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.447" endtime="20201029 18:15:04.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.063" endtime="20201029 18:15:04.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.058" endtime="20201029 18:15:04.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.464" level="INFO">${RESULT} = [{'diff': 7.681000000002436e-06}, {'diff': 7.111000000004086e-06}, {'diff': 7.666999999995927e-06}, {'diff': 7.0969999999975775e-06}, {'diff': 7.1380000000037525e-06}, {'diff': 7.138999999996287e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:04.456" endtime="20201029 18:15:04.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:04.474" level="INFO">${ACCURACY} = {'diff': [7.681000000002436e-06, 7.111000000004086e-06, 7.666999999995927e-06, 7.0969999999975775e-06, 7.1380000000037525e-06, 7.138999999996287e-06, 6.625000000003156e-06, 7.152999999995857e-06, 7.15...</msg>
<status status="PASS" starttime="20201029 18:15:04.466" endtime="20201029 18:15:04.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.485" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:04.482" endtime="20201029 18:15:04.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.491" level="INFO">VALUE: [7.681000000002436e-06, 7.111000000004086e-06, 7.666999999995927e-06, 7.0969999999975775e-06, 7.1380000000037525e-06, 7.138999999996287e-06, 6.625000000003156e-06, 7.152999999995857e-06, 7.153000000002796e-06, 6.624999999996217e-06, 6.639000000002726e-06, 7.138999999996287e-06, 7.153000000002796e-06, 7.152999999995857e-06, 7.679999999996023e-06, 6.611000000003586e-06, 7.153000000002796e-06, 7.165999999995953e-06, 7.667000000002866e-06, 7.125000000003656e-06, 7.139000000003226e-06, 7.681000000002436e-06, 7.667000000002866e-06, 7.679999999996023e-06, 7.111000000004086e-06, 7.139000000003226e-06, 7.666999999995927e-06, 7.680000000002962e-06, 7.1519999999963835e-06, 7.722000000001672e-06, 7.667000000002866e-06, 7.138999999996287e-06, 7.707999999995163e-06, 7.638999999996787e-06, 6.610999999996647e-06, 7.665999999996453e-06, 7.139000000003226e-06, 7.138999999996287e-06, 7.152000000003322e-06, 7.680999999995497e-06, 7.167000000002366e-06, 6.625000000003156e-06, 7.680000000002962e-06, 7.167000000002366e-06, 6.639000000002726e-06, 7.152999999995857e-06, 7.1379999999968136e-06, 7.694999999995067e-06, 7.667000000002866e-06, 7.097000000004516e-06]</msg>
<status status="PASS" starttime="20201029 18:15:04.488" endtime="20201029 18:15:04.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.475" endtime="20201029 18:15:04.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:04.511" endtime="20201029 18:15:04.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.502" endtime="20201029 18:15:04.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.499" endtime="20201029 18:15:04.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.999" endtime="20201029 18:15:04.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.997" endtime="20201029 18:15:04.539"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.567" endtime="20201029 18:15:04.584"></status>
</kw>
<msg timestamp="20201029 18:15:04.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.563" endtime="20201029 18:15:04.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.587" endtime="20201029 18:15:04.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.594" endtime="20201029 18:15:04.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.556" endtime="20201029 18:15:04.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.548" endtime="20201029 18:15:04.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.617" endtime="20201029 18:15:04.958"></status>
</kw>
<msg timestamp="20201029 18:15:04.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047907153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047915903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.614" endtime="20201029 18:15:04.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047907153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047915903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.967" endtime="20201029 18:15:04.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.986" endtime="20201029 18:15:04.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.607" endtime="20201029 18:15:04.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.602" endtime="20201029 18:15:04.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.004" level="INFO">${RESULT} = [{'diff': 8.750000000001812e-06}, {'diff': 8.278000000000452e-06}, {'diff': 8.208000000002602e-06}, {'diff': 8.152999999996857e-06}, {'diff': 8.750000000001812e-06}, {'diff': 7.667000000002866e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:04.995" endtime="20201029 18:15:05.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.015" level="INFO">${ACCURACY} = {'diff': [8.750000000001812e-06, 8.278000000000452e-06, 8.208000000002602e-06, 8.152999999996857e-06, 8.750000000001812e-06, 7.667000000002866e-06, 8.193999999996093e-06, 8.208000000002602e-06, 8.1950...</msg>
<status status="PASS" starttime="20201029 18:15:05.006" endtime="20201029 18:15:05.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.026" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.024" endtime="20201029 18:15:05.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.032" level="INFO">VALUE: [8.750000000001812e-06, 8.278000000000452e-06, 8.208000000002602e-06, 8.152999999996857e-06, 8.750000000001812e-06, 7.667000000002866e-06, 8.193999999996093e-06, 8.208000000002602e-06, 8.195000000002506e-06, 8.736999999994777e-06, 8.722000000002672e-06, 7.667000000002866e-06, 8.193999999996093e-06, 8.195000000002506e-06, 8.722000000002672e-06, 8.209000000002076e-06, 8.278000000000452e-06, 7.680000000002962e-06, 8.222000000002172e-06, 8.138999999997287e-06, 8.208000000002602e-06, 8.209000000002076e-06, 8.223000000001646e-06, 8.736000000002242e-06, 8.138999999997287e-06, 8.208000000002602e-06, 8.694999999996067e-06, 8.721999999995733e-06, 7.708000000002102e-06, 8.153000000003796e-06, 8.235999999994803e-06, 8.222999999994707e-06, 8.166000000003892e-06, 8.209000000002076e-06, 8.736000000002242e-06, 8.750000000001812e-06, 8.208000000002602e-06, 8.167000000003366e-06, 8.208000000002602e-06, 8.222000000002172e-06, 8.223000000001646e-06, 8.208000000002602e-06, 7.694000000002532e-06, 8.278000000000452e-06, 8.735999999995303e-06, 8.222000000002172e-06, 7.680999999995497e-06, 8.209000000002076e-06, 8.749999999994873e-06, 8.195000000002506e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.028" endtime="20201029 18:15:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.017" endtime="20201029 18:15:05.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.044" endtime="20201029 18:15:05.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.039" endtime="20201029 18:15:05.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.037" endtime="20201029 18:15:05.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.543" endtime="20201029 18:15:05.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.541" endtime="20201029 18:15:05.069"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.093" endtime="20201029 18:15:05.110"></status>
</kw>
<msg timestamp="20201029 18:15:05.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.089" endtime="20201029 18:15:05.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.114" endtime="20201029 18:15:05.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.120" endtime="20201029 18:15:05.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.082" endtime="20201029 18:15:05.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.076" endtime="20201029 18:15:05.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.144" endtime="20201029 18:15:05.503"></status>
</kw>
<msg timestamp="20201029 18:15:05.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042248236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.140" endtime="20201029 18:15:05.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042248236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042258028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.513" endtime="20201029 18:15:05.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.532" endtime="20201029 18:15:05.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.133" endtime="20201029 18:15:05.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.128" endtime="20201029 18:15:05.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.553" level="INFO">${RESULT} = [{'diff': 9.792000000001522e-06}, {'diff': 9.250000000002312e-06}, {'diff': 9.250000000002312e-06}, {'diff': 9.264000000001882e-06}, {'diff': 9.263999999994943e-06}, {'diff': 8.721999999995733e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:05.541" endtime="20201029 18:15:05.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:05.568" level="INFO">${ACCURACY} = {'diff': [9.792000000001522e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.263999999994943e-06, 8.721999999995733e-06, 9.263999999994943e-06, 9.250000000002312e-06, 9.2640...</msg>
<status status="PASS" starttime="20201029 18:15:05.556" endtime="20201029 18:15:05.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.585" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:05.582" endtime="20201029 18:15:05.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.594" level="INFO">VALUE: [9.792000000001522e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.263999999994943e-06, 8.721999999995733e-06, 9.263999999994943e-06, 9.250000000002312e-06, 9.264000000001882e-06, 9.277999999994513e-06, 9.250000000002312e-06, 9.278000000001452e-06, 8.735999999995303e-06, 8.736000000002242e-06, 8.680999999996497e-06, 9.264000000001882e-06, 8.764000000001382e-06, 9.250000000002312e-06, 8.764000000001382e-06, 9.804999999994679e-06, 9.264000000001882e-06, 8.722000000002672e-06, 9.264000000001882e-06, 9.264000000001882e-06, 9.264000000001882e-06, 8.709000000002576e-06, 8.721999999995733e-06, 9.250000000002312e-06, 9.250000000002312e-06, 9.319000000000688e-06, 8.750000000001812e-06, 8.736999999994777e-06, 9.264000000001882e-06, 8.736000000002242e-06, 9.27699999999504e-06, 9.277000000001978e-06, 8.736000000002242e-06, 9.847999999999801e-06, 9.264000000001882e-06, 9.263999999994943e-06, 8.722000000002672e-06, 9.764000000002382e-06, 9.792000000001522e-06, 9.249999999995373e-06, 9.791000000002048e-06, 8.778000000000952e-06, 8.722000000002672e-06, 9.778000000001952e-06, 9.263000000002408e-06, 8.722000000002672e-06]</msg>
<status status="PASS" starttime="20201029 18:15:05.589" endtime="20201029 18:15:05.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.571" endtime="20201029 18:15:05.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:05.614" endtime="20201029 18:15:05.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.607" endtime="20201029 18:15:05.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.603" endtime="20201029 18:15:05.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.072" endtime="20201029 18:15:05.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.070" endtime="20201029 18:15:05.644"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.679" endtime="20201029 18:15:05.701"></status>
</kw>
<msg timestamp="20201029 18:15:05.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.674" endtime="20201029 18:15:05.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.706" endtime="20201029 18:15:05.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.716" endtime="20201029 18:15:05.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.663" endtime="20201029 18:15:05.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.654" endtime="20201029 18:15:05.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.753" endtime="20201029 18:15:06.107"></status>
</kw>
<msg timestamp="20201029 18:15:06.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060080736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060091569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.748" endtime="20201029 18:15:06.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060080736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060091569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.116" endtime="20201029 18:15:06.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.135" endtime="20201029 18:15:06.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.736" endtime="20201029 18:15:06.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.729" endtime="20201029 18:15:06.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.152" level="INFO">${RESULT} = [{'diff': 1.0832999999994819e-05}, {'diff': 1.0374999999999968e-05}, {'diff': 9.806000000001092e-06}, {'diff': 1.0319999999994223e-05}, {'diff': 9.820000000000662e-06}, {'diff': 1.0847000000001328e-05...</msg>
<status status="PASS" starttime="20201029 18:15:06.144" endtime="20201029 18:15:06.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.162" level="INFO">${ACCURACY} = {'diff': [1.0832999999994819e-05, 1.0374999999999968e-05, 9.806000000001092e-06, 1.0319999999994223e-05, 9.820000000000662e-06, 1.0847000000001328e-05, 9.791000000002048e-06, 9.778000000001952e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:15:06.154" endtime="20201029 18:15:06.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.172" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.170" endtime="20201029 18:15:06.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.178" level="INFO">VALUE: [1.0832999999994819e-05, 1.0374999999999968e-05, 9.806000000001092e-06, 1.0319999999994223e-05, 9.820000000000662e-06, 1.0847000000001328e-05, 9.791000000002048e-06, 9.778000000001952e-06, 1.0847000000001328e-05, 1.0305000000002118e-05, 9.77699999999554e-06, 1.0361000000000398e-05, 9.805999999994153e-06, 1.0320000000001162e-05, 1.0319999999994223e-05, 1.0332999999994319e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0320000000001162e-05, 1.0319000000001688e-05, 9.792000000001522e-06, 9.806000000001092e-06, 1.0861000000000898e-05, 9.860999999999898e-06, 1.0306000000001592e-05, 1.0319999999994223e-05, 9.805999999994153e-06, 9.874999999999468e-06, 9.792000000001522e-06, 9.792000000001522e-06, 1.0320000000001162e-05, 1.0319000000001688e-05, 1.0319000000001688e-05, 1.0305999999994653e-05, 9.777999999995013e-06, 1.0320000000001162e-05, 1.0318999999994749e-05, 9.805000000001618e-06, 9.778000000001952e-06, 1.0332999999994319e-05, 1.0320000000001162e-05, 1.0249999999996373e-05, 1.0847999999993863e-05, 1.0875000000000468e-05, 1.0319999999994223e-05, 1.0333000000001258e-05, 9.791999999994583e-06, 9.806000000001092e-06, 9.791000000002048e-06]</msg>
<status status="PASS" starttime="20201029 18:15:06.175" endtime="20201029 18:15:06.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.163" endtime="20201029 18:15:06.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.190" endtime="20201029 18:15:06.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.186" endtime="20201029 18:15:06.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.183" endtime="20201029 18:15:06.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.647" endtime="20201029 18:15:06.215"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.645" endtime="20201029 18:15:06.215"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.238" endtime="20201029 18:15:06.256"></status>
</kw>
<msg timestamp="20201029 18:15:06.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.235" endtime="20201029 18:15:06.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.261" endtime="20201029 18:15:06.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.270" endtime="20201029 18:15:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.227" endtime="20201029 18:15:06.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.222" endtime="20201029 18:15:06.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.300" endtime="20201029 18:15:06.651"></status>
</kw>
<msg timestamp="20201029 18:15:06.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040809403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040820708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.296" endtime="20201029 18:15:06.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040809403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040820708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.661" endtime="20201029 18:15:06.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.679" endtime="20201029 18:15:06.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.288" endtime="20201029 18:15:06.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.281" endtime="20201029 18:15:06.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.697" level="INFO">${RESULT} = [{'diff': 1.130499999999618e-05}, {'diff': 1.0847000000001328e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1374999999994029e-05}, {'diff': 1.1374999999994029e-05}, {'diff': 1.1389000000000538e-0...</msg>
<status status="PASS" starttime="20201029 18:15:06.688" endtime="20201029 18:15:06.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:06.706" level="INFO">${ACCURACY} = {'diff': [1.130499999999618e-05, 1.0847000000001328e-05, 1.1347000000001828e-05, 1.1374999999994029e-05, 1.1374999999994029e-05, 1.1389000000000538e-05, 1.1362000000000871e-05, 1.1347000000001828e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:06.699" endtime="20201029 18:15:06.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.717" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:06.714" endtime="20201029 18:15:06.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.722" level="INFO">VALUE: [1.130499999999618e-05, 1.0847000000001328e-05, 1.1347000000001828e-05, 1.1374999999994029e-05, 1.1374999999994029e-05, 1.1389000000000538e-05, 1.1362000000000871e-05, 1.1347000000001828e-05, 1.1388000000001064e-05, 1.1416000000000204e-05, 1.1347000000001828e-05, 1.0847000000001328e-05, 1.0848000000000801e-05, 1.1375000000000968e-05, 1.0861000000000898e-05, 1.1291999999996083e-05, 1.0848000000000801e-05, 1.0847000000001328e-05, 1.1375000000000968e-05, 1.1375000000000968e-05, 1.1362000000000871e-05, 1.1389000000000538e-05, 1.1334000000001732e-05, 1.1375000000000968e-05, 1.0860999999993959e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1375000000000968e-05, 1.1917000000000177e-05, 1.1375000000000968e-05, 1.0791999999995583e-05, 1.1375000000000968e-05, 1.1360999999994459e-05, 1.1375000000000968e-05, 1.1930000000000274e-05, 1.1374999999994029e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1375000000000968e-05, 1.0848000000000801e-05, 1.0819000000002188e-05, 1.1889000000001038e-05, 1.0860999999993959e-05, 1.0848000000000801e-05, 1.1347000000001828e-05, 1.0848000000000801e-05, 1.1389000000000538e-05, 1.1362000000000871e-05, 1.0834000000001232e-05, 1.0860999999993959e-05]</msg>
<status status="PASS" starttime="20201029 18:15:06.719" endtime="20201029 18:15:06.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.708" endtime="20201029 18:15:06.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:06.736" endtime="20201029 18:15:06.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.730" endtime="20201029 18:15:06.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.728" endtime="20201029 18:15:06.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.218" endtime="20201029 18:15:06.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.216" endtime="20201029 18:15:06.761"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.784" endtime="20201029 18:15:06.802"></status>
</kw>
<msg timestamp="20201029 18:15:06.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.780" endtime="20201029 18:15:06.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.805" endtime="20201029 18:15:06.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.811" endtime="20201029 18:15:06.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.773" endtime="20201029 18:15:06.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.768" endtime="20201029 18:15:06.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.835" endtime="20201029 18:15:07.185"></status>
</kw>
<msg timestamp="20201029 18:15:07.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041081958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.831" endtime="20201029 18:15:07.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041081958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041093875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.194" endtime="20201029 18:15:07.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.213" endtime="20201029 18:15:07.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.824" endtime="20201029 18:15:07.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.819" endtime="20201029 18:15:07.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.230" level="INFO">${RESULT} = [{'diff': 1.1917000000000177e-05}, {'diff': 1.2431000000000247e-05}, {'diff': 1.2430000000000774e-05}, {'diff': 1.2402999999994169e-05}, {'diff': 1.2431000000000247e-05}, {'diff': 1.2457999999999914e-...</msg>
<status status="PASS" starttime="20201029 18:15:07.221" endtime="20201029 18:15:07.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.240" level="INFO">${ACCURACY} = {'diff': [1.1917000000000177e-05, 1.2431000000000247e-05, 1.2430000000000774e-05, 1.2402999999994169e-05, 1.2431000000000247e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.1833000000002758e-05...</msg>
<status status="PASS" starttime="20201029 18:15:07.232" endtime="20201029 18:15:07.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.251" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.249" endtime="20201029 18:15:07.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.257" level="INFO">VALUE: [1.1917000000000177e-05, 1.2431000000000247e-05, 1.2430000000000774e-05, 1.2402999999994169e-05, 1.2431000000000247e-05, 1.2457999999999914e-05, 1.2431000000000247e-05, 1.1833000000002758e-05, 1.1903000000000608e-05, 1.2444000000000344e-05, 1.1917000000000177e-05, 1.1888999999994099e-05, 1.2431000000000247e-05, 1.2417000000000677e-05, 1.2431000000000247e-05, 1.2402000000001634e-05, 1.1902000000001134e-05, 1.1903000000000608e-05, 1.2444000000000344e-05, 1.1861000000001898e-05, 1.1889000000001038e-05, 1.1915999999993765e-05, 1.1903000000000608e-05, 1.2444000000000344e-05, 1.2431000000000247e-05, 1.2431000000000247e-05, 1.2444000000000344e-05, 1.2431000000000247e-05, 1.1917000000000177e-05, 1.1916000000000704e-05, 1.2389000000001538e-05, 1.1903000000000608e-05, 1.2444000000000344e-05, 1.2944000000000844e-05, 1.2444999999999817e-05, 1.2416000000001204e-05, 1.2431000000000247e-05, 1.1888000000001564e-05, 1.1903000000000608e-05, 1.2431000000000247e-05, 1.1889000000001038e-05, 1.2457999999999914e-05, 1.2444999999999817e-05, 1.1846999999995389e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.2430000000000774e-05, 1.1834000000002232e-05, 1.1902000000001134e-05, 1.2431000000000247e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.254" endtime="20201029 18:15:07.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.242" endtime="20201029 18:15:07.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.269" endtime="20201029 18:15:07.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.265" endtime="20201029 18:15:07.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.262" endtime="20201029 18:15:07.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.763" endtime="20201029 18:15:07.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.762" endtime="20201029 18:15:07.294"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.317" endtime="20201029 18:15:07.335"></status>
</kw>
<msg timestamp="20201029 18:15:07.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.314" endtime="20201029 18:15:07.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.338" endtime="20201029 18:15:07.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.345" endtime="20201029 18:15:07.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.307" endtime="20201029 18:15:07.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.301" endtime="20201029 18:15:07.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.368" endtime="20201029 18:15:07.725"></status>
</kw>
<msg timestamp="20201029 18:15:07.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041190903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041203861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.365" endtime="20201029 18:15:07.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041190903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041203861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.735" endtime="20201029 18:15:07.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.753" endtime="20201029 18:15:07.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.358" endtime="20201029 18:15:07.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.353" endtime="20201029 18:15:07.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.770" level="INFO">${RESULT} = [{'diff': 1.2958000000000414e-05}, {'diff': 1.2958999999999887e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.2999999999999123e-05}, {'diff': 1.3471999999993545e-05}, {'diff': 1.3486000000000054e-...</msg>
<status status="PASS" starttime="20201029 18:15:07.762" endtime="20201029 18:15:07.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:07.785" level="INFO">${ACCURACY} = {'diff': [1.2958000000000414e-05, 1.2958999999999887e-05, 1.2917000000001178e-05, 1.2999999999999123e-05, 1.3471999999993545e-05, 1.3486000000000054e-05, 1.2958999999999887e-05, 1.2958000000000414e-05...</msg>
<status status="PASS" starttime="20201029 18:15:07.773" endtime="20201029 18:15:07.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.796" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:07.794" endtime="20201029 18:15:07.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.802" level="INFO">VALUE: [1.2958000000000414e-05, 1.2958999999999887e-05, 1.2917000000001178e-05, 1.2999999999999123e-05, 1.3471999999993545e-05, 1.3486000000000054e-05, 1.2958999999999887e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.2930000000001274e-05, 1.3486000000000054e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.2958000000000414e-05, 1.2957999999993475e-05, 1.3443999999994405e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.3013999999998693e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.3486999999999527e-05, 1.2972999999999457e-05, 1.2944000000000844e-05, 1.3486999999999527e-05, 1.3499999999999623e-05, 1.2958000000000414e-05, 1.2958000000000414e-05, 1.3486999999999527e-05, 1.3486000000000054e-05, 1.3445000000000817e-05, 1.2972999999999457e-05, 1.3499999999999623e-05, 1.3499999999999623e-05, 1.3459000000000387e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.2958000000000414e-05, 1.3486000000000054e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.3486000000000054e-05, 1.302699999999879e-05, 1.3458000000000914e-05, 1.2958999999999887e-05, 1.2972999999999457e-05, 1.2944000000000844e-05]</msg>
<status status="PASS" starttime="20201029 18:15:07.799" endtime="20201029 18:15:07.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.787" endtime="20201029 18:15:07.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:07.814" endtime="20201029 18:15:07.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.810" endtime="20201029 18:15:07.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.808" endtime="20201029 18:15:07.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.297" endtime="20201029 18:15:07.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.295" endtime="20201029 18:15:07.839"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.862" endtime="20201029 18:15:07.880"></status>
</kw>
<msg timestamp="20201029 18:15:07.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.859" endtime="20201029 18:15:07.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.884" endtime="20201029 18:15:07.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.890" endtime="20201029 18:15:07.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.852" endtime="20201029 18:15:07.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.846" endtime="20201029 18:15:07.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.913" endtime="20201029 18:15:08.265"></status>
</kw>
<msg timestamp="20201029 18:15:08.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041164861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041178875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.910" endtime="20201029 18:15:08.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041164861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041178875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.275" endtime="20201029 18:15:08.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.293" endtime="20201029 18:15:08.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.903" endtime="20201029 18:15:08.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.898" endtime="20201029 18:15:08.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.310" level="INFO">${RESULT} = [{'diff': 1.4013999999999693e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.4527999999999763e-05}, {'diff': 1.408299999999807e-05}, {'diff': 1.455499999999943e-05}, {'diff': 1.4000000000000123e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:08.302" endtime="20201029 18:15:08.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.320" level="INFO">${ACCURACY} = {'diff': [1.4013999999999693e-05, 1.455499999999943e-05, 1.4527999999999763e-05, 1.408299999999807e-05, 1.455499999999943e-05, 1.4000000000000123e-05, 1.454099999999986e-05, 1.4527999999999763e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:15:08.312" endtime="20201029 18:15:08.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.330" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.328" endtime="20201029 18:15:08.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.336" level="INFO">VALUE: [1.4013999999999693e-05, 1.455499999999943e-05, 1.4527999999999763e-05, 1.408299999999807e-05, 1.455499999999943e-05, 1.4000000000000123e-05, 1.454099999999986e-05, 1.4527999999999763e-05, 1.4542000000006272e-05, 1.4027999999999263e-05, 1.4527999999999763e-05, 1.4555999999998903e-05, 1.4555999999998903e-05, 1.451300000000072e-05, 1.4541999999999333e-05, 1.455499999999943e-05, 1.3987000000000027e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.455499999999943e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.4013999999999693e-05, 1.3986000000000554e-05, 1.405499999999893e-05, 1.4473000000000957e-05, 1.4013999999999693e-05, 1.454099999999986e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.454099999999986e-05, 1.4569999999998473e-05, 1.4013999999999693e-05, 1.4555999999998903e-05, 1.4027999999999263e-05, 1.452700000000029e-05, 1.4527999999999763e-05, 1.3986000000000554e-05, 1.4027999999999263e-05, 1.4000000000000123e-05, 1.4555999999998903e-05, 1.454099999999986e-05, 1.4555999999998903e-05, 1.4541999999999333e-05, 1.4527999999999763e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4541999999999333e-05, 1.4027999999999263e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.333" endtime="20201029 18:15:08.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.321" endtime="20201029 18:15:08.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.354" endtime="20201029 18:15:08.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.350" endtime="20201029 18:15:08.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.347" endtime="20201029 18:15:08.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.842" endtime="20201029 18:15:08.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.840" endtime="20201029 18:15:08.379"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.402" endtime="20201029 18:15:08.421"></status>
</kw>
<msg timestamp="20201029 18:15:08.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.399" endtime="20201029 18:15:08.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.425" endtime="20201029 18:15:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.431" endtime="20201029 18:15:08.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.391" endtime="20201029 18:15:08.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.386" endtime="20201029 18:15:08.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.455" endtime="20201029 18:15:08.799"></status>
</kw>
<msg timestamp="20201029 18:15:08.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042702708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.451" endtime="20201029 18:15:08.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042687097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042702708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.809" endtime="20201029 18:15:08.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.827" endtime="20201029 18:15:08.831"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.444" endtime="20201029 18:15:08.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.439" endtime="20201029 18:15:08.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:08.844" level="INFO">${RESULT} = [{'diff': 1.561099999999871e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5069000000006438e-05}, {'diff': 1.5069999999998973e-05}, {'diff': 1.559699999999914e-05}, {'diff': 1.5597999999998613e-05...</msg>
<status status="PASS" starttime="20201029 18:15:08.836" endtime="20201029 18:15:08.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:08.854" level="INFO">${ACCURACY} = {'diff': [1.561099999999871e-05, 1.5028000000000263e-05, 1.5069000000006438e-05, 1.5069999999998973e-05, 1.559699999999914e-05, 1.5597999999998613e-05, 1.508299999999907e-05, 1.559699999999914e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:15:08.846" endtime="20201029 18:15:08.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.865" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:08.862" endtime="20201029 18:15:08.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.870" level="INFO">VALUE: [1.561099999999871e-05, 1.5028000000000263e-05, 1.5069000000006438e-05, 1.5069999999998973e-05, 1.559699999999914e-05, 1.5597999999998613e-05, 1.508299999999907e-05, 1.559699999999914e-05, 1.5084000000005482e-05, 1.559699999999914e-05, 1.5069999999998973e-05, 1.559699999999914e-05, 1.5569e-05, 1.5639000000004788e-05, 1.559699999999914e-05, 1.50689999999995e-05, 1.452700000000029e-05, 1.5055999999999403e-05, 1.5652000000004884e-05, 1.5056000000006342e-05, 1.50689999999995e-05, 1.4527999999999763e-05, 1.5083999999998543e-05, 1.559699999999914e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.50689999999995e-05, 1.508299999999907e-05, 1.505499999999993e-05, 1.5069999999998973e-05, 1.5097999999998113e-05, 1.5083999999998543e-05, 1.5069999999998973e-05, 1.559699999999914e-05, 1.559699999999914e-05, 1.454099999999986e-05, 1.508299999999907e-05, 1.5069999999998973e-05, 1.5625000000005218e-05, 1.5055999999999403e-05, 1.559699999999914e-05, 1.508299999999907e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.5083999999998543e-05, 1.559699999999914e-05, 1.50689999999995e-05, 1.558299999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:15:08.867" endtime="20201029 18:15:08.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.856" endtime="20201029 18:15:08.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:08.884" endtime="20201029 18:15:08.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.878" endtime="20201029 18:15:08.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.876" endtime="20201029 18:15:08.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.381" endtime="20201029 18:15:08.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.380" endtime="20201029 18:15:08.909"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.931" endtime="20201029 18:15:08.949"></status>
</kw>
<msg timestamp="20201029 18:15:08.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.928" endtime="20201029 18:15:08.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:08.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:08.953" endtime="20201029 18:15:08.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.959" endtime="20201029 18:15:08.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.921" endtime="20201029 18:15:08.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.915" endtime="20201029 18:15:08.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:08.982" endtime="20201029 18:15:09.320"></status>
</kw>
<msg timestamp="20201029 18:15:09.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:08.979" endtime="20201029 18:15:09.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040626917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040643556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.329" endtime="20201029 18:15:09.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.348" endtime="20201029 18:15:09.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.972" endtime="20201029 18:15:09.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.967" endtime="20201029 18:15:09.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.365" level="INFO">${RESULT} = [{'diff': 1.663899999999885e-05}, {'diff': 1.6056000000000403e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.612499999999878e-05}, {'diff': 1.663899999999885e-05}, {'diff': 1.665299999999842e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:09.357" endtime="20201029 18:15:09.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.376" level="INFO">${ACCURACY} = {'diff': [1.663899999999885e-05, 1.6056000000000403e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.6667000000004928e-05, 1.612499999999878e-05, 1.61...</msg>
<status status="PASS" starttime="20201029 18:15:09.367" endtime="20201029 18:15:09.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.387" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.384" endtime="20201029 18:15:09.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.392" level="INFO">VALUE: [1.663899999999885e-05, 1.6056000000000403e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.6667000000004928e-05, 1.612499999999878e-05, 1.616699999999749e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.608300000000007e-05, 1.611099999999921e-05, 1.559699999999914e-05, 1.62089999999962e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.6722000000003734e-05, 1.6166000000004954e-05, 1.6139000000005288e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.609699999999964e-05, 1.613899999999835e-05, 1.661099999999971e-05, 1.613899999999835e-05, 1.663899999999885e-05, 1.659700000000014e-05, 1.612499999999878e-05, 1.665299999999842e-05, 1.613899999999835e-05, 1.662499999999928e-05, 1.6153000000004858e-05, 1.6111000000006148e-05, 1.559699999999914e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.6125000000005718e-05, 1.666699999999799e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.663899999999885e-05, 1.6125000000005718e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.605500000000093e-05, 1.559699999999914e-05, 1.6667000000004928e-05, 1.6125000000005718e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.389" endtime="20201029 18:15:09.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.378" endtime="20201029 18:15:09.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.405" endtime="20201029 18:15:09.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.400" endtime="20201029 18:15:09.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.398" endtime="20201029 18:15:09.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.911" endtime="20201029 18:15:09.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:08.910" endtime="20201029 18:15:09.430"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.452" endtime="20201029 18:15:09.471"></status>
</kw>
<msg timestamp="20201029 18:15:09.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.449" endtime="20201029 18:15:09.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.474" endtime="20201029 18:15:09.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.480" endtime="20201029 18:15:09.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.442" endtime="20201029 18:15:09.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.436" endtime="20201029 18:15:09.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.504" endtime="20201029 18:15:09.854"></status>
</kw>
<msg timestamp="20201029 18:15:09.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.500" endtime="20201029 18:15:09.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041518306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.863" endtime="20201029 18:15:09.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.882" endtime="20201029 18:15:09.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.493" endtime="20201029 18:15:09.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.488" endtime="20201029 18:15:09.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.900" level="INFO">${RESULT} = [{'diff': 1.665299999999842e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.6651999999998945e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.7707999999998225e-05}, {'diff': 1.666699999999799e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:09.891" endtime="20201029 18:15:09.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:09.911" level="INFO">${ACCURACY} = {'diff': [1.665299999999842e-05, 1.7693999999998655e-05, 1.6651999999998945e-05, 1.77089999999977e-05, 1.7707999999998225e-05, 1.666699999999799e-05, 1.7179999999998585e-05, 1.7707999999998225e-05, 1....</msg>
<status status="PASS" starttime="20201029 18:15:09.902" endtime="20201029 18:15:09.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.922" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:09.920" endtime="20201029 18:15:09.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.928" level="INFO">VALUE: [1.665299999999842e-05, 1.7693999999998655e-05, 1.6651999999998945e-05, 1.77089999999977e-05, 1.7707999999998225e-05, 1.666699999999799e-05, 1.7179999999998585e-05, 1.7707999999998225e-05, 1.7179999999998585e-05, 1.7222000000004234e-05, 1.718099999999806e-05, 1.718099999999806e-05, 1.715299999999892e-05, 1.7749999999996935e-05, 1.666699999999799e-05, 1.709700000000064e-05, 1.665299999999842e-05, 1.7194000000005094e-05, 1.7735999999997365e-05, 1.666699999999799e-05, 1.7179999999998585e-05, 1.718099999999806e-05, 1.7778000000003014e-05, 1.716699999999849e-05, 1.7707999999998225e-05, 1.718099999999806e-05, 1.6665999999998515e-05, 1.769499999999813e-05, 1.7707999999998225e-05, 1.7179999999998585e-05, 1.716699999999849e-05, 1.7193999999998155e-05, 1.7179999999998585e-05, 1.7721999999997795e-05, 1.7165999999999015e-05, 1.7179999999998585e-05, 1.6651999999998945e-05, 1.7222000000004234e-05, 1.7679999999999085e-05, 1.7179999999998585e-05, 1.7665999999999515e-05, 1.665299999999842e-05, 1.6680000000005024e-05, 1.6653000000005358e-05, 1.666699999999799e-05, 1.7193999999998155e-05, 1.661099999999971e-05, 1.716699999999849e-05, 1.666699999999799e-05, 1.7195000000004568e-05]</msg>
<status status="PASS" starttime="20201029 18:15:09.925" endtime="20201029 18:15:09.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.913" endtime="20201029 18:15:09.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:09.940" endtime="20201029 18:15:09.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.936" endtime="20201029 18:15:09.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.933" endtime="20201029 18:15:09.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.432" endtime="20201029 18:15:09.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.430" endtime="20201029 18:15:09.965"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.988" endtime="20201029 18:15:10.007"></status>
</kw>
<msg timestamp="20201029 18:15:10.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.985" endtime="20201029 18:15:10.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.011" endtime="20201029 18:15:10.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.017" endtime="20201029 18:15:10.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.978" endtime="20201029 18:15:10.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.972" endtime="20201029 18:15:10.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.041" endtime="20201029 18:15:10.397"></status>
</kw>
<msg timestamp="20201029 18:15:10.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041519181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041537944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.037" endtime="20201029 18:15:10.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041519181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041537944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.407" endtime="20201029 18:15:10.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.428" endtime="20201029 18:15:10.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.030" endtime="20201029 18:15:10.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.025" endtime="20201029 18:15:10.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.446" level="INFO">${RESULT} = [{'diff': 1.876299999999803e-05}, {'diff': 1.8764000000004444e-05}, {'diff': 1.8764000000004444e-05}, {'diff': 1.8250000000004374e-05}, {'diff': 1.77089999999977e-05}, {'diff': 1.8235999999997865e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:10.436" endtime="20201029 18:15:10.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.456" level="INFO">${ACCURACY} = {'diff': [1.876299999999803e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.8250000000004374e-05, 1.77089999999977e-05, 1.8235999999997865e-05, 1.7722000000004734e-05, 1.8736000000005304e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:10.448" endtime="20201029 18:15:10.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.467" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:10.465" endtime="20201029 18:15:10.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.473" level="INFO">VALUE: [1.876299999999803e-05, 1.8764000000004444e-05, 1.8764000000004444e-05, 1.8250000000004374e-05, 1.77089999999977e-05, 1.8235999999997865e-05, 1.7722000000004734e-05, 1.8736000000005304e-05, 1.7681000000005498e-05, 1.8763999999997505e-05, 1.8221999999998295e-05, 1.8777999999997075e-05, 1.8250000000004374e-05, 1.8763999999997505e-05, 1.762500000000028e-05, 1.8235999999997865e-05, 1.8278000000003514e-05, 1.8749999999997935e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.7707999999998225e-05, 1.8235999999997865e-05, 1.8235999999997865e-05, 1.8763999999997505e-05, 1.8235999999997865e-05, 1.8179999999999585e-05, 1.7708000000005164e-05, 1.8236000000004804e-05, 1.8764000000004444e-05, 1.8249999999997435e-05, 1.8263999999997005e-05, 1.8235999999997865e-05, 1.8235999999997865e-05, 1.8235999999997865e-05, 1.8749999999997935e-05, 1.8249999999997435e-05, 1.7707999999998225e-05, 1.8735999999998365e-05, 1.8221999999998295e-05, 1.8236000000004804e-05, 1.769499999999813e-05, 1.7723000000004208e-05, 1.868099999999956e-05, 1.8791999999996645e-05, 1.8763999999997505e-05, 1.818099999999906e-05, 1.8249999999997435e-05, 1.8763999999997505e-05, 1.7721999999997795e-05, 1.8236000000004804e-05]</msg>
<status status="PASS" starttime="20201029 18:15:10.470" endtime="20201029 18:15:10.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.458" endtime="20201029 18:15:10.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:10.486" endtime="20201029 18:15:10.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.482" endtime="20201029 18:15:10.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.479" endtime="20201029 18:15:10.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.967" endtime="20201029 18:15:10.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.966" endtime="20201029 18:15:10.512"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.536" endtime="20201029 18:15:10.557"></status>
</kw>
<msg timestamp="20201029 18:15:10.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.533" endtime="20201029 18:15:10.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.560" endtime="20201029 18:15:10.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.567" endtime="20201029 18:15:10.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.525" endtime="20201029 18:15:10.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.519" endtime="20201029 18:15:10.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.592" endtime="20201029 18:15:10.937"></status>
</kw>
<msg timestamp="20201029 18:15:10.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045104681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045123444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.588" endtime="20201029 18:15:10.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045104681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045123444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.946" endtime="20201029 18:15:10.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.965" endtime="20201029 18:15:10.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.581" endtime="20201029 18:15:10.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.576" endtime="20201029 18:15:10.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.982" level="INFO">${RESULT} = [{'diff': 1.876299999999803e-05}, {'diff': 1.9235999999998865e-05}, {'diff': 1.987499999999559e-05}, {'diff': 1.983299999999688e-05}, {'diff': 1.8750000000004874e-05}, {'diff': 1.883299999999588e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:10.974" endtime="20201029 18:15:10.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:10.992" level="INFO">${ACCURACY} = {'diff': [1.876299999999803e-05, 1.9235999999998865e-05, 1.987499999999559e-05, 1.983299999999688e-05, 1.8750000000004874e-05, 1.883299999999588e-05, 1.9278000000004514e-05, 1.929099999999767e-05, 1.9...</msg>
<status status="PASS" starttime="20201029 18:15:10.984" endtime="20201029 18:15:10.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.002" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.000" endtime="20201029 18:15:11.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.008" level="INFO">VALUE: [1.876299999999803e-05, 1.9235999999998865e-05, 1.987499999999559e-05, 1.983299999999688e-05, 1.8750000000004874e-05, 1.883299999999588e-05, 1.9278000000004514e-05, 1.929099999999767e-05, 1.9263999999998005e-05, 1.930500000000418e-05, 1.9263999999998005e-05, 1.9291999999997145e-05, 1.9291999999997145e-05, 1.9277999999997575e-05, 1.929100000000461e-05, 1.9777999999998075e-05, 1.9819999999996785e-05, 1.9319999999996285e-05, 1.934699999999595e-05, 1.929099999999767e-05, 1.9820000000003724e-05, 1.9277999999997575e-05, 1.926299999999853e-05, 1.979099999999817e-05, 1.8721999999998795e-05, 1.930499999999724e-05, 1.9277999999997575e-05, 1.9806000000004154e-05, 1.929099999999767e-05, 1.930499999999724e-05, 1.8735999999998365e-05, 1.9306000000003654e-05, 1.8777999999997075e-05, 1.929099999999767e-05, 1.930500000000418e-05, 1.9292000000004084e-05, 1.9263999999998005e-05, 1.980499999999774e-05, 1.9291999999997145e-05, 1.931899999999681e-05, 1.8778000000004014e-05, 1.929100000000461e-05, 1.979100000000511e-05, 1.929099999999767e-05, 1.9291999999997145e-05, 1.936100000000246e-05, 1.9305999999996715e-05, 1.929099999999767e-05, 1.9263999999998005e-05, 1.929099999999767e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.005" endtime="20201029 18:15:11.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.993" endtime="20201029 18:15:11.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.022" endtime="20201029 18:15:11.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.016" endtime="20201029 18:15:11.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.014" endtime="20201029 18:15:11.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.514" endtime="20201029 18:15:11.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.513" endtime="20201029 18:15:11.047"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.070" endtime="20201029 18:15:11.088"></status>
</kw>
<msg timestamp="20201029 18:15:11.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.067" endtime="20201029 18:15:11.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.092" endtime="20201029 18:15:11.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.098" endtime="20201029 18:15:11.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.060" endtime="20201029 18:15:11.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.054" endtime="20201029 18:15:11.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.121" endtime="20201029 18:15:11.457"></status>
</kw>
<msg timestamp="20201029 18:15:11.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041037958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041057778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.118" endtime="20201029 18:15:11.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041037958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041057778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.466" endtime="20201029 18:15:11.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.485" endtime="20201029 18:15:11.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.111" endtime="20201029 18:15:11.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.106" endtime="20201029 18:15:11.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.502" level="INFO">${RESULT} = [{'diff': 1.9820000000003724e-05}, {'diff': 2.0887999999996687e-05}, {'diff': 2.037500000000303e-05}, {'diff': 2.036100000000346e-05}, {'diff': 2.0334000000003793e-05}, {'diff': 2.087499999999659e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:11.493" endtime="20201029 18:15:11.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:11.513" level="INFO">${ACCURACY} = {'diff': [1.9820000000003724e-05, 2.0887999999996687e-05, 2.037500000000303e-05, 2.036100000000346e-05, 2.0334000000003793e-05, 2.087499999999659e-05, 2.08890000000031e-05, 2.034699999999695e-05, 2.03...</msg>
<status status="PASS" starttime="20201029 18:15:11.504" endtime="20201029 18:15:11.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.524" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:11.521" endtime="20201029 18:15:11.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.529" level="INFO">VALUE: [1.9820000000003724e-05, 2.0887999999996687e-05, 2.037500000000303e-05, 2.036100000000346e-05, 2.0334000000003793e-05, 2.087499999999659e-05, 2.08890000000031e-05, 2.034699999999695e-05, 2.036099999999652e-05, 1.986099999999602e-05, 1.983299999999688e-05, 1.984699999999645e-05, 1.9819999999996785e-05, 1.9819999999996785e-05, 2.034700000000389e-05, 2.0348000000003363e-05, 1.9834000000003293e-05, 1.987500000000253e-05, 2.034700000000389e-05, 1.984700000000339e-05, 2.081899999999831e-05, 2.033300000000432e-05, 2.036100000000346e-05, 2.036100000000346e-05, 2.033299999999738e-05, 2.086100000000396e-05, 2.0334000000003793e-05, 2.034700000000389e-05, 1.9833999999996355e-05, 1.9806000000004154e-05, 2.038899999999566e-05, 2.0348000000003363e-05, 2.034700000000389e-05, 2.0888000000003626e-05, 1.981899999999731e-05, 1.984700000000339e-05, 2.034700000000389e-05, 2.034699999999695e-05, 2.0277999999998575e-05, 2.033300000000432e-05, 1.987499999999559e-05, 2.033299999999738e-05, 2.034699999999695e-05, 2.036099999999652e-05, 2.036099999999652e-05, 2.037500000000303e-05, 1.981900000000425e-05, 2.034699999999695e-05, 2.0277999999998575e-05, 1.9820000000003724e-05]</msg>
<status status="PASS" starttime="20201029 18:15:11.526" endtime="20201029 18:15:11.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.515" endtime="20201029 18:15:11.532"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.541" endtime="20201029 18:15:11.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.537" endtime="20201029 18:15:11.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.535" endtime="20201029 18:15:11.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.049" endtime="20201029 18:15:11.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.048" endtime="20201029 18:15:11.566"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.589" endtime="20201029 18:15:11.607"></status>
</kw>
<msg timestamp="20201029 18:15:11.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.586" endtime="20201029 18:15:11.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.611" endtime="20201029 18:15:11.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.617" endtime="20201029 18:15:11.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.578" endtime="20201029 18:15:11.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.573" endtime="20201029 18:15:11.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.640" endtime="20201029 18:15:11.980"></status>
</kw>
<msg timestamp="20201029 18:15:11.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.637" endtime="20201029 18:15:11.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040681708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.989" endtime="20201029 18:15:12.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.008" endtime="20201029 18:15:12.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.630" endtime="20201029 18:15:12.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.625" endtime="20201029 18:15:12.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.025" level="INFO">${RESULT} = [{'diff': 2.4193999999998217e-05}, {'diff': 2.406900000000156e-05}, {'diff': 2.3778000000002075e-05}, {'diff': 2.3792000000001645e-05}, {'diff': 2.4000000000003185e-05}, {'diff': 2.4472000000004546e-0...</msg>
<status status="PASS" starttime="20201029 18:15:12.016" endtime="20201029 18:15:12.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.036" level="INFO">${ACCURACY} = {'diff': [2.4193999999998217e-05, 2.406900000000156e-05, 2.3778000000002075e-05, 2.3792000000001645e-05, 2.4000000000003185e-05, 2.4472000000004546e-05, 2.398699999999615e-05, 2.393099999999787e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:12.027" endtime="20201029 18:15:12.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.047" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.045" endtime="20201029 18:15:12.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.052" level="INFO">VALUE: [2.4193999999998217e-05, 2.406900000000156e-05, 2.3778000000002075e-05, 2.3792000000001645e-05, 2.4000000000003185e-05, 2.4472000000004546e-05, 2.398699999999615e-05, 2.393099999999787e-05, 2.412499999999984e-05, 2.4556000000001965e-05, 2.438899999999966e-05, 2.4264000000003005e-05, 2.458300000000163e-05, 2.413899999999941e-05, 2.398699999999615e-05, 2.412499999999984e-05, 2.4249999999996497e-05, 2.3999999999996247e-05, 2.4528000000002825e-05, 2.388899999999916e-05, 2.372299999999633e-05, 2.391700000000524e-05, 2.3985999999996677e-05, 2.4612000000000245e-05, 2.4707999999998287e-05, 2.384700000000045e-05, 2.433300000000138e-05, 2.3930000000005336e-05, 2.384700000000045e-05, 2.412499999999984e-05, 2.438899999999966e-05, 2.4665999999999577e-05, 2.404100000000242e-05, 2.4193999999998217e-05, 2.415299999999898e-05, 2.3820000000000785e-05, 2.4528000000002825e-05, 2.438899999999966e-05, 2.4554999999995553e-05, 2.4457999999998037e-05, 2.434700000000095e-05, 2.4693999999998717e-05, 2.3834000000000355e-05, 2.3777999999995136e-05, 2.4708000000005226e-05, 2.3834000000000355e-05, 2.445899999999751e-05, 2.386100000000002e-05, 2.4348000000000425e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.049" endtime="20201029 18:15:12.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.038" endtime="20201029 18:15:12.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.065" endtime="20201029 18:15:12.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.061" endtime="20201029 18:15:12.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.058" endtime="20201029 18:15:12.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.568" endtime="20201029 18:15:12.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.567" endtime="20201029 18:15:12.090"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.113" endtime="20201029 18:15:12.131"></status>
</kw>
<msg timestamp="20201029 18:15:12.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.110" endtime="20201029 18:15:12.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.136" endtime="20201029 18:15:12.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.142" endtime="20201029 18:15:12.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.102" endtime="20201029 18:15:12.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.096" endtime="20201029 18:15:12.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.166" endtime="20201029 18:15:12.505"></status>
</kw>
<msg timestamp="20201029 18:15:12.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041103722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.162" endtime="20201029 18:15:12.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041103722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041128819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.514" endtime="20201029 18:15:12.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.533" endtime="20201029 18:15:12.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.155" endtime="20201029 18:15:12.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.150" endtime="20201029 18:15:12.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.550" level="INFO">${RESULT} = [{'diff': 2.5096999999994762e-05}, {'diff': 2.537500000000109e-05}, {'diff': 2.5652999999993542e-05}, {'diff': 2.4943999999998967e-05}, {'diff': 2.538900000000066e-05}, {'diff': 2.4985999999997677e-05...</msg>
<status status="PASS" starttime="20201029 18:15:12.541" endtime="20201029 18:15:12.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:12.560" level="INFO">${ACCURACY} = {'diff': [2.5096999999994762e-05, 2.537500000000109e-05, 2.5652999999993542e-05, 2.4943999999998967e-05, 2.538900000000066e-05, 2.4985999999997677e-05, 2.5250000000004436e-05, 2.4943999999998967e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:12.552" endtime="20201029 18:15:12.560"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.571" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:12.568" endtime="20201029 18:15:12.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.576" level="INFO">VALUE: [2.5096999999994762e-05, 2.537500000000109e-05, 2.5652999999993542e-05, 2.4943999999998967e-05, 2.538900000000066e-05, 2.4985999999997677e-05, 2.5250000000004436e-05, 2.4943999999998967e-05, 2.536100000000152e-05, 2.556900000000306e-05, 2.558300000000263e-05, 2.5332999999995442e-05, 2.4833999999994416e-05, 2.513900000000041e-05, 2.469500000000513e-05, 2.5069999999995096e-05, 2.5554999999996553e-05, 2.563900000000091e-05, 2.4999999999997247e-05, 2.538900000000066e-05, 2.561100000000177e-05, 2.494499999999844e-05, 2.4805999999995276e-05, 2.5362000000000995e-05, 2.568099999999962e-05, 2.5583999999995166e-05, 2.5249999999997497e-05, 2.5763999999997567e-05, 2.5207999999998787e-05, 2.5499999999997747e-05, 2.533300000000238e-05, 2.520899999999826e-05, 2.5485999999998177e-05, 2.5235999999997927e-05, 2.5262999999997593e-05, 2.5222000000005296e-05, 2.5026999999996913e-05, 2.536100000000152e-05, 2.55970000000022e-05, 2.5499999999997747e-05, 2.488900000000016e-05, 2.505500000000299e-05, 2.5582999999995693e-05, 2.5499999999997747e-05, 2.538900000000066e-05, 2.5528000000003825e-05, 2.5042000000002895e-05, 2.536100000000152e-05, 2.511100000000127e-05, 2.495900000000495e-05]</msg>
<status status="PASS" starttime="20201029 18:15:12.573" endtime="20201029 18:15:12.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.561" endtime="20201029 18:15:12.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:12.588" endtime="20201029 18:15:12.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.584" endtime="20201029 18:15:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.582" endtime="20201029 18:15:12.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.092" endtime="20201029 18:15:12.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.091" endtime="20201029 18:15:12.613"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.636" endtime="20201029 18:15:12.660"></status>
</kw>
<msg timestamp="20201029 18:15:12.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.633" endtime="20201029 18:15:12.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.664" endtime="20201029 18:15:12.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.670" endtime="20201029 18:15:12.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.626" endtime="20201029 18:15:12.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.620" endtime="20201029 18:15:12.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.694" endtime="20201029 18:15:13.031"></status>
</kw>
<msg timestamp="20201029 18:15:13.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046881222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046907431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.690" endtime="20201029 18:15:13.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046881222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046907431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.040" endtime="20201029 18:15:13.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.059" endtime="20201029 18:15:13.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.683" endtime="20201029 18:15:13.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.679" endtime="20201029 18:15:13.066"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.076" level="INFO">${RESULT} = [{'diff': 2.620899999999926e-05}, {'diff': 2.64170000000008e-05}, {'diff': 2.5804999999996803e-05}, {'diff': 2.606900000000356e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.5985999999998677e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:13.067" endtime="20201029 18:15:13.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.085" level="INFO">${ACCURACY} = {'diff': [2.620899999999926e-05, 2.64170000000008e-05, 2.5804999999996803e-05, 2.606900000000356e-05, 2.5916000000000827e-05, 2.5985999999998677e-05, 2.636100000000252e-05, 2.6485999999999177e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 18:15:13.078" endtime="20201029 18:15:13.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.096" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.094" endtime="20201029 18:15:13.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.102" level="INFO">VALUE: [2.620899999999926e-05, 2.64170000000008e-05, 2.5804999999996803e-05, 2.606900000000356e-05, 2.5916000000000827e-05, 2.5985999999998677e-05, 2.636100000000252e-05, 2.6485999999999177e-05, 2.5916000000000827e-05, 2.605500000000399e-05, 2.6610999999995832e-05, 2.6249999999998497e-05, 2.5930000000000397e-05, 2.581900000000331e-05, 2.5806000000003215e-05, 2.6708000000000287e-05, 2.6708000000000287e-05, 2.6013999999997817e-05, 2.637500000000209e-05, 2.5806000000003215e-05, 2.615300000000098e-05, 2.612500000000184e-05, 2.633300000000338e-05, 2.6207999999999787e-05, 2.636100000000252e-05, 2.655500000000449e-05, 2.6236000000005866e-05, 2.6360999999995582e-05, 2.638900000000166e-05, 2.6207999999999787e-05, 2.5777999999997137e-05, 2.647299999999908e-05, 2.6194000000000217e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6694000000000717e-05, 2.6694000000000717e-05, 2.605500000000399e-05, 2.60970000000027e-05, 2.6235999999998927e-05, 2.580500000000374e-05, 2.584700000000245e-05, 2.615300000000098e-05, 2.6708000000000287e-05, 2.637500000000209e-05, 2.6250000000005436e-05, 2.620899999999926e-05, 2.655500000000449e-05, 2.6485999999999177e-05, 2.6041999999996956e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.099" endtime="20201029 18:15:13.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.087" endtime="20201029 18:15:13.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.115" endtime="20201029 18:15:13.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.110" endtime="20201029 18:15:13.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.107" endtime="20201029 18:15:13.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.616" endtime="20201029 18:15:13.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.614" endtime="20201029 18:15:13.141"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.163" endtime="20201029 18:15:13.182"></status>
</kw>
<msg timestamp="20201029 18:15:13.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.160" endtime="20201029 18:15:13.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.185" endtime="20201029 18:15:13.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.191" endtime="20201029 18:15:13.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.153" endtime="20201029 18:15:13.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.147" endtime="20201029 18:15:13.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.215" endtime="20201029 18:15:13.550"></status>
</kw>
<msg timestamp="20201029 18:15:13.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040975472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.211" endtime="20201029 18:15:13.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040975472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.559" endtime="20201029 18:15:13.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.578" endtime="20201029 18:15:13.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.204" endtime="20201029 18:15:13.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.199" endtime="20201029 18:15:13.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.595" level="INFO">${RESULT} = [{'diff': 2.6985999999999677e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.716700000000155e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.7568999999998123e-05}, {'diff': 2.6985999999999677e-0...</msg>
<status status="PASS" starttime="20201029 18:15:13.587" endtime="20201029 18:15:13.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:13.606" level="INFO">${ACCURACY} = {'diff': [2.6985999999999677e-05, 2.7486000000000177e-05, 2.716700000000155e-05, 2.7680000000002147e-05, 2.7568999999998123e-05, 2.6985999999999677e-05, 2.7486000000000177e-05, 2.7722000000000857e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:13.597" endtime="20201029 18:15:13.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.617" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:13.615" endtime="20201029 18:15:13.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.623" level="INFO">VALUE: [2.6985999999999677e-05, 2.7486000000000177e-05, 2.716700000000155e-05, 2.7680000000002147e-05, 2.7568999999998123e-05, 2.6985999999999677e-05, 2.7486000000000177e-05, 2.7722000000000857e-05, 2.7527999999998887e-05, 2.766700000000205e-05, 2.694500000000044e-05, 2.769500000000119e-05, 2.7444000000001467e-05, 2.7472000000000607e-05, 2.734700000000395e-05, 2.6834000000003355e-05, 2.7499999999999747e-05, 2.737500000000309e-05, 2.715300000000198e-05, 2.772300000000033e-05, 2.7012999999999343e-05, 2.7054999999998053e-05, 2.6916000000001827e-05, 2.7598000000003675e-05, 2.7472000000000607e-05, 2.7569999999997596e-05, 2.7472000000000607e-05, 2.7054999999998053e-05, 2.681900000000431e-05, 2.7277999999998637e-05, 2.7624999999996402e-05, 2.7596999999997263e-05, 2.7360999999996582e-05, 2.7068999999997623e-05, 2.7249999999999497e-05, 2.7736000000000427e-05, 2.7249999999999497e-05, 2.715300000000198e-05, 2.6902999999994792e-05, 2.7722000000000857e-05, 2.7402999999995292e-05, 2.7028000000005326e-05, 2.6805999999997276e-05, 2.693100000000087e-05, 2.75970000000042e-05, 2.736100000000352e-05, 2.763900000000291e-05, 2.716700000000155e-05, 2.70970000000037e-05, 2.6916999999994362e-05]</msg>
<status status="PASS" starttime="20201029 18:15:13.620" endtime="20201029 18:15:13.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.608" endtime="20201029 18:15:13.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:13.635" endtime="20201029 18:15:13.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.631" endtime="20201029 18:15:13.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.629" endtime="20201029 18:15:13.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.143" endtime="20201029 18:15:13.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.141" endtime="20201029 18:15:13.660"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.685" endtime="20201029 18:15:13.704"></status>
</kw>
<msg timestamp="20201029 18:15:13.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.681" endtime="20201029 18:15:13.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.707" endtime="20201029 18:15:13.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.714" endtime="20201029 18:15:13.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.673" endtime="20201029 18:15:13.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.667" endtime="20201029 18:15:13.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.737" endtime="20201029 18:15:14.074"></status>
</kw>
<msg timestamp="20201029 18:15:14.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043646, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:13.734" endtime="20201029 18:15:14.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043617847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043646, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:14.083" endtime="20201029 18:15:14.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.101" endtime="20201029 18:15:14.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.727" endtime="20201029 18:15:14.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.722" endtime="20201029 18:15:14.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.119" level="INFO">${RESULT} = [{'diff': 2.8152999999996042e-05}, {'diff': 2.7930999999994932e-05}, {'diff': 2.8110999999997333e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.866700000000305e-0...</msg>
<status status="PASS" starttime="20201029 18:15:14.110" endtime="20201029 18:15:14.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.130" level="INFO">${ACCURACY} = {'diff': [2.8152999999996042e-05, 2.7930999999994932e-05, 2.8110999999997333e-05, 2.7805999999998277e-05, 2.8277999999999637e-05, 2.866700000000305e-05, 2.869500000000219e-05, 2.8708000000002287e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:14.121" endtime="20201029 18:15:14.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.141" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.138" endtime="20201029 18:15:14.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.146" level="INFO">VALUE: [2.8152999999996042e-05, 2.7930999999994932e-05, 2.8110999999997333e-05, 2.7805999999998277e-05, 2.8277999999999637e-05, 2.866700000000305e-05, 2.869500000000219e-05, 2.8708000000002287e-05, 2.869399999999578e-05, 2.8430999999995432e-05, 2.815199999999657e-05, 2.8583999999998166e-05, 2.8361999999997056e-05, 2.8264000000000067e-05, 2.8430000000002897e-05, 2.7818999999998373e-05, 2.8137999999997e-05, 2.865300000000348e-05, 2.845900000000151e-05, 2.8652999999996542e-05, 2.7791999999998707e-05, 2.8680000000003147e-05, 2.7930000000002397e-05, 2.84170000000028e-05, 2.8000000000000247e-05, 2.8486000000001177e-05, 2.84170000000028e-05, 2.812500000000384e-05, 2.8318999999998873e-05, 2.7846999999997513e-05, 2.8486999999993712e-05, 2.8360999999997583e-05, 2.79170000000023e-05, 2.8555999999999027e-05, 2.770900000000076e-05, 2.8027999999999387e-05, 2.8612000000004245e-05, 2.8666999999996112e-05, 2.8360999999997583e-05, 2.8374999999997152e-05, 2.8000000000000247e-05, 2.8040999999999483e-05, 2.8041000000006422e-05, 2.836100000000452e-05, 2.8264000000000067e-05, 2.8332999999998443e-05, 2.7708000000001287e-05, 2.8304999999999303e-05, 2.7804999999998803e-05, 2.8388999999996722e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.143" endtime="20201029 18:15:14.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.132" endtime="20201029 18:15:14.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.158" endtime="20201029 18:15:14.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.154" endtime="20201029 18:15:14.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.152" endtime="20201029 18:15:14.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.662" endtime="20201029 18:15:14.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.661" endtime="20201029 18:15:14.183"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.206" endtime="20201029 18:15:14.225"></status>
</kw>
<msg timestamp="20201029 18:15:14.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.202" endtime="20201029 18:15:14.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.228" endtime="20201029 18:15:14.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.235" endtime="20201029 18:15:14.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.195" endtime="20201029 18:15:14.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.190" endtime="20201029 18:15:14.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.258" endtime="20201029 18:15:14.602"></status>
</kw>
<msg timestamp="20201029 18:15:14.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04063925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:14.255" endtime="20201029 18:15:14.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040609583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04063925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:14.611" endtime="20201029 18:15:14.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.630" endtime="20201029 18:15:14.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.247" endtime="20201029 18:15:14.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.242" endtime="20201029 18:15:14.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.647" level="INFO">${RESULT} = [{'diff': 2.966700000000405e-05}, {'diff': 2.966599999999764e-05}, {'diff': 2.9694000000003717e-05}, {'diff': 2.9264000000001067e-05}, {'diff': 2.9680000000004148e-05}, {'diff': 2.912500000000484e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:14.639" endtime="20201029 18:15:14.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:14.657" level="INFO">${ACCURACY} = {'diff': [2.966700000000405e-05, 2.966599999999764e-05, 2.9694000000003717e-05, 2.9264000000001067e-05, 2.9680000000004148e-05, 2.912500000000484e-05, 2.8972999999994642e-05, 2.8930999999995932e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:15:14.649" endtime="20201029 18:15:14.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.668" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:14.665" endtime="20201029 18:15:14.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.673" level="INFO">VALUE: [2.966700000000405e-05, 2.966599999999764e-05, 2.9694000000003717e-05, 2.9264000000001067e-05, 2.9680000000004148e-05, 2.912500000000484e-05, 2.8972999999994642e-05, 2.8930999999995932e-05, 2.947199999999567e-05, 2.9055999999999527e-05, 2.9416999999996862e-05, 2.9388999999997723e-05, 2.943100000000337e-05, 2.9041999999999957e-05, 2.9069999999999097e-05, 2.9499999999994808e-05, 2.89170000000033e-05, 2.89170000000033e-05, 2.9486000000002177e-05, 2.9137999999998e-05, 2.9374999999998153e-05, 2.9208000000002787e-05, 2.9110999999998333e-05, 2.9596999999999263e-05, 2.9250000000001497e-05, 2.969399999999678e-05, 2.9680000000004148e-05, 2.9014000000000817e-05, 2.9528000000000887e-05, 2.8778000000000137e-05, 2.9583000000006632e-05, 2.9624999999998403e-05, 2.9041999999999957e-05, 2.8778000000000137e-05, 2.9569000000000123e-05, 2.8832999999998943e-05, 2.893100000000287e-05, 2.9096999999998763e-05, 2.8819999999998847e-05, 2.9138999999997472e-05, 2.9596999999999263e-05, 2.9055999999999527e-05, 2.8819999999998847e-05, 2.9458999999995572e-05, 2.9512999999994904e-05, 2.9333999999998916e-05, 2.972199999999592e-05, 2.938900000000466e-05, 2.9708000000003287e-05, 2.969399999999678e-05]</msg>
<status status="PASS" starttime="20201029 18:15:14.670" endtime="20201029 18:15:14.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.658" endtime="20201029 18:15:14.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:14.686" endtime="20201029 18:15:14.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.681" endtime="20201029 18:15:14.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.679" endtime="20201029 18:15:14.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.185" endtime="20201029 18:15:14.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.184" endtime="20201029 18:15:14.711"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.733" endtime="20201029 18:15:14.755"></status>
</kw>
<msg timestamp="20201029 18:15:14.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.730" endtime="20201029 18:15:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.758" endtime="20201029 18:15:14.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.765" endtime="20201029 18:15:14.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.723" endtime="20201029 18:15:14.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.717" endtime="20201029 18:15:14.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.788" endtime="20201029 18:15:15.124"></status>
</kw>
<msg timestamp="20201029 18:15:15.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043245931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043276167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.785" endtime="20201029 18:15:15.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043245931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043276167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.134" endtime="20201029 18:15:15.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.152" endtime="20201029 18:15:15.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.778" endtime="20201029 18:15:15.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.773" endtime="20201029 18:15:15.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.169" level="INFO">${RESULT} = [{'diff': 3.023599999999599e-05}, {'diff': 3.0348000000006425e-05}, {'diff': 3.0110999999999333e-05}, {'diff': 3.052700000000241e-05}, {'diff': 2.9888999999998223e-05}, {'diff': 3.0264000000002067e-05...</msg>
<status status="PASS" starttime="20201029 18:15:15.160" endtime="20201029 18:15:15.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.179" level="INFO">${ACCURACY} = {'diff': [3.023599999999599e-05, 3.0348000000006425e-05, 3.0110999999999333e-05, 3.052700000000241e-05, 2.9888999999998223e-05, 3.0264000000002067e-05, 3.052700000000241e-05, 3.072199999999692e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:15.171" endtime="20201029 18:15:15.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.190" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.187" endtime="20201029 18:15:15.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.195" level="INFO">VALUE: [3.023599999999599e-05, 3.0348000000006425e-05, 3.0110999999999333e-05, 3.052700000000241e-05, 2.9888999999998223e-05, 3.0264000000002067e-05, 3.052700000000241e-05, 3.072199999999692e-05, 2.9986000000002677e-05, 2.9916000000004828e-05, 3.015199999999857e-05, 2.972300000000233e-05, 3.0069000000000623e-05, 3.052700000000241e-05, 3.0277000000002163e-05, 2.9958000000003537e-05, 2.9944000000003967e-05, 3.0222000000003357e-05, 3.070799999999735e-05, 3.015300000000498e-05, 2.9972000000003107e-05, 3.0278000000001637e-05, 3.043100000000437e-05, 2.9944999999996502e-05, 2.9999999999995308e-05, 2.994399999999703e-05, 3.0014000000001817e-05, 2.9888999999998223e-05, 3.0014000000001817e-05, 3.05700000000006e-05, 2.9833999999999417e-05, 3.013900000000541e-05, 3.0486000000003177e-05, 2.9944000000003967e-05, 3.0360999999999583e-05, 3.066699999999811e-05, 2.9958000000003537e-05, 2.9805000000000803e-05, 2.9874999999998653e-05, 2.997199999999617e-05, 3.065199999999907e-05, 2.9805000000000803e-05, 3.070799999999735e-05, 3.0194000000004217e-05, 2.9805000000000803e-05, 2.994399999999703e-05, 3.0124999999998903e-05, 3.022199999999642e-05, 3.0028000000001387e-05, 3.0360999999999583e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.192" endtime="20201029 18:15:15.196"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.180" endtime="20201029 18:15:15.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.209" endtime="20201029 18:15:15.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.203" endtime="20201029 18:15:15.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.201" endtime="20201029 18:15:15.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.713" endtime="20201029 18:15:15.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.711" endtime="20201029 18:15:15.234"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.256" endtime="20201029 18:15:15.275"></status>
</kw>
<msg timestamp="20201029 18:15:15.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.253" endtime="20201029 18:15:15.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.279" endtime="20201029 18:15:15.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.285" endtime="20201029 18:15:15.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.246" endtime="20201029 18:15:15.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.240" endtime="20201029 18:15:15.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.308" endtime="20201029 18:15:15.643"></status>
</kw>
<msg timestamp="20201029 18:15:15.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040863917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040895333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.305" endtime="20201029 18:15:15.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040863917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040895333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.653" endtime="20201029 18:15:15.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.671" endtime="20201029 18:15:15.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.298" endtime="20201029 18:15:15.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.293" endtime="20201029 18:15:15.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.689" level="INFO">${RESULT} = [{'diff': 3.141599999999939e-05}, {'diff': 3.115199999999957e-05}, {'diff': 3.170799999999835e-05}, {'diff': 3.113899999999947e-05}, {'diff': 3.147199999999767e-05}, {'diff': 3.113899999999947e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:15.680" endtime="20201029 18:15:15.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:15.699" level="INFO">${ACCURACY} = {'diff': [3.141599999999939e-05, 3.115199999999957e-05, 3.170799999999835e-05, 3.113899999999947e-05, 3.147199999999767e-05, 3.113899999999947e-05, 3.097200000000411e-05, 3.098600000000368e-05, 3.1084...</msg>
<status status="PASS" starttime="20201029 18:15:15.691" endtime="20201029 18:15:15.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.710" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:15.708" endtime="20201029 18:15:15.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.715" level="INFO">VALUE: [3.141599999999939e-05, 3.115199999999957e-05, 3.170799999999835e-05, 3.113899999999947e-05, 3.147199999999767e-05, 3.113899999999947e-05, 3.097200000000411e-05, 3.098600000000368e-05, 3.108400000000067e-05, 3.133300000000144e-05, 3.08050000000018e-05, 3.093100000000487e-05, 3.169399999999878e-05, 3.080600000000128e-05, 3.169499999999825e-05, 3.09170000000053e-05, 3.080600000000128e-05, 3.16250000000004e-05, 3.100000000000325e-05, 3.077800000000214e-05, 3.093100000000487e-05, 3.091699999999836e-05, 3.123699999999646e-05, 3.156900000000212e-05, 3.147299999999714e-05, 3.124999999999656e-05, 3.120799999999785e-05, 3.0763000000003093e-05, 3.1054999999995114e-05, 3.148600000000418e-05, 3.138899999999972e-05, 3.169399999999878e-05, 3.081900000000137e-05, 3.098599999999674e-05, 3.115299999999904e-05, 3.126400000000307e-05, 3.094399999999803e-05, 3.091699999999836e-05, 3.079199999999477e-05, 3.091699999999836e-05, 3.105600000000153e-05, 3.07779999999952e-05, 3.136100000000058e-05, 3.105599999999459e-05, 3.149999999999681e-05, 3.15700000000016e-05, 3.091699999999836e-05, 3.080600000000128e-05, 3.105500000000205e-05, 3.167999999999921e-05]</msg>
<status status="PASS" starttime="20201029 18:15:15.712" endtime="20201029 18:15:15.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.701" endtime="20201029 18:15:15.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:15.728" endtime="20201029 18:15:15.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.724" endtime="20201029 18:15:15.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.721" endtime="20201029 18:15:15.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.236" endtime="20201029 18:15:15.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.235" endtime="20201029 18:15:15.753"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.776" endtime="20201029 18:15:15.795"></status>
</kw>
<msg timestamp="20201029 18:15:15.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.772" endtime="20201029 18:15:15.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.799" endtime="20201029 18:15:15.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.805" endtime="20201029 18:15:15.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.765" endtime="20201029 18:15:15.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.759" endtime="20201029 18:15:15.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.828" endtime="20201029 18:15:16.165"></status>
</kw>
<msg timestamp="20201029 18:15:16.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.825" endtime="20201029 18:15:16.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041141528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041173833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.175" endtime="20201029 18:15:16.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.193" endtime="20201029 18:15:16.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.817" endtime="20201029 18:15:16.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.813" endtime="20201029 18:15:16.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.210" level="INFO">${RESULT} = [{'diff': 3.23050000000033e-05}, {'diff': 3.258300000000269e-05}, {'diff': 3.191599999999989e-05}, {'diff': 3.244399999999953e-05}, {'diff': 3.219499999999875e-05}, {'diff': 3.236100000000158e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:16.202" endtime="20201029 18:15:16.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.221" level="INFO">${ACCURACY} = {'diff': [3.23050000000033e-05, 3.258300000000269e-05, 3.191599999999989e-05, 3.244399999999953e-05, 3.219499999999875e-05, 3.236100000000158e-05, 3.1804999999995864e-05, 3.229199999999627e-05, 3.2027...</msg>
<status status="PASS" starttime="20201029 18:15:16.212" endtime="20201029 18:15:16.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.232" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.230" endtime="20201029 18:15:16.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.238" level="INFO">VALUE: [3.23050000000033e-05, 3.258300000000269e-05, 3.191599999999989e-05, 3.244399999999953e-05, 3.219499999999875e-05, 3.236100000000158e-05, 3.1804999999995864e-05, 3.229199999999627e-05, 3.202799999999645e-05, 3.236100000000158e-05, 3.202800000000339e-05, 3.181999999999491e-05, 3.173599999999749e-05, 3.2360999999994644e-05, 3.2750000000005e-05, 3.233400000000192e-05, 3.224999999999756e-05, 3.252799999999695e-05, 3.177800000000314e-05, 3.193099999999893e-05, 3.204200000000296e-05, 3.273599999999849e-05, 3.190200000000032e-05, 3.216600000000014e-05, 3.216600000000014e-05, 3.240300000000029e-05, 3.2750000000005e-05, 3.188900000000022e-05, 3.22779999999967e-05, 3.226399999999713e-05, 3.2374999999994214e-05, 3.205500000000305e-05, 3.22779999999967e-05, 3.226399999999713e-05, 3.222200000000536e-05, 3.179200000000271e-05, 3.218099999999918e-05, 3.25979999999948e-05, 3.20700000000021e-05, 3.215300000000004e-05, 3.229199999999627e-05, 3.191699999999936e-05, 3.224999999999756e-05, 3.176399999999663e-05, 3.174999999999706e-05, 3.223699999999746e-05, 3.224999999999756e-05, 3.2112000000000807e-05, 3.179200000000271e-05, 3.206900000000262e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.235" endtime="20201029 18:15:16.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.223" endtime="20201029 18:15:16.241"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.250" endtime="20201029 18:15:16.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.246" endtime="20201029 18:15:16.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.244" endtime="20201029 18:15:16.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.755" endtime="20201029 18:15:16.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.754" endtime="20201029 18:15:16.275"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.298" endtime="20201029 18:15:16.317"></status>
</kw>
<msg timestamp="20201029 18:15:16.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.295" endtime="20201029 18:15:16.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.321" endtime="20201029 18:15:16.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.327" endtime="20201029 18:15:16.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.288" endtime="20201029 18:15:16.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.282" endtime="20201029 18:15:16.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.350" endtime="20201029 18:15:16.689"></status>
</kw>
<msg timestamp="20201029 18:15:16.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04109425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04112725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:16.347" endtime="20201029 18:15:16.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04109425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04112725, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:16.700" endtime="20201029 18:15:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.718" endtime="20201029 18:15:16.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.340" endtime="20201029 18:15:16.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.335" endtime="20201029 18:15:16.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.736" level="INFO">${RESULT} = [{'diff': 3.299999999999831e-05}, {'diff': 3.322199999999942e-05}, {'diff': 3.31250000000019e-05}, {'diff': 3.370800000000035e-05}, {'diff': 3.290300000000079e-05}, {'diff': 3.358300000000369e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:16.727" endtime="20201029 18:15:16.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:16.745" level="INFO">${ACCURACY} = {'diff': [3.299999999999831e-05, 3.322199999999942e-05, 3.31250000000019e-05, 3.370800000000035e-05, 3.290300000000079e-05, 3.358300000000369e-05, 3.295899999999907e-05, 3.340300000000129e-05, 3.35410...</msg>
<status status="PASS" starttime="20201029 18:15:16.738" endtime="20201029 18:15:16.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.756" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:16.754" endtime="20201029 18:15:16.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.761" level="INFO">VALUE: [3.299999999999831e-05, 3.322199999999942e-05, 3.31250000000019e-05, 3.370800000000035e-05, 3.290300000000079e-05, 3.358300000000369e-05, 3.295899999999907e-05, 3.340300000000129e-05, 3.3541000000004983e-05, 3.3416999999993924e-05, 3.290300000000079e-05, 3.279200000000371e-05, 3.291700000000036e-05, 3.311100000000233e-05, 3.348699999999871e-05, 3.326399999999813e-05, 3.345899999999957e-05, 3.3332999999996504e-05, 3.28050000000038e-05, 3.3360999999995644e-05, 3.3026999999997975e-05, 3.3610999999995894e-05, 3.329199999999727e-05, 3.336100000000258e-05, 3.306900000000362e-05, 3.294400000000003e-05, 3.305600000000353e-05, 3.273599999999849e-05, 3.281900000000337e-05, 3.370800000000035e-05, 3.34580000000001e-05, 3.294400000000003e-05, 3.327800000000464e-05, 3.299999999999831e-05, 3.348599999999924e-05, 3.286199999999462e-05, 3.301399999999788e-05, 3.272199999999892e-05, 3.3374999999995214e-05, 3.348700000000565e-05, 3.36250000000024e-05, 3.291700000000036e-05, 3.298699999999821e-05, 3.3291000000004733e-05, 3.359700000000326e-05, 3.336100000000258e-05, 3.344400000000053e-05, 3.349999999999881e-05, 3.28050000000038e-05, 3.2804999999996864e-05]</msg>
<status status="PASS" starttime="20201029 18:15:16.758" endtime="20201029 18:15:16.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.747" endtime="20201029 18:15:16.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:16.774" endtime="20201029 18:15:16.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.770" endtime="20201029 18:15:16.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.767" endtime="20201029 18:15:16.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.278" endtime="20201029 18:15:16.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.276" endtime="20201029 18:15:16.799"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.821" endtime="20201029 18:15:16.842"></status>
</kw>
<msg timestamp="20201029 18:15:16.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.818" endtime="20201029 18:15:16.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.846" endtime="20201029 18:15:16.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.852" endtime="20201029 18:15:16.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.811" endtime="20201029 18:15:16.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.805" endtime="20201029 18:15:16.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.875" endtime="20201029 18:15:17.213"></status>
</kw>
<msg timestamp="20201029 18:15:17.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042416833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042451333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.872" endtime="20201029 18:15:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042416833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042451333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.223" endtime="20201029 18:15:17.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.243" endtime="20201029 18:15:17.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.865" endtime="20201029 18:15:17.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.860" endtime="20201029 18:15:17.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.263" level="INFO">${RESULT} = [{'diff': 3.449999999999981e-05}, {'diff': 3.384799999999605e-05}, {'diff': 3.411100000000333e-05}, {'diff': 3.4138999999995534e-05}, {'diff': 3.441600000000239e-05}, {'diff': 3.377800000000514e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:17.253" endtime="20201029 18:15:17.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.274" level="INFO">${ACCURACY} = {'diff': [3.449999999999981e-05, 3.384799999999605e-05, 3.411100000000333e-05, 3.4138999999995534e-05, 3.441600000000239e-05, 3.377800000000514e-05, 3.4138999999995534e-05, 3.42500000000065e-05, 3.424...</msg>
<status status="PASS" starttime="20201029 18:15:17.266" endtime="20201029 18:15:17.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.286" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.284" endtime="20201029 18:15:17.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.292" level="INFO">VALUE: [3.449999999999981e-05, 3.384799999999605e-05, 3.411100000000333e-05, 3.4138999999995534e-05, 3.441600000000239e-05, 3.377800000000514e-05, 3.4138999999995534e-05, 3.42500000000065e-05, 3.424999999999956e-05, 3.473600000000049e-05, 3.448600000000024e-05, 3.415200000000257e-05, 3.459700000000426e-05, 3.4554999999998615e-05, 3.3846999999996574e-05, 3.399999999999931e-05, 3.42779999999987e-05, 3.458300000000469e-05, 3.447200000000067e-05, 3.37779999999982e-05, 3.424999999999956e-05, 3.469399999999484e-05, 3.4346999999997074e-05, 3.4445000000001e-05, 3.46250000000034e-05, 3.404200000000496e-05, 3.465300000000254e-05, 3.438900000000272e-05, 3.445900000000057e-05, 3.398599999999974e-05, 3.382000000000385e-05, 3.398599999999974e-05, 3.4110999999996394e-05, 3.423599999999999e-05, 3.4596999999997324e-05, 3.4526999999999475e-05, 3.4012999999999405e-05, 3.392999999999452e-05, 3.46250000000034e-05, 3.374999999999906e-05, 3.413900000000247e-05, 3.402799999999845e-05, 3.418000000000171e-05, 3.459700000000426e-05, 3.466600000000264e-05, 3.380599999999734e-05, 3.372199999999992e-05, 3.424999999999956e-05, 3.431999999999741e-05, 3.424999999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.289" endtime="20201029 18:15:17.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.276" endtime="20201029 18:15:17.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.306" endtime="20201029 18:15:17.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.300" endtime="20201029 18:15:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.298" endtime="20201029 18:15:17.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.801" endtime="20201029 18:15:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.800" endtime="20201029 18:15:17.331"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.354" endtime="20201029 18:15:17.374"></status>
</kw>
<msg timestamp="20201029 18:15:17.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.351" endtime="20201029 18:15:17.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.377" endtime="20201029 18:15:17.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.383" endtime="20201029 18:15:17.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.344" endtime="20201029 18:15:17.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.338" endtime="20201029 18:15:17.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.407" endtime="20201029 18:15:17.745"></status>
</kw>
<msg timestamp="20201029 18:15:17.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.404" endtime="20201029 18:15:17.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041102347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041137222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.754" endtime="20201029 18:15:17.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.773" endtime="20201029 18:15:17.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.396" endtime="20201029 18:15:17.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.392" endtime="20201029 18:15:17.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.790" level="INFO">${RESULT} = [{'diff': 3.487500000000365e-05}, {'diff': 3.487500000000365e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.543100000000243e-05}, {'diff': 3.5652999999996604e-05}, {'diff': 3.473600000000049e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:17.781" endtime="20201029 18:15:17.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:17.805" level="INFO">${ACCURACY} = {'diff': [3.487500000000365e-05, 3.487500000000365e-05, 3.551400000000038e-05, 3.543100000000243e-05, 3.5652999999996604e-05, 3.473600000000049e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.5...</msg>
<status status="PASS" starttime="20201029 18:15:17.792" endtime="20201029 18:15:17.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.815" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:17.813" endtime="20201029 18:15:17.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.821" level="INFO">VALUE: [3.487500000000365e-05, 3.487500000000365e-05, 3.551400000000038e-05, 3.543100000000243e-05, 3.5652999999996604e-05, 3.473600000000049e-05, 3.5388999999996784e-05, 3.5374999999997214e-05, 3.515300000000304e-05, 3.563900000000397e-05, 3.5680999999995744e-05, 3.536100000000458e-05, 3.55700000000056e-05, 3.5694999999995314e-05, 3.483399999999748e-05, 3.552799999999995e-05, 3.537500000000415e-05, 3.511199999999687e-05, 3.569500000000225e-05, 3.550000000000081e-05, 3.5374999999997214e-05, 3.56659999999967e-05, 3.5124999999996964e-05, 3.4818999999998435e-05, 3.486100000000408e-05, 3.550000000000081e-05, 3.542999999999602e-05, 3.516700000000261e-05, 3.548600000000124e-05, 3.502799999999945e-05, 3.573600000000149e-05, 3.484700000000451e-05, 3.5582999999998755e-05, 3.5138999999996534e-05, 3.523600000000099e-05, 3.5526999999993536e-05, 3.522200000000142e-05, 3.5680999999995744e-05, 3.495900000000107e-05, 3.558399999999823e-05, 3.525000000000056e-05, 3.520800000000185e-05, 3.494400000000203e-05, 3.5318999999998935e-05, 3.522200000000142e-05, 3.550000000000081e-05, 3.5124999999996964e-05, 3.5360999999997644e-05, 3.5152999999996104e-05, 3.519399999999534e-05]</msg>
<status status="PASS" starttime="20201029 18:15:17.818" endtime="20201029 18:15:17.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.806" endtime="20201029 18:15:17.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:17.833" endtime="20201029 18:15:17.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.829" endtime="20201029 18:15:17.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.826" endtime="20201029 18:15:17.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.334" endtime="20201029 18:15:17.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.332" endtime="20201029 18:15:17.858"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.881" endtime="20201029 18:15:17.900"></status>
</kw>
<msg timestamp="20201029 18:15:17.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.877" endtime="20201029 18:15:17.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.904" endtime="20201029 18:15:17.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.910" endtime="20201029 18:15:17.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.870" endtime="20201029 18:15:17.915"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.865" endtime="20201029 18:15:17.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.933" endtime="20201029 18:15:18.271"></status>
</kw>
<msg timestamp="20201029 18:15:18.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.930" endtime="20201029 18:15:18.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.280" endtime="20201029 18:15:18.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.299" endtime="20201029 18:15:18.303"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.923" endtime="20201029 18:15:18.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.918" endtime="20201029 18:15:18.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.316" level="INFO">${RESULT} = [{'diff': 3.633399999999898e-05}, {'diff': 3.6332999999999505e-05}, {'diff': 3.647200000000267e-05}, {'diff': 3.579199999999977e-05}, {'diff': 3.6138999999997534e-05}, {'diff': 3.6666999999997174e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:18.307" endtime="20201029 18:15:18.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.327" level="INFO">${ACCURACY} = {'diff': [3.633399999999898e-05, 3.6332999999999505e-05, 3.647200000000267e-05, 3.579199999999977e-05, 3.6138999999997534e-05, 3.6666999999997174e-05, 3.6680999999996744e-05, 3.622200000000242e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:18.318" endtime="20201029 18:15:18.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.338" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.336" endtime="20201029 18:15:18.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.344" level="INFO">VALUE: [3.633399999999898e-05, 3.6332999999999505e-05, 3.647200000000267e-05, 3.579199999999977e-05, 3.6138999999997534e-05, 3.6666999999997174e-05, 3.6680999999996744e-05, 3.622200000000242e-05, 3.5902999999996854e-05, 3.6124999999997964e-05, 3.6055000000000115e-05, 3.6569000000000185e-05, 3.672199999999598e-05, 3.613799999999806e-05, 3.6402999999997354e-05, 3.6444999999996064e-05, 3.6138999999997534e-05, 3.615300000000404e-05, 3.670800000000335e-05, 3.6346999999999074e-05, 3.604200000000002e-05, 3.597199999999523e-05, 3.608399999999873e-05, 3.6332999999999505e-05, 3.6346999999999074e-05, 3.580599999999934e-05, 3.650000000000181e-05, 3.6610999999998894e-05, 3.6694999999996314e-05, 3.64859999999953e-05, 3.606999999999916e-05, 3.6472999999995204e-05, 3.593100000000293e-05, 3.613900000000447e-05, 3.592999999999652e-05, 3.6208999999995384e-05, 3.620800000000285e-05, 3.590300000000379e-05, 3.622199999999548e-05, 3.576400000000063e-05, 3.6138999999997534e-05, 3.61250000000049e-05, 3.6374999999998214e-05, 3.5790999999993356e-05, 3.6360999999998644e-05, 3.642999999999702e-05, 3.6610999999998894e-05, 3.599999999999437e-05, 3.623600000000199e-05, 3.6360999999998644e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.340" endtime="20201029 18:15:18.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.329" endtime="20201029 18:15:18.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.356" endtime="20201029 18:15:18.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.352" endtime="20201029 18:15:18.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.349" endtime="20201029 18:15:18.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.860" endtime="20201029 18:15:18.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.859" endtime="20201029 18:15:18.381"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.404" endtime="20201029 18:15:18.422"></status>
</kw>
<msg timestamp="20201029 18:15:18.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.400" endtime="20201029 18:15:18.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.426" endtime="20201029 18:15:18.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.432" endtime="20201029 18:15:18.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.393" endtime="20201029 18:15:18.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.388" endtime="20201029 18:15:18.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.455" endtime="20201029 18:15:18.792"></status>
</kw>
<msg timestamp="20201029 18:15:18.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040876458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.452" endtime="20201029 18:15:18.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040876458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040913986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.801" endtime="20201029 18:15:18.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.820" endtime="20201029 18:15:18.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.445" endtime="20201029 18:15:18.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.440" endtime="20201029 18:15:18.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.837" level="INFO">${RESULT} = [{'diff': 3.752800000000195e-05}, {'diff': 3.773600000000349e-05}, {'diff': 3.7110999999999394e-05}, {'diff': 3.694400000000403e-05}, {'diff': 3.722199999999648e-05}, {'diff': 3.675000000000206e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:18.828" endtime="20201029 18:15:18.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:18.846" level="INFO">${ACCURACY} = {'diff': [3.752800000000195e-05, 3.773600000000349e-05, 3.7110999999999394e-05, 3.694400000000403e-05, 3.722199999999648e-05, 3.675000000000206e-05, 3.7638999999999034e-05, 3.774999999999612e-05, 3.73...</msg>
<status status="PASS" starttime="20201029 18:15:18.839" endtime="20201029 18:15:18.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.857" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:18.855" endtime="20201029 18:15:18.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.863" level="INFO">VALUE: [3.752800000000195e-05, 3.773600000000349e-05, 3.7110999999999394e-05, 3.694400000000403e-05, 3.722199999999648e-05, 3.675000000000206e-05, 3.7638999999999034e-05, 3.774999999999612e-05, 3.734799999999955e-05, 3.7360999999999644e-05, 3.75979999999998e-05, 3.7444999999997064e-05, 3.736199999999912e-05, 3.716700000000461e-05, 3.737500000000615e-05, 3.715199999999863e-05, 3.7012999999995466e-05, 3.726399999999519e-05, 3.691599999999795e-05, 3.6874999999998714e-05, 3.7402999999998354e-05, 3.6805000000000865e-05, 3.732000000000041e-05, 3.7319000000000935e-05, 3.747200000000367e-05, 3.6916999999997424e-05, 3.751400000000238e-05, 3.681999999999991e-05, 3.705600000000059e-05, 3.7374999999999214e-05, 3.690300000000479e-05, 3.7388999999998784e-05, 3.745900000000357e-05, 3.7472999999996204e-05, 3.752800000000195e-05, 3.7055000000001115e-05, 3.692999999999752e-05, 3.6916999999997424e-05, 3.729200000000127e-05, 3.772200000000392e-05, 3.691599999999795e-05, 3.7291000000001795e-05, 3.750000000000281e-05, 3.675000000000206e-05, 3.702800000000145e-05, 3.704200000000102e-05, 3.7666999999998174e-05, 3.7583000000000755e-05, 3.726400000000213e-05, 3.773600000000349e-05]</msg>
<status status="PASS" starttime="20201029 18:15:18.860" endtime="20201029 18:15:18.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.848" endtime="20201029 18:15:18.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:18.881" endtime="20201029 18:15:18.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.877" endtime="20201029 18:15:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.874" endtime="20201029 18:15:18.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.383" endtime="20201029 18:15:18.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.382" endtime="20201029 18:15:18.906"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.928" endtime="20201029 18:15:18.950"></status>
</kw>
<msg timestamp="20201029 18:15:18.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.925" endtime="20201029 18:15:18.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.953" endtime="20201029 18:15:18.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.959" endtime="20201029 18:15:18.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.918" endtime="20201029 18:15:18.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.912" endtime="20201029 18:15:18.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.983" endtime="20201029 18:15:19.321"></status>
</kw>
<msg timestamp="20201029 18:15:19.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.980" endtime="20201029 18:15:19.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042286014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.331" endtime="20201029 18:15:19.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.349" endtime="20201029 18:15:19.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.972" endtime="20201029 18:15:19.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.967" endtime="20201029 18:15:19.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.367" level="INFO">${RESULT} = [{'diff': 3.8333000000001505e-05}, {'diff': 3.875000000000406e-05}, {'diff': 3.791599999999895e-05}, {'diff': 3.8083000000001255e-05}, {'diff': 3.79859999999968e-05}, {'diff': 3.851400000000338e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:19.358" endtime="20201029 18:15:19.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.376" level="INFO">${ACCURACY} = {'diff': [3.8333000000001505e-05, 3.875000000000406e-05, 3.791599999999895e-05, 3.8083000000001255e-05, 3.79859999999968e-05, 3.851400000000338e-05, 3.7818999999994496e-05, 3.7916999999998424e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:19.369" endtime="20201029 18:15:19.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.387" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.385" endtime="20201029 18:15:19.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.392" level="INFO">VALUE: [3.8333000000001505e-05, 3.875000000000406e-05, 3.791599999999895e-05, 3.8083000000001255e-05, 3.79859999999968e-05, 3.851400000000338e-05, 3.7818999999994496e-05, 3.7916999999998424e-05, 3.826400000000313e-05, 3.7902999999998854e-05, 3.8445000000005e-05, 3.8347000000001075e-05, 3.867999999999927e-05, 3.786199999999962e-05, 3.825000000000356e-05, 3.8458999999997634e-05, 3.8625000000000465e-05, 3.805600000000159e-05, 3.82780000000027e-05, 3.8694999999998314e-05, 3.801400000000288e-05, 3.8304999999995426e-05, 3.869399999999884e-05, 3.8138999999999534e-05, 3.8333000000001505e-05, 3.826400000000313e-05, 3.874999999999712e-05, 3.7805000000001865e-05, 3.802799999999551e-05, 3.801400000000288e-05, 3.82780000000027e-05, 3.869500000000525e-05, 3.8319000000001935e-05, 3.7944999999997564e-05, 3.78059999999944e-05, 3.801399999999594e-05, 3.782000000000091e-05, 3.83059999999949e-05, 3.776399999999569e-05, 3.7944999999997564e-05, 3.770900000000382e-05, 3.782000000000091e-05, 3.802800000000245e-05, 3.836200000000012e-05, 3.863799999999362e-05, 3.84859999999973e-05, 3.8055000000002115e-05, 3.8054999999995176e-05, 3.8054999999995176e-05, 3.817999999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.389" endtime="20201029 18:15:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.378" endtime="20201029 18:15:19.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.406" endtime="20201029 18:15:19.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.400" endtime="20201029 18:15:19.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.398" endtime="20201029 18:15:19.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.908" endtime="20201029 18:15:19.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.907" endtime="20201029 18:15:19.431"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.454" endtime="20201029 18:15:19.473"></status>
</kw>
<msg timestamp="20201029 18:15:19.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.451" endtime="20201029 18:15:19.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.477" endtime="20201029 18:15:19.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.483" endtime="20201029 18:15:19.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.444" endtime="20201029 18:15:19.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.438" endtime="20201029 18:15:19.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.506" endtime="20201029 18:15:19.846"></status>
</kw>
<msg timestamp="20201029 18:15:19.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041219069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.503" endtime="20201029 18:15:19.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041179861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041219069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.855" endtime="20201029 18:15:19.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.874" endtime="20201029 18:15:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.496" endtime="20201029 18:15:19.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.491" endtime="20201029 18:15:19.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.891" level="INFO">${RESULT} = [{'diff': 3.920799999999891e-05}, {'diff': 3.965200000000113e-05}, {'diff': 3.9180999999999244e-05}, {'diff': 3.8875000000000715e-05}, {'diff': 3.9568999999996246e-05}, {'diff': 3.94859999999983e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:19.882" endtime="20201029 18:15:19.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:19.902" level="INFO">${ACCURACY} = {'diff': [3.920799999999891e-05, 3.965200000000113e-05, 3.9180999999999244e-05, 3.8875000000000715e-05, 3.9568999999996246e-05, 3.94859999999983e-05, 3.9597000000002325e-05, 3.9389000000000784e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:19.893" endtime="20201029 18:15:19.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.913" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:19.910" endtime="20201029 18:15:19.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.918" level="INFO">VALUE: [3.920799999999891e-05, 3.965200000000113e-05, 3.9180999999999244e-05, 3.8875000000000715e-05, 3.9568999999996246e-05, 3.94859999999983e-05, 3.9597000000002325e-05, 3.9389000000000784e-05, 3.904199999999608e-05, 3.955600000000309e-05, 3.9708999999998884e-05, 3.904200000000302e-05, 3.9194999999998814e-05, 3.9111000000001395e-05, 3.9389000000000784e-05, 3.941600000000045e-05, 3.877799999999626e-05, 3.902799999999651e-05, 3.905599999999565e-05, 3.8916999999999424e-05, 3.8805000000002865e-05, 3.954199999999658e-05, 3.9388999999993846e-05, 3.965200000000113e-05, 3.970799999999941e-05, 3.9430999999999494e-05, 3.9111000000001395e-05, 3.901399999999694e-05, 3.9347000000002075e-05, 3.8916999999999424e-05, 3.929199999999633e-05, 3.882000000000191e-05, 3.943000000000002e-05, 3.904200000000302e-05, 3.8875000000000715e-05, 3.9610999999994956e-05, 3.927799999999676e-05, 3.9513000000004905e-05, 3.8916999999999424e-05, 3.9139000000000534e-05, 3.9694999999999314e-05, 3.8833000000002005e-05, 3.955599999999615e-05, 3.9139000000000534e-05, 3.9403000000000354e-05, 3.8791000000003295e-05, 3.892999999999952e-05, 3.94859999999983e-05, 3.908400000000173e-05, 3.954199999999658e-05]</msg>
<status status="PASS" starttime="20201029 18:15:19.915" endtime="20201029 18:15:19.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.904" endtime="20201029 18:15:19.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.930" endtime="20201029 18:15:19.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.926" endtime="20201029 18:15:19.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.924" endtime="20201029 18:15:19.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.433" endtime="20201029 18:15:19.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.432" endtime="20201029 18:15:19.955"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.978" endtime="20201029 18:15:19.997"></status>
</kw>
<msg timestamp="20201029 18:15:19.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.975" endtime="20201029 18:15:19.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.001" endtime="20201029 18:15:20.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.007" endtime="20201029 18:15:20.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.967" endtime="20201029 18:15:20.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.962" endtime="20201029 18:15:20.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.032" endtime="20201029 18:15:20.368"></status>
</kw>
<msg timestamp="20201029 18:15:20.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04077175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040811694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:20.029" endtime="20201029 18:15:20.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04077175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040811694, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:20.377" endtime="20201029 18:15:20.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.396" endtime="20201029 18:15:20.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.021" endtime="20201029 18:15:20.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.016" endtime="20201029 18:15:20.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.413" level="INFO">${RESULT} = [{'diff': 3.994400000000009e-05}, {'diff': 4.0625000000002465e-05}, {'diff': 4.0139000000001535e-05}, {'diff': 4.004199999999708e-05}, {'diff': 3.9888999999994346e-05}, {'diff': 3.9804999999996926e-05...</msg>
<status status="PASS" starttime="20201029 18:15:20.405" endtime="20201029 18:15:20.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:20.425" level="INFO">${ACCURACY} = {'diff': [3.994400000000009e-05, 4.0625000000002465e-05, 4.0139000000001535e-05, 4.004199999999708e-05, 3.9888999999994346e-05, 3.9804999999996926e-05, 4.070800000000041e-05, 3.972199999999898e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:20.415" endtime="20201029 18:15:20.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.435" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:20.433" endtime="20201029 18:15:20.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.441" level="INFO">VALUE: [3.994400000000009e-05, 4.0625000000002465e-05, 4.0139000000001535e-05, 4.004199999999708e-05, 3.9888999999994346e-05, 3.9804999999996926e-05, 4.070800000000041e-05, 3.972199999999898e-05, 3.9916999999993485e-05, 3.9972999999998704e-05, 4.0653000000001605e-05, 4.026400000000513e-05, 4.049999999999887e-05, 4.0374999999995276e-05, 4.0305000000004365e-05, 4.047199999999973e-05, 4.024999999999862e-05, 4.048600000000624e-05, 4.0681000000000744e-05, 4.049999999999887e-05, 4.0667000000001174e-05, 3.9833000000003005e-05, 4.049999999999887e-05, 4.0361000000002645e-05, 3.9805000000003865e-05, 4.020799999999991e-05, 4.052799999999801e-05, 4.022199999999948e-05, 4.0097000000002825e-05, 3.993000000000052e-05, 4.0346999999996136e-05, 4.0582999999996816e-05, 3.982000000000291e-05, 4.005600000000359e-05, 4.0375000000002215e-05, 3.991600000000095e-05, 3.982000000000291e-05, 4.0695000000000314e-05, 3.983399999999554e-05, 4.0139000000001535e-05, 4.0097000000002825e-05, 4.0375000000002215e-05, 4.0583000000003755e-05, 4.0069000000003685e-05, 4.0360999999995706e-05, 4.0096999999995886e-05, 4.0124999999995026e-05, 4.016599999999426e-05, 4.0055000000004115e-05, 3.9861000000002145e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.438" endtime="20201029 18:15:20.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.426" endtime="20201029 18:15:20.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.453" endtime="20201029 18:15:20.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.449" endtime="20201029 18:15:20.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.447" endtime="20201029 18:15:20.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.957" endtime="20201029 18:15:20.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.956" endtime="20201029 18:15:20.478"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.506" endtime="20201029 18:15:20.531"></status>
</kw>
<msg timestamp="20201029 18:15:20.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.501" endtime="20201029 18:15:20.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.535" endtime="20201029 18:15:20.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.546" endtime="20201029 18:15:20.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.493" endtime="20201029 18:15:20.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.486" endtime="20201029 18:15:20.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.577" endtime="20201029 18:15:20.968"></status>
</kw>
<msg timestamp="20201029 18:15:20.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046743944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.571" endtime="20201029 18:15:20.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046702875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046743944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.978" endtime="20201029 18:15:20.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.998" endtime="20201029 18:15:21.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.560" endtime="20201029 18:15:21.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.555" endtime="20201029 18:15:21.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.017" level="INFO">${RESULT} = [{'diff': 4.1069000000004685e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.142999999999508e-05}, {'diff': 4.1138999999995596e-05}, {'diff': 4.167999999999533e-05}, {'diff': 4.1554999999998676e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:21.007" endtime="20201029 18:15:21.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.027" level="INFO">${ACCURACY} = {'diff': [4.1069000000004685e-05, 4.09859999999998e-05, 4.142999999999508e-05, 4.1138999999995596e-05, 4.167999999999533e-05, 4.1554999999998676e-05, 4.14860000000003e-05, 4.0875000000002715e-05, 4.11...</msg>
<status status="PASS" starttime="20201029 18:15:21.019" endtime="20201029 18:15:21.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.040" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.037" endtime="20201029 18:15:21.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.046" level="INFO">VALUE: [4.1069000000004685e-05, 4.09859999999998e-05, 4.142999999999508e-05, 4.1138999999995596e-05, 4.167999999999533e-05, 4.1554999999998676e-05, 4.14860000000003e-05, 4.0875000000002715e-05, 4.1153000000002105e-05, 4.1611000000003895e-05, 4.1138999999995596e-05, 4.1195000000000814e-05, 4.1402999999995416e-05, 4.123600000000005e-05, 4.1125000000002965e-05, 4.140199999999594e-05, 4.1709000000000884e-05, 4.0917000000001424e-05, 4.1554999999998676e-05, 4.0917000000001424e-05, 4.094400000000109e-05, 4.0776999999998786e-05, 4.1361000000003645e-05, 4.144400000000159e-05, 4.090200000000238e-05, 4.074999999999912e-05, 4.1596999999997386e-05, 4.147200000000073e-05, 4.145799999999422e-05, 4.1653000000002605e-05, 4.1209000000000384e-05, 4.099999999999937e-05, 4.14860000000003e-05, 4.105600000000459e-05, 4.1473000000000204e-05, 4.12780000000057e-05, 4.126399999999919e-05, 4.152800000000595e-05, 4.1695000000001314e-05, 4.0832999999997066e-05, 4.1611000000003895e-05, 4.1209000000000384e-05, 4.172200000000098e-05, 4.1625000000003465e-05, 4.14860000000003e-05, 4.0931000000000994e-05, 4.1541000000006045e-05, 4.0818999999997496e-05, 4.1361000000003645e-05, 4.1417000000001924e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.042" endtime="20201029 18:15:21.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.029" endtime="20201029 18:15:21.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.066" endtime="20201029 18:15:21.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.061" endtime="20201029 18:15:21.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.059" endtime="20201029 18:15:21.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.481" endtime="20201029 18:15:21.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.479" endtime="20201029 18:15:21.092"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.115" endtime="20201029 18:15:21.136"></status>
</kw>
<msg timestamp="20201029 18:15:21.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.111" endtime="20201029 18:15:21.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.140" endtime="20201029 18:15:21.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.146" endtime="20201029 18:15:21.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.104" endtime="20201029 18:15:21.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.098" endtime="20201029 18:15:21.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.171" endtime="20201029 18:15:21.511"></status>
</kw>
<msg timestamp="20201029 18:15:21.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043766569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.168" endtime="20201029 18:15:21.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043724792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043766569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.520" endtime="20201029 18:15:21.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.539" endtime="20201029 18:15:21.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.160" endtime="20201029 18:15:21.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.155" endtime="20201029 18:15:21.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.557" level="INFO">${RESULT} = [{'diff': 4.1776999999999787e-05}, {'diff': 4.272200000000198e-05}, {'diff': 4.245799999999522e-05}, {'diff': 4.218000000000277e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.223600000000105e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:21.548" endtime="20201029 18:15:21.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:21.566" level="INFO">${ACCURACY} = {'diff': [4.1776999999999787e-05, 4.272200000000198e-05, 4.245799999999522e-05, 4.218000000000277e-05, 4.243000000000302e-05, 4.223600000000105e-05, 4.2360999999997706e-05, 4.1832999999998066e-05, 4.1...</msg>
<status status="PASS" starttime="20201029 18:15:21.559" endtime="20201029 18:15:21.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.577" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:15:21.575" endtime="20201029 18:15:21.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.582" level="INFO">VALUE: [4.1776999999999787e-05, 4.272200000000198e-05, 4.245799999999522e-05, 4.218000000000277e-05, 4.243000000000302e-05, 4.223600000000105e-05, 4.2360999999997706e-05, 4.1832999999998066e-05, 4.1819000000005435e-05, 4.217999999999583e-05, 4.2332999999998566e-05, 4.23059999999989e-05, 4.223600000000105e-05, 4.1832999999998066e-05, 4.2166999999995736e-05, 4.220799999999497e-05, 4.1945000000001564e-05, 4.206999999999822e-05, 4.2360999999997706e-05, 4.2138999999996596e-05, 4.1903000000002855e-05, 4.2374999999997276e-05, 4.194400000000209e-05, 4.238799999999737e-05, 4.274999999999418e-05, 4.2582999999998816e-05, 4.223599999999411e-05, 4.229199999999933e-05, 4.2318999999998996e-05, 4.2375000000004215e-05, 4.2403000000003355e-05, 4.272199999999504e-05, 4.2666999999996236e-05, 4.176399999999969e-05, 4.1832999999998066e-05, 4.201399999999994e-05, 4.256999999999872e-05, 4.202799999999951e-05, 4.205599999999865e-05, 4.182000000000491e-05, 4.1930999999995056e-05, 4.183399999999754e-05, 4.2487000000000774e-05, 4.1930999999995056e-05, 4.1916999999995486e-05, 4.18059999999984e-05, 4.1832999999998066e-05, 4.247199999999479e-05, 4.272200000000198e-05, 4.1776999999999787e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.579" endtime="20201029 18:15:21.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.568" endtime="20201029 18:15:21.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.597" endtime="20201029 18:15:21.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.591" endtime="20201029 18:15:21.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.588" endtime="20201029 18:15:21.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.094" endtime="20201029 18:15:21.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.093" endtime="20201029 18:15:21.622"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.644" endtime="20201029 18:15:21.664"></status>
</kw>
<msg timestamp="20201029 18:15:21.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.641" endtime="20201029 18:15:21.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.667" endtime="20201029 18:15:21.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.673" endtime="20201029 18:15:21.677"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.634" endtime="20201029 18:15:21.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.628" endtime="20201029 18:15:21.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.697" endtime="20201029 18:15:22.036"></status>
</kw>
<msg timestamp="20201029 18:15:22.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041054528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.694" endtime="20201029 18:15:22.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041054528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041097319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.046" endtime="20201029 18:15:22.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.064" endtime="20201029 18:15:22.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.686" endtime="20201029 18:15:22.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.681" endtime="20201029 18:15:22.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.081" level="INFO">${RESULT} = [{'diff': 4.2791000000000357e-05}, {'diff': 4.3055000000000176e-05}, {'diff': 4.348599999999536e-05}, {'diff': 4.270800000000241e-05}, {'diff': 4.367999999999733e-05}, {'diff': 4.327800000000076e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:22.073" endtime="20201029 18:15:22.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.093" level="INFO">${ACCURACY} = {'diff': [4.2791000000000357e-05, 4.3055000000000176e-05, 4.348599999999536e-05, 4.270800000000241e-05, 4.367999999999733e-05, 4.327800000000076e-05, 4.3346999999999136e-05, 4.293000000000352e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:15:22.084" endtime="20201029 18:15:22.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.104" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.102" endtime="20201029 18:15:22.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.110" level="INFO">VALUE: [4.2791000000000357e-05, 4.3055000000000176e-05, 4.348599999999536e-05, 4.270800000000241e-05, 4.367999999999733e-05, 4.327800000000076e-05, 4.3346999999999136e-05, 4.293000000000352e-05, 4.281999999999897e-05, 4.281999999999897e-05, 4.283400000000548e-05, 4.347199999999579e-05, 4.3181000000003245e-05, 4.327800000000076e-05, 4.3125000000004965e-05, 4.323600000000205e-05, 4.28059999999994e-05, 4.3374999999998276e-05, 4.356999999999972e-05, 4.2818999999999496e-05, 4.3361000000005645e-05, 4.348599999999536e-05, 4.3375000000005215e-05, 4.320799999999597e-05, 4.3152999999997166e-05, 4.3582999999999816e-05, 4.304200000000008e-05, 4.3125000000004965e-05, 4.3152999999997166e-05, 4.323600000000205e-05, 4.282000000000591e-05, 4.3181000000003245e-05, 4.325000000000162e-05, 4.3458999999995696e-05, 4.304200000000008e-05, 4.3360999999998706e-05, 4.3487000000001774e-05, 4.3610999999998956e-05, 4.306999999999922e-05, 4.340199999999794e-05, 4.290200000000438e-05, 4.347200000000273e-05, 4.295800000000266e-05, 4.3361000000005645e-05, 4.302700000000104e-05, 4.352800000000101e-05, 4.276400000000069e-05, 4.304200000000008e-05, 4.2958999999995195e-05, 4.272200000000198e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.107" endtime="20201029 18:15:22.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.095" endtime="20201029 18:15:22.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.123" endtime="20201029 18:15:22.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.119" endtime="20201029 18:15:22.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.116" endtime="20201029 18:15:22.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.624" endtime="20201029 18:15:22.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.622" endtime="20201029 18:15:22.148"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.171" endtime="20201029 18:15:22.192"></status>
</kw>
<msg timestamp="20201029 18:15:22.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.168" endtime="20201029 18:15:22.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.195" endtime="20201029 18:15:22.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.201" endtime="20201029 18:15:22.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.161" endtime="20201029 18:15:22.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.155" endtime="20201029 18:15:22.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.225" endtime="20201029 18:15:22.562"></status>
</kw>
<msg timestamp="20201029 18:15:22.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041152236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.221" endtime="20201029 18:15:22.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041108264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041152236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.572" endtime="20201029 18:15:22.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.590" endtime="20201029 18:15:22.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.214" endtime="20201029 18:15:22.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.210" endtime="20201029 18:15:22.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.608" level="INFO">${RESULT} = [{'diff': 4.397200000000323e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4694999999997376e-05}, {'diff': 4.425000000000262e-05}, {'diff': 4.4124999999999026e-05...</msg>
<status status="PASS" starttime="20201029 18:15:22.599" endtime="20201029 18:15:22.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:22.619" level="INFO">${ACCURACY} = {'diff': [4.397200000000323e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.4694999999997376e-05, 4.425000000000262e-05, 4.4124999999999026e-05, 4.3860999999999206e-05, 4.4402999999998416e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:22.610" endtime="20201029 18:15:22.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.630" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:15:22.627" endtime="20201029 18:15:22.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.635" level="INFO">VALUE: [4.397200000000323e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.4694999999997376e-05, 4.425000000000262e-05, 4.4124999999999026e-05, 4.3860999999999206e-05, 4.4402999999998416e-05, 4.4709000000003885e-05, 4.4473000000003204e-05, 4.404200000000108e-05, 4.461199999999943e-05, 4.442999999999808e-05, 4.402700000000204e-05, 4.426300000000272e-05, 4.472199999999704e-05, 4.404100000000161e-05, 4.4388999999998846e-05, 4.4583000000000816e-05, 4.4610999999999956e-05, 4.409799999999936e-05, 4.427800000000176e-05, 4.4597000000000386e-05, 4.43060000000009e-05, 4.402800000000151e-05, 4.4152999999998166e-05, 4.407000000000022e-05, 4.3846999999999636e-05, 4.429099999999492e-05, 4.3737000000002024e-05, 4.41660000000052e-05, 4.425000000000262e-05, 4.3819000000000496e-05, 4.467999999999833e-05, 4.445800000000416e-05, 4.4096999999999886e-05, 4.391600000000495e-05, 4.4152999999998166e-05, 4.376400000000169e-05, 4.433299999999363e-05, 4.448599999999636e-05, 4.381999999999997e-05, 4.426400000000219e-05, 4.377799999999432e-05, 4.4416999999997986e-05, 4.3888999999998346e-05, 4.4402999999998416e-05, 4.458400000000029e-05, 4.4402999999998416e-05, 4.4069000000000746e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.632" endtime="20201029 18:15:22.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.621" endtime="20201029 18:15:22.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.648" endtime="20201029 18:15:22.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.643" endtime="20201029 18:15:22.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.641" endtime="20201029 18:15:22.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.150" endtime="20201029 18:15:22.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.149" endtime="20201029 18:15:22.673"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.696" endtime="20201029 18:15:22.717"></status>
</kw>
<msg timestamp="20201029 18:15:22.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.692" endtime="20201029 18:15:22.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.720" endtime="20201029 18:15:22.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.726" endtime="20201029 18:15:22.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.685" endtime="20201029 18:15:22.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.679" endtime="20201029 18:15:22.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.750" endtime="20201029 18:15:23.096"></status>
</kw>
<msg timestamp="20201029 18:15:23.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041258403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041303153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.747" endtime="20201029 18:15:23.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041258403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041303153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.106" endtime="20201029 18:15:23.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.125" endtime="20201029 18:15:23.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.739" endtime="20201029 18:15:23.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.735" endtime="20201029 18:15:23.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.143" level="INFO">${RESULT} = [{'diff': 4.475000000000312e-05}, {'diff': 4.5708999999997946e-05}, {'diff': 4.484800000000011e-05}, {'diff': 4.511199999999993e-05}, {'diff': 4.527800000000276e-05}, {'diff': 4.530500000000243e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:23.134" endtime="20201029 18:15:23.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.153" level="INFO">${ACCURACY} = {'diff': [4.475000000000312e-05, 4.5708999999997946e-05, 4.484800000000011e-05, 4.511199999999993e-05, 4.527800000000276e-05, 4.530500000000243e-05, 4.540199999999994e-05, 4.575000000000412e-05, 4.561...</msg>
<status status="PASS" starttime="20201029 18:15:23.145" endtime="20201029 18:15:23.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.164" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.162" endtime="20201029 18:15:23.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.169" level="INFO">VALUE: [4.475000000000312e-05, 4.5708999999997946e-05, 4.484800000000011e-05, 4.511199999999993e-05, 4.527800000000276e-05, 4.530500000000243e-05, 4.540199999999994e-05, 4.575000000000412e-05, 4.5611000000000956e-05, 4.5388999999999846e-05, 4.4945000000004565e-05, 4.5138999999999596e-05, 4.4833000000001066e-05, 4.572200000000498e-05, 4.5097000000000886e-05, 4.5097000000000886e-05, 4.5361000000000706e-05, 4.536099999999377e-05, 4.504200000000208e-05, 4.48060000000014e-05, 4.556999999999478e-05, 4.534800000000061e-05, 4.5361000000000706e-05, 4.5709000000004885e-05, 4.5097000000000886e-05, 4.4861000000000206e-05, 4.492999999999858e-05, 4.5416999999998986e-05, 4.55139999999965e-05, 4.4888999999999346e-05, 4.5069000000001747e-05, 4.480500000000193e-05, 4.549999999999693e-05, 4.5375000000000276e-05, 4.4916999999998486e-05, 4.5152999999999166e-05, 4.473600000000355e-05, 4.5180999999998306e-05, 4.5097000000000886e-05, 4.565200000000019e-05, 4.4819000000001497e-05, 4.5237000000003524e-05, 4.558400000000129e-05, 4.559800000000086e-05, 4.48060000000014e-05, 4.5597000000001386e-05, 4.523599999999711e-05, 4.551400000000344e-05, 4.5388999999999846e-05, 4.500000000000337e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.166" endtime="20201029 18:15:23.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.155" endtime="20201029 18:15:23.172"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.182" endtime="20201029 18:15:23.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.178" endtime="20201029 18:15:23.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.175" endtime="20201029 18:15:23.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.675" endtime="20201029 18:15:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.674" endtime="20201029 18:15:23.207"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.229" endtime="20201029 18:15:23.252"></status>
</kw>
<msg timestamp="20201029 18:15:23.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.226" endtime="20201029 18:15:23.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.255" endtime="20201029 18:15:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.261" endtime="20201029 18:15:23.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.219" endtime="20201029 18:15:23.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.213" endtime="20201029 18:15:23.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.284" endtime="20201029 18:15:23.623"></status>
</kw>
<msg timestamp="20201029 18:15:23.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.281" endtime="20201029 18:15:23.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042555653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042602097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.632" endtime="20201029 18:15:23.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.651" endtime="20201029 18:15:23.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.274" endtime="20201029 18:15:23.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.269" endtime="20201029 18:15:23.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:23.668" level="INFO">${RESULT} = [{'diff': 4.644399999999965e-05}, {'diff': 4.580500000000293e-05}, {'diff': 4.649999999999793e-05}, {'diff': 4.623599999999811e-05}, {'diff': 4.650000000000487e-05}, {'diff': 4.6389000000000846e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:23.660" endtime="20201029 18:15:23.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:23.678" level="INFO">${ACCURACY} = {'diff': [4.644399999999965e-05, 4.580500000000293e-05, 4.649999999999793e-05, 4.623599999999811e-05, 4.650000000000487e-05, 4.6389000000000846e-05, 4.58060000000024e-05, 4.607000000000222e-05, 4.6097...</msg>
<status status="PASS" starttime="20201029 18:15:23.670" endtime="20201029 18:15:23.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.688" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:15:23.686" endtime="20201029 18:15:23.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.694" level="INFO">VALUE: [4.644399999999965e-05, 4.580500000000293e-05, 4.649999999999793e-05, 4.623599999999811e-05, 4.650000000000487e-05, 4.6389000000000846e-05, 4.58060000000024e-05, 4.607000000000222e-05, 4.6097000000001886e-05, 4.5847000000001636e-05, 4.572199999999804e-05, 4.626400000000419e-05, 4.572199999999804e-05, 4.673600000000555e-05, 4.6153000000000166e-05, 4.66939999999999e-05, 4.6639000000001096e-05, 4.6319000000003e-05, 4.66939999999999e-05, 4.6347000000002136e-05, 4.6319000000003e-05, 4.624999999999768e-05, 4.595799999999872e-05, 4.608400000000179e-05, 4.647200000000573e-05, 4.623599999999811e-05, 4.6166999999999736e-05, 4.626399999999725e-05, 4.59860000000048e-05, 4.5916999999999486e-05, 4.605600000000265e-05, 4.6472999999998266e-05, 4.6013999999997e-05, 4.626399999999725e-05, 4.609699999999495e-05, 4.582000000000197e-05, 4.58060000000024e-05, 4.58190000000025e-05, 4.5861000000001206e-05, 4.605499999999624e-05, 4.605600000000265e-05, 4.65139999999975e-05, 4.6166999999999736e-05, 4.6361000000001706e-05, 4.5833000000002067e-05, 4.6361000000001706e-05, 4.647199999999879e-05, 4.63469999999952e-05, 4.605600000000265e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201029 18:15:23.691" endtime="20201029 18:15:23.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.679" endtime="20201029 18:15:23.697"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:23.708" endtime="20201029 18:15:23.729"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.702" endtime="20201029 18:15:23.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.700" endtime="20201029 18:15:23.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.209" endtime="20201029 18:15:23.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.208" endtime="20201029 18:15:23.733"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.756" endtime="20201029 18:15:23.776"></status>
</kw>
<msg timestamp="20201029 18:15:23.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.752" endtime="20201029 18:15:23.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:23.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:23.779" endtime="20201029 18:15:23.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.786" endtime="20201029 18:15:23.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.745" endtime="20201029 18:15:23.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.739" endtime="20201029 18:15:23.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:23.809" endtime="20201029 18:15:24.102"></status>
</kw>
<msg timestamp="20201029 18:15:24.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041160861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:23.806" endtime="20201029 18:15:24.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041160861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041208389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.106" endtime="20201029 18:15:24.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.114" endtime="20201029 18:15:24.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.798" endtime="20201029 18:15:24.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.794" endtime="20201029 18:15:24.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.122" level="INFO">${RESULT} = [{'diff': 4.752799999999807e-05}, {'diff': 4.6931000000000056e-05}, {'diff': 4.680599999999646e-05}, {'diff': 4.749999999999893e-05}, {'diff': 4.7111000000002456e-05}, {'diff': 4.6931000000000056e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:24.118" endtime="20201029 18:15:24.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.127" level="INFO">${ACCURACY} = {'diff': [4.752799999999807e-05, 4.6931000000000056e-05, 4.680599999999646e-05, 4.749999999999893e-05, 4.7111000000002456e-05, 4.6931000000000056e-05, 4.681899999999656e-05, 4.7167000000000736e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:15:24.123" endtime="20201029 18:15:24.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.132" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.131" endtime="20201029 18:15:24.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.135" level="INFO">VALUE: [4.752799999999807e-05, 4.6931000000000056e-05, 4.680599999999646e-05, 4.749999999999893e-05, 4.7111000000002456e-05, 4.6931000000000056e-05, 4.681899999999656e-05, 4.7167000000000736e-05, 4.693000000000058e-05, 4.7361000000002706e-05, 4.718000000000083e-05, 4.704099999999767e-05, 4.737499999999534e-05, 4.745800000000022e-05, 4.7389000000001846e-05, 4.715299999999423e-05, 4.723599999999911e-05, 4.744400000000065e-05, 4.7611000000002957e-05, 4.755599999999721e-05, 4.6931000000000056e-05, 4.6875000000001776e-05, 4.698599999999886e-05, 4.716600000000126e-05, 4.7111000000002456e-05, 4.702799999999757e-05, 4.68469999999957e-05, 4.731899999999706e-05, 4.7651999999995254e-05, 4.683299999999613e-05, 4.749999999999893e-05, 4.741699999999405e-05, 4.675000000000512e-05, 4.670799999999947e-05, 4.679199999999689e-05, 4.702799999999757e-05, 4.7361000000002706e-05, 4.708400000000279e-05, 4.745800000000022e-05, 4.7708999999999946e-05, 4.6903000000000916e-05, 4.7153000000001166e-05, 4.7681000000000806e-05, 4.759800000000286e-05, 4.727700000000529e-05, 4.680599999999646e-05, 4.683400000000254e-05, 4.726400000000519e-05, 4.7347000000003137e-05, 4.7625000000002526e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.134" endtime="20201029 18:15:24.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.128" endtime="20201029 18:15:24.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.147" endtime="20201029 18:15:24.166"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.145" endtime="20201029 18:15:24.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.143" endtime="20201029 18:15:24.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.735" endtime="20201029 18:15:24.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:23.734" endtime="20201029 18:15:24.168"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.188" endtime="20201029 18:15:24.208"></status>
</kw>
<msg timestamp="20201029 18:15:24.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.184" endtime="20201029 18:15:24.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.211" endtime="20201029 18:15:24.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.218" endtime="20201029 18:15:24.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.177" endtime="20201029 18:15:24.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.171" endtime="20201029 18:15:24.224"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.241" endtime="20201029 18:15:24.584"></status>
</kw>
<msg timestamp="20201029 18:15:24.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034788083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.238" endtime="20201029 18:15:24.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034740333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034788083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.593" endtime="20201029 18:15:24.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.612" endtime="20201029 18:15:24.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.230" endtime="20201029 18:15:24.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.226" endtime="20201029 18:15:24.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.630" level="INFO">${RESULT} = [{'diff': 4.774999999999918e-05}, {'diff': 4.815299999999523e-05}, {'diff': 4.804099999999867e-05}, {'diff': 4.83060000000049e-05}, {'diff': 4.8681000000001806e-05}, {'diff': 4.779199999999789e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.621" endtime="20201029 18:15:24.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:24.641" level="INFO">${ACCURACY} = {'diff': [4.774999999999918e-05, 4.815299999999523e-05, 4.804099999999867e-05, 4.83060000000049e-05, 4.8681000000001806e-05, 4.779199999999789e-05, 4.8611000000003957e-05, 4.795800000000072e-05, 4.805...</msg>
<status status="PASS" starttime="20201029 18:15:24.632" endtime="20201029 18:15:24.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.652" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:15:24.649" endtime="20201029 18:15:24.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.657" level="INFO">VALUE: [4.774999999999918e-05, 4.815299999999523e-05, 4.804099999999867e-05, 4.83060000000049e-05, 4.8681000000001806e-05, 4.779199999999789e-05, 4.8611000000003957e-05, 4.795800000000072e-05, 4.805599999999771e-05, 4.777799999999832e-05, 4.837499999999634e-05, 4.8361000000003707e-05, 4.8695000000001376e-05, 4.8709000000000946e-05, 4.834800000000361e-05, 4.813899999999566e-05, 4.827799999999882e-05, 4.85269999999996e-05, 4.836099999999677e-05, 4.848600000000036e-05, 4.795799999999378e-05, 4.815299999999523e-05, 4.826399999999925e-05, 4.7903000000001916e-05, 4.8139000000002596e-05, 4.859699999999745e-05, 4.7917000000001486e-05, 4.7917000000001486e-05, 4.7931000000001056e-05, 4.7945000000000626e-05, 4.851300000000003e-05, 4.845800000000122e-05, 4.844499999999419e-05, 4.852799999999907e-05, 4.815299999999523e-05, 4.8139000000002596e-05, 4.7929999999994644e-05, 4.862499999999659e-05, 4.794400000000115e-05, 4.847200000000079e-05, 4.81940000000014e-05, 4.848600000000036e-05, 4.862499999999659e-05, 4.805499999999824e-05, 4.832000000000447e-05, 4.847200000000079e-05, 4.8431000000001556e-05, 4.779200000000483e-05, 4.862499999999659e-05, 4.829200000000533e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.654" endtime="20201029 18:15:24.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.642" endtime="20201029 18:15:24.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.670" endtime="20201029 18:15:24.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.665" endtime="20201029 18:15:24.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.663" endtime="20201029 18:15:24.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.169" endtime="20201029 18:15:24.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.169" endtime="20201029 18:15:24.695"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.717" endtime="20201029 18:15:24.738"></status>
</kw>
<msg timestamp="20201029 18:15:24.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.714" endtime="20201029 18:15:24.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.742" endtime="20201029 18:15:24.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.748" endtime="20201029 18:15:24.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.707" endtime="20201029 18:15:24.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.701" endtime="20201029 18:15:24.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.771" endtime="20201029 18:15:25.112"></status>
</kw>
<msg timestamp="20201029 18:15:25.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.768" endtime="20201029 18:15:25.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040924139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.122" endtime="20201029 18:15:25.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.140" endtime="20201029 18:15:25.144"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.761" endtime="20201029 18:15:25.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.756" endtime="20201029 18:15:25.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.158" level="INFO">${RESULT} = [{'diff': 4.879199999999889e-05}, {'diff': 4.894400000000215e-05}, {'diff': 4.944400000000265e-05}, {'diff': 4.886100000000421e-05}, {'diff': 4.9681000000002806e-05}, {'diff': 4.958299999999888e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:25.149" endtime="20201029 18:15:25.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.167" level="INFO">${ACCURACY} = {'diff': [4.879199999999889e-05, 4.894400000000215e-05, 4.944400000000265e-05, 4.886100000000421e-05, 4.9681000000002806e-05, 4.958299999999888e-05, 4.9389000000003846e-05, 4.926400000000025e-05, 4.90...</msg>
<status status="PASS" starttime="20201029 18:15:25.160" endtime="20201029 18:15:25.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.178" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.176" endtime="20201029 18:15:25.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.184" level="INFO">VALUE: [4.879199999999889e-05, 4.894400000000215e-05, 4.944400000000265e-05, 4.886100000000421e-05, 4.9681000000002806e-05, 4.958299999999888e-05, 4.9389000000003846e-05, 4.926400000000025e-05, 4.9014e-05, 4.905600000000565e-05, 4.925000000000068e-05, 4.931899999999906e-05, 4.974999999999424e-05, 4.948600000000136e-05, 4.9389000000003846e-05, 4.933299999999863e-05, 4.891600000000301e-05, 4.950000000000093e-05, 4.909699999999795e-05, 4.8875000000003777e-05, 4.926400000000025e-05, 4.9125000000004027e-05, 4.938899999999691e-05, 4.879199999999889e-05, 4.937499999999734e-05, 4.912499999999709e-05, 4.9681000000002806e-05, 4.940200000000394e-05, 4.8889000000003346e-05, 4.884800000000411e-05, 4.913899999999666e-05, 4.883299999999813e-05, 4.891600000000301e-05, 4.918000000000283e-05, 4.926400000000025e-05, 4.90270000000001e-05, 4.927799999999982e-05, 4.937499999999734e-05, 4.880599999999846e-05, 4.923600000000111e-05, 4.950000000000093e-05, 4.915299999999623e-05, 4.9667000000003236e-05, 4.9709000000001946e-05, 4.926400000000025e-05, 4.881999999999803e-05, 4.9459000000001696e-05, 4.883400000000454e-05, 4.904200000000608e-05, 4.925000000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.181" endtime="20201029 18:15:25.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.169" endtime="20201029 18:15:25.188"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.197" endtime="20201029 18:15:25.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.193" endtime="20201029 18:15:25.221"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.190" endtime="20201029 18:15:25.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.697" endtime="20201029 18:15:25.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.696" endtime="20201029 18:15:25.223"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.245" endtime="20201029 18:15:25.268"></status>
</kw>
<msg timestamp="20201029 18:15:25.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.242" endtime="20201029 18:15:25.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.271" endtime="20201029 18:15:25.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.277" endtime="20201029 18:15:25.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.235" endtime="20201029 18:15:25.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.229" endtime="20201029 18:15:25.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.301" endtime="20201029 18:15:25.638"></status>
</kw>
<msg timestamp="20201029 18:15:25.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042980083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043030167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.297" endtime="20201029 18:15:25.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042980083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043030167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.647" endtime="20201029 18:15:25.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.666" endtime="20201029 18:15:25.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.290" endtime="20201029 18:15:25.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.285" endtime="20201029 18:15:25.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.683" level="INFO">${RESULT} = [{'diff': 5.008399999999885e-05}, {'diff': 5.070899999999601e-05}, {'diff': 4.984799999999817e-05}, {'diff': 5.004099999999373e-05}, {'diff': 4.994400000000315e-05}, {'diff': 5.0139000000004597e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:25.675" endtime="20201029 18:15:25.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:25.693" level="INFO">${ACCURACY} = {'diff': [5.008399999999885e-05, 5.070899999999601e-05, 4.984799999999817e-05, 5.004099999999373e-05, 4.994400000000315e-05, 5.0139000000004597e-05, 5.05140000000015e-05, 5.043000000000408e-05, 5.0152...</msg>
<status status="PASS" starttime="20201029 18:15:25.685" endtime="20201029 18:15:25.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.704" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:15:25.701" endtime="20201029 18:15:25.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.709" level="INFO">VALUE: [5.008399999999885e-05, 5.070899999999601e-05, 4.984799999999817e-05, 5.004099999999373e-05, 4.994400000000315e-05, 5.0139000000004597e-05, 5.05140000000015e-05, 5.043000000000408e-05, 5.015299999999723e-05, 4.983300000000607e-05, 5.0707999999996534e-05, 4.970800000000247e-05, 4.975000000000118e-05, 5.038899999999791e-05, 4.981999999999903e-05, 5.0459000000002696e-05, 4.993000000000358e-05, 5.069499999999644e-05, 5.029200000000039e-05, 5.009700000000589e-05, 5.055600000000021e-05, 5.027800000000082e-05, 5.023600000000211e-05, 5.048600000000236e-05, 5.058299999999988e-05, 5.023600000000211e-05, 5.030500000000049e-05, 4.994400000000315e-05, 5.037499999999834e-05, 5.05140000000015e-05, 4.987499999999784e-05, 5.019499999999594e-05, 5.048600000000236e-05, 5.007000000000622e-05, 4.973600000000161e-05, 5.002800000000057e-05, 4.995800000000272e-05, 5.043099999999662e-05, 5.012500000000503e-05, 4.993099999999612e-05, 5.059699999999945e-05, 5.05140000000015e-05, 5.054100000000117e-05, 5.0401999999998004e-05, 5.03469999999992e-05, 4.980499999999999e-05, 5.004200000000014e-05, 5.027799999999388e-05, 5.013899999999766e-05, 4.995800000000272e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.706" endtime="20201029 18:15:25.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.694" endtime="20201029 18:15:25.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.725" endtime="20201029 18:15:25.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.718" endtime="20201029 18:15:25.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.715" endtime="20201029 18:15:25.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.225" endtime="20201029 18:15:25.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.224" endtime="20201029 18:15:25.750"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.773" endtime="20201029 18:15:25.793"></status>
</kw>
<msg timestamp="20201029 18:15:25.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.770" endtime="20201029 18:15:25.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.796" endtime="20201029 18:15:25.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.803" endtime="20201029 18:15:25.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.763" endtime="20201029 18:15:25.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.757" endtime="20201029 18:15:25.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.826" endtime="20201029 18:15:26.165"></status>
</kw>
<msg timestamp="20201029 18:15:26.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041371306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.823" endtime="20201029 18:15:26.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041319903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041371306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.174" endtime="20201029 18:15:26.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.193" endtime="20201029 18:15:26.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.816" endtime="20201029 18:15:26.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.811" endtime="20201029 18:15:26.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.210" level="INFO">${RESULT} = [{'diff': 5.140299999999848e-05}, {'diff': 5.1693999999997964e-05}, {'diff': 5.137499999999934e-05}, {'diff': 5.169499999999744e-05}, {'diff': 5.1637999999999684e-05}, {'diff': 5.093000000000458e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:26.201" endtime="20201029 18:15:26.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.221" level="INFO">${ACCURACY} = {'diff': [5.140299999999848e-05, 5.1693999999997964e-05, 5.137499999999934e-05, 5.169499999999744e-05, 5.1637999999999684e-05, 5.093000000000458e-05, 5.0943999999997214e-05, 5.0915999999998074e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:26.212" endtime="20201029 18:15:26.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.233" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.230" endtime="20201029 18:15:26.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.239" level="INFO">VALUE: [5.140299999999848e-05, 5.1693999999997964e-05, 5.137499999999934e-05, 5.169499999999744e-05, 5.1637999999999684e-05, 5.093000000000458e-05, 5.0943999999997214e-05, 5.0915999999998074e-05, 5.1237000000002586e-05, 5.126299999999584e-05, 5.105500000000124e-05, 5.136099999999977e-05, 5.1151999999998754e-05, 5.1693999999997964e-05, 5.113899999999866e-05, 5.123600000000311e-05, 5.162499999999959e-05, 5.107000000000028e-05, 5.0931000000004056e-05, 5.077799999999438e-05, 5.137499999999934e-05, 5.131999999999359e-05, 5.170899999999701e-05, 5.1709000000003946e-05, 5.105600000000071e-05, 5.112499999999909e-05, 5.1457999999997284e-05, 5.105500000000124e-05, 5.094400000000415e-05, 5.162499999999959e-05, 5.133300000000063e-05, 5.136099999999977e-05, 5.115299999999823e-05, 5.148600000000336e-05, 5.15419999999947e-05, 5.109699999999995e-05, 5.137499999999934e-05, 5.088899999999841e-05, 5.083300000000013e-05, 5.072200000000304e-05, 5.10419999999942e-05, 5.134799999999967e-05, 5.125000000000268e-05, 5.15140000000025e-05, 5.145899999999676e-05, 5.109699999999995e-05, 5.112500000000603e-05, 5.0735999999995673e-05, 5.159700000000045e-05, 5.123600000000311e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.235" endtime="20201029 18:15:26.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.223" endtime="20201029 18:15:26.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.252" endtime="20201029 18:15:26.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.247" endtime="20201029 18:15:26.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.245" endtime="20201029 18:15:26.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.753" endtime="20201029 18:15:26.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.751" endtime="20201029 18:15:26.277"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.300" endtime="20201029 18:15:26.319"></status>
</kw>
<msg timestamp="20201029 18:15:26.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.296" endtime="20201029 18:15:26.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.323" endtime="20201029 18:15:26.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.329" endtime="20201029 18:15:26.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.289" endtime="20201029 18:15:26.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.283" endtime="20201029 18:15:26.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.352" endtime="20201029 18:15:26.690"></status>
</kw>
<msg timestamp="20201029 18:15:26.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040976194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.349" endtime="20201029 18:15:26.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040976194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.699" endtime="20201029 18:15:26.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.718" endtime="20201029 18:15:26.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.342" endtime="20201029 18:15:26.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.337" endtime="20201029 18:15:26.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.735" level="INFO">${RESULT} = [{'diff': 5.173600000000361e-05}, {'diff': 5.226400000000325e-05}, {'diff': 5.181900000000156e-05}, {'diff': 5.18470000000007e-05}, {'diff': 5.218099999999837e-05}, {'diff': 5.204200000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:26.727" endtime="20201029 18:15:26.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:26.746" level="INFO">${ACCURACY} = {'diff': [5.173600000000361e-05, 5.226400000000325e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.218099999999837e-05, 5.204200000000214e-05, 5.2221999999997604e-05, 5.197200000000429e-05, 5.2611...</msg>
<status status="PASS" starttime="20201029 18:15:26.737" endtime="20201029 18:15:26.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.758" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:15:26.755" endtime="20201029 18:15:26.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.763" level="INFO">VALUE: [5.173600000000361e-05, 5.226400000000325e-05, 5.181900000000156e-05, 5.18470000000007e-05, 5.218099999999837e-05, 5.204200000000214e-05, 5.2221999999997604e-05, 5.197200000000429e-05, 5.261100000000102e-05, 5.236100000000077e-05, 5.180600000000146e-05, 5.248600000000436e-05, 5.237500000000034e-05, 5.230500000000249e-05, 5.190299999999898e-05, 5.227699999999641e-05, 5.259700000000145e-05, 5.193000000000558e-05, 5.272200000000504e-05, 5.2679999999999394e-05, 5.180500000000199e-05, 5.25140000000035e-05, 5.230599999999502e-05, 5.212500000000009e-05, 5.236100000000077e-05, 5.184699999999376e-05, 5.193099999999812e-05, 5.205600000000171e-05, 5.191699999999855e-05, 5.193099999999812e-05, 5.256999999999484e-05, 5.191699999999855e-05, 5.2151999999999754e-05, 5.234800000000067e-05, 5.2459000000004696e-05, 5.2471999999997854e-05, 5.2693999999998964e-05, 5.2209000000004446e-05, 5.186100000000027e-05, 5.18470000000007e-05, 5.186100000000027e-05, 5.218000000000583e-05, 5.2235999999997174e-05, 5.2735999999997674e-05, 5.2443999999998714e-05, 5.219499999999794e-05, 5.223600000000411e-05, 5.262500000000059e-05, 5.181999999999409e-05, 5.207000000000128e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.760" endtime="20201029 18:15:26.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.748" endtime="20201029 18:15:26.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.775" endtime="20201029 18:15:26.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.771" endtime="20201029 18:15:26.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.768" endtime="20201029 18:15:26.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.279" endtime="20201029 18:15:26.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.278" endtime="20201029 18:15:26.800"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.823" endtime="20201029 18:15:26.843"></status>
</kw>
<msg timestamp="20201029 18:15:26.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.820" endtime="20201029 18:15:26.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.847" endtime="20201029 18:15:26.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.853" endtime="20201029 18:15:26.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.813" endtime="20201029 18:15:26.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.807" endtime="20201029 18:15:26.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.877" endtime="20201029 18:15:27.216"></status>
</kw>
<msg timestamp="20201029 18:15:27.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04112975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041182486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:26.873" endtime="20201029 18:15:27.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04112975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041182486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:27.226" endtime="20201029 18:15:27.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.245" endtime="20201029 18:15:27.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.866" endtime="20201029 18:15:27.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.861" endtime="20201029 18:15:27.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.263" level="INFO">${RESULT} = [{'diff': 5.2735999999997674e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.312500000000109e-05}, {'diff': 5.313900000000066e-05}, {'diff': 5.281900000000256e-05}, {'diff': 5.312500000000109e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:27.254" endtime="20201029 18:15:27.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.272" level="INFO">${ACCURACY} = {'diff': [5.2735999999997674e-05, 5.313900000000066e-05, 5.312500000000109e-05, 5.313900000000066e-05, 5.281900000000256e-05, 5.312500000000109e-05, 5.3707999999999534e-05, 5.279199999999595e-05, 5.37...</msg>
<status status="PASS" starttime="20201029 18:15:27.265" endtime="20201029 18:15:27.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.284" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.282" endtime="20201029 18:15:27.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.289" level="INFO">VALUE: [5.2735999999997674e-05, 5.313900000000066e-05, 5.312500000000109e-05, 5.313900000000066e-05, 5.281900000000256e-05, 5.312500000000109e-05, 5.3707999999999534e-05, 5.279199999999595e-05, 5.370899999999901e-05, 5.302799999999663e-05, 5.3709000000005946e-05, 5.293099999999912e-05, 5.318099999999937e-05, 5.3013999999997063e-05, 5.281900000000256e-05, 5.3263999999997313e-05, 5.338900000000091e-05, 5.359699999999551e-05, 5.287500000000084e-05, 5.327800000000382e-05, 5.2957999999998784e-05, 5.3693999999999964e-05, 5.359699999999551e-05, 5.28340000000016e-05, 5.3263999999997313e-05, 5.332000000000253e-05, 5.302799999999663e-05, 5.327800000000382e-05, 5.359800000000192e-05, 5.336100000000177e-05, 5.281900000000256e-05, 5.368099999999987e-05, 5.301300000000453e-05, 5.336100000000177e-05, 5.3707999999999534e-05, 5.330599999999602e-05, 5.356899999999637e-05, 5.302800000000357e-05, 5.358300000000288e-05, 5.290299999999998e-05, 5.31669999999998e-05, 5.358299999999594e-05, 5.3499999999997994e-05, 5.312500000000109e-05, 5.362500000000159e-05, 5.286200000000074e-05, 5.3721999999999104e-05, 5.315300000000023e-05, 5.352800000000407e-05, 5.368099999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.286" endtime="20201029 18:15:27.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.274" endtime="20201029 18:15:27.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.302" endtime="20201029 18:15:27.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.298" endtime="20201029 18:15:27.325"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.295" endtime="20201029 18:15:27.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.802" endtime="20201029 18:15:27.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.801" endtime="20201029 18:15:27.327"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.349" endtime="20201029 18:15:27.372"></status>
</kw>
<msg timestamp="20201029 18:15:27.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.346" endtime="20201029 18:15:27.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.375" endtime="20201029 18:15:27.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.381" endtime="20201029 18:15:27.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.339" endtime="20201029 18:15:27.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.333" endtime="20201029 18:15:27.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.405" endtime="20201029 18:15:27.738"></status>
</kw>
<msg timestamp="20201029 18:15:27.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042574764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.401" endtime="20201029 18:15:27.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042574764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.742" endtime="20201029 18:15:27.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.751" endtime="20201029 18:15:27.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.394" endtime="20201029 18:15:27.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.389" endtime="20201029 18:15:27.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.760" level="INFO">${RESULT} = [{'diff': 5.433299999999669e-05}, {'diff': 5.438900000000191e-05}, {'diff': 5.444499999999325e-05}, {'diff': 5.4402000000002004e-05}, {'diff': 5.4151999999994815e-05}, {'diff': 5.4277999999997883e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:27.756" endtime="20201029 18:15:27.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:27.764" level="INFO">${ACCURACY} = {'diff': [5.433299999999669e-05, 5.438900000000191e-05, 5.444499999999325e-05, 5.4402000000002004e-05, 5.4151999999994815e-05, 5.4277999999997883e-05, 5.4694000000000964e-05, 5.4485999999999424e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:27.761" endtime="20201029 18:15:27.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.769" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:15:27.768" endtime="20201029 18:15:27.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.772" level="INFO">VALUE: [5.433299999999669e-05, 5.438900000000191e-05, 5.444499999999325e-05, 5.4402000000002004e-05, 5.4151999999994815e-05, 5.4277999999997883e-05, 5.4694000000000964e-05, 5.4485999999999424e-05, 5.437500000000234e-05, 5.381999999999609e-05, 5.4249999999998744e-05, 5.406900000000381e-05, 5.405599999999677e-05, 5.430599999999702e-05, 5.4235999999999174e-05, 5.462499999999565e-05, 5.4402000000002004e-05, 5.405599999999677e-05, 5.407000000000328e-05, 5.391700000000055e-05, 5.383300000000313e-05, 5.4680000000001394e-05, 5.3916000000001074e-05, 5.386100000000227e-05, 5.436099999999583e-05, 5.3971999999999354e-05, 5.391700000000055e-05, 5.390300000000098e-05, 5.412499999999515e-05, 5.458300000000388e-05, 5.3721999999999104e-05, 5.440300000000148e-05, 5.4014000000005e-05, 5.4263999999998314e-05, 5.391700000000055e-05, 5.427699999999841e-05, 5.383299999999619e-05, 5.40419999999972e-05, 5.426300000000578e-05, 5.401299999999859e-05, 5.4541999999997703e-05, 5.4471999999999854e-05, 5.436100000000277e-05, 5.4680000000001394e-05, 5.459699999999651e-05, 5.430600000000396e-05, 5.458300000000388e-05, 5.437500000000234e-05, 5.458300000000388e-05, 5.3735999999998674e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.771" endtime="20201029 18:15:27.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.765" endtime="20201029 18:15:27.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.781" endtime="20201029 18:15:27.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.776" endtime="20201029 18:15:27.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.775" endtime="20201029 18:15:27.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.329" endtime="20201029 18:15:27.802"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.328" endtime="20201029 18:15:27.802"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.813" endtime="20201029 18:15:27.831"></status>
</kw>
<msg timestamp="20201029 18:15:27.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.811" endtime="20201029 18:15:27.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.833" endtime="20201029 18:15:27.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.836" endtime="20201029 18:15:27.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.808" endtime="20201029 18:15:27.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.805" endtime="20201029 18:15:27.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.847" endtime="20201029 18:15:28.165"></status>
</kw>
<msg timestamp="20201029 18:15:28.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.845" endtime="20201029 18:15:28.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024689375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024744667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.175" endtime="20201029 18:15:28.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.196" endtime="20201029 18:15:28.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.842" endtime="20201029 18:15:28.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.840" endtime="20201029 18:15:28.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.214" level="INFO">${RESULT} = [{'diff': 5.529200000000192e-05}, {'diff': 5.5513999999999564e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.55549999999988e-05}, {'diff': 5.477800000000185e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:28.205" endtime="20201029 18:15:28.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.225" level="INFO">${ACCURACY} = {'diff': [5.529200000000192e-05, 5.5513999999999564e-05, 5.484700000000023e-05, 5.4958000000000784e-05, 5.55549999999988e-05, 5.477800000000185e-05, 5.526400000000278e-05, 5.4735999999999674e-05, 5.54...</msg>
<status status="PASS" starttime="20201029 18:15:28.216" endtime="20201029 18:15:28.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.237" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.234" endtime="20201029 18:15:28.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.242" level="INFO">VALUE: [5.529200000000192e-05, 5.5513999999999564e-05, 5.484700000000023e-05, 5.4958000000000784e-05, 5.55549999999988e-05, 5.477800000000185e-05, 5.526400000000278e-05, 5.4735999999999674e-05, 5.540299999999901e-05, 5.512499999999962e-05, 5.5277999999998884e-05, 5.519499999999747e-05, 5.513900000000266e-05, 5.4735999999999674e-05, 5.508400000000038e-05, 5.555600000000174e-05, 5.516699999999833e-05, 5.570900000000101e-05, 5.493100000000112e-05, 5.4944000000001214e-05, 5.4901999999999035e-05, 5.4958000000000784e-05, 5.5472000000000854e-05, 5.53610000000003e-05, 5.558300000000141e-05, 5.531899999999812e-05, 5.559699999999751e-05, 5.5693999999998495e-05, 5.566699999999883e-05, 5.5541999999998704e-05, 5.4722000000000104e-05, 5.565299999999926e-05, 5.4999999999999494e-05, 5.5207999999997565e-05, 5.480600000000099e-05, 5.558399999999741e-05, 5.509700000000048e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.50410000000022e-05, 5.556999999999784e-05, 5.555500000000227e-05, 5.4722000000000104e-05, 5.5513999999999564e-05, 5.513899999999919e-05, 5.530600000000149e-05, 5.515300000000223e-05, 5.500000000000296e-05, 5.5208000000001034e-05, 5.565299999999926e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.239" endtime="20201029 18:15:28.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.227" endtime="20201029 18:15:28.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.256" endtime="20201029 18:15:28.278"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.251" endtime="20201029 18:15:28.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.249" endtime="20201029 18:15:28.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.803" endtime="20201029 18:15:28.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.803" endtime="20201029 18:15:28.286"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.311" endtime="20201029 18:15:28.331"></status>
</kw>
<msg timestamp="20201029 18:15:28.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.307" endtime="20201029 18:15:28.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.335" endtime="20201029 18:15:28.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.341" endtime="20201029 18:15:28.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.300" endtime="20201029 18:15:28.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.293" endtime="20201029 18:15:28.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.366" endtime="20201029 18:15:28.707"></status>
</kw>
<msg timestamp="20201029 18:15:28.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04851825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048574889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:28.363" endtime="20201029 18:15:28.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04851825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048574889, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:28.717" endtime="20201029 18:15:28.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.739" endtime="20201029 18:15:28.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.355" endtime="20201029 18:15:28.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.349" endtime="20201029 18:15:28.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.757" level="INFO">${RESULT} = [{'diff': 5.663900000000416e-05}, {'diff': 5.6250000000000744e-05}, {'diff': 5.661099999999808e-05}, {'diff': 5.638900000000391e-05}, {'diff': 5.5805999999998523e-05}, {'diff': 5.636200000000424e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:28.747" endtime="20201029 18:15:28.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:28.769" level="INFO">${ACCURACY} = {'diff': [5.663900000000416e-05, 5.6250000000000744e-05, 5.661099999999808e-05, 5.638900000000391e-05, 5.5805999999998523e-05, 5.636200000000424e-05, 5.6277999999999884e-05, 5.6708000000002534e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:28.759" endtime="20201029 18:15:28.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.780" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:15:28.778" endtime="20201029 18:15:28.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.785" level="INFO">VALUE: [5.663900000000416e-05, 5.6250000000000744e-05, 5.661099999999808e-05, 5.638900000000391e-05, 5.5805999999998523e-05, 5.636200000000424e-05, 5.6277999999999884e-05, 5.6708000000002534e-05, 5.6152000000003754e-05, 5.608299999999844e-05, 5.5971999999994415e-05, 5.5930000000002644e-05, 5.6264000000000314e-05, 5.5722000000001104e-05, 5.612500000000409e-05, 5.63470000000052e-05, 5.668099999999593e-05, 5.6041999999999204e-05, 5.6458000000002284e-05, 5.6000000000000494e-05, 5.593100000000212e-05, 5.591699999999561e-05, 5.615300000000323e-05, 5.5929999999995705e-05, 5.5944000000002214e-05, 5.612499999999715e-05, 5.5929999999995705e-05, 5.606900000000581e-05, 5.594500000000169e-05, 5.66670000000033e-05, 5.661099999999808e-05, 5.6736000000001674e-05, 5.615300000000323e-05, 5.586200000000374e-05, 5.613899999999672e-05, 5.6514000000000564e-05, 5.593100000000212e-05, 5.6750000000001244e-05, 5.583299999999819e-05, 5.63619999999973e-05, 5.662499999999765e-05, 5.6750000000001244e-05, 5.5943999999995275e-05, 5.6151999999996816e-05, 5.6041999999999204e-05, 5.6221999999994665e-05, 5.636100000000477e-05, 5.6250000000000744e-05, 5.5736000000000674e-05, 5.661100000000502e-05]</msg>
<status status="PASS" starttime="20201029 18:15:28.782" endtime="20201029 18:15:28.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.771" endtime="20201029 18:15:28.789"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.798" endtime="20201029 18:15:28.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.794" endtime="20201029 18:15:28.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.791" endtime="20201029 18:15:28.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.289" endtime="20201029 18:15:28.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.287" endtime="20201029 18:15:28.823"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.846" endtime="20201029 18:15:28.867"></status>
</kw>
<msg timestamp="20201029 18:15:28.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.843" endtime="20201029 18:15:28.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.870" endtime="20201029 18:15:28.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.877" endtime="20201029 18:15:28.880"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.835" endtime="20201029 18:15:28.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.830" endtime="20201029 18:15:28.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.900" endtime="20201029 18:15:29.247"></status>
</kw>
<msg timestamp="20201029 18:15:29.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041597375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.897" endtime="20201029 18:15:29.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041597375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.257" endtime="20201029 18:15:29.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.276" endtime="20201029 18:15:29.279"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.889" endtime="20201029 18:15:29.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.885" endtime="20201029 18:15:29.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.293" level="INFO">${RESULT} = [{'diff': 5.684699999999876e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.765299999999779e-05}, {'diff': 5.7429999999997206e-05}, {'diff': 5.716699999999686e-05}, {'diff': 5.6764000000000814e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:29.284" endtime="20201029 18:15:29.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.302" level="INFO">${ACCURACY} = {'diff': [5.684699999999876e-05, 5.7000000000001494e-05, 5.765299999999779e-05, 5.7429999999997206e-05, 5.716699999999686e-05, 5.6764000000000814e-05, 5.6819999999999093e-05, 5.6764000000000814e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:15:29.295" endtime="20201029 18:15:29.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.313" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.311" endtime="20201029 18:15:29.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.319" level="INFO">VALUE: [5.684699999999876e-05, 5.7000000000001494e-05, 5.765299999999779e-05, 5.7429999999997206e-05, 5.716699999999686e-05, 5.6764000000000814e-05, 5.6819999999999093e-05, 5.6764000000000814e-05, 5.766699999999736e-05, 5.68749999999979e-05, 5.718100000000337e-05, 5.7194000000003464e-05, 5.722300000000208e-05, 5.6750000000001244e-05, 5.7415999999997636e-05, 5.758299999999994e-05, 5.6901999999997566e-05, 5.736100000000577e-05, 5.6957999999995845e-05, 5.6750000000001244e-05, 5.690300000000398e-05, 5.759699999999951e-05, 5.687500000000484e-05, 5.736099999999883e-05, 5.7306000000000024e-05, 5.6805999999999524e-05, 5.7042000000000204e-05, 5.736100000000577e-05, 5.730500000000055e-05, 5.744500000000319e-05, 5.7250000000001744e-05, 5.743100000000362e-05, 5.7500000000001994e-05, 5.731900000000012e-05, 5.7221999999995665e-05, 5.7500000000001994e-05, 5.715299999999729e-05, 5.7042000000000204e-05, 5.6805999999999524e-05, 5.762499999999865e-05, 5.6985999999994985e-05, 5.693099999999618e-05, 5.737500000000534e-05, 5.7250000000001744e-05, 5.6929999999996705e-05, 5.6957999999995845e-05, 5.759800000000592e-05, 5.7249999999994805e-05, 5.704100000000073e-05, 5.68749999999979e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.315" endtime="20201029 18:15:29.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.304" endtime="20201029 18:15:29.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.338" endtime="20201029 18:15:29.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.333" endtime="20201029 18:15:29.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.330" endtime="20201029 18:15:29.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.825" endtime="20201029 18:15:29.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.824" endtime="20201029 18:15:29.363"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.386" endtime="20201029 18:15:29.410"></status>
</kw>
<msg timestamp="20201029 18:15:29.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.383" endtime="20201029 18:15:29.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.413" endtime="20201029 18:15:29.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.420" endtime="20201029 18:15:29.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.376" endtime="20201029 18:15:29.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.370" endtime="20201029 18:15:29.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.443" endtime="20201029 18:15:29.779"></status>
</kw>
<msg timestamp="20201029 18:15:29.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043708458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.439" endtime="20201029 18:15:29.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043650375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043708458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.788" endtime="20201029 18:15:29.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.807" endtime="20201029 18:15:29.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.432" endtime="20201029 18:15:29.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.428" endtime="20201029 18:15:29.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.825" level="INFO">${RESULT} = [{'diff': 5.808300000000044e-05}, {'diff': 5.7944000000004214e-05}, {'diff': 5.7943999999997275e-05}, {'diff': 5.8292000000001454e-05}, {'diff': 5.791700000000455e-05}, {'diff': 5.7708000000003534e-05...</msg>
<status status="PASS" starttime="20201029 18:15:29.816" endtime="20201029 18:15:29.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:29.835" level="INFO">${ACCURACY} = {'diff': [5.808300000000044e-05, 5.7944000000004214e-05, 5.7943999999997275e-05, 5.8292000000001454e-05, 5.791700000000455e-05, 5.7708000000003534e-05, 5.861100000000008e-05, 5.831900000000112e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:15:29.827" endtime="20201029 18:15:29.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.846" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:15:29.844" endtime="20201029 18:15:29.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.851" level="INFO">VALUE: [5.808300000000044e-05, 5.7944000000004214e-05, 5.7943999999997275e-05, 5.8292000000001454e-05, 5.791700000000455e-05, 5.7708000000003534e-05, 5.861100000000008e-05, 5.831900000000112e-05, 5.7778000000001384e-05, 5.859700000000051e-05, 5.8429999999998206e-05, 5.7999999999995555e-05, 5.83749999999994e-05, 5.786099999999933e-05, 5.7929999999997706e-05, 5.7721999999996165e-05, 5.8151999999998816e-05, 5.8528000000002134e-05, 5.8735999999996735e-05, 5.858300000000094e-05, 5.836099999999983e-05, 5.794500000000369e-05, 5.8250000000002744e-05, 5.8027999999994695e-05, 5.7944000000004214e-05, 5.7887999999998996e-05, 5.7778000000001384e-05, 5.836099999999983e-05, 5.822299999999614e-05, 5.802700000000216e-05, 5.8151999999998816e-05, 5.780499999999411e-05, 5.8694000000004964e-05, 5.808300000000044e-05, 5.8278000000001884e-05, 5.834700000000026e-05, 5.856900000000137e-05, 5.841699999999811e-05, 5.8000000000002494e-05, 5.8514000000002564e-05, 5.791699999999761e-05, 5.841699999999811e-05, 5.7764000000001814e-05, 5.8500000000002994e-05, 5.868099999999793e-05, 5.7957999999996845e-05, 5.81670000000048e-05, 5.830500000000155e-05, 5.859700000000051e-05, 5.7986000000002924e-05]</msg>
<status status="PASS" starttime="20201029 18:15:29.848" endtime="20201029 18:15:29.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.837" endtime="20201029 18:15:29.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.865" endtime="20201029 18:15:29.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.859" endtime="20201029 18:15:29.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.857" endtime="20201029 18:15:29.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.365" endtime="20201029 18:15:29.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.364" endtime="20201029 18:15:29.890"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.913" endtime="20201029 18:15:29.934"></status>
</kw>
<msg timestamp="20201029 18:15:29.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.910" endtime="20201029 18:15:29.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.937" endtime="20201029 18:15:29.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.944" endtime="20201029 18:15:29.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.902" endtime="20201029 18:15:29.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.897" endtime="20201029 18:15:29.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.967" endtime="20201029 18:15:30.304"></status>
</kw>
<msg timestamp="20201029 18:15:30.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041191444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.964" endtime="20201029 18:15:30.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041191444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.314" endtime="20201029 18:15:30.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.333" endtime="20201029 18:15:30.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.957" endtime="20201029 18:15:30.338"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.952" endtime="20201029 18:15:30.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.350" level="INFO">${RESULT} = [{'diff': 5.88749999999999e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.8915999999999136e-05}, {'diff': 5.934700000000126e-05}, {'diff': 5.9486000000004424e-05}, {'diff': 5.916699999999886e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:30.341" endtime="20201029 18:15:30.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.361" level="INFO">${ACCURACY} = {'diff': [5.88749999999999e-05, 5.93750000000004e-05, 5.8915999999999136e-05, 5.934700000000126e-05, 5.9486000000004424e-05, 5.916699999999886e-05, 5.9250000000003744e-05, 5.890300000000598e-05, 5.969...</msg>
<status status="PASS" starttime="20201029 18:15:30.352" endtime="20201029 18:15:30.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.373" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.370" endtime="20201029 18:15:30.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.379" level="INFO">VALUE: [5.88749999999999e-05, 5.93750000000004e-05, 5.8915999999999136e-05, 5.934700000000126e-05, 5.9486000000004424e-05, 5.916699999999886e-05, 5.9250000000003744e-05, 5.890300000000598e-05, 5.9693999999999026e-05, 5.9263999999996375e-05, 5.8820000000001094e-05, 5.8749999999996305e-05, 5.972300000000458e-05, 5.9041999999995265e-05, 5.8778000000002384e-05, 5.883300000000119e-05, 5.9027999999995695e-05, 5.9151999999999816e-05, 5.958300000000194e-05, 5.8749999999996305e-05, 5.9264000000003314e-05, 5.883299999999425e-05, 5.933300000000169e-05, 5.968100000000587e-05, 5.938899999999997e-05, 5.890299999999904e-05, 5.897299999999689e-05, 5.970900000000501e-05, 5.9472000000004854e-05, 5.915299999999929e-05, 5.9471999999997915e-05, 5.902700000000316e-05, 5.9598000000000984e-05, 5.9250000000003744e-05, 5.9165999999999386e-05, 5.9249999999996805e-05, 5.904100000000273e-05, 5.8971999999997415e-05, 5.9249999999996805e-05, 5.888899999999947e-05, 5.883300000000119e-05, 5.9665999999999886e-05, 5.883300000000119e-05, 5.9291999999995515e-05, 5.888899999999947e-05, 5.916699999999886e-05, 5.96949999999985e-05, 5.9207999999998095e-05, 5.958300000000194e-05, 5.954099999999629e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.375" endtime="20201029 18:15:30.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.363" endtime="20201029 18:15:30.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.392" endtime="20201029 18:15:30.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.387" endtime="20201029 18:15:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.385" endtime="20201029 18:15:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.892" endtime="20201029 18:15:30.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.891" endtime="20201029 18:15:30.417"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.440" endtime="20201029 18:15:30.461"></status>
</kw>
<msg timestamp="20201029 18:15:30.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.436" endtime="20201029 18:15:30.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.464" endtime="20201029 18:15:30.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.471" endtime="20201029 18:15:30.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.429" endtime="20201029 18:15:30.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.423" endtime="20201029 18:15:30.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.494" endtime="20201029 18:15:30.831"></status>
</kw>
<msg timestamp="20201029 18:15:30.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041401056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.491" endtime="20201029 18:15:30.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041340625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041401056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.841" endtime="20201029 18:15:30.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.860" endtime="20201029 18:15:30.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.483" endtime="20201029 18:15:30.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.479" endtime="20201029 18:15:30.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.877" level="INFO">${RESULT} = [{'diff': 6.043099999999968e-05}, {'diff': 5.963900000000022e-05}, {'diff': 6.009700000000201e-05}, {'diff': 6.011099999999464e-05}, {'diff': 5.983300000000219e-05}, {'diff': 6.015300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:30.868" endtime="20201029 18:15:30.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:30.888" level="INFO">${ACCURACY} = {'diff': [6.043099999999968e-05, 5.963900000000022e-05, 6.009700000000201e-05, 6.011099999999464e-05, 5.983300000000219e-05, 6.015300000000029e-05, 6.0221999999998665e-05, 6.0041999999996265e-05, 6.01...</msg>
<status status="PASS" starttime="20201029 18:15:30.879" endtime="20201029 18:15:30.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.899" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:15:30.897" endtime="20201029 18:15:30.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.904" level="INFO">VALUE: [6.043099999999968e-05, 5.963900000000022e-05, 6.009700000000201e-05, 6.011099999999464e-05, 5.983300000000219e-05, 6.015300000000029e-05, 6.0221999999998665e-05, 6.0041999999996265e-05, 6.015300000000029e-05, 6.0194999999999e-05, 6.0556000000003274e-05, 5.9971999999998415e-05, 6.065300000000079e-05, 5.9820000000002094e-05, 5.9792000000002954e-05, 5.9985999999997985e-05, 6.03750000000014e-05, 6.001299999999765e-05, 6.0402000000001066e-05, 6.0250000000004744e-05, 6.0514000000004564e-05, 6.0221999999998665e-05, 6.0042000000003204e-05, 5.9848000000001234e-05, 5.994499999999875e-05, 6.0556000000003274e-05, 6.0528000000004134e-05, 6.0708000000006535e-05, 6.0666000000000886e-05, 5.990300000000004e-05, 6.015300000000029e-05, 6.0499999999998055e-05, 6.0598000000001984e-05, 6.06949999999995e-05, 6.065300000000079e-05, 5.980499999999611e-05, 6.056899999999643e-05, 6.043099999999968e-05, 6.036100000000183e-05, 6.016699999999986e-05, 6.0486000000005424e-05, 6.0707999999999596e-05, 6.038900000000097e-05, 5.994500000000569e-05, 6.0334000000002164e-05, 5.990300000000004e-05, 6.070900000000601e-05, 5.9791999999996015e-05, 6.0291999999996515e-05, 6.008300000000244e-05]</msg>
<status status="PASS" starttime="20201029 18:15:30.901" endtime="20201029 18:15:30.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.890" endtime="20201029 18:15:30.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.917" endtime="20201029 18:15:30.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.912" endtime="20201029 18:15:30.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.910" endtime="20201029 18:15:30.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.419" endtime="20201029 18:15:30.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.418" endtime="20201029 18:15:30.942"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.965" endtime="20201029 18:15:30.986"></status>
</kw>
<msg timestamp="20201029 18:15:30.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.961" endtime="20201029 18:15:30.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.989" endtime="20201029 18:15:30.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.995" endtime="20201029 18:15:30.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.954" endtime="20201029 18:15:31.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.948" endtime="20201029 18:15:31.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.019" endtime="20201029 18:15:31.358"></status>
</kw>
<msg timestamp="20201029 18:15:31.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041126153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.016" endtime="20201029 18:15:31.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041126153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041187514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.367" endtime="20201029 18:15:31.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.386" endtime="20201029 18:15:31.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.008" endtime="20201029 18:15:31.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.004" endtime="20201029 18:15:31.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.404" level="INFO">${RESULT} = [{'diff': 6.136100000000283e-05}, {'diff': 6.0791999999997015e-05}, {'diff': 6.09029999999941e-05}, {'diff': 6.172200000000017e-05}, {'diff': 6.13750000000024e-05}, {'diff': 6.111099999999564e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:31.395" endtime="20201029 18:15:31.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.414" level="INFO">${ACCURACY} = {'diff': [6.136100000000283e-05, 6.0791999999997015e-05, 6.09029999999941e-05, 6.172200000000017e-05, 6.13750000000024e-05, 6.111099999999564e-05, 6.112500000000215e-05, 6.126400000000531e-05, 6.11810...</msg>
<status status="PASS" starttime="20201029 18:15:31.406" endtime="20201029 18:15:31.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.425" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.423" endtime="20201029 18:15:31.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.431" level="INFO">VALUE: [6.136100000000283e-05, 6.0791999999997015e-05, 6.09029999999941e-05, 6.172200000000017e-05, 6.13750000000024e-05, 6.111099999999564e-05, 6.112500000000215e-05, 6.126400000000531e-05, 6.118100000000043e-05, 6.111100000000258e-05, 6.165200000000232e-05, 6.13620000000023e-05, 6.123599999999924e-05, 6.162500000000265e-05, 6.17080000000006e-05, 6.159699999999657e-05, 6.0985999999998985e-05, 6.136099999999589e-05, 6.080500000000405e-05, 6.162500000000265e-05, 6.123599999999924e-05, 6.148599999999949e-05, 6.105599999999684e-05, 6.144500000000025e-05, 6.168100000000093e-05, 6.159800000000298e-05, 6.126399999999838e-05, 6.148699999999896e-05, 6.172200000000017e-05, 6.106900000000387e-05, 6.109700000000301e-05, 6.0735999999998735e-05, 6.162500000000265e-05, 6.154100000000523e-05, 6.093100000000018e-05, 6.1013999999998125e-05, 6.126399999999838e-05, 6.08750000000019e-05, 6.162500000000265e-05, 6.12499999999988e-05, 6.162499999999571e-05, 6.106900000000387e-05, 6.0778000000004384e-05, 6.1500000000006e-05, 6.0930000000000706e-05, 6.148599999999949e-05, 6.136099999999589e-05, 6.162500000000265e-05, 6.169400000000103e-05, 6.1195e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.428" endtime="20201029 18:15:31.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.416" endtime="20201029 18:15:31.434"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.444" endtime="20201029 18:15:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.439" endtime="20201029 18:15:31.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.437" endtime="20201029 18:15:31.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.944" endtime="20201029 18:15:31.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.943" endtime="20201029 18:15:31.469"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.491" endtime="20201029 18:15:31.514"></status>
</kw>
<msg timestamp="20201029 18:15:31.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.488" endtime="20201029 18:15:31.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.517" endtime="20201029 18:15:31.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.524" endtime="20201029 18:15:31.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.481" endtime="20201029 18:15:31.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.475" endtime="20201029 18:15:31.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.547" endtime="20201029 18:15:31.886"></status>
</kw>
<msg timestamp="20201029 18:15:31.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042870556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042932736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.544" endtime="20201029 18:15:31.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042870556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042932736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.895" endtime="20201029 18:15:31.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.914" endtime="20201029 18:15:31.918"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.537" endtime="20201029 18:15:31.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.532" endtime="20201029 18:15:31.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.931" level="INFO">${RESULT} = [{'diff': 6.218000000000196e-05}, {'diff': 6.190300000000204e-05}, {'diff': 6.180600000000452e-05}, {'diff': 6.20699999999974e-05}, {'diff': 6.22499999999998e-05}, {'diff': 6.183400000000366e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:31.922" endtime="20201029 18:15:31.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:31.940" level="INFO">${ACCURACY} = {'diff': [6.218000000000196e-05, 6.190300000000204e-05, 6.180600000000452e-05, 6.20699999999974e-05, 6.22499999999998e-05, 6.183400000000366e-05, 6.216699999999492e-05, 6.184699999999682e-05, 6.184799...</msg>
<status status="PASS" starttime="20201029 18:15:31.933" endtime="20201029 18:15:31.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.951" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:15:31.949" endtime="20201029 18:15:31.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.957" level="INFO">VALUE: [6.218000000000196e-05, 6.190300000000204e-05, 6.180600000000452e-05, 6.20699999999974e-05, 6.22499999999998e-05, 6.183400000000366e-05, 6.216699999999492e-05, 6.184699999999682e-05, 6.18479999999963e-05, 6.22629999999999e-05, 6.22629999999999e-05, 6.248600000000049e-05, 6.259699999999757e-05, 6.191600000000214e-05, 6.273600000000074e-05, 6.193099999999424e-05, 6.272200000000117e-05, 6.245800000000135e-05, 6.233299999999775e-05, 6.186100000000333e-05, 6.191700000000161e-05, 6.273600000000074e-05, 6.258300000000494e-05, 6.267999999999552e-05, 6.227699999999947e-05, 6.19300000000017e-05, 6.223600000000024e-05, 6.273600000000074e-05, 6.186099999999639e-05, 6.230499999999861e-05, 6.183299999999725e-05, 6.215300000000229e-05, 6.266699999999542e-05, 6.259700000000451e-05, 6.261099999999714e-05, 6.238899999999603e-05, 6.207000000000434e-05, 6.180600000000452e-05, 6.261099999999714e-05, 6.222200000000067e-05, 6.22629999999999e-05, 6.180500000000505e-05, 6.194400000000128e-05, 6.238899999999603e-05, 6.22499999999998e-05, 6.20279999999987e-05, 6.248600000000049e-05, 6.272199999999423e-05, 6.212499999999621e-05, 6.277699999999997e-05]</msg>
<status status="PASS" starttime="20201029 18:15:31.954" endtime="20201029 18:15:31.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.942" endtime="20201029 18:15:31.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.971" endtime="20201029 18:15:31.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.965" endtime="20201029 18:15:31.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.962" endtime="20201029 18:15:31.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.471" endtime="20201029 18:15:31.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.470" endtime="20201029 18:15:31.996"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.019" endtime="20201029 18:15:32.040"></status>
</kw>
<msg timestamp="20201029 18:15:32.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.016" endtime="20201029 18:15:32.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.044" endtime="20201029 18:15:32.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.050" endtime="20201029 18:15:32.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.008" endtime="20201029 18:15:32.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.002" endtime="20201029 18:15:32.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.073" endtime="20201029 18:15:32.403"></status>
</kw>
<msg timestamp="20201029 18:15:32.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041504306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.070" endtime="20201029 18:15:32.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041441542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041504306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.407" endtime="20201029 18:15:32.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.416" endtime="20201029 18:15:32.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.062" endtime="20201029 18:15:32.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.058" endtime="20201029 18:15:32.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.424" level="INFO">${RESULT} = [{'diff': 6.276399999999988e-05}, {'diff': 6.348600000000149e-05}, {'diff': 6.312500000000415e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.3582999999999e-05}, {'diff': 6.3582999999999e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:15:32.420" endtime="20201029 18:15:32.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.429" level="INFO">${ACCURACY} = {'diff': [6.276399999999988e-05, 6.348600000000149e-05, 6.312500000000415e-05, 6.276399999999988e-05, 6.3582999999999e-05, 6.3582999999999e-05, 6.304099999999979e-05, 6.369400000000303e-05, 6.31810000...</msg>
<status status="PASS" starttime="20201029 18:15:32.425" endtime="20201029 18:15:32.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.435" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.434" endtime="20201029 18:15:32.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.438" level="INFO">VALUE: [6.276399999999988e-05, 6.348600000000149e-05, 6.312500000000415e-05, 6.276399999999988e-05, 6.3582999999999e-05, 6.3582999999999e-05, 6.304099999999979e-05, 6.369400000000303e-05, 6.318100000000243e-05, 6.344399999999584e-05, 6.305499999999936e-05, 6.363899999999728e-05, 6.341699999999617e-05, 6.279199999999902e-05, 6.305599999999884e-05, 6.294500000000175e-05, 6.336100000000483e-05, 6.36950000000025e-05, 6.304199999999927e-05, 6.315199999999688e-05, 6.29159999999962e-05, 6.316600000000339e-05, 6.359699999999857e-05, 6.29300000000027e-05, 6.294400000000228e-05, 6.281899999999868e-05, 6.330500000000655e-05, 6.281999999999816e-05, 6.28479999999973e-05, 6.336099999999789e-05, 6.329199999999952e-05, 6.355599999999934e-05, 6.284699999999782e-05, 6.316600000000339e-05, 6.327700000000047e-05, 6.37080000000026e-05, 6.369399999999609e-05, 6.312499999999721e-05, 6.342999999999627e-05, 6.358300000000594e-05, 6.37080000000026e-05, 6.33750000000044e-05, 6.362499999999771e-05, 6.361099999999814e-05, 6.323600000000124e-05, 6.334699999999832e-05, 6.350000000000106e-05, 6.370900000000207e-05, 6.298600000000099e-05, 6.30550000000063e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.436" endtime="20201029 18:15:32.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.430" endtime="20201029 18:15:32.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.444" endtime="20201029 18:15:32.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.442" endtime="20201029 18:15:32.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.441" endtime="20201029 18:15:32.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.998" endtime="20201029 18:15:32.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.997" endtime="20201029 18:15:32.465"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.482" endtime="20201029 18:15:32.503"></status>
</kw>
<msg timestamp="20201029 18:15:32.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.478" endtime="20201029 18:15:32.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.506" endtime="20201029 18:15:32.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.512" endtime="20201029 18:15:32.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.471" endtime="20201029 18:15:32.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.468" endtime="20201029 18:15:32.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.536" endtime="20201029 18:15:32.872"></status>
</kw>
<msg timestamp="20201029 18:15:32.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031660667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031725139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.532" endtime="20201029 18:15:32.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031660667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031725139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.881" endtime="20201029 18:15:32.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.900" endtime="20201029 18:15:32.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.525" endtime="20201029 18:15:32.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.521" endtime="20201029 18:15:32.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.917" level="INFO">${RESULT} = [{'diff': 6.447199999999598e-05}, {'diff': 6.455499999999392e-05}, {'diff': 6.409699999999907e-05}, {'diff': 6.440199999999813e-05}, {'diff': 6.377800000000045e-05}, {'diff': 6.412499999999821e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:32.908" endtime="20201029 18:15:32.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:32.932" level="INFO">${ACCURACY} = {'diff': [6.447199999999598e-05, 6.455499999999392e-05, 6.409699999999907e-05, 6.440199999999813e-05, 6.377800000000045e-05, 6.412499999999821e-05, 6.383299999999925e-05, 6.436099999999889e-05, 6.4264...</msg>
<status status="PASS" starttime="20201029 18:15:32.919" endtime="20201029 18:15:32.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.943" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:15:32.941" endtime="20201029 18:15:32.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.948" level="INFO">VALUE: [6.447199999999598e-05, 6.455499999999392e-05, 6.409699999999907e-05, 6.440199999999813e-05, 6.377800000000045e-05, 6.412499999999821e-05, 6.383299999999925e-05, 6.436099999999889e-05, 6.426400000000138e-05, 6.413900000000472e-05, 6.444399999999684e-05, 6.4583e-05, 6.372200000000217e-05, 6.393100000000318e-05, 6.447200000000292e-05, 6.40280000000007e-05, 6.405599999999984e-05, 6.430600000000009e-05, 6.438899999999803e-05, 6.42359999999953e-05, 6.470900000000307e-05, 6.445900000000282e-05, 6.469400000000403e-05, 6.392999999999677e-05, 6.39159999999972e-05, 6.39029999999971e-05, 6.462499999999871e-05, 6.390300000000404e-05, 6.444400000000378e-05, 6.465299999999785e-05, 6.415300000000429e-05, 6.381999999999916e-05, 6.401400000000113e-05, 6.404200000000027e-05, 6.426400000000138e-05, 6.42500000000018e-05, 6.467999999999752e-05, 6.405500000000036e-05, 6.433299999999975e-05, 6.447199999999598e-05, 6.405500000000036e-05, 6.405500000000036e-05, 6.448599999999555e-05, 6.401400000000113e-05, 6.415299999999735e-05, 6.465300000000479e-05, 6.448599999999555e-05, 6.404200000000027e-05, 6.384800000000523e-05, 6.437499999999846e-05]</msg>
<status status="PASS" starttime="20201029 18:15:32.945" endtime="20201029 18:15:32.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.934" endtime="20201029 18:15:32.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.961" endtime="20201029 18:15:32.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.957" endtime="20201029 18:15:32.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.954" endtime="20201029 18:15:32.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.466" endtime="20201029 18:15:32.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.466" endtime="20201029 18:15:32.986"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.008" endtime="20201029 18:15:33.029"></status>
</kw>
<msg timestamp="20201029 18:15:33.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.005" endtime="20201029 18:15:33.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.032" endtime="20201029 18:15:33.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.039" endtime="20201029 18:15:33.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.998" endtime="20201029 18:15:33.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.992" endtime="20201029 18:15:33.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.062" endtime="20201029 18:15:33.402"></status>
</kw>
<msg timestamp="20201029 18:15:33.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04135975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:33.059" endtime="20201029 18:15:33.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04135975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:33.412" endtime="20201029 18:15:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.431" endtime="20201029 18:15:33.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.051" endtime="20201029 18:15:33.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.047" endtime="20201029 18:15:33.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.448" level="INFO">${RESULT} = [{'diff': 6.565299999999885e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.526400000000238e-05}, {'diff': 6.513899999999878e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.558400000000048e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:33.439" endtime="20201029 18:15:33.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.458" level="INFO">${ACCURACY} = {'diff': [6.565299999999885e-05, 6.536099999999989e-05, 6.526400000000238e-05, 6.513899999999878e-05, 6.486099999999939e-05, 6.558400000000048e-05, 6.570799999999766e-05, 6.520899999999663e-05, 6.4804...</msg>
<status status="PASS" starttime="20201029 18:15:33.450" endtime="20201029 18:15:33.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.469" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.467" endtime="20201029 18:15:33.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.475" level="INFO">VALUE: [6.565299999999885e-05, 6.536099999999989e-05, 6.526400000000238e-05, 6.513899999999878e-05, 6.486099999999939e-05, 6.558400000000048e-05, 6.570799999999766e-05, 6.520899999999663e-05, 6.480499999999417e-05, 6.505500000000136e-05, 6.530499999999467e-05, 6.487499999999896e-05, 6.533300000000075e-05, 6.502799999999476e-05, 6.494499999999681e-05, 6.522200000000367e-05, 6.524999999999587e-05, 6.551299999999621e-05, 6.480500000000111e-05, 6.55700000000009e-05, 6.490300000000504e-05, 6.511099999999964e-05, 6.522200000000367e-05, 6.512499999999921e-05, 6.551400000000263e-05, 6.513899999999878e-05, 6.483300000000025e-05, 6.537499999999946e-05, 6.524999999999587e-05, 6.538899999999903e-05, 6.493099999999724e-05, 6.537499999999946e-05, 6.549999999999612e-05, 6.480500000000111e-05, 6.568099999999799e-05, 6.494400000000428e-05, 6.490199999999863e-05, 6.515199999999888e-05, 6.563899999999928e-05, 6.47779999999945e-05, 6.544399999999784e-05, 6.551399999999569e-05, 6.515299999999835e-05, 6.50280000000017e-05, 6.501400000000213e-05, 6.480599999999365e-05, 6.549999999999612e-05, 6.526400000000238e-05, 6.551399999999569e-05, 6.509799999999955e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.472" endtime="20201029 18:15:33.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.460" endtime="20201029 18:15:33.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.488" endtime="20201029 18:15:33.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.484" endtime="20201029 18:15:33.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.481" endtime="20201029 18:15:33.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.988" endtime="20201029 18:15:33.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.987" endtime="20201029 18:15:33.513"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.536" endtime="20201029 18:15:33.559"></status>
</kw>
<msg timestamp="20201029 18:15:33.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.533" endtime="20201029 18:15:33.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.562" endtime="20201029 18:15:33.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.569" endtime="20201029 18:15:33.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.526" endtime="20201029 18:15:33.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.520" endtime="20201029 18:15:33.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.592" endtime="20201029 18:15:33.929"></status>
</kw>
<msg timestamp="20201029 18:15:33.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043149694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.589" endtime="20201029 18:15:33.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043083903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043149694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.939" endtime="20201029 18:15:33.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.957" endtime="20201029 18:15:33.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.581" endtime="20201029 18:15:33.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.577" endtime="20201029 18:15:33.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.975" level="INFO">${RESULT} = [{'diff': 6.579100000000254e-05}, {'diff': 6.605500000000236e-05}, {'diff': 6.580600000000159e-05}, {'diff': 6.622300000000414e-05}, {'diff': 6.627800000000295e-05}, {'diff': 6.616599999999945e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:33.966" endtime="20201029 18:15:33.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:33.984" level="INFO">${ACCURACY} = {'diff': [6.579100000000254e-05, 6.605500000000236e-05, 6.580600000000159e-05, 6.622300000000414e-05, 6.627800000000295e-05, 6.616599999999945e-05, 6.57359999999968e-05, 6.605500000000236e-05, 6.58049...</msg>
<status status="PASS" starttime="20201029 18:15:33.977" endtime="20201029 18:15:33.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.995" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:15:33.992" endtime="20201029 18:15:33.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.000" level="INFO">VALUE: [6.579100000000254e-05, 6.605500000000236e-05, 6.580600000000159e-05, 6.622300000000414e-05, 6.627800000000295e-05, 6.616599999999945e-05, 6.57359999999968e-05, 6.605500000000236e-05, 6.580499999999517e-05, 6.620799999999816e-05, 6.620899999999763e-05, 6.591700000000561e-05, 6.666699999999942e-05, 6.662500000000071e-05, 6.582000000000116e-05, 6.580600000000159e-05, 6.6277999999996e-05, 6.582000000000116e-05, 6.638900000000003e-05, 6.647200000000492e-05, 6.606900000000193e-05, 6.57909999999956e-05, 6.581900000000168e-05, 6.648600000000449e-05, 6.626400000000338e-05, 6.655499999999592e-05, 6.648599999999755e-05, 6.615299999999935e-05, 6.662500000000071e-05, 6.656999999999497e-05, 6.637500000000046e-05, 6.637500000000046e-05, 6.62500000000038e-05, 6.645799999999841e-05, 6.604100000000279e-05, 6.662500000000071e-05, 6.618000000000596e-05, 6.648599999999755e-05, 6.665299999999985e-05, 6.634699999999438e-05, 6.583300000000125e-05, 6.594500000000475e-05, 6.637500000000046e-05, 6.60700000000014e-05, 6.594399999999834e-05, 6.6583000000002e-05, 6.656900000000243e-05, 6.579200000000202e-05, 6.598599999999705e-05, 6.651399999999669e-05]</msg>
<status status="PASS" starttime="20201029 18:15:33.997" endtime="20201029 18:15:34.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.986" endtime="20201029 18:15:34.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.014" endtime="20201029 18:15:34.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.008" endtime="20201029 18:15:34.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.006" endtime="20201029 18:15:34.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.515" endtime="20201029 18:15:34.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.514" endtime="20201029 18:15:34.039"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.062" endtime="20201029 18:15:34.083"></status>
</kw>
<msg timestamp="20201029 18:15:34.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.059" endtime="20201029 18:15:34.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.086" endtime="20201029 18:15:34.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.092" endtime="20201029 18:15:34.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.051" endtime="20201029 18:15:34.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.046" endtime="20201029 18:15:34.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.116" endtime="20201029 18:15:34.453"></status>
</kw>
<msg timestamp="20201029 18:15:34.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040777069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040844264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.112" endtime="20201029 18:15:34.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040777069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040844264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.463" endtime="20201029 18:15:34.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.482" endtime="20201029 18:15:34.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.105" endtime="20201029 18:15:34.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.101" endtime="20201029 18:15:34.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.500" level="INFO">${RESULT} = [{'diff': 6.719499999999906e-05}, {'diff': 6.676399999999694e-05}, {'diff': 6.762500000000171e-05}, {'diff': 6.691699999999967e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.768000000000052e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:34.491" endtime="20201029 18:15:34.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:34.511" level="INFO">${ACCURACY} = {'diff': [6.719499999999906e-05, 6.676399999999694e-05, 6.762500000000171e-05, 6.691699999999967e-05, 6.719399999999959e-05, 6.768000000000052e-05, 6.713900000000078e-05, 6.702799999999676e-05, 6.7680...</msg>
<status status="PASS" starttime="20201029 18:15:34.502" endtime="20201029 18:15:34.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.522" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:15:34.520" endtime="20201029 18:15:34.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.528" level="INFO">VALUE: [6.719499999999906e-05, 6.676399999999694e-05, 6.762500000000171e-05, 6.691699999999967e-05, 6.719399999999959e-05, 6.768000000000052e-05, 6.713900000000078e-05, 6.702799999999676e-05, 6.768000000000052e-05, 6.734699999999538e-05, 6.763900000000128e-05, 6.679199999999608e-05, 6.686100000000139e-05, 6.741700000000017e-05, 6.731900000000318e-05, 6.693099999999924e-05, 6.69030000000001e-05, 6.748700000000496e-05, 6.704200000000327e-05, 6.715200000000088e-05, 6.67909999999966e-05, 6.74030000000006e-05, 6.683299999999531e-05, 6.7583000000003e-05, 6.679100000000354e-05, 6.704200000000327e-05, 6.730600000000309e-05, 6.720799999999916e-05, 6.69030000000001e-05, 6.693099999999924e-05, 6.676400000000388e-05, 6.706999999999547e-05, 6.679199999999608e-05, 6.718099999999949e-05, 6.730500000000361e-05, 6.75700000000029e-05, 6.706900000000293e-05, 6.736100000000189e-05, 6.699999999999762e-05, 6.74030000000006e-05, 6.72359999999983e-05, 6.684700000000182e-05, 6.761100000000214e-05, 6.734700000000232e-05, 6.76109999999952e-05, 6.726399999999744e-05, 6.716600000000045e-05, 6.713800000000131e-05, 6.758400000000248e-05, 6.748600000000549e-05]</msg>
<status status="PASS" starttime="20201029 18:15:34.525" endtime="20201029 18:15:34.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.513" endtime="20201029 18:15:34.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.546" endtime="20201029 18:15:34.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.541" endtime="20201029 18:15:34.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.539" endtime="20201029 18:15:34.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.041" endtime="20201029 18:15:34.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.040" endtime="20201029 18:15:34.571"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.594" endtime="20201029 18:15:34.615"></status>
</kw>
<msg timestamp="20201029 18:15:34.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.591" endtime="20201029 18:15:34.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.620" endtime="20201029 18:15:34.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.628" endtime="20201029 18:15:34.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.583" endtime="20201029 18:15:34.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.577" endtime="20201029 18:15:34.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.656" endtime="20201029 18:15:34.995"></status>
</kw>
<msg timestamp="20201029 18:15:35.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.652" endtime="20201029 18:15:35.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041229639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041298042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.004" endtime="20201029 18:15:35.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.023" endtime="20201029 18:15:35.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.643" endtime="20201029 18:15:35.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.638" endtime="20201029 18:15:35.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.040" level="INFO">${RESULT} = [{'diff': 6.84030000000016e-05}, {'diff': 6.837500000000246e-05}, {'diff': 6.830499999999767e-05}, {'diff': 6.787500000000196e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.838899999999509e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.032" endtime="20201029 18:15:35.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.051" level="INFO">${ACCURACY} = {'diff': [6.84030000000016e-05, 6.837500000000246e-05, 6.830499999999767e-05, 6.787500000000196e-05, 6.824999999999887e-05, 6.838899999999509e-05, 6.816599999999451e-05, 6.859700000000357e-05, 6.82920...</msg>
<status status="PASS" starttime="20201029 18:15:35.042" endtime="20201029 18:15:35.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.062" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.060" endtime="20201029 18:15:35.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.068" level="INFO">VALUE: [6.84030000000016e-05, 6.837500000000246e-05, 6.830499999999767e-05, 6.787500000000196e-05, 6.824999999999887e-05, 6.838899999999509e-05, 6.816599999999451e-05, 6.859700000000357e-05, 6.829200000000452e-05, 6.779200000000402e-05, 6.788899999999459e-05, 6.802799999999776e-05, 6.816700000000092e-05, 6.848599999999955e-05, 6.827799999999801e-05, 6.859800000000305e-05, 6.859800000000305e-05, 6.869500000000056e-05, 6.793000000000077e-05, 6.794400000000034e-05, 6.830599999999715e-05, 6.801399999999819e-05, 6.870800000000066e-05, 6.849999999999912e-05, 6.841700000000117e-05, 6.788899999999459e-05, 6.808400000000298e-05, 6.791700000000067e-05, 6.795899999999938e-05, 6.813900000000178e-05, 6.783300000000325e-05, 6.784699999999588e-05, 6.815199999999494e-05, 6.809699999999613e-05, 6.8583000000004e-05, 6.790200000000163e-05, 6.831999999999672e-05, 6.859699999999663e-05, 6.77359999999988e-05, 6.836100000000289e-05, 6.863900000000228e-05, 6.824999999999887e-05, 6.779200000000402e-05, 6.829199999999758e-05, 6.847299999999945e-05, 6.843000000000127e-05, 6.82359999999993e-05, 6.869400000000109e-05, 6.802699999999828e-05, 6.77909999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.065" endtime="20201029 18:15:35.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.053" endtime="20201029 18:15:35.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.080" endtime="20201029 18:15:35.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.076" endtime="20201029 18:15:35.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.073" endtime="20201029 18:15:35.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.573" endtime="20201029 18:15:35.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.572" endtime="20201029 18:15:35.105"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.128" endtime="20201029 18:15:35.150"></status>
</kw>
<msg timestamp="20201029 18:15:35.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.125" endtime="20201029 18:15:35.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.153" endtime="20201029 18:15:35.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.160" endtime="20201029 18:15:35.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.117" endtime="20201029 18:15:35.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.112" endtime="20201029 18:15:35.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.183" endtime="20201029 18:15:35.523"></status>
</kw>
<msg timestamp="20201029 18:15:35.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041129458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.180" endtime="20201029 18:15:35.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041059778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041129458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.533" endtime="20201029 18:15:35.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.552" endtime="20201029 18:15:35.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.172" endtime="20201029 18:15:35.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.168" endtime="20201029 18:15:35.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.569" level="INFO">${RESULT} = [{'diff': 6.968000000000252e-05}, {'diff': 6.956899999999849e-05}, {'diff': 6.904100000000579e-05}, {'diff': 6.884700000000382e-05}, {'diff': 6.969400000000209e-05}, {'diff': 6.926399999999944e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:35.561" endtime="20201029 18:15:35.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:35.579" level="INFO">${ACCURACY} = {'diff': [6.968000000000252e-05, 6.956899999999849e-05, 6.904100000000579e-05, 6.884700000000382e-05, 6.969400000000209e-05, 6.926399999999944e-05, 6.945799999999447e-05, 6.926399999999944e-05, 6.9416...</msg>
<status status="PASS" starttime="20201029 18:15:35.572" endtime="20201029 18:15:35.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.590" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:15:35.588" endtime="20201029 18:15:35.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.595" level="INFO">VALUE: [6.968000000000252e-05, 6.956899999999849e-05, 6.904100000000579e-05, 6.884700000000382e-05, 6.969400000000209e-05, 6.926399999999944e-05, 6.945799999999447e-05, 6.926399999999944e-05, 6.94160000000027e-05, 6.924999999999987e-05, 6.947199999999404e-05, 6.884799999999636e-05, 6.938900000000303e-05, 6.891700000000167e-05, 6.931999999999772e-05, 6.94030000000026e-05, 6.905499999999842e-05, 6.951399999999969e-05, 6.884700000000382e-05, 6.945800000000141e-05, 6.96109999999972e-05, 6.970800000000166e-05, 6.970800000000166e-05, 6.883400000000373e-05, 6.934700000000432e-05, 6.948600000000055e-05, 6.913899999999584e-05, 6.904199999999833e-05, 6.961100000000414e-05, 6.970800000000166e-05, 6.970800000000166e-05, 6.968000000000252e-05, 6.891599999999526e-05, 6.938900000000303e-05, 6.967999999999558e-05, 6.95559999999984e-05, 6.930599999999815e-05, 6.912499999999627e-05, 6.916700000000192e-05, 6.891700000000167e-05, 6.969500000000156e-05, 6.92909999999991e-05, 6.924999999999987e-05, 6.95979999999971e-05, 6.899999999999962e-05, 6.891700000000167e-05, 6.954199999999883e-05, 6.922199999999379e-05, 6.899999999999962e-05, 6.918100000000149e-05]</msg>
<status status="PASS" starttime="20201029 18:15:35.592" endtime="20201029 18:15:35.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.581" endtime="20201029 18:15:35.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.608" endtime="20201029 18:15:35.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.603" endtime="20201029 18:15:35.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.601" endtime="20201029 18:15:35.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.107" endtime="20201029 18:15:35.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.106" endtime="20201029 18:15:35.633"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.656" endtime="20201029 18:15:35.679"></status>
</kw>
<msg timestamp="20201029 18:15:35.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.652" endtime="20201029 18:15:35.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.682" endtime="20201029 18:15:35.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.688" endtime="20201029 18:15:35.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.645" endtime="20201029 18:15:35.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.639" endtime="20201029 18:15:35.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.711" endtime="20201029 18:15:36.062"></status>
</kw>
<msg timestamp="20201029 18:15:36.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043010986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.708" endtime="20201029 18:15:36.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043010986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043081222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.072" endtime="20201029 18:15:36.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.091" endtime="20201029 18:15:36.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.701" endtime="20201029 18:15:36.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.696" endtime="20201029 18:15:36.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.108" level="INFO">${RESULT} = [{'diff': 7.02360000000013e-05}, {'diff': 7.000000000000062e-05}, {'diff': 7.016700000000292e-05}, {'diff': 7.002799999999976e-05}, {'diff': 7.062500000000471e-05}, {'diff': 7.05689999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:36.099" endtime="20201029 18:15:36.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.117" level="INFO">${ACCURACY} = {'diff': [7.02360000000013e-05, 7.000000000000062e-05, 7.016700000000292e-05, 7.002799999999976e-05, 7.062500000000471e-05, 7.05689999999995e-05, 7.065299999999691e-05, 7.041599999999676e-05, 7.069499...</msg>
<status status="PASS" starttime="20201029 18:15:36.110" endtime="20201029 18:15:36.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.128" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.126" endtime="20201029 18:15:36.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.134" level="INFO">VALUE: [7.02360000000013e-05, 7.000000000000062e-05, 7.016700000000292e-05, 7.002799999999976e-05, 7.062500000000471e-05, 7.05689999999995e-05, 7.065299999999691e-05, 7.041599999999676e-05, 7.069499999999562e-05, 7.002799999999976e-05, 7.016699999999598e-05, 7.065299999999691e-05, 7.056999999999897e-05, 7.009700000000507e-05, 7.037499999999752e-05, 7.029199999999958e-05, 7.052800000000026e-05, 6.984699999999788e-05, 6.998600000000105e-05, 6.995800000000191e-05, 7.001400000000019e-05, 7.069400000000309e-05, 6.986100000000439e-05, 7.051400000000069e-05, 7.051400000000069e-05, 7.037499999999752e-05, 7.016600000000345e-05, 7.037499999999752e-05, 7.037499999999752e-05, 7.069500000000256e-05, 7.019400000000259e-05, 6.980499999999917e-05, 6.998599999999411e-05, 6.994400000000234e-05, 6.979199999999908e-05, 7.059699999999863e-05, 6.972200000000123e-05, 7.063900000000428e-05, 7.00700000000054e-05, 7.027800000000001e-05, 6.980599999999865e-05, 7.027800000000001e-05, 7.025000000000087e-05, 7.024999999999393e-05, 7.072200000000223e-05, 6.972200000000123e-05, 7.066699999999648e-05, 7.002799999999976e-05, 7.063899999999734e-05, 6.981999999999822e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.130" endtime="20201029 18:15:36.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.119" endtime="20201029 18:15:36.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.147" endtime="20201029 18:15:36.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.142" endtime="20201029 18:15:36.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.139" endtime="20201029 18:15:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.635" endtime="20201029 18:15:36.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.634" endtime="20201029 18:15:36.173"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.196" endtime="20201029 18:15:36.217"></status>
</kw>
<msg timestamp="20201029 18:15:36.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.192" endtime="20201029 18:15:36.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.220" endtime="20201029 18:15:36.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.227" endtime="20201029 18:15:36.231"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.185" endtime="20201029 18:15:36.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.179" endtime="20201029 18:15:36.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.250" endtime="20201029 18:15:36.601"></status>
</kw>
<msg timestamp="20201029 18:15:36.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.247" endtime="20201029 18:15:36.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.610" endtime="20201029 18:15:36.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.629" endtime="20201029 18:15:36.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.240" endtime="20201029 18:15:36.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.235" endtime="20201029 18:15:36.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.646" level="INFO">${RESULT} = [{'diff': 7.161200000000562e-05}, {'diff': 7.145900000000288e-05}, {'diff': 7.112500000000521e-05}, {'diff': 7.113800000000531e-05}, {'diff': 7.136099999999895e-05}, {'diff': 7.10559999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:36.638" endtime="20201029 18:15:36.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:36.657" level="INFO">${ACCURACY} = {'diff': [7.161200000000562e-05, 7.145900000000288e-05, 7.112500000000521e-05, 7.113800000000531e-05, 7.136099999999895e-05, 7.10559999999999e-05, 7.091700000000367e-05, 7.147199999999604e-05, 7.09449...</msg>
<status status="PASS" starttime="20201029 18:15:36.648" endtime="20201029 18:15:36.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.668" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:15:36.666" endtime="20201029 18:15:36.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.673" level="INFO">VALUE: [7.161200000000562e-05, 7.145900000000288e-05, 7.112500000000521e-05, 7.113800000000531e-05, 7.136099999999895e-05, 7.10559999999999e-05, 7.091700000000367e-05, 7.147199999999604e-05, 7.094499999999587e-05, 7.099999999999468e-05, 7.134699999999938e-05, 7.126400000000144e-05, 7.136099999999895e-05, 7.106999999999947e-05, 7.126400000000144e-05, 7.1069e-05, 7.083300000000625e-05, 7.116600000000445e-05, 7.095800000000291e-05, 7.148600000000255e-05, 7.079200000000008e-05, 7.147199999999604e-05, 7.162499999999877e-05, 7.101400000000119e-05, 7.108299999999956e-05, 7.162500000000571e-05, 7.079200000000008e-05, 7.105500000000042e-05, 7.151400000000169e-05, 7.100000000000162e-05, 7.166599999999801e-05, 7.140199999999819e-05, 7.0763999999994e-05, 7.169399999999715e-05, 7.081899999999974e-05, 7.081899999999974e-05, 7.162499999999877e-05, 7.12360000000023e-05, 7.081999999999922e-05, 7.081999999999922e-05, 7.170900000000313e-05, 7.148699999999508e-05, 7.169500000000356e-05, 7.147300000000245e-05, 7.130500000000067e-05, 7.167999999999758e-05, 7.14030000000046e-05, 7.11109999999987e-05, 7.112499999999827e-05, 7.170800000000366e-05]</msg>
<status status="PASS" starttime="20201029 18:15:36.670" endtime="20201029 18:15:36.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.659" endtime="20201029 18:15:36.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.686" endtime="20201029 18:15:36.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.682" endtime="20201029 18:15:36.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.679" endtime="20201029 18:15:36.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.175" endtime="20201029 18:15:36.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.174" endtime="20201029 18:15:36.711"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.734" endtime="20201029 18:15:36.755"></status>
</kw>
<msg timestamp="20201029 18:15:36.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.731" endtime="20201029 18:15:36.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.759" endtime="20201029 18:15:36.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.765" endtime="20201029 18:15:36.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.723" endtime="20201029 18:15:36.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.718" endtime="20201029 18:15:36.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.788" endtime="20201029 18:15:37.139"></status>
</kw>
<msg timestamp="20201029 18:15:37.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041312903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:36.785" endtime="20201029 18:15:37.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041312903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041385, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:37.148" endtime="20201029 18:15:37.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.167" endtime="20201029 18:15:37.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.778" endtime="20201029 18:15:37.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.773" endtime="20201029 18:15:37.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.184" level="INFO">${RESULT} = [{'diff': 7.209700000000013e-05}, {'diff': 7.216700000000492e-05}, {'diff': 7.258300000000106e-05}, {'diff': 7.234699999999344e-05}, {'diff': 7.259800000000011e-05}, {'diff': 7.257000000000097e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.175" endtime="20201029 18:15:37.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.195" level="INFO">${ACCURACY} = {'diff': [7.209700000000013e-05, 7.216700000000492e-05, 7.258300000000106e-05, 7.234699999999344e-05, 7.259800000000011e-05, 7.257000000000097e-05, 7.226400000000244e-05, 7.258400000000054e-05, 7.2429...</msg>
<status status="PASS" starttime="20201029 18:15:37.186" endtime="20201029 18:15:37.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.206" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.204" endtime="20201029 18:15:37.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.211" level="INFO">VALUE: [7.209700000000013e-05, 7.216700000000492e-05, 7.258300000000106e-05, 7.234699999999344e-05, 7.259800000000011e-05, 7.257000000000097e-05, 7.226400000000244e-05, 7.258400000000054e-05, 7.242999999999833e-05, 7.248599999999661e-05, 7.269400000000509e-05, 7.204200000000133e-05, 7.190299999999816e-05, 7.180500000000117e-05, 7.183300000000031e-05, 7.230500000000167e-05, 7.180600000000065e-05, 7.252800000000226e-05, 7.257000000000097e-05, 7.180600000000065e-05, 7.216700000000492e-05, 7.233300000000081e-05, 7.240199999999919e-05, 7.272200000000423e-05, 7.212499999999927e-05, 7.247200000000398e-05, 7.191699999999773e-05, 7.191699999999773e-05, 7.179200000000108e-05, 7.238899999999909e-05, 7.182000000000022e-05, 7.26110000000002e-05, 7.19309999999973e-05, 7.191699999999773e-05, 7.272200000000423e-05, 7.236099999999995e-05, 7.216599999999851e-05, 7.244400000000484e-05, 7.202799999999482e-05, 7.25969999999937e-05, 7.179200000000108e-05, 7.216699999999798e-05, 7.216699999999798e-05, 7.259800000000011e-05, 7.268099999999805e-05, 7.180600000000065e-05, 7.26110000000002e-05, 7.238799999999962e-05, 7.182000000000022e-05, 7.250000000000312e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.208" endtime="20201029 18:15:37.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.197" endtime="20201029 18:15:37.214"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.224" endtime="20201029 18:15:37.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.219" endtime="20201029 18:15:37.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.217" endtime="20201029 18:15:37.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.713" endtime="20201029 18:15:37.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.712" endtime="20201029 18:15:37.249"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.271" endtime="20201029 18:15:37.293"></status>
</kw>
<msg timestamp="20201029 18:15:37.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.268" endtime="20201029 18:15:37.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.296" endtime="20201029 18:15:37.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.303" endtime="20201029 18:15:37.307"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.261" endtime="20201029 18:15:37.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.255" endtime="20201029 18:15:37.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.326" endtime="20201029 18:15:37.679"></status>
</kw>
<msg timestamp="20201029 18:15:37.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041149472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.322" endtime="20201029 18:15:37.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041149472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041222556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.689" endtime="20201029 18:15:37.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.707" endtime="20201029 18:15:37.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.315" endtime="20201029 18:15:37.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.311" endtime="20201029 18:15:37.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.725" level="INFO">${RESULT} = [{'diff': 7.308400000000104e-05}, {'diff': 7.369499999999862e-05}, {'diff': 7.337499999999358e-05}, {'diff': 7.326400000000344e-05}, {'diff': 7.372200000000523e-05}, {'diff': 7.290299999999916e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.716" endtime="20201029 18:15:37.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:37.734" level="INFO">${ACCURACY} = {'diff': [7.308400000000104e-05, 7.369499999999862e-05, 7.337499999999358e-05, 7.326400000000344e-05, 7.372200000000523e-05, 7.290299999999916e-05, 7.370799999999872e-05, 7.279199999999514e-05, 7.3693...</msg>
<status status="PASS" starttime="20201029 18:15:37.727" endtime="20201029 18:15:37.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.745" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:15:37.743" endtime="20201029 18:15:37.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.750" level="INFO">VALUE: [7.308400000000104e-05, 7.369499999999862e-05, 7.337499999999358e-05, 7.326400000000344e-05, 7.372200000000523e-05, 7.290299999999916e-05, 7.370799999999872e-05, 7.279199999999514e-05, 7.369399999999915e-05, 7.291699999999873e-05, 7.295800000000491e-05, 7.362500000000077e-05, 7.291700000000567e-05, 7.330600000000215e-05, 7.304200000000233e-05, 7.369499999999862e-05, 7.347199999999804e-05, 7.273599999999686e-05, 7.334700000000138e-05, 7.280500000000217e-05, 7.334700000000138e-05, 7.302800000000276e-05, 7.304199999999539e-05, 7.358299999999512e-05, 7.345799999999847e-05, 7.34439999999989e-05, 7.320899999999769e-05, 7.357000000000197e-05, 7.332000000000172e-05, 7.369499999999862e-05, 7.345799999999847e-05, 7.274999999999643e-05, 7.370799999999872e-05, 7.327800000000301e-05, 7.334700000000138e-05, 7.305499999999548e-05, 7.304200000000233e-05, 7.283400000000079e-05, 7.344499999999837e-05, 7.369499999999862e-05, 7.32769999999966e-05, 7.365200000000044e-05, 7.333400000000129e-05, 7.295800000000491e-05, 7.327799999999607e-05, 7.27769999999961e-05, 7.272200000000423e-05, 7.341699999999923e-05, 7.280600000000165e-05, 7.35560000000024e-05]</msg>
<status status="PASS" starttime="20201029 18:15:37.747" endtime="20201029 18:15:37.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.736" endtime="20201029 18:15:37.754"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.764" endtime="20201029 18:15:37.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.759" endtime="20201029 18:15:37.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.756" endtime="20201029 18:15:37.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.251" endtime="20201029 18:15:37.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.250" endtime="20201029 18:15:37.790"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.813" endtime="20201029 18:15:37.839"></status>
</kw>
<msg timestamp="20201029 18:15:37.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.809" endtime="20201029 18:15:37.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.843" endtime="20201029 18:15:37.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.849" endtime="20201029 18:15:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.802" endtime="20201029 18:15:37.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.796" endtime="20201029 18:15:37.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.872" endtime="20201029 18:15:38.195"></status>
</kw>
<msg timestamp="20201029 18:15:38.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047364444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.869" endtime="20201029 18:15:38.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047290569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047364444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.205" endtime="20201029 18:15:38.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.224" endtime="20201029 18:15:38.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.862" endtime="20201029 18:15:38.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.857" endtime="20201029 18:15:38.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.241" level="INFO">${RESULT} = [{'diff': 7.387500000000102e-05}, {'diff': 7.402700000000428e-05}, {'diff': 7.42639999999975e-05}, {'diff': 7.45969999999957e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.429199999999664e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:38.232" endtime="20201029 18:15:38.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.250" level="INFO">${ACCURACY} = {'diff': [7.387500000000102e-05, 7.402700000000428e-05, 7.42639999999975e-05, 7.45969999999957e-05, 7.462500000000177e-05, 7.429199999999664e-05, 7.427800000000401e-05, 7.429200000000358e-05, 7.402800...</msg>
<status status="PASS" starttime="20201029 18:15:38.243" endtime="20201029 18:15:38.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.261" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.259" endtime="20201029 18:15:38.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.266" level="INFO">VALUE: [7.387500000000102e-05, 7.402700000000428e-05, 7.42639999999975e-05, 7.45969999999957e-05, 7.462500000000177e-05, 7.429199999999664e-05, 7.427800000000401e-05, 7.429200000000358e-05, 7.402800000000376e-05, 7.402800000000376e-05, 7.412500000000127e-05, 7.438800000000162e-05, 7.469400000000015e-05, 7.469400000000015e-05, 7.402700000000428e-05, 7.438900000000109e-05, 7.387500000000102e-05, 7.445799999999947e-05, 7.397199999999854e-05, 7.44439999999999e-05, 7.440300000000066e-05, 7.459700000000263e-05, 7.441700000000023e-05, 7.470899999999919e-05, 7.390300000000016e-05, 7.375000000000437e-05, 7.381900000000274e-05, 7.422199999999879e-05, 7.458300000000306e-05, 7.383300000000231e-05, 7.3763999999997e-05, 7.437499999999458e-05, 7.436099999999501e-05, 7.465300000000091e-05, 7.424999999999793e-05, 7.381900000000274e-05, 7.472199999999929e-05, 7.448599999999861e-05, 7.413900000000084e-05, 7.423599999999836e-05, 7.443000000000033e-05, 7.404099999999691e-05, 7.427700000000453e-05, 7.39439999999994e-05, 7.412500000000127e-05, 7.383300000000231e-05, 7.391699999999973e-05, 7.407000000000247e-05, 7.440300000000066e-05, 7.42769999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.263" endtime="20201029 18:15:38.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.252" endtime="20201029 18:15:38.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.280" endtime="20201029 18:15:38.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.274" endtime="20201029 18:15:38.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.272" endtime="20201029 18:15:38.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.792" endtime="20201029 18:15:38.305"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.791" endtime="20201029 18:15:38.306"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.328" endtime="20201029 18:15:38.350"></status>
</kw>
<msg timestamp="20201029 18:15:38.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.325" endtime="20201029 18:15:38.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.353" endtime="20201029 18:15:38.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.359" endtime="20201029 18:15:38.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.318" endtime="20201029 18:15:38.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.312" endtime="20201029 18:15:38.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.382" endtime="20201029 18:15:38.733"></status>
</kw>
<msg timestamp="20201029 18:15:38.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041274083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.379" endtime="20201029 18:15:38.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041274083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041349597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.743" endtime="20201029 18:15:38.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.761" endtime="20201029 18:15:38.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.372" endtime="20201029 18:15:38.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.367" endtime="20201029 18:15:38.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.778" level="INFO">${RESULT} = [{'diff': 7.551399999999875e-05}, {'diff': 7.536099999999601e-05}, {'diff': 7.497299999999901e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.513900000000184e-05}, {'diff': 7.545800000000047e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.770" endtime="20201029 18:15:38.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:38.789" level="INFO">${ACCURACY} = {'diff': [7.551399999999875e-05, 7.536099999999601e-05, 7.497299999999901e-05, 7.523599999999936e-05, 7.513900000000184e-05, 7.545800000000047e-05, 7.497199999999954e-05, 7.538899999999515e-05, 7.5375...</msg>
<status status="PASS" starttime="20201029 18:15:38.781" endtime="20201029 18:15:38.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.800" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:15:38.798" endtime="20201029 18:15:38.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.806" level="INFO">VALUE: [7.551399999999875e-05, 7.536099999999601e-05, 7.497299999999901e-05, 7.523599999999936e-05, 7.513900000000184e-05, 7.545800000000047e-05, 7.497199999999954e-05, 7.538899999999515e-05, 7.537500000000252e-05, 7.483299999999637e-05, 7.511200000000218e-05, 7.551399999999875e-05, 7.48189999999968e-05, 7.487500000000202e-05, 7.49440000000004e-05, 7.569400000000115e-05, 7.50560000000039e-05, 7.502800000000476e-05, 7.559800000000311e-05, 7.480600000000365e-05, 7.55839999999966e-05, 7.569500000000062e-05, 7.524999999999893e-05, 7.518000000000108e-05, 7.513799999999543e-05, 7.483299999999637e-05, 7.504099999999791e-05, 7.549999999999918e-05, 7.567999999999464e-05, 7.502800000000476e-05, 7.48189999999968e-05, 7.557000000000397e-05, 7.504199999999739e-05, 7.502800000000476e-05, 7.518000000000108e-05, 7.527800000000501e-05, 7.487500000000202e-05, 7.526300000000596e-05, 7.536099999999601e-05, 7.549999999999918e-05, 7.501399999999825e-05, 7.51110000000027e-05, 7.508300000000356e-05, 7.573599999999986e-05, 7.509799999999567e-05, 7.501400000000519e-05, 7.565300000000191e-05, 7.48189999999968e-05, 7.51110000000027e-05, 7.551399999999875e-05]</msg>
<status status="PASS" starttime="20201029 18:15:38.802" endtime="20201029 18:15:38.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.791" endtime="20201029 18:15:38.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.818" endtime="20201029 18:15:38.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.814" endtime="20201029 18:15:38.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.811" endtime="20201029 18:15:38.842"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.308" endtime="20201029 18:15:38.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.306" endtime="20201029 18:15:38.843"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.866" endtime="20201029 18:15:38.888"></status>
</kw>
<msg timestamp="20201029 18:15:38.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.863" endtime="20201029 18:15:38.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.891" endtime="20201029 18:15:38.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.897" endtime="20201029 18:15:38.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.855" endtime="20201029 18:15:38.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.850" endtime="20201029 18:15:38.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.921" endtime="20201029 18:15:39.272"></status>
</kw>
<msg timestamp="20201029 18:15:39.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04114925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041225431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:38.917" endtime="20201029 18:15:39.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04114925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041225431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:39.281" endtime="20201029 18:15:39.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.300" endtime="20201029 18:15:39.304"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.910" endtime="20201029 18:15:39.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.906" endtime="20201029 18:15:39.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.317" level="INFO">${RESULT} = [{'diff': 7.618100000000155e-05}, {'diff': 7.648600000000061e-05}, {'diff': 7.581900000000474e-05}, {'diff': 7.647200000000104e-05}, {'diff': 7.62639999999995e-05}, {'diff': 7.650000000000018e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:39.308" endtime="20201029 18:15:39.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.328" level="INFO">${ACCURACY} = {'diff': [7.618100000000155e-05, 7.648600000000061e-05, 7.581900000000474e-05, 7.647200000000104e-05, 7.62639999999995e-05, 7.650000000000018e-05, 7.591700000000173e-05, 7.620800000000122e-05, 7.63059...</msg>
<status status="PASS" starttime="20201029 18:15:39.319" endtime="20201029 18:15:39.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.339" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.337" endtime="20201029 18:15:39.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.345" level="INFO">VALUE: [7.618100000000155e-05, 7.648600000000061e-05, 7.581900000000474e-05, 7.647200000000104e-05, 7.62639999999995e-05, 7.650000000000018e-05, 7.591700000000173e-05, 7.620800000000122e-05, 7.630599999999821e-05, 7.634700000000438e-05, 7.613900000000284e-05, 7.582000000000422e-05, 7.581999999999728e-05, 7.590300000000216e-05, 7.668000000000258e-05, 7.613800000000337e-05, 7.65969999999977e-05, 7.650000000000018e-05, 7.580599999999771e-05, 7.579200000000508e-05, 7.581900000000474e-05, 7.580599999999771e-05, 7.620900000000069e-05, 7.583399999999685e-05, 7.627799999999907e-05, 7.636100000000395e-05, 7.592999999999489e-05, 7.668100000000205e-05, 7.612499999999633e-05, 7.61110000000037e-05, 7.583299999999737e-05, 7.580499999999823e-05, 7.636099999999701e-05, 7.662500000000377e-05, 7.6069000000005e-05, 7.608299999999762e-05, 7.623600000000036e-05, 7.59310000000013e-05, 7.613900000000284e-05, 7.59440000000014e-05, 7.649999999999324e-05, 7.66110000000042e-05, 7.579099999999866e-05, 7.583300000000431e-05, 7.612500000000327e-05, 7.623600000000036e-05, 7.606899999999805e-05, 7.631900000000524e-05, 7.648600000000061e-05, 7.59310000000013e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.342" endtime="20201029 18:15:39.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.330" endtime="20201029 18:15:39.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.357" endtime="20201029 18:15:39.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.353" endtime="20201029 18:15:39.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.351" endtime="20201029 18:15:39.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.845" endtime="20201029 18:15:39.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.844" endtime="20201029 18:15:39.382"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.405" endtime="20201029 18:15:39.427"></status>
</kw>
<msg timestamp="20201029 18:15:39.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.402" endtime="20201029 18:15:39.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.430" endtime="20201029 18:15:39.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.437" endtime="20201029 18:15:39.441"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.395" endtime="20201029 18:15:39.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.389" endtime="20201029 18:15:39.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.460" endtime="20201029 18:15:39.811"></status>
</kw>
<msg timestamp="20201029 18:15:39.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041535514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.457" endtime="20201029 18:15:39.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041535514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.820" endtime="20201029 18:15:39.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.839" endtime="20201029 18:15:39.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.450" endtime="20201029 18:15:39.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.445" endtime="20201029 18:15:39.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.857" level="INFO">${RESULT} = [{'diff': 7.765299999999697e-05}, {'diff': 7.708299999999862e-05}, {'diff': 7.684699999999794e-05}, {'diff': 7.738799999999768e-05}, {'diff': 7.692999999999589e-05}, {'diff': 7.758299999999912e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:39.848" endtime="20201029 18:15:39.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:39.866" level="INFO">${ACCURACY} = {'diff': [7.765299999999697e-05, 7.708299999999862e-05, 7.684699999999794e-05, 7.738799999999768e-05, 7.692999999999589e-05, 7.758299999999912e-05, 7.758299999999912e-05, 7.773599999999492e-05, 7.7041...</msg>
<status status="PASS" starttime="20201029 18:15:39.859" endtime="20201029 18:15:39.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.877" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:15:39.874" endtime="20201029 18:15:39.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.882" level="INFO">VALUE: [7.765299999999697e-05, 7.708299999999862e-05, 7.684699999999794e-05, 7.738799999999768e-05, 7.692999999999589e-05, 7.758299999999912e-05, 7.758299999999912e-05, 7.773599999999492e-05, 7.704199999999939e-05, 7.704200000000633e-05, 7.75969999999987e-05, 7.73189999999993e-05, 7.680599999999871e-05, 7.682000000000522e-05, 7.71389999999969e-05, 7.675000000000043e-05, 7.717999999999614e-05, 7.747200000000204e-05, 7.723600000000136e-05, 7.680499999999923e-05, 7.752800000000032e-05, 7.738899999999715e-05, 7.747200000000204e-05, 7.72640000000005e-05, 7.745799999999553e-05, 7.725000000000093e-05, 7.716600000000351e-05, 7.677799999999957e-05, 7.772200000000229e-05, 7.679199999999914e-05, 7.773600000000186e-05, 7.765300000000391e-05, 7.691600000000326e-05, 7.773600000000186e-05, 7.744399999999596e-05, 7.75969999999987e-05, 7.720900000000169e-05, 7.688899999999665e-05, 7.758299999999912e-05, 7.727800000000007e-05, 7.704200000000633e-05, 7.680599999999871e-05, 7.713900000000384e-05, 7.75969999999987e-05, 7.736100000000495e-05, 7.720800000000222e-05, 7.719500000000212e-05, 7.723600000000136e-05, 7.737499999999758e-05, 7.725000000000093e-05]</msg>
<status status="PASS" starttime="20201029 18:15:39.879" endtime="20201029 18:15:39.890"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.868" endtime="20201029 18:15:39.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.901" endtime="20201029 18:15:39.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.896" endtime="20201029 18:15:39.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.894" endtime="20201029 18:15:39.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.385" endtime="20201029 18:15:39.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.383" endtime="20201029 18:15:39.925"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.948" endtime="20201029 18:15:39.971"></status>
</kw>
<msg timestamp="20201029 18:15:39.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.945" endtime="20201029 18:15:39.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.974" endtime="20201029 18:15:39.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.980" endtime="20201029 18:15:39.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.938" endtime="20201029 18:15:39.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.932" endtime="20201029 18:15:39.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.004" endtime="20201029 18:15:40.343"></status>
</kw>
<msg timestamp="20201029 18:15:40.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042601764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.001" endtime="20201029 18:15:40.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042601764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.352" endtime="20201029 18:15:40.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.371" endtime="20201029 18:15:40.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.993" endtime="20201029 18:15:40.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.989" endtime="20201029 18:15:40.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.388" level="INFO">${RESULT} = [{'diff': 7.802800000000082e-05}, {'diff': 7.856900000000056e-05}, {'diff': 7.869399999999721e-05}, {'diff': 7.844500000000337e-05}, {'diff': 7.830600000000021e-05}, {'diff': 7.836099999999901e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:40.379" endtime="20201029 18:15:40.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.398" level="INFO">${ACCURACY} = {'diff': [7.802800000000082e-05, 7.856900000000056e-05, 7.869399999999721e-05, 7.844500000000337e-05, 7.830600000000021e-05, 7.836099999999901e-05, 7.79169999999968e-05, 7.806999999999953e-05, 7.86109...</msg>
<status status="PASS" starttime="20201029 18:15:40.390" endtime="20201029 18:15:40.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.409" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.406" endtime="20201029 18:15:40.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.414" level="INFO">VALUE: [7.802800000000082e-05, 7.856900000000056e-05, 7.869399999999721e-05, 7.844500000000337e-05, 7.830600000000021e-05, 7.836099999999901e-05, 7.79169999999968e-05, 7.806999999999953e-05, 7.861099999999926e-05, 7.841599999999782e-05, 7.845799999999653e-05, 7.792999999999689e-05, 7.772199999999535e-05, 7.848599999999567e-05, 7.773599999999492e-05, 7.85969999999997e-05, 7.830600000000021e-05, 7.833299999999987e-05, 7.850000000000218e-05, 7.857000000000003e-05, 7.843099999999686e-05, 7.787499999999808e-05, 7.833299999999987e-05, 7.774999999999449e-05, 7.793000000000383e-05, 7.768000000000358e-05, 7.870799999999678e-05, 7.805599999999996e-05, 7.801400000000125e-05, 7.856900000000056e-05, 7.820800000000322e-05, 7.827800000000107e-05, 7.798600000000211e-05, 7.783399999999885e-05, 7.869500000000362e-05, 7.836199999999849e-05, 7.829100000000117e-05, 7.834699999999944e-05, 7.787499999999808e-05, 7.823600000000236e-05, 7.81389999999979e-05, 7.79310000000033e-05, 7.79310000000033e-05, 7.777800000000057e-05, 7.786099999999851e-05, 7.868099999999711e-05, 7.816700000000398e-05, 7.788899999999765e-05, 7.850000000000218e-05, 7.793000000000383e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.411" endtime="20201029 18:15:40.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.399" endtime="20201029 18:15:40.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.428" endtime="20201029 18:15:40.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.422" endtime="20201029 18:15:40.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.420" endtime="20201029 18:15:40.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.928" endtime="20201029 18:15:40.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.926" endtime="20201029 18:15:40.453"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.476" endtime="20201029 18:15:40.497"></status>
</kw>
<msg timestamp="20201029 18:15:40.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.472" endtime="20201029 18:15:40.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.500" endtime="20201029 18:15:40.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.506" endtime="20201029 18:15:40.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.465" endtime="20201029 18:15:40.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.459" endtime="20201029 18:15:40.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.530" endtime="20201029 18:15:40.876"></status>
</kw>
<msg timestamp="20201029 18:15:40.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040873264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.527" endtime="20201029 18:15:40.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040873264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.886" endtime="20201029 18:15:40.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.905" endtime="20201029 18:15:40.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.520" endtime="20201029 18:15:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.515" endtime="20201029 18:15:40.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.924" level="INFO">${RESULT} = [{'diff': 7.942999999999839e-05}, {'diff': 7.892999999999789e-05}, {'diff': 7.974999999999649e-05}, {'diff': 7.970800000000472e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.958300000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:40.915" endtime="20201029 18:15:40.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:40.935" level="INFO">${ACCURACY} = {'diff': [7.942999999999839e-05, 7.892999999999789e-05, 7.974999999999649e-05, 7.970800000000472e-05, 7.92640000000025e-05, 7.958300000000113e-05, 7.898600000000311e-05, 7.955600000000146e-05, 7.96389...</msg>
<status status="PASS" starttime="20201029 18:15:40.926" endtime="20201029 18:15:40.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.946" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:15:40.944" endtime="20201029 18:15:40.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.953" level="INFO">VALUE: [7.942999999999839e-05, 7.892999999999789e-05, 7.974999999999649e-05, 7.970800000000472e-05, 7.92640000000025e-05, 7.958300000000113e-05, 7.898600000000311e-05, 7.955600000000146e-05, 7.96389999999994e-05, 7.873600000000286e-05, 7.970899999999725e-05, 7.948599999999667e-05, 7.877800000000157e-05, 7.904100000000192e-05, 7.916600000000551e-05, 7.872199999999635e-05, 7.918099999999761e-05, 7.92640000000025e-05, 7.925000000000293e-05, 7.94719999999971e-05, 7.884799999999942e-05, 7.912499999999933e-05, 7.951299999999634e-05, 7.947300000000351e-05, 7.962499999999983e-05, 7.884699999999994e-05, 7.891599999999832e-05, 7.915299999999847e-05, 7.892999999999789e-05, 7.969399999999821e-05, 7.915299999999847e-05, 7.951399999999581e-05, 7.883399999999985e-05, 7.933300000000088e-05, 7.905600000000096e-05, 7.883399999999985e-05, 7.898599999999617e-05, 7.88190000000008e-05, 7.948599999999667e-05, 7.95970000000007e-05, 7.954200000000189e-05, 7.956900000000156e-05, 7.924999999999599e-05, 7.93190000000013e-05, 7.915299999999847e-05, 7.970799999999778e-05, 7.952700000000285e-05, 7.913900000000584e-05, 7.92640000000025e-05, 7.926399999999556e-05]</msg>
<status status="PASS" starttime="20201029 18:15:40.948" endtime="20201029 18:15:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.937" endtime="20201029 18:15:40.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.965" endtime="20201029 18:15:40.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.961" endtime="20201029 18:15:40.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.958" endtime="20201029 18:15:40.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.455" endtime="20201029 18:15:40.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.454" endtime="20201029 18:15:40.990"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.014" endtime="20201029 18:15:41.036"></status>
</kw>
<msg timestamp="20201029 18:15:41.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.011" endtime="20201029 18:15:41.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.040" endtime="20201029 18:15:41.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.046" endtime="20201029 18:15:41.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.003" endtime="20201029 18:15:41.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.997" endtime="20201029 18:15:41.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.070" endtime="20201029 18:15:41.391"></status>
</kw>
<msg timestamp="20201029 18:15:41.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.067" endtime="20201029 18:15:41.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042436875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.401" endtime="20201029 18:15:41.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.420" endtime="20201029 18:15:41.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.059" endtime="20201029 18:15:41.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.055" endtime="20201029 18:15:41.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.437" level="INFO">${RESULT} = [{'diff': 8.03190000000023e-05}, {'diff': 7.994399999999846e-05}, {'diff': 8.023600000000436e-05}, {'diff': 7.998600000000411e-05}, {'diff': 7.995800000000497e-05}, {'diff': 8.025000000000393e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.428" endtime="20201029 18:15:41.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.448" level="INFO">${ACCURACY} = {'diff': [8.03190000000023e-05, 7.994399999999846e-05, 8.023600000000436e-05, 7.998600000000411e-05, 7.995800000000497e-05, 8.025000000000393e-05, 7.988899999999965e-05, 8.052800000000332e-05, 8.02079...</msg>
<status status="PASS" starttime="20201029 18:15:41.439" endtime="20201029 18:15:41.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.459" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.457" endtime="20201029 18:15:41.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.464" level="INFO">VALUE: [8.03190000000023e-05, 7.994399999999846e-05, 8.023600000000436e-05, 7.998600000000411e-05, 7.995800000000497e-05, 8.025000000000393e-05, 7.988899999999965e-05, 8.052800000000332e-05, 8.020799999999828e-05, 8.076300000000453e-05, 8.051399999999681e-05, 8.042999999999939e-05, 8.070899999999825e-05, 8.042999999999939e-05, 8.016599999999957e-05, 8.013800000000043e-05, 7.98190000000018e-05, 8.029200000000264e-05, 7.994399999999846e-05, 8.056899999999562e-05, 7.995799999999803e-05, 8.069499999999868e-05, 7.972199999999735e-05, 8.004200000000239e-05, 8.069500000000562e-05, 8.040299999999972e-05, 7.995800000000497e-05, 8.075000000000443e-05, 8.072199999999835e-05, 8.033300000000188e-05, 7.98190000000018e-05, 8.02640000000035e-05, 8.004200000000239e-05, 7.994499999999793e-05, 8.012500000000033e-05, 7.982000000000128e-05, 8.037500000000058e-05, 8.011100000000076e-05, 8.05269999999969e-05, 7.980599999999477e-05, 8.024999999999699e-05, 8.070799999999878e-05, 8.024999999999699e-05, 8.037500000000058e-05, 8.04719999999981e-05, 7.983400000000085e-05, 8.002800000000282e-05, 8.051399999999681e-05, 8.036100000000101e-05, 7.982000000000128e-05]</msg>
<status status="PASS" starttime="20201029 18:15:41.461" endtime="20201029 18:15:41.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.450" endtime="20201029 18:15:41.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.477" endtime="20201029 18:15:41.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.473" endtime="20201029 18:15:41.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.470" endtime="20201029 18:15:41.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.992" endtime="20201029 18:15:41.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.991" endtime="20201029 18:15:41.502"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.525" endtime="20201029 18:15:41.547"></status>
</kw>
<msg timestamp="20201029 18:15:41.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.521" endtime="20201029 18:15:41.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.551" endtime="20201029 18:15:41.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.557" endtime="20201029 18:15:41.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.514" endtime="20201029 18:15:41.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.508" endtime="20201029 18:15:41.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.580" endtime="20201029 18:15:41.932"></status>
</kw>
<msg timestamp="20201029 18:15:41.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.577" endtime="20201029 18:15:41.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.941" endtime="20201029 18:15:41.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.960" endtime="20201029 18:15:41.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.570" endtime="20201029 18:15:41.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.565" endtime="20201029 18:15:41.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.977" level="INFO">${RESULT} = [{'diff': 8.120799999999928e-05}, {'diff': 8.106899999999612e-05}, {'diff': 8.069500000000562e-05}, {'diff': 8.174999999999849e-05}, {'diff': 8.166600000000107e-05}, {'diff': 8.098599999999817e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:41.969" endtime="20201029 18:15:41.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:41.987" level="INFO">${ACCURACY} = {'diff': [8.120799999999928e-05, 8.106899999999612e-05, 8.069500000000562e-05, 8.174999999999849e-05, 8.166600000000107e-05, 8.098599999999817e-05, 8.151399999999781e-05, 8.11249999999944e-05, 8.17079...</msg>
<status status="PASS" starttime="20201029 18:15:41.980" endtime="20201029 18:15:41.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.998" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:15:41.996" endtime="20201029 18:15:41.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.003" level="INFO">VALUE: [8.120799999999928e-05, 8.106899999999612e-05, 8.069500000000562e-05, 8.174999999999849e-05, 8.166600000000107e-05, 8.098599999999817e-05, 8.151399999999781e-05, 8.11249999999944e-05, 8.170799999999978e-05, 8.124999999999799e-05, 8.105500000000349e-05, 8.134700000000245e-05, 8.080599999999577e-05, 8.115300000000047e-05, 8.17090000000062e-05, 8.106899999999612e-05, 8.158300000000313e-05, 8.075000000000443e-05, 8.091600000000032e-05, 8.092999999999989e-05, 8.136100000000202e-05, 8.123599999999842e-05, 8.127799999999713e-05, 8.105600000000296e-05, 8.123599999999842e-05, 8.104199999999645e-05, 8.10970000000022e-05, 8.130600000000321e-05, 8.106899999999612e-05, 8.13469999999955e-05, 8.091600000000032e-05, 8.083299999999544e-05, 8.161099999999533e-05, 8.099999999999774e-05, 8.106999999999559e-05, 8.168100000000011e-05, 8.145799999999953e-05, 8.134700000000245e-05, 8.106999999999559e-05, 8.161100000000227e-05, 8.16390000000014e-05, 8.131999999999584e-05, 8.102799999999688e-05, 8.137499999999465e-05, 8.148599999999867e-05, 8.152800000000432e-05, 8.105599999999602e-05, 8.073600000000486e-05, 8.136100000000202e-05, 8.12090000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.000" endtime="20201029 18:15:42.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.988" endtime="20201029 18:15:42.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.016" endtime="20201029 18:15:42.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.012" endtime="20201029 18:15:42.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.009" endtime="20201029 18:15:42.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.504" endtime="20201029 18:15:42.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.503" endtime="20201029 18:15:42.041"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.064" endtime="20201029 18:15:42.087"></status>
</kw>
<msg timestamp="20201029 18:15:42.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.061" endtime="20201029 18:15:42.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.090" endtime="20201029 18:15:42.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.097" endtime="20201029 18:15:42.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.053" endtime="20201029 18:15:42.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.048" endtime="20201029 18:15:42.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.120" endtime="20201029 18:15:42.470"></status>
</kw>
<msg timestamp="20201029 18:15:42.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043026097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043108014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.117" endtime="20201029 18:15:42.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043026097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043108014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.480" endtime="20201029 18:15:42.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.499" endtime="20201029 18:15:42.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.110" endtime="20201029 18:15:42.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.105" endtime="20201029 18:15:42.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.516" level="INFO">${RESULT} = [{'diff': 8.19170000000008e-05}, {'diff': 8.244400000000096e-05}, {'diff': 8.204199999999745e-05}, {'diff': 8.202799999999788e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.193100000000036e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:42.507" endtime="20201029 18:15:42.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:42.525" level="INFO">${ACCURACY} = {'diff': [8.19170000000008e-05, 8.244400000000096e-05, 8.204199999999745e-05, 8.202799999999788e-05, 8.19170000000008e-05, 8.193100000000036e-05, 8.226399999999856e-05, 8.261100000000327e-05, 8.247299...</msg>
<status status="PASS" starttime="20201029 18:15:42.518" endtime="20201029 18:15:42.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.536" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:15:42.534" endtime="20201029 18:15:42.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.542" level="INFO">VALUE: [8.19170000000008e-05, 8.244400000000096e-05, 8.204199999999745e-05, 8.202799999999788e-05, 8.19170000000008e-05, 8.193100000000036e-05, 8.226399999999856e-05, 8.261100000000327e-05, 8.247299999999957e-05, 8.224999999999899e-05, 8.216600000000157e-05, 8.25970000000037e-05, 8.244399999999402e-05, 8.224999999999899e-05, 8.204199999999745e-05, 8.273599999999992e-05, 8.190300000000122e-05, 8.266700000000154e-05, 8.234700000000345e-05, 8.249999999999924e-05, 8.205500000000449e-05, 8.248599999999967e-05, 8.274999999999949e-05, 8.179100000000467e-05, 8.191600000000132e-05, 8.272200000000035e-05, 8.202799999999788e-05, 8.223600000000636e-05, 8.24170000000013e-05, 8.261099999999633e-05, 8.259699999999676e-05, 8.177799999999763e-05, 8.238900000000215e-05, 8.187500000000208e-05, 8.208299999999669e-05, 8.236100000000302e-05, 8.177799999999763e-05, 8.254200000000489e-05, 8.258299999999719e-05, 8.212500000000234e-05, 8.193100000000036e-05, 8.218100000000061e-05, 8.187499999999515e-05, 8.254100000000542e-05, 8.179200000000414e-05, 8.18049999999973e-05, 8.26390000000024e-05, 8.24720000000001e-05, 8.227800000000507e-05, 8.237499999999565e-05]</msg>
<status status="PASS" starttime="20201029 18:15:42.539" endtime="20201029 18:15:42.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.527" endtime="20201029 18:15:42.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.556" endtime="20201029 18:15:42.578"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.550" endtime="20201029 18:15:42.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.548" endtime="20201029 18:15:42.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.043" endtime="20201029 18:15:42.581"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.042" endtime="20201029 18:15:42.581"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.604" endtime="20201029 18:15:42.626"></status>
</kw>
<msg timestamp="20201029 18:15:42.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.601" endtime="20201029 18:15:42.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.630" endtime="20201029 18:15:42.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.636" endtime="20201029 18:15:42.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.593" endtime="20201029 18:15:42.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.587" endtime="20201029 18:15:42.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.659" endtime="20201029 18:15:43.007"></status>
</kw>
<msg timestamp="20201029 18:15:43.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041308, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:42.656" endtime="20201029 18:15:43.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041308, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041391083, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:43.016" endtime="20201029 18:15:43.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.035" endtime="20201029 18:15:43.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.649" endtime="20201029 18:15:43.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.644" endtime="20201029 18:15:43.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.052" level="INFO">${RESULT} = [{'diff': 8.308300000000463e-05}, {'diff': 8.316700000000204e-05}, {'diff': 8.344400000000196e-05}, {'diff': 8.32919999999987e-05}, {'diff': 8.305599999999802e-05}, {'diff': 8.280599999999777e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:43.043" endtime="20201029 18:15:43.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.067" level="INFO">${ACCURACY} = {'diff': [8.308300000000463e-05, 8.316700000000204e-05, 8.344400000000196e-05, 8.32919999999987e-05, 8.305599999999802e-05, 8.280599999999777e-05, 8.355499999999905e-05, 8.273599999999992e-05, 8.30419...</msg>
<status status="PASS" starttime="20201029 18:15:43.054" endtime="20201029 18:15:43.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.078" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.076" endtime="20201029 18:15:43.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.083" level="INFO">VALUE: [8.308300000000463e-05, 8.316700000000204e-05, 8.344400000000196e-05, 8.32919999999987e-05, 8.305599999999802e-05, 8.280599999999777e-05, 8.355499999999905e-05, 8.273599999999992e-05, 8.304199999999845e-05, 8.347300000000057e-05, 8.270899999999332e-05, 8.358299999999819e-05, 8.294400000000146e-05, 8.294400000000146e-05, 8.336099999999708e-05, 8.281899999999787e-05, 8.281899999999787e-05, 8.281999999999734e-05, 8.358299999999819e-05, 8.33049999999988e-05, 8.29170000000018e-05, 8.273599999999992e-05, 8.347300000000057e-05, 8.327699999999966e-05, 8.294400000000146e-05, 8.306899999999812e-05, 8.273599999999992e-05, 8.359699999999776e-05, 8.31249999999964e-05, 8.368100000000211e-05, 8.280599999999777e-05, 8.293100000000136e-05, 8.340199999999631e-05, 8.369400000000221e-05, 8.326399999999956e-05, 8.348600000000067e-05, 8.287499999999615e-05, 8.277799999999863e-05, 8.345799999999459e-05, 8.281899999999787e-05, 8.370800000000178e-05, 8.327799999999913e-05, 8.323600000000042e-05, 8.287500000000309e-05, 8.282000000000428e-05, 8.333299999999794e-05, 8.3152000000003e-05, 8.324999999999999e-05, 8.28049999999983e-05, 8.336100000000402e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.080" endtime="20201029 18:15:43.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.069" endtime="20201029 18:15:43.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.096" endtime="20201029 18:15:43.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.091" endtime="20201029 18:15:43.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.089" endtime="20201029 18:15:43.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.583" endtime="20201029 18:15:43.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.582" endtime="20201029 18:15:43.121"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.143" endtime="20201029 18:15:43.166"></status>
</kw>
<msg timestamp="20201029 18:15:43.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.140" endtime="20201029 18:15:43.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.169" endtime="20201029 18:15:43.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.175" endtime="20201029 18:15:43.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.133" endtime="20201029 18:15:43.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.127" endtime="20201029 18:15:43.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.199" endtime="20201029 18:15:43.537"></status>
</kw>
<msg timestamp="20201029 18:15:43.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.195" endtime="20201029 18:15:43.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041452056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.546" endtime="20201029 18:15:43.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.565" endtime="20201029 18:15:43.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.188" endtime="20201029 18:15:43.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.183" endtime="20201029 18:15:43.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.582" level="INFO">${RESULT} = [{'diff': 8.375000000000049e-05}, {'diff': 8.372300000000082e-05}, {'diff': 8.448600000000167e-05}, {'diff': 8.3846999999998e-05}, {'diff': 8.436100000000502e-05}, {'diff': 8.402799999999988e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:43.573" endtime="20201029 18:15:43.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:43.593" level="INFO">${ACCURACY} = {'diff': [8.375000000000049e-05, 8.372300000000082e-05, 8.448600000000167e-05, 8.3846999999998e-05, 8.436100000000502e-05, 8.402799999999988e-05, 8.377799999999963e-05, 8.3846999999998e-05, 8.42780000...</msg>
<status status="PASS" starttime="20201029 18:15:43.584" endtime="20201029 18:15:43.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.604" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:15:43.602" endtime="20201029 18:15:43.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.610" level="INFO">VALUE: [8.375000000000049e-05, 8.372300000000082e-05, 8.448600000000167e-05, 8.3846999999998e-05, 8.436100000000502e-05, 8.402799999999988e-05, 8.377799999999963e-05, 8.3846999999998e-05, 8.427800000000013e-05, 8.445800000000253e-05, 8.42919999999997e-05, 8.4152000000004e-05, 8.3846999999998e-05, 8.420799999999534e-05, 8.452800000000038e-05, 8.448600000000167e-05, 8.440300000000373e-05, 8.427800000000013e-05, 8.415300000000348e-05, 8.404199999999945e-05, 8.463899999999747e-05, 8.41249999999974e-05, 8.469499999999575e-05, 8.459699999999876e-05, 8.438899999999722e-05, 8.386200000000399e-05, 8.379099999999973e-05, 8.458299999999919e-05, 8.459699999999876e-05, 8.398600000000117e-05, 8.474999999999455e-05, 8.404199999999945e-05, 8.461099999999833e-05, 8.423599999999448e-05, 8.415299999999654e-05, 8.468099999999618e-05, 8.441599999999688e-05, 8.390299999999629e-05, 8.384799999999748e-05, 8.398599999999423e-05, 8.440300000000373e-05, 8.466600000000407e-05, 8.458299999999919e-05, 8.41799999999962e-05, 8.386100000000452e-05, 8.445800000000253e-05, 8.459699999999876e-05, 8.406999999999859e-05, 8.442999999999645e-05, 8.377799999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:15:43.607" endtime="20201029 18:15:43.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.595" endtime="20201029 18:15:43.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.622" endtime="20201029 18:15:43.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.618" endtime="20201029 18:15:43.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.615" endtime="20201029 18:15:43.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.123" endtime="20201029 18:15:43.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.122" endtime="20201029 18:15:43.647"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.670" endtime="20201029 18:15:43.691"></status>
</kw>
<msg timestamp="20201029 18:15:43.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.666" endtime="20201029 18:15:43.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.695" endtime="20201029 18:15:43.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.701" endtime="20201029 18:15:43.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.659" endtime="20201029 18:15:43.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.653" endtime="20201029 18:15:43.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.724" endtime="20201029 18:15:44.072"></status>
</kw>
<msg timestamp="20201029 18:15:44.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040879153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.721" endtime="20201029 18:15:44.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040879153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040964694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.082" endtime="20201029 18:15:44.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.101" endtime="20201029 18:15:44.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.714" endtime="20201029 18:15:44.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.709" endtime="20201029 18:15:44.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.118" level="INFO">${RESULT} = [{'diff': 8.554100000000148e-05}, {'diff': 8.495800000000303e-05}, {'diff': 8.556900000000062e-05}, {'diff': 8.527800000000113e-05}, {'diff': 8.4846999999999e-05}, {'diff': 8.504200000000045e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:44.109" endtime="20201029 18:15:44.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.127" level="INFO">${ACCURACY} = {'diff': [8.554100000000148e-05, 8.495800000000303e-05, 8.556900000000062e-05, 8.527800000000113e-05, 8.4846999999999e-05, 8.504200000000045e-05, 8.501400000000131e-05, 8.558300000000019e-05, 8.561099...</msg>
<status status="PASS" starttime="20201029 18:15:44.120" endtime="20201029 18:15:44.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.138" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.136" endtime="20201029 18:15:44.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.143" level="INFO">VALUE: [8.554100000000148e-05, 8.495800000000303e-05, 8.556900000000062e-05, 8.527800000000113e-05, 8.4846999999999e-05, 8.504200000000045e-05, 8.501400000000131e-05, 8.558300000000019e-05, 8.561099999999933e-05, 8.51390000000049e-05, 8.537500000000559e-05, 8.534799999999898e-05, 8.495800000000303e-05, 8.490199999999781e-05, 8.493100000000336e-05, 8.556900000000062e-05, 8.481899999999987e-05, 8.481899999999987e-05, 8.558300000000019e-05, 8.480599999999977e-05, 8.555500000000105e-05, 8.537499999999865e-05, 8.522300000000232e-05, 8.551400000000181e-05, 8.556899999999368e-05, 8.50970000000062e-05, 8.501400000000131e-05, 8.495799999999609e-05, 8.558300000000019e-05, 8.555600000000052e-05, 8.518099999999668e-05, 8.550000000000224e-05, 8.5459000000003e-05, 8.526400000000156e-05, 8.515299999999754e-05, 8.537499999999865e-05, 8.481899999999987e-05, 8.483299999999944e-05, 8.505500000000055e-05, 8.548600000000267e-05, 8.526400000000156e-05, 8.497299999999514e-05, 8.480599999999977e-05, 8.51249999999984e-05, 8.51390000000049e-05, 8.551400000000181e-05, 8.54999999999953e-05, 8.555500000000105e-05, 8.494400000000346e-05, 8.570800000000378e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.140" endtime="20201029 18:15:44.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.129" endtime="20201029 18:15:44.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.156" endtime="20201029 18:15:44.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.151" endtime="20201029 18:15:44.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.149" endtime="20201029 18:15:44.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.649" endtime="20201029 18:15:44.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.648" endtime="20201029 18:15:44.181"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.204" endtime="20201029 18:15:44.228"></status>
</kw>
<msg timestamp="20201029 18:15:44.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.200" endtime="20201029 18:15:44.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.231" endtime="20201029 18:15:44.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.237" endtime="20201029 18:15:44.241"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.193" endtime="20201029 18:15:44.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.187" endtime="20201029 18:15:44.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.261" endtime="20201029 18:15:44.575"></status>
</kw>
<msg timestamp="20201029 18:15:44.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043229639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:44.257" endtime="20201029 18:15:44.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043143, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043229639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:44.579" endtime="20201029 18:15:44.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.588" endtime="20201029 18:15:44.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.250" endtime="20201029 18:15:44.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.245" endtime="20201029 18:15:44.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.596" level="INFO">${RESULT} = [{'diff': 8.663899999999947e-05}, {'diff': 8.648600000000367e-05}, {'diff': 8.670899999999732e-05}, {'diff': 8.582000000000034e-05}, {'diff': 8.661100000000033e-05}, {'diff': 8.652800000000238e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:44.592" endtime="20201029 18:15:44.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:44.600" level="INFO">${ACCURACY} = {'diff': [8.663899999999947e-05, 8.648600000000367e-05, 8.670899999999732e-05, 8.582000000000034e-05, 8.661100000000033e-05, 8.652800000000238e-05, 8.669400000000521e-05, 8.62920000000017e-05, 8.62500...</msg>
<status status="PASS" starttime="20201029 18:15:44.597" endtime="20201029 18:15:44.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.605" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:15:44.604" endtime="20201029 18:15:44.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.608" level="INFO">VALUE: [8.663899999999947e-05, 8.648600000000367e-05, 8.670899999999732e-05, 8.582000000000034e-05, 8.661100000000033e-05, 8.652800000000238e-05, 8.669400000000521e-05, 8.62920000000017e-05, 8.625000000000299e-05, 8.605500000000155e-05, 8.670799999999784e-05, 8.59170000000048e-05, 8.605500000000155e-05, 8.584799999999948e-05, 8.629100000000223e-05, 8.583300000000044e-05, 8.636100000000008e-05, 8.591599999999838e-05, 8.663899999999947e-05, 8.633300000000094e-05, 8.656999999999415e-05, 8.66249999999999e-05, 8.650000000000324e-05, 8.66249999999999e-05, 8.636100000000008e-05, 8.606900000000112e-05, 8.623699999999596e-05, 8.605500000000155e-05, 8.593000000000489e-05, 8.636100000000008e-05, 8.663899999999947e-05, 8.629099999999529e-05, 8.64999999999963e-05, 8.623599999999648e-05, 8.633399999999347e-05, 8.669499999999775e-05, 8.638899999999922e-05, 8.594500000000393e-05, 8.661100000000033e-05, 8.654200000000195e-05, 8.647199999999716e-05, 8.626400000000256e-05, 8.66249999999999e-05, 8.657000000000109e-05, 8.647199999999716e-05, 8.590299999999829e-05, 8.633300000000094e-05, 8.582000000000034e-05, 8.591699999999786e-05, 8.66249999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:15:44.607" endtime="20201029 18:15:44.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.601" endtime="20201029 18:15:44.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.615" endtime="20201029 18:15:44.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.612" endtime="20201029 18:15:44.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.611" endtime="20201029 18:15:44.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.183" endtime="20201029 18:15:44.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.182" endtime="20201029 18:15:44.639"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.662" endtime="20201029 18:15:44.684"></status>
</kw>
<msg timestamp="20201029 18:15:44.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.659" endtime="20201029 18:15:44.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.688" endtime="20201029 18:15:44.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.694" endtime="20201029 18:15:44.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.651" endtime="20201029 18:15:44.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.646" endtime="20201029 18:15:44.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.718" endtime="20201029 18:15:45.068"></status>
</kw>
<msg timestamp="20201029 18:15:45.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041260361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.714" endtime="20201029 18:15:45.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041260361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041347986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.078" endtime="20201029 18:15:45.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.097" endtime="20201029 18:15:45.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.707" endtime="20201029 18:15:45.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.702" endtime="20201029 18:15:45.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.114" level="INFO">${RESULT} = [{'diff': 8.76250000000009e-05}, {'diff': 8.738900000000022e-05}, {'diff': 8.774999999999755e-05}, {'diff': 8.759800000000123e-05}, {'diff': 8.711100000000083e-05}, {'diff': 8.693099999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:45.105" endtime="20201029 18:15:45.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.125" level="INFO">${ACCURACY} = {'diff': [8.76250000000009e-05, 8.738900000000022e-05, 8.774999999999755e-05, 8.759800000000123e-05, 8.711100000000083e-05, 8.693099999999843e-05, 8.772200000000535e-05, 8.698599999999723e-05, 8.73330...</msg>
<status status="PASS" starttime="20201029 18:15:45.116" endtime="20201029 18:15:45.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.135" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.133" endtime="20201029 18:15:45.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.141" level="INFO">VALUE: [8.76250000000009e-05, 8.738900000000022e-05, 8.774999999999755e-05, 8.759800000000123e-05, 8.711100000000083e-05, 8.693099999999843e-05, 8.772200000000535e-05, 8.698599999999723e-05, 8.733300000000194e-05, 8.695799999999809e-05, 8.718099999999868e-05, 8.677800000000263e-05, 8.747199999999816e-05, 8.691699999999886e-05, 8.726400000000356e-05, 8.725000000000399e-05, 8.719399999999877e-05, 8.722300000000432e-05, 8.747199999999816e-05, 8.759700000000176e-05, 8.727800000000313e-05, 8.748599999999773e-05, 8.694400000000546e-05, 8.737500000000065e-05, 8.677799999999569e-05, 8.73470000000015e-05, 8.688899999999972e-05, 8.71669999999991e-05, 8.71799999999992e-05, 8.768099999999918e-05, 8.725000000000399e-05, 8.68050000000023e-05, 8.71799999999992e-05, 8.693000000000589e-05, 8.723599999999748e-05, 8.687500000000015e-05, 8.759700000000176e-05, 8.687500000000015e-05, 8.6847000000001e-05, 8.682000000000134e-05, 8.694500000000494e-05, 8.731899999999543e-05, 8.708299999999475e-05, 8.687500000000015e-05, 8.726400000000356e-05, 8.679100000000273e-05, 8.743099999999893e-05, 8.71669999999991e-05, 8.766700000000655e-05, 8.680599999999483e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.138" endtime="20201029 18:15:45.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.126" endtime="20201029 18:15:45.150"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.160" endtime="20201029 18:15:45.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.156" endtime="20201029 18:15:45.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.153" endtime="20201029 18:15:45.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.641" endtime="20201029 18:15:45.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.640" endtime="20201029 18:15:45.185"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.208" endtime="20201029 18:15:45.230"></status>
</kw>
<msg timestamp="20201029 18:15:45.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.204" endtime="20201029 18:15:45.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.233" endtime="20201029 18:15:45.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.240" endtime="20201029 18:15:45.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.197" endtime="20201029 18:15:45.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.191" endtime="20201029 18:15:45.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.263" endtime="20201029 18:15:45.607"></status>
</kw>
<msg timestamp="20201029 18:15:45.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041457708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.260" endtime="20201029 18:15:45.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041457708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041545583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.617" endtime="20201029 18:15:45.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.636" endtime="20201029 18:15:45.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.252" endtime="20201029 18:15:45.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.248" endtime="20201029 18:15:45.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:45.653" level="INFO">${RESULT} = [{'diff': 8.787499999999421e-05}, {'diff': 8.802799999999694e-05}, {'diff': 8.81250000000014e-05}, {'diff': 8.794500000000594e-05}, {'diff': 8.834800000000198e-05}, {'diff': 8.793099999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:45.644" endtime="20201029 18:15:45.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:45.664" level="INFO">${ACCURACY} = {'diff': [8.787499999999421e-05, 8.802799999999694e-05, 8.81250000000014e-05, 8.794500000000594e-05, 8.834800000000198e-05, 8.793099999999943e-05, 8.829199999999676e-05, 8.868100000000018e-05, 8.87089...</msg>
<status status="PASS" starttime="20201029 18:15:45.655" endtime="20201029 18:15:45.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.675" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:15:45.673" endtime="20201029 18:15:45.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.681" level="INFO">VALUE: [8.787499999999421e-05, 8.802799999999694e-05, 8.81250000000014e-05, 8.794500000000594e-05, 8.834800000000198e-05, 8.793099999999943e-05, 8.829199999999676e-05, 8.868100000000018e-05, 8.870899999999932e-05, 8.859800000000223e-05, 8.845799999999959e-05, 8.804099999999704e-05, 8.765200000000056e-05, 8.870799999999984e-05, 8.815300000000054e-05, 8.827799999999719e-05, 8.843099999999993e-05, 8.793099999999943e-05, 8.79869999999977e-05, 8.848599999999873e-05, 8.829199999999676e-05, 8.815200000000106e-05, 8.83050000000038e-05, 8.779100000000373e-05, 8.787500000000115e-05, 8.870799999999984e-05, 8.859699999999582e-05, 8.813900000000097e-05, 8.859700000000276e-05, 8.827799999999719e-05, 8.813900000000097e-05, 8.77920000000032e-05, 8.772299999999789e-05, 8.838900000000122e-05, 8.795799999999909e-05, 8.870799999999984e-05, 8.804200000000345e-05, 8.838900000000122e-05, 8.866600000000113e-05, 8.831900000000337e-05, 8.847199999999916e-05, 8.823599999999848e-05, 8.869499999999975e-05, 8.779199999999626e-05, 8.815200000000106e-05, 8.837500000000165e-05, 8.804100000000398e-05, 8.813900000000097e-05, 8.802799999999694e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201029 18:15:45.678" endtime="20201029 18:15:45.682"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.666" endtime="20201029 18:15:45.684"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:45.694" endtime="20201029 18:15:45.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.689" endtime="20201029 18:15:45.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.687" endtime="20201029 18:15:45.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.187" endtime="20201029 18:15:45.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.186" endtime="20201029 18:15:45.719"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.742" endtime="20201029 18:15:45.764"></status>
</kw>
<msg timestamp="20201029 18:15:45.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.738" endtime="20201029 18:15:45.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:45.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:45.768" endtime="20201029 18:15:45.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.774" endtime="20201029 18:15:45.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.731" endtime="20201029 18:15:45.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.725" endtime="20201029 18:15:45.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:45.797" endtime="20201029 18:15:46.143"></status>
</kw>
<msg timestamp="20201029 18:15:46.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041652972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041742389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:45.794" endtime="20201029 18:15:46.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041652972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041742389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.154" endtime="20201029 18:15:46.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.173" endtime="20201029 18:15:46.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.787" endtime="20201029 18:15:46.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.782" endtime="20201029 18:15:46.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.190" level="INFO">${RESULT} = [{'diff': 8.941699999999442e-05}, {'diff': 8.947200000000016e-05}, {'diff': 8.904199999999751e-05}, {'diff': 8.931899999999743e-05}, {'diff': 8.898599999999923e-05}, {'diff': 8.902700000000541e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:46.182" endtime="20201029 18:15:46.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.200" level="INFO">${ACCURACY} = {'diff': [8.941699999999442e-05, 8.947200000000016e-05, 8.904199999999751e-05, 8.931899999999743e-05, 8.898599999999923e-05, 8.902700000000541e-05, 8.940199999999537e-05, 8.91529999999946e-05, 8.94859...</msg>
<status status="PASS" starttime="20201029 18:15:46.192" endtime="20201029 18:15:46.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.211" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.209" endtime="20201029 18:15:46.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.216" level="INFO">VALUE: [8.941699999999442e-05, 8.947200000000016e-05, 8.904199999999751e-05, 8.931899999999743e-05, 8.898599999999923e-05, 8.902700000000541e-05, 8.940199999999537e-05, 8.91529999999946e-05, 8.948599999999973e-05, 8.940300000000179e-05, 8.94450000000005e-05, 8.93199999999969e-05, 8.8945e-05, 8.893100000000043e-05, 8.94869999999992e-05, 8.959699999999682e-05, 8.91800000000012e-05, 8.89720000000066e-05, 8.956899999999768e-05, 8.888900000000172e-05, 8.883300000000344e-05, 8.911100000000283e-05, 8.913900000000197e-05, 8.948599999999973e-05, 8.945900000000007e-05, 8.945900000000007e-05, 8.926399999999862e-05, 8.926399999999862e-05, 8.919400000000077e-05, 8.924999999999905e-05, 8.970800000000084e-05, 8.91670000000011e-05, 8.940300000000179e-05, 8.938900000000222e-05, 8.948599999999973e-05, 8.884800000000248e-05, 8.890300000000129e-05, 8.874999999999855e-05, 8.947299999999964e-05, 8.905499999999761e-05, 8.941700000000136e-05, 8.888900000000172e-05, 8.952799999999844e-05, 8.955499999999811e-05, 8.958299999999725e-05, 8.89869999999987e-05, 8.945900000000007e-05, 8.96250000000029e-05, 8.947299999999964e-05, 8.94999999999993e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.213" endtime="20201029 18:15:46.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.202" endtime="20201029 18:15:46.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.229" endtime="20201029 18:15:46.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.225" endtime="20201029 18:15:46.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.222" endtime="20201029 18:15:46.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.721" endtime="20201029 18:15:46.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:45.720" endtime="20201029 18:15:46.254"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.278" endtime="20201029 18:15:46.302"></status>
</kw>
<msg timestamp="20201029 18:15:46.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.274" endtime="20201029 18:15:46.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.305" endtime="20201029 18:15:46.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.311" endtime="20201029 18:15:46.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.267" endtime="20201029 18:15:46.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.261" endtime="20201029 18:15:46.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.335" endtime="20201029 18:15:46.676"></status>
</kw>
<msg timestamp="20201029 18:15:46.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04372075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043810833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:46.332" endtime="20201029 18:15:46.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04372075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043810833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:46.686" endtime="20201029 18:15:46.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.705" endtime="20201029 18:15:46.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.324" endtime="20201029 18:15:46.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.320" endtime="20201029 18:15:46.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.722" level="INFO">${RESULT} = [{'diff': 9.008299999999775e-05}, {'diff': 8.981899999999793e-05}, {'diff': 9.013899999999603e-05}, {'diff': 9.036099999999714e-05}, {'diff': 8.987499999999621e-05}, {'diff': 8.9945000000001e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:46.713" endtime="20201029 18:15:46.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.731" level="INFO">${ACCURACY} = {'diff': [9.008299999999775e-05, 8.981899999999793e-05, 9.013899999999603e-05, 9.036099999999714e-05, 8.987499999999621e-05, 8.9945000000001e-05, 8.988900000000272e-05, 9.001399999999937e-05, 9.055599...</msg>
<status status="PASS" starttime="20201029 18:15:46.724" endtime="20201029 18:15:46.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.742" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.740" endtime="20201029 18:15:46.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.748" level="INFO">VALUE: [9.008299999999775e-05, 8.981899999999793e-05, 9.013899999999603e-05, 9.036099999999714e-05, 8.987499999999621e-05, 8.9945000000001e-05, 8.988900000000272e-05, 9.001399999999937e-05, 9.055599999999858e-05, 9.023699999999996e-05, 9.037500000000365e-05, 8.974999999999955e-05, 8.994400000000152e-05, 9.052799999999944e-05, 8.995800000000109e-05, 9.038900000000322e-05, 9.047199999999422e-05, 8.980600000000477e-05, 8.986100000000358e-05, 9.052699999999997e-05, 9.00129999999999e-05, 8.995800000000109e-05, 9.040299999999585e-05, 9.058299999999825e-05, 8.981899999999793e-05, 8.979199999999826e-05, 9.038900000000322e-05, 9.015300000000254e-05, 9.066600000000313e-05, 9.022200000000091e-05, 9.059799999999729e-05, 8.980599999999783e-05, 9.015199999999612e-05, 9.040199999999637e-05, 9.026399999999962e-05, 9.065300000000304e-05, 9.029199999999876e-05, 8.994400000000152e-05, 9.049999999999336e-05, 9.04450000000015e-05, 9.005599999999808e-05, 9.052699999999997e-05, 9.04450000000015e-05, 8.980599999999783e-05, 8.994400000000152e-05, 9.06659999999962e-05, 8.99999999999998e-05, 9.06659999999962e-05, 8.995800000000109e-05, 9.056899999999868e-05]</msg>
<status status="PASS" starttime="20201029 18:15:46.745" endtime="20201029 18:15:46.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.733" endtime="20201029 18:15:46.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.762" endtime="20201029 18:15:46.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.756" endtime="20201029 18:15:46.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.753" endtime="20201029 18:15:46.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.256" endtime="20201029 18:15:46.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.255" endtime="20201029 18:15:46.787"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.812" endtime="20201029 18:15:46.835"></status>
</kw>
<msg timestamp="20201029 18:15:46.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.809" endtime="20201029 18:15:46.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.838" endtime="20201029 18:15:46.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.844" endtime="20201029 18:15:46.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.801" endtime="20201029 18:15:46.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.794" endtime="20201029 18:15:46.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.868" endtime="20201029 18:15:47.206"></status>
</kw>
<msg timestamp="20201029 18:15:47.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043829903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043920917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.864" endtime="20201029 18:15:47.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043829903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043920917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.215" endtime="20201029 18:15:47.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.234" endtime="20201029 18:15:47.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.857" endtime="20201029 18:15:47.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.852" endtime="20201029 18:15:47.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.251" level="INFO">${RESULT} = [{'diff': 9.101399999999343e-05}, {'diff': 9.15000000000013e-05}, {'diff': 9.147200000000216e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.136099999999814e-05}, {'diff': 9.102700000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:47.242" endtime="20201029 18:15:47.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.262" level="INFO">${ACCURACY} = {'diff': [9.101399999999343e-05, 9.15000000000013e-05, 9.147200000000216e-05, 9.163899999999753e-05, 9.136099999999814e-05, 9.102700000000047e-05, 9.091599999999644e-05, 9.093000000000295e-05, 9.07909...</msg>
<status status="PASS" starttime="20201029 18:15:47.253" endtime="20201029 18:15:47.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.273" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.271" endtime="20201029 18:15:47.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.278" level="INFO">VALUE: [9.101399999999343e-05, 9.15000000000013e-05, 9.147200000000216e-05, 9.163899999999753e-05, 9.136099999999814e-05, 9.102700000000047e-05, 9.091599999999644e-05, 9.093000000000295e-05, 9.079099999999979e-05, 9.162499999999796e-05, 9.148600000000173e-05, 9.10000000000008e-05, 9.147200000000216e-05, 9.136100000000508e-05, 9.079199999999926e-05, 9.16120000000048e-05, 9.126299999999421e-05, 9.14870000000012e-05, 9.093100000000243e-05, 9.11800000000032e-05, 9.15000000000013e-05, 9.167999999999676e-05, 9.136099999999814e-05, 9.087500000000415e-05, 9.137499999999771e-05, 9.106999999999865e-05, 9.093000000000295e-05, 9.147300000000164e-05, 9.112499999999746e-05, 9.122200000000191e-05, 9.10000000000008e-05, 9.148600000000173e-05, 9.134699999999857e-05, 9.147199999999522e-05, 9.093000000000295e-05, 9.11529999999966e-05, 9.147200000000216e-05, 9.125000000000105e-05, 9.083399999999797e-05, 9.162499999999796e-05, 9.137499999999771e-05, 9.15000000000013e-05, 9.112499999999746e-05, 9.122199999999497e-05, 9.09859999999943e-05, 9.162499999999796e-05, 9.0945000000002e-05, 9.09859999999943e-05, 9.15000000000013e-05, 9.081900000000587e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.275" endtime="20201029 18:15:47.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.264" endtime="20201029 18:15:47.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.291" endtime="20201029 18:15:47.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.286" endtime="20201029 18:15:47.314"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.284" endtime="20201029 18:15:47.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.789" endtime="20201029 18:15:47.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.788" endtime="20201029 18:15:47.316"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.338" endtime="20201029 18:15:47.360"></status>
</kw>
<msg timestamp="20201029 18:15:47.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.335" endtime="20201029 18:15:47.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.364" endtime="20201029 18:15:47.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.370" endtime="20201029 18:15:47.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.328" endtime="20201029 18:15:47.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.322" endtime="20201029 18:15:47.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.393" endtime="20201029 18:15:47.730"></status>
</kw>
<msg timestamp="20201029 18:15:47.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.390" endtime="20201029 18:15:47.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040959042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041051028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.739" endtime="20201029 18:15:47.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.758" endtime="20201029 18:15:47.762"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.383" endtime="20201029 18:15:47.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.378" endtime="20201029 18:15:47.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.775" level="INFO">${RESULT} = [{'diff': 9.198600000000223e-05}, {'diff': 9.226400000000162e-05}, {'diff': 9.257000000000015e-05}, {'diff': 9.259799999999929e-05}, {'diff': 9.226399999999468e-05}, {'diff': 9.25000000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:47.767" endtime="20201029 18:15:47.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.787" level="INFO">${ACCURACY} = {'diff': [9.198600000000223e-05, 9.226400000000162e-05, 9.257000000000015e-05, 9.259799999999929e-05, 9.226399999999468e-05, 9.25000000000023e-05, 9.272199999999647e-05, 9.190299999999735e-05, 9.19299...</msg>
<status status="PASS" starttime="20201029 18:15:47.778" endtime="20201029 18:15:47.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.797" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.795" endtime="20201029 18:15:47.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.803" level="INFO">VALUE: [9.198600000000223e-05, 9.226400000000162e-05, 9.257000000000015e-05, 9.259799999999929e-05, 9.226399999999468e-05, 9.25000000000023e-05, 9.272199999999647e-05, 9.190299999999735e-05, 9.192999999999701e-05, 9.226400000000162e-05, 9.262499999999896e-05, 9.227800000000119e-05, 9.219400000000377e-05, 9.222200000000291e-05, 9.259799999999929e-05, 9.251400000000187e-05, 9.216600000000463e-05, 9.212499999999846e-05, 9.201400000000137e-05, 9.198600000000223e-05, 9.227800000000119e-05, 9.259699999999982e-05, 9.236099999999914e-05, 9.238899999999828e-05, 9.234699999999957e-05, 9.195900000000257e-05, 9.176400000000112e-05, 9.261099999999939e-05, 9.259699999999982e-05, 9.223599999999554e-05, 9.261099999999939e-05, 9.193000000000395e-05, 9.227800000000119e-05, 9.276300000000265e-05, 9.177800000000069e-05, 9.193099999999649e-05, 9.217999999999726e-05, 9.259699999999982e-05, 9.259699999999982e-05, 9.204200000000051e-05, 9.175000000000155e-05, 9.202800000000094e-05, 9.273599999999604e-05, 9.202800000000094e-05, 9.172199999999547e-05, 9.225000000000205e-05, 9.254200000000101e-05, 9.226400000000162e-05, 9.226400000000162e-05, 9.236099999999914e-05]</msg>
<status status="PASS" starttime="20201029 18:15:47.800" endtime="20201029 18:15:47.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.788" endtime="20201029 18:15:47.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.816" endtime="20201029 18:15:47.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.811" endtime="20201029 18:15:47.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.809" endtime="20201029 18:15:47.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.318" endtime="20201029 18:15:47.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.316" endtime="20201029 18:15:47.840"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.859" endtime="20201029 18:15:47.878"></status>
</kw>
<msg timestamp="20201029 18:15:47.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.857" endtime="20201029 18:15:47.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.879" endtime="20201029 18:15:47.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.882" endtime="20201029 18:15:47.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.853" endtime="20201029 18:15:47.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.847" endtime="20201029 18:15:47.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.893" endtime="20201029 18:15:48.227"></status>
</kw>
<msg timestamp="20201029 18:15:48.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034973736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035067167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.892" endtime="20201029 18:15:48.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034973736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035067167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.236" endtime="20201029 18:15:48.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.255" endtime="20201029 18:15:48.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.888" endtime="20201029 18:15:48.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.886" endtime="20201029 18:15:48.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.272" level="INFO">${RESULT} = [{'diff': 9.343100000000493e-05}, {'diff': 9.327700000000272e-05}, {'diff': 9.365199999999962e-05}, {'diff': 9.323600000000348e-05}, {'diff': 9.28330000000005e-05}, {'diff': 9.316699999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:48.264" endtime="20201029 18:15:48.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.281" level="INFO">${ACCURACY} = {'diff': [9.343100000000493e-05, 9.327700000000272e-05, 9.365199999999962e-05, 9.323600000000348e-05, 9.28330000000005e-05, 9.316699999999817e-05, 9.313899999999903e-05, 9.281900000000093e-05, 9.34029...</msg>
<status status="PASS" starttime="20201029 18:15:48.274" endtime="20201029 18:15:48.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.292" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.290" endtime="20201029 18:15:48.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.298" level="INFO">VALUE: [9.343100000000493e-05, 9.327700000000272e-05, 9.365199999999962e-05, 9.323600000000348e-05, 9.28330000000005e-05, 9.316699999999817e-05, 9.313899999999903e-05, 9.281900000000093e-05, 9.340299999999885e-05, 9.330600000000133e-05, 9.2945000000004e-05, 9.34729999999967e-05, 9.2945000000004e-05, 9.3027999999995e-05, 9.348600000000373e-05, 9.363899999999953e-05, 9.273600000000298e-05, 9.329200000000176e-05, 9.355500000000211e-05, 9.337499999999971e-05, 9.293099999999749e-05, 9.320899999999688e-05, 9.280600000000083e-05, 9.287499999999921e-05, 9.340200000000631e-05, 9.286099999999964e-05, 9.362499999999996e-05, 9.295800000000409e-05, 9.302800000000194e-05, 9.313899999999903e-05, 9.280600000000083e-05, 9.283399999999997e-05, 9.359700000000082e-05, 9.33200000000009e-05, 9.31529999999986e-05, 9.343099999999799e-05, 9.359700000000082e-05, 9.302699999999553e-05, 9.351400000000287e-05, 9.336199999999961e-05, 9.288899999999878e-05, 9.351400000000287e-05, 9.336100000000014e-05, 9.359800000000029e-05, 9.362499999999996e-05, 9.287500000000615e-05, 9.34870000000032e-05, 9.311099999999989e-05, 9.372200000000441e-05, 9.330600000000133e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.295" endtime="20201029 18:15:48.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.283" endtime="20201029 18:15:48.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.310" endtime="20201029 18:15:48.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.306" endtime="20201029 18:15:48.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.303" endtime="20201029 18:15:48.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.843" endtime="20201029 18:15:48.335"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.841" endtime="20201029 18:15:48.335"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.358" endtime="20201029 18:15:48.382"></status>
</kw>
<msg timestamp="20201029 18:15:48.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.354" endtime="20201029 18:15:48.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.385" endtime="20201029 18:15:48.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.391" endtime="20201029 18:15:48.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.347" endtime="20201029 18:15:48.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.341" endtime="20201029 18:15:48.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.415" endtime="20201029 18:15:48.753"></status>
</kw>
<msg timestamp="20201029 18:15:48.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042443875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042538431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.411" endtime="20201029 18:15:48.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042443875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042538431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.763" endtime="20201029 18:15:48.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.782" endtime="20201029 18:15:48.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.404" endtime="20201029 18:15:48.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.400" endtime="20201029 18:15:48.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.799" level="INFO">${RESULT} = [{'diff': 9.455600000000258e-05}, {'diff': 9.426400000000362e-05}, {'diff': 9.380499999999542e-05}, {'diff': 9.444399999999908e-05}, {'diff': 9.431900000000243e-05}, {'diff': 9.426400000000362e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:48.790" endtime="20201029 18:15:48.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.808" level="INFO">${ACCURACY} = {'diff': [9.455600000000258e-05, 9.426400000000362e-05, 9.380499999999542e-05, 9.444399999999908e-05, 9.431900000000243e-05, 9.426400000000362e-05, 9.393100000000543e-05, 9.440299999999985e-05, 9.4556...</msg>
<status status="PASS" starttime="20201029 18:15:48.801" endtime="20201029 18:15:48.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.819" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.817" endtime="20201029 18:15:48.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.825" level="INFO">VALUE: [9.455600000000258e-05, 9.426400000000362e-05, 9.380499999999542e-05, 9.444399999999908e-05, 9.431900000000243e-05, 9.426400000000362e-05, 9.393100000000543e-05, 9.440299999999985e-05, 9.455600000000258e-05, 9.407000000000165e-05, 9.452800000000344e-05, 9.391699999999892e-05, 9.429200000000276e-05, 9.424999999999711e-05, 9.458300000000225e-05, 9.43059999999954e-05, 9.469399999999933e-05, 9.413900000000003e-05, 9.41529999999996e-05, 9.386200000000011e-05, 9.39859999999973e-05, 9.438900000000028e-05, 9.424999999999711e-05, 9.401400000000337e-05, 9.38330000000015e-05, 9.390299999999935e-05, 9.459700000000182e-05, 9.406900000000218e-05, 9.441699999999942e-05, 9.404199999999557e-05, 9.405600000000208e-05, 9.401400000000337e-05, 9.426399999999668e-05, 9.459800000000129e-05, 9.458300000000225e-05, 9.462500000000096e-05, 9.392999999999901e-05, 9.440299999999985e-05, 9.42079999999984e-05, 9.380600000000183e-05, 9.466699999999967e-05, 9.427800000000319e-05, 9.442999999999951e-05, 9.43200000000019e-05, 9.457000000000215e-05, 9.455499999999617e-05, 9.456899999999574e-05, 9.449999999999736e-05, 9.429200000000276e-05, 9.467999999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:15:48.821" endtime="20201029 18:15:48.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.810" endtime="20201029 18:15:48.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.838" endtime="20201029 18:15:48.860"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.833" endtime="20201029 18:15:48.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.830" endtime="20201029 18:15:48.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.337" endtime="20201029 18:15:48.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.336" endtime="20201029 18:15:48.863"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.886" endtime="20201029 18:15:48.908"></status>
</kw>
<msg timestamp="20201029 18:15:48.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.883" endtime="20201029 18:15:48.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.912" endtime="20201029 18:15:48.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.918" endtime="20201029 18:15:48.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.876" endtime="20201029 18:15:48.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.870" endtime="20201029 18:15:48.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.941" endtime="20201029 18:15:49.280"></status>
</kw>
<msg timestamp="20201029 18:15:49.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04084975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040945167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:48.938" endtime="20201029 18:15:49.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04084975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040945167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:49.290" endtime="20201029 18:15:49.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.312" endtime="20201029 18:15:49.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.931" endtime="20201029 18:15:49.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.926" endtime="20201029 18:15:49.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.332" level="INFO">${RESULT} = [{'diff': 9.541700000000042e-05}, {'diff': 9.538900000000128e-05}, {'diff': 9.493000000000001e-05}, {'diff': 9.572199999999947e-05}, {'diff': 9.524999999999811e-05}, {'diff': 9.529199999999682e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:49.322" endtime="20201029 18:15:49.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.344" level="INFO">${ACCURACY} = {'diff': [9.541700000000042e-05, 9.538900000000128e-05, 9.493000000000001e-05, 9.572199999999947e-05, 9.524999999999811e-05, 9.529199999999682e-05, 9.529200000000376e-05, 9.480600000000283e-05, 9.4805...</msg>
<status status="PASS" starttime="20201029 18:15:49.335" endtime="20201029 18:15:49.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.356" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.353" endtime="20201029 18:15:49.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.361" level="INFO">VALUE: [9.541700000000042e-05, 9.538900000000128e-05, 9.493000000000001e-05, 9.572199999999947e-05, 9.524999999999811e-05, 9.529199999999682e-05, 9.529200000000376e-05, 9.480600000000283e-05, 9.48059999999959e-05, 9.57079999999999e-05, 9.55279999999975e-05, 9.561200000000186e-05, 9.551399999999793e-05, 9.480499999999642e-05, 9.501399999999743e-05, 9.537500000000171e-05, 9.572199999999947e-05, 9.486100000000164e-05, 9.561100000000239e-05, 9.494499999999906e-05, 9.557000000000315e-05, 9.527800000000419e-05, 9.526400000000462e-05, 9.547199999999922e-05, 9.522199999999897e-05, 9.502699999999753e-05, 9.55409999999976e-05, 9.51530000000006e-05, 9.483299999999556e-05, 9.537500000000171e-05, 9.534700000000257e-05, 9.516700000000017e-05, 9.473599999999804e-05, 9.540300000000085e-05, 9.501400000000437e-05, 9.504100000000404e-05, 9.511099999999495e-05, 9.522199999999897e-05, 9.549999999999836e-05, 9.538900000000128e-05, 9.572299999999895e-05, 9.53609999999952e-05, 9.538900000000128e-05, 9.490300000000035e-05, 9.487499999999427e-05, 9.57079999999999e-05, 9.523599999999854e-05, 9.509699999999538e-05, 9.473600000000498e-05, 9.494399999999958e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.358" endtime="20201029 18:15:49.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.346" endtime="20201029 18:15:49.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.374" endtime="20201029 18:15:49.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.370" endtime="20201029 18:15:49.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.367" endtime="20201029 18:15:49.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.866" endtime="20201029 18:15:49.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.864" endtime="20201029 18:15:49.399"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.422" endtime="20201029 18:15:49.444"></status>
</kw>
<msg timestamp="20201029 18:15:49.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.419" endtime="20201029 18:15:49.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.448" endtime="20201029 18:15:49.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.454" endtime="20201029 18:15:49.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.411" endtime="20201029 18:15:49.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.405" endtime="20201029 18:15:49.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.478" endtime="20201029 18:15:49.816"></status>
</kw>
<msg timestamp="20201029 18:15:49.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041087833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041183833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.474" endtime="20201029 18:15:49.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041087833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041183833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.825" endtime="20201029 18:15:49.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.845" endtime="20201029 18:15:49.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.467" endtime="20201029 18:15:49.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.462" endtime="20201029 18:15:49.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.862" level="INFO">${RESULT} = [{'diff': 9.60000000000058e-05}, {'diff': 9.583299999999656e-05}, {'diff': 9.649999999999936e-05}, {'diff': 9.613900000000203e-05}, {'diff': 9.581900000000393e-05}, {'diff': 9.613900000000203e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:49.853" endtime="20201029 18:15:49.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.873" level="INFO">${ACCURACY} = {'diff': [9.60000000000058e-05, 9.583299999999656e-05, 9.649999999999936e-05, 9.613900000000203e-05, 9.581900000000393e-05, 9.613900000000203e-05, 9.672299999999995e-05, 9.662500000000296e-05, 9.65419...</msg>
<status status="PASS" starttime="20201029 18:15:49.864" endtime="20201029 18:15:49.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.884" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.882" endtime="20201029 18:15:49.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.889" level="INFO">VALUE: [9.60000000000058e-05, 9.583299999999656e-05, 9.649999999999936e-05, 9.613900000000203e-05, 9.581900000000393e-05, 9.613900000000203e-05, 9.672299999999995e-05, 9.662500000000296e-05, 9.654199999999807e-05, 9.591700000000092e-05, 9.581999999999646e-05, 9.663899999999559e-05, 9.655499999999817e-05, 9.629199999999782e-05, 9.633400000000347e-05, 9.613900000000203e-05, 9.63609999999962e-05, 9.643000000000151e-05, 9.61530000000016e-05, 9.64729999999997e-05, 9.615299999999466e-05, 9.608299999999681e-05, 9.647200000000022e-05, 9.591700000000092e-05, 9.611099999999595e-05, 9.606900000000418e-05, 9.61530000000016e-05, 9.613899999999509e-05, 9.669500000000081e-05, 9.674999999999961e-05, 9.665299999999516e-05, 9.627699999999878e-05, 9.627699999999878e-05, 9.662499999999602e-05, 9.659700000000382e-05, 9.633299999999706e-05, 9.662499999999602e-05, 9.640199999999544e-05, 9.63609999999962e-05, 9.581999999999646e-05, 9.624999999999911e-05, 9.64859999999998e-05, 9.608299999999681e-05, 9.612500000000246e-05, 9.638900000000228e-05, 9.602800000000494e-05, 9.672200000000047e-05, 9.662500000000296e-05, 9.593100000000049e-05, 9.669500000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.886" endtime="20201029 18:15:49.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.875" endtime="20201029 18:15:49.893"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.902" endtime="20201029 18:15:49.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.898" endtime="20201029 18:15:49.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.895" endtime="20201029 18:15:49.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.401" endtime="20201029 18:15:49.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.400" endtime="20201029 18:15:49.927"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.949" endtime="20201029 18:15:49.972"></status>
</kw>
<msg timestamp="20201029 18:15:49.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.946" endtime="20201029 18:15:49.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.975" endtime="20201029 18:15:49.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.982" endtime="20201029 18:15:49.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.939" endtime="20201029 18:15:49.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.933" endtime="20201029 18:15:49.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.005" endtime="20201029 18:15:50.345"></status>
</kw>
<msg timestamp="20201029 18:15:50.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040982569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.002" endtime="20201029 18:15:50.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040885875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040982569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.354" endtime="20201029 18:15:50.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.373" endtime="20201029 18:15:50.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.994" endtime="20201029 18:15:50.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.990" endtime="20201029 18:15:50.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.390" level="INFO">${RESULT} = [{'diff': 9.669400000000133e-05}, {'diff': 9.768000000000276e-05}, {'diff': 9.75279999999995e-05}, {'diff': 9.712499999999652e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.677800000000569e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:50.381" endtime="20201029 18:15:50.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.400" level="INFO">${ACCURACY} = {'diff': [9.669400000000133e-05, 9.768000000000276e-05, 9.75279999999995e-05, 9.712499999999652e-05, 9.674999999999961e-05, 9.677800000000569e-05, 9.744499999999462e-05, 9.68059999999979e-05, 9.677699...</msg>
<status status="PASS" starttime="20201029 18:15:50.392" endtime="20201029 18:15:50.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.410" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.408" endtime="20201029 18:15:50.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.416" level="INFO">VALUE: [9.669400000000133e-05, 9.768000000000276e-05, 9.75279999999995e-05, 9.712499999999652e-05, 9.674999999999961e-05, 9.677800000000569e-05, 9.744499999999462e-05, 9.68059999999979e-05, 9.677699999999928e-05, 9.76809999999953e-05, 9.718000000000226e-05, 9.769400000000233e-05, 9.725000000000011e-05, 9.720799999999447e-05, 9.736100000000414e-05, 9.751399999999993e-05, 9.73200000000049e-05, 9.7027999999999e-05, 9.677799999999875e-05, 9.747299999999376e-05, 9.715200000000312e-05, 9.722199999999404e-05, 9.706899999999824e-05, 9.775000000000061e-05, 9.719400000000183e-05, 9.684700000000407e-05, 9.701400000000637e-05, 9.684699999999713e-05, 9.676400000000612e-05, 9.676399999999918e-05, 9.759800000000429e-05, 9.737499999999677e-05, 9.677799999999875e-05, 9.699999999999986e-05, 9.733299999999806e-05, 9.74860000000008e-05, 9.726399999999968e-05, 9.720799999999447e-05, 9.688900000000278e-05, 9.772200000000147e-05, 9.708400000000422e-05, 9.7027999999999e-05, 9.686100000000364e-05, 9.743000000000251e-05, 9.719499999999437e-05, 9.759700000000482e-05, 9.680600000000483e-05, 9.747200000000122e-05, 9.69730000000002e-05, 9.74860000000008e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.413" endtime="20201029 18:15:50.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.401" endtime="20201029 18:15:50.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.434" endtime="20201029 18:15:50.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.430" endtime="20201029 18:15:50.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.427" endtime="20201029 18:15:50.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.929" endtime="20201029 18:15:50.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.928" endtime="20201029 18:15:50.459"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.482" endtime="20201029 18:15:50.506"></status>
</kw>
<msg timestamp="20201029 18:15:50.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.479" endtime="20201029 18:15:50.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.509" endtime="20201029 18:15:50.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.516" endtime="20201029 18:15:50.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.471" endtime="20201029 18:15:50.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.465" endtime="20201029 18:15:50.523"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.539" endtime="20201029 18:15:50.876"></status>
</kw>
<msg timestamp="20201029 18:15:50.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042728375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042826125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.536" endtime="20201029 18:15:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042728375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042826125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.886" endtime="20201029 18:15:50.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.905" endtime="20201029 18:15:50.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.529" endtime="20201029 18:15:50.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.524" endtime="20201029 18:15:50.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.922" level="INFO">${RESULT} = [{'diff': 9.775000000000061e-05}, {'diff': 9.781999999999846e-05}, {'diff': 9.870899999999544e-05}, {'diff': 9.837500000000471e-05}, {'diff': 9.781999999999846e-05}, {'diff': 9.808299999999881e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:50.913" endtime="20201029 18:15:50.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.931" level="INFO">${ACCURACY} = {'diff': [9.775000000000061e-05, 9.781999999999846e-05, 9.870899999999544e-05, 9.837500000000471e-05, 9.781999999999846e-05, 9.808299999999881e-05, 9.847200000000222e-05, 9.797199999999479e-05, 9.8596...</msg>
<status status="PASS" starttime="20201029 18:15:50.924" endtime="20201029 18:15:50.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.942" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.940" endtime="20201029 18:15:50.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.947" level="INFO">VALUE: [9.775000000000061e-05, 9.781999999999846e-05, 9.870899999999544e-05, 9.837500000000471e-05, 9.781999999999846e-05, 9.808299999999881e-05, 9.847200000000222e-05, 9.797199999999479e-05, 9.859699999999888e-05, 9.870799999999597e-05, 9.794500000000206e-05, 9.794500000000206e-05, 9.804199999999957e-05, 9.869499999999587e-05, 9.830499999999992e-05, 9.827800000000025e-05, 9.858299999999931e-05, 9.826400000000068e-05, 9.850000000000136e-05, 9.801400000000043e-05, 9.847200000000222e-05, 9.770799999999497e-05, 9.816699999999623e-05, 9.781999999999846e-05, 9.858399999999878e-05, 9.815299999999666e-05, 9.80410000000001e-05, 9.81939999999959e-05, 9.813899999999709e-05, 9.794400000000258e-05, 9.795800000000215e-05, 9.866700000000367e-05, 9.840300000000385e-05, 9.847199999999529e-05, 9.790300000000335e-05, 9.78059999999989e-05, 9.820799999999547e-05, 9.859699999999888e-05, 9.872200000000247e-05, 9.781899999999899e-05, 9.78609999999977e-05, 9.837499999999777e-05, 9.85280000000005e-05, 9.83059999999994e-05, 9.859699999999888e-05, 9.805599999999914e-05, 9.813900000000403e-05, 9.870799999999597e-05, 9.827800000000025e-05, 9.805599999999914e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.944" endtime="20201029 18:15:50.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.933" endtime="20201029 18:15:50.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.962" endtime="20201029 18:15:50.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.956" endtime="20201029 18:15:50.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.953" endtime="20201029 18:15:50.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.461" endtime="20201029 18:15:50.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.460" endtime="20201029 18:15:50.987"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.009" endtime="20201029 18:15:51.032"></status>
</kw>
<msg timestamp="20201029 18:15:51.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.006" endtime="20201029 18:15:51.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.035" endtime="20201029 18:15:51.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.041" endtime="20201029 18:15:51.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.999" endtime="20201029 18:15:51.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.993" endtime="20201029 18:15:51.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.065" endtime="20201029 18:15:51.403"></status>
</kw>
<msg timestamp="20201029 18:15:51.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040915597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.062" endtime="20201029 18:15:51.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040915597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041014458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.412" endtime="20201029 18:15:51.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.433" endtime="20201029 18:15:51.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.054" endtime="20201029 18:15:51.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.050" endtime="20201029 18:15:51.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.450" level="INFO">${RESULT} = [{'diff': 9.88609999999987e-05}, {'diff': 9.901400000000143e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.959699999999988e-05}, {'diff': 9.927800000000125e-05}, {'diff': 9.934699999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:51.441" endtime="20201029 18:15:51.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.461" level="INFO">${ACCURACY} = {'diff': [9.88609999999987e-05, 9.901400000000143e-05, 9.881899999999999e-05, 9.959699999999988e-05, 9.927800000000125e-05, 9.934699999999963e-05, 9.970899999999644e-05, 9.915299999999766e-05, 9.90280...</msg>
<status status="PASS" starttime="20201029 18:15:51.452" endtime="20201029 18:15:51.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.472" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.469" endtime="20201029 18:15:51.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.477" level="INFO">VALUE: [9.88609999999987e-05, 9.901400000000143e-05, 9.881899999999999e-05, 9.959699999999988e-05, 9.927800000000125e-05, 9.934699999999963e-05, 9.970899999999644e-05, 9.915299999999766e-05, 9.9028000000001e-05, 9.916699999999723e-05, 9.961100000000639e-05, 9.884699999999913e-05, 9.911099999999895e-05, 9.905600000000014e-05, 9.941699999999748e-05, 9.94860000000028e-05, 9.9028000000001e-05, 9.961099999999945e-05, 9.972300000000295e-05, 9.904200000000057e-05, 9.87359999999951e-05, 9.90410000000011e-05, 9.954200000000107e-05, 9.956900000000074e-05, 9.913899999999809e-05, 9.883399999999903e-05, 9.890299999999741e-05, 9.923600000000254e-05, 9.926400000000168e-05, 9.970899999999644e-05, 9.948599999999586e-05, 9.891600000000444e-05, 9.891600000000444e-05, 9.89860000000023e-05, 9.925000000000211e-05, 9.884699999999913e-05, 9.934699999999963e-05, 9.89860000000023e-05, 9.908399999999928e-05, 9.923600000000254e-05, 9.9415999999998e-05, 9.902699999999459e-05, 9.961100000000639e-05, 9.954200000000107e-05, 9.887499999999827e-05, 9.908299999999981e-05, 9.933399999999953e-05, 9.957000000000021e-05, 9.916699999999723e-05, 9.884699999999913e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.474" endtime="20201029 18:15:51.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.462" endtime="20201029 18:15:51.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.490" endtime="20201029 18:15:51.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.485" endtime="20201029 18:15:51.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.483" endtime="20201029 18:15:51.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.989" endtime="20201029 18:15:51.514"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.987" endtime="20201029 18:15:51.515"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.538" endtime="20201029 18:15:51.560"></status>
</kw>
<msg timestamp="20201029 18:15:51.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.534" endtime="20201029 18:15:51.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.564" endtime="20201029 18:15:51.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.570" endtime="20201029 18:15:51.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.527" endtime="20201029 18:15:51.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.521" endtime="20201029 18:15:51.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.593" endtime="20201029 18:15:51.930"></status>
</kw>
<msg timestamp="20201029 18:15:51.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041420708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.590" endtime="20201029 18:15:51.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041320944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041420708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.939" endtime="20201029 18:15:51.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.958" endtime="20201029 18:15:51.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.583" endtime="20201029 18:15:51.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.578" endtime="20201029 18:15:51.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.975" level="INFO">${RESULT} = [{'diff': 9.976400000000218e-05}, {'diff': 9.983300000000056e-05}, {'diff': 0.00010024999999999618}, {'diff': 9.979200000000132e-05}, {'diff': 0.0001005280000000025}, {'diff': 9.982000000000046e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:51.966" endtime="20201029 18:15:51.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.986" level="INFO">${ACCURACY} = {'diff': [9.976400000000218e-05, 9.983300000000056e-05, 0.00010024999999999618, 9.979200000000132e-05, 0.0001005280000000025, 9.982000000000046e-05, 0.00010045899999999719, 0.0001003610000000002, 9.98...</msg>
<status status="PASS" starttime="20201029 18:15:51.977" endtime="20201029 18:15:51.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.997" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.994" endtime="20201029 18:15:51.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.002" level="INFO">VALUE: [9.976400000000218e-05, 9.983300000000056e-05, 0.00010024999999999618, 9.979200000000132e-05, 0.0001005280000000025, 9.982000000000046e-05, 0.00010045899999999719, 0.0001003610000000002, 9.982000000000046e-05, 9.994399999999765e-05, 0.0001007080000000049, 9.981900000000099e-05, 0.00010070799999999797, 9.983300000000056e-05, 0.00010004200000000157, 0.00010026400000000268, 0.0001002080000000044, 0.0001004860000000038, 0.00010012499999999952, 0.00010029199999999489, 0.0001005280000000025, 0.0001006939999999984, 0.00010052799999999557, 0.00010026400000000268, 9.983299999999362e-05, 9.994499999999712e-05, 9.987499999999927e-05, 0.00010027800000000225, 0.00010013899999999909, 0.00010027700000000278, 0.00010068100000000524, 0.0001003610000000002, 0.00010024999999999618, 9.980499999999448e-05, 0.00010050000000000336, 0.00010056900000000174, 9.975000000000261e-05, 0.00010043100000000499, 0.00010004200000000157, 0.00010062500000000002, 0.00010026400000000268, 0.00010013899999999909, 0.00010040300000000585, 0.00010072199999999754, 9.96809999999973e-05, 0.00010066699999999873, 0.00010037499999999977, 0.00010012499999999952, 0.00010059800000000035, 0.0001003610000000002]</msg>
<status status="PASS" starttime="20201029 18:15:51.999" endtime="20201029 18:15:52.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.988" endtime="20201029 18:15:52.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.015" endtime="20201029 18:15:52.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.010" endtime="20201029 18:15:52.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.008" endtime="20201029 18:15:52.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.517" endtime="20201029 18:15:52.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.516" endtime="20201029 18:15:52.040"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.062" endtime="20201029 18:15:52.086"></status>
</kw>
<msg timestamp="20201029 18:15:52.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.059" endtime="20201029 18:15:52.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.089" endtime="20201029 18:15:52.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.095" endtime="20201029 18:15:52.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.052" endtime="20201029 18:15:52.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.046" endtime="20201029 18:15:52.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.120" endtime="20201029 18:15:52.460"></status>
</kw>
<msg timestamp="20201029 18:15:52.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041206653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041307625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.116" endtime="20201029 18:15:52.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041206653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041307625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.469" endtime="20201029 18:15:52.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.487" endtime="20201029 18:15:52.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.109" endtime="20201029 18:15:52.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.104" endtime="20201029 18:15:52.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.504" level="INFO">${RESULT} = [{'diff': 0.00010097199999999779}, {'diff': 0.0001007359999999971}, {'diff': 0.00010162500000000102}, {'diff': 0.00010148599999999786}, {'diff': 0.0001013480000000011}, {'diff': 0.00010126300000000421...</msg>
<status status="PASS" starttime="20201029 18:15:52.496" endtime="20201029 18:15:52.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.513" level="INFO">${ACCURACY} = {'diff': [0.00010097199999999779, 0.0001007359999999971, 0.00010162500000000102, 0.00010148599999999786, 0.0001013480000000011, 0.00010126300000000421, 0.00010148599999999786, 0.0001016939999999994, 0...</msg>
<status status="PASS" starttime="20201029 18:15:52.506" endtime="20201029 18:15:52.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.524" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.522" endtime="20201029 18:15:52.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.530" level="INFO">VALUE: [0.00010097199999999779, 0.0001007359999999971, 0.00010162500000000102, 0.00010148599999999786, 0.0001013480000000011, 0.00010126300000000421, 0.00010148599999999786, 0.0001016939999999994, 0.00010145799999999872, 0.00010108400000000128, 0.000101028000000003, 0.00010165300000000016, 0.00010113900000000009, 0.00010126399999999675, 0.00010129199999999589, 0.00010162500000000102, 0.00010119400000000583, 0.00010087500000000027, 0.00010161100000000145, 0.00010124999999999718, 0.00010127799999999632, 0.00010149999999999743, 0.00010129199999999589, 0.00010117999999999933, 0.00010126399999999675, 0.00010162500000000102, 0.00010120799999999847, 0.0001013610000000012, 0.00010092999999999908, 0.00010115299999999966, 0.00010108399999999435, 0.0001012359999999976, 0.00010148599999999786, 0.00010112500000000052, 0.00010079200000000232, 0.0001014730000000047, 0.00010116599999999976, 0.00010077699999999634, 0.00010106900000000224, 0.00010158300000000231, 0.00010127800000000325, 0.00010107000000000171, 0.00010124999999999718, 0.0001015410000000036, 0.0001013480000000011, 0.00010148699999999733, 0.00010115200000000019, 0.00010094399999999865, 0.00010165300000000016, 0.00010108300000000181]</msg>
<status status="PASS" starttime="20201029 18:15:52.527" endtime="20201029 18:15:52.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.515" endtime="20201029 18:15:52.533"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.542" endtime="20201029 18:15:52.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.538" endtime="20201029 18:15:52.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.536" endtime="20201029 18:15:52.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.042" endtime="20201029 18:15:52.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.041" endtime="20201029 18:15:52.567"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.591" endtime="20201029 18:15:52.613"></status>
</kw>
<msg timestamp="20201029 18:15:52.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.587" endtime="20201029 18:15:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.615" endtime="20201029 18:15:52.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.618" endtime="20201029 18:15:52.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.580" endtime="20201029 18:15:52.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.574" endtime="20201029 18:15:52.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.629" endtime="20201029 18:15:52.935"></status>
</kw>
<msg timestamp="20201029 18:15:52.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043252847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.627" endtime="20201029 18:15:52.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043252847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043355125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.944" endtime="20201029 18:15:52.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.962" endtime="20201029 18:15:52.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.624" endtime="20201029 18:15:52.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.622" endtime="20201029 18:15:52.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.980" level="INFO">${RESULT} = [{'diff': 0.00010227800000000425}, {'diff': 0.00010245899999999919}, {'diff': 0.00010179200000000332}, {'diff': 0.00010252699999999809}, {'diff': 0.00010177799999999682}, {'diff': 0.000102596999999995...</msg>
<status status="PASS" starttime="20201029 18:15:52.971" endtime="20201029 18:15:52.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.989" level="INFO">${ACCURACY} = {'diff': [0.00010227800000000425, 0.00010245899999999919, 0.00010179200000000332, 0.00010252699999999809, 0.00010177799999999682, 0.00010259699999999594, 0.0001018060000000029, 0.00010215300000000066,...</msg>
<status status="PASS" starttime="20201029 18:15:52.982" endtime="20201029 18:15:52.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.000" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.997" endtime="20201029 18:15:53.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.005" level="INFO">VALUE: [0.00010227800000000425, 0.00010245899999999919, 0.00010179200000000332, 0.00010252699999999809, 0.00010177799999999682, 0.00010259699999999594, 0.0001018060000000029, 0.00010215300000000066, 0.00010238900000000134, 0.00010266599999999432, 0.0001023610000000022, 0.00010194499999999912, 0.0001023889999999944, 0.00010227699999999784, 0.00010265300000000116, 0.00010276399999999825, 0.00010245799999999972, 0.00010226399999999775, 0.0001027359999999991, 0.00010177800000000375, 0.00010259799999999542, 0.00010247299999999876, 0.00010194399999999965, 0.00010181899999999605, 0.00010262500000000202, 0.00010204099999999716, 0.00010226399999999775, 0.00010247199999999929, 0.00010234699999999569, 0.0001021809999999998, 0.00010191699999999998, 0.00010212500000000152, 0.00010193000000000008, 0.00010201299999999802, 0.00010204099999999716, 0.0001021809999999998, 0.00010266699999999379, 0.00010224999999999818, 0.00010215300000000066, 0.00010188900000000084, 0.000102416000000001, 0.00010195899999999869, 0.00010208300000000281, 0.0001023889999999944, 0.00010197199999999879, 0.00010218000000000033, 0.00010204200000000357, 0.00010249999999999843, 0.00010226399999999775, 0.00010257000000000321]</msg>
<status status="PASS" starttime="20201029 18:15:53.002" endtime="20201029 18:15:53.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.990" endtime="20201029 18:15:53.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.023" endtime="20201029 18:15:53.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.013" endtime="20201029 18:15:53.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.011" endtime="20201029 18:15:53.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.569" endtime="20201029 18:15:53.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.568" endtime="20201029 18:15:53.048"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.071" endtime="20201029 18:15:53.094"></status>
</kw>
<msg timestamp="20201029 18:15:53.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.068" endtime="20201029 18:15:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.097" endtime="20201029 18:15:53.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.103" endtime="20201029 18:15:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.060" endtime="20201029 18:15:53.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.055" endtime="20201029 18:15:53.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.127" endtime="20201029 18:15:53.465"></status>
</kw>
<msg timestamp="20201029 18:15:53.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.123" endtime="20201029 18:15:53.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040805042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040907903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.474" endtime="20201029 18:15:53.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.492" endtime="20201029 18:15:53.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.116" endtime="20201029 18:15:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.111" endtime="20201029 18:15:53.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.509" level="INFO">${RESULT} = [{'diff': 0.0001028610000000027}, {'diff': 0.00010370900000000044}, {'diff': 0.00010313900000000209}, {'diff': 0.00010359700000000388}, {'diff': 0.00010349999999999943}, {'diff': 0.0001030690000000042...</msg>
<status status="PASS" starttime="20201029 18:15:53.501" endtime="20201029 18:15:53.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.520" level="INFO">${ACCURACY} = {'diff': [0.0001028610000000027, 0.00010370900000000044, 0.00010313900000000209, 0.00010359700000000388, 0.00010349999999999943, 0.00010306900000000424, 0.00010343100000000105, 0.0001032359999999996, ...</msg>
<status status="PASS" starttime="20201029 18:15:53.511" endtime="20201029 18:15:53.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.531" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.528" endtime="20201029 18:15:53.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.536" level="INFO">VALUE: [0.0001028610000000027, 0.00010370900000000044, 0.00010313900000000209, 0.00010359700000000388, 0.00010349999999999943, 0.00010306900000000424, 0.00010343100000000105, 0.0001032359999999996, 0.00010277799999999782, 0.0001031810000000008, 0.00010290300000000141, 0.00010291700000000098, 0.00010288900000000184, 0.00010337499999999583, 0.00010292999999999414, 0.00010343100000000105, 0.00010315300000000166, 0.00010354099999999866, 0.00010302799999999807, 0.00010337500000000277, 0.00010329099999999841, 0.00010344500000000062, 0.00010370800000000097, 0.00010280499999999748, 0.00010349999999999943, 0.00010287500000000227, 0.0001032359999999996, 0.00010331999999999703, 0.00010376299999999977, 0.00010348599999999986, 0.0001027359999999991, 0.00010281999999999653, 0.00010358399999999685, 0.00010304099999999816, 0.00010293000000000108, 0.00010362499999999608, 0.00010288900000000184, 0.0001032359999999996, 0.00010308400000000328, 0.00010297199999999979, 0.00010316700000000123, 0.00010351400000000593, 0.00010376399999999925, 0.00010329099999999841, 0.00010333300000000406, 0.0001027359999999991, 0.00010291700000000098, 0.00010297199999999979, 0.00010370800000000097, 0.00010337499999999583]</msg>
<status status="PASS" starttime="20201029 18:15:53.533" endtime="20201029 18:15:53.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.521" endtime="20201029 18:15:53.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.548" endtime="20201029 18:15:53.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.544" endtime="20201029 18:15:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.541" endtime="20201029 18:15:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.050" endtime="20201029 18:15:53.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.049" endtime="20201029 18:15:53.573"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.596" endtime="20201029 18:15:53.619"></status>
</kw>
<msg timestamp="20201029 18:15:53.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.593" endtime="20201029 18:15:53.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.623" endtime="20201029 18:15:53.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.629" endtime="20201029 18:15:53.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.586" endtime="20201029 18:15:53.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.580" endtime="20201029 18:15:53.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.653" endtime="20201029 18:15:53.990"></status>
</kw>
<msg timestamp="20201029 18:15:53.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041160264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041264569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.649" endtime="20201029 18:15:53.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041160264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041264569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.000" endtime="20201029 18:15:54.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.018" endtime="20201029 18:15:54.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.642" endtime="20201029 18:15:54.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.637" endtime="20201029 18:15:54.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.035" level="INFO">${RESULT} = [{'diff': 0.00010430499999999898}, {'diff': 0.00010427799999999932}, {'diff': 0.00010404099999999916}, {'diff': 0.00010381899999999805}, {'diff': 0.0001038339999999971}, {'diff': 0.0001039170000000019...</msg>
<status status="PASS" starttime="20201029 18:15:54.026" endtime="20201029 18:15:54.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.046" level="INFO">${ACCURACY} = {'diff': [0.00010430499999999898, 0.00010427799999999932, 0.00010404099999999916, 0.00010381899999999805, 0.0001038339999999971, 0.00010391700000000198, 0.0001041810000000018, 0.00010438900000000334, ...</msg>
<status status="PASS" starttime="20201029 18:15:54.037" endtime="20201029 18:15:54.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.057" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.055" endtime="20201029 18:15:54.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.062" level="INFO">VALUE: [0.00010430499999999898, 0.00010427799999999932, 0.00010404099999999916, 0.00010381899999999805, 0.0001038339999999971, 0.00010391700000000198, 0.0001041810000000018, 0.00010438900000000334, 0.00010426399999999975, 0.00010420800000000147, 0.00010412499999999658, 0.0001043889999999964, 0.00010377799999999882, 0.00010427800000000625, 0.00010458299999999837, 0.00010426399999999975, 0.00010398699999999983, 0.00010468099999999536, 0.00010427699999999984, 0.00010475000000000068, 0.00010461099999999751, 0.00010388900000000284, 0.00010420800000000147, 0.00010384700000000413, 0.00010473700000000058, 0.00010404199999999864, 0.00010440299999999597, 0.00010448600000000086, 0.00010384700000000413, 0.0001045689999999988, 0.00010415199999999625, 0.00010461100000000445, 0.00010405499999999873, 0.00010394500000000112, 0.00010391700000000198, 0.00010394500000000112, 0.00010409800000000385, 0.00010475000000000068, 0.00010391699999999504, 0.00010444399999999521, 0.00010440300000000291, 0.0001040139999999995, 0.00010391700000000198, 0.00010393100000000155, 0.00010462499999999708, 0.000104514, 0.00010415300000000266, 0.00010380499999999848, 0.00010379199999999839, 0.00010458299999999837]</msg>
<status status="PASS" starttime="20201029 18:15:54.059" endtime="20201029 18:15:54.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.048" endtime="20201029 18:15:54.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.075" endtime="20201029 18:15:54.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.070" endtime="20201029 18:15:54.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.068" endtime="20201029 18:15:54.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.575" endtime="20201029 18:15:54.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.574" endtime="20201029 18:15:54.099"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.122" endtime="20201029 18:15:54.146"></status>
</kw>
<msg timestamp="20201029 18:15:54.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.119" endtime="20201029 18:15:54.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.149" endtime="20201029 18:15:54.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.155" endtime="20201029 18:15:54.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.112" endtime="20201029 18:15:54.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.106" endtime="20201029 18:15:54.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.179" endtime="20201029 18:15:54.518"></status>
</kw>
<msg timestamp="20201029 18:15:54.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.176" endtime="20201029 18:15:54.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040898417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041003306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.528" endtime="20201029 18:15:54.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.546" endtime="20201029 18:15:54.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.168" endtime="20201029 18:15:54.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.163" endtime="20201029 18:15:54.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.563" level="INFO">${RESULT} = [{'diff': 0.00010488900000000384}, {'diff': 0.00010481999999999853}, {'diff': 0.00010512499999999758}, {'diff': 0.00010511099999999801}, {'diff': 0.00010558299999999937}, {'diff': 0.000105151999999997...</msg>
<status status="PASS" starttime="20201029 18:15:54.555" endtime="20201029 18:15:54.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.572" level="INFO">${ACCURACY} = {'diff': [0.00010488900000000384, 0.00010481999999999853, 0.00010512499999999758, 0.00010511099999999801, 0.00010558299999999937, 0.00010515199999999725, 0.0001052360000000016, 0.00010495899999999475,...</msg>
<status status="PASS" starttime="20201029 18:15:54.566" endtime="20201029 18:15:54.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.583" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.581" endtime="20201029 18:15:54.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.589" level="INFO">VALUE: [0.00010488900000000384, 0.00010481999999999853, 0.00010512499999999758, 0.00010511099999999801, 0.00010558299999999937, 0.00010515199999999725, 0.0001052360000000016, 0.00010495899999999475, 0.0001048889999999969, 0.000105514000000001, 0.0001052360000000016, 0.00010480599999999896, 0.00010494400000000265, 0.00010558299999999937, 0.00010565299999999722, 0.00010522200000000204, 0.0001053889999999974, 0.00010556999999999928, 0.00010570799999999603, 0.0001047219999999946, 0.00010509700000000538, 0.0001056940000000034, 0.00010558399999999885, 0.00010525000000000118, 0.00010536099999999826, 0.00010566599999999732, 0.00010497199999999485, 0.00010495900000000169, 0.00010513900000000409, 0.00010563799999999818, 0.0001048339999999981, 0.000105514000000001, 0.00010512499999999758, 0.00010552700000000109, 0.00010525000000000118, 0.00010550000000000143, 0.00010512499999999758, 0.00010537500000000477, 0.00010537499999999783, 0.00010555500000000023, 0.00010512499999999758, 0.00010552799999999363, 0.00010536099999999826, 0.00010569399999999646, 0.00010569399999999646, 0.00010472200000000154, 0.00010563899999999765, 0.00010523599999999467, 0.00010548599999999492, 0.00010484699999999819]</msg>
<status status="PASS" starttime="20201029 18:15:54.586" endtime="20201029 18:15:54.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.574" endtime="20201029 18:15:54.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.601" endtime="20201029 18:15:54.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.597" endtime="20201029 18:15:54.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.594" endtime="20201029 18:15:54.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.101" endtime="20201029 18:15:54.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.100" endtime="20201029 18:15:54.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.730" endtime="20201029 18:15:54.626"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:01.561" endtime="20201029 18:15:54.628" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.645" endtime="20201029 18:15:54.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.641" endtime="20201029 18:15:54.668"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.703" endtime="20201029 18:15:54.721"></status>
</kw>
<msg timestamp="20201029 18:15:54.723" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.700" endtime="20201029 18:15:54.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.729" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.725" endtime="20201029 18:15:54.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.736" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:54.732" endtime="20201029 18:15:54.737"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:54.693" endtime="20201029 18:15:54.739"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:54.686" endtime="20201029 18:15:54.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.684" endtime="20201029 18:15:54.741"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:54.749" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:54.748" endtime="20201029 18:15:54.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.743" endtime="20201029 18:15:54.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.680" endtime="20201029 18:15:54.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.678" endtime="20201029 18:15:54.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.752" endtime="20201029 18:15:54.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.674" endtime="20201029 18:15:54.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.670" endtime="20201029 18:15:54.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.638" endtime="20201029 18:15:54.760"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.784" endtime="20201029 18:15:54.802"></status>
</kw>
<msg timestamp="20201029 18:15:54.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.781" endtime="20201029 18:15:54.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.805" endtime="20201029 18:15:54.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.812" endtime="20201029 18:15:54.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.774" endtime="20201029 18:15:54.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.768" endtime="20201029 18:15:54.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.836" endtime="20201029 18:15:55.183"></status>
</kw>
<msg timestamp="20201029 18:15:55.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132710931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132716917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.832" endtime="20201029 18:15:55.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132710931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132716917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.193" endtime="20201029 18:15:55.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.212" endtime="20201029 18:15:55.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.825" endtime="20201029 18:15:55.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.820" endtime="20201029 18:15:55.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.230" level="INFO">${RESULT} = [{'diff': 5.985999999985614e-06}, {'diff': 5.444000000021099e-06}, {'diff': 5.444999999992817e-06}, {'diff': 5.971999999992983e-06}, {'diff': 5.930999999986808e-06}, {'diff': 5.40200000001545e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:55.221" endtime="20201029 18:15:55.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.240" level="INFO">${ACCURACY} = {'diff': [5.985999999985614e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.971999999992983e-06, 5.930999999986808e-06, 5.40200000001545e-06, 5.443999999993343e-06, 5.903000000001546e-06, 5.45799...</msg>
<status status="PASS" starttime="20201029 18:15:55.232" endtime="20201029 18:15:55.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.251" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.249" endtime="20201029 18:15:55.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.256" level="INFO">VALUE: [5.985999999985614e-06, 5.444000000021099e-06, 5.444999999992817e-06, 5.971999999992983e-06, 5.930999999986808e-06, 5.40200000001545e-06, 5.443999999993343e-06, 5.903000000001546e-06, 5.457999999985974e-06, 5.444000000021099e-06, 5.471999999978605e-06, 6.0000000000060005e-06, 5.431000000000186e-06, 5.444999999992817e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 5.459000000013203e-06, 5.45800000001373e-06, 5.9589999999998255e-06, 5.903000000001546e-06, 5.473000000005834e-06, 5.971999999992983e-06, 5.90299999997379e-06, 5.40200000001545e-06, 5.985999999985614e-06, 5.443999999993343e-06, 5.499999999991623e-06, 5.457999999985974e-06, 5.985999999985614e-06, 5.431000000000186e-06, 5.402999999987168e-06, 5.9720000000207385e-06, 5.958000000000352e-06, 5.971999999992983e-06, 5.9589999999998255e-06, 5.9720000000207385e-06, 5.958000000000352e-06, 6.026999999991789e-06, 5.443999999993343e-06, 5.444000000021099e-06, 5.45800000001373e-06, 5.9589999999998255e-06, 6.0279999999912626e-06, 5.459000000013203e-06, 5.430000000000712e-06, 5.971999999992983e-06, 5.971999999992983e-06, 5.444000000021099e-06, 5.971999999992983e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.253" endtime="20201029 18:15:55.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.242" endtime="20201029 18:15:55.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.268" endtime="20201029 18:15:55.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.264" endtime="20201029 18:15:55.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.261" endtime="20201029 18:15:55.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.763" endtime="20201029 18:15:55.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.762" endtime="20201029 18:15:55.293"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.316" endtime="20201029 18:15:55.336"></status>
</kw>
<msg timestamp="20201029 18:15:55.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.312" endtime="20201029 18:15:55.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.339" endtime="20201029 18:15:55.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.346" endtime="20201029 18:15:55.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.305" endtime="20201029 18:15:55.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.299" endtime="20201029 18:15:55.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.369" endtime="20201029 18:15:55.711"></status>
</kw>
<msg timestamp="20201029 18:15:55.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043172319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.366" endtime="20201029 18:15:55.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043172319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.720" endtime="20201029 18:15:55.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.739" endtime="20201029 18:15:55.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.358" endtime="20201029 18:15:55.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.354" endtime="20201029 18:15:55.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.757" level="INFO">${RESULT} = [{'diff': 7.013999999999632e-06}, {'diff': 7.041000000006237e-06}, {'diff': 6.513999999999132e-06}, {'diff': 7.0279999999992016e-06}, {'diff': 6.485999999999992e-06}, {'diff': 6.430999999994247e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:55.748" endtime="20201029 18:15:55.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.766" level="INFO">${ACCURACY} = {'diff': [7.013999999999632e-06, 7.041000000006237e-06, 6.513999999999132e-06, 7.0279999999992016e-06, 6.485999999999992e-06, 6.430999999994247e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.02...</msg>
<status status="PASS" starttime="20201029 18:15:55.759" endtime="20201029 18:15:55.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.777" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.775" endtime="20201029 18:15:55.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.782" level="INFO">VALUE: [7.013999999999632e-06, 7.041000000006237e-06, 6.513999999999132e-06, 7.0279999999992016e-06, 6.485999999999992e-06, 6.430999999994247e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.0279999999992016e-06, 7.000000000000062e-06, 6.499999999999562e-06, 7.0279999999992016e-06, 7.0829999999980076e-06, 6.972000000000922e-06, 7.0279999999992016e-06, 6.513999999999132e-06, 6.513999999999132e-06, 6.485999999999992e-06, 7.083999999997481e-06, 6.526999999999228e-06, 7.040999999999298e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.430000000001712e-06, 6.499999999999562e-06, 6.4729999999998955e-06, 7.0279999999992016e-06, 6.499999999999562e-06, 7.013999999999632e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 7.040999999999298e-06, 6.499999999999562e-06, 6.500000000006501e-06, 6.485999999999992e-06, 7.026999999999728e-06, 7.013999999999632e-06, 6.499999999999562e-06, 7.026999999999728e-06, 7.083999999997481e-06, 6.499999999999562e-06, 7.040999999999298e-06, 6.5140000000060705e-06, 7.026999999999728e-06, 6.499999999999562e-06, 6.486999999999465e-06, 7.0279999999992016e-06, 7.013999999999632e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201029 18:15:55.779" endtime="20201029 18:15:55.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.768" endtime="20201029 18:15:55.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.796" endtime="20201029 18:15:55.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.790" endtime="20201029 18:15:55.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.787" endtime="20201029 18:15:55.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.295" endtime="20201029 18:15:55.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.294" endtime="20201029 18:15:55.821"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.847" endtime="20201029 18:15:55.864"></status>
</kw>
<msg timestamp="20201029 18:15:55.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.843" endtime="20201029 18:15:55.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.868" endtime="20201029 18:15:55.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.874" endtime="20201029 18:15:55.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.836" endtime="20201029 18:15:55.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.829" endtime="20201029 18:15:55.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.898" endtime="20201029 18:15:56.222"></status>
</kw>
<msg timestamp="20201029 18:15:56.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044466056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044473611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.894" endtime="20201029 18:15:56.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044466056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044473611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.226" endtime="20201029 18:15:56.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.235" endtime="20201029 18:15:56.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.887" endtime="20201029 18:15:56.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.882" endtime="20201029 18:15:56.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.243" level="INFO">${RESULT} = [{'diff': 7.555000000006307e-06}, {'diff': 8.083000000005947e-06}, {'diff': 8.139000000004226e-06}, {'diff': 8.083999999998481e-06}, {'diff': 7.555999999998841e-06}, {'diff': 7.55600000000578e-06}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:56.239" endtime="20201029 18:15:56.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.249" level="INFO">${ACCURACY} = {'diff': [7.555000000006307e-06, 8.083000000005947e-06, 8.139000000004226e-06, 8.083999999998481e-06, 7.555999999998841e-06, 7.55600000000578e-06, 7.527999999999702e-06, 7.555999999998841e-06, 8.06899...</msg>
<status status="PASS" starttime="20201029 18:15:56.244" endtime="20201029 18:15:56.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.254" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.253" endtime="20201029 18:15:56.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.258" level="INFO">VALUE: [7.555000000006307e-06, 8.083000000005947e-06, 8.139000000004226e-06, 8.083999999998481e-06, 7.555999999998841e-06, 7.55600000000578e-06, 7.527999999999702e-06, 7.555999999998841e-06, 8.068999999999438e-06, 7.583999999997981e-06, 8.082999999999008e-06, 7.5419999999992715e-06, 7.55600000000578e-06, 7.500000000000562e-06, 7.555999999998841e-06, 8.082999999999008e-06, 8.096999999998578e-06, 8.069999999998911e-06, 8.083000000005947e-06, 8.082999999999008e-06, 7.554999999999368e-06, 7.0279999999992016e-06, 7.569999999998411e-06, 7.555999999998841e-06, 7.555999999998841e-06, 7.527999999999702e-06, 8.082999999999008e-06, 7.000000000000062e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 8.068999999999438e-06, 7.554999999999368e-06, 7.555999999998841e-06, 7.55600000000578e-06, 7.57000000000535e-06, 7.6109999999976474e-06, 7.555999999998841e-06, 7.554999999999368e-06, 7.514000000000132e-06, 8.110999999998147e-06, 8.096999999998578e-06, 7.554999999999368e-06, 8.138000000004753e-06, 8.082999999999008e-06, 7.5969999999980775e-06, 7.57000000000535e-06, 7.5419999999992715e-06, 7.55600000000578e-06, 8.082999999999008e-06, 8.082999999999008e-06]</msg>
<status status="PASS" starttime="20201029 18:15:56.256" endtime="20201029 18:15:56.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.250" endtime="20201029 18:15:56.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.270" endtime="20201029 18:15:56.292"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.266" endtime="20201029 18:15:56.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.263" endtime="20201029 18:15:56.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.824" endtime="20201029 18:15:56.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.822" endtime="20201029 18:15:56.296"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.319" endtime="20201029 18:15:56.336"></status>
</kw>
<msg timestamp="20201029 18:15:56.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.316" endtime="20201029 18:15:56.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.340" endtime="20201029 18:15:56.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.346" endtime="20201029 18:15:56.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.308" endtime="20201029 18:15:56.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.302" endtime="20201029 18:15:56.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.369" endtime="20201029 18:15:56.705"></status>
</kw>
<msg timestamp="20201029 18:15:56.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:56.366" endtime="20201029 18:15:56.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041825903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418345, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:56.715" endtime="20201029 18:15:56.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.733" endtime="20201029 18:15:56.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.359" endtime="20201029 18:15:56.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.354" endtime="20201029 18:15:56.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.751" level="INFO">${RESULT} = [{'diff': 8.596999999999078e-06}, {'diff': 9.138999999998287e-06}, {'diff': 8.610999999998648e-06}, {'diff': 8.624999999998217e-06}, {'diff': 8.610999999998648e-06}, {'diff': 9.138999999998287e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:56.742" endtime="20201029 18:15:56.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.762" level="INFO">${ACCURACY} = {'diff': [8.596999999999078e-06, 9.138999999998287e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.610999999998648e-06, 9.138999999998287e-06, 8.611999999998121e-06, 8.082999999999008e-06, 8.6249...</msg>
<status status="PASS" starttime="20201029 18:15:56.753" endtime="20201029 18:15:56.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.773" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.771" endtime="20201029 18:15:56.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.778" level="INFO">VALUE: [8.596999999999078e-06, 9.138999999998287e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.610999999998648e-06, 9.138999999998287e-06, 8.611999999998121e-06, 8.082999999999008e-06, 8.624999999998217e-06, 9.138999999998287e-06, 8.624999999998217e-06, 8.624999999998217e-06, 8.028000000000202e-06, 8.610999999998648e-06, 8.624999999998217e-06, 9.139000000005226e-06, 8.624999999998217e-06, 9.124999999998717e-06, 8.610999999998648e-06, 9.194000000004032e-06, 8.653000000004296e-06, 8.611000000005586e-06, 9.124999999998717e-06, 8.596999999999078e-06, 9.110999999999148e-06, 8.569999999999411e-06, 8.611000000005586e-06, 9.138999999998287e-06, 8.596999999999078e-06, 8.610999999998648e-06, 8.610999999998648e-06, 9.138999999998287e-06, 9.152999999997857e-06, 8.611999999998121e-06, 8.569999999999411e-06, 9.124999999998717e-06, 8.110999999998147e-06, 9.151999999998384e-06, 9.137999999998814e-06, 8.625000000005156e-06, 8.597000000006016e-06, 8.624999999998217e-06, 8.653000000004296e-06, 8.59800000000549e-06, 8.610999999998648e-06, 8.611000000005586e-06, 8.624999999998217e-06, 9.138999999998287e-06, 8.596999999999078e-06, 8.624999999998217e-06]</msg>
<status status="PASS" starttime="20201029 18:15:56.775" endtime="20201029 18:15:56.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.764" endtime="20201029 18:15:56.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.791" endtime="20201029 18:15:56.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.787" endtime="20201029 18:15:56.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.784" endtime="20201029 18:15:56.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.298" endtime="20201029 18:15:56.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.297" endtime="20201029 18:15:56.816"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.839" endtime="20201029 18:15:56.857"></status>
</kw>
<msg timestamp="20201029 18:15:56.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.835" endtime="20201029 18:15:56.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.860" endtime="20201029 18:15:56.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.867" endtime="20201029 18:15:56.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.828" endtime="20201029 18:15:56.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.822" endtime="20201029 18:15:56.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.890" endtime="20201029 18:15:57.231"></status>
</kw>
<msg timestamp="20201029 18:15:57.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041335694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.887" endtime="20201029 18:15:57.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041335694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041344847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.241" endtime="20201029 18:15:57.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.260" endtime="20201029 18:15:57.264"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.879" endtime="20201029 18:15:57.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.875" endtime="20201029 18:15:57.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.278" level="INFO">${RESULT} = [{'diff': 9.152999999997857e-06}, {'diff': 9.139000000005226e-06}, {'diff': 9.680000000004962e-06}, {'diff': 1.0194999999997567e-05}, {'diff': 1.0181000000004936e-05}, {'diff': 1.0194999999997567e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:57.269" endtime="20201029 18:15:57.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.288" level="INFO">${ACCURACY} = {'diff': [9.152999999997857e-06, 9.139000000005226e-06, 9.680000000004962e-06, 1.0194999999997567e-05, 1.0181000000004936e-05, 1.0194999999997567e-05, 1.0207999999997663e-05, 9.681000000004436e-06, 1....</msg>
<status status="PASS" starttime="20201029 18:15:57.280" endtime="20201029 18:15:57.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.299" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.297" endtime="20201029 18:15:57.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.305" level="INFO">VALUE: [9.152999999997857e-06, 9.139000000005226e-06, 9.680000000004962e-06, 1.0194999999997567e-05, 1.0181000000004936e-05, 1.0194999999997567e-05, 1.0207999999997663e-05, 9.681000000004436e-06, 1.0278000000002452e-05, 9.665999999998454e-06, 9.639000000005726e-06, 9.666999999997927e-06, 9.124999999998717e-06, 1.0207999999997663e-05, 9.665999999998454e-06, 9.138999999998287e-06, 9.652999999998357e-06, 9.667000000004866e-06, 9.652999999998357e-06, 9.137999999998814e-06, 1.0179999999998524e-05, 9.124999999998717e-06, 9.652999999998357e-06, 9.681000000004436e-06, 1.0153000000005796e-05, 9.624999999999218e-06, 1.0179999999998524e-05, 9.707999999997163e-06, 9.666999999997927e-06, 9.708999999996637e-06, 9.139000000005226e-06, 1.0207999999997663e-05, 9.667000000004866e-06, 9.652999999998357e-06, 9.666999999997927e-06, 9.680999999997497e-06, 9.667000000004866e-06, 9.666999999997927e-06, 1.0193999999998093e-05, 9.665999999998454e-06, 9.666999999997927e-06, 9.637999999999314e-06, 9.666999999997927e-06, 1.0194000000005032e-05, 9.680000000004962e-06, 1.0207999999997663e-05, 9.667000000004866e-06, 9.651999999998884e-06, 9.666999999997927e-06, 9.138999999998287e-06]</msg>
<status status="PASS" starttime="20201029 18:15:57.301" endtime="20201029 18:15:57.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.290" endtime="20201029 18:15:57.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.317" endtime="20201029 18:15:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.313" endtime="20201029 18:15:57.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.310" endtime="20201029 18:15:57.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.818" endtime="20201029 18:15:57.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.817" endtime="20201029 18:15:57.342"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.365" endtime="20201029 18:15:57.384"></status>
</kw>
<msg timestamp="20201029 18:15:57.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.362" endtime="20201029 18:15:57.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.388" endtime="20201029 18:15:57.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.394" endtime="20201029 18:15:57.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.354" endtime="20201029 18:15:57.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.348" endtime="20201029 18:15:57.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.417" endtime="20201029 18:15:57.756"></status>
</kw>
<msg timestamp="20201029 18:15:57.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042681819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.414" endtime="20201029 18:15:57.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042681819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042692486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.765" endtime="20201029 18:15:57.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.784" endtime="20201029 18:15:57.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.407" endtime="20201029 18:15:57.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.402" endtime="20201029 18:15:57.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.801" level="INFO">${RESULT} = [{'diff': 1.0666999999998927e-05}, {'diff': 1.0722000000004672e-05}, {'diff': 1.0208999999997137e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.1250000000004312e-05}, {'diff': 1.0193999999998093e-...</msg>
<status status="PASS" starttime="20201029 18:15:57.793" endtime="20201029 18:15:57.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.811" level="INFO">${ACCURACY} = {'diff': [1.0666999999998927e-05, 1.0722000000004672e-05, 1.0208999999997137e-05, 1.1249999999997373e-05, 1.1250000000004312e-05, 1.0193999999998093e-05, 1.0707999999998163e-05, 1.1264000000003882e-05...</msg>
<status status="PASS" starttime="20201029 18:15:57.803" endtime="20201029 18:15:57.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.821" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.819" endtime="20201029 18:15:57.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.827" level="INFO">VALUE: [1.0666999999998927e-05, 1.0722000000004672e-05, 1.0208999999997137e-05, 1.1249999999997373e-05, 1.1250000000004312e-05, 1.0193999999998093e-05, 1.0707999999998163e-05, 1.1264000000003882e-05, 1.0708000000005102e-05, 1.0708999999997637e-05, 1.0735999999997303e-05, 1.0666999999998927e-05, 1.0736000000004242e-05, 1.0792000000002522e-05, 1.0707999999998163e-05, 1.0735999999997303e-05, 1.1180999999998997e-05, 1.1250000000004312e-05, 1.0736000000004242e-05, 1.0721999999997733e-05, 1.0721999999997733e-05, 1.0194999999997567e-05, 1.0707999999998163e-05, 1.0721999999997733e-05, 1.1250000000004312e-05, 1.1277000000003978e-05, 1.0179999999998524e-05, 1.0722000000004672e-05, 1.0735999999997303e-05, 1.0735999999997303e-05, 1.0179999999998524e-05, 1.1235999999997803e-05, 1.1249999999997373e-05, 1.0208999999997137e-05, 1.0736999999996777e-05, 1.0207999999997663e-05, 1.0735999999997303e-05, 1.0735999999997303e-05, 1.0722000000004672e-05, 1.1250000000004312e-05, 1.1222000000005172e-05, 1.1223000000004646e-05, 1.1278000000003452e-05, 1.0721999999997733e-05, 1.0180999999997997e-05, 1.0708000000005102e-05, 1.0722000000004672e-05, 1.0194999999997567e-05, 1.0721999999997733e-05, 1.0721999999997733e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.824" endtime="20201029 18:15:57.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.812" endtime="20201029 18:15:57.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.846" endtime="20201029 18:15:57.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.835" endtime="20201029 18:15:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.833" endtime="20201029 18:15:57.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.344" endtime="20201029 18:15:57.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.343" endtime="20201029 18:15:57.871"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.893" endtime="20201029 18:15:57.911"></status>
</kw>
<msg timestamp="20201029 18:15:57.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.890" endtime="20201029 18:15:57.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.915" endtime="20201029 18:15:57.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.921" endtime="20201029 18:15:57.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.883" endtime="20201029 18:15:57.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.877" endtime="20201029 18:15:57.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.944" endtime="20201029 18:15:58.284"></status>
</kw>
<msg timestamp="20201029 18:15:58.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041186375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041197625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.941" endtime="20201029 18:15:58.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041186375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041197625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.294" endtime="20201029 18:15:58.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.314" endtime="20201029 18:15:58.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.934" endtime="20201029 18:15:58.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.929" endtime="20201029 18:15:58.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.332" level="INFO">${RESULT} = [{'diff': 1.1250000000004312e-05}, {'diff': 1.1250000000004312e-05}, {'diff': 1.1777000000004478e-05}, {'diff': 1.1305999999995653e-05}, {'diff': 1.1777999999997013e-05}, {'diff': 1.1263999999996943e-...</msg>
<status status="PASS" starttime="20201029 18:15:58.323" endtime="20201029 18:15:58.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.343" level="INFO">${ACCURACY} = {'diff': [1.1250000000004312e-05, 1.1250000000004312e-05, 1.1777000000004478e-05, 1.1305999999995653e-05, 1.1777999999997013e-05, 1.1263999999996943e-05, 1.179099999999711e-05, 1.1777000000004478e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:58.334" endtime="20201029 18:15:58.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.354" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.351" endtime="20201029 18:15:58.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.359" level="INFO">VALUE: [1.1250000000004312e-05, 1.1250000000004312e-05, 1.1777000000004478e-05, 1.1305999999995653e-05, 1.1777999999997013e-05, 1.1263999999996943e-05, 1.179099999999711e-05, 1.1777000000004478e-05, 1.1250000000004312e-05, 1.1778000000003952e-05, 1.1777999999997013e-05, 1.1777999999997013e-05, 1.1806000000003092e-05, 1.1236999999997277e-05, 1.1778000000003952e-05, 1.1235999999997803e-05, 1.2306000000003592e-05, 1.177699999999754e-05, 1.1249999999997373e-05, 1.1778000000003952e-05, 1.1222000000005172e-05, 1.1777999999997013e-05, 1.1707999999999164e-05, 1.1778000000003952e-05, 1.1778000000003952e-05, 1.2305000000004118e-05, 1.1249999999997373e-05, 1.1778000000003952e-05, 1.1848000000001802e-05, 1.2305000000004118e-05, 1.1777000000004478e-05, 1.1791999999996583e-05, 1.1249999999997373e-05, 1.1735999999998303e-05, 1.1764000000004382e-05, 1.2305000000004118e-05, 1.1235999999997803e-05, 1.1221999999998233e-05, 1.1777000000004478e-05, 1.1235999999997803e-05, 1.1777999999997013e-05, 1.180499999999668e-05, 1.1193999999999094e-05, 1.1250000000004312e-05, 1.1249999999997373e-05, 1.1846999999995389e-05, 1.1778000000003952e-05, 1.2320000000003162e-05, 1.1777999999997013e-05, 1.2320000000003162e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.356" endtime="20201029 18:15:58.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.344" endtime="20201029 18:15:58.362"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.371" endtime="20201029 18:15:58.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.367" endtime="20201029 18:15:58.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.365" endtime="20201029 18:15:58.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.873" endtime="20201029 18:15:58.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.871" endtime="20201029 18:15:58.396"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.419" endtime="20201029 18:15:58.436"></status>
</kw>
<msg timestamp="20201029 18:15:58.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.416" endtime="20201029 18:15:58.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.440" endtime="20201029 18:15:58.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.446" endtime="20201029 18:15:58.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.409" endtime="20201029 18:15:58.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.403" endtime="20201029 18:15:58.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.469" endtime="20201029 18:15:58.807"></status>
</kw>
<msg timestamp="20201029 18:15:58.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040849, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.466" endtime="20201029 18:15:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040836708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040849, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.816" endtime="20201029 18:15:58.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.836" endtime="20201029 18:15:58.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.459" endtime="20201029 18:15:58.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.454" endtime="20201029 18:15:58.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.855" level="INFO">${RESULT} = [{'diff': 1.2292000000004022e-05}, {'diff': 1.283299999999682e-05}, {'diff': 1.283299999999682e-05}, {'diff': 1.3375000000002968e-05}, {'diff': 1.2277999999997513e-05}, {'diff': 1.2792000000004522e-05...</msg>
<status status="PASS" starttime="20201029 18:15:58.846" endtime="20201029 18:15:58.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.866" level="INFO">${ACCURACY} = {'diff': [1.2292000000004022e-05, 1.283299999999682e-05, 1.283299999999682e-05, 1.3375000000002968e-05, 1.2277999999997513e-05, 1.2792000000004522e-05, 1.283299999999682e-05, 1.3346999999996889e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:58.857" endtime="20201029 18:15:58.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.877" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.875" endtime="20201029 18:15:58.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.882" level="INFO">VALUE: [1.2292000000004022e-05, 1.283299999999682e-05, 1.283299999999682e-05, 1.3375000000002968e-05, 1.2277999999997513e-05, 1.2792000000004522e-05, 1.283299999999682e-05, 1.3346999999996889e-05, 1.3347000000003828e-05, 1.2833000000003758e-05, 1.2847000000003328e-05, 1.283299999999682e-05, 1.2847000000003328e-05, 1.283299999999682e-05, 1.2834000000003232e-05, 1.2306000000003592e-05, 1.2292000000004022e-05, 1.2848000000002802e-05, 1.2292000000004022e-05, 1.2820000000003662e-05, 1.227699999999804e-05, 1.3347000000003828e-05, 1.2834000000003232e-05, 1.2305999999996653e-05, 1.280499999999768e-05, 1.2834000000003232e-05, 1.3277999999998513e-05, 1.2833000000003758e-05, 1.2791000000005048e-05, 1.3361999999995933e-05, 1.2319000000003688e-05, 1.2833999999996293e-05, 1.279099999999811e-05, 1.229099999999761e-05, 1.3375000000002968e-05, 1.2860999999995959e-05, 1.2305000000004118e-05, 1.2846999999996389e-05, 1.2305999999996653e-05, 1.3361000000003398e-05, 1.2819000000004188e-05, 1.2749999999998873e-05, 1.283299999999682e-05, 1.2834000000003232e-05, 1.3375000000002968e-05, 1.2305000000004118e-05, 1.2320000000003162e-05, 1.2819000000004188e-05, 1.2833999999996293e-05, 1.283299999999682e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.879" endtime="20201029 18:15:58.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.868" endtime="20201029 18:15:58.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.896" endtime="20201029 18:15:58.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.891" endtime="20201029 18:15:58.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.888" endtime="20201029 18:15:58.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.398" endtime="20201029 18:15:58.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.397" endtime="20201029 18:15:58.923"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.950" endtime="20201029 18:15:58.969"></status>
</kw>
<msg timestamp="20201029 18:15:58.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.947" endtime="20201029 18:15:58.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.972" endtime="20201029 18:15:58.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.978" endtime="20201029 18:15:58.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.938" endtime="20201029 18:15:58.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.932" endtime="20201029 18:15:58.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.003" endtime="20201029 18:15:59.346"></status>
</kw>
<msg timestamp="20201029 18:15:59.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.999" endtime="20201029 18:15:59.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047654069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.357" endtime="20201029 18:15:59.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.378" endtime="20201029 18:15:59.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.992" endtime="20201029 18:15:59.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.987" endtime="20201029 18:15:59.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.399" level="INFO">${RESULT} = [{'diff': 1.3860999999996959e-05}, {'diff': 1.3888000000003564e-05}, {'diff': 1.3361000000003398e-05}, {'diff': 1.3888999999996099e-05}, {'diff': 1.3361000000003398e-05}, {'diff': 1.3360999999996459e-...</msg>
<status status="PASS" starttime="20201029 18:15:59.389" endtime="20201029 18:15:59.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.410" level="INFO">${ACCURACY} = {'diff': [1.3860999999996959e-05, 1.3888000000003564e-05, 1.3361000000003398e-05, 1.3888999999996099e-05, 1.3361000000003398e-05, 1.3360999999996459e-05, 1.3889000000003038e-05, 1.3901999999996195e-05...</msg>
<status status="PASS" starttime="20201029 18:15:59.402" endtime="20201029 18:15:59.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.424" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.421" endtime="20201029 18:15:59.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.430" level="INFO">VALUE: [1.3860999999996959e-05, 1.3888000000003564e-05, 1.3361000000003398e-05, 1.3888999999996099e-05, 1.3361000000003398e-05, 1.3360999999996459e-05, 1.3889000000003038e-05, 1.3901999999996195e-05, 1.4417000000002678e-05, 1.3888999999996099e-05, 1.3902999999995669e-05, 1.4416999999995739e-05, 1.3902000000003134e-05, 1.3902999999995669e-05, 1.3903000000002608e-05, 1.3360999999996459e-05, 1.3888999999996099e-05, 1.4374999999997029e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3375000000002968e-05, 1.3889000000003038e-05, 1.4415999999996265e-05, 1.3346999999996889e-05, 1.331899999999775e-05, 1.3903000000002608e-05, 1.3889000000003038e-05, 1.3903000000002608e-05, 1.3903000000002608e-05, 1.3875000000003468e-05, 1.3361000000003398e-05, 1.3361000000003398e-05, 1.3903000000002608e-05, 1.3917000000002178e-05, 1.3375000000002968e-05, 1.3361000000003398e-05, 1.3874999999996529e-05, 1.3805999999998153e-05, 1.4403000000003108e-05, 1.3346999999996889e-05, 1.3374999999996029e-05, 1.3348000000003302e-05, 1.3929999999995335e-05, 1.3902999999995669e-05, 1.3833999999997293e-05, 1.3374999999996029e-05, 1.3874999999996529e-05, 1.3375000000002968e-05, 1.3889000000003038e-05, 1.3944999999994379e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.427" endtime="20201029 18:15:59.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.413" endtime="20201029 18:15:59.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.446" endtime="20201029 18:15:59.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.441" endtime="20201029 18:15:59.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.438" endtime="20201029 18:15:59.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.926" endtime="20201029 18:15:59.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.924" endtime="20201029 18:15:59.473"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.501" endtime="20201029 18:15:59.520"></status>
</kw>
<msg timestamp="20201029 18:15:59.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.497" endtime="20201029 18:15:59.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.525" endtime="20201029 18:15:59.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.532" endtime="20201029 18:15:59.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.488" endtime="20201029 18:15:59.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.481" endtime="20201029 18:15:59.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.566" endtime="20201029 18:15:59.905"></status>
</kw>
<msg timestamp="20201029 18:15:59.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048718097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048733042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.563" endtime="20201029 18:15:59.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048718097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048733042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.915" endtime="20201029 18:15:59.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.933" endtime="20201029 18:15:59.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.553" endtime="20201029 18:15:59.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.547" endtime="20201029 18:15:59.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.951" level="INFO">${RESULT} = [{'diff': 1.4944999999995379e-05}, {'diff': 1.4943999999995905e-05}, {'diff': 1.4429999999995835e-05}, {'diff': 1.4903000000003608e-05}, {'diff': 1.5471999999995545e-05}, {'diff': 2.1944000000002906e-...</msg>
<status status="PASS" starttime="20201029 18:15:59.942" endtime="20201029 18:15:59.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.960" level="INFO">${ACCURACY} = {'diff': [1.4944999999995379e-05, 1.4943999999995905e-05, 1.4429999999995835e-05, 1.4903000000003608e-05, 1.5471999999995545e-05, 2.1944000000002906e-05, 1.5486000000002054e-05, 1.4944000000002844e-05...</msg>
<status status="PASS" starttime="20201029 18:15:59.953" endtime="20201029 18:15:59.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.971" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.969" endtime="20201029 18:15:59.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.976" level="INFO">VALUE: [1.4944999999995379e-05, 1.4943999999995905e-05, 1.4429999999995835e-05, 1.4903000000003608e-05, 1.5471999999995545e-05, 2.1944000000002906e-05, 1.5486000000002054e-05, 1.4944000000002844e-05, 1.4930999999995809e-05, 1.4430999999995309e-05, 1.4472000000001484e-05, 1.4402999999996169e-05, 1.4916999999996239e-05, 1.486099999999796e-05, 1.4903000000003608e-05, 1.4417000000002678e-05, 1.4429999999995835e-05, 1.4402999999996169e-05, 1.4429999999995835e-05, 1.4402999999996169e-05, 1.4429999999995835e-05, 1.4972000000001984e-05, 1.4957999999995475e-05, 1.4417000000002678e-05, 1.4374999999997029e-05, 1.4916999999996239e-05, 1.4417000000002678e-05, 1.4417000000002678e-05, 1.4417000000002678e-05, 1.4957999999995475e-05, 1.4429999999995835e-05, 1.4915999999996765e-05, 1.4945000000002318e-05, 1.4945000000002318e-05, 1.4973000000001457e-05, 1.4486000000001054e-05, 1.4389000000003538e-05, 1.4944999999995379e-05, 1.4944999999995379e-05, 1.4416999999995739e-05, 1.4417000000002678e-05, 1.4931000000002748e-05, 1.4972000000001984e-05, 1.4903000000003608e-05, 1.4417000000002678e-05, 1.4430000000002774e-05, 1.4374999999997029e-05, 1.4445000000001817e-05, 1.4388999999996599e-05, 1.4943999999995905e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.973" endtime="20201029 18:15:59.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.962" endtime="20201029 18:15:59.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.991" endtime="20201029 18:16:00.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.985" endtime="20201029 18:16:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.982" endtime="20201029 18:16:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.476" endtime="20201029 18:16:00.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.474" endtime="20201029 18:16:00.018"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.045" endtime="20201029 18:16:00.063"></status>
</kw>
<msg timestamp="20201029 18:16:00.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.041" endtime="20201029 18:16:00.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.066" endtime="20201029 18:16:00.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.073" endtime="20201029 18:16:00.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.032" endtime="20201029 18:16:00.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.026" endtime="20201029 18:16:00.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.096" endtime="20201029 18:16:00.434"></status>
</kw>
<msg timestamp="20201029 18:16:00.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046940222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046956222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.093" endtime="20201029 18:16:00.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046940222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046956222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.444" endtime="20201029 18:16:00.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.463" endtime="20201029 18:16:00.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.085" endtime="20201029 18:16:00.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.081" endtime="20201029 18:16:00.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.481" level="INFO">${RESULT} = [{'diff': 1.6000000000002124e-05}, {'diff': 1.551300000000172e-05}, {'diff': 1.6083999999999543e-05}, {'diff': 1.6014000000001694e-05}, {'diff': 1.5458000000002914e-05}, {'diff': 1.5985999999995615e-0...</msg>
<status status="PASS" starttime="20201029 18:16:00.471" endtime="20201029 18:16:00.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.494" level="INFO">${ACCURACY} = {'diff': [1.6000000000002124e-05, 1.551300000000172e-05, 1.6083999999999543e-05, 1.6014000000001694e-05, 1.5458000000002914e-05, 1.5985999999995615e-05, 1.6000000000002124e-05, 1.5417000000003678e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:00.484" endtime="20201029 18:16:00.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.506" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.504" endtime="20201029 18:16:00.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.513" level="INFO">VALUE: [1.6000000000002124e-05, 1.551300000000172e-05, 1.6083999999999543e-05, 1.6014000000001694e-05, 1.5458000000002914e-05, 1.5985999999995615e-05, 1.6000000000002124e-05, 1.5417000000003678e-05, 1.602700000000179e-05, 1.5999999999995185e-05, 1.5999999999995185e-05, 1.5486000000002054e-05, 1.5459000000002387e-05, 1.6028000000001263e-05, 1.5472000000002484e-05, 1.5972000000002984e-05, 1.6014000000001694e-05, 1.6069999999999973e-05, 1.543099999999631e-05, 1.5999999999995185e-05, 1.6013999999994755e-05, 1.5472000000002484e-05, 1.5473000000001957e-05, 1.5472000000002484e-05, 1.6042000000000833e-05, 1.6000000000002124e-05, 1.5445000000002818e-05, 1.6014000000001694e-05, 1.5985999999995615e-05, 1.5999999999995185e-05, 1.5500000000001624e-05, 1.5472000000002484e-05, 1.5471999999995545e-05, 1.5458000000002914e-05, 1.6056000000000403e-05, 1.5472000000002484e-05, 1.5499999999994685e-05, 1.6000000000002124e-05, 1.545899999999545e-05, 1.5443999999996405e-05, 1.5528000000000763e-05, 1.5485999999995115e-05, 1.6000000000002124e-05, 1.6000000000002124e-05, 1.5486000000002054e-05, 1.547299999999502e-05, 1.5986000000002554e-05, 1.5986000000002554e-05, 1.6000000000002124e-05, 1.5471999999995545e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.509" endtime="20201029 18:16:00.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.496" endtime="20201029 18:16:00.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.528" endtime="20201029 18:16:00.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.523" endtime="20201029 18:16:00.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.520" endtime="20201029 18:16:00.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.020" endtime="20201029 18:16:00.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.019" endtime="20201029 18:16:00.554"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.577" endtime="20201029 18:16:00.595"></status>
</kw>
<msg timestamp="20201029 18:16:00.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.574" endtime="20201029 18:16:00.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.598" endtime="20201029 18:16:00.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.605" endtime="20201029 18:16:00.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.566" endtime="20201029 18:16:00.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.560" endtime="20201029 18:16:00.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.628" endtime="20201029 18:16:00.972"></status>
</kw>
<msg timestamp="20201029 18:16:00.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041668278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.625" endtime="20201029 18:16:00.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041651278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041668278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.982" endtime="20201029 18:16:01.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.001" endtime="20201029 18:16:01.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.617" endtime="20201029 18:16:01.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.612" endtime="20201029 18:16:01.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.019" level="INFO">${RESULT} = [{'diff': 1.7000000000003124e-05}, {'diff': 1.6528000000001764e-05}, {'diff': 1.6542000000001333e-05}, {'diff': 1.7056000000001403e-05}, {'diff': 1.705500000000193e-05}, {'diff': 1.6500000000002624e-0...</msg>
<status status="PASS" starttime="20201029 18:16:01.010" endtime="20201029 18:16:01.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.030" level="INFO">${ACCURACY} = {'diff': [1.7000000000003124e-05, 1.6528000000001764e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.705500000000193e-05, 1.6500000000002624e-05, 1.645899999999645e-05, 1.705500000000193e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:16:01.021" endtime="20201029 18:16:01.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.042" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.039" endtime="20201029 18:16:01.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.048" level="INFO">VALUE: [1.7000000000003124e-05, 1.6528000000001764e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.705500000000193e-05, 1.6500000000002624e-05, 1.645899999999645e-05, 1.705500000000193e-05, 1.654100000000186e-05, 1.6513999999995255e-05, 1.6542000000001333e-05, 1.6542000000001333e-05, 1.6514000000002194e-05, 1.708300000000107e-05, 1.7000000000003124e-05, 1.6527999999994825e-05, 1.6471999999996545e-05, 1.7070000000000973e-05, 1.7055999999994464e-05, 1.705500000000193e-05, 1.706899999999456e-05, 1.6528000000001764e-05, 1.6542000000001333e-05, 1.7042000000001833e-05, 1.6528000000001764e-05, 1.70690000000015e-05, 1.7056000000001403e-05, 1.6542000000001333e-05, 1.654099999999492e-05, 1.7070000000000973e-05, 1.6569000000001e-05, 1.705500000000193e-05, 1.7042000000001833e-05, 1.6542000000001333e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.7056000000001403e-05, 1.6528000000001764e-05, 1.7070000000000973e-05, 1.6527999999994825e-05, 1.70690000000015e-05, 1.7070000000000973e-05, 1.705499999999499e-05, 1.6500000000002624e-05, 1.7056000000001403e-05, 1.708300000000107e-05, 1.6556000000000903e-05, 1.7042000000001833e-05, 1.6528000000001764e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.044" endtime="20201029 18:16:01.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.032" endtime="20201029 18:16:01.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.070" endtime="20201029 18:16:01.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.065" endtime="20201029 18:16:01.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.061" endtime="20201029 18:16:01.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.556" endtime="20201029 18:16:01.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.555" endtime="20201029 18:16:01.097"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.122" endtime="20201029 18:16:01.140"></status>
</kw>
<msg timestamp="20201029 18:16:01.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.119" endtime="20201029 18:16:01.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.144" endtime="20201029 18:16:01.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.150" endtime="20201029 18:16:01.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.111" endtime="20201029 18:16:01.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.105" endtime="20201029 18:16:01.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.174" endtime="20201029 18:16:01.533"></status>
</kw>
<msg timestamp="20201029 18:16:01.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045373208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045390806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.171" endtime="20201029 18:16:01.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045373208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045390806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.543" endtime="20201029 18:16:01.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.562" endtime="20201029 18:16:01.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.164" endtime="20201029 18:16:01.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.159" endtime="20201029 18:16:01.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.579" level="INFO">${RESULT} = [{'diff': 1.7598000000000613e-05}, {'diff': 1.759700000000114e-05}, {'diff': 1.761100000000071e-05}, {'diff': 1.7569999999994534e-05}, {'diff': 1.8098000000001113e-05}, {'diff': 1.758300000000157e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:01.571" endtime="20201029 18:16:01.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.589" level="INFO">${ACCURACY} = {'diff': [1.7598000000000613e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7569999999994534e-05, 1.8098000000001113e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.75969999999942e-05, 1.80...</msg>
<status status="PASS" starttime="20201029 18:16:01.581" endtime="20201029 18:16:01.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.600" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.598" endtime="20201029 18:16:01.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.606" level="INFO">VALUE: [1.7598000000000613e-05, 1.759700000000114e-05, 1.761100000000071e-05, 1.7569999999994534e-05, 1.8098000000001113e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.75969999999942e-05, 1.8098000000001113e-05, 1.761100000000071e-05, 1.812500000000078e-05, 1.758299999999463e-05, 1.812500000000078e-05, 1.811100000000121e-05, 1.811099999999427e-05, 1.7584000000001043e-05, 1.811100000000121e-05, 1.7583999999994104e-05, 1.8070000000001973e-05, 1.809700000000164e-05, 1.758300000000157e-05, 1.756899999999506e-05, 1.7570000000001473e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.809700000000164e-05, 1.808300000000207e-05, 1.811100000000121e-05, 1.812500000000078e-05, 1.70690000000015e-05, 1.811100000000121e-05, 1.7556000000001903e-05, 1.8097999999994174e-05, 1.812500000000078e-05, 1.759700000000114e-05, 1.811100000000121e-05, 1.7013999999995755e-05, 1.761100000000071e-05, 1.811100000000121e-05, 1.7570000000001473e-05, 1.808300000000207e-05, 1.761099999999377e-05, 1.8098000000001113e-05, 1.761100000000071e-05, 1.758300000000157e-05, 1.758300000000157e-05, 1.756899999999506e-05, 1.811100000000121e-05, 1.758300000000157e-05, 1.811100000000121e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.603" endtime="20201029 18:16:01.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.591" endtime="20201029 18:16:01.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.619" endtime="20201029 18:16:01.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.615" endtime="20201029 18:16:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.612" endtime="20201029 18:16:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.099" endtime="20201029 18:16:01.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.098" endtime="20201029 18:16:01.644"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.668" endtime="20201029 18:16:01.687"></status>
</kw>
<msg timestamp="20201029 18:16:01.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.664" endtime="20201029 18:16:01.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.691" endtime="20201029 18:16:01.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.697" endtime="20201029 18:16:01.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.657" endtime="20201029 18:16:01.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.651" endtime="20201029 18:16:01.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.721" endtime="20201029 18:16:02.074"></status>
</kw>
<msg timestamp="20201029 18:16:02.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042363486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.718" endtime="20201029 18:16:02.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042363486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.083" endtime="20201029 18:16:02.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.102" endtime="20201029 18:16:02.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.710" endtime="20201029 18:16:02.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.706" endtime="20201029 18:16:02.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.119" level="INFO">${RESULT} = [{'diff': 1.915300000000092e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.868099999999956e-05}, {'diff': 1.909700000000264e-05}, {'diff': 1.862500000000128e-05}, {'diff': 1.85969999999952e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:02.111" endtime="20201029 18:16:02.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.129" level="INFO">${ACCURACY} = {'diff': [1.915300000000092e-05, 1.863900000000085e-05, 1.868099999999956e-05, 1.909700000000264e-05, 1.862500000000128e-05, 1.85969999999952e-05, 1.9083999999995604e-05, 1.863899999999391e-05, 1.8639...</msg>
<status status="PASS" starttime="20201029 18:16:02.121" endtime="20201029 18:16:02.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.139" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.137" endtime="20201029 18:16:02.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.145" level="INFO">VALUE: [1.915300000000092e-05, 1.863900000000085e-05, 1.868099999999956e-05, 1.909700000000264e-05, 1.862500000000128e-05, 1.85969999999952e-05, 1.9083999999995604e-05, 1.863899999999391e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8666000000000516e-05, 1.811100000000121e-05, 1.8707999999999225e-05, 1.911099999999527e-05, 1.811100000000121e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.856899999999606e-05, 1.918100000000006e-05, 1.916700000000049e-05, 1.8707999999999225e-05, 1.863899999999391e-05, 1.9166000000001016e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.918100000000006e-05, 1.9166000000001016e-05, 1.9098000000002113e-05, 1.812500000000078e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.913900000000135e-05, 1.9151999999994507e-05, 1.916700000000049e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.916700000000049e-05, 1.863900000000085e-05, 1.865300000000042e-05, 1.865300000000042e-05, 1.863900000000085e-05, 1.9166000000001016e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.142" endtime="20201029 18:16:02.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.130" endtime="20201029 18:16:02.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.159" endtime="20201029 18:16:02.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.153" endtime="20201029 18:16:02.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.150" endtime="20201029 18:16:02.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.647" endtime="20201029 18:16:02.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.645" endtime="20201029 18:16:02.183"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.206" endtime="20201029 18:16:02.225"></status>
</kw>
<msg timestamp="20201029 18:16:02.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.203" endtime="20201029 18:16:02.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.228" endtime="20201029 18:16:02.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.235" endtime="20201029 18:16:02.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.195" endtime="20201029 18:16:02.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.190" endtime="20201029 18:16:02.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.258" endtime="20201029 18:16:02.611"></status>
</kw>
<msg timestamp="20201029 18:16:02.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040874986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.255" endtime="20201029 18:16:02.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040874986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.621" endtime="20201029 18:16:02.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.640" endtime="20201029 18:16:02.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.248" endtime="20201029 18:16:02.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.242" endtime="20201029 18:16:02.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.657" level="INFO">${RESULT} = [{'diff': 1.969500000000013e-05}, {'diff': 2.0208000000000725e-05}, {'diff': 1.915299999999398e-05}, {'diff': 1.966700000000099e-05}, {'diff': 1.9694000000000655e-05}, {'diff': 1.9749999999998935e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:02.649" endtime="20201029 18:16:02.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.668" level="INFO">${ACCURACY} = {'diff': [1.969500000000013e-05, 2.0208000000000725e-05, 1.915299999999398e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9749999999998935e-05, 1.9694000000000655e-05, 1.9180000000000585e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:16:02.659" endtime="20201029 18:16:02.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.679" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.677" endtime="20201029 18:16:02.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.685" level="INFO">VALUE: [1.969500000000013e-05, 2.0208000000000725e-05, 1.915299999999398e-05, 1.966700000000099e-05, 1.9694000000000655e-05, 1.9749999999998935e-05, 1.9694000000000655e-05, 1.9180000000000585e-05, 1.9694000000000655e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 1.916700000000049e-05, 1.912499999999484e-05, 1.968100000000056e-05, 1.9680000000001086e-05, 1.9194000000000155e-05, 1.968100000000056e-05, 2.0207999999993786e-05, 1.916700000000049e-05, 1.9694000000000655e-05, 1.916700000000049e-05, 1.9750000000005874e-05, 2.02090000000002e-05, 2.0222000000000295e-05, 1.908299999999613e-05, 1.968100000000056e-05, 1.915300000000092e-05, 1.915299999999398e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 1.9680000000001086e-05, 1.962500000000228e-05, 1.9166000000001016e-05, 1.916700000000049e-05, 2.0222000000000295e-05, 1.97089999999997e-05, 1.9694000000000655e-05, 1.9708000000000225e-05, 1.97089999999997e-05, 1.968100000000056e-05, 2.0249999999999435e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 2.019500000000063e-05, 1.9694000000000655e-05, 1.969500000000013e-05, 1.9694000000000655e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.682" endtime="20201029 18:16:02.686"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.670" endtime="20201029 18:16:02.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.698" endtime="20201029 18:16:02.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.693" endtime="20201029 18:16:02.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.691" endtime="20201029 18:16:02.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.186" endtime="20201029 18:16:02.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.184" endtime="20201029 18:16:02.723"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.746" endtime="20201029 18:16:02.765"></status>
</kw>
<msg timestamp="20201029 18:16:02.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.742" endtime="20201029 18:16:02.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.768" endtime="20201029 18:16:02.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.775" endtime="20201029 18:16:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.735" endtime="20201029 18:16:02.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.729" endtime="20201029 18:16:02.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.798" endtime="20201029 18:16:03.139"></status>
</kw>
<msg timestamp="20201029 18:16:03.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041924958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041946236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.795" endtime="20201029 18:16:03.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041924958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041946236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.149" endtime="20201029 18:16:03.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.168" endtime="20201029 18:16:03.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.788" endtime="20201029 18:16:03.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.783" endtime="20201029 18:16:03.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.186" level="INFO">${RESULT} = [{'diff': 2.1277999999999575e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.0722000000000795e-05}, {'diff': 2.136100000000446e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 2.0749999999999935e-0...</msg>
<status status="PASS" starttime="20201029 18:16:03.177" endtime="20201029 18:16:03.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.201" level="INFO">${ACCURACY} = {'diff': [2.1277999999999575e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.136100000000446e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.0235999999999865e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:03.188" endtime="20201029 18:16:03.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.212" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.210" endtime="20201029 18:16:03.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.218" level="INFO">VALUE: [2.1277999999999575e-05, 2.0722000000000795e-05, 2.0722000000000795e-05, 2.136100000000446e-05, 2.0249999999999435e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.0235999999999865e-05, 2.0208000000000725e-05, 2.0222000000000295e-05, 2.0763999999999505e-05, 2.0749999999999935e-05, 2.0277999999998575e-05, 2.0749999999999935e-05, 2.129099999999967e-05, 2.0722000000000795e-05, 2.0222000000000295e-05, 2.0222000000000295e-05, 2.0763999999999505e-05, 2.022299999999977e-05, 2.0763999999999505e-05, 2.0736000000000365e-05, 2.1305999999998715e-05, 2.0722000000000795e-05, 2.0749999999999935e-05, 2.0805999999998215e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0235999999999865e-05, 2.0736000000000365e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.0222000000000295e-05, 2.0749999999999935e-05, 2.0749999999999935e-05, 2.1277999999999575e-05, 2.0222000000000295e-05, 2.073699999999984e-05, 2.0749999999999935e-05, 2.133299999999838e-05, 2.0749999999999935e-05, 2.0235999999999865e-05, 2.080499999999874e-05, 2.0749999999999935e-05, 2.0763999999999505e-05, 2.0222000000000295e-05, 2.0763999999999505e-05, 2.1236000000000865e-05, 2.029099999999867e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.215" endtime="20201029 18:16:03.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.203" endtime="20201029 18:16:03.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.231" endtime="20201029 18:16:03.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.226" endtime="20201029 18:16:03.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.224" endtime="20201029 18:16:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.725" endtime="20201029 18:16:03.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.724" endtime="20201029 18:16:03.256"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.279" endtime="20201029 18:16:03.298"></status>
</kw>
<msg timestamp="20201029 18:16:03.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.276" endtime="20201029 18:16:03.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.302" endtime="20201029 18:16:03.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.308" endtime="20201029 18:16:03.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.268" endtime="20201029 18:16:03.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.262" endtime="20201029 18:16:03.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.332" endtime="20201029 18:16:03.685"></status>
</kw>
<msg timestamp="20201029 18:16:03.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042080667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.328" endtime="20201029 18:16:03.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042080667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.695" endtime="20201029 18:16:03.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.713" endtime="20201029 18:16:03.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.321" endtime="20201029 18:16:03.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.316" endtime="20201029 18:16:03.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.731" level="INFO">${RESULT} = [{'diff': 2.1778000000000075e-05}, {'diff': 2.1805999999999215e-05}, {'diff': 2.2305999999999715e-05}, {'diff': 2.181899999999931e-05}, {'diff': 2.1805999999999215e-05}, {'diff': 2.129099999999967e-05...</msg>
<status status="PASS" starttime="20201029 18:16:03.722" endtime="20201029 18:16:03.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.740" level="INFO">${ACCURACY} = {'diff': [2.1778000000000075e-05, 2.1805999999999215e-05, 2.2305999999999715e-05, 2.181899999999931e-05, 2.1805999999999215e-05, 2.129099999999967e-05, 2.23890000000046e-05, 2.1264000000000005e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:03.733" endtime="20201029 18:16:03.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.751" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.748" endtime="20201029 18:16:03.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.756" level="INFO">VALUE: [2.1778000000000075e-05, 2.1805999999999215e-05, 2.2305999999999715e-05, 2.181899999999931e-05, 2.1805999999999215e-05, 2.129099999999967e-05, 2.23890000000046e-05, 2.1264000000000005e-05, 2.1819999999998785e-05, 2.179100000000017e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.180499999999974e-05, 2.1806000000006154e-05, 2.1805999999999215e-05, 2.1764000000000505e-05, 2.1820000000005724e-05, 2.1762999999994093e-05, 2.180499999999974e-05, 2.183299999999888e-05, 2.1277999999999575e-05, 2.181899999999931e-05, 2.237500000000503e-05, 2.1277999999999575e-05, 2.231899999999981e-05, 2.180499999999974e-05, 2.1819999999998785e-05, 2.233299999999938e-05, 2.1805999999999215e-05, 2.1277999999999575e-05, 2.1805999999999215e-05, 2.1264000000000005e-05, 2.181899999999931e-05, 2.180499999999974e-05, 2.236099999999852e-05, 2.231899999999981e-05, 2.1819999999998785e-05, 2.180499999999974e-05, 2.1291999999999145e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.2333999999998855e-05, 2.1819999999998785e-05, 2.1819999999998785e-05, 2.233299999999938e-05, 2.179100000000017e-05, 2.2347999999998425e-05, 2.181899999999931e-05, 2.1791999999999645e-05, 2.1277999999999575e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.753" endtime="20201029 18:16:03.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.742" endtime="20201029 18:16:03.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.769" endtime="20201029 18:16:03.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.764" endtime="20201029 18:16:03.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.762" endtime="20201029 18:16:03.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.258" endtime="20201029 18:16:03.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.257" endtime="20201029 18:16:03.794"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.816" endtime="20201029 18:16:03.837"></status>
</kw>
<msg timestamp="20201029 18:16:03.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.813" endtime="20201029 18:16:03.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.840" endtime="20201029 18:16:03.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.846" endtime="20201029 18:16:03.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.806" endtime="20201029 18:16:03.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.800" endtime="20201029 18:16:03.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.870" endtime="20201029 18:16:04.215"></status>
</kw>
<msg timestamp="20201029 18:16:04.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042560597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.866" endtime="20201029 18:16:04.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042537806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042560597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.224" endtime="20201029 18:16:04.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.242" endtime="20201029 18:16:04.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.859" endtime="20201029 18:16:04.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.855" endtime="20201029 18:16:04.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.260" level="INFO">${RESULT} = [{'diff': 2.279100000000117e-05}, {'diff': 2.338899999999866e-05}, {'diff': 2.234699999999895e-05}, {'diff': 2.286100000000596e-05}, {'diff': 2.286099999999902e-05}, {'diff': 2.287499999999859e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.251" endtime="20201029 18:16:04.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.269" level="INFO">${ACCURACY} = {'diff': [2.279100000000117e-05, 2.338899999999866e-05, 2.234699999999895e-05, 2.286100000000596e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.231899999999981e-05, 2.34169999999978e-05, 2.23469...</msg>
<status status="PASS" starttime="20201029 18:16:04.262" endtime="20201029 18:16:04.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.280" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.277" endtime="20201029 18:16:04.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.285" level="INFO">VALUE: [2.279100000000117e-05, 2.338899999999866e-05, 2.234699999999895e-05, 2.286100000000596e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.231899999999981e-05, 2.34169999999978e-05, 2.234699999999895e-05, 2.2333999999998855e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.2333999999998855e-05, 2.283299999999988e-05, 2.286099999999902e-05, 2.33890000000056e-05, 2.283299999999988e-05, 2.337499999999909e-05, 2.2861999999998495e-05, 2.2319999999999285e-05, 2.286099999999902e-05, 2.286099999999902e-05, 2.2833999999999355e-05, 2.287499999999859e-05, 2.236099999999852e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.287499999999859e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.233299999999938e-05, 2.2347999999998425e-05, 2.2292000000000145e-05, 2.288899999999816e-05, 2.286099999999902e-05, 2.2902000000005196e-05, 2.284699999999945e-05, 2.2348000000005364e-05, 2.2347999999998425e-05, 2.287499999999859e-05, 2.286099999999902e-05, 2.230500000000024e-05, 2.233299999999938e-05, 2.286099999999902e-05, 2.2792000000000645e-05, 2.284699999999945e-05, 2.2333999999998855e-05, 2.2319999999999285e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.282" endtime="20201029 18:16:04.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.271" endtime="20201029 18:16:04.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.299" endtime="20201029 18:16:04.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.293" endtime="20201029 18:16:04.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.291" endtime="20201029 18:16:04.323"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.796" endtime="20201029 18:16:04.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.795" endtime="20201029 18:16:04.324"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.346" endtime="20201029 18:16:04.366"></status>
</kw>
<msg timestamp="20201029 18:16:04.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.343" endtime="20201029 18:16:04.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.369" endtime="20201029 18:16:04.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.376" endtime="20201029 18:16:04.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.336" endtime="20201029 18:16:04.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.330" endtime="20201029 18:16:04.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.400" endtime="20201029 18:16:04.755"></status>
</kw>
<msg timestamp="20201029 18:16:04.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041053097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041088444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.396" endtime="20201029 18:16:04.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041053097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041088444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.769" endtime="20201029 18:16:04.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.801" endtime="20201029 18:16:04.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.388" endtime="20201029 18:16:04.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.384" endtime="20201029 18:16:04.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.838" level="INFO">${RESULT} = [{'diff': 3.534700000000501e-05}, {'diff': 3.5110999999997394e-05}, {'diff': 3.513799999999706e-05}, {'diff': 3.47779999999992e-05}, {'diff': 3.518100000000218e-05}, {'diff': 3.536100000000458e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.820" endtime="20201029 18:16:04.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.860" level="INFO">${ACCURACY} = {'diff': [3.534700000000501e-05, 3.5110999999997394e-05, 3.513799999999706e-05, 3.47779999999992e-05, 3.518100000000218e-05, 3.536100000000458e-05, 3.465199999999613e-05, 3.4776999999999725e-05, 3.458...</msg>
<status status="PASS" starttime="20201029 18:16:04.842" endtime="20201029 18:16:04.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.876" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.873" endtime="20201029 18:16:04.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.883" level="INFO">VALUE: [3.534700000000501e-05, 3.5110999999997394e-05, 3.513799999999706e-05, 3.47779999999992e-05, 3.518100000000218e-05, 3.536100000000458e-05, 3.465199999999613e-05, 3.4776999999999725e-05, 3.458300000000469e-05, 3.54580000000021e-05, 3.4554999999998615e-05, 3.5332999999998504e-05, 3.4554999999998615e-05, 3.513900000000347e-05, 3.522199999999448e-05, 3.5110999999997394e-05, 3.543000000000296e-05, 3.520799999999491e-05, 3.500000000000031e-05, 3.4888999999996284e-05, 3.490300000000279e-05, 3.500000000000031e-05, 3.520900000000132e-05, 3.4888999999996284e-05, 3.545900000000157e-05, 3.488900000000322e-05, 3.545900000000157e-05, 3.465300000000254e-05, 3.487500000000365e-05, 3.525000000000056e-05, 3.488900000000322e-05, 3.515300000000304e-05, 3.51250000000039e-05, 3.4790999999999295e-05, 3.5346999999998074e-05, 3.4776999999999725e-05, 3.451399999999938e-05, 3.525000000000056e-05, 3.522200000000142e-05, 3.513900000000347e-05, 3.519400000000228e-05, 3.54580000000021e-05, 3.545799999999516e-05, 3.494400000000203e-05, 3.520800000000185e-05, 3.468100000000168e-05, 3.475000000000006e-05, 3.470900000000082e-05, 3.548600000000124e-05, 3.468100000000168e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.879" endtime="20201029 18:16:04.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.863" endtime="20201029 18:16:04.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.896" endtime="20201029 18:16:04.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.891" endtime="20201029 18:16:04.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.888" endtime="20201029 18:16:04.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.326" endtime="20201029 18:16:04.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.325" endtime="20201029 18:16:04.921"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.944" endtime="20201029 18:16:04.964"></status>
</kw>
<msg timestamp="20201029 18:16:04.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.941" endtime="20201029 18:16:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.968" endtime="20201029 18:16:04.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.974" endtime="20201029 18:16:04.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.933" endtime="20201029 18:16:04.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.927" endtime="20201029 18:16:04.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.998" endtime="20201029 18:16:05.340"></status>
</kw>
<msg timestamp="20201029 18:16:05.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.995" endtime="20201029 18:16:05.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042328611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.349" endtime="20201029 18:16:05.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.368" endtime="20201029 18:16:05.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.987" endtime="20201029 18:16:05.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.982" endtime="20201029 18:16:05.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.386" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.623600000000199e-05}, {'diff': 3.645799999999616e-05}, {'diff': 3.620799999999591e-05}, {'diff': 3.62780000000007e-05}, {'diff': 3.576400000000063e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:05.377" endtime="20201029 18:16:05.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.397" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.623600000000199e-05, 3.645799999999616e-05, 3.620799999999591e-05, 3.62780000000007e-05, 3.576400000000063e-05, 3.576400000000063e-05, 3.643100000000343e-05, 3.62090...</msg>
<status status="PASS" starttime="20201029 18:16:05.388" endtime="20201029 18:16:05.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.408" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.406" endtime="20201029 18:16:05.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.414" level="INFO">VALUE: [3.575000000000106e-05, 3.623600000000199e-05, 3.645799999999616e-05, 3.620799999999591e-05, 3.62780000000007e-05, 3.576400000000063e-05, 3.576400000000063e-05, 3.643100000000343e-05, 3.620900000000232e-05, 3.569500000000225e-05, 3.5694999999995314e-05, 3.554199999999952e-05, 3.641700000000386e-05, 3.5680999999995744e-05, 3.555599999999909e-05, 3.555599999999909e-05, 3.567999999999627e-05, 3.638800000000525e-05, 3.568000000000321e-05, 3.595799999999566e-05, 3.644400000000353e-05, 3.5791000000000295e-05, 3.598600000000174e-05, 3.5568999999999185e-05, 3.6332999999999505e-05, 3.5554999999999615e-05, 3.645799999999616e-05, 3.6332999999999505e-05, 3.6346999999999074e-05, 3.599999999999437e-05, 3.6318999999999935e-05, 3.622199999999548e-05, 3.569500000000225e-05, 3.6445000000003e-05, 3.626400000000113e-05, 3.59859999999948e-05, 3.615200000000457e-05, 3.6445000000003e-05, 3.641700000000386e-05, 3.563900000000397e-05, 3.555599999999909e-05, 3.6124999999997964e-05, 3.5652999999996604e-05, 3.5624999999997464e-05, 3.6332999999999505e-05, 3.566600000000364e-05, 3.588800000000475e-05, 3.6110999999998394e-05, 3.622199999999548e-05, 3.609700000000576e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.411" endtime="20201029 18:16:05.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.399" endtime="20201029 18:16:05.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.427" endtime="20201029 18:16:05.448"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.422" endtime="20201029 18:16:05.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.419" endtime="20201029 18:16:05.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.923" endtime="20201029 18:16:05.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.922" endtime="20201029 18:16:05.452"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.475" endtime="20201029 18:16:05.495"></status>
</kw>
<msg timestamp="20201029 18:16:05.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.471" endtime="20201029 18:16:05.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.498" endtime="20201029 18:16:05.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.504" endtime="20201029 18:16:05.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.464" endtime="20201029 18:16:05.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.458" endtime="20201029 18:16:05.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.528" endtime="20201029 18:16:05.881"></status>
</kw>
<msg timestamp="20201029 18:16:05.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042110375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.525" endtime="20201029 18:16:05.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042073833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042110375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.890" endtime="20201029 18:16:05.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.909" endtime="20201029 18:16:05.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.517" endtime="20201029 18:16:05.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.512" endtime="20201029 18:16:05.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.926" level="INFO">${RESULT} = [{'diff': 3.654200000000052e-05}, {'diff': 3.744400000000453e-05}, {'diff': 3.74580000000041e-05}, {'diff': 3.725000000000256e-05}, {'diff': 3.723599999999605e-05}, {'diff': 3.725000000000256e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:05.917" endtime="20201029 18:16:05.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.935" level="INFO">${ACCURACY} = {'diff': [3.654200000000052e-05, 3.744400000000453e-05, 3.74580000000041e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.725000000000256e-05, 3.700000000000231e-05, 3.7444999999997064e-05, 3.7361...</msg>
<status status="PASS" starttime="20201029 18:16:05.928" endtime="20201029 18:16:05.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.946" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.944" endtime="20201029 18:16:05.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.952" level="INFO">VALUE: [3.654200000000052e-05, 3.744400000000453e-05, 3.74580000000041e-05, 3.725000000000256e-05, 3.723599999999605e-05, 3.725000000000256e-05, 3.700000000000231e-05, 3.7444999999997064e-05, 3.736199999999912e-05, 3.656999999999966e-05, 3.708399999999973e-05, 3.679200000000077e-05, 3.722300000000289e-05, 3.7124999999998964e-05, 3.725000000000256e-05, 3.673600000000249e-05, 3.6569000000000185e-05, 3.6790999999994356e-05, 3.7124999999998964e-05, 3.672200000000292e-05, 3.7333000000000505e-05, 3.700000000000231e-05, 3.6555000000000615e-05, 3.6888999999998284e-05, 3.655600000000009e-05, 3.668100000000368e-05, 3.6680999999996744e-05, 3.701400000000188e-05, 3.67780000000012e-05, 3.7430999999997494e-05, 3.743100000000443e-05, 3.6888999999998284e-05, 3.6902999999997854e-05, 3.7374999999999214e-05, 3.730600000000084e-05, 3.668000000000421e-05, 3.708400000000667e-05, 3.7110999999999394e-05, 3.6541000000001045e-05, 3.6791000000001295e-05, 3.700000000000231e-05, 3.6791000000001295e-05, 3.688799999999881e-05, 3.6555000000000615e-05, 3.719500000000375e-05, 3.7110999999999394e-05, 3.66659999999977e-05, 3.67780000000012e-05, 3.7332999999993566e-05, 3.66659999999977e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.949" endtime="20201029 18:16:05.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.937" endtime="20201029 18:16:05.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.974" endtime="20201029 18:16:05.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.968" endtime="20201029 18:16:06.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.965" endtime="20201029 18:16:06.001"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.454" endtime="20201029 18:16:06.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.453" endtime="20201029 18:16:06.003"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.027" endtime="20201029 18:16:06.048"></status>
</kw>
<msg timestamp="20201029 18:16:06.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.023" endtime="20201029 18:16:06.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.052" endtime="20201029 18:16:06.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.058" endtime="20201029 18:16:06.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.016" endtime="20201029 18:16:06.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.010" endtime="20201029 18:16:06.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.082" endtime="20201029 18:16:06.437"></status>
</kw>
<msg timestamp="20201029 18:16:06.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047503778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047541444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.079" endtime="20201029 18:16:06.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047503778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047541444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.446" endtime="20201029 18:16:06.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.466" endtime="20201029 18:16:06.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.071" endtime="20201029 18:16:06.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.066" endtime="20201029 18:16:06.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.483" level="INFO">${RESULT} = [{'diff': 3.76659999999987e-05}, {'diff': 3.842999999999902e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.76659999999987e-05}, {'diff': 3.7902999999998854e-05}, {'diff': 3.8333000000001505e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:06.474" endtime="20201029 18:16:06.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.493" level="INFO">${ACCURACY} = {'diff': [3.76659999999987e-05, 3.842999999999902e-05, 3.8375000000000214e-05, 3.76659999999987e-05, 3.7902999999998854e-05, 3.8333000000001505e-05, 3.8124999999999964e-05, 3.8319000000001935e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:16:06.485" endtime="20201029 18:16:06.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.504" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.501" endtime="20201029 18:16:06.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.509" level="INFO">VALUE: [3.76659999999987e-05, 3.842999999999902e-05, 3.8375000000000214e-05, 3.76659999999987e-05, 3.7902999999998854e-05, 3.8333000000001505e-05, 3.8124999999999964e-05, 3.8319000000001935e-05, 3.844400000000553e-05, 3.801400000000288e-05, 3.766700000000511e-05, 3.847200000000467e-05, 3.823599999999705e-05, 3.801399999999594e-05, 3.755600000000109e-05, 3.779200000000177e-05, 3.8445000000005e-05, 3.777799999999526e-05, 3.8111000000000395e-05, 3.7638999999999034e-05, 3.770799999999741e-05, 3.751400000000238e-05, 3.766700000000511e-05, 3.7652999999998604e-05, 3.755599999999415e-05, 3.811199999999987e-05, 3.8012999999996466e-05, 3.788799999999981e-05, 3.7554999999994676e-05, 3.765199999999913e-05, 3.7888999999999284e-05, 3.820799999999791e-05, 3.7874999999999714e-05, 3.79450000000045e-05, 3.767999999999827e-05, 3.7902999999998854e-05, 3.8124999999999964e-05, 3.7597000000000325e-05, 3.8361000000000645e-05, 3.8486999999996774e-05, 3.79859999999968e-05, 3.813900000000647e-05, 3.8430999999998494e-05, 3.802800000000245e-05, 3.816700000000561e-05, 3.7666999999998174e-05, 3.833400000000098e-05, 3.8388999999999784e-05, 3.7666999999998174e-05, 3.7888999999999284e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.506" endtime="20201029 18:16:06.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.494" endtime="20201029 18:16:06.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.530" endtime="20201029 18:16:06.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.524" endtime="20201029 18:16:06.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.521" endtime="20201029 18:16:06.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.006" endtime="20201029 18:16:06.555"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.004" endtime="20201029 18:16:06.556"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.579" endtime="20201029 18:16:06.599"></status>
</kw>
<msg timestamp="20201029 18:16:06.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.575" endtime="20201029 18:16:06.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.602" endtime="20201029 18:16:06.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.609" endtime="20201029 18:16:06.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.568" endtime="20201029 18:16:06.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.562" endtime="20201029 18:16:06.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.635" endtime="20201029 18:16:06.990"></status>
</kw>
<msg timestamp="20201029 18:16:06.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042320681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.631" endtime="20201029 18:16:06.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042320681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.999" endtime="20201029 18:16:07.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.019" endtime="20201029 18:16:07.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.623" endtime="20201029 18:16:07.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.618" endtime="20201029 18:16:07.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.036" level="INFO">${RESULT} = [{'diff': 3.8889000000000284e-05}, {'diff': 3.8652999999999604e-05}, {'diff': 3.9026999999997036e-05}, {'diff': 3.890200000000038e-05}, {'diff': 3.865200000000013e-05}, {'diff': 3.9332999999995566e-05...</msg>
<status status="PASS" starttime="20201029 18:16:07.028" endtime="20201029 18:16:07.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.047" level="INFO">${ACCURACY} = {'diff': [3.8889000000000284e-05, 3.8652999999999604e-05, 3.9026999999997036e-05, 3.890200000000038e-05, 3.865200000000013e-05, 3.9332999999995566e-05, 3.8569000000002185e-05, 3.899999999999737e-05, 3...</msg>
<status status="PASS" starttime="20201029 18:16:07.038" endtime="20201029 18:16:07.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.058" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.056" endtime="20201029 18:16:07.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.064" level="INFO">VALUE: [3.8889000000000284e-05, 3.8652999999999604e-05, 3.9026999999997036e-05, 3.890200000000038e-05, 3.865200000000013e-05, 3.9332999999995566e-05, 3.8569000000002185e-05, 3.899999999999737e-05, 3.86659999999997e-05, 3.944399999999959e-05, 3.91660000000002e-05, 3.9333000000002505e-05, 3.8930999999998994e-05, 3.877799999999626e-05, 3.922199999999848e-05, 3.879199999999583e-05, 3.8680999999998744e-05, 3.917999999999977e-05, 3.8875000000000715e-05, 3.855600000000209e-05, 3.8680999999998744e-05, 3.917999999999977e-05, 3.9444999999999064e-05, 3.9222999999997954e-05, 3.85980000000008e-05, 3.879199999999583e-05, 3.865200000000013e-05, 3.877799999999626e-05, 3.87780000000032e-05, 3.945799999999916e-05, 3.944399999999959e-05, 3.8804999999995926e-05, 3.9111000000001395e-05, 3.9110999999994456e-05, 3.8804999999995926e-05, 3.944399999999959e-05, 3.9319000000002935e-05, 3.883400000000148e-05, 3.879199999999583e-05, 3.8652999999999604e-05, 3.9375000000001215e-05, 3.925000000000456e-05, 3.8902999999999854e-05, 3.905600000000259e-05, 3.8889000000000284e-05, 3.932000000000241e-05, 3.9125000000000965e-05, 3.9458999999998634e-05, 3.933400000000198e-05, 3.945900000000557e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.061" endtime="20201029 18:16:07.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.049" endtime="20201029 18:16:07.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.077" endtime="20201029 18:16:07.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.072" endtime="20201029 18:16:07.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.070" endtime="20201029 18:16:07.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.558" endtime="20201029 18:16:07.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.556" endtime="20201029 18:16:07.102"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.125" endtime="20201029 18:16:07.145"></status>
</kw>
<msg timestamp="20201029 18:16:07.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.122" endtime="20201029 18:16:07.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.148" endtime="20201029 18:16:07.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.155" endtime="20201029 18:16:07.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.114" endtime="20201029 18:16:07.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.109" endtime="20201029 18:16:07.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.179" endtime="20201029 18:16:07.534"></status>
</kw>
<msg timestamp="20201029 18:16:07.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.175" endtime="20201029 18:16:07.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042505514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.543" endtime="20201029 18:16:07.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.566" endtime="20201029 18:16:07.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.168" endtime="20201029 18:16:07.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.163" endtime="20201029 18:16:07.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.590" level="INFO">${RESULT} = [{'diff': 4.043000000000102e-05}, {'diff': 3.968000000000027e-05}, {'diff': 4.044400000000059e-05}, {'diff': 3.9554999999996676e-05}, {'diff': 3.9555000000003615e-05}, {'diff': 3.96660000000007e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:07.579" endtime="20201029 18:16:07.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.604" level="INFO">${ACCURACY} = {'diff': [4.043000000000102e-05, 3.968000000000027e-05, 4.044400000000059e-05, 3.9554999999996676e-05, 3.9555000000003615e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.9903000000000854e-05, 3.966...</msg>
<status status="PASS" starttime="20201029 18:16:07.593" endtime="20201029 18:16:07.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.615" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.613" endtime="20201029 18:16:07.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.621" level="INFO">VALUE: [4.043000000000102e-05, 3.968000000000027e-05, 4.044400000000059e-05, 3.9554999999996676e-05, 3.9555000000003615e-05, 3.96660000000007e-05, 3.96660000000007e-05, 3.9903000000000854e-05, 3.9667000000000174e-05, 4.001399999999794e-05, 3.9653000000000604e-05, 3.9903000000000854e-05, 4.0458999999999634e-05, 4.0138999999994596e-05, 4.022199999999948e-05, 3.9625000000001465e-05, 4.022199999999948e-05, 3.955599999999615e-05, 4.031999999999647e-05, 3.9653000000000604e-05, 3.994400000000009e-05, 4.0445000000000064e-05, 3.9917000000000424e-05, 4.045800000000016e-05, 3.9555000000003615e-05, 3.988800000000181e-05, 4.045800000000016e-05, 4.0125000000001965e-05, 3.983400000000248e-05, 3.9917000000000424e-05, 3.9903000000000854e-05, 3.9903000000000854e-05, 3.9555000000003615e-05, 3.9889000000001285e-05, 3.9680999999999744e-05, 3.955600000000309e-05, 3.99859999999988e-05, 3.957000000000266e-05, 3.958400000000223e-05, 3.9680999999999744e-05, 4.033400000000298e-05, 4.0445000000000064e-05, 4.0097000000002825e-05, 4.0222999999998954e-05, 3.99859999999988e-05, 4.0458999999999634e-05, 3.9889000000001285e-05, 4.0346999999996136e-05, 3.9554999999996676e-05, 4.001400000000488e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.618" endtime="20201029 18:16:07.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.606" endtime="20201029 18:16:07.624"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.634" endtime="20201029 18:16:07.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.630" endtime="20201029 18:16:07.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.627" endtime="20201029 18:16:07.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.104" endtime="20201029 18:16:07.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.103" endtime="20201029 18:16:07.660"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.685" endtime="20201029 18:16:07.704"></status>
</kw>
<msg timestamp="20201029 18:16:07.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.681" endtime="20201029 18:16:07.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.708" endtime="20201029 18:16:07.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.714" endtime="20201029 18:16:07.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.674" endtime="20201029 18:16:07.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.667" endtime="20201029 18:16:07.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.738" endtime="20201029 18:16:08.083"></status>
</kw>
<msg timestamp="20201029 18:16:08.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043898083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043938736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.735" endtime="20201029 18:16:08.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043898083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043938736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.093" endtime="20201029 18:16:08.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.112" endtime="20201029 18:16:08.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.727" endtime="20201029 18:16:08.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.722" endtime="20201029 18:16:08.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.129" level="INFO">${RESULT} = [{'diff': 4.0653000000001605e-05}, {'diff': 4.0596999999996386e-05}, {'diff': 4.122200000000048e-05}, {'diff': 4.1125000000002965e-05}, {'diff': 4.1152999999995166e-05}, {'diff': 4.054199999999758e-05...</msg>
<status status="PASS" starttime="20201029 18:16:08.120" endtime="20201029 18:16:08.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.139" level="INFO">${ACCURACY} = {'diff': [4.0653000000001605e-05, 4.0596999999996386e-05, 4.122200000000048e-05, 4.1125000000002965e-05, 4.1152999999995166e-05, 4.054199999999758e-05, 4.097200000000023e-05, 4.120800000000091e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:08.131" endtime="20201029 18:16:08.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.150" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.148" endtime="20201029 18:16:08.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.156" level="INFO">VALUE: [4.0653000000001605e-05, 4.0596999999996386e-05, 4.122200000000048e-05, 4.1125000000002965e-05, 4.1152999999995166e-05, 4.054199999999758e-05, 4.097200000000023e-05, 4.120800000000091e-05, 4.0903000000001855e-05, 4.134800000000355e-05, 4.123599999999311e-05, 4.1458999999993695e-05, 4.102799999999851e-05, 4.077799999999826e-05, 4.1125000000002965e-05, 4.111200000000287e-05, 4.054199999999758e-05, 4.07780000000052e-05, 4.144399999999465e-05, 4.093000000000152e-05, 4.099999999999937e-05, 4.06660000000017e-05, 4.0959000000000134e-05, 4.101399999999894e-05, 4.0888999999995346e-05, 4.1333000000004505e-05, 4.0959000000000134e-05, 4.0888999999995346e-05, 4.099999999999937e-05, 4.1110999999996456e-05, 4.101399999999894e-05, 4.1361000000003645e-05, 4.104199999999808e-05, 4.1459000000000634e-05, 4.134800000000355e-05, 4.0903000000001855e-05, 4.099999999999937e-05, 4.0819000000004435e-05, 4.1445000000001064e-05, 4.120800000000091e-05, 4.0582999999996816e-05, 4.1445000000001064e-05, 4.124999999999962e-05, 4.0833000000004005e-05, 4.0555000000004615e-05, 4.090199999999544e-05, 4.06660000000017e-05, 4.1333000000004505e-05, 4.1124999999996026e-05, 4.1319000000004935e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.152" endtime="20201029 18:16:08.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.141" endtime="20201029 18:16:08.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.168" endtime="20201029 18:16:08.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.164" endtime="20201029 18:16:08.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.161" endtime="20201029 18:16:08.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.663" endtime="20201029 18:16:08.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.661" endtime="20201029 18:16:08.193"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.216" endtime="20201029 18:16:08.242"></status>
</kw>
<msg timestamp="20201029 18:16:08.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.213" endtime="20201029 18:16:08.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.246" endtime="20201029 18:16:08.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.252" endtime="20201029 18:16:08.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.206" endtime="20201029 18:16:08.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.200" endtime="20201029 18:16:08.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.276" endtime="20201029 18:16:08.617"></status>
</kw>
<msg timestamp="20201029 18:16:08.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048025597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048068042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.272" endtime="20201029 18:16:08.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048025597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048068042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.627" endtime="20201029 18:16:08.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.646" endtime="20201029 18:16:08.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.265" endtime="20201029 18:16:08.652"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.260" endtime="20201029 18:16:08.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.664" level="INFO">${RESULT} = [{'diff': 4.2444999999995126e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.215199999999669e-05}, {'diff': 4.236200000000412e-05}, {'diff': 4.2444999999995126e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:08.655" endtime="20201029 18:16:08.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.674" level="INFO">${ACCURACY} = {'diff': [4.2444999999995126e-05, 4.201399999999994e-05, 4.201399999999994e-05, 4.215199999999669e-05, 4.236200000000412e-05, 4.2444999999995126e-05, 4.233400000000498e-05, 4.223600000000105e-05, 4.22...</msg>
<status status="PASS" starttime="20201029 18:16:08.666" endtime="20201029 18:16:08.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.686" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.683" endtime="20201029 18:16:08.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.692" level="INFO">VALUE: [4.2444999999995126e-05, 4.201399999999994e-05, 4.201399999999994e-05, 4.215199999999669e-05, 4.236200000000412e-05, 4.2444999999995126e-05, 4.233400000000498e-05, 4.223600000000105e-05, 4.2223000000000954e-05, 4.1582999999997816e-05, 4.1568999999998246e-05, 4.1526999999999537e-05, 4.2110999999997456e-05, 4.1888999999996346e-05, 4.1568999999998246e-05, 4.245800000000216e-05, 4.224999999999368e-05, 4.1903000000002855e-05, 4.222200000000148e-05, 4.1709000000000884e-05, 4.1681000000001744e-05, 4.1903000000002855e-05, 4.161199999999643e-05, 4.245800000000216e-05, 4.155599999999815e-05, 4.200000000000037e-05, 4.2360999999997706e-05, 4.2124999999997026e-05, 4.2125000000003965e-05, 4.1917000000002425e-05, 4.173600000000055e-05, 4.2445000000002064e-05, 4.227799999999976e-05, 4.2208999999994445e-05, 4.2027000000000037e-05, 4.1790999999999356e-05, 4.1554999999998676e-05, 4.1888999999996346e-05, 4.19860000000008e-05, 4.201399999999994e-05, 4.1903000000002855e-05, 4.2110999999997456e-05, 4.152799999999901e-05, 4.1554999999998676e-05, 4.177799999999926e-05, 4.1582999999997816e-05, 4.1681000000001744e-05, 4.225000000000062e-05, 4.155600000000509e-05, 4.215200000000363e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.688" endtime="20201029 18:16:08.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.676" endtime="20201029 18:16:08.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.707" endtime="20201029 18:16:08.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.700" endtime="20201029 18:16:08.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.698" endtime="20201029 18:16:08.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.195" endtime="20201029 18:16:08.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.194" endtime="20201029 18:16:08.732"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.755" endtime="20201029 18:16:08.775"></status>
</kw>
<msg timestamp="20201029 18:16:08.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.752" endtime="20201029 18:16:08.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.778" endtime="20201029 18:16:08.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.785" endtime="20201029 18:16:08.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.744" endtime="20201029 18:16:08.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.738" endtime="20201029 18:16:08.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.808" endtime="20201029 18:16:09.149"></status>
</kw>
<msg timestamp="20201029 18:16:09.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.805" endtime="20201029 18:16:09.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042480431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.159" endtime="20201029 18:16:09.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.178" endtime="20201029 18:16:09.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.798" endtime="20201029 18:16:09.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.793" endtime="20201029 18:16:09.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.195" level="INFO">${RESULT} = [{'diff': 4.2554999999999676e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.2888999999997346e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.3110999999998456e-05}, {'diff': 4.347200000000273e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:09.186" endtime="20201029 18:16:09.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.206" level="INFO">${ACCURACY} = {'diff': [4.2554999999999676e-05, 4.279199999999983e-05, 4.2888999999997346e-05, 4.276400000000069e-05, 4.3110999999998456e-05, 4.347200000000273e-05, 4.351299999999503e-05, 4.3431000000003495e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:09.197" endtime="20201029 18:16:09.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.217" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.215" endtime="20201029 18:16:09.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.223" level="INFO">VALUE: [4.2554999999999676e-05, 4.279199999999983e-05, 4.2888999999997346e-05, 4.276400000000069e-05, 4.3110999999998456e-05, 4.347200000000273e-05, 4.351299999999503e-05, 4.3431000000003495e-05, 4.3111000000005395e-05, 4.275000000000112e-05, 4.255599999999915e-05, 4.3416999999996986e-05, 4.3223000000001954e-05, 4.3445000000003064e-05, 4.333399999999904e-05, 4.255599999999915e-05, 4.266599999999676e-05, 4.344400000000359e-05, 4.266599999999676e-05, 4.3124999999998026e-05, 4.3068999999999746e-05, 4.3013999999994e-05, 4.276399999999375e-05, 4.302800000000051e-05, 4.277800000000026e-05, 4.2723000000001454e-05, 4.2694999999995376e-05, 4.277800000000026e-05, 4.3110999999998456e-05, 4.3459000000002634e-05, 4.273600000000155e-05, 4.2681000000002745e-05, 4.29860000000018e-05, 4.297200000000223e-05, 4.2902999999996916e-05, 4.2681000000002745e-05, 4.333399999999904e-05, 4.2888999999997346e-05, 4.255599999999915e-05, 4.301299999999453e-05, 4.2791000000000357e-05, 4.3332999999999566e-05, 4.323599999999511e-05, 4.3402999999997416e-05, 4.2889000000004285e-05, 4.274999999999418e-05, 4.2652999999996666e-05, 4.3346999999999136e-05, 4.2667000000003175e-05, 4.294399999999615e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.219" endtime="20201029 18:16:09.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.208" endtime="20201029 18:16:09.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.235" endtime="20201029 18:16:09.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.231" endtime="20201029 18:16:09.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.228" endtime="20201029 18:16:09.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.734" endtime="20201029 18:16:09.260"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.733" endtime="20201029 18:16:09.260"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.284" endtime="20201029 18:16:09.303"></status>
</kw>
<msg timestamp="20201029 18:16:09.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.280" endtime="20201029 18:16:09.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.307" endtime="20201029 18:16:09.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.313" endtime="20201029 18:16:09.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.273" endtime="20201029 18:16:09.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.267" endtime="20201029 18:16:09.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.337" endtime="20201029 18:16:09.682"></status>
</kw>
<msg timestamp="20201029 18:16:09.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041949653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.334" endtime="20201029 18:16:09.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041949653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.692" endtime="20201029 18:16:09.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.711" endtime="20201029 18:16:09.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.326" endtime="20201029 18:16:09.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.321" endtime="20201029 18:16:09.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.729" level="INFO">${RESULT} = [{'diff': 4.3667000000004175e-05}, {'diff': 4.354200000000058e-05}, {'diff': 4.4458999999996696e-05}, {'diff': 4.356999999999972e-05}, {'diff': 4.355600000000015e-05}, {'diff': 4.4347000000000136e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:09.720" endtime="20201029 18:16:09.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.741" level="INFO">${ACCURACY} = {'diff': [4.3667000000004175e-05, 4.354200000000058e-05, 4.4458999999996696e-05, 4.356999999999972e-05, 4.355600000000015e-05, 4.4347000000000136e-05, 4.3569000000000246e-05, 4.388799999999887e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:09.732" endtime="20201029 18:16:09.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.753" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.750" endtime="20201029 18:16:09.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.758" level="INFO">VALUE: [4.3667000000004175e-05, 4.354200000000058e-05, 4.4458999999996696e-05, 4.356999999999972e-05, 4.355600000000015e-05, 4.4347000000000136e-05, 4.3569000000000246e-05, 4.388799999999887e-05, 4.379100000000136e-05, 4.441599999999851e-05, 4.390200000000538e-05, 4.39860000000028e-05, 4.4180999999997306e-05, 4.372200000000298e-05, 4.3638999999998096e-05, 4.400000000000237e-05, 4.3555000000000677e-05, 4.4110999999999456e-05, 4.402799999999457e-05, 4.420799999999697e-05, 4.4333000000000566e-05, 4.4487000000002774e-05, 4.4110999999999456e-05, 4.373600000000255e-05, 4.4096999999999886e-05, 4.384799999999911e-05, 4.3680999999996806e-05, 4.3666999999997236e-05, 4.400000000000237e-05, 4.411199999999893e-05, 4.355600000000015e-05, 4.444400000000459e-05, 4.36660000000047e-05, 4.423600000000305e-05, 4.3805000000000927e-05, 4.3888999999998346e-05, 4.444400000000459e-05, 4.4110999999999456e-05, 4.424999999999568e-05, 4.377800000000126e-05, 4.420800000000391e-05, 4.3666999999997236e-05, 4.4333000000000566e-05, 4.423599999999611e-05, 4.400000000000237e-05, 4.379200000000083e-05, 4.4459000000003635e-05, 4.3666999999997236e-05, 4.384799999999911e-05, 4.38060000000004e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.755" endtime="20201029 18:16:09.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.743" endtime="20201029 18:16:09.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.771" endtime="20201029 18:16:09.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.767" endtime="20201029 18:16:09.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.764" endtime="20201029 18:16:09.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.263" endtime="20201029 18:16:09.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.261" endtime="20201029 18:16:09.796"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.820" endtime="20201029 18:16:09.840"></status>
</kw>
<msg timestamp="20201029 18:16:09.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.816" endtime="20201029 18:16:09.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.844" endtime="20201029 18:16:09.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.850" endtime="20201029 18:16:09.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.809" endtime="20201029 18:16:09.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.803" endtime="20201029 18:16:09.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.874" endtime="20201029 18:16:10.220"></status>
</kw>
<msg timestamp="20201029 18:16:10.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042084819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042130139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.871" endtime="20201029 18:16:10.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042084819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042130139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.229" endtime="20201029 18:16:10.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.249" endtime="20201029 18:16:10.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.863" endtime="20201029 18:16:10.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.859" endtime="20201029 18:16:10.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.266" level="INFO">${RESULT} = [{'diff': 4.531999999999453e-05}, {'diff': 4.534799999999367e-05}, {'diff': 4.508400000000079e-05}, {'diff': 4.5208999999997446e-05}, {'diff': 4.530599999999496e-05}, {'diff': 4.455600000000115e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:10.257" endtime="20201029 18:16:10.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.276" level="INFO">${ACCURACY} = {'diff': [4.531999999999453e-05, 4.534799999999367e-05, 4.508400000000079e-05, 4.5208999999997446e-05, 4.530599999999496e-05, 4.455600000000115e-05, 4.4680999999997806e-05, 4.4987000000003274e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 18:16:10.268" endtime="20201029 18:16:10.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.287" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.285" endtime="20201029 18:16:10.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.293" level="INFO">VALUE: [4.531999999999453e-05, 4.534799999999367e-05, 4.508400000000079e-05, 4.5208999999997446e-05, 4.530599999999496e-05, 4.455600000000115e-05, 4.4680999999997806e-05, 4.4987000000003274e-05, 4.479100000000236e-05, 4.495799999999772e-05, 4.477700000000279e-05, 4.490199999999944e-05, 4.523599999999711e-05, 4.456899999999431e-05, 4.5347000000001136e-05, 4.5319000000001997e-05, 4.479200000000183e-05, 4.501400000000294e-05, 4.4861000000000206e-05, 4.5361000000000706e-05, 4.454200000000158e-05, 4.4610999999999956e-05, 4.4694999999997376e-05, 4.501400000000294e-05, 4.4888999999999346e-05, 4.5111000000000456e-05, 4.5236999999996585e-05, 4.504100000000261e-05, 4.458299999999388e-05, 4.5013999999996e-05, 4.524999999999668e-05, 4.523599999999711e-05, 4.477699999999585e-05, 4.488799999999987e-05, 4.5111000000000456e-05, 4.5319000000001997e-05, 4.545799999999822e-05, 4.502800000000251e-05, 4.4888999999999346e-05, 4.523599999999711e-05, 4.522200000000448e-05, 4.4555000000001677e-05, 4.4666999999998236e-05, 4.455600000000115e-05, 4.523599999999711e-05, 4.526399999999625e-05, 4.473600000000355e-05, 4.4888999999999346e-05, 4.5375000000000276e-05, 4.455600000000115e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.289" endtime="20201029 18:16:10.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.278" endtime="20201029 18:16:10.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.305" endtime="20201029 18:16:10.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.301" endtime="20201029 18:16:10.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.298" endtime="20201029 18:16:10.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.799" endtime="20201029 18:16:10.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.797" endtime="20201029 18:16:10.330"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.354" endtime="20201029 18:16:10.375"></status>
</kw>
<msg timestamp="20201029 18:16:10.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.350" endtime="20201029 18:16:10.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.379" endtime="20201029 18:16:10.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.385" endtime="20201029 18:16:10.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.343" endtime="20201029 18:16:10.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.337" endtime="20201029 18:16:10.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.409" endtime="20201029 18:16:10.751"></status>
</kw>
<msg timestamp="20201029 18:16:10.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043919361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.405" endtime="20201029 18:16:10.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043919361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.761" endtime="20201029 18:16:10.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.781" endtime="20201029 18:16:10.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.398" endtime="20201029 18:16:10.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.393" endtime="20201029 18:16:10.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.798" level="INFO">${RESULT} = [{'diff': 4.58469999999947e-05}, {'diff': 4.554100000000311e-05}, {'diff': 4.552799999999607e-05}, {'diff': 4.643000000000008e-05}, {'diff': 4.6333000000002567e-05}, {'diff': 4.5709000000004885e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:10.789" endtime="20201029 18:16:10.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.808" level="INFO">${ACCURACY} = {'diff': [4.58469999999947e-05, 4.554100000000311e-05, 4.552799999999607e-05, 4.643000000000008e-05, 4.6333000000002567e-05, 4.5709000000004885e-05, 4.572199999999804e-05, 4.645799999999922e-05, 4.569...</msg>
<status status="PASS" starttime="20201029 18:16:10.800" endtime="20201029 18:16:10.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.819" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.817" endtime="20201029 18:16:10.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.825" level="INFO">VALUE: [4.58469999999947e-05, 4.554100000000311e-05, 4.552799999999607e-05, 4.643000000000008e-05, 4.6333000000002567e-05, 4.5709000000004885e-05, 4.572199999999804e-05, 4.645799999999922e-05, 4.5694999999998376e-05, 4.576399999999675e-05, 4.556999999999478e-05, 4.557000000000172e-05, 4.622200000000548e-05, 4.600000000000437e-05, 4.6430999999999556e-05, 4.5680999999998806e-05, 4.577799999999632e-05, 4.591600000000001e-05, 4.576399999999675e-05, 4.6333000000002567e-05, 4.566599999999976e-05, 4.6125000000001026e-05, 4.5902999999999916e-05, 4.577700000000379e-05, 4.622200000000548e-05, 4.5930999999999056e-05, 4.602799999999657e-05, 4.5889000000000346e-05, 4.5652999999999666e-05, 4.623599999999811e-05, 4.599999999999743e-05, 4.5694999999998376e-05, 4.555599999999521e-05, 4.5902999999999916e-05, 4.649999999999793e-05, 4.597199999999829e-05, 4.623599999999811e-05, 4.6111000000001456e-05, 4.6430999999999556e-05, 4.6236999999997586e-05, 4.554200000000258e-05, 4.567999999999933e-05, 4.576299999999728e-05, 4.623599999999811e-05, 4.63469999999952e-05, 4.6013999999997e-05, 4.58469999999947e-05, 4.577800000000326e-05, 4.5889000000000346e-05, 4.63469999999952e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.821" endtime="20201029 18:16:10.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.810" endtime="20201029 18:16:10.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.839" endtime="20201029 18:16:10.861"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.833" endtime="20201029 18:16:10.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.830" endtime="20201029 18:16:10.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.333" endtime="20201029 18:16:10.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.331" endtime="20201029 18:16:10.864"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.887" endtime="20201029 18:16:10.908"></status>
</kw>
<msg timestamp="20201029 18:16:10.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.884" endtime="20201029 18:16:10.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.911" endtime="20201029 18:16:10.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.918" endtime="20201029 18:16:10.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.877" endtime="20201029 18:16:10.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.871" endtime="20201029 18:16:10.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.942" endtime="20201029 18:16:11.283"></status>
</kw>
<msg timestamp="20201029 18:16:11.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042504875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.938" endtime="20201029 18:16:11.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042504875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.293" endtime="20201029 18:16:11.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.312" endtime="20201029 18:16:11.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.931" endtime="20201029 18:16:11.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.926" endtime="20201029 18:16:11.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.329" level="INFO">${RESULT} = [{'diff': 4.700000000000537e-05}, {'diff': 4.6903000000000916e-05}, {'diff': 4.6903000000000916e-05}, {'diff': 4.699999999999843e-05}, {'diff': 4.6667000000000236e-05}, {'diff': 4.680599999999646e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:11.320" endtime="20201029 18:16:11.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.340" level="INFO">${ACCURACY} = {'diff': [4.700000000000537e-05, 4.6903000000000916e-05, 4.6903000000000916e-05, 4.699999999999843e-05, 4.6667000000000236e-05, 4.680599999999646e-05, 4.701400000000494e-05, 4.7013999999998e-05, 4.744...</msg>
<status status="PASS" starttime="20201029 18:16:11.331" endtime="20201029 18:16:11.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.351" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.349" endtime="20201029 18:16:11.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.357" level="INFO">VALUE: [4.700000000000537e-05, 4.6903000000000916e-05, 4.6903000000000916e-05, 4.699999999999843e-05, 4.6667000000000236e-05, 4.680599999999646e-05, 4.701400000000494e-05, 4.7013999999998e-05, 4.7445000000000126e-05, 4.665299999999373e-05, 4.749999999999893e-05, 4.6667000000000236e-05, 4.73469999999962e-05, 4.705599999999671e-05, 4.700000000000537e-05, 4.679099999999742e-05, 4.731899999999706e-05, 4.668000000000033e-05, 4.655499999999674e-05, 4.6903000000000916e-05, 4.7111000000002456e-05, 4.745800000000022e-05, 4.7125000000002026e-05, 4.688899999999441e-05, 4.659800000000186e-05, 4.712499999999509e-05, 4.7097000000002887e-05, 4.679199999999689e-05, 4.655600000000315e-05, 4.655599999999621e-05, 4.655599999999621e-05, 4.700000000000537e-05, 4.690200000000144e-05, 4.676299999999828e-05, 4.729199999999739e-05, 4.720799999999997e-05, 4.6889000000001346e-05, 4.697199999999929e-05, 4.655500000000368e-05, 4.6639000000001096e-05, 4.666600000000076e-05, 4.747199999999979e-05, 4.747199999999979e-05, 4.6889000000001346e-05, 4.679200000000383e-05, 4.731899999999706e-05, 4.745800000000022e-05, 4.655600000000315e-05, 4.7431000000000556e-05, 4.677799999999732e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.354" endtime="20201029 18:16:11.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.342" endtime="20201029 18:16:11.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.369" endtime="20201029 18:16:11.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.365" endtime="20201029 18:16:11.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.362" endtime="20201029 18:16:11.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.866" endtime="20201029 18:16:11.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.865" endtime="20201029 18:16:11.394"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.418" endtime="20201029 18:16:11.438"></status>
</kw>
<msg timestamp="20201029 18:16:11.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.414" endtime="20201029 18:16:11.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.442" endtime="20201029 18:16:11.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.448" endtime="20201029 18:16:11.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.407" endtime="20201029 18:16:11.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.401" endtime="20201029 18:16:11.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.472" endtime="20201029 18:16:11.819"></status>
</kw>
<msg timestamp="20201029 18:16:11.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042168847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042217167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.469" endtime="20201029 18:16:11.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042168847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042217167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.828" endtime="20201029 18:16:11.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.848" endtime="20201029 18:16:11.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.461" endtime="20201029 18:16:11.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.457" endtime="20201029 18:16:11.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.865" level="INFO">${RESULT} = [{'diff': 4.831999999999753e-05}, {'diff': 4.8209000000000446e-05}, {'diff': 4.8459000000000696e-05}, {'diff': 4.8361000000003707e-05}, {'diff': 4.8209000000000446e-05}, {'diff': 4.799999999999943e-05...</msg>
<status status="PASS" starttime="20201029 18:16:11.856" endtime="20201029 18:16:11.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.877" level="INFO">${ACCURACY} = {'diff': [4.831999999999753e-05, 4.8209000000000446e-05, 4.8459000000000696e-05, 4.8361000000003707e-05, 4.8209000000000446e-05, 4.799999999999943e-05, 4.822200000000054e-05, 4.776399999999875e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:11.867" endtime="20201029 18:16:11.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.888" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.886" endtime="20201029 18:16:11.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.893" level="INFO">VALUE: [4.831999999999753e-05, 4.8209000000000446e-05, 4.8459000000000696e-05, 4.8361000000003707e-05, 4.8209000000000446e-05, 4.799999999999943e-05, 4.822200000000054e-05, 4.776399999999875e-05, 4.844400000000165e-05, 4.7611000000002957e-05, 4.847200000000079e-05, 4.770800000000047e-05, 4.799999999999943e-05, 4.779199999999789e-05, 4.7722999999999516e-05, 4.8111000000003457e-05, 4.78060000000044e-05, 4.8445000000001126e-05, 4.7681000000000806e-05, 4.8473000000000266e-05, 4.765299999999473e-05, 4.7695000000000376e-05, 4.7639000000002096e-05, 4.8125000000003026e-05, 4.755600000000415e-05, 4.801299999999953e-05, 4.847200000000079e-05, 4.754099999999817e-05, 4.847199999999385e-05, 4.755500000000468e-05, 4.809699999999695e-05, 4.804200000000508e-05, 4.756900000000425e-05, 4.8111000000003457e-05, 4.8125000000003026e-05, 4.823600000000011e-05, 4.798599999999986e-05, 4.7889000000002346e-05, 4.750000000000587e-05, 4.8125000000003026e-05, 4.8209000000000446e-05, 4.8111000000003457e-05, 4.757000000000372e-05, 4.815200000000269e-05, 4.809800000000336e-05, 4.8237000000006525e-05, 4.83339999999971e-05, 4.801299999999953e-05, 4.755499999999774e-05, 4.811099999999652e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.890" endtime="20201029 18:16:11.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.879" endtime="20201029 18:16:11.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.912" endtime="20201029 18:16:11.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.907" endtime="20201029 18:16:11.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.905" endtime="20201029 18:16:11.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.397" endtime="20201029 18:16:11.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.395" endtime="20201029 18:16:11.937"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.960" endtime="20201029 18:16:11.980"></status>
</kw>
<msg timestamp="20201029 18:16:11.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.957" endtime="20201029 18:16:11.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.984" endtime="20201029 18:16:11.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.990" endtime="20201029 18:16:11.994"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.949" endtime="20201029 18:16:11.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.943" endtime="20201029 18:16:11.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.014" endtime="20201029 18:16:12.358"></status>
</kw>
<msg timestamp="20201029 18:16:12.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0419145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041963514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:12.011" endtime="20201029 18:16:12.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0419145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041963514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:12.368" endtime="20201029 18:16:12.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.387" endtime="20201029 18:16:12.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.003" endtime="20201029 18:16:12.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.998" endtime="20201029 18:16:12.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.404" level="INFO">${RESULT} = [{'diff': 4.9014e-05}, {'diff': 4.941699999999605e-05}, {'diff': 4.925000000000068e-05}, {'diff': 4.879199999999889e-05}, {'diff': 4.879199999999889e-05}, {'diff': 4.904099999999967e-05}, {'diff': 4.8...</msg>
<status status="PASS" starttime="20201029 18:16:12.395" endtime="20201029 18:16:12.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.414" level="INFO">${ACCURACY} = {'diff': [4.9014e-05, 4.941699999999605e-05, 4.925000000000068e-05, 4.879199999999889e-05, 4.879199999999889e-05, 4.904099999999967e-05, 4.8875000000003777e-05, 4.879199999999889e-05, 4.92230000000010...</msg>
<status status="PASS" starttime="20201029 18:16:12.406" endtime="20201029 18:16:12.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.424" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.422" endtime="20201029 18:16:12.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.430" level="INFO">VALUE: [4.9014e-05, 4.941699999999605e-05, 4.925000000000068e-05, 4.879199999999889e-05, 4.879199999999889e-05, 4.904099999999967e-05, 4.8875000000003777e-05, 4.879199999999889e-05, 4.9223000000001016e-05, 4.9151999999996754e-05, 4.9445000000002126e-05, 4.900000000000043e-05, 4.898600000000086e-05, 4.906900000000575e-05, 4.870800000000147e-05, 4.8917000000002486e-05, 4.9014e-05, 4.9443999999995714e-05, 4.9014e-05, 4.933299999999863e-05, 4.948599999999442e-05, 4.861199999999649e-05, 4.877799999999932e-05, 4.945800000000222e-05, 4.854200000000558e-05, 4.937499999999734e-05, 4.911099999999752e-05, 4.879199999999889e-05, 4.8943999999995214e-05, 4.897200000000129e-05, 4.947200000000179e-05, 4.933299999999863e-05, 4.8887999999996934e-05, 4.900000000000043e-05, 4.877699999999985e-05, 4.879099999999942e-05, 4.887499999999684e-05, 4.923600000000111e-05, 4.8707999999994533e-05, 4.8903000000002916e-05, 4.944400000000265e-05, 4.855499999999874e-05, 4.888899999999641e-05, 4.862499999999659e-05, 4.912499999999709e-05, 4.86669999999953e-05, 4.9125000000004027e-05, 4.898600000000086e-05, 4.900000000000043e-05, 4.9459000000001696e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.427" endtime="20201029 18:16:12.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.415" endtime="20201029 18:16:12.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.443" endtime="20201029 18:16:12.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.438" endtime="20201029 18:16:12.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.436" endtime="20201029 18:16:12.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.939" endtime="20201029 18:16:12.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.938" endtime="20201029 18:16:12.468"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.491" endtime="20201029 18:16:12.513"></status>
</kw>
<msg timestamp="20201029 18:16:12.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.488" endtime="20201029 18:16:12.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.516" endtime="20201029 18:16:12.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.522" endtime="20201029 18:16:12.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.480" endtime="20201029 18:16:12.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.475" endtime="20201029 18:16:12.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.546" endtime="20201029 18:16:12.888"></status>
</kw>
<msg timestamp="20201029 18:16:12.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043633444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043683222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.543" endtime="20201029 18:16:12.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043633444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043683222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.898" endtime="20201029 18:16:12.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.917" endtime="20201029 18:16:12.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.536" endtime="20201029 18:16:12.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.531" endtime="20201029 18:16:12.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.935" level="INFO">${RESULT} = [{'diff': 4.977800000000032e-05}, {'diff': 4.981899999999956e-05}, {'diff': 4.954100000000017e-05}, {'diff': 5.037500000000528e-05}, {'diff': 5.023600000000211e-05}, {'diff': 4.956899999999931e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:12.926" endtime="20201029 18:16:12.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.944" level="INFO">${ACCURACY} = {'diff': [4.977800000000032e-05, 4.981899999999956e-05, 4.954100000000017e-05, 5.037500000000528e-05, 5.023600000000211e-05, 4.956899999999931e-05, 5.022200000000254e-05, 4.9943999999996214e-05, 5.034...</msg>
<status status="PASS" starttime="20201029 18:16:12.937" endtime="20201029 18:16:12.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.955" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.953" endtime="20201029 18:16:12.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.961" level="INFO">VALUE: [4.977800000000032e-05, 4.981899999999956e-05, 4.954100000000017e-05, 5.037500000000528e-05, 5.023600000000211e-05, 4.956899999999931e-05, 5.022200000000254e-05, 4.9943999999996214e-05, 5.03469999999992e-05, 4.9681000000002806e-05, 5.031999999999953e-05, 5.03339999999991e-05, 4.9681000000002806e-05, 4.955599999999921e-05, 5.022299999999508e-05, 5.022299999999508e-05, 4.956999999999878e-05, 4.988800000000487e-05, 4.9901999999997504e-05, 5.034700000000614e-05, 4.956899999999931e-05, 4.990200000000444e-05, 5.045800000000322e-05, 4.958299999999888e-05, 4.9679999999996394e-05, 5.0443999999996714e-05, 5.002800000000057e-05, 4.954199999999964e-05, 5.023600000000211e-05, 4.959800000000486e-05, 5.03469999999992e-05, 5.0487000000001836e-05, 4.9917000000003486e-05, 4.979199999999989e-05, 5.034799999999867e-05, 5.03339999999991e-05, 4.9681000000002806e-05, 5.040200000000494e-05, 5.000000000000143e-05, 4.956899999999931e-05, 5.0443999999996714e-05, 4.9887999999997934e-05, 4.9679999999996394e-05, 4.988899999999741e-05, 4.954100000000017e-05, 4.990299999999698e-05, 5.033299999999963e-05, 4.972200000000204e-05, 4.9667000000003236e-05, 5.03469999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.958" endtime="20201029 18:16:12.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.946" endtime="20201029 18:16:12.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.975" endtime="20201029 18:16:12.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.969" endtime="20201029 18:16:12.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.967" endtime="20201029 18:16:12.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.470" endtime="20201029 18:16:13.000"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.469" endtime="20201029 18:16:13.001"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.027" endtime="20201029 18:16:13.047"></status>
</kw>
<msg timestamp="20201029 18:16:13.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.023" endtime="20201029 18:16:13.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.051" endtime="20201029 18:16:13.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.057" endtime="20201029 18:16:13.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.016" endtime="20201029 18:16:13.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.009" endtime="20201029 18:16:13.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.081" endtime="20201029 18:16:13.422"></status>
</kw>
<msg timestamp="20201029 18:16:13.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044784681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.078" endtime="20201029 18:16:13.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044784681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044835653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.431" endtime="20201029 18:16:13.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.450" endtime="20201029 18:16:13.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.070" endtime="20201029 18:16:13.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.066" endtime="20201029 18:16:13.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.468" level="INFO">${RESULT} = [{'diff': 5.097200000000329e-05}, {'diff': 5.1459000000003696e-05}, {'diff': 5.099999999999549e-05}, {'diff': 5.1137999999999184e-05}, {'diff': 5.111199999999899e-05}, {'diff': 5.126400000000225e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:13.459" endtime="20201029 18:16:13.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.483" level="INFO">${ACCURACY} = {'diff': [5.097200000000329e-05, 5.1459000000003696e-05, 5.099999999999549e-05, 5.1137999999999184e-05, 5.111199999999899e-05, 5.126400000000225e-05, 5.079100000000142e-05, 5.144400000000465e-05, 5.09...</msg>
<status status="PASS" starttime="20201029 18:16:13.470" endtime="20201029 18:16:13.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.494" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.492" endtime="20201029 18:16:13.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.500" level="INFO">VALUE: [5.097200000000329e-05, 5.1459000000003696e-05, 5.099999999999549e-05, 5.1137999999999184e-05, 5.111199999999899e-05, 5.126400000000225e-05, 5.079100000000142e-05, 5.144400000000465e-05, 5.099999999999549e-05, 5.13340000000001e-05, 5.122200000000354e-05, 5.108300000000038e-05, 5.1457999999997284e-05, 5.056900000000031e-05, 5.055600000000021e-05, 5.058399999999935e-05, 5.101399999999506e-05, 5.091699999999755e-05, 5.055600000000021e-05, 5.050000000000193e-05, 5.144499999999719e-05, 5.134799999999967e-05, 5.111099999999952e-05, 5.06669999999973e-05, 5.13340000000001e-05, 5.0915999999998074e-05, 5.072200000000304e-05, 5.054100000000117e-05, 5.133300000000063e-05, 5.138899999999891e-05, 5.126399999999531e-05, 5.111099999999952e-05, 5.068000000000433e-05, 5.1249999999995743e-05, 5.0917000000004486e-05, 5.054200000000064e-05, 5.123600000000311e-05, 5.077800000000132e-05, 5.1487000000002836e-05, 5.075000000000218e-05, 5.091699999999755e-05, 5.091600000000501e-05, 5.1223000000003016e-05, 5.058299999999988e-05, 5.115299999999823e-05, 5.056900000000031e-05, 5.1443999999997714e-05, 5.054100000000117e-05, 5.112499999999909e-05, 5.133300000000063e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.497" endtime="20201029 18:16:13.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.485" endtime="20201029 18:16:13.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.512" endtime="20201029 18:16:13.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.508" endtime="20201029 18:16:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.505" endtime="20201029 18:16:13.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.003" endtime="20201029 18:16:13.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.002" endtime="20201029 18:16:13.537"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.560" endtime="20201029 18:16:13.580"></status>
</kw>
<msg timestamp="20201029 18:16:13.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.557" endtime="20201029 18:16:13.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.584" endtime="20201029 18:16:13.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.590" endtime="20201029 18:16:13.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.550" endtime="20201029 18:16:13.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.544" endtime="20201029 18:16:13.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.614" endtime="20201029 18:16:13.962"></status>
</kw>
<msg timestamp="20201029 18:16:13.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041688153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.611" endtime="20201029 18:16:13.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041688153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041740264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.972" endtime="20201029 18:16:13.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.991" endtime="20201029 18:16:13.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.603" endtime="20201029 18:16:13.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.599" endtime="20201029 18:16:13.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.009" level="INFO">${RESULT} = [{'diff': 5.211100000000052e-05}, {'diff': 5.2221999999997604e-05}, {'diff': 5.1999999999996493e-05}, {'diff': 5.2151999999999754e-05}, {'diff': 5.245899999999776e-05}, {'diff': 5.2249999999996743e-05...</msg>
<status status="PASS" starttime="20201029 18:16:14.000" endtime="20201029 18:16:14.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.020" level="INFO">${ACCURACY} = {'diff': [5.211100000000052e-05, 5.2221999999997604e-05, 5.1999999999996493e-05, 5.2151999999999754e-05, 5.245899999999776e-05, 5.2249999999996743e-05, 5.165299999999873e-05, 5.190299999999898e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:14.011" endtime="20201029 18:16:14.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.031" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.029" endtime="20201029 18:16:14.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.037" level="INFO">VALUE: [5.211100000000052e-05, 5.2221999999997604e-05, 5.1999999999996493e-05, 5.2151999999999754e-05, 5.245899999999776e-05, 5.2249999999996743e-05, 5.165299999999873e-05, 5.190299999999898e-05, 5.155600000000121e-05, 5.212500000000009e-05, 5.209700000000095e-05, 5.156900000000131e-05, 5.211100000000052e-05, 5.2207999999998034e-05, 5.155500000000174e-05, 5.16669999999983e-05, 5.223600000000411e-05, 5.23470000000012e-05, 5.179200000000189e-05, 5.16669999999983e-05, 5.1999999999996493e-05, 5.188899999999941e-05, 5.245899999999776e-05, 5.156999999999384e-05, 5.188899999999941e-05, 5.188899999999941e-05, 5.1681000000004806e-05, 5.1693999999997964e-05, 5.200000000000343e-05, 5.179100000000242e-05, 5.180500000000199e-05, 5.23470000000012e-05, 5.204200000000214e-05, 5.1985999999996924e-05, 5.156900000000131e-05, 5.212500000000009e-05, 5.2471999999997854e-05, 5.188899999999941e-05, 5.2443999999998714e-05, 5.2443999999998714e-05, 5.225000000000368e-05, 5.230599999999502e-05, 5.2014000000003e-05, 5.188899999999941e-05, 5.168099999999787e-05, 5.151399999999556e-05, 5.244499999999819e-05, 5.1959000000004196e-05, 5.165299999999873e-05, 5.1651999999999254e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.034" endtime="20201029 18:16:14.038"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.022" endtime="20201029 18:16:14.040"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.049" endtime="20201029 18:16:14.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.045" endtime="20201029 18:16:14.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.042" endtime="20201029 18:16:14.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.539" endtime="20201029 18:16:14.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.538" endtime="20201029 18:16:14.075"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.098" endtime="20201029 18:16:14.118"></status>
</kw>
<msg timestamp="20201029 18:16:14.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.094" endtime="20201029 18:16:14.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.122" endtime="20201029 18:16:14.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.128" endtime="20201029 18:16:14.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.087" endtime="20201029 18:16:14.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.081" endtime="20201029 18:16:14.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.152" endtime="20201029 18:16:14.496"></status>
</kw>
<msg timestamp="20201029 18:16:14.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042047764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.148" endtime="20201029 18:16:14.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041994986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042047764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.507" endtime="20201029 18:16:14.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.526" endtime="20201029 18:16:14.530"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.141" endtime="20201029 18:16:14.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.136" endtime="20201029 18:16:14.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.544" level="INFO">${RESULT} = [{'diff': 5.277800000000332e-05}, {'diff': 5.2681000000005807e-05}, {'diff': 5.280599999999552e-05}, {'diff': 5.2985999999997924e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.329099999999698e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:14.535" endtime="20201029 18:16:14.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.553" level="INFO">${ACCURACY} = {'diff': [5.277800000000332e-05, 5.2681000000005807e-05, 5.280599999999552e-05, 5.2985999999997924e-05, 5.287500000000084e-05, 5.329099999999698e-05, 5.257000000000178e-05, 5.334800000000167e-05, 5.30...</msg>
<status status="PASS" starttime="20201029 18:16:14.546" endtime="20201029 18:16:14.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.564" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.562" endtime="20201029 18:16:14.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.570" level="INFO">VALUE: [5.277800000000332e-05, 5.2681000000005807e-05, 5.280599999999552e-05, 5.2985999999997924e-05, 5.287500000000084e-05, 5.329099999999698e-05, 5.257000000000178e-05, 5.334800000000167e-05, 5.308400000000185e-05, 5.279100000000342e-05, 5.329200000000339e-05, 5.2735999999997674e-05, 5.33470000000022e-05, 5.258300000000188e-05, 5.3221999999998604e-05, 5.345800000000622e-05, 5.336100000000177e-05, 5.279199999999595e-05, 5.255500000000274e-05, 5.256900000000231e-05, 5.311100000000152e-05, 5.313900000000066e-05, 5.25419999999957e-05, 5.286100000000127e-05, 5.313900000000066e-05, 5.329199999999645e-05, 5.284800000000117e-05, 5.309800000000142e-05, 5.279199999999595e-05, 5.312500000000109e-05, 5.336099999999483e-05, 5.331899999999612e-05, 5.276400000000375e-05, 5.272200000000504e-05, 5.3221999999998604e-05, 5.333299999999569e-05, 5.288899999999347e-05, 5.33470000000022e-05, 5.276400000000375e-05, 5.312500000000109e-05, 5.2709000000004946e-05, 5.343099999999962e-05, 5.265299999999973e-05, 5.279199999999595e-05, 5.312500000000109e-05, 5.33619999999943e-05, 5.288900000000041e-05, 5.33340000000021e-05, 5.279100000000342e-05, 5.2513999999996563e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.567" endtime="20201029 18:16:14.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.555" endtime="20201029 18:16:14.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.582" endtime="20201029 18:16:14.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.578" endtime="20201029 18:16:14.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.576" endtime="20201029 18:16:14.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.077" endtime="20201029 18:16:14.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.076" endtime="20201029 18:16:14.608"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.631" endtime="20201029 18:16:14.653"></status>
</kw>
<msg timestamp="20201029 18:16:14.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.628" endtime="20201029 18:16:14.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.657" endtime="20201029 18:16:14.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.663" endtime="20201029 18:16:14.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.620" endtime="20201029 18:16:14.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.614" endtime="20201029 18:16:14.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.687" endtime="20201029 18:16:15.029"></status>
</kw>
<msg timestamp="20201029 18:16:15.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.683" endtime="20201029 18:16:15.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043538514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043592986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.038" endtime="20201029 18:16:15.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.057" endtime="20201029 18:16:15.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.676" endtime="20201029 18:16:15.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.671" endtime="20201029 18:16:15.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.075" level="INFO">${RESULT} = [{'diff': 5.4471999999999854e-05}, {'diff': 5.438900000000191e-05}, {'diff': 5.379099999999748e-05}, {'diff': 5.35549999999968e-05}, {'diff': 5.4458000000000284e-05}, {'diff': 5.3777999999997383e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:15.066" endtime="20201029 18:16:15.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.085" level="INFO">${ACCURACY} = {'diff': [5.4471999999999854e-05, 5.438900000000191e-05, 5.379099999999748e-05, 5.35549999999968e-05, 5.4458000000000284e-05, 5.3777999999997383e-05, 5.379199999999695e-05, 5.409700000000295e-05, 5.42...</msg>
<status status="PASS" starttime="20201029 18:16:15.077" endtime="20201029 18:16:15.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.096" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.093" endtime="20201029 18:16:15.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.101" level="INFO">VALUE: [5.4471999999999854e-05, 5.438900000000191e-05, 5.379099999999748e-05, 5.35549999999968e-05, 5.4458000000000284e-05, 5.3777999999997383e-05, 5.379199999999695e-05, 5.409700000000295e-05, 5.4221999999999604e-05, 5.38470000000027e-05, 5.4402000000002004e-05, 5.369499999999944e-05, 5.444500000000019e-05, 5.436100000000277e-05, 5.3999999999998494e-05, 5.370800000000647e-05, 5.355599999999627e-05, 5.419499999999994e-05, 5.412500000000209e-05, 5.45140000000055e-05, 5.3887999999994995e-05, 5.390300000000098e-05, 5.3652000000001254e-05, 5.38340000000026e-05, 5.4221999999999604e-05, 5.43470000000032e-05, 5.4444000000000714e-05, 5.377800000000432e-05, 5.4444000000000714e-05, 5.387500000000184e-05, 5.391700000000055e-05, 5.3513999999997564e-05, 5.413900000000166e-05, 5.444500000000019e-05, 5.380600000000346e-05, 5.358300000000288e-05, 5.365300000000073e-05, 5.3999999999998494e-05, 5.413900000000166e-05, 5.3916000000001074e-05, 5.4458000000000284e-05, 5.355500000000374e-05, 5.4221999999999604e-05, 5.362500000000159e-05, 5.388900000000141e-05, 5.36670000000003e-05, 5.35419999999967e-05, 5.4458000000000284e-05, 5.4221999999999604e-05, 5.411100000000252e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.098" endtime="20201029 18:16:15.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.086" endtime="20201029 18:16:15.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.115" endtime="20201029 18:16:15.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.109" endtime="20201029 18:16:15.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.107" endtime="20201029 18:16:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.610" endtime="20201029 18:16:15.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.609" endtime="20201029 18:16:15.141"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.164" endtime="20201029 18:16:15.184"></status>
</kw>
<msg timestamp="20201029 18:16:15.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.160" endtime="20201029 18:16:15.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.188" endtime="20201029 18:16:15.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.194" endtime="20201029 18:16:15.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.153" endtime="20201029 18:16:15.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.147" endtime="20201029 18:16:15.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.218" endtime="20201029 18:16:15.558"></status>
</kw>
<msg timestamp="20201029 18:16:15.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041951, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:15.215" endtime="20201029 18:16:15.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041895597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041951, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:15.568" endtime="20201029 18:16:15.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.587" endtime="20201029 18:16:15.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.207" endtime="20201029 18:16:15.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.202" endtime="20201029 18:16:15.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.605" level="INFO">${RESULT} = [{'diff': 5.540300000000248e-05}, {'diff': 5.543100000000162e-05}, {'diff': 5.468100000000087e-05}, {'diff': 5.458399999999641e-05}, {'diff': 5.512499999999615e-05}, {'diff': 5.532000000000453e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.596" endtime="20201029 18:16:15.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.616" level="INFO">${ACCURACY} = {'diff': [5.540300000000248e-05, 5.543100000000162e-05, 5.468100000000087e-05, 5.458399999999641e-05, 5.512499999999615e-05, 5.532000000000453e-05, 5.465300000000173e-05, 5.511099999999658e-05, 5.5445...</msg>
<status status="PASS" starttime="20201029 18:16:15.607" endtime="20201029 18:16:15.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.627" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.625" endtime="20201029 18:16:15.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.633" level="INFO">VALUE: [5.540300000000248e-05, 5.543100000000162e-05, 5.468100000000087e-05, 5.458399999999641e-05, 5.512499999999615e-05, 5.532000000000453e-05, 5.465300000000173e-05, 5.511099999999658e-05, 5.544500000000119e-05, 5.502800000000557e-05, 5.4777999999998384e-05, 5.480499999999805e-05, 5.511100000000352e-05, 5.500000000000643e-05, 5.477699999999891e-05, 5.459700000000345e-05, 5.502800000000557e-05, 5.4749999999999244e-05, 5.531899999999812e-05, 5.493100000000112e-05, 5.5444000000001714e-05, 5.490299999999504e-05, 5.477800000000532e-05, 5.545900000000076e-05, 5.477800000000532e-05, 5.5236000000000174e-05, 5.455599999999727e-05, 5.4763999999998814e-05, 5.512499999999615e-05, 5.511199999999605e-05, 5.45549999999978e-05, 5.487500000000284e-05, 5.5458000000001284e-05, 5.490300000000198e-05, 5.45549999999978e-05, 5.4791999999997953e-05, 5.4694000000000964e-05, 5.490300000000198e-05, 5.5236000000000174e-05, 5.5444000000001714e-05, 5.544500000000119e-05, 5.512499999999615e-05, 5.5236000000000174e-05, 5.511100000000352e-05, 5.490300000000198e-05, 5.479100000000542e-05, 5.490300000000198e-05, 5.456900000000431e-05, 5.5458000000001284e-05, 5.5222000000000604e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.630" endtime="20201029 18:16:15.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.618" endtime="20201029 18:16:15.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.646" endtime="20201029 18:16:15.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.641" endtime="20201029 18:16:15.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.638" endtime="20201029 18:16:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.143" endtime="20201029 18:16:15.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.142" endtime="20201029 18:16:15.671"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.694" endtime="20201029 18:16:15.715"></status>
</kw>
<msg timestamp="20201029 18:16:15.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.690" endtime="20201029 18:16:15.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.718" endtime="20201029 18:16:15.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.725" endtime="20201029 18:16:15.728"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.683" endtime="20201029 18:16:15.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.677" endtime="20201029 18:16:15.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.748" endtime="20201029 18:16:16.091"></status>
</kw>
<msg timestamp="20201029 18:16:16.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041936708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.745" endtime="20201029 18:16:16.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041936708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.101" endtime="20201029 18:16:16.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.120" endtime="20201029 18:16:16.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.738" endtime="20201029 18:16:16.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.733" endtime="20201029 18:16:16.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.137" level="INFO">${RESULT} = [{'diff': 5.595899999999432e-05}, {'diff': 5.611199999999705e-05}, {'diff': 5.556900000000531e-05}, {'diff': 5.5958000000001784e-05}, {'diff': 5.6000000000000494e-05}, {'diff': 5.5915999999996135e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:16.128" endtime="20201029 18:16:16.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.149" level="INFO">${ACCURACY} = {'diff': [5.595899999999432e-05, 5.611199999999705e-05, 5.556900000000531e-05, 5.5958000000001784e-05, 5.6000000000000494e-05, 5.5915999999996135e-05, 5.611099999999758e-05, 5.6444000000002714e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:16.139" endtime="20201029 18:16:16.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.160" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.158" endtime="20201029 18:16:16.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.166" level="INFO">VALUE: [5.595899999999432e-05, 5.611199999999705e-05, 5.556900000000531e-05, 5.5958000000001784e-05, 5.6000000000000494e-05, 5.5915999999996135e-05, 5.611099999999758e-05, 5.6444000000002714e-05, 5.6444000000002714e-05, 5.6263999999993375e-05, 5.588899999999647e-05, 5.5777999999999384e-05, 5.63470000000052e-05, 5.588899999999647e-05, 5.611100000000452e-05, 5.557000000000478e-05, 5.557000000000478e-05, 5.6000000000000494e-05, 5.556999999999784e-05, 5.554200000000564e-05, 5.561100000000402e-05, 5.6236000000001174e-05, 5.604099999999973e-05, 5.5901999999996566e-05, 5.6236000000001174e-05, 5.577699999999991e-05, 5.6443999999995775e-05, 5.613899999999672e-05, 5.58749999999969e-05, 5.612500000000409e-05, 5.6458000000002284e-05, 5.593099999999518e-05, 5.6027999999999634e-05, 5.644499999999525e-05, 5.5791999999998954e-05, 5.633399999999816e-05, 5.5555999999998273e-05, 5.588900000000341e-05, 5.590300000000298e-05, 5.588900000000341e-05, 5.622300000000108e-05, 5.612499999999715e-05, 5.6457999999995345e-05, 5.613900000000366e-05, 5.55549999999988e-05, 5.611099999999758e-05, 5.590300000000298e-05, 5.6208000000002034e-05, 5.6444000000002714e-05, 5.565300000000273e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.162" endtime="20201029 18:16:16.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.151" endtime="20201029 18:16:16.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.178" endtime="20201029 18:16:16.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.174" endtime="20201029 18:16:16.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.171" endtime="20201029 18:16:16.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.673" endtime="20201029 18:16:16.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.672" endtime="20201029 18:16:16.203"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.227" endtime="20201029 18:16:16.247"></status>
</kw>
<msg timestamp="20201029 18:16:16.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.223" endtime="20201029 18:16:16.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.251" endtime="20201029 18:16:16.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.257" endtime="20201029 18:16:16.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.216" endtime="20201029 18:16:16.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.210" endtime="20201029 18:16:16.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.281" endtime="20201029 18:16:16.625"></status>
</kw>
<msg timestamp="20201029 18:16:16.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04188625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:16.278" endtime="20201029 18:16:16.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04188625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:16.635" endtime="20201029 18:16:16.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.654" endtime="20201029 18:16:16.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.270" endtime="20201029 18:16:16.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.265" endtime="20201029 18:16:16.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.672" level="INFO">${RESULT} = [{'diff': 5.7222000000002604e-05}, {'diff': 5.7193999999996525e-05}, {'diff': 5.712499999999815e-05}, {'diff': 5.7222000000002604e-05}, {'diff': 5.668100000000287e-05}, {'diff': 5.6778000000000384e-05...</msg>
<status status="PASS" starttime="20201029 18:16:16.663" endtime="20201029 18:16:16.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.681" level="INFO">${ACCURACY} = {'diff': [5.7222000000002604e-05, 5.7193999999996525e-05, 5.712499999999815e-05, 5.7222000000002604e-05, 5.668100000000287e-05, 5.6778000000000384e-05, 5.66670000000033e-05, 5.690299999999704e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 18:16:16.674" endtime="20201029 18:16:16.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.692" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.690" endtime="20201029 18:16:16.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.698" level="INFO">VALUE: [5.7222000000002604e-05, 5.7193999999996525e-05, 5.712499999999815e-05, 5.7222000000002604e-05, 5.668100000000287e-05, 5.6778000000000384e-05, 5.66670000000033e-05, 5.690299999999704e-05, 5.713899999999772e-05, 5.688899999999747e-05, 5.6805999999999524e-05, 5.6915999999997136e-05, 5.734800000000567e-05, 5.677700000000091e-05, 5.702699999999422e-05, 5.651300000000109e-05, 5.712499999999815e-05, 5.6944000000003214e-05, 5.656899999999937e-05, 5.663899999999722e-05, 5.6665999999996886e-05, 5.709699999999901e-05, 5.709700000000595e-05, 5.7222000000002604e-05, 5.6541999999999704e-05, 5.7472000000002854e-05, 5.6764000000000814e-05, 5.744499999999625e-05, 5.688899999999747e-05, 5.734799999999873e-05, 5.66670000000033e-05, 5.7235999999995235e-05, 5.6778000000000384e-05, 5.6915999999997136e-05, 5.712499999999815e-05, 5.6764000000000814e-05, 5.6764000000000814e-05, 5.6665999999996886e-05, 5.712499999999815e-05, 5.6750000000001244e-05, 5.66670000000033e-05, 5.6541999999999704e-05, 5.743099999999668e-05, 5.734699999999926e-05, 5.6555999999999274e-05, 5.7250000000001744e-05, 5.6485999999994485e-05, 5.658399999999841e-05, 5.6736000000001674e-05, 5.668099999999593e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.695" endtime="20201029 18:16:16.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.683" endtime="20201029 18:16:16.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.711" endtime="20201029 18:16:16.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.706" endtime="20201029 18:16:16.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.704" endtime="20201029 18:16:16.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.206" endtime="20201029 18:16:16.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.204" endtime="20201029 18:16:16.736"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.759" endtime="20201029 18:16:16.781"></status>
</kw>
<msg timestamp="20201029 18:16:16.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.756" endtime="20201029 18:16:16.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.785" endtime="20201029 18:16:16.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.791" endtime="20201029 18:16:16.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.748" endtime="20201029 18:16:16.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.743" endtime="20201029 18:16:16.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.815" endtime="20201029 18:16:17.160"></status>
</kw>
<msg timestamp="20201029 18:16:17.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043547347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043604861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.812" endtime="20201029 18:16:17.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043547347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043604861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.169" endtime="20201029 18:16:17.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.189" endtime="20201029 18:16:17.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.804" endtime="20201029 18:16:17.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.799" endtime="20201029 18:16:17.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.206" level="INFO">${RESULT} = [{'diff': 5.7514000000001564e-05}, {'diff': 5.768100000000387e-05}, {'diff': 5.791699999999761e-05}, {'diff': 5.8221999999996665e-05}, {'diff': 5.76949999999965e-05}, {'diff': 5.7792000000000954e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:17.197" endtime="20201029 18:16:17.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.216" level="INFO">${ACCURACY} = {'diff': [5.7514000000001564e-05, 5.768100000000387e-05, 5.791699999999761e-05, 5.8221999999996665e-05, 5.76949999999965e-05, 5.7792000000000954e-05, 5.8334000000000163e-05, 5.786099999999933e-05, 5.8...</msg>
<status status="PASS" starttime="20201029 18:16:17.208" endtime="20201029 18:16:17.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.227" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.224" endtime="20201029 18:16:17.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.232" level="INFO">VALUE: [5.7514000000001564e-05, 5.768100000000387e-05, 5.791699999999761e-05, 5.8221999999996665e-05, 5.76949999999965e-05, 5.7792000000000954e-05, 5.8334000000000163e-05, 5.786099999999933e-05, 5.8000000000002494e-05, 5.8221999999996665e-05, 5.811199999999905e-05, 5.823699999999571e-05, 5.841700000000505e-05, 5.7986000000002924e-05, 5.836099999999983e-05, 5.7665999999997886e-05, 5.779100000000148e-05, 5.7958000000003784e-05, 5.765299999999779e-05, 5.83749999999994e-05, 5.7958000000003784e-05, 5.831900000000112e-05, 5.8013999999995125e-05, 5.8208000000004034e-05, 5.7805999999993585e-05, 5.844499999999725e-05, 5.7556000000000274e-05, 5.8000000000002494e-05, 5.844499999999725e-05, 5.8486000000003424e-05, 5.8347999999999733e-05, 5.801299999999565e-05, 5.8458000000004284e-05, 5.8222000000003604e-05, 5.75550000000008e-05, 5.8014000000002064e-05, 5.790299999999804e-05, 5.790299999999804e-05, 5.795899999999632e-05, 5.830500000000155e-05, 5.8028000000001634e-05, 5.809700000000001e-05, 5.8208000000004034e-05, 5.844500000000419e-05, 5.83749999999994e-05, 5.8000000000002494e-05, 5.7986000000002924e-05, 5.8056000000000774e-05, 5.756900000000037e-05, 5.758299999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.229" endtime="20201029 18:16:17.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.218" endtime="20201029 18:16:17.236"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.247" endtime="20201029 18:16:17.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.241" endtime="20201029 18:16:17.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.238" endtime="20201029 18:16:17.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.738" endtime="20201029 18:16:17.271"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.737" endtime="20201029 18:16:17.272"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.295" endtime="20201029 18:16:17.316"></status>
</kw>
<msg timestamp="20201029 18:16:17.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.292" endtime="20201029 18:16:17.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.319" endtime="20201029 18:16:17.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.325" endtime="20201029 18:16:17.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.284" endtime="20201029 18:16:17.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.278" endtime="20201029 18:16:17.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.349" endtime="20201029 18:16:17.695"></status>
</kw>
<msg timestamp="20201029 18:16:17.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042042458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042101444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.346" endtime="20201029 18:16:17.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042042458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042101444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.704" endtime="20201029 18:16:17.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.724" endtime="20201029 18:16:17.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.338" endtime="20201029 18:16:17.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.334" endtime="20201029 18:16:17.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.746" level="INFO">${RESULT} = [{'diff': 5.8986000000003924e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.9221999999997665e-05}, {'diff': 5.9235999999997235e-05}, {'diff': 5.9305999999995085e-05}, {'diff': 5.9430000000006145e-05...</msg>
<status status="PASS" starttime="20201029 18:16:17.736" endtime="20201029 18:16:17.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.762" level="INFO">${ACCURACY} = {'diff': [5.8986000000003924e-05, 5.93750000000004e-05, 5.9221999999997665e-05, 5.9235999999997235e-05, 5.9305999999995085e-05, 5.9430000000006145e-05, 5.8777999999995445e-05, 5.918099999999843e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:17.749" endtime="20201029 18:16:17.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.774" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.771" endtime="20201029 18:16:17.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.779" level="INFO">VALUE: [5.8986000000003924e-05, 5.93750000000004e-05, 5.9221999999997665e-05, 5.9235999999997235e-05, 5.9305999999995085e-05, 5.9430000000006145e-05, 5.8777999999995445e-05, 5.918099999999843e-05, 5.934700000000126e-05, 5.866699999999836e-05, 5.8792000000001954e-05, 5.9334000000001164e-05, 5.8778000000002384e-05, 5.9320000000001594e-05, 5.880500000000205e-05, 5.9514000000003564e-05, 5.859700000000051e-05, 5.8986000000003924e-05, 5.9443999999998776e-05, 5.8972000000004354e-05, 5.9207999999998095e-05, 5.9235999999997235e-05, 5.856900000000137e-05, 5.9235999999997235e-05, 5.8764000000002814e-05, 5.934700000000126e-05, 5.9457999999998346e-05, 5.8584000000000414e-05, 5.944499999999825e-05, 5.865299999999879e-05, 5.8556000000001274e-05, 5.866699999999836e-05, 5.9320000000001594e-05, 5.902700000000316e-05, 5.8556000000001274e-05, 5.936100000000083e-05, 5.9235999999997235e-05, 5.8901999999999566e-05, 5.8651999999999316e-05, 5.9222000000004604e-05, 5.8848000000000233e-05, 5.912500000000015e-05, 5.9443999999998776e-05, 5.933300000000169e-05, 5.86949999999975e-05, 5.9236000000004174e-05, 5.883300000000119e-05, 5.862499999999965e-05, 5.888899999999947e-05, 5.945899999999782e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.776" endtime="20201029 18:16:17.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.764" endtime="20201029 18:16:17.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.792" endtime="20201029 18:16:17.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.788" endtime="20201029 18:16:17.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.785" endtime="20201029 18:16:17.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.274" endtime="20201029 18:16:17.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.273" endtime="20201029 18:16:17.817"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.840" endtime="20201029 18:16:17.861"></status>
</kw>
<msg timestamp="20201029 18:16:17.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.837" endtime="20201029 18:16:17.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.865" endtime="20201029 18:16:17.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.871" endtime="20201029 18:16:17.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.829" endtime="20201029 18:16:17.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.824" endtime="20201029 18:16:17.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.895" endtime="20201029 18:16:18.234"></status>
</kw>
<msg timestamp="20201029 18:16:18.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041879111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041938833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.891" endtime="20201029 18:16:18.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041879111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041938833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.243" endtime="20201029 18:16:18.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.262" endtime="20201029 18:16:18.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.884" endtime="20201029 18:16:18.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.879" endtime="20201029 18:16:18.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.279" level="INFO">${RESULT} = [{'diff': 5.9722000000005104e-05}, {'diff': 6.0319999999995655e-05}, {'diff': 6.012500000000115e-05}, {'diff': 6.0013999999997125e-05}, {'diff': 6.0333999999995225e-05}, {'diff': 6.0471999999998916e-0...</msg>
<status status="PASS" starttime="20201029 18:16:18.270" endtime="20201029 18:16:18.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.290" level="INFO">${ACCURACY} = {'diff': [5.9722000000005104e-05, 6.0319999999995655e-05, 6.012500000000115e-05, 6.0013999999997125e-05, 6.0333999999995225e-05, 6.0471999999998916e-05, 6.036099999999489e-05, 5.956899999999543e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:18.281" endtime="20201029 18:16:18.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.301" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.299" endtime="20201029 18:16:18.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.306" level="INFO">VALUE: [5.9722000000005104e-05, 6.0319999999995655e-05, 6.012500000000115e-05, 6.0013999999997125e-05, 6.0333999999995225e-05, 6.0471999999998916e-05, 6.036099999999489e-05, 5.956899999999543e-05, 5.9971999999998415e-05, 5.9665999999999886e-05, 5.9791999999996015e-05, 6.0235999999998235e-05, 5.988900000000047e-05, 6.0249999999997805e-05, 5.9777999999996445e-05, 6.009700000000201e-05, 5.9777999999996445e-05, 6.0236000000005174e-05, 6.0333999999995225e-05, 6.0014000000004064e-05, 6.0013999999997125e-05, 6.012500000000115e-05, 5.979100000000348e-05, 6.0471999999998916e-05, 6.0443999999999776e-05, 6.036100000000183e-05, 5.988900000000047e-05, 5.958300000000194e-05, 5.95550000000028e-05, 5.990300000000004e-05, 5.9542000000002704e-05, 5.9777999999996445e-05, 6.0221999999998665e-05, 5.988900000000047e-05, 6.0013999999997125e-05, 6.0320000000002594e-05, 5.968099999999893e-05, 5.9985999999997985e-05, 5.981900000000262e-05, 6.0112000000001053e-05, 5.9833999999994725e-05, 6.034700000000226e-05, 5.9679999999999456e-05, 5.9527999999996195e-05, 6.036100000000183e-05, 6.0430000000000206e-05, 5.9999999999997555e-05, 5.990300000000004e-05, 6.034699999999532e-05, 5.9985999999997985e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.303" endtime="20201029 18:16:18.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.292" endtime="20201029 18:16:18.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.319" endtime="20201029 18:16:18.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.314" endtime="20201029 18:16:18.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.312" endtime="20201029 18:16:18.342"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.819" endtime="20201029 18:16:18.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.818" endtime="20201029 18:16:18.344"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.366" endtime="20201029 18:16:18.387"></status>
</kw>
<msg timestamp="20201029 18:16:18.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.363" endtime="20201029 18:16:18.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.390" endtime="20201029 18:16:18.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.397" endtime="20201029 18:16:18.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.356" endtime="20201029 18:16:18.402"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.350" endtime="20201029 18:16:18.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.420" endtime="20201029 18:16:18.762"></status>
</kw>
<msg timestamp="20201029 18:16:18.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040990611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.416" endtime="20201029 18:16:18.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040930069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040990611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.772" endtime="20201029 18:16:18.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.790" endtime="20201029 18:16:18.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.409" endtime="20201029 18:16:18.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.405" endtime="20201029 18:16:18.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.807" level="INFO">${RESULT} = [{'diff': 6.0542000000003704e-05}, {'diff': 6.088900000000147e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.08750000000019e-05}, {'diff': 6.0499999999998055e-05}, {'diff': 6.066700000000036e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:18.799" endtime="20201029 18:16:18.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.817" level="INFO">${ACCURACY} = {'diff': [6.0542000000003704e-05, 6.088900000000147e-05, 6.12499999999988e-05, 6.08750000000019e-05, 6.0499999999998055e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.0999999999998555e-05, 6.081...</msg>
<status status="PASS" starttime="20201029 18:16:18.810" endtime="20201029 18:16:18.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.828" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.825" endtime="20201029 18:16:18.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.833" level="INFO">VALUE: [6.0542000000003704e-05, 6.088900000000147e-05, 6.12499999999988e-05, 6.08750000000019e-05, 6.0499999999998055e-05, 6.066700000000036e-05, 6.066700000000036e-05, 6.0999999999998555e-05, 6.0819999999996155e-05, 6.116700000000086e-05, 6.123599999999924e-05, 6.106899999999693e-05, 6.0582999999996e-05, 6.095899999999932e-05, 6.08750000000019e-05, 6.126399999999838e-05, 6.133300000000369e-05, 6.070899999999907e-05, 6.0778000000004384e-05, 6.123599999999924e-05, 6.122199999999967e-05, 6.123599999999924e-05, 6.111099999999564e-05, 6.1013999999998125e-05, 6.111099999999564e-05, 6.136099999999589e-05, 6.097299999999889e-05, 6.101299999999865e-05, 6.134700000000326e-05, 6.066599999999395e-05, 6.0834000000002664e-05, 6.05550000000038e-05, 6.1013999999998125e-05, 6.0680000000000456e-05, 6.111099999999564e-05, 6.118100000000043e-05, 6.122199999999967e-05, 6.123599999999924e-05, 6.111100000000258e-05, 6.091700000000061e-05, 6.1013999999998125e-05, 6.066700000000036e-05, 6.104099999999779e-05, 6.130499999999761e-05, 6.113900000000172e-05, 6.111100000000258e-05, 6.122199999999967e-05, 6.144400000000078e-05, 6.113899999999478e-05, 6.0999999999998555e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.830" endtime="20201029 18:16:18.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.818" endtime="20201029 18:16:18.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.845" endtime="20201029 18:16:18.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.841" endtime="20201029 18:16:18.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.839" endtime="20201029 18:16:18.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.346" endtime="20201029 18:16:18.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.344" endtime="20201029 18:16:18.870"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.893" endtime="20201029 18:16:18.916"></status>
</kw>
<msg timestamp="20201029 18:16:18.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.890" endtime="20201029 18:16:18.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.919" endtime="20201029 18:16:18.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.925" endtime="20201029 18:16:18.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.882" endtime="20201029 18:16:18.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.877" endtime="20201029 18:16:18.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.948" endtime="20201029 18:16:19.285"></status>
</kw>
<msg timestamp="20201029 18:16:19.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042863111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042924778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.945" endtime="20201029 18:16:19.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042863111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042924778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.295" endtime="20201029 18:16:19.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.313" endtime="20201029 18:16:19.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.938" endtime="20201029 18:16:19.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.933" endtime="20201029 18:16:19.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.331" level="INFO">${RESULT} = [{'diff': 6.166699999999442e-05}, {'diff': 6.188900000000247e-05}, {'diff': 6.223600000000024e-05}, {'diff': 6.220900000000057e-05}, {'diff': 6.244500000000125e-05}, {'diff': 6.154199999999777e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:19.322" endtime="20201029 18:16:19.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.340" level="INFO">${ACCURACY} = {'diff': [6.166699999999442e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.220900000000057e-05, 6.244500000000125e-05, 6.154199999999777e-05, 6.180499999999811e-05, 6.211099999999664e-05, 6.2209...</msg>
<status status="PASS" starttime="20201029 18:16:19.333" endtime="20201029 18:16:19.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.350" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.348" endtime="20201029 18:16:19.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.356" level="INFO">VALUE: [6.166699999999442e-05, 6.188900000000247e-05, 6.223600000000024e-05, 6.220900000000057e-05, 6.244500000000125e-05, 6.154199999999777e-05, 6.180499999999811e-05, 6.211099999999664e-05, 6.220900000000057e-05, 6.194500000000075e-05, 6.161100000000308e-05, 6.154099999999829e-05, 6.223600000000024e-05, 6.209699999999707e-05, 6.188899999999553e-05, 6.199999999999956e-05, 6.244499999999431e-05, 6.190300000000204e-05, 6.222200000000067e-05, 6.234800000000373e-05, 6.205600000000477e-05, 6.17499999999993e-05, 6.233399999999722e-05, 6.223600000000024e-05, 6.212499999999621e-05, 6.212499999999621e-05, 6.195800000000085e-05, 6.234700000000426e-05, 6.234700000000426e-05, 6.198599999999999e-05, 6.194500000000075e-05, 6.157000000000384e-05, 6.16950000000005e-05, 6.22080000000011e-05, 6.201399999999913e-05, 6.213899999999578e-05, 6.245900000000082e-05, 6.18620000000028e-05, 6.199999999999956e-05, 6.1888000000003e-05, 6.244400000000178e-05, 6.190200000000257e-05, 6.191700000000161e-05, 6.156900000000437e-05, 6.233299999999775e-05, 6.166700000000136e-05, 6.179200000000495e-05, 6.245799999999441e-05, 6.244400000000178e-05, 6.168100000000093e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.353" endtime="20201029 18:16:19.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.341" endtime="20201029 18:16:19.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.370" endtime="20201029 18:16:19.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.364" endtime="20201029 18:16:19.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.362" endtime="20201029 18:16:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.872" endtime="20201029 18:16:19.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.871" endtime="20201029 18:16:19.395"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.417" endtime="20201029 18:16:19.438"></status>
</kw>
<msg timestamp="20201029 18:16:19.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.414" endtime="20201029 18:16:19.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.441" endtime="20201029 18:16:19.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.448" endtime="20201029 18:16:19.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.407" endtime="20201029 18:16:19.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.401" endtime="20201029 18:16:19.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.471" endtime="20201029 18:16:19.808"></status>
</kw>
<msg timestamp="20201029 18:16:19.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040925778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.467" endtime="20201029 18:16:19.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040862722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040925778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.817" endtime="20201029 18:16:19.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.836" endtime="20201029 18:16:19.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.460" endtime="20201029 18:16:19.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.456" endtime="20201029 18:16:19.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.853" level="INFO">${RESULT} = [{'diff': 6.305600000000577e-05}, {'diff': 6.268099999999499e-05}, {'diff': 6.255599999999834e-05}, {'diff': 6.331999999999866e-05}, {'diff': 6.345800000000235e-05}, {'diff': 6.32080000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:19.844" endtime="20201029 18:16:19.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.864" level="INFO">${ACCURACY} = {'diff': [6.305600000000577e-05, 6.268099999999499e-05, 6.255599999999834e-05, 6.331999999999866e-05, 6.345800000000235e-05, 6.32080000000021e-05, 6.333300000000569e-05, 6.279099999999954e-05, 6.28049...</msg>
<status status="PASS" starttime="20201029 18:16:19.855" endtime="20201029 18:16:19.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.875" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.872" endtime="20201029 18:16:19.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.880" level="INFO">VALUE: [6.305600000000577e-05, 6.268099999999499e-05, 6.255599999999834e-05, 6.331999999999866e-05, 6.345800000000235e-05, 6.32080000000021e-05, 6.333300000000569e-05, 6.279099999999954e-05, 6.280499999999911e-05, 6.333299999999875e-05, 6.322200000000167e-05, 6.255499999999886e-05, 6.266700000000236e-05, 6.306899999999893e-05, 6.322200000000167e-05, 6.279200000000595e-05, 6.254199999999877e-05, 6.28479999999973e-05, 6.336100000000483e-05, 6.302700000000022e-05, 6.256899999999843e-05, 6.344400000000278e-05, 6.290300000000304e-05, 6.29300000000027e-05, 6.311099999999764e-05, 6.262499999999671e-05, 6.345800000000235e-05, 6.279199999999902e-05, 6.256899999999843e-05, 6.343100000000268e-05, 6.251399999999963e-05, 6.25279999999992e-05, 6.259799999999704e-05, 6.320900000000157e-05, 6.279199999999902e-05, 6.25420000000057e-05, 6.301400000000013e-05, 6.309799999999754e-05, 6.254099999999929e-05, 6.288899999999653e-05, 6.258300000000494e-05, 6.252699999999972e-05, 6.347199999999498e-05, 6.286099999999739e-05, 6.266700000000236e-05, 6.313900000000372e-05, 6.255600000000527e-05, 6.301400000000013e-05, 6.254199999999877e-05, 6.280599999999859e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.877" endtime="20201029 18:16:19.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.865" endtime="20201029 18:16:19.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.892" endtime="20201029 18:16:19.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.888" endtime="20201029 18:16:19.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.886" endtime="20201029 18:16:19.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.397" endtime="20201029 18:16:19.917"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.396" endtime="20201029 18:16:19.917"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.945" endtime="20201029 18:16:19.966"></status>
</kw>
<msg timestamp="20201029 18:16:19.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.941" endtime="20201029 18:16:19.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.970" endtime="20201029 18:16:19.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.977" endtime="20201029 18:16:19.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.933" endtime="20201029 18:16:19.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.926" endtime="20201029 18:16:19.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.002" endtime="20201029 18:16:20.343"></status>
</kw>
<msg timestamp="20201029 18:16:20.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04635025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046414042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:19.998" endtime="20201029 18:16:20.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04635025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046414042, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.352" endtime="20201029 18:16:20.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.371" endtime="20201029 18:16:20.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.990" endtime="20201029 18:16:20.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.985" endtime="20201029 18:16:20.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.388" level="INFO">${RESULT} = [{'diff': 6.379200000000002e-05}, {'diff': 6.36950000000025e-05}, {'diff': 6.379200000000002e-05}, {'diff': 6.368000000000346e-05}, {'diff': 6.430500000000061e-05}, {'diff': 6.366599999999695e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:20.379" endtime="20201029 18:16:20.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.399" level="INFO">${ACCURACY} = {'diff': [6.379200000000002e-05, 6.36950000000025e-05, 6.379200000000002e-05, 6.368000000000346e-05, 6.430500000000061e-05, 6.366599999999695e-05, 6.348600000000149e-05, 6.354199999999977e-05, 6.40000...</msg>
<status status="PASS" starttime="20201029 18:16:20.390" endtime="20201029 18:16:20.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.410" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.408" endtime="20201029 18:16:20.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.415" level="INFO">VALUE: [6.379200000000002e-05, 6.36950000000025e-05, 6.379200000000002e-05, 6.368000000000346e-05, 6.430500000000061e-05, 6.366599999999695e-05, 6.348600000000149e-05, 6.354199999999977e-05, 6.400000000000156e-05, 6.412499999999821e-05, 6.37500000000013e-05, 6.369499999999556e-05, 6.430600000000009e-05, 6.42500000000018e-05, 6.366700000000336e-05, 6.40829999999995e-05, 6.43479999999988e-05, 6.351400000000063e-05, 6.401399999999419e-05, 6.409799999999855e-05, 6.447200000000292e-05, 6.351400000000063e-05, 6.426400000000138e-05, 6.401400000000113e-05, 6.377800000000045e-05, 6.377800000000045e-05, 6.400000000000156e-05, 6.379200000000002e-05, 6.427800000000095e-05, 6.368099999999599e-05, 6.388900000000447e-05, 6.39029999999971e-05, 6.355600000000627e-05, 6.433399999999923e-05, 6.416700000000386e-05, 6.351300000000115e-05, 6.368000000000346e-05, 6.400000000000156e-05, 6.355499999999986e-05, 6.400000000000156e-05, 6.415299999999735e-05, 6.377800000000045e-05, 6.401400000000113e-05, 6.365300000000379e-05, 6.413899999999778e-05, 6.355599999999934e-05, 6.451400000000163e-05, 6.379200000000002e-05, 6.377800000000045e-05, 6.413899999999778e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.412" endtime="20201029 18:16:20.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.401" endtime="20201029 18:16:20.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.428" endtime="20201029 18:16:20.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.424" endtime="20201029 18:16:20.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.421" endtime="20201029 18:16:20.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.919" endtime="20201029 18:16:20.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.918" endtime="20201029 18:16:20.453"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.475" endtime="20201029 18:16:20.496"></status>
</kw>
<msg timestamp="20201029 18:16:20.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.472" endtime="20201029 18:16:20.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.499" endtime="20201029 18:16:20.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.506" endtime="20201029 18:16:20.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.465" endtime="20201029 18:16:20.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.459" endtime="20201029 18:16:20.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.529" endtime="20201029 18:16:20.876"></status>
</kw>
<msg timestamp="20201029 18:16:20.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041072139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.526" endtime="20201029 18:16:20.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041006819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041072139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.886" endtime="20201029 18:16:20.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.905" endtime="20201029 18:16:20.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.518" endtime="20201029 18:16:20.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.514" endtime="20201029 18:16:20.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.922" level="INFO">${RESULT} = [{'diff': 6.532000000000066e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.501400000000213e-05}, {'diff': 6.45699999999999e-05}, {'diff': 6.468099999999699e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:20.914" endtime="20201029 18:16:20.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.932" level="INFO">${ACCURACY} = {'diff': [6.532000000000066e-05, 6.479200000000102e-05, 6.500000000000256e-05, 6.501400000000213e-05, 6.45699999999999e-05, 6.468099999999699e-05, 6.488899999999853e-05, 6.501300000000265e-05, 6.54449...</msg>
<status status="PASS" starttime="20201029 18:16:20.925" endtime="20201029 18:16:20.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.943" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.941" endtime="20201029 18:16:20.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.949" level="INFO">VALUE: [6.532000000000066e-05, 6.479200000000102e-05, 6.500000000000256e-05, 6.501400000000213e-05, 6.45699999999999e-05, 6.468099999999699e-05, 6.488899999999853e-05, 6.501300000000265e-05, 6.544499999999731e-05, 6.466600000000489e-05, 6.477700000000197e-05, 6.522200000000367e-05, 6.456900000000043e-05, 6.501400000000213e-05, 6.490300000000504e-05, 6.516699999999792e-05, 6.523600000000324e-05, 6.523600000000324e-05, 6.450000000000206e-05, 6.52359999999963e-05, 6.455600000000034e-05, 6.545899999999688e-05, 6.461100000000608e-05, 6.501399999999519e-05, 6.477700000000197e-05, 6.545799999999741e-05, 6.522200000000367e-05, 6.542999999999827e-05, 6.545799999999741e-05, 6.522199999999673e-05, 6.4583e-05, 6.487499999999896e-05, 6.512499999999921e-05, 6.543100000000468e-05, 6.454200000000077e-05, 6.476400000000188e-05, 6.533400000000023e-05, 6.479200000000102e-05, 6.477800000000145e-05, 6.470799999999666e-05, 6.477800000000145e-05, 6.545800000000435e-05, 6.544400000000478e-05, 6.480500000000111e-05, 6.511099999999964e-05, 6.486099999999939e-05, 6.500000000000256e-05, 6.511099999999964e-05, 6.501400000000213e-05, 6.531900000000118e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.946" endtime="20201029 18:16:20.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.934" endtime="20201029 18:16:20.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.962" endtime="20201029 18:16:20.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.957" endtime="20201029 18:16:20.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.955" endtime="20201029 18:16:20.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.455" endtime="20201029 18:16:20.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.454" endtime="20201029 18:16:20.987"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.011" endtime="20201029 18:16:21.034"></status>
</kw>
<msg timestamp="20201029 18:16:21.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.007" endtime="20201029 18:16:21.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.038" endtime="20201029 18:16:21.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.045" endtime="20201029 18:16:21.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.000" endtime="20201029 18:16:21.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.994" endtime="20201029 18:16:21.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.058" endtime="20201029 18:16:21.383"></status>
</kw>
<msg timestamp="20201029 18:16:21.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044090986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044156917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.056" endtime="20201029 18:16:21.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044090986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044156917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.392" endtime="20201029 18:16:21.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.411" endtime="20201029 18:16:21.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.053" endtime="20201029 18:16:21.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.050" endtime="20201029 18:16:21.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.429" level="INFO">${RESULT} = [{'diff': 6.593099999999824e-05}, {'diff': 6.61109999999937e-05}, {'diff': 6.579199999999508e-05}, {'diff': 6.597199999999748e-05}, {'diff': 6.599999999999662e-05}, {'diff': 6.554199999999483e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:21.420" endtime="20201029 18:16:21.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.438" level="INFO">${ACCURACY} = {'diff': [6.593099999999824e-05, 6.61109999999937e-05, 6.579199999999508e-05, 6.597199999999748e-05, 6.599999999999662e-05, 6.554199999999483e-05, 6.561100000000014e-05, 6.59029999999991e-05, 6.599999...</msg>
<status status="PASS" starttime="20201029 18:16:21.431" endtime="20201029 18:16:21.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.450" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.447" endtime="20201029 18:16:21.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.455" level="INFO">VALUE: [6.593099999999824e-05, 6.61109999999937e-05, 6.579199999999508e-05, 6.597199999999748e-05, 6.599999999999662e-05, 6.554199999999483e-05, 6.561100000000014e-05, 6.59029999999991e-05, 6.599999999999662e-05, 6.645900000000482e-05, 6.633400000000123e-05, 6.63480000000008e-05, 6.601299999999671e-05, 6.602799999999576e-05, 6.630600000000209e-05, 6.599999999999662e-05, 6.556900000000143e-05, 6.5583000000001e-05, 6.57779999999955e-05, 6.634700000000132e-05, 6.576400000000288e-05, 6.579200000000202e-05, 6.632000000000166e-05, 6.579200000000202e-05, 6.644499999999831e-05, 6.591699999999867e-05, 6.634700000000132e-05, 6.602699999999628e-05, 6.624999999999687e-05, 6.617999999999902e-05, 6.577699999999603e-05, 6.555500000000186e-05, 6.581999999999422e-05, 6.588899999999953e-05, 6.556900000000143e-05, 6.584699999999388e-05, 6.55700000000009e-05, 6.644499999999831e-05, 6.588900000000647e-05, 6.611100000000064e-05, 6.554200000000177e-05, 6.647199999999798e-05, 6.647199999999798e-05, 6.565199999999938e-05, 6.57909999999956e-05, 6.598600000000399e-05, 6.591600000000614e-05, 6.622200000000467e-05, 6.613899999999978e-05, 6.555500000000186e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.452" endtime="20201029 18:16:21.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.440" endtime="20201029 18:16:21.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.469" endtime="20201029 18:16:21.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.463" endtime="20201029 18:16:21.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.461" endtime="20201029 18:16:21.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.989" endtime="20201029 18:16:21.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.988" endtime="20201029 18:16:21.494"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.518" endtime="20201029 18:16:21.539"></status>
</kw>
<msg timestamp="20201029 18:16:21.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.514" endtime="20201029 18:16:21.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.542" endtime="20201029 18:16:21.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.549" endtime="20201029 18:16:21.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.507" endtime="20201029 18:16:21.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.501" endtime="20201029 18:16:21.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.572" endtime="20201029 18:16:21.918"></status>
</kw>
<msg timestamp="20201029 18:16:21.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.569" endtime="20201029 18:16:21.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041925611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041992944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.927" endtime="20201029 18:16:21.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.946" endtime="20201029 18:16:21.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.561" endtime="20201029 18:16:21.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.557" endtime="20201029 18:16:21.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.964" level="INFO">${RESULT} = [{'diff': 6.733299999999581e-05}, {'diff': 6.745799999999941e-05}, {'diff': 6.733300000000275e-05}, {'diff': 6.709700000000207e-05}, {'diff': 6.677699999999703e-05}, {'diff': 6.67909999999966e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:21.955" endtime="20201029 18:16:21.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.974" level="INFO">${ACCURACY} = {'diff': [6.733299999999581e-05, 6.745799999999941e-05, 6.733300000000275e-05, 6.709700000000207e-05, 6.677699999999703e-05, 6.67909999999966e-05, 6.700000000000456e-05, 6.666699999999942e-05, 6.74860...</msg>
<status status="PASS" starttime="20201029 18:16:21.966" endtime="20201029 18:16:21.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.985" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.983" endtime="20201029 18:16:21.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.991" level="INFO">VALUE: [6.733299999999581e-05, 6.745799999999941e-05, 6.733300000000275e-05, 6.709700000000207e-05, 6.677699999999703e-05, 6.67909999999966e-05, 6.700000000000456e-05, 6.666699999999942e-05, 6.748600000000549e-05, 6.69030000000001e-05, 6.733299999999581e-05, 6.727699999999753e-05, 6.659800000000105e-05, 6.679199999999608e-05, 6.655600000000234e-05, 6.684700000000182e-05, 6.743000000000027e-05, 6.67909999999966e-05, 6.733299999999581e-05, 6.745799999999941e-05, 6.687499999999402e-05, 6.693099999999924e-05, 6.670799999999866e-05, 6.720799999999916e-05, 6.663900000000028e-05, 6.677799999999651e-05, 6.680600000000259e-05, 6.733300000000275e-05, 6.732000000000266e-05, 6.73480000000018e-05, 6.656900000000243e-05, 6.6583000000002e-05, 6.654199999999583e-05, 6.701299999999771e-05, 6.734699999999538e-05, 6.743000000000027e-05, 6.655500000000286e-05, 6.695899999999838e-05, 6.736100000000189e-05, 6.662499999999377e-05, 6.654199999999583e-05, 6.724999999999787e-05, 6.666699999999942e-05, 6.701400000000413e-05, 6.709700000000207e-05, 6.73480000000018e-05, 6.71109999999947e-05, 6.702699999999728e-05, 6.667999999999952e-05, 6.655500000000286e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.988" endtime="20201029 18:16:21.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.976" endtime="20201029 18:16:21.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.004" endtime="20201029 18:16:22.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.999" endtime="20201029 18:16:22.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.997" endtime="20201029 18:16:22.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.497" endtime="20201029 18:16:22.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.495" endtime="20201029 18:16:22.029"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.052" endtime="20201029 18:16:22.074"></status>
</kw>
<msg timestamp="20201029 18:16:22.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.049" endtime="20201029 18:16:22.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.078" endtime="20201029 18:16:22.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.084" endtime="20201029 18:16:22.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.042" endtime="20201029 18:16:22.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.036" endtime="20201029 18:16:22.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.108" endtime="20201029 18:16:22.452"></status>
</kw>
<msg timestamp="20201029 18:16:22.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042249347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.105" endtime="20201029 18:16:22.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042181778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042249347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.461" endtime="20201029 18:16:22.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.480" endtime="20201029 18:16:22.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.097" endtime="20201029 18:16:22.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.092" endtime="20201029 18:16:22.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.498" level="INFO">${RESULT} = [{'diff': 6.756899999999649e-05}, {'diff': 6.822199999999973e-05}, {'diff': 6.848599999999955e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.756900000000343e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.489" endtime="20201029 18:16:22.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.509" level="INFO">${ACCURACY} = {'diff': [6.756899999999649e-05, 6.822199999999973e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.799999999999862e-05, 6.756900000000343e-05, 6.777799999999751e-05, 6.777799999999751e-05, 6.8445...</msg>
<status status="PASS" starttime="20201029 18:16:22.500" endtime="20201029 18:16:22.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.520" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.518" endtime="20201029 18:16:22.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.526" level="INFO">VALUE: [6.756899999999649e-05, 6.822199999999973e-05, 6.848599999999955e-05, 6.847199999999998e-05, 6.799999999999862e-05, 6.756900000000343e-05, 6.777799999999751e-05, 6.777799999999751e-05, 6.844500000000031e-05, 6.768099999999999e-05, 6.823600000000624e-05, 6.799999999999862e-05, 6.784699999999588e-05, 6.833300000000375e-05, 6.812499999999527e-05, 6.831899999999724e-05, 6.756899999999649e-05, 6.772199999999923e-05, 6.758299999999606e-05, 6.82359999999993e-05, 6.788900000000153e-05, 6.762499999999477e-05, 6.812500000000221e-05, 6.833299999999681e-05, 6.802799999999776e-05, 6.802799999999776e-05, 6.788900000000153e-05, 6.788900000000153e-05, 6.761100000000214e-05, 6.836100000000289e-05, 6.829200000000452e-05, 6.776399999999794e-05, 6.822199999999973e-05, 6.801399999999819e-05, 6.795899999999938e-05, 6.777799999999751e-05, 6.822199999999973e-05, 6.755600000000334e-05, 6.801399999999819e-05, 6.843100000000074e-05, 6.801399999999819e-05, 6.82359999999993e-05, 6.777799999999751e-05, 6.7583000000003e-05, 6.809800000000255e-05, 6.767999999999358e-05, 6.766600000000095e-05, 6.777699999999803e-05, 6.756899999999649e-05, 6.833299999999681e-05]</msg>
<status status="PASS" starttime="20201029 18:16:22.522" endtime="20201029 18:16:22.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.511" endtime="20201029 18:16:22.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.545" endtime="20201029 18:16:22.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.540" endtime="20201029 18:16:22.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.538" endtime="20201029 18:16:22.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.031" endtime="20201029 18:16:22.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.030" endtime="20201029 18:16:22.570"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.593" endtime="20201029 18:16:22.614"></status>
</kw>
<msg timestamp="20201029 18:16:22.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.590" endtime="20201029 18:16:22.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.618" endtime="20201029 18:16:22.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.624" endtime="20201029 18:16:22.628"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.582" endtime="20201029 18:16:22.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.576" endtime="20201029 18:16:22.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.648" endtime="20201029 18:16:22.996"></status>
</kw>
<msg timestamp="20201029 18:16:23.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042035333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.645" endtime="20201029 18:16:23.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042035333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.006" endtime="20201029 18:16:23.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.025" endtime="20201029 18:16:23.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.637" endtime="20201029 18:16:23.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.632" endtime="20201029 18:16:23.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.043" level="INFO">${RESULT} = [{'diff': 6.899999999999962e-05}, {'diff': 6.927799999999901e-05}, {'diff': 6.877799999999851e-05}, {'diff': 6.920800000000116e-05}, {'diff': 6.912499999999627e-05}, {'diff': 6.883299999999731e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:23.034" endtime="20201029 18:16:23.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.052" level="INFO">${ACCURACY} = {'diff': [6.899999999999962e-05, 6.927799999999901e-05, 6.877799999999851e-05, 6.920800000000116e-05, 6.912499999999627e-05, 6.883299999999731e-05, 6.933299999999781e-05, 6.91109999999967e-05, 6.91250...</msg>
<status status="PASS" starttime="20201029 18:16:23.045" endtime="20201029 18:16:23.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.063" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.061" endtime="20201029 18:16:23.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.069" level="INFO">VALUE: [6.899999999999962e-05, 6.927799999999901e-05, 6.877799999999851e-05, 6.920800000000116e-05, 6.912499999999627e-05, 6.883299999999731e-05, 6.933299999999781e-05, 6.91109999999967e-05, 6.912500000000321e-05, 6.922200000000073e-05, 6.92360000000003e-05, 6.945900000000088e-05, 6.944500000000131e-05, 6.87909999999986e-05, 6.887499999999602e-05, 6.89030000000021e-05, 6.92230000000002e-05, 6.926399999999944e-05, 6.888799999999612e-05, 6.901399999999919e-05, 6.890199999999569e-05, 6.945800000000141e-05, 6.856899999999749e-05, 6.877799999999851e-05, 6.911100000000364e-05, 6.856899999999749e-05, 6.92360000000003e-05, 6.934700000000432e-05, 6.856999999999697e-05, 6.930599999999815e-05, 6.934799999999686e-05, 6.91109999999967e-05, 6.911200000000312e-05, 6.930599999999815e-05, 6.920800000000116e-05, 6.94439999999949e-05, 6.901399999999919e-05, 6.89030000000021e-05, 6.879199999999808e-05, 6.906999999999747e-05, 6.912499999999627e-05, 6.89030000000021e-05, 6.869500000000056e-05, 6.899999999999962e-05, 6.92360000000003e-05, 6.859700000000357e-05, 6.899999999999962e-05, 6.934799999999686e-05, 6.899999999999962e-05, 6.92360000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.066" endtime="20201029 18:16:23.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.054" endtime="20201029 18:16:23.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.082" endtime="20201029 18:16:23.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.077" endtime="20201029 18:16:23.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.075" endtime="20201029 18:16:23.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.572" endtime="20201029 18:16:23.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.571" endtime="20201029 18:16:23.107"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.130" endtime="20201029 18:16:23.153"></status>
</kw>
<msg timestamp="20201029 18:16:23.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.127" endtime="20201029 18:16:23.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.157" endtime="20201029 18:16:23.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.164" endtime="20201029 18:16:23.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.119" endtime="20201029 18:16:23.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.113" endtime="20201029 18:16:23.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.189" endtime="20201029 18:16:23.531"></status>
</kw>
<msg timestamp="20201029 18:16:23.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043302375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04337225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:23.185" endtime="20201029 18:16:23.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043302375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04337225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:23.541" endtime="20201029 18:16:23.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.560" endtime="20201029 18:16:23.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.178" endtime="20201029 18:16:23.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.173" endtime="20201029 18:16:23.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.577" level="INFO">${RESULT} = [{'diff': 6.987500000000396e-05}, {'diff': 6.95559999999984e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.99030000000031e-05}, {'diff': 7.001400000000019e-05}, {'diff': 7.01109999999977e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:23.568" endtime="20201029 18:16:23.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.587" level="INFO">${ACCURACY} = {'diff': [6.987500000000396e-05, 6.95559999999984e-05, 7.001400000000019e-05, 6.99030000000031e-05, 7.001400000000019e-05, 7.01109999999977e-05, 7.016600000000345e-05, 7.01109999999977e-05, 7.01249999...</msg>
<status status="PASS" starttime="20201029 18:16:23.579" endtime="20201029 18:16:23.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.598" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.595" endtime="20201029 18:16:23.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.603" level="INFO">VALUE: [6.987500000000396e-05, 6.95559999999984e-05, 7.001400000000019e-05, 6.99030000000031e-05, 7.001400000000019e-05, 7.01109999999977e-05, 7.016600000000345e-05, 7.01109999999977e-05, 7.012499999999727e-05, 7.011100000000464e-05, 6.969400000000209e-05, 7.02360000000013e-05, 6.954099999999935e-05, 7.002799999999976e-05, 6.966699999999548e-05, 6.95559999999984e-05, 7.045799999999547e-05, 6.987499999999702e-05, 6.980599999999865e-05, 6.977799999999951e-05, 7.02230000000012e-05, 6.958299999999806e-05, 7.023599999999436e-05, 7.034699999999838e-05, 7.001400000000019e-05, 7.045800000000241e-05, 7.001400000000019e-05, 7.011100000000464e-05, 7.001400000000019e-05, 6.954199999999883e-05, 6.956999999999797e-05, 6.987500000000396e-05, 7.022200000000173e-05, 6.958399999999754e-05, 6.988899999999659e-05, 7.045900000000188e-05, 6.987499999999702e-05, 6.977799999999951e-05, 7.001300000000071e-05, 7.01109999999977e-05, 6.994400000000234e-05, 6.955499999999892e-05, 7.012500000000421e-05, 7.050000000000112e-05, 7.000000000000062e-05, 6.9583000000005e-05, 7.031899999999924e-05, 7.001400000000019e-05, 6.95559999999984e-05, 7.022200000000173e-05]</msg>
<status status="PASS" starttime="20201029 18:16:23.600" endtime="20201029 18:16:23.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.588" endtime="20201029 18:16:23.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.622" endtime="20201029 18:16:23.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.611" endtime="20201029 18:16:23.645"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.609" endtime="20201029 18:16:23.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.109" endtime="20201029 18:16:23.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.108" endtime="20201029 18:16:23.647"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.670" endtime="20201029 18:16:23.691"></status>
</kw>
<msg timestamp="20201029 18:16:23.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.666" endtime="20201029 18:16:23.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.695" endtime="20201029 18:16:23.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.701" endtime="20201029 18:16:23.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.659" endtime="20201029 18:16:23.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.653" endtime="20201029 18:16:23.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.725" endtime="20201029 18:16:24.066"></status>
</kw>
<msg timestamp="20201029 18:16:24.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041518694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.721" endtime="20201029 18:16:24.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041518694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.075" endtime="20201029 18:16:24.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.095" endtime="20201029 18:16:24.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.714" endtime="20201029 18:16:24.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.709" endtime="20201029 18:16:24.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.112" level="INFO">${RESULT} = [{'diff': 7.068099999999605e-05}, {'diff': 7.106999999999947e-05}, {'diff': 7.087499999999802e-05}, {'diff': 7.094400000000334e-05}, {'diff': 7.144499999999637e-05}, {'diff': 7.056999999999897e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:24.103" endtime="20201029 18:16:24.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.123" level="INFO">${ACCURACY} = {'diff': [7.068099999999605e-05, 7.106999999999947e-05, 7.087499999999802e-05, 7.094400000000334e-05, 7.144499999999637e-05, 7.056999999999897e-05, 7.133299999999981e-05, 7.122299999999526e-05, 7.1347...</msg>
<status status="PASS" starttime="20201029 18:16:24.114" endtime="20201029 18:16:24.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.134" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.132" endtime="20201029 18:16:24.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.140" level="INFO">VALUE: [7.068099999999605e-05, 7.106999999999947e-05, 7.087499999999802e-05, 7.094400000000334e-05, 7.144499999999637e-05, 7.056999999999897e-05, 7.133299999999981e-05, 7.122299999999526e-05, 7.134799999999886e-05, 7.122200000000273e-05, 7.120800000000316e-05, 7.080500000000017e-05, 7.145799999999647e-05, 7.134699999999938e-05, 7.145799999999647e-05, 7.055499999999992e-05, 7.073599999999486e-05, 7.145799999999647e-05, 7.113899999999784e-05, 7.143100000000374e-05, 7.062500000000471e-05, 7.080599999999965e-05, 7.076400000000094e-05, 7.088900000000453e-05, 7.066700000000342e-05, 7.067999999999658e-05, 7.145800000000341e-05, 7.076400000000094e-05, 7.083299999999931e-05, 7.123599999999536e-05, 7.086099999999845e-05, 7.100000000000162e-05, 7.081999999999922e-05, 7.133299999999981e-05, 7.059800000000505e-05, 7.055600000000634e-05, 7.079200000000008e-05, 7.068100000000299e-05, 7.094499999999587e-05, 7.05689999999995e-05, 7.05689999999995e-05, 7.137499999999852e-05, 7.145800000000341e-05, 7.065299999999691e-05, 7.136099999999895e-05, 7.131900000000024e-05, 7.127800000000101e-05, 7.077800000000051e-05, 7.056999999999897e-05, 7.136099999999895e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.136" endtime="20201029 18:16:24.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.125" endtime="20201029 18:16:24.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.152" endtime="20201029 18:16:24.174"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.148" endtime="20201029 18:16:24.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.145" endtime="20201029 18:16:24.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.649" endtime="20201029 18:16:24.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.648" endtime="20201029 18:16:24.177"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.201" endtime="20201029 18:16:24.223"></status>
</kw>
<msg timestamp="20201029 18:16:24.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.198" endtime="20201029 18:16:24.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.226" endtime="20201029 18:16:24.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.232" endtime="20201029 18:16:24.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.190" endtime="20201029 18:16:24.238"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.184" endtime="20201029 18:16:24.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.256" endtime="20201029 18:16:24.597"></status>
</kw>
<msg timestamp="20201029 18:16:24.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042851708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042923472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.253" endtime="20201029 18:16:24.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042851708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042923472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.607" endtime="20201029 18:16:24.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.625" endtime="20201029 18:16:24.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.246" endtime="20201029 18:16:24.631"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.241" endtime="20201029 18:16:24.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.643" level="INFO">${RESULT} = [{'diff': 7.1763999999995e-05}, {'diff': 7.15690000000005e-05}, {'diff': 7.223599999999636e-05}, {'diff': 7.233300000000081e-05}, {'diff': 7.223599999999636e-05}, {'diff': 7.15560000000004e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:16:24.634" endtime="20201029 18:16:24.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.654" level="INFO">${ACCURACY} = {'diff': [7.1763999999995e-05, 7.15690000000005e-05, 7.223599999999636e-05, 7.233300000000081e-05, 7.223599999999636e-05, 7.15560000000004e-05, 7.15560000000004e-05, 7.21109999999997e-05, 7.1889000000...</msg>
<status status="PASS" starttime="20201029 18:16:24.645" endtime="20201029 18:16:24.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.665" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.663" endtime="20201029 18:16:24.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.671" level="INFO">VALUE: [7.1763999999995e-05, 7.15690000000005e-05, 7.223599999999636e-05, 7.233300000000081e-05, 7.223599999999636e-05, 7.15560000000004e-05, 7.15560000000004e-05, 7.21109999999997e-05, 7.188900000000553e-05, 7.209700000000013e-05, 7.209799999999961e-05, 7.15560000000004e-05, 7.166599999999801e-05, 7.190200000000563e-05, 7.222199999999679e-05, 7.15690000000005e-05, 7.200000000000262e-05, 7.207000000000047e-05, 7.238899999999909e-05, 7.194499999999687e-05, 7.234700000000038e-05, 7.198599999999611e-05, 7.212499999999927e-05, 7.188899999999859e-05, 7.179200000000108e-05, 7.233400000000029e-05, 7.209700000000013e-05, 7.234700000000038e-05, 7.166599999999801e-05, 7.205599999999396e-05, 7.222200000000373e-05, 7.24439999999979e-05, 7.201399999999525e-05, 7.176400000000194e-05, 7.20560000000009e-05, 7.168099999999705e-05, 7.244499999999737e-05, 7.168099999999705e-05, 7.209700000000013e-05, 7.154200000000083e-05, 7.247200000000398e-05, 7.148599999999561e-05, 7.216599999999851e-05, 7.231900000000124e-05, 7.175000000000237e-05, 7.213899999999884e-05, 7.231900000000124e-05, 7.168099999999705e-05, 7.190299999999816e-05, 7.245799999999747e-05]</msg>
<status status="PASS" starttime="20201029 18:16:24.668" endtime="20201029 18:16:24.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.656" endtime="20201029 18:16:24.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.684" endtime="20201029 18:16:24.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.679" endtime="20201029 18:16:24.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.677" endtime="20201029 18:16:24.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.179" endtime="20201029 18:16:24.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.178" endtime="20201029 18:16:24.709"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.732" endtime="20201029 18:16:24.753"></status>
</kw>
<msg timestamp="20201029 18:16:24.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.728" endtime="20201029 18:16:24.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.757" endtime="20201029 18:16:24.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.763" endtime="20201029 18:16:24.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.721" endtime="20201029 18:16:24.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.715" endtime="20201029 18:16:24.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.787" endtime="20201029 18:16:25.091"></status>
</kw>
<msg timestamp="20201029 18:16:25.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.783" endtime="20201029 18:16:25.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.095" endtime="20201029 18:16:25.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.104" endtime="20201029 18:16:25.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.776" endtime="20201029 18:16:25.106"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.771" endtime="20201029 18:16:25.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.112" level="INFO">${RESULT} = [{'diff': 7.323599999999736e-05}, {'diff': 7.257000000000097e-05}, {'diff': 7.332000000000172e-05}, {'diff': 7.268099999999805e-05}, {'diff': 7.333400000000129e-05}, {'diff': 7.3069000000002e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:25.108" endtime="20201029 18:16:25.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.116" level="INFO">${ACCURACY} = {'diff': [7.323599999999736e-05, 7.257000000000097e-05, 7.332000000000172e-05, 7.268099999999805e-05, 7.333400000000129e-05, 7.3069000000002e-05, 7.279199999999514e-05, 7.257000000000097e-05, 7.311100...</msg>
<status status="PASS" starttime="20201029 18:16:25.113" endtime="20201029 18:16:25.116"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.121" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.120" endtime="20201029 18:16:25.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.124" level="INFO">VALUE: [7.323599999999736e-05, 7.257000000000097e-05, 7.332000000000172e-05, 7.268099999999805e-05, 7.333400000000129e-05, 7.3069000000002e-05, 7.279199999999514e-05, 7.257000000000097e-05, 7.31110000000007e-05, 7.27769999999961e-05, 7.316699999999898e-05, 7.333299999999487e-05, 7.322199999999779e-05, 7.305599999999496e-05, 7.342999999999933e-05, 7.334700000000138e-05, 7.27230000000037e-05, 7.344499999999837e-05, 7.337500000000052e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.344499999999837e-05, 7.288899999999959e-05, 7.27769999999961e-05, 7.337500000000052e-05, 7.312500000000027e-05, 7.304199999999539e-05, 7.282000000000122e-05, 7.29309999999983e-05, 7.320799999999822e-05, 7.312500000000027e-05, 7.279199999999514e-05, 7.337500000000052e-05, 7.279200000000208e-05, 7.345899999999794e-05, 7.311099999999376e-05, 7.29160000000062e-05, 7.25560000000014e-05, 7.279099999999566e-05, 7.313899999999984e-05, 7.322200000000473e-05, 7.334700000000138e-05, 7.34439999999989e-05, 7.25690000000015e-05, 7.25560000000014e-05, 7.322199999999779e-05, 7.257000000000097e-05, 7.327700000000353e-05, 7.345899999999794e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.122" endtime="20201029 18:16:25.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.117" endtime="20201029 18:16:25.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.130" endtime="20201029 18:16:25.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.128" endtime="20201029 18:16:25.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.127" endtime="20201029 18:16:25.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.711" endtime="20201029 18:16:25.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.710" endtime="20201029 18:16:25.151"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.162" endtime="20201029 18:16:25.181"></status>
</kw>
<msg timestamp="20201029 18:16:25.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.160" endtime="20201029 18:16:25.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.182" endtime="20201029 18:16:25.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.185" endtime="20201029 18:16:25.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.157" endtime="20201029 18:16:25.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.154" endtime="20201029 18:16:25.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.196" endtime="20201029 18:16:25.519"></status>
</kw>
<msg timestamp="20201029 18:16:25.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025686097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.195" endtime="20201029 18:16:25.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025686097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.528" endtime="20201029 18:16:25.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.547" endtime="20201029 18:16:25.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.191" endtime="20201029 18:16:25.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.189" endtime="20201029 18:16:25.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.565" level="INFO">${RESULT} = [{'diff': 7.43050000000002e-05}, {'diff': 7.408300000000256e-05}, {'diff': 7.370900000000166e-05}, {'diff': 7.390300000000016e-05}, {'diff': 7.423600000000183e-05}, {'diff': 7.362500000000077e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:25.556" endtime="20201029 18:16:25.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.574" level="INFO">${ACCURACY} = {'diff': [7.43050000000002e-05, 7.408300000000256e-05, 7.370900000000166e-05, 7.390300000000016e-05, 7.423600000000183e-05, 7.362500000000077e-05, 7.388900000000059e-05, 7.406899999999952e-05, 7.40419...</msg>
<status status="PASS" starttime="20201029 18:16:25.567" endtime="20201029 18:16:25.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.585" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.583" endtime="20201029 18:16:25.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.591" level="INFO">VALUE: [7.43050000000002e-05, 7.408300000000256e-05, 7.370900000000166e-05, 7.390300000000016e-05, 7.423600000000183e-05, 7.362500000000077e-05, 7.388900000000059e-05, 7.406899999999952e-05, 7.404199999999986e-05, 7.37370000000008e-05, 7.362500000000077e-05, 7.366600000000001e-05, 7.367999999999958e-05, 7.401400000000072e-05, 7.386099999999798e-05, 7.397299999999801e-05, 7.426400000000097e-05, 7.445799999999947e-05, 7.357000000000197e-05, 7.355599999999893e-05, 7.354199999999936e-05, 7.422199999999879e-05, 7.390300000000016e-05, 7.402699999999734e-05, 7.444499999999937e-05, 7.444400000000337e-05, 7.369400000000262e-05, 7.373600000000133e-05, 7.431999999999925e-05, 7.355499999999945e-05, 7.411099999999823e-05, 7.423600000000183e-05, 7.379199999999961e-05, 7.35699999999985e-05, 7.379199999999961e-05, 7.386100000000145e-05, 7.423599999999836e-05, 7.366699999999948e-05, 7.374999999999743e-05, 7.356899999999902e-05, 7.429100000000063e-05, 7.366600000000001e-05, 7.436100000000195e-05, 7.356899999999902e-05, 7.379199999999961e-05, 7.384699999999841e-05, 7.447199999999904e-05, 7.368099999999905e-05, 7.377800000000004e-05, 7.359699999999816e-05]</msg>
<status status="PASS" starttime="20201029 18:16:25.588" endtime="20201029 18:16:25.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.576" endtime="20201029 18:16:25.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.605" endtime="20201029 18:16:25.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.599" endtime="20201029 18:16:25.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.597" endtime="20201029 18:16:25.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.152" endtime="20201029 18:16:25.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.151" endtime="20201029 18:16:25.630"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.654" endtime="20201029 18:16:25.675"></status>
</kw>
<msg timestamp="20201029 18:16:25.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.650" endtime="20201029 18:16:25.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.678" endtime="20201029 18:16:25.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.685" endtime="20201029 18:16:25.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.643" endtime="20201029 18:16:25.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.637" endtime="20201029 18:16:25.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.709" endtime="20201029 18:16:26.052"></status>
</kw>
<msg timestamp="20201029 18:16:26.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041956236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042031444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.705" endtime="20201029 18:16:26.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041956236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042031444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.062" endtime="20201029 18:16:26.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.081" endtime="20201029 18:16:26.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.698" endtime="20201029 18:16:26.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.693" endtime="20201029 18:16:26.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.098" level="INFO">${RESULT} = [{'diff': 7.520800000000022e-05}, {'diff': 7.45690000000035e-05}, {'diff': 7.523599999999936e-05}, {'diff': 7.45690000000035e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.472299999999876e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:26.089" endtime="20201029 18:16:26.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.109" level="INFO">${ACCURACY} = {'diff': [7.520800000000022e-05, 7.45690000000035e-05, 7.523599999999936e-05, 7.45690000000035e-05, 7.488900000000159e-05, 7.472299999999876e-05, 7.538899999999515e-05, 7.488900000000159e-05, 7.511099...</msg>
<status status="PASS" starttime="20201029 18:16:26.100" endtime="20201029 18:16:26.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.120" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.118" endtime="20201029 18:16:26.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.125" level="INFO">VALUE: [7.520800000000022e-05, 7.45690000000035e-05, 7.523599999999936e-05, 7.45690000000035e-05, 7.488900000000159e-05, 7.472299999999876e-05, 7.538899999999515e-05, 7.488900000000159e-05, 7.511099999999576e-05, 7.499999999999868e-05, 7.502800000000476e-05, 7.477799999999757e-05, 7.491599999999432e-05, 7.543099999999386e-05, 7.51110000000027e-05, 7.487500000000202e-05, 7.454099999999741e-05, 7.501400000000519e-05, 7.545800000000047e-05, 7.54440000000009e-05, 7.501399999999825e-05, 7.512500000000227e-05, 7.54310000000008e-05, 7.515200000000194e-05, 7.544500000000037e-05, 7.522299999999926e-05, 7.512499999999533e-05, 7.544499999999343e-05, 7.545800000000047e-05, 7.466600000000101e-05, 7.472199999999929e-05, 7.545800000000047e-05, 7.490300000000116e-05, 7.551399999999875e-05, 7.458300000000306e-05, 7.488899999999465e-05, 7.477800000000451e-05, 7.480600000000365e-05, 7.5069000000004e-05, 7.512500000000227e-05, 7.477800000000451e-05, 7.501299999999878e-05, 7.468000000000058e-05, 7.509700000000313e-05, 7.466600000000101e-05, 7.45690000000035e-05, 7.523599999999936e-05, 7.476400000000494e-05, 7.504199999999739e-05, 7.534700000000338e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.122" endtime="20201029 18:16:26.127"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.111" endtime="20201029 18:16:26.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.138" endtime="20201029 18:16:26.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.134" endtime="20201029 18:16:26.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.131" endtime="20201029 18:16:26.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.632" endtime="20201029 18:16:26.163"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.631" endtime="20201029 18:16:26.163"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.186" endtime="20201029 18:16:26.208"></status>
</kw>
<msg timestamp="20201029 18:16:26.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.183" endtime="20201029 18:16:26.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.212" endtime="20201029 18:16:26.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.218" endtime="20201029 18:16:26.222"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.175" endtime="20201029 18:16:26.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.170" endtime="20201029 18:16:26.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.242" endtime="20201029 18:16:26.670"></status>
</kw>
<msg timestamp="20201029 18:16:26.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041902111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.238" endtime="20201029 18:16:26.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041902111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041978208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.680" endtime="20201029 18:16:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.700" endtime="20201029 18:16:26.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.231" endtime="20201029 18:16:26.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.226" endtime="20201029 18:16:26.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.719" level="INFO">${RESULT} = [{'diff': 7.609700000000413e-05}, {'diff': 7.558300000000406e-05}, {'diff': 7.569399999999421e-05}, {'diff': 7.61110000000037e-05}, {'diff': 7.599999999999968e-05}, {'diff': 7.556999999999703e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:26.710" endtime="20201029 18:16:26.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.731" level="INFO">${ACCURACY} = {'diff': [7.609700000000413e-05, 7.558300000000406e-05, 7.569399999999421e-05, 7.61110000000037e-05, 7.599999999999968e-05, 7.556999999999703e-05, 7.633400000000429e-05, 7.61389999999959e-05, 7.629099...</msg>
<status status="PASS" starttime="20201029 18:16:26.721" endtime="20201029 18:16:26.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.743" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.740" endtime="20201029 18:16:26.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.749" level="INFO">VALUE: [7.609700000000413e-05, 7.558300000000406e-05, 7.569399999999421e-05, 7.61110000000037e-05, 7.599999999999968e-05, 7.556999999999703e-05, 7.633400000000429e-05, 7.61389999999959e-05, 7.629099999999917e-05, 7.613900000000284e-05, 7.640299999999572e-05, 7.622300000000026e-05, 7.612500000000327e-05, 7.601399999999925e-05, 7.61110000000037e-05, 7.612500000000327e-05, 7.577799999999857e-05, 7.591700000000173e-05, 7.590300000000216e-05, 7.587500000000302e-05, 7.644499999999443e-05, 7.644500000000137e-05, 7.565300000000191e-05, 7.557000000000397e-05, 7.602699999999935e-05, 7.601299999999978e-05, 7.62639999999995e-05, 7.597200000000054e-05, 7.5763999999999e-05, 7.588899999999565e-05, 7.561099999999626e-05, 7.566699999999454e-05, 7.580599999999771e-05, 7.611099999999676e-05, 7.620800000000122e-05, 7.633399999999735e-05, 7.599999999999968e-05, 7.577799999999857e-05, 7.636099999999701e-05, 7.551399999999875e-05, 7.555500000000492e-05, 7.647200000000104e-05, 7.565200000000244e-05, 7.579199999999814e-05, 7.59169999999948e-05, 7.577799999999857e-05, 7.590300000000216e-05, 7.622200000000079e-05, 7.644500000000137e-05, 7.601400000000619e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.745" endtime="20201029 18:16:26.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.733" endtime="20201029 18:16:26.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.762" endtime="20201029 18:16:26.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.758" endtime="20201029 18:16:26.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.755" endtime="20201029 18:16:26.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.165" endtime="20201029 18:16:26.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.164" endtime="20201029 18:16:26.788"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.812" endtime="20201029 18:16:26.835"></status>
</kw>
<msg timestamp="20201029 18:16:26.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.809" endtime="20201029 18:16:26.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.838" endtime="20201029 18:16:26.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.845" endtime="20201029 18:16:26.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.801" endtime="20201029 18:16:26.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.795" endtime="20201029 18:16:26.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.870" endtime="20201029 18:16:27.238"></status>
</kw>
<msg timestamp="20201029 18:16:27.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043900569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.867" endtime="20201029 18:16:27.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043900569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043977903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.248" endtime="20201029 18:16:27.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.268" endtime="20201029 18:16:27.272"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.859" endtime="20201029 18:16:27.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.854" endtime="20201029 18:16:27.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.286" level="INFO">${RESULT} = [{'diff': 7.733399999999835e-05}, {'diff': 7.698700000000058e-05}, {'diff': 7.677799999999957e-05}, {'diff': 7.669400000000215e-05}, {'diff': 7.748599999999467e-05}, {'diff': 7.656899999999855e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:27.277" endtime="20201029 18:16:27.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.303" level="INFO">${ACCURACY} = {'diff': [7.733399999999835e-05, 7.698700000000058e-05, 7.677799999999957e-05, 7.669400000000215e-05, 7.748599999999467e-05, 7.656899999999855e-05, 7.679099999999967e-05, 7.712499999999733e-05, 7.7249...</msg>
<status status="PASS" starttime="20201029 18:16:27.294" endtime="20201029 18:16:27.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.314" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.312" endtime="20201029 18:16:27.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.320" level="INFO">VALUE: [7.733399999999835e-05, 7.698700000000058e-05, 7.677799999999957e-05, 7.669400000000215e-05, 7.748599999999467e-05, 7.656899999999855e-05, 7.679099999999967e-05, 7.712499999999733e-05, 7.724999999999399e-05, 7.725000000000093e-05, 7.70969999999982e-05, 7.690300000000316e-05, 7.690299999999622e-05, 7.712500000000427e-05, 7.677799999999957e-05, 7.680499999999923e-05, 7.709799999999767e-05, 7.715300000000341e-05, 7.701300000000078e-05, 7.700000000000068e-05, 7.656899999999855e-05, 7.725000000000093e-05, 7.733300000000581e-05, 7.715299999999647e-05, 7.690299999999622e-05, 7.711099999999776e-05, 7.68890000000036e-05, 7.701400000000025e-05, 7.722200000000179e-05, 7.668100000000205e-05, 7.747200000000204e-05, 7.712499999999733e-05, 7.712499999999733e-05, 7.701400000000025e-05, 7.673600000000086e-05, 7.745799999999553e-05, 7.733299999999887e-05, 7.680599999999871e-05, 7.712499999999733e-05, 7.744399999999596e-05, 7.71389999999969e-05, 7.655599999999846e-05, 7.679199999999914e-05, 7.655599999999846e-05, 7.677799999999957e-05, 7.654199999999889e-05, 7.668000000000258e-05, 7.675000000000043e-05, 7.690199999999675e-05, 7.663900000000334e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.317" endtime="20201029 18:16:27.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.305" endtime="20201029 18:16:27.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.333" endtime="20201029 18:16:27.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.329" endtime="20201029 18:16:27.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.326" endtime="20201029 18:16:27.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.790" endtime="20201029 18:16:27.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.789" endtime="20201029 18:16:27.358"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.381" endtime="20201029 18:16:27.404"></status>
</kw>
<msg timestamp="20201029 18:16:27.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.377" endtime="20201029 18:16:27.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.407" endtime="20201029 18:16:27.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.413" endtime="20201029 18:16:27.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.370" endtime="20201029 18:16:27.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.364" endtime="20201029 18:16:27.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.436" endtime="20201029 18:16:27.774"></status>
</kw>
<msg timestamp="20201029 18:16:27.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042893083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.433" endtime="20201029 18:16:27.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042815431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042893083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.784" endtime="20201029 18:16:27.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.802" endtime="20201029 18:16:27.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.426" endtime="20201029 18:16:27.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.421" endtime="20201029 18:16:27.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.820" level="INFO">${RESULT} = [{'diff': 7.76519999999975e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.819399999999671e-05}, {'diff': 7.830500000000074e-05}, {'diff': 7.784699999999894e-05}, {'diff': 7.845799999999653e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:27.811" endtime="20201029 18:16:27.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.829" level="INFO">${ACCURACY} = {'diff': [7.76519999999975e-05, 7.829200000000064e-05, 7.819399999999671e-05, 7.830500000000074e-05, 7.784699999999894e-05, 7.845799999999653e-05, 7.845900000000294e-05, 7.812499999999833e-05, 7.81250...</msg>
<status status="PASS" starttime="20201029 18:16:27.822" endtime="20201029 18:16:27.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.840" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.837" endtime="20201029 18:16:27.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.845" level="INFO">VALUE: [7.76519999999975e-05, 7.829200000000064e-05, 7.819399999999671e-05, 7.830500000000074e-05, 7.784699999999894e-05, 7.845799999999653e-05, 7.845900000000294e-05, 7.812499999999833e-05, 7.812500000000527e-05, 7.788899999999765e-05, 7.823600000000236e-05, 7.762500000000477e-05, 7.755499999999999e-05, 7.766599999999707e-05, 7.816699999999704e-05, 7.842999999999739e-05, 7.848600000000261e-05, 7.779200000000014e-05, 7.800000000000168e-05, 7.779200000000014e-05, 7.845900000000294e-05, 7.800000000000168e-05, 7.779200000000014e-05, 7.768099999999611e-05, 7.78890000000046e-05, 7.756899999999955e-05, 7.77770000000011e-05, 7.842999999999739e-05, 7.769400000000315e-05, 7.79169999999968e-05, 7.798599999999517e-05, 7.819399999999671e-05, 7.765299999999697e-05, 7.845800000000347e-05, 7.777800000000057e-05, 7.766700000000348e-05, 7.75839999999986e-05, 7.751400000000075e-05, 7.822300000000226e-05, 7.834699999999944e-05, 7.768000000000358e-05, 7.792999999999689e-05, 7.84719999999961e-05, 7.79169999999968e-05, 7.790300000000416e-05, 7.756999999999903e-05, 7.83190000000003e-05, 7.788899999999765e-05, 7.808299999999962e-05, 7.780599999999971e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.842" endtime="20201029 18:16:27.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.831" endtime="20201029 18:16:27.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.882" endtime="20201029 18:16:27.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.876" endtime="20201029 18:16:27.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.873" endtime="20201029 18:16:27.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.360" endtime="20201029 18:16:27.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.359" endtime="20201029 18:16:27.907"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.929" endtime="20201029 18:16:27.951"></status>
</kw>
<msg timestamp="20201029 18:16:27.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.926" endtime="20201029 18:16:27.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.955" endtime="20201029 18:16:27.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.961" endtime="20201029 18:16:27.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.919" endtime="20201029 18:16:27.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.913" endtime="20201029 18:16:27.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.984" endtime="20201029 18:16:28.320"></status>
</kw>
<msg timestamp="20201029 18:16:28.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041401292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041479958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.981" endtime="20201029 18:16:28.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041401292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041479958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.329" endtime="20201029 18:16:28.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.348" endtime="20201029 18:16:28.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.974" endtime="20201029 18:16:28.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.969" endtime="20201029 18:16:28.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.366" level="INFO">${RESULT} = [{'diff': 7.866599999999807e-05}, {'diff': 7.945799999999753e-05}, {'diff': 7.940199999999925e-05}, {'diff': 7.877699999999516e-05}, {'diff': 7.870799999999678e-05}, {'diff': 7.856900000000056e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:28.357" endtime="20201029 18:16:28.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.377" level="INFO">${ACCURACY} = {'diff': [7.866599999999807e-05, 7.945799999999753e-05, 7.940199999999925e-05, 7.877699999999516e-05, 7.870799999999678e-05, 7.856900000000056e-05, 7.854200000000089e-05, 7.877800000000157e-05, 7.8570...</msg>
<status status="PASS" starttime="20201029 18:16:28.369" endtime="20201029 18:16:28.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.388" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.386" endtime="20201029 18:16:28.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.393" level="INFO">VALUE: [7.866599999999807e-05, 7.945799999999753e-05, 7.940199999999925e-05, 7.877699999999516e-05, 7.870799999999678e-05, 7.856900000000056e-05, 7.854200000000089e-05, 7.877800000000157e-05, 7.857000000000003e-05, 7.865299999999797e-05, 7.877800000000157e-05, 7.944499999999743e-05, 7.933400000000035e-05, 7.911199999999924e-05, 7.945799999999753e-05, 7.868000000000458e-05, 7.945799999999753e-05, 7.877800000000157e-05, 7.879200000000114e-05, 7.938899999999915e-05, 7.855600000000046e-05, 7.890299999999822e-05, 7.902800000000182e-05, 7.884699999999994e-05, 7.866700000000448e-05, 7.905500000000149e-05, 7.857000000000003e-05, 7.94310000000048e-05, 7.854100000000142e-05, 7.945799999999753e-05, 7.866600000000501e-05, 7.925000000000293e-05, 7.858300000000012e-05, 7.890299999999822e-05, 7.856900000000056e-05, 7.901400000000225e-05, 7.90970000000002e-05, 7.907000000000053e-05, 7.890299999999822e-05, 7.920900000000369e-05, 7.923700000000283e-05, 7.879100000000167e-05, 7.93190000000013e-05, 7.879100000000167e-05, 7.945799999999753e-05, 7.933300000000088e-05, 7.94440000000049e-05, 7.868100000000405e-05, 7.890299999999822e-05, 7.890300000000516e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.390" endtime="20201029 18:16:28.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.379" endtime="20201029 18:16:28.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.406" endtime="20201029 18:16:28.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.401" endtime="20201029 18:16:28.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.399" endtime="20201029 18:16:28.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.909" endtime="20201029 18:16:28.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.908" endtime="20201029 18:16:28.431"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.453" endtime="20201029 18:16:28.475"></status>
</kw>
<msg timestamp="20201029 18:16:28.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.450" endtime="20201029 18:16:28.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.478" endtime="20201029 18:16:28.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.485" endtime="20201029 18:16:28.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.443" endtime="20201029 18:16:28.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.437" endtime="20201029 18:16:28.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.508" endtime="20201029 18:16:28.844"></status>
</kw>
<msg timestamp="20201029 18:16:28.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041231819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041311819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.505" endtime="20201029 18:16:28.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041231819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041311819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.854" endtime="20201029 18:16:28.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.872" endtime="20201029 18:16:28.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.498" endtime="20201029 18:16:28.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.493" endtime="20201029 18:16:28.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.889" level="INFO">${RESULT} = [{'diff': 7.999999999999674e-05}, {'diff': 7.990299999999922e-05}, {'diff': 8.034700000000145e-05}, {'diff': 8.03190000000023e-05}, {'diff': 8.023600000000436e-05}, {'diff': 8.002800000000282e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:28.880" endtime="20201029 18:16:28.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.904" level="INFO">${ACCURACY} = {'diff': [7.999999999999674e-05, 7.990299999999922e-05, 8.034700000000145e-05, 8.03190000000023e-05, 8.023600000000436e-05, 8.002800000000282e-05, 8.00970000000012e-05, 8.034700000000145e-05, 8.032000...</msg>
<status status="PASS" starttime="20201029 18:16:28.891" endtime="20201029 18:16:28.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.915" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.913" endtime="20201029 18:16:28.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.920" level="INFO">VALUE: [7.999999999999674e-05, 7.990299999999922e-05, 8.034700000000145e-05, 8.03190000000023e-05, 8.023600000000436e-05, 8.002800000000282e-05, 8.00970000000012e-05, 8.034700000000145e-05, 8.032000000000178e-05, 7.987500000000008e-05, 8.033400000000135e-05, 7.95840000000006e-05, 7.987500000000008e-05, 7.991599999999932e-05, 7.958300000000113e-05, 7.988899999999965e-05, 8.023600000000436e-05, 8.049999999999724e-05, 7.977800000000257e-05, 7.977800000000257e-05, 8.038900000000015e-05, 8.045799999999853e-05, 8.036100000000101e-05, 7.990299999999922e-05, 7.965299999999897e-05, 8.027800000000307e-05, 7.980500000000224e-05, 8.033300000000188e-05, 7.967999999999864e-05, 8.02640000000035e-05, 8.00970000000012e-05, 7.969399999999821e-05, 7.979200000000214e-05, 7.997200000000454e-05, 7.988899999999965e-05, 7.966699999999854e-05, 7.965299999999897e-05, 7.966699999999854e-05, 7.976300000000353e-05, 8.0458999999998e-05, 8.011200000000024e-05, 8.029100000000317e-05, 8.012500000000033e-05, 7.954100000000242e-05, 7.956899999999462e-05, 7.956900000000156e-05, 8.022199999999785e-05, 8.01249999999934e-05, 7.987500000000008e-05, 7.958300000000113e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.917" endtime="20201029 18:16:28.922"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.906" endtime="20201029 18:16:28.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.933" endtime="20201029 18:16:28.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.928" endtime="20201029 18:16:28.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.926" endtime="20201029 18:16:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.433" endtime="20201029 18:16:28.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.432" endtime="20201029 18:16:28.959"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.983" endtime="20201029 18:16:29.005"></status>
</kw>
<msg timestamp="20201029 18:16:29.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.979" endtime="20201029 18:16:29.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.008" endtime="20201029 18:16:29.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.014" endtime="20201029 18:16:29.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.972" endtime="20201029 18:16:29.020"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.966" endtime="20201029 18:16:29.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.037" endtime="20201029 18:16:29.375"></status>
</kw>
<msg timestamp="20201029 18:16:29.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043618958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.034" endtime="20201029 18:16:29.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043537958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043618958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.384" endtime="20201029 18:16:29.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.403" endtime="20201029 18:16:29.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.027" endtime="20201029 18:16:29.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.022" endtime="20201029 18:16:29.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.420" level="INFO">${RESULT} = [{'diff': 8.099999999999774e-05}, {'diff': 8.138900000000115e-05}, {'diff': 8.145800000000647e-05}, {'diff': 8.143000000000039e-05}, {'diff': 8.055499999999605e-05}, {'diff': 8.080599999999577e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:29.411" endtime="20201029 18:16:29.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.429" level="INFO">${ACCURACY} = {'diff': [8.099999999999774e-05, 8.138900000000115e-05, 8.145800000000647e-05, 8.143000000000039e-05, 8.055499999999605e-05, 8.080599999999577e-05, 8.11390000000009e-05, 8.077799999999663e-05, 8.06809...</msg>
<status status="PASS" starttime="20201029 18:16:29.422" endtime="20201029 18:16:29.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.440" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.438" endtime="20201029 18:16:29.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.446" level="INFO">VALUE: [8.099999999999774e-05, 8.138900000000115e-05, 8.145800000000647e-05, 8.143000000000039e-05, 8.055499999999605e-05, 8.080599999999577e-05, 8.11390000000009e-05, 8.077799999999663e-05, 8.068099999999911e-05, 8.090300000000022e-05, 8.065299999999997e-05, 8.111200000000124e-05, 8.056900000000256e-05, 8.122199999999885e-05, 8.077800000000357e-05, 8.124999999999799e-05, 8.054100000000342e-05, 8.144399999999996e-05, 8.112500000000133e-05, 8.055600000000246e-05, 8.08190000000028e-05, 8.124999999999799e-05, 8.134800000000192e-05, 8.098600000000511e-05, 8.05970000000017e-05, 8.090200000000075e-05, 8.122199999999885e-05, 8.143000000000039e-05, 8.056900000000256e-05, 8.088900000000065e-05, 8.055500000000299e-05, 8.145799999999953e-05, 8.111099999999483e-05, 8.069499999999868e-05, 8.10840000000021e-05, 8.133400000000235e-05, 8.122299999999832e-05, 8.136100000000202e-05, 8.099999999999774e-05, 8.101299999999784e-05, 8.11390000000009e-05, 8.10970000000022e-05, 8.112500000000133e-05, 8.108299999999569e-05, 8.077800000000357e-05, 8.10970000000022e-05, 8.122199999999885e-05, 8.080599999999577e-05, 8.111100000000177e-05, 8.133400000000235e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.443" endtime="20201029 18:16:29.447"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.431" endtime="20201029 18:16:29.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.458" endtime="20201029 18:16:29.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.454" endtime="20201029 18:16:29.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.451" endtime="20201029 18:16:29.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.962" endtime="20201029 18:16:29.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.960" endtime="20201029 18:16:29.483"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.506" endtime="20201029 18:16:29.529"></status>
</kw>
<msg timestamp="20201029 18:16:29.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.502" endtime="20201029 18:16:29.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.532" endtime="20201029 18:16:29.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.538" endtime="20201029 18:16:29.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.495" endtime="20201029 18:16:29.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.489" endtime="20201029 18:16:29.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.555" endtime="20201029 18:16:29.857"></status>
</kw>
<msg timestamp="20201029 18:16:29.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0424355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:29.553" endtime="20201029 18:16:29.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0424355, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:29.867" endtime="20201029 18:16:29.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.886" endtime="20201029 18:16:29.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.550" endtime="20201029 18:16:29.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.546" endtime="20201029 18:16:29.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.903" level="INFO">${RESULT} = [{'diff': 8.209699999999626e-05}, {'diff': 8.190299999999429e-05}, {'diff': 8.211099999999583e-05}, {'diff': 8.202799999999788e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.154199999999695e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:29.894" endtime="20201029 18:16:29.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.912" level="INFO">${ACCURACY} = {'diff': [8.209699999999626e-05, 8.190299999999429e-05, 8.211099999999583e-05, 8.202799999999788e-05, 8.223599999999942e-05, 8.154199999999695e-05, 8.212500000000234e-05, 8.168100000000011e-05, 8.2014...</msg>
<status status="PASS" starttime="20201029 18:16:29.905" endtime="20201029 18:16:29.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.923" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.921" endtime="20201029 18:16:29.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.928" level="INFO">VALUE: [8.209699999999626e-05, 8.190299999999429e-05, 8.211099999999583e-05, 8.202799999999788e-05, 8.223599999999942e-05, 8.154199999999695e-05, 8.212500000000234e-05, 8.168100000000011e-05, 8.201400000000525e-05, 8.234799999999598e-05, 8.155499999999705e-05, 8.17770000000051e-05, 8.169400000000021e-05, 8.152800000000432e-05, 8.198600000000611e-05, 8.158300000000313e-05, 8.23469999999965e-05, 8.244400000000096e-05, 8.244500000000043e-05, 8.211100000000277e-05, 8.244500000000043e-05, 8.148600000000561e-05, 8.222299999999932e-05, 8.159699999999576e-05, 8.211100000000277e-05, 8.18049999999973e-05, 8.233300000000388e-05, 8.155499999999705e-05, 8.17919999999972e-05, 8.177799999999763e-05, 8.199999999999874e-05, 8.244500000000043e-05, 8.177799999999763e-05, 8.155600000000346e-05, 8.194400000000046e-05, 8.223599999999942e-05, 8.222199999999985e-05, 8.211099999999583e-05, 8.223599999999942e-05, 8.227800000000507e-05, 8.212500000000234e-05, 8.168000000000064e-05, 8.218100000000061e-05, 8.215300000000147e-05, 8.190300000000122e-05, 8.222199999999985e-05, 8.233400000000335e-05, 8.155600000000346e-05, 8.21249999999954e-05, 8.21119999999953e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.925" endtime="20201029 18:16:29.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.914" endtime="20201029 18:16:29.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.942" endtime="20201029 18:16:29.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.936" endtime="20201029 18:16:29.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.934" endtime="20201029 18:16:29.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.485" endtime="20201029 18:16:29.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.484" endtime="20201029 18:16:29.967"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.990" endtime="20201029 18:16:30.011"></status>
</kw>
<msg timestamp="20201029 18:16:30.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.986" endtime="20201029 18:16:30.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.015" endtime="20201029 18:16:30.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.021" endtime="20201029 18:16:30.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.979" endtime="20201029 18:16:30.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.973" endtime="20201029 18:16:30.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.045" endtime="20201029 18:16:30.381"></status>
</kw>
<msg timestamp="20201029 18:16:30.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041000958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.041" endtime="20201029 18:16:30.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041000958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041084069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.391" endtime="20201029 18:16:30.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.410" endtime="20201029 18:16:30.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.034" endtime="20201029 18:16:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.029" endtime="20201029 18:16:30.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.428" level="INFO">${RESULT} = [{'diff': 8.311100000000377e-05}, {'diff': 8.291600000000232e-05}, {'diff': 8.268000000000164e-05}, {'diff': 8.252800000000532e-05}, {'diff': 8.324999999999999e-05}, {'diff': 8.348600000000067e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:30.419" endtime="20201029 18:16:30.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.439" level="INFO">${ACCURACY} = {'diff': [8.311100000000377e-05, 8.291600000000232e-05, 8.268000000000164e-05, 8.252800000000532e-05, 8.324999999999999e-05, 8.348600000000067e-05, 8.301399999999931e-05, 8.302799999999888e-05, 8.3361...</msg>
<status status="PASS" starttime="20201029 18:16:30.430" endtime="20201029 18:16:30.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.450" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.447" endtime="20201029 18:16:30.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.455" level="INFO">VALUE: [8.311100000000377e-05, 8.291600000000232e-05, 8.268000000000164e-05, 8.252800000000532e-05, 8.324999999999999e-05, 8.348600000000067e-05, 8.301399999999931e-05, 8.302799999999888e-05, 8.336100000000402e-05, 8.290299999999529e-05, 8.323600000000042e-05, 8.276399999999906e-05, 8.270800000000078e-05, 8.323600000000042e-05, 8.344400000000196e-05, 8.255499999999805e-05, 8.31390000000029e-05, 8.311099999999683e-05, 8.301399999999931e-05, 8.323599999999348e-05, 8.288900000000265e-05, 8.333300000000488e-05, 8.25840000000036e-05, 8.262500000000284e-05, 8.344500000000143e-05, 8.301299999999984e-05, 8.322199999999391e-05, 8.279100000000567e-05, 8.294500000000093e-05, 8.268000000000164e-05, 8.27919999999982e-05, 8.288899999999572e-05, 8.33469999999975e-05, 8.301399999999931e-05, 8.302800000000582e-05, 8.268099999999418e-05, 8.268100000000111e-05, 8.311100000000377e-05, 8.299999999999974e-05, 8.290200000000275e-05, 8.298600000000017e-05, 8.344400000000196e-05, 8.352799999999938e-05, 8.324999999999999e-05, 8.280500000000524e-05, 8.345800000000153e-05, 8.283400000000385e-05, 8.268100000000111e-05, 8.347299999999364e-05, 8.347300000000057e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.452" endtime="20201029 18:16:30.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.441" endtime="20201029 18:16:30.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.468" endtime="20201029 18:16:30.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.463" endtime="20201029 18:16:30.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.461" endtime="20201029 18:16:30.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.969" endtime="20201029 18:16:30.492"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.968" endtime="20201029 18:16:30.492"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.515" endtime="20201029 18:16:30.537"></status>
</kw>
<msg timestamp="20201029 18:16:30.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.512" endtime="20201029 18:16:30.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.540" endtime="20201029 18:16:30.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.547" endtime="20201029 18:16:30.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.505" endtime="20201029 18:16:30.552"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.499" endtime="20201029 18:16:30.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.570" endtime="20201029 18:16:30.906"></status>
</kw>
<msg timestamp="20201029 18:16:30.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041043681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041127208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.567" endtime="20201029 18:16:30.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041043681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041127208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.915" endtime="20201029 18:16:30.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.934" endtime="20201029 18:16:30.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.559" endtime="20201029 18:16:30.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.555" endtime="20201029 18:16:30.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.951" level="INFO">${RESULT} = [{'diff': 8.352699999999991e-05}, {'diff': 8.433299999999894e-05}, {'diff': 8.372200000000135e-05}, {'diff': 8.369500000000168e-05}, {'diff': 8.377799999999963e-05}, {'diff': 8.390300000000323e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:30.942" endtime="20201029 18:16:30.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.962" level="INFO">${ACCURACY} = {'diff': [8.352699999999991e-05, 8.433299999999894e-05, 8.372200000000135e-05, 8.369500000000168e-05, 8.377799999999963e-05, 8.390300000000323e-05, 8.368099999999518e-05, 8.434799999999798e-05, 8.3806...</msg>
<status status="PASS" starttime="20201029 18:16:30.953" endtime="20201029 18:16:30.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.973" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.971" endtime="20201029 18:16:30.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.979" level="INFO">VALUE: [8.352699999999991e-05, 8.433299999999894e-05, 8.372200000000135e-05, 8.369500000000168e-05, 8.377799999999963e-05, 8.390300000000323e-05, 8.368099999999518e-05, 8.434799999999798e-05, 8.380600000000571e-05, 8.355599999999852e-05, 8.44720000000021e-05, 8.377700000000016e-05, 8.36669999999956e-05, 8.379099999999973e-05, 8.445800000000253e-05, 8.400000000000074e-05, 8.402799999999988e-05, 8.354199999999895e-05, 8.44449999999955e-05, 8.443100000000286e-05, 8.361099999999733e-05, 8.351399999999981e-05, 8.368000000000264e-05, 8.356899999999862e-05, 8.411099999999783e-05, 8.379100000000667e-05, 8.405499999999955e-05, 8.388900000000366e-05, 8.401400000000031e-05, 8.400000000000074e-05, 8.433299999999894e-05, 8.400000000000074e-05, 8.368099999999518e-05, 8.419500000000218e-05, 8.37919999999992e-05, 8.356899999999862e-05, 8.43469999999985e-05, 8.376300000000059e-05, 8.402799999999988e-05, 8.38049999999993e-05, 8.41249999999974e-05, 8.404199999999945e-05, 8.356899999999862e-05, 8.413899999999697e-05, 8.388899999999672e-05, 8.426400000000056e-05, 8.37919999999992e-05, 8.377799999999963e-05, 8.376400000000006e-05, 8.36799999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.976" endtime="20201029 18:16:30.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.964" endtime="20201029 18:16:30.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.991" endtime="20201029 18:16:31.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.987" endtime="20201029 18:16:31.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.984" endtime="20201029 18:16:31.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.495" endtime="20201029 18:16:31.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.493" endtime="20201029 18:16:31.016"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.039" endtime="20201029 18:16:31.061"></status>
</kw>
<msg timestamp="20201029 18:16:31.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.035" endtime="20201029 18:16:31.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.064" endtime="20201029 18:16:31.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.070" endtime="20201029 18:16:31.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.028" endtime="20201029 18:16:31.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.022" endtime="20201029 18:16:31.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.094" endtime="20201029 18:16:31.430"></status>
</kw>
<msg timestamp="20201029 18:16:31.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.090" endtime="20201029 18:16:31.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041368472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041453431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.440" endtime="20201029 18:16:31.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.459" endtime="20201029 18:16:31.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.083" endtime="20201029 18:16:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.079" endtime="20201029 18:16:31.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.477" level="INFO">${RESULT} = [{'diff': 8.495899999999557e-05}, {'diff': 8.525000000000199e-05}, {'diff': 8.490199999999781e-05}, {'diff': 8.466599999999713e-05}, {'diff': 8.455500000000005e-05}, {'diff': 8.47920000000002e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:31.468" endtime="20201029 18:16:31.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.486" level="INFO">${ACCURACY} = {'diff': [8.495899999999557e-05, 8.525000000000199e-05, 8.490199999999781e-05, 8.466599999999713e-05, 8.455500000000005e-05, 8.47920000000002e-05, 8.480599999999977e-05, 8.465299999999704e-05, 8.53469...</msg>
<status status="PASS" starttime="20201029 18:16:31.479" endtime="20201029 18:16:31.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.497" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.495" endtime="20201029 18:16:31.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.503" level="INFO">VALUE: [8.495899999999557e-05, 8.525000000000199e-05, 8.490199999999781e-05, 8.466599999999713e-05, 8.455500000000005e-05, 8.47920000000002e-05, 8.480599999999977e-05, 8.465299999999704e-05, 8.53469999999995e-05, 8.511099999999883e-05, 8.480599999999977e-05, 8.51249999999984e-05, 8.515299999999754e-05, 8.454199999999995e-05, 8.49999999999948e-05, 8.545800000000353e-05, 8.455500000000005e-05, 8.544400000000396e-05, 8.536099999999908e-05, 8.475000000000149e-05, 8.531900000000037e-05, 8.523600000000242e-05, 8.47920000000002e-05, 8.472200000000235e-05, 8.476400000000106e-05, 8.498599999999523e-05, 8.50129999999949e-05, 8.479099999999379e-05, 8.509699999999926e-05, 8.465299999999704e-05, 8.480599999999977e-05, 8.511099999999883e-05, 8.49170000000038e-05, 8.53469999999995e-05, 8.5459000000003e-05, 8.456999999999909e-05, 8.493000000000389e-05, 8.545899999999607e-05, 8.500000000000174e-05, 8.502700000000141e-05, 8.46799999999967e-05, 8.511099999999883e-05, 8.46669999999966e-05, 8.513899999999797e-05, 8.508299999999969e-05, 8.523599999999548e-05, 8.53469999999995e-05, 8.5459000000003e-05, 8.525000000000199e-05, 8.501400000000131e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.500" endtime="20201029 18:16:31.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.488" endtime="20201029 18:16:31.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.515" endtime="20201029 18:16:31.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.511" endtime="20201029 18:16:31.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.508" endtime="20201029 18:16:31.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.018" endtime="20201029 18:16:31.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.017" endtime="20201029 18:16:31.540"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.563" endtime="20201029 18:16:31.587"></status>
</kw>
<msg timestamp="20201029 18:16:31.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.559" endtime="20201029 18:16:31.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.590" endtime="20201029 18:16:31.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.597" endtime="20201029 18:16:31.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.552" endtime="20201029 18:16:31.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.547" endtime="20201029 18:16:31.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.620" endtime="20201029 18:16:31.963"></status>
</kw>
<msg timestamp="20201029 18:16:31.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042577153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04266325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:31.616" endtime="20201029 18:16:31.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042577153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04266325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:31.975" endtime="20201029 18:16:31.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.994" endtime="20201029 18:16:31.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.609" endtime="20201029 18:16:31.999"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.605" endtime="20201029 18:16:32.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.012" level="INFO">${RESULT} = [{'diff': 8.609700000000026e-05}, {'diff': 8.555600000000052e-05}, {'diff': 8.622199999999691e-05}, {'diff': 8.61249999999994e-05}, {'diff': 8.5847e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.61...</msg>
<status status="PASS" starttime="20201029 18:16:32.003" endtime="20201029 18:16:32.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.021" level="INFO">${ACCURACY} = {'diff': [8.609700000000026e-05, 8.555600000000052e-05, 8.622199999999691e-05, 8.61249999999994e-05, 8.5847e-05, 8.557000000000009e-05, 8.618099999999768e-05, 8.623600000000342e-05, 8.608300000000069e...</msg>
<status status="PASS" starttime="20201029 18:16:32.014" endtime="20201029 18:16:32.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.032" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.030" endtime="20201029 18:16:32.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.038" level="INFO">VALUE: [8.609700000000026e-05, 8.555600000000052e-05, 8.622199999999691e-05, 8.61249999999994e-05, 8.5847e-05, 8.557000000000009e-05, 8.618099999999768e-05, 8.623600000000342e-05, 8.608300000000069e-05, 8.59999999999958e-05, 8.588899999999872e-05, 8.569399999999727e-05, 8.601400000000231e-05, 8.554199999999401e-05, 8.613899999999897e-05, 8.601399999999537e-05, 8.588899999999872e-05, 8.633400000000041e-05, 8.6459000000004e-05, 8.556900000000062e-05, 8.579100000000173e-05, 8.601400000000231e-05, 8.645899999999707e-05, 8.555499999999411e-05, 8.644399999999802e-05, 8.555600000000052e-05, 8.568099999999718e-05, 8.569499999999675e-05, 8.64720000000041e-05, 8.588899999999872e-05, 8.59999999999958e-05, 8.640299999999879e-05, 8.645799999999759e-05, 8.645799999999759e-05, 8.609700000000026e-05, 8.579100000000173e-05, 8.556900000000062e-05, 8.590299999999829e-05, 8.623600000000342e-05, 8.63470000000005e-05, 8.57920000000012e-05, 8.568100000000411e-05, 8.566700000000455e-05, 8.566700000000455e-05, 8.588899999999872e-05, 8.570800000000378e-05, 8.61669999999981e-05, 8.608300000000069e-05, 8.63470000000005e-05, 8.633300000000094e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.035" endtime="20201029 18:16:32.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.023" endtime="20201029 18:16:32.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.052" endtime="20201029 18:16:32.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.046" endtime="20201029 18:16:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.044" endtime="20201029 18:16:32.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.542" endtime="20201029 18:16:32.077"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.541" endtime="20201029 18:16:32.077"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.100" endtime="20201029 18:16:32.123"></status>
</kw>
<msg timestamp="20201029 18:16:32.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.097" endtime="20201029 18:16:32.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.126" endtime="20201029 18:16:32.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.132" endtime="20201029 18:16:32.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.090" endtime="20201029 18:16:32.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.084" endtime="20201029 18:16:32.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.156" endtime="20201029 18:16:32.498"></status>
</kw>
<msg timestamp="20201029 18:16:32.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.153" endtime="20201029 18:16:32.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042462694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.508" endtime="20201029 18:16:32.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.527" endtime="20201029 18:16:32.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.146" endtime="20201029 18:16:32.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.141" endtime="20201029 18:16:32.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.545" level="INFO">${RESULT} = [{'diff': 8.709700000000126e-05}, {'diff': 8.688899999999972e-05}, {'diff': 8.679099999999579e-05}, {'diff': 8.73470000000015e-05}, {'diff': 8.692999999999895e-05}, {'diff': 8.657000000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:32.536" endtime="20201029 18:16:32.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.555" level="INFO">${ACCURACY} = {'diff': [8.709700000000126e-05, 8.688899999999972e-05, 8.679099999999579e-05, 8.73470000000015e-05, 8.692999999999895e-05, 8.657000000000109e-05, 8.67920000000022e-05, 8.734699999999457e-05, 8.688899...</msg>
<status status="PASS" starttime="20201029 18:16:32.547" endtime="20201029 18:16:32.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.566" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.564" endtime="20201029 18:16:32.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.572" level="INFO">VALUE: [8.709700000000126e-05, 8.688899999999972e-05, 8.679099999999579e-05, 8.73470000000015e-05, 8.692999999999895e-05, 8.657000000000109e-05, 8.67920000000022e-05, 8.734699999999457e-05, 8.688899999999972e-05, 8.690299999999929e-05, 8.663899999999947e-05, 8.690199999999981e-05, 8.691600000000632e-05, 8.668000000000564e-05, 8.683300000000144e-05, 8.742999999999945e-05, 8.723599999999748e-05, 8.74999999999973e-05, 8.733300000000194e-05, 8.698600000000417e-05, 8.668099999999818e-05, 8.7459000000005e-05, 8.71120000000003e-05, 8.748600000000467e-05, 8.66799999999987e-05, 8.658300000000119e-05, 8.711100000000083e-05, 8.669399999999827e-05, 8.71669999999991e-05, 8.676400000000306e-05, 8.731900000000237e-05, 8.73470000000015e-05, 8.670900000000425e-05, 8.722199999999791e-05, 8.711100000000083e-05, 8.744500000000544e-05, 8.669399999999827e-05, 8.69999999999968e-05, 8.672199999999741e-05, 8.711100000000083e-05, 8.651400000000281e-05, 8.66669999999986e-05, 8.744400000000596e-05, 8.66249999999999e-05, 8.701399999999637e-05, 8.687500000000015e-05, 8.661100000000033e-05, 8.736100000000108e-05, 8.676400000000306e-05, 8.665199999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.569" endtime="20201029 18:16:32.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.557" endtime="20201029 18:16:32.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.585" endtime="20201029 18:16:32.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.580" endtime="20201029 18:16:32.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.578" endtime="20201029 18:16:32.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.079" endtime="20201029 18:16:32.610"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.078" endtime="20201029 18:16:32.610"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.633" endtime="20201029 18:16:32.655"></status>
</kw>
<msg timestamp="20201029 18:16:32.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.630" endtime="20201029 18:16:32.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.659" endtime="20201029 18:16:32.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.665" endtime="20201029 18:16:32.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.622" endtime="20201029 18:16:32.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.616" endtime="20201029 18:16:32.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.689" endtime="20201029 18:16:33.032"></status>
</kw>
<msg timestamp="20201029 18:16:33.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.686" endtime="20201029 18:16:33.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041855986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.041" endtime="20201029 18:16:33.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.060" endtime="20201029 18:16:33.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.678" endtime="20201029 18:16:33.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.673" endtime="20201029 18:16:33.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.077" level="INFO">${RESULT} = [{'diff': 8.775000000000449e-05}, {'diff': 8.754100000000348e-05}, {'diff': 8.758300000000219e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.826400000000456e-05}, {'diff': 8.793100000000637e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:33.068" endtime="20201029 18:16:33.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.089" level="INFO">${ACCURACY} = {'diff': [8.775000000000449e-05, 8.754100000000348e-05, 8.758300000000219e-05, 8.787500000000115e-05, 8.826400000000456e-05, 8.793100000000637e-05, 8.823599999999848e-05, 8.801400000000431e-05, 8.8444...</msg>
<status status="PASS" starttime="20201029 18:16:33.079" endtime="20201029 18:16:33.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.100" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.098" endtime="20201029 18:16:33.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.105" level="INFO">VALUE: [8.775000000000449e-05, 8.754100000000348e-05, 8.758300000000219e-05, 8.787500000000115e-05, 8.826400000000456e-05, 8.793100000000637e-05, 8.823599999999848e-05, 8.801400000000431e-05, 8.84449999999995e-05, 8.823699999999796e-05, 8.786100000000158e-05, 8.758300000000219e-05, 8.755500000000305e-05, 8.822199999999891e-05, 8.758300000000219e-05, 8.840300000000079e-05, 8.844400000000002e-05, 8.81800000000002e-05, 8.790300000000029e-05, 8.833400000000241e-05, 8.827799999999719e-05, 8.791600000000038e-05, 8.831900000000337e-05, 8.834699999999557e-05, 8.79720000000056e-05, 8.811099999999489e-05, 8.840300000000079e-05, 8.76669999999996e-05, 8.822199999999891e-05, 8.802800000000388e-05, 8.768099999999918e-05, 8.776400000000406e-05, 8.788900000000072e-05, 8.823699999999796e-05, 8.812499999999446e-05, 8.845799999999959e-05, 8.791600000000038e-05, 8.755499999999611e-05, 8.76799999999997e-05, 8.77920000000032e-05, 8.811100000000183e-05, 8.774999999999755e-05, 8.787500000000115e-05, 8.801400000000431e-05, 8.834800000000198e-05, 8.822299999999839e-05, 8.80129999999979e-05, 8.81250000000014e-05, 8.847199999999916e-05, 8.823600000000542e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.102" endtime="20201029 18:16:33.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.091" endtime="20201029 18:16:33.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.118" endtime="20201029 18:16:33.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.114" endtime="20201029 18:16:33.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.111" endtime="20201029 18:16:33.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.612" endtime="20201029 18:16:33.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.611" endtime="20201029 18:16:33.143"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.166" endtime="20201029 18:16:33.188"></status>
</kw>
<msg timestamp="20201029 18:16:33.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.163" endtime="20201029 18:16:33.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.192" endtime="20201029 18:16:33.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.198" endtime="20201029 18:16:33.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.155" endtime="20201029 18:16:33.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.150" endtime="20201029 18:16:33.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.222" endtime="20201029 18:16:33.566"></status>
</kw>
<msg timestamp="20201029 18:16:33.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.218" endtime="20201029 18:16:33.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041754181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.575" endtime="20201029 18:16:33.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.594" endtime="20201029 18:16:33.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.211" endtime="20201029 18:16:33.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.206" endtime="20201029 18:16:33.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.612" level="INFO">${RESULT} = [{'diff': 8.88879999999953e-05}, {'diff': 8.890200000000181e-05}, {'diff': 8.911100000000283e-05}, {'diff': 8.89999999999988e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.865300000000104e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:33.603" endtime="20201029 18:16:33.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.621" level="INFO">${ACCURACY} = {'diff': [8.88879999999953e-05, 8.890200000000181e-05, 8.911100000000283e-05, 8.89999999999988e-05, 8.913900000000197e-05, 8.865300000000104e-05, 8.89999999999988e-05, 8.934700000000351e-05, 8.8694999...</msg>
<status status="PASS" starttime="20201029 18:16:33.614" endtime="20201029 18:16:33.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.632" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.630" endtime="20201029 18:16:33.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.638" level="INFO">VALUE: [8.88879999999953e-05, 8.890200000000181e-05, 8.911100000000283e-05, 8.89999999999988e-05, 8.913900000000197e-05, 8.865300000000104e-05, 8.89999999999988e-05, 8.934700000000351e-05, 8.869499999999975e-05, 8.877800000000463e-05, 8.856999999999615e-05, 8.924999999999905e-05, 8.890199999999487e-05, 8.863800000000199e-05, 8.865200000000156e-05, 8.874999999999855e-05, 8.888899999999478e-05, 8.922199999999991e-05, 8.857000000000309e-05, 8.891699999999392e-05, 8.873600000000592e-05, 8.866699999999367e-05, 8.86670000000006e-05, 8.881899999999693e-05, 8.936100000000308e-05, 8.870800000000678e-05, 8.911099999999589e-05, 8.884700000000301e-05, 8.922199999999991e-05, 8.89999999999988e-05, 8.877799999999769e-05, 8.933300000000394e-05, 8.933300000000394e-05, 8.945900000000007e-05, 8.923599999999948e-05, 8.868100000000018e-05, 8.89999999999988e-05, 8.891600000000138e-05, 8.879100000000473e-05, 8.879099999999779e-05, 8.933300000000394e-05, 8.933300000000394e-05, 8.952699999999897e-05, 8.906900000000412e-05, 8.927699999999872e-05, 8.94450000000005e-05, 8.925000000000599e-05, 8.913899999999503e-05, 8.879099999999779e-05, 8.8945e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.635" endtime="20201029 18:16:33.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.623" endtime="20201029 18:16:33.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.650" endtime="20201029 18:16:33.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.646" endtime="20201029 18:16:33.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.644" endtime="20201029 18:16:33.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.145" endtime="20201029 18:16:33.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.144" endtime="20201029 18:16:33.675"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.699" endtime="20201029 18:16:33.727"></status>
</kw>
<msg timestamp="20201029 18:16:33.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.695" endtime="20201029 18:16:33.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.730" endtime="20201029 18:16:33.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.737" endtime="20201029 18:16:33.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.688" endtime="20201029 18:16:33.742"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.682" endtime="20201029 18:16:33.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.760" endtime="20201029 18:16:34.103"></status>
</kw>
<msg timestamp="20201029 18:16:34.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047967792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048058125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.757" endtime="20201029 18:16:34.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047967792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048058125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.112" endtime="20201029 18:16:34.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.132" endtime="20201029 18:16:34.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.750" endtime="20201029 18:16:34.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.745" endtime="20201029 18:16:34.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.149" level="INFO">${RESULT} = [{'diff': 9.0332999999998e-05}, {'diff': 8.995900000000057e-05}, {'diff': 9.045800000000159e-05}, {'diff': 9.013899999999603e-05}, {'diff': 8.956899999999768e-05}, {'diff': 9.01120000000033e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:34.140" endtime="20201029 18:16:34.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.158" level="INFO">${ACCURACY} = {'diff': [9.0332999999998e-05, 8.995900000000057e-05, 9.045800000000159e-05, 9.013899999999603e-05, 8.956899999999768e-05, 9.01120000000033e-05, 8.961099999999639e-05, 9.045800000000159e-05, 9.0236000...</msg>
<status status="PASS" starttime="20201029 18:16:34.151" endtime="20201029 18:16:34.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.169" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.167" endtime="20201029 18:16:34.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.175" level="INFO">VALUE: [9.0332999999998e-05, 8.995900000000057e-05, 9.045800000000159e-05, 9.013899999999603e-05, 8.956899999999768e-05, 9.01120000000033e-05, 8.961099999999639e-05, 9.045800000000159e-05, 9.023600000000048e-05, 8.990300000000229e-05, 9.001399999999937e-05, 9.008299999999775e-05, 8.969500000000075e-05, 8.988900000000272e-05, 9.041700000000236e-05, 8.974999999999955e-05, 8.956899999999768e-05, 8.979199999999826e-05, 9.030599999999833e-05, 9.004100000000598e-05, 8.963900000000247e-05, 8.998600000000023e-05, 8.970800000000084e-05, 9.030499999999886e-05, 8.976399999999912e-05, 9.022199999999397e-05, 8.958399999999672e-05, 9.045899999999413e-05, 8.958399999999672e-05, 8.972199999999347e-05, 8.957000000000409e-05, 8.983300000000444e-05, 9.001399999999937e-05, 8.969400000000127e-05, 8.988900000000272e-05, 8.96800000000017e-05, 8.990300000000229e-05, 9.04450000000015e-05, 9.034699999999757e-05, 9.023600000000048e-05, 8.990300000000229e-05, 8.955599999999758e-05, 8.976399999999912e-05, 9.004099999999904e-05, 9.011100000000383e-05, 9.009700000000426e-05, 9.054199999999901e-05, 8.96250000000029e-05, 8.963899999999553e-05, 9.011099999999689e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.172" endtime="20201029 18:16:34.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.160" endtime="20201029 18:16:34.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.189" endtime="20201029 18:16:34.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.183" endtime="20201029 18:16:34.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.181" endtime="20201029 18:16:34.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.678" endtime="20201029 18:16:34.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.676" endtime="20201029 18:16:34.214"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.238" endtime="20201029 18:16:34.260"></status>
</kw>
<msg timestamp="20201029 18:16:34.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.234" endtime="20201029 18:16:34.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.264" endtime="20201029 18:16:34.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.270" endtime="20201029 18:16:34.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.227" endtime="20201029 18:16:34.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.221" endtime="20201029 18:16:34.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.294" endtime="20201029 18:16:34.638"></status>
</kw>
<msg timestamp="20201029 18:16:34.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041845861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.290" endtime="20201029 18:16:34.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041755208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041845861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.647" endtime="20201029 18:16:34.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.666" endtime="20201029 18:16:34.670"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.283" endtime="20201029 18:16:34.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.278" endtime="20201029 18:16:34.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.684" level="INFO">${RESULT} = [{'diff': 9.06529999999961e-05}, {'diff': 9.056899999999868e-05}, {'diff': 9.122199999999497e-05}, {'diff': 9.145799999999565e-05}, {'diff': 9.111100000000483e-05}, {'diff': 9.125000000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:34.675" endtime="20201029 18:16:34.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.694" level="INFO">${ACCURACY} = {'diff': [9.06529999999961e-05, 9.056899999999868e-05, 9.122199999999497e-05, 9.145799999999565e-05, 9.111100000000483e-05, 9.125000000000105e-05, 9.133399999999847e-05, 9.111199999999736e-05, 9.06940...</msg>
<status status="PASS" starttime="20201029 18:16:34.686" endtime="20201029 18:16:34.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.706" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.703" endtime="20201029 18:16:34.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.711" level="INFO">VALUE: [9.06529999999961e-05, 9.056899999999868e-05, 9.122199999999497e-05, 9.145799999999565e-05, 9.111100000000483e-05, 9.125000000000105e-05, 9.133399999999847e-05, 9.111199999999736e-05, 9.069400000000227e-05, 9.056899999999868e-05, 9.12079999999954e-05, 9.056899999999868e-05, 9.090299999999635e-05, 9.136099999999814e-05, 9.088899999999678e-05, 9.090300000000329e-05, 9.058400000000466e-05, 9.123700000000096e-05, 9.055599999999858e-05, 9.109799999999779e-05, 9.101299999999396e-05, 9.134699999999857e-05, 9.076400000000012e-05, 9.136099999999814e-05, 9.06800000000027e-05, 9.136099999999814e-05, 9.119400000000277e-05, 9.118100000000268e-05, 9.123600000000148e-05, 9.069500000000175e-05, 9.090299999999635e-05, 9.077799999999969e-05, 9.073600000000098e-05, 9.144400000000302e-05, 9.069399999999533e-05, 9.10000000000008e-05, 9.123599999999454e-05, 9.134700000000551e-05, 9.055599999999858e-05, 9.14450000000025e-05, 9.07920000000062e-05, 9.087499999999721e-05, 9.134799999999804e-05, 9.055599999999858e-05, 9.059699999999782e-05, 9.102799999999994e-05, 9.134700000000551e-05, 9.06659999999962e-05, 9.088899999999678e-05, 9.123600000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.708" endtime="20201029 18:16:34.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.696" endtime="20201029 18:16:34.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.724" endtime="20201029 18:16:34.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.719" endtime="20201029 18:16:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.717" endtime="20201029 18:16:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.216" endtime="20201029 18:16:34.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.215" endtime="20201029 18:16:34.749"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.772" endtime="20201029 18:16:34.794"></status>
</kw>
<msg timestamp="20201029 18:16:34.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.769" endtime="20201029 18:16:34.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.798" endtime="20201029 18:16:34.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.804" endtime="20201029 18:16:34.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.762" endtime="20201029 18:16:34.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.756" endtime="20201029 18:16:34.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.828" endtime="20201029 18:16:35.171"></status>
</kw>
<msg timestamp="20201029 18:16:35.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041717875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041809986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.825" endtime="20201029 18:16:35.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041717875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041809986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.181" endtime="20201029 18:16:35.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.200" endtime="20201029 18:16:35.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.817" endtime="20201029 18:16:35.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.812" endtime="20201029 18:16:35.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.216" level="INFO">${RESULT} = [{'diff': 9.211099999999889e-05}, {'diff': 9.177800000000069e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.24450000000035e-05}, {'diff': 9.219499999999631e-05}, {'diff': 9.201400000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:35.208" endtime="20201029 18:16:35.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.222" level="INFO">${ACCURACY} = {'diff': [9.211099999999889e-05, 9.177800000000069e-05, 9.161099999999839e-05, 9.24450000000035e-05, 9.219499999999631e-05, 9.201400000000137e-05, 9.16670000000036e-05, 9.168100000000318e-05, 9.212499...</msg>
<status status="PASS" starttime="20201029 18:16:35.217" endtime="20201029 18:16:35.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.227" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.226" endtime="20201029 18:16:35.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.230" level="INFO">VALUE: [9.211099999999889e-05, 9.177800000000069e-05, 9.161099999999839e-05, 9.24450000000035e-05, 9.219499999999631e-05, 9.201400000000137e-05, 9.16670000000036e-05, 9.168100000000318e-05, 9.212499999999846e-05, 9.234699999999957e-05, 9.209699999999932e-05, 9.188899999999778e-05, 9.159699999999882e-05, 9.159699999999882e-05, 9.254100000000154e-05, 9.163899999999753e-05, 9.212499999999846e-05, 9.213899999999803e-05, 9.180500000000036e-05, 9.163900000000447e-05, 9.223600000000248e-05, 9.177700000000122e-05, 9.244399999999708e-05, 9.2333e-05, 9.199999999999486e-05, 9.187499999999821e-05, 9.166699999999667e-05, 9.223600000000248e-05, 9.198600000000223e-05, 9.222300000000239e-05, 9.177800000000069e-05, 9.179100000000079e-05, 9.244400000000402e-05, 9.155500000000011e-05, 9.245799999999665e-05, 9.177800000000069e-05, 9.179200000000026e-05, 9.165300000000404e-05, 9.24450000000035e-05, 9.155599999999958e-05, 9.206900000000018e-05, 9.151400000000087e-05, 9.169400000000327e-05, 9.158299999999925e-05, 9.190199999999787e-05, 9.211099999999889e-05, 9.2333e-05, 9.16250000000049e-05, 9.191699999999692e-05, 9.177800000000069e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.228" endtime="20201029 18:16:35.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.222" endtime="20201029 18:16:35.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.236" endtime="20201029 18:16:35.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.234" endtime="20201029 18:16:35.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.232" endtime="20201029 18:16:35.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.751" endtime="20201029 18:16:35.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.750" endtime="20201029 18:16:35.257"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.267" endtime="20201029 18:16:35.287"></status>
</kw>
<msg timestamp="20201029 18:16:35.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.266" endtime="20201029 18:16:35.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.288" endtime="20201029 18:16:35.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.291" endtime="20201029 18:16:35.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.262" endtime="20201029 18:16:35.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.260" endtime="20201029 18:16:35.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.302" endtime="20201029 18:16:35.642"></status>
</kw>
<msg timestamp="20201029 18:16:35.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.301" endtime="20201029 18:16:35.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024820764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024913764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.651" endtime="20201029 18:16:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.670" endtime="20201029 18:16:35.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.297" endtime="20201029 18:16:35.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.295" endtime="20201029 18:16:35.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.688" level="INFO">${RESULT} = [{'diff': 9.30000000000028e-05}, {'diff': 9.277799999999822e-05}, {'diff': 9.277799999999822e-05}, {'diff': 9.336100000000014e-05}, {'diff': 9.334800000000004e-05}, {'diff': 9.334800000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:35.679" endtime="20201029 18:16:35.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.698" level="INFO">${ACCURACY} = {'diff': [9.30000000000028e-05, 9.277799999999822e-05, 9.277799999999822e-05, 9.336100000000014e-05, 9.334800000000004e-05, 9.334800000000004e-05, 9.28200000000004e-05, 9.280500000000136e-05, 9.334699...</msg>
<status status="PASS" starttime="20201029 18:16:35.690" endtime="20201029 18:16:35.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.709" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.706" endtime="20201029 18:16:35.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.714" level="INFO">VALUE: [9.30000000000028e-05, 9.277799999999822e-05, 9.277799999999822e-05, 9.336100000000014e-05, 9.334800000000004e-05, 9.334800000000004e-05, 9.28200000000004e-05, 9.280500000000136e-05, 9.33469999999971e-05, 9.295800000000062e-05, 9.286200000000258e-05, 9.298599999999976e-05, 9.334700000000057e-05, 9.262499999999896e-05, 9.33469999999971e-05, 9.279200000000126e-05, 9.286199999999911e-05, 9.344500000000103e-05, 9.266600000000166e-05, 9.290199999999887e-05, 9.3333000000001e-05, 9.30139999999989e-05, 9.337499999999971e-05, 9.30139999999989e-05, 9.299999999999933e-05, 9.323600000000001e-05, 9.287499999999921e-05, 9.291699999999792e-05, 9.301400000000237e-05, 9.255600000000058e-05, 9.344399999999808e-05, 9.272199999999994e-05, 9.277799999999822e-05, 9.345800000000112e-05, 9.258300000000025e-05, 9.31940000000013e-05, 9.273599999999951e-05, 9.343099999999799e-05, 9.334700000000057e-05, 9.30139999999989e-05, 9.336100000000014e-05, 9.279099999999832e-05, 9.327699999999925e-05, 9.334700000000057e-05, 9.279200000000126e-05, 9.336100000000014e-05, 9.333299999999753e-05, 9.2639000000002e-05, 9.312499999999946e-05, 9.34590000000006e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.711" endtime="20201029 18:16:35.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.699" endtime="20201029 18:16:35.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.727" endtime="20201029 18:16:35.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.722" endtime="20201029 18:16:35.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.720" endtime="20201029 18:16:35.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.258" endtime="20201029 18:16:35.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.257" endtime="20201029 18:16:35.752"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.775" endtime="20201029 18:16:35.799"></status>
</kw>
<msg timestamp="20201029 18:16:35.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.771" endtime="20201029 18:16:35.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.803" endtime="20201029 18:16:35.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.809" endtime="20201029 18:16:35.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.764" endtime="20201029 18:16:35.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.758" endtime="20201029 18:16:35.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.833" endtime="20201029 18:16:36.176"></status>
</kw>
<msg timestamp="20201029 18:16:36.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.830" endtime="20201029 18:16:36.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043546167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.186" endtime="20201029 18:16:36.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.205" endtime="20201029 18:16:36.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.822" endtime="20201029 18:16:36.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.817" endtime="20201029 18:16:36.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.222" level="INFO">${RESULT} = [{'diff': 9.36529999999991e-05}, {'diff': 9.411099999999395e-05}, {'diff': 9.358300000000125e-05}, {'diff': 9.433299999999506e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.401399999999643e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:36.213" endtime="20201029 18:16:36.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.231" level="INFO">${ACCURACY} = {'diff': [9.36529999999991e-05, 9.411099999999395e-05, 9.358300000000125e-05, 9.433299999999506e-05, 9.412500000000046e-05, 9.401399999999643e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.44449...</msg>
<status status="PASS" starttime="20201029 18:16:36.224" endtime="20201029 18:16:36.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.243" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.240" endtime="20201029 18:16:36.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.248" level="INFO">VALUE: [9.36529999999991e-05, 9.411099999999395e-05, 9.358300000000125e-05, 9.433299999999506e-05, 9.412500000000046e-05, 9.401399999999643e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.444499999999856e-05, 9.401399999999643e-05, 9.368100000000518e-05, 9.384700000000107e-05, 9.379100000000279e-05, 9.358300000000125e-05, 9.387500000000021e-05, 9.430600000000233e-05, 9.401400000000337e-05, 9.445800000000559e-05, 9.412500000000046e-05, 9.399999999999686e-05, 9.429200000000276e-05, 9.369499999999781e-05, 9.411099999999395e-05, 9.43200000000019e-05, 9.41529999999996e-05, 9.390199999999987e-05, 9.402800000000294e-05, 9.365300000000604e-05, 9.394399999999858e-05, 9.412500000000046e-05, 9.436100000000114e-05, 9.420800000000534e-05, 9.368100000000518e-05, 9.422200000000491e-05, 9.379200000000226e-05, 9.368100000000518e-05, 9.412500000000046e-05, 9.412500000000046e-05, 9.367999999999876e-05, 9.43609999999942e-05, 9.376399999999618e-05, 9.362499999999996e-05, 9.355600000000158e-05, 9.402800000000294e-05, 9.406900000000218e-05, 9.4027999999996e-05, 9.377800000000269e-05, 9.380499999999542e-05, 9.358300000000125e-05, 9.412500000000046e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.245" endtime="20201029 18:16:36.250"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.233" endtime="20201029 18:16:36.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.262" endtime="20201029 18:16:36.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.257" endtime="20201029 18:16:36.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.254" endtime="20201029 18:16:36.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.754" endtime="20201029 18:16:36.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.753" endtime="20201029 18:16:36.288"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.311" endtime="20201029 18:16:36.334"></status>
</kw>
<msg timestamp="20201029 18:16:36.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.308" endtime="20201029 18:16:36.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.337" endtime="20201029 18:16:36.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.344" endtime="20201029 18:16:36.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.300" endtime="20201029 18:16:36.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.295" endtime="20201029 18:16:36.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.367" endtime="20201029 18:16:36.710"></status>
</kw>
<msg timestamp="20201029 18:16:36.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042439167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.364" endtime="20201029 18:16:36.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042343958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042439167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.720" endtime="20201029 18:16:36.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.739" endtime="20201029 18:16:36.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.357" endtime="20201029 18:16:36.745"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.352" endtime="20201029 18:16:36.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.757" level="INFO">${RESULT} = [{'diff': 9.520899999999888e-05}, {'diff': 9.477799999999675e-05}, {'diff': 9.490200000000087e-05}, {'diff': 9.519499999999931e-05}, {'diff': 9.5333000000003e-05}, {'diff': 9.488899999999384e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:36.748" endtime="20201029 18:16:36.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.768" level="INFO">${ACCURACY} = {'diff': [9.520899999999888e-05, 9.477799999999675e-05, 9.490200000000087e-05, 9.519499999999931e-05, 9.5333000000003e-05, 9.488899999999384e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.497199...</msg>
<status status="PASS" starttime="20201029 18:16:36.759" endtime="20201029 18:16:36.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.779" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.776" endtime="20201029 18:16:36.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.784" level="INFO">VALUE: [9.520899999999888e-05, 9.477799999999675e-05, 9.490200000000087e-05, 9.519499999999931e-05, 9.5333000000003e-05, 9.488899999999384e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.497199999999872e-05, 9.512500000000146e-05, 9.529099999999735e-05, 9.513899999999409e-05, 9.523699999999802e-05, 9.522199999999897e-05, 9.465200000000062e-05, 9.545799999999965e-05, 9.467999999999976e-05, 9.466700000000661e-05, 9.461100000000139e-05, 9.511100000000189e-05, 9.468099999999924e-05, 9.55279999999975e-05, 9.476400000000412e-05, 9.479100000000379e-05, 9.52079999999994e-05, 9.490200000000087e-05, 9.525000000000505e-05, 9.467999999999976e-05, 9.536100000000214e-05, 9.511099999999495e-05, 9.534700000000257e-05, 9.534700000000257e-05, 9.50000000000048e-05, 9.475000000000455e-05, 9.534800000000204e-05, 9.523700000000496e-05, 9.48880000000013e-05, 9.455500000000311e-05, 9.488900000000078e-05, 9.49859999999983e-05, 9.523599999999854e-05, 9.545799999999965e-05, 9.488900000000078e-05, 9.488900000000078e-05, 9.458400000000172e-05, 9.523599999999854e-05, 9.458300000000225e-05, 9.48880000000013e-05, 9.490200000000087e-05, 9.501399999999743e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.781" endtime="20201029 18:16:36.786"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.769" endtime="20201029 18:16:36.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.797" endtime="20201029 18:16:36.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.792" endtime="20201029 18:16:36.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.790" endtime="20201029 18:16:36.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.290" endtime="20201029 18:16:36.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.289" endtime="20201029 18:16:36.822"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.845" endtime="20201029 18:16:36.868"></status>
</kw>
<msg timestamp="20201029 18:16:36.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.842" endtime="20201029 18:16:36.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.871" endtime="20201029 18:16:36.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.878" endtime="20201029 18:16:36.881"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.834" endtime="20201029 18:16:36.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.829" endtime="20201029 18:16:36.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.901" endtime="20201029 18:16:37.242"></status>
</kw>
<msg timestamp="20201029 18:16:37.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041963764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.898" endtime="20201029 18:16:37.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041963764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042059764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.252" endtime="20201029 18:16:37.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.271" endtime="20201029 18:16:37.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.891" endtime="20201029 18:16:37.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.886" endtime="20201029 18:16:37.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.288" level="INFO">${RESULT} = [{'diff': 9.599999999999886e-05}, {'diff': 9.573599999999904e-05}, {'diff': 9.566700000000067e-05}, {'diff': 9.554200000000401e-05}, {'diff': 9.624999999999911e-05}, {'diff': 9.590200000000187e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:37.279" endtime="20201029 18:16:37.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.299" level="INFO">${ACCURACY} = {'diff': [9.599999999999886e-05, 9.573599999999904e-05, 9.566700000000067e-05, 9.554200000000401e-05, 9.624999999999911e-05, 9.590200000000187e-05, 9.558300000000325e-05, 9.634699999999663e-05, 9.6125...</msg>
<status status="PASS" starttime="20201029 18:16:37.290" endtime="20201029 18:16:37.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.311" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.308" endtime="20201029 18:16:37.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.316" level="INFO">VALUE: [9.599999999999886e-05, 9.573599999999904e-05, 9.566700000000067e-05, 9.554200000000401e-05, 9.624999999999911e-05, 9.590200000000187e-05, 9.558300000000325e-05, 9.634699999999663e-05, 9.612500000000246e-05, 9.622199999999997e-05, 9.627699999999878e-05, 9.601399999999843e-05, 9.584700000000307e-05, 9.590300000000135e-05, 9.6027999999998e-05, 9.588900000000178e-05, 9.612499999999552e-05, 9.563800000000205e-05, 9.61530000000016e-05, 9.6333000000004e-05, 9.634700000000357e-05, 9.577800000000469e-05, 9.599999999999886e-05, 9.636100000000314e-05, 9.594400000000058e-05, 9.601399999999843e-05, 9.63479999999961e-05, 9.619500000000031e-05, 9.605500000000461e-05, 9.586100000000264e-05, 9.644400000000108e-05, 9.566700000000067e-05, 9.626399999999868e-05, 9.612500000000246e-05, 9.623599999999954e-05, 9.599999999999886e-05, 9.586100000000264e-05, 9.611099999999595e-05, 9.575000000000555e-05, 9.580499999999742e-05, 9.580500000000436e-05, 9.580499999999742e-05, 9.634700000000357e-05, 9.556900000000368e-05, 9.566700000000067e-05, 9.6027999999998e-05, 9.627699999999878e-05, 9.622199999999997e-05, 9.580600000000383e-05, 9.557000000000315e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.313" endtime="20201029 18:16:37.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.301" endtime="20201029 18:16:37.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.329" endtime="20201029 18:16:37.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.324" endtime="20201029 18:16:37.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.322" endtime="20201029 18:16:37.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.824" endtime="20201029 18:16:37.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.823" endtime="20201029 18:16:37.354"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.377" endtime="20201029 18:16:37.400"></status>
</kw>
<msg timestamp="20201029 18:16:37.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.374" endtime="20201029 18:16:37.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.403" endtime="20201029 18:16:37.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.410" endtime="20201029 18:16:37.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.367" endtime="20201029 18:16:37.415"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.361" endtime="20201029 18:16:37.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.433" endtime="20201029 18:16:37.779"></status>
</kw>
<msg timestamp="20201029 18:16:37.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.430" endtime="20201029 18:16:37.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041798972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.789" endtime="20201029 18:16:37.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.808" endtime="20201029 18:16:37.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.423" endtime="20201029 18:16:37.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.418" endtime="20201029 18:16:37.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.826" level="INFO">${RESULT} = [{'diff': 9.743100000000199e-05}, {'diff': 9.663900000000253e-05}, {'diff': 9.688900000000278e-05}, {'diff': 9.745800000000165e-05}, {'diff': 9.723600000000054e-05}, {'diff': 9.743000000000251e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:37.817" endtime="20201029 18:16:37.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.835" level="INFO">${ACCURACY} = {'diff': [9.743100000000199e-05, 9.663900000000253e-05, 9.688900000000278e-05, 9.745800000000165e-05, 9.723600000000054e-05, 9.743000000000251e-05, 9.690299999999541e-05, 9.68059999999979e-05, 9.74580...</msg>
<status status="PASS" starttime="20201029 18:16:37.828" endtime="20201029 18:16:37.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.846" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.844" endtime="20201029 18:16:37.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.852" level="INFO">VALUE: [9.743100000000199e-05, 9.663900000000253e-05, 9.688900000000278e-05, 9.745800000000165e-05, 9.723600000000054e-05, 9.743000000000251e-05, 9.690299999999541e-05, 9.68059999999979e-05, 9.745800000000165e-05, 9.679199999999832e-05, 9.723600000000054e-05, 9.658399999999678e-05, 9.656999999999721e-05, 9.718100000000174e-05, 9.709799999999685e-05, 9.701299999999996e-05, 9.658299999999731e-05, 9.677799999999875e-05, 9.688900000000278e-05, 9.734699999999763e-05, 9.699999999999986e-05, 9.690300000000235e-05, 9.73609999999972e-05, 9.658299999999731e-05, 9.734800000000404e-05, 9.694400000000158e-05, 9.691600000000244e-05, 9.68330000000045e-05, 9.651399999999893e-05, 9.734700000000457e-05, 9.658300000000425e-05, 9.745800000000165e-05, 9.713900000000303e-05, 9.744500000000156e-05, 9.712499999999652e-05, 9.722300000000045e-05, 9.701399999999943e-05, 9.699999999999986e-05, 9.734699999999763e-05, 9.65409999999986e-05, 9.691700000000192e-05, 9.701399999999943e-05, 9.7027999999999e-05, 9.688900000000278e-05, 9.670900000000038e-05, 9.745900000000113e-05, 9.699999999999986e-05, 9.662500000000296e-05, 9.656899999999774e-05, 9.744400000000208e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.849" endtime="20201029 18:16:37.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.837" endtime="20201029 18:16:37.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.865" endtime="20201029 18:16:37.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.860" endtime="20201029 18:16:37.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.858" endtime="20201029 18:16:37.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.356" endtime="20201029 18:16:37.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.355" endtime="20201029 18:16:37.890"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.913" endtime="20201029 18:16:37.937"></status>
</kw>
<msg timestamp="20201029 18:16:37.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.910" endtime="20201029 18:16:37.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.941" endtime="20201029 18:16:37.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.947" endtime="20201029 18:16:37.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.902" endtime="20201029 18:16:37.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.896" endtime="20201029 18:16:37.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.971" endtime="20201029 18:16:38.314"></status>
</kw>
<msg timestamp="20201029 18:16:38.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043662417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043760194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.968" endtime="20201029 18:16:38.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043662417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043760194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.324" endtime="20201029 18:16:38.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.344" endtime="20201029 18:16:38.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.960" endtime="20201029 18:16:38.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.956" endtime="20201029 18:16:38.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.361" level="INFO">${RESULT} = [{'diff': 9.777700000000028e-05}, {'diff': 9.81660000000037e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.787500000000421e-05}, {'diff': 9.836100000000514e-05}, {'diff': 9.838899999999734e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:38.353" endtime="20201029 18:16:38.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.371" level="INFO">${ACCURACY} = {'diff': [9.777700000000028e-05, 9.81660000000037e-05, 9.854200000000007e-05, 9.787500000000421e-05, 9.836100000000514e-05, 9.838899999999734e-05, 9.76530000000031e-05, 9.783299999999856e-05, 9.752700...</msg>
<status status="PASS" starttime="20201029 18:16:38.364" endtime="20201029 18:16:38.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.382" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.380" endtime="20201029 18:16:38.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.387" level="INFO">VALUE: [9.777700000000028e-05, 9.81660000000037e-05, 9.854200000000007e-05, 9.787500000000421e-05, 9.836100000000514e-05, 9.838899999999734e-05, 9.76530000000031e-05, 9.783299999999856e-05, 9.752700000000003e-05, 9.826299999999427e-05, 9.845900000000213e-05, 9.798599999999436e-05, 9.76660000000032e-05, 9.812499999999752e-05, 9.812499999999752e-05, 9.779199999999932e-05, 9.845800000000265e-05, 9.758399999999778e-05, 9.76809999999953e-05, 9.769500000000181e-05, 9.8028e-05, 9.823600000000154e-05, 9.756899999999874e-05, 9.777700000000028e-05, 9.834700000000557e-05, 9.818000000000326e-05, 9.83609999999982e-05, 9.801400000000043e-05, 9.787499999999727e-05, 9.8028e-05, 9.800000000000086e-05, 9.845900000000213e-05, 9.834699999999863e-05, 9.780499999999942e-05, 9.845800000000265e-05, 9.84860000000018e-05, 9.768000000000276e-05, 9.790300000000335e-05, 9.816700000000317e-05, 9.776400000000018e-05, 9.800000000000086e-05, 9.756999999999821e-05, 9.836199999999767e-05, 9.83609999999982e-05, 9.788899999999684e-05, 9.788799999999737e-05, 9.767999999999583e-05, 9.793099999999555e-05, 9.845799999999572e-05, 9.847200000000222e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.384" endtime="20201029 18:16:38.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.373" endtime="20201029 18:16:38.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.403" endtime="20201029 18:16:38.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.397" endtime="20201029 18:16:38.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.394" endtime="20201029 18:16:38.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.892" endtime="20201029 18:16:38.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.890" endtime="20201029 18:16:38.428"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.451" endtime="20201029 18:16:38.474"></status>
</kw>
<msg timestamp="20201029 18:16:38.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.448" endtime="20201029 18:16:38.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.477" endtime="20201029 18:16:38.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.483" endtime="20201029 18:16:38.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.440" endtime="20201029 18:16:38.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.434" endtime="20201029 18:16:38.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.507" endtime="20201029 18:16:38.829"></status>
</kw>
<msg timestamp="20201029 18:16:38.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042081819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.504" endtime="20201029 18:16:38.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042081819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.839" endtime="20201029 18:16:38.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.858" endtime="20201029 18:16:38.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.497" endtime="20201029 18:16:38.863"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.492" endtime="20201029 18:16:38.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.875" level="INFO">${RESULT} = [{'diff': 9.934699999999963e-05}, {'diff': 9.884699999999913e-05}, {'diff': 9.934699999999963e-05}, {'diff': 9.869400000000333e-05}, {'diff': 9.945799999999672e-05}, {'diff': 9.911099999999895e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:38.866" endtime="20201029 18:16:38.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.891" level="INFO">${ACCURACY} = {'diff': [9.934699999999963e-05, 9.884699999999913e-05, 9.934699999999963e-05, 9.869400000000333e-05, 9.945799999999672e-05, 9.911099999999895e-05, 9.912499999999852e-05, 9.901400000000143e-05, 9.8902...</msg>
<status status="PASS" starttime="20201029 18:16:38.877" endtime="20201029 18:16:38.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.902" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.900" endtime="20201029 18:16:38.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.908" level="INFO">VALUE: [9.934699999999963e-05, 9.884699999999913e-05, 9.934699999999963e-05, 9.869400000000333e-05, 9.945799999999672e-05, 9.911099999999895e-05, 9.912499999999852e-05, 9.901400000000143e-05, 9.890299999999741e-05, 9.919500000000331e-05, 9.911099999999895e-05, 9.944499999999662e-05, 9.897199999999579e-05, 9.91530000000046e-05, 9.854200000000007e-05, 9.933300000000006e-05, 9.870900000000238e-05, 9.887499999999827e-05, 9.890299999999741e-05, 9.93479999999991e-05, 9.919400000000383e-05, 9.877800000000075e-05, 9.905600000000014e-05, 9.879100000000085e-05, 9.90139999999945e-05, 9.879100000000085e-05, 9.856899999999974e-05, 9.922199999999604e-05, 9.865299999999716e-05, 9.945800000000365e-05, 9.945900000000313e-05, 9.899999999999493e-05, 9.855599999999964e-05, 9.890199999999794e-05, 9.901299999999502e-05, 9.891600000000444e-05, 9.867999999999683e-05, 9.911099999999895e-05, 9.866699999999673e-05, 9.86809999999963e-05, 9.912499999999852e-05, 9.922299999999551e-05, 9.912499999999852e-05, 9.912500000000546e-05, 9.943099999999705e-05, 9.901400000000143e-05, 9.890199999999794e-05, 9.855500000000017e-05, 9.891699999999698e-05, 9.924999999999518e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.905" endtime="20201029 18:16:38.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.893" endtime="20201029 18:16:38.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.921" endtime="20201029 18:16:38.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.916" endtime="20201029 18:16:38.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.914" endtime="20201029 18:16:38.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.430" endtime="20201029 18:16:38.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.429" endtime="20201029 18:16:38.946"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.969" endtime="20201029 18:16:38.993"></status>
</kw>
<msg timestamp="20201029 18:16:38.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.966" endtime="20201029 18:16:38.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.996" endtime="20201029 18:16:39.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.003" endtime="20201029 18:16:39.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.958" endtime="20201029 18:16:39.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.952" endtime="20201029 18:16:39.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.027" endtime="20201029 18:16:39.369"></status>
</kw>
<msg timestamp="20201029 18:16:39.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041897014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.024" endtime="20201029 18:16:39.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041796681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041897014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.379" endtime="20201029 18:16:39.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.398" endtime="20201029 18:16:39.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.016" endtime="20201029 18:16:39.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.011" endtime="20201029 18:16:39.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.415" level="INFO">${RESULT} = [{'diff': 0.00010033300000000106}, {'diff': 0.00010022199999999704}, {'diff': 0.00010022199999999704}, {'diff': 9.968100000000424e-05}, {'diff': 0.00010036199999999967}, {'diff': 9.979100000000185e-05...</msg>
<status status="PASS" starttime="20201029 18:16:39.406" endtime="20201029 18:16:39.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.426" level="INFO">${ACCURACY} = {'diff': [0.00010033300000000106, 0.00010022199999999704, 0.00010022199999999704, 9.968100000000424e-05, 0.00010036199999999967, 9.979100000000185e-05, 9.990199999999894e-05, 9.966599999999826e-05, 0....</msg>
<status status="PASS" starttime="20201029 18:16:39.417" endtime="20201029 18:16:39.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.437" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.435" endtime="20201029 18:16:39.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.443" level="INFO">VALUE: [0.00010033300000000106, 0.00010022199999999704, 0.00010022199999999704, 9.968100000000424e-05, 0.00010036199999999967, 9.979100000000185e-05, 9.990199999999894e-05, 9.966599999999826e-05, 0.0001002359999999966, 9.979100000000185e-05, 0.00010034699999999369, 9.979200000000132e-05, 9.955600000000064e-05, 0.00010037499999999977, 9.990299999999841e-05, 0.00010044499999999762, 9.977800000000175e-05, 0.00010000000000000286, 0.00010033300000000106, 9.979100000000185e-05, 0.000100028000000002, 9.976400000000218e-05, 0.000100028000000002, 0.0001002359999999966, 0.00010045900000000413, 0.0001004730000000037, 9.954200000000107e-05, 9.962499999999902e-05, 9.955500000000117e-05, 9.967999999999783e-05, 9.961099999999945e-05, 0.00010029199999999489, 9.962499999999902e-05, 0.00010041700000000542, 0.00010024999999999618, 9.987500000000621e-05, 0.00010044499999999762, 9.957000000000021e-05, 9.96530000000051e-05, 0.00010002700000000253, 9.955499999999423e-05, 9.968000000000476e-05, 9.968000000000476e-05, 0.00010000000000000286, 9.987499999999927e-05, 9.962499999999902e-05, 0.00010034700000000063, 0.00010043099999999805, 9.999999999999593e-05, 0.00010020899999999694]</msg>
<status status="PASS" starttime="20201029 18:16:39.440" endtime="20201029 18:16:39.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.428" endtime="20201029 18:16:39.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.456" endtime="20201029 18:16:39.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.451" endtime="20201029 18:16:39.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.449" endtime="20201029 18:16:39.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.948" endtime="20201029 18:16:39.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.947" endtime="20201029 18:16:39.481"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.504" endtime="20201029 18:16:39.528"></status>
</kw>
<msg timestamp="20201029 18:16:39.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.501" endtime="20201029 18:16:39.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.531" endtime="20201029 18:16:39.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.537" endtime="20201029 18:16:39.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.493" endtime="20201029 18:16:39.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.487" endtime="20201029 18:16:39.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.561" endtime="20201029 18:16:39.906"></status>
</kw>
<msg timestamp="20201029 18:16:39.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042082125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.558" endtime="20201029 18:16:39.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042082125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.915" endtime="20201029 18:16:39.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.933" endtime="20201029 18:16:39.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.551" endtime="20201029 18:16:39.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.546" endtime="20201029 18:16:39.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.951" level="INFO">${RESULT} = [{'diff': 0.00010069400000000533}, {'diff': 0.00010077799999999582}, {'diff': 0.00010123600000000454}, {'diff': 0.00010127799999999632}, {'diff': 0.00010088800000000037}, {'diff': 0.000100693999999998...</msg>
<status status="PASS" starttime="20201029 18:16:39.942" endtime="20201029 18:16:39.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.960" level="INFO">${ACCURACY} = {'diff': [0.00010069400000000533, 0.00010077799999999582, 0.00010123600000000454, 0.00010127799999999632, 0.00010088800000000037, 0.0001006939999999984, 0.00010090299999999941, 0.00010088899999999984,...</msg>
<status status="PASS" starttime="20201029 18:16:39.953" endtime="20201029 18:16:39.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.971" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.969" endtime="20201029 18:16:39.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.977" level="INFO">VALUE: [0.00010069400000000533, 0.00010077799999999582, 0.00010123600000000454, 0.00010127799999999632, 0.00010088800000000037, 0.0001006939999999984, 0.00010090299999999941, 0.00010088899999999984, 0.00010111100000000095, 0.00010145799999999872, 0.00010077800000000275, 0.0001008610000000007, 0.0001013060000000024, 0.00010057000000000121, 0.00010098699999999683, 0.000101513999999997, 0.00010102799999999607, 0.00010112500000000052, 0.00010067999999999883, 0.00010111100000000095, 0.00010088899999999984, 0.00010090299999999941, 0.00010079200000000232, 0.00010090299999999941, 0.00010123699999999708, 0.00010102700000000353, 0.00010144399999999915, 0.00010067999999999883, 0.00010147199999999829, 0.00010124999999999718, 0.00010105600000000214, 0.00010062500000000002, 0.00010138900000000034, 0.00010079199999999539, 0.0001013480000000011, 0.0001013610000000012, 0.00010092999999999908, 0.00010055500000000217, 0.00010066599999999926, 0.00010138900000000034, 0.00010145800000000565, 0.00010093099999999855, 0.00010134699999999469, 0.00010134700000000163, 0.00010077799999999582, 0.00010076399999999625, 0.00010123700000000402, 0.00010145799999999872, 0.00010068000000000576, 0.00010133300000000206]</msg>
<status status="PASS" starttime="20201029 18:16:39.974" endtime="20201029 18:16:39.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.962" endtime="20201029 18:16:39.980"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.989" endtime="20201029 18:16:40.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.985" endtime="20201029 18:16:40.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.982" endtime="20201029 18:16:40.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.483" endtime="20201029 18:16:40.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.482" endtime="20201029 18:16:40.015"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.038" endtime="20201029 18:16:40.063"></status>
</kw>
<msg timestamp="20201029 18:16:40.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.034" endtime="20201029 18:16:40.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.066" endtime="20201029 18:16:40.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.072" endtime="20201029 18:16:40.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.027" endtime="20201029 18:16:40.078"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.021" endtime="20201029 18:16:40.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.096" endtime="20201029 18:16:40.439"></status>
</kw>
<msg timestamp="20201029 18:16:40.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043547639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043649264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.093" endtime="20201029 18:16:40.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043547639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043649264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.449" endtime="20201029 18:16:40.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.467" endtime="20201029 18:16:40.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.085" endtime="20201029 18:16:40.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.080" endtime="20201029 18:16:40.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.485" level="INFO">${RESULT} = [{'diff': 0.00010162500000000102}, {'diff': 0.00010190300000000041}, {'diff': 0.00010179100000000385}, {'diff': 0.0001020139999999975}, {'diff': 0.00010245799999999972}, {'diff': 0.0001015690000000027...</msg>
<status status="PASS" starttime="20201029 18:16:40.476" endtime="20201029 18:16:40.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.494" level="INFO">${ACCURACY} = {'diff': [0.00010162500000000102, 0.00010190300000000041, 0.00010179100000000385, 0.0001020139999999975, 0.00010245799999999972, 0.00010156900000000274, 0.00010222199999999904, 0.00010188900000000084,...</msg>
<status status="PASS" starttime="20201029 18:16:40.487" endtime="20201029 18:16:40.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.505" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.503" endtime="20201029 18:16:40.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.511" level="INFO">VALUE: [0.00010162500000000102, 0.00010190300000000041, 0.00010179100000000385, 0.0001020139999999975, 0.00010245799999999972, 0.00010156900000000274, 0.00010222199999999904, 0.00010188900000000084, 0.00010166699999999973, 0.00010200000000000486, 0.00010200000000000486, 0.00010198599999999836, 0.00010220799999999947, 0.00010199999999999793, 0.00010158300000000231, 0.0001022359999999986, 0.00010166699999999973, 0.00010199999999999793, 0.00010179199999999639, 0.00010191699999999998, 0.00010209700000000238, 0.00010158300000000231, 0.00010179100000000385, 0.00010167999999999983, 0.00010173600000000504, 0.00010212500000000152, 0.00010202799999999707, 0.0001020139999999975, 0.00010225000000000511, 0.00010222200000000597, 0.00010229199999999689, 0.00010213800000000162, 0.00010167999999999983, 0.00010190200000000094, 0.00010224999999999818, 0.00010198599999999836, 0.00010198599999999836, 0.00010158300000000231, 0.0001016809999999993, 0.00010233400000000253, 0.00010212499999999458, 0.00010200000000000486, 0.00010209800000000185, 0.00010226399999999775, 0.00010234700000000263, 0.00010224999999999818, 0.00010191699999999998, 0.00010156900000000274, 0.00010201400000000443, 0.0001022359999999986]</msg>
<status status="PASS" starttime="20201029 18:16:40.508" endtime="20201029 18:16:40.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.496" endtime="20201029 18:16:40.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.525" endtime="20201029 18:16:40.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.519" endtime="20201029 18:16:40.548"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.516" endtime="20201029 18:16:40.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.017" endtime="20201029 18:16:40.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.016" endtime="20201029 18:16:40.550"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.574" endtime="20201029 18:16:40.597"></status>
</kw>
<msg timestamp="20201029 18:16:40.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.570" endtime="20201029 18:16:40.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.601" endtime="20201029 18:16:40.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.607" endtime="20201029 18:16:40.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.563" endtime="20201029 18:16:40.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.557" endtime="20201029 18:16:40.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.631" endtime="20201029 18:16:40.976"></status>
</kw>
<msg timestamp="20201029 18:16:40.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042501403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042604278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.628" endtime="20201029 18:16:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042501403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042604278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.985" endtime="20201029 18:16:41.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.006" endtime="20201029 18:16:41.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.620" endtime="20201029 18:16:41.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.615" endtime="20201029 18:16:41.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.025" level="INFO">${RESULT} = [{'diff': 0.00010287500000000227}, {'diff': 0.00010344500000000062}, {'diff': 0.00010345900000000019}, {'diff': 0.00010280499999999748}, {'diff': 0.00010290300000000141}, {'diff': 0.000103458000000000...</msg>
<status status="PASS" starttime="20201029 18:16:41.016" endtime="20201029 18:16:41.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.036" level="INFO">${ACCURACY} = {'diff': [0.00010287500000000227, 0.00010344500000000062, 0.00010345900000000019, 0.00010280499999999748, 0.00010290300000000141, 0.00010345800000000072, 0.000103513999999999, 0.00010299999999999893, ...</msg>
<status status="PASS" starttime="20201029 18:16:41.027" endtime="20201029 18:16:41.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.047" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.045" endtime="20201029 18:16:41.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.053" level="INFO">VALUE: [0.00010287500000000227, 0.00010344500000000062, 0.00010345900000000019, 0.00010280499999999748, 0.00010290300000000141, 0.00010345800000000072, 0.000103513999999999, 0.00010299999999999893, 0.00010266700000000073, 0.00010254200000000407, 0.00010279200000000432, 0.00010280599999999696, 0.00010266700000000073, 0.00010270899999999944, 0.00010344500000000062, 0.00010268000000000083, 0.00010336099999999626, 0.00010299999999999893, 0.00010311099999999601, 0.0001025689999999968, 0.00010341700000000148, 0.00010320800000000047, 0.00010290300000000141, 0.00010291700000000098, 0.00010312499999999558, 0.00010352799999999857, 0.0001029160000000015, 0.00010334700000000363, 0.00010333300000000406, 0.00010333299999999712, 0.00010329200000000482, 0.0001025559999999967, 0.00010257000000000321, 0.00010257000000000321, 0.00010322299999999951, 0.00010255600000000364, 0.00010322200000000004, 0.00010312500000000252, 0.00010324999999999918, 0.00010279199999999739, 0.00010334700000000363, 0.00010288900000000184, 0.00010279199999999739, 0.00010279200000000432, 0.0001026810000000003, 0.00010259699999999594, 0.00010312499999999558, 0.00010299999999999893, 0.00010277699999999834, 0.00010277799999999782]</msg>
<status status="PASS" starttime="20201029 18:16:41.050" endtime="20201029 18:16:41.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.038" endtime="20201029 18:16:41.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.066" endtime="20201029 18:16:41.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.061" endtime="20201029 18:16:41.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.059" endtime="20201029 18:16:41.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.552" endtime="20201029 18:16:41.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.551" endtime="20201029 18:16:41.091"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.115" endtime="20201029 18:16:41.138"></status>
</kw>
<msg timestamp="20201029 18:16:41.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.111" endtime="20201029 18:16:41.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.141" endtime="20201029 18:16:41.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.148" endtime="20201029 18:16:41.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.104" endtime="20201029 18:16:41.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.098" endtime="20201029 18:16:41.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.172" endtime="20201029 18:16:41.526"></status>
</kw>
<msg timestamp="20201029 18:16:41.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042526542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042630431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.168" endtime="20201029 18:16:41.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042526542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042630431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.535" endtime="20201029 18:16:41.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.554" endtime="20201029 18:16:41.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.161" endtime="20201029 18:16:41.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.156" endtime="20201029 18:16:41.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.571" level="INFO">${RESULT} = [{'diff': 0.00010388900000000284}, {'diff': 0.00010374999999999968}, {'diff': 0.00010355500000000517}, {'diff': 0.00010355499999999823}, {'diff': 0.00010358299999999737}, {'diff': 0.000103499999999999...</msg>
<status status="PASS" starttime="20201029 18:16:41.563" endtime="20201029 18:16:41.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.583" level="INFO">${ACCURACY} = {'diff': [0.00010388900000000284, 0.00010374999999999968, 0.00010355500000000517, 0.00010355499999999823, 0.00010358299999999737, 0.00010349999999999943, 0.00010362500000000302, 0.00010399999999999993...</msg>
<status status="PASS" starttime="20201029 18:16:41.574" endtime="20201029 18:16:41.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.594" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.591" endtime="20201029 18:16:41.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.599" level="INFO">VALUE: [0.00010388900000000284, 0.00010374999999999968, 0.00010355500000000517, 0.00010355499999999823, 0.00010358299999999737, 0.00010349999999999943, 0.00010362500000000302, 0.00010399999999999993, 0.0001036810000000013, 0.00010377799999999882, 0.00010398600000000036, 0.00010433299999999812, 0.00010381900000000499, 0.00010356900000000474, 0.00010356900000000474, 0.00010402799999999907, 0.00010433299999999812, 0.00010366699999999479, 0.00010436199999999674, 0.00010354099999999866, 0.00010354200000000507, 0.00010447199999999435, 0.0001035689999999978, 0.00010413900000000309, 0.00010372200000000054, 0.0001042360000000006, 0.00010433299999999812, 0.00010448600000000086, 0.00010433299999999812, 0.00010444500000000162, 0.0001040139999999995, 0.00010379199999999839, 0.00010369399999999446, 0.00010411099999999701, 0.00010354099999999866, 0.00010443000000000258, 0.00010386200000000317, 0.00010445799999999478, 0.00010408299999999787, 0.00010431999999999803, 0.0001035559999999977, 0.00010443100000000205, 0.00010411099999999701, 0.00010401300000000002, 0.00010447200000000129, 0.00010413899999999615, 0.0001040139999999995, 0.00010369500000000087, 0.00010413899999999615, 0.00010433299999999812]</msg>
<status status="PASS" starttime="20201029 18:16:41.596" endtime="20201029 18:16:41.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.584" endtime="20201029 18:16:41.602"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.612" endtime="20201029 18:16:41.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.608" endtime="20201029 18:16:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.605" endtime="20201029 18:16:41.636"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.093" endtime="20201029 18:16:41.637"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.092" endtime="20201029 18:16:41.637"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.661" endtime="20201029 18:16:41.684"></status>
</kw>
<msg timestamp="20201029 18:16:41.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.657" endtime="20201029 18:16:41.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.688" endtime="20201029 18:16:41.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.694" endtime="20201029 18:16:41.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.650" endtime="20201029 18:16:41.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.644" endtime="20201029 18:16:41.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.718" endtime="20201029 18:16:42.051"></status>
</kw>
<msg timestamp="20201029 18:16:42.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.715" endtime="20201029 18:16:42.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.061" endtime="20201029 18:16:42.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.080" endtime="20201029 18:16:42.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.707" endtime="20201029 18:16:42.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.702" endtime="20201029 18:16:42.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.097" level="INFO">${RESULT} = [{'diff': 0.00010498600000000136}, {'diff': 0.00010467999999999589}, {'diff': 0.00010531900000000649}, {'diff': 0.00010512499999999758}, {'diff': 0.00010534699999999869}, {'diff': 0.000105362000000004...</msg>
<status status="PASS" starttime="20201029 18:16:42.088" endtime="20201029 18:16:42.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.107" level="INFO">${ACCURACY} = {'diff': [0.00010498600000000136, 0.00010467999999999589, 0.00010531900000000649, 0.00010512499999999758, 0.00010534699999999869, 0.00010536200000000467, 0.00010468099999999536, 0.00010520800000000247...</msg>
<status status="PASS" starttime="20201029 18:16:42.099" endtime="20201029 18:16:42.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.118" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.115" endtime="20201029 18:16:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.123" level="INFO">VALUE: [0.00010498600000000136, 0.00010467999999999589, 0.00010531900000000649, 0.00010512499999999758, 0.00010534699999999869, 0.00010536200000000467, 0.00010468099999999536, 0.00010520800000000247, 0.00010536099999999826, 0.00010466599999999632, 0.00010512499999999758, 0.00010534700000000563, 0.00010533300000000606, 0.00010458299999999837, 0.00010513899999999715, 0.0001050140000000005, 0.00010488900000000384, 0.0001052360000000016, 0.00010512499999999758, 0.00010544400000000315, 0.00010525000000000118, 0.00010512500000000452, 0.00010513900000000409, 0.00010533299999999912, 0.00010509699999999844, 0.00010466700000000273, 0.00010490299999999647, 0.000105208999999995, 0.0001045689999999988, 0.00010477700000000034, 0.00010467999999999589, 0.0001047769999999934, 0.0001053889999999974, 0.00010522200000000204, 0.00010480599999999896, 0.00010456999999999828, 0.00010456999999999828, 0.00010513899999999715, 0.00010534799999999817, 0.00010502799999999313, 0.00010537499999999783, 0.0001045689999999988, 0.00010456900000000574, 0.00010455499999999923, 0.00010483400000000503, 0.00010545799999999578, 0.00010544500000000262, 0.00010488900000000384, 0.00010545900000000219, 0.00010543100000000305]</msg>
<status status="PASS" starttime="20201029 18:16:42.120" endtime="20201029 18:16:42.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.108" endtime="20201029 18:16:42.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.136" endtime="20201029 18:16:42.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.131" endtime="20201029 18:16:42.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.129" endtime="20201029 18:16:42.160"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.640" endtime="20201029 18:16:42.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.638" endtime="20201029 18:16:42.161"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.185" endtime="20201029 18:16:42.209"></status>
</kw>
<msg timestamp="20201029 18:16:42.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.181" endtime="20201029 18:16:42.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.212" endtime="20201029 18:16:42.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.219" endtime="20201029 18:16:42.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.174" endtime="20201029 18:16:42.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.168" endtime="20201029 18:16:42.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.243" endtime="20201029 18:16:42.598"></status>
</kw>
<msg timestamp="20201029 18:16:42.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043933819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044039917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.239" endtime="20201029 18:16:42.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043933819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044039917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.608" endtime="20201029 18:16:42.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.626" endtime="20201029 18:16:42.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.232" endtime="20201029 18:16:42.632"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.227" endtime="20201029 18:16:42.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.644" level="INFO">${RESULT} = [{'diff': 0.00010609799999999892}, {'diff': 0.00010616700000000423}, {'diff': 0.00010602700000000159}, {'diff': 0.00010579100000000091}, {'diff': 0.00010566599999999732}, {'diff': 0.000106430999999997...</msg>
<status status="PASS" starttime="20201029 18:16:42.635" endtime="20201029 18:16:42.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.653" level="INFO">${ACCURACY} = {'diff': [0.00010609799999999892, 0.00010616700000000423, 0.00010602700000000159, 0.00010579100000000091, 0.00010566599999999732, 0.00010643099999999711, 0.00010645800000000372, 0.00010650000000000243...</msg>
<status status="PASS" starttime="20201029 18:16:42.646" endtime="20201029 18:16:42.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.664" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.662" endtime="20201029 18:16:42.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.670" level="INFO">VALUE: [0.00010609799999999892, 0.00010616700000000423, 0.00010602700000000159, 0.00010579100000000091, 0.00010566599999999732, 0.00010643099999999711, 0.00010645800000000372, 0.00010650000000000243, 0.00010599999999999499, 0.00010591700000000398, 0.00010590300000000441, 0.00010613799999999868, 0.00010559700000000588, 0.00010588799999999843, 0.00010625000000000218, 0.00010567999999999689, 0.00010568000000000383, 0.00010590299999999747, 0.00010644500000000362, 0.00010554200000000014, 0.00010600000000000193, 0.00010576399999999431, 0.0001060140000000015, 0.00010580500000000048, 0.00010612500000000552, 0.0001055689999999998, 0.00010597300000000226, 0.00010590299999999747, 0.00010622200000000304, 0.0001061810000000038, 0.0001056810000000033, 0.00010625000000000218, 0.00010566699999999679, 0.00010576300000000177, 0.00010567999999999689, 0.00010612499999999858, 0.00010611099999999901, 0.00010623599999999567, 0.00010561200000000492, 0.000105514000000001, 0.00010558399999999885, 0.00010590299999999747, 0.00010558299999999937, 0.00010612499999999858, 0.00010641599999999807, 0.00010567999999999689, 0.00010627800000000132, 0.00010577800000000082, 0.00010634699999999969, 0.00010601399999999456]</msg>
<status status="PASS" starttime="20201029 18:16:42.667" endtime="20201029 18:16:42.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.655" endtime="20201029 18:16:42.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.684" endtime="20201029 18:16:42.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.678" endtime="20201029 18:16:42.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.675" endtime="20201029 18:16:42.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.164" endtime="20201029 18:16:42.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.162" endtime="20201029 18:16:42.709"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.732" endtime="20201029 18:16:42.756"></status>
</kw>
<msg timestamp="20201029 18:16:42.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.729" endtime="20201029 18:16:42.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.759" endtime="20201029 18:16:42.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.766" endtime="20201029 18:16:42.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.722" endtime="20201029 18:16:42.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.716" endtime="20201029 18:16:42.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.789" endtime="20201029 18:16:43.145"></status>
</kw>
<msg timestamp="20201029 18:16:43.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.786" endtime="20201029 18:16:43.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.154" endtime="20201029 18:16:43.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.173" endtime="20201029 18:16:43.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.779" endtime="20201029 18:16:43.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.774" endtime="20201029 18:16:43.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.190" level="INFO">${RESULT} = [{'diff': 0.00010662499999999908}, {'diff': 0.00010681900000000105}, {'diff': 0.00010747199999999735}, {'diff': 0.00010744400000000515}, {'diff': 0.00010677800000000182}, {'diff': 0.000106888999999998...</msg>
<status status="PASS" starttime="20201029 18:16:43.181" endtime="20201029 18:16:43.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.201" level="INFO">${ACCURACY} = {'diff': [0.00010662499999999908, 0.00010681900000000105, 0.00010747199999999735, 0.00010744400000000515, 0.00010677800000000182, 0.0001068889999999989, 0.00010663899999999865, 0.00010690299999999847,...</msg>
<status status="PASS" starttime="20201029 18:16:43.192" endtime="20201029 18:16:43.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.212" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.210" endtime="20201029 18:16:43.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.217" level="INFO">VALUE: [0.00010662499999999908, 0.00010681900000000105, 0.00010747199999999735, 0.00010744400000000515, 0.00010677800000000182, 0.0001068889999999989, 0.00010663899999999865, 0.00010690299999999847, 0.00010725000000000318, 0.00010687499999999933, 0.00010668000000000483, 0.00010712499999999958, 0.0001070419999999947, 0.00010679199999999445, 0.0001070140000000025, 0.00010734700000000069, 0.00010668099999999736, 0.00010713899999999915, 0.0001073340000000006, 0.00010672200000000354, 0.00010708300000000087, 0.00010679100000000191, 0.00010745799999999778, 0.00010699999999999599, 0.00010734699999999375, 0.00010733299999999418, 0.00010733299999999418, 0.00010668099999999736, 0.00010677800000000182, 0.00010724999999999624, 0.00010691599999999857, 0.00010654100000000166, 0.00010715299999999872, 0.00010661099999999951, 0.00010668099999999736, 0.0001065560000000007, 0.00010669499999999693, 0.00010747300000000376, 0.00010744499999999768, 0.00010656999999999334, 0.00010736100000000026, 0.0001069160000000055, 0.00010734700000000069, 0.0001067360000000031, 0.00010691700000000498, 0.00010723599999999667, 0.00010700000000000293, 0.00010654200000000114, 0.00010711100000000001, 0.00010690299999999847]</msg>
<status status="PASS" starttime="20201029 18:16:43.214" endtime="20201029 18:16:43.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.202" endtime="20201029 18:16:43.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.230" endtime="20201029 18:16:43.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.226" endtime="20201029 18:16:43.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.223" endtime="20201029 18:16:43.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.711" endtime="20201029 18:16:43.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.710" endtime="20201029 18:16:43.256"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.279" endtime="20201029 18:16:43.302"></status>
</kw>
<msg timestamp="20201029 18:16:43.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.275" endtime="20201029 18:16:43.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.306" endtime="20201029 18:16:43.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.312" endtime="20201029 18:16:43.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.268" endtime="20201029 18:16:43.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.262" endtime="20201029 18:16:43.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.336" endtime="20201029 18:16:43.691"></status>
</kw>
<msg timestamp="20201029 18:16:43.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042177819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042286153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.333" endtime="20201029 18:16:43.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042177819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042286153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.700" endtime="20201029 18:16:43.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.719" endtime="20201029 18:16:43.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.325" endtime="20201029 18:16:43.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.320" endtime="20201029 18:16:43.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.736" level="INFO">${RESULT} = [{'diff': 0.0001083340000000016}, {'diff': 0.00010847299999999782}, {'diff': 0.00010797300000000426}, {'diff': 0.00010800000000000393}, {'diff': 0.00010820799999999853}, {'diff': 0.0001082079999999985...</msg>
<status status="PASS" starttime="20201029 18:16:43.727" endtime="20201029 18:16:43.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.747" level="INFO">${ACCURACY} = {'diff': [0.0001083340000000016, 0.00010847299999999782, 0.00010797300000000426, 0.00010800000000000393, 0.00010820799999999853, 0.00010820799999999853, 0.00010847199999999835, 0.00010823599999999767,...</msg>
<status status="PASS" starttime="20201029 18:16:43.738" endtime="20201029 18:16:43.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.758" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.756" endtime="20201029 18:16:43.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.764" level="INFO">VALUE: [0.0001083340000000016, 0.00010847299999999782, 0.00010797300000000426, 0.00010800000000000393, 0.00010820799999999853, 0.00010820799999999853, 0.00010847199999999835, 0.00010823599999999767, 0.00010823599999999767, 0.0001080140000000035, 0.00010779199999999545, 0.00010756999999999434, 0.00010801399999999656, 0.00010831899999999561, 0.00010766599999999932, 0.0001080140000000035, 0.0001080419999999957, 0.00010818099999999886, 0.00010779199999999545, 0.00010779199999999545, 0.0001082360000000046, 0.00010779199999999545, 0.0001083340000000016, 0.00010756899999999486, 0.00010811100000000101, 0.00010790299999999947, 0.00010845799999999878, 0.00010812500000000058, 0.00010820799999999853, 0.00010779199999999545, 0.00010823599999999767, 0.00010769499999999793, 0.00010802699999999665, 0.0001080690000000023, 0.00010766599999999932, 0.00010825000000000418, 0.00010834700000000169, 0.00010813900000000015, 0.00010834700000000169, 0.00010768099999999836, 0.00010834700000000169, 0.00010768099999999836, 0.00010836099999999432, 0.00010779200000000239, 0.000107902, 0.00010823599999999767, 0.00010767999999999889, 0.00010752800000000257, 0.00010790299999999947, 0.00010790300000000641]</msg>
<status status="PASS" starttime="20201029 18:16:43.761" endtime="20201029 18:16:43.770"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.749" endtime="20201029 18:16:43.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.781" endtime="20201029 18:16:43.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.777" endtime="20201029 18:16:43.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.774" endtime="20201029 18:16:43.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.258" endtime="20201029 18:16:43.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.256" endtime="20201029 18:16:43.807"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.830" endtime="20201029 18:16:43.853"></status>
</kw>
<msg timestamp="20201029 18:16:43.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.826" endtime="20201029 18:16:43.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.856" endtime="20201029 18:16:43.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.863" endtime="20201029 18:16:43.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.819" endtime="20201029 18:16:43.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.813" endtime="20201029 18:16:43.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.888" endtime="20201029 18:16:44.251"></status>
</kw>
<msg timestamp="20201029 18:16:44.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042348639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.885" endtime="20201029 18:16:44.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042348639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042457625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.260" endtime="20201029 18:16:44.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.279" endtime="20201029 18:16:44.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.877" endtime="20201029 18:16:44.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.872" endtime="20201029 18:16:44.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.296" level="INFO">${RESULT} = [{'diff': 0.00010898599999999842}, {'diff': 0.0001092219999999991}, {'diff': 0.00010877799999999688}, {'diff': 0.0001093890000000014}, {'diff': 0.00010925000000000518}, {'diff': 0.00010911100000000201...</msg>
<status status="PASS" starttime="20201029 18:16:44.288" endtime="20201029 18:16:44.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.306" level="INFO">${ACCURACY} = {'diff': [0.00010898599999999842, 0.0001092219999999991, 0.00010877799999999688, 0.0001093890000000014, 0.00010925000000000518, 0.00010911100000000201, 0.00010934699999999575, 0.00010933299999999618, ...</msg>
<status status="PASS" starttime="20201029 18:16:44.299" endtime="20201029 18:16:44.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.317" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.315" endtime="20201029 18:16:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.322" level="INFO">VALUE: [0.00010898599999999842, 0.0001092219999999991, 0.00010877799999999688, 0.0001093890000000014, 0.00010925000000000518, 0.00010911100000000201, 0.00010934699999999575, 0.00010933299999999618, 0.0001093890000000014, 0.0001088890000000009, 0.00010868099999999936, 0.00010890300000000047, 0.00010945899999999925, 0.00010945899999999925, 0.00010913799999999474, 0.0001087219999999986, 0.00010867999999999989, 0.00010945799999999978, 0.00010925000000000518, 0.00010945799999999978, 0.00010879199999999645, 0.00010945899999999925, 0.00010945899999999925, 0.00010879199999999645, 0.00010866699999999979, 0.00010945799999999978, 0.00010854099999999672, 0.0001092360000000056, 0.00010877799999999688, 0.00010911100000000201, 0.00010948600000000586, 0.00010920799999999953, 0.00010945899999999925, 0.0001093340000000026, 0.00010891600000000057, 0.00010934699999999575, 0.00010933300000000312, 0.00010937499999999489, 0.00010933300000000312, 0.00010872299999999807, 0.00010857000000000228, 0.00010941700000000054, 0.00010937499999999489, 0.00010945899999999925, 0.00010912499999999464, 0.00010913899999999421, 0.00010934699999999575, 0.00010880499999999654, 0.00010908299999999593, 0.00010936099999999532]</msg>
<status status="PASS" starttime="20201029 18:16:44.319" endtime="20201029 18:16:44.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.307" endtime="20201029 18:16:44.325"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.335" endtime="20201029 18:16:44.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.330" endtime="20201029 18:16:44.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.328" endtime="20201029 18:16:44.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.809" endtime="20201029 18:16:44.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.807" endtime="20201029 18:16:44.361"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.384" endtime="20201029 18:16:44.409"></status>
</kw>
<msg timestamp="20201029 18:16:44.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.380" endtime="20201029 18:16:44.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.413" endtime="20201029 18:16:44.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.419" endtime="20201029 18:16:44.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.373" endtime="20201029 18:16:44.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.367" endtime="20201029 18:16:44.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.443" endtime="20201029 18:16:44.796"></status>
</kw>
<msg timestamp="20201029 18:16:44.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.439" endtime="20201029 18:16:44.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044049986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044160083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.805" endtime="20201029 18:16:44.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.824" endtime="20201029 18:16:44.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.432" endtime="20201029 18:16:44.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.427" endtime="20201029 18:16:44.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.841" level="INFO">${RESULT} = [{'diff': 0.00011009700000000344}, {'diff': 0.00010979099999999797}, {'diff': 0.00011012500000000258}, {'diff': 0.00011023599999999967}, {'diff': 0.00011024999999999924}, {'diff': 0.000109889000000001...</msg>
<status status="PASS" starttime="20201029 18:16:44.832" endtime="20201029 18:16:44.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.850" level="INFO">${ACCURACY} = {'diff': [0.00011009700000000344, 0.00010979099999999797, 0.00011012500000000258, 0.00011023599999999967, 0.00011024999999999924, 0.0001098890000000019, 0.00011002799999999813, 0.00011012500000000258,...</msg>
<status status="PASS" starttime="20201029 18:16:44.843" endtime="20201029 18:16:44.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.862" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.859" endtime="20201029 18:16:44.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.867" level="INFO">VALUE: [0.00011009700000000344, 0.00010979099999999797, 0.00011012500000000258, 0.00011023599999999967, 0.00011024999999999924, 0.0001098890000000019, 0.00011002799999999813, 0.00011012500000000258, 0.00010968000000000089, 0.0001102220000000001, 0.00011044400000000121, 0.00011024999999999924, 0.00010967999999999395, 0.00010958300000000337, 0.00011036100000000326, 0.00011023599999999967, 0.00010968100000000036, 0.00011025000000000618, 0.00010987499999999539, 0.0001095549999999973, 0.0001095549999999973, 0.00010968000000000089, 0.00010991700000000104, 0.00011023599999999967, 0.00010968100000000036, 0.00010979199999999745, 0.00010966699999999385, 0.00011041700000000154, 0.00010958300000000337, 0.00011033299999999718, 0.00010979099999999797, 0.0001095690000000038, 0.0001102220000000001, 0.00010977800000000482, 0.0001095560000000037, 0.00011045900000000025, 0.00010968100000000036, 0.00011001399999999856, 0.00010979100000000491, 0.00011013900000000215, 0.00011045800000000078, 0.00010990300000000147, 0.00010999999999999899, 0.00011037500000000283, 0.00011045800000000078, 0.00011012500000000258, 0.00011022300000000651, 0.00010957000000000328, 0.0001100969999999965, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201029 18:16:44.864" endtime="20201029 18:16:44.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.852" endtime="20201029 18:16:44.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.881" endtime="20201029 18:16:44.903"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.875" endtime="20201029 18:16:44.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.873" endtime="20201029 18:16:44.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.363" endtime="20201029 18:16:44.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.361" endtime="20201029 18:16:44.907"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.932" endtime="20201029 18:16:44.955"></status>
</kw>
<msg timestamp="20201029 18:16:44.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.928" endtime="20201029 18:16:44.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.959" endtime="20201029 18:16:44.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.965" endtime="20201029 18:16:44.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.920" endtime="20201029 18:16:44.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.914" endtime="20201029 18:16:44.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.989" endtime="20201029 18:16:45.321"></status>
</kw>
<msg timestamp="20201029 18:16:45.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044266597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044377486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.986" endtime="20201029 18:16:45.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044266597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044377486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.326" endtime="20201029 18:16:45.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.334" endtime="20201029 18:16:45.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.978" endtime="20201029 18:16:45.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.974" endtime="20201029 18:16:45.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.347" level="INFO">${RESULT} = [{'diff': 0.0001108890000000029}, {'diff': 0.00011099999999999999}, {'diff': 0.00011136099999999732}, {'diff': 0.00011077799999999888}, {'diff': 0.00011111099999999707}, {'diff': 0.0001111950000000014...</msg>
<status status="PASS" starttime="20201029 18:16:45.338" endtime="20201029 18:16:45.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.357" level="INFO">${ACCURACY} = {'diff': [0.0001108890000000029, 0.00011099999999999999, 0.00011136099999999732, 0.00011077799999999888, 0.00011111099999999707, 0.00011119500000000143, 0.00011118000000000239, 0.0001107769999999994, ...</msg>
<status status="PASS" starttime="20201029 18:16:45.349" endtime="20201029 18:16:45.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.369" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.366" endtime="20201029 18:16:45.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.374" level="INFO">VALUE: [0.0001108890000000029, 0.00011099999999999999, 0.00011136099999999732, 0.00011077799999999888, 0.00011111099999999707, 0.00011119500000000143, 0.00011118000000000239, 0.0001107769999999994, 0.00011079099999999897, 0.00011073600000000017, 0.00011145800000000178, 0.00011133299999999818, 0.0001108890000000029, 0.00011080599999999802, 0.00011112500000000358, 0.00011063899999999571, 0.00011123700000000014, 0.00011147200000000135, 0.0001107769999999994, 0.00011090300000000247, 0.00011136100000000426, 0.00011144400000000221, 0.00011052799999999863, 0.00011080599999999802, 0.0001108890000000029, 0.00011055599999999777, 0.00011126399999999981, 0.0001107769999999994, 0.00011134700000000469, 0.00011068000000000189, 0.00011134699999999775, 0.00011102799999999913, 0.0001108890000000029, 0.00011136100000000426, 0.00011079200000000539, 0.00011081999999999759, 0.00011056899999999786, 0.00011098600000000042, 0.00011102800000000607, 0.00011059700000000394, 0.00011130499999999904, 0.00011099999999999999, 0.00011112500000000358, 0.00011090300000000247, 0.00011148600000000092, 0.00011049999999999949, 0.00011145800000000178, 0.0001114299999999957, 0.00011081899999999811, 0.00011129099999999947]</msg>
<status status="PASS" starttime="20201029 18:16:45.371" endtime="20201029 18:16:45.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.359" endtime="20201029 18:16:45.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.387" endtime="20201029 18:16:45.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.382" endtime="20201029 18:16:45.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.380" endtime="20201029 18:16:45.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.909" endtime="20201029 18:16:45.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.908" endtime="20201029 18:16:45.412"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.435" endtime="20201029 18:16:45.458"></status>
</kw>
<msg timestamp="20201029 18:16:45.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.431" endtime="20201029 18:16:45.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.462" endtime="20201029 18:16:45.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.469" endtime="20201029 18:16:45.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.424" endtime="20201029 18:16:45.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.418" endtime="20201029 18:16:45.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.492" endtime="20201029 18:16:45.834"></status>
</kw>
<msg timestamp="20201029 18:16:45.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.489" endtime="20201029 18:16:45.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041892722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.843" endtime="20201029 18:16:45.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.862" endtime="20201029 18:16:45.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.482" endtime="20201029 18:16:45.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.477" endtime="20201029 18:16:45.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.879" level="INFO">${RESULT} = [{'diff': 0.00011168100000000236}, {'diff': 0.00011208399999999841}, {'diff': 0.00011234799999999823}, {'diff': 0.0001123749999999979}, {'diff': 0.0001120419999999997}, {'diff': 0.0001120549999999998}...</msg>
<status status="PASS" starttime="20201029 18:16:45.870" endtime="20201029 18:16:45.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.890" level="INFO">${ACCURACY} = {'diff': [0.00011168100000000236, 0.00011208399999999841, 0.00011234799999999823, 0.0001123749999999979, 0.0001120419999999997, 0.0001120549999999998, 0.00011191700000000304, 0.00011245799999999584, 0...</msg>
<status status="PASS" starttime="20201029 18:16:45.881" endtime="20201029 18:16:45.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.901" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.899" endtime="20201029 18:16:45.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.907" level="INFO">VALUE: [0.00011168100000000236, 0.00011208399999999841, 0.00011234799999999823, 0.0001123749999999979, 0.0001120419999999997, 0.0001120549999999998, 0.00011191700000000304, 0.00011245799999999584, 0.00011230500000000004, 0.00011236099999999832, 0.00011245800000000278, 0.00011200000000000099, 0.00011194499999999524, 0.00011158299999999843, 0.00011250000000000149, 0.00011179099999999997, 0.00011211099999999807, 0.00011155500000000623, 0.00011245800000000278, 0.00011212500000000458, 0.00011244500000000268, 0.00011177799999999988, 0.00011202800000000013, 0.00011223700000000114, 0.000111902000000004, 0.00011201400000000056, 0.00011236099999999832, 0.00011212500000000458, 0.00011188899999999696, 0.00011222199999999516, 0.00011212499999999764, 0.00011157000000000528, 0.00011191599999999663, 0.00011202700000000065, 0.0001115549999999993, 0.00011156899999999886, 0.0001124299999999967, 0.00011191700000000304, 0.00011187500000000433, 0.00011176400000000031, 0.00011157000000000528, 0.00011245899999999531, 0.00011212500000000458, 0.00011229199999999995, 0.00011212499999999764, 0.00011245800000000278, 0.00011236100000000526, 0.00011212499999999764, 0.00011191700000000304, 0.00011190300000000347]</msg>
<status status="PASS" starttime="20201029 18:16:45.904" endtime="20201029 18:16:45.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.892" endtime="20201029 18:16:45.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.920" endtime="20201029 18:16:45.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.915" endtime="20201029 18:16:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.912" endtime="20201029 18:16:45.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.414" endtime="20201029 18:16:45.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.412" endtime="20201029 18:16:45.945"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.970" endtime="20201029 18:16:45.993"></status>
</kw>
<msg timestamp="20201029 18:16:45.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.967" endtime="20201029 18:16:45.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.997" endtime="20201029 18:16:46.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.004" endtime="20201029 18:16:46.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.959" endtime="20201029 18:16:46.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.952" endtime="20201029 18:16:46.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.028" endtime="20201029 18:16:46.371"></status>
</kw>
<msg timestamp="20201029 18:16:46.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044440542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044553778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.024" endtime="20201029 18:16:46.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044440542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044553778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.381" endtime="20201029 18:16:46.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.399" endtime="20201029 18:16:46.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.017" endtime="20201029 18:16:46.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.012" endtime="20201029 18:16:46.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.417" level="INFO">${RESULT} = [{'diff': 0.00011323600000000267}, {'diff': 0.00011311099999999907}, {'diff': 0.00011345900000000325}, {'diff': 0.00011277800000000088}, {'diff': 0.00011300000000000199}, {'diff': 0.000113458000000003...</msg>
<status status="PASS" starttime="20201029 18:16:46.408" endtime="20201029 18:16:46.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.426" level="INFO">${ACCURACY} = {'diff': [0.00011323600000000267, 0.00011311099999999907, 0.00011345900000000325, 0.00011277800000000088, 0.00011300000000000199, 0.00011345800000000378, 0.00011347199999999641, 0.0001125550000000003,...</msg>
<status status="PASS" starttime="20201029 18:16:46.419" endtime="20201029 18:16:46.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.437" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.435" endtime="20201029 18:16:46.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.442" level="INFO">VALUE: [0.00011323600000000267, 0.00011311099999999907, 0.00011345900000000325, 0.00011277800000000088, 0.00011300000000000199, 0.00011345800000000378, 0.00011347199999999641, 0.0001125550000000003, 0.0001128890000000049, 0.00011266699999999685, 0.00011323600000000267, 0.00011323600000000267, 0.00011344499999999674, 0.00011290299999999753, 0.00011300000000000199, 0.00011323600000000267, 0.00011312499999999864, 0.00011305499999999385, 0.00011268099999999642, 0.00011287500000000533, 0.00011266700000000379, 0.00011268099999999642, 0.00011344499999999674, 0.00011312500000000558, 0.00011347199999999641, 0.00011338899999999846, 0.00011279100000000097, 0.00011273599999999523, 0.00011301399999999462, 0.00011290300000000447, 0.00011280600000000002, 0.00011268100000000336, 0.00011279200000000045, 0.00011311099999999907, 0.00011279099999999403, 0.0001125550000000003, 0.00011288899999999796, 0.00011334699999999975, 0.00011256999999999934, 0.00011344499999999674, 0.00011280600000000002, 0.00011312499999999864, 0.00011334699999999975, 0.00011334699999999975, 0.00011290199999999806, 0.00011256899999999986, 0.00011279200000000045, 0.00011254199999999326, 0.00011301399999999462, 0.00011279200000000045]</msg>
<status status="PASS" starttime="20201029 18:16:46.439" endtime="20201029 18:16:46.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.428" endtime="20201029 18:16:46.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.455" endtime="20201029 18:16:46.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.451" endtime="20201029 18:16:46.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.448" endtime="20201029 18:16:46.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.948" endtime="20201029 18:16:46.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.946" endtime="20201029 18:16:46.480"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.504" endtime="20201029 18:16:46.528"></status>
</kw>
<msg timestamp="20201029 18:16:46.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.500" endtime="20201029 18:16:46.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.532" endtime="20201029 18:16:46.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.539" endtime="20201029 18:16:46.547"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.493" endtime="20201029 18:16:46.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.487" endtime="20201029 18:16:46.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.584" endtime="20201029 18:16:46.946"></status>
</kw>
<msg timestamp="20201029 18:16:46.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043587458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.580" endtime="20201029 18:16:46.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043587458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043701764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.956" endtime="20201029 18:16:46.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.984" endtime="20201029 18:16:46.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.566" endtime="20201029 18:16:46.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.558" endtime="20201029 18:16:46.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.003" level="INFO">${RESULT} = [{'diff': 0.00011430599999999458}, {'diff': 0.00011355599999999383}, {'diff': 0.00011423599999999673}, {'diff': 0.00011366699999999785}, {'diff': 0.00011402700000000265}, {'diff': 0.000113707999999997...</msg>
<status status="PASS" starttime="20201029 18:16:46.994" endtime="20201029 18:16:47.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.013" level="INFO">${ACCURACY} = {'diff': [0.00011430599999999458, 0.00011355599999999383, 0.00011423599999999673, 0.00011366699999999785, 0.00011402700000000265, 0.00011370799999999709, 0.00011405600000000127, 0.00011368099999999742...</msg>
<status status="PASS" starttime="20201029 18:16:47.005" endtime="20201029 18:16:47.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.026" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.023" endtime="20201029 18:16:47.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.032" level="INFO">VALUE: [0.00011430599999999458, 0.00011355599999999383, 0.00011423599999999673, 0.00011366699999999785, 0.00011402700000000265, 0.00011370799999999709, 0.00011405600000000127, 0.00011368099999999742, 0.00011425000000000324, 0.00011413900000000615, 0.00011390299999999853, 0.00011401400000000256, 0.00011355600000000077, 0.00011356900000000086, 0.00011412499999999964, 0.00011434700000000075, 0.00011377799999999494, 0.0001135550000000013, 0.00011430599999999458, 0.00011365299999999828, 0.00011379200000000145, 0.00011411100000000007, 0.00011419499999999749, 0.00011379100000000197, 0.00011401400000000256, 0.00011367999999999795, 0.0001135550000000013, 0.00011445800000000478, 0.00011443100000000511, 0.00011368099999999742, 0.00011422300000000357, 0.00011412499999999964, 0.00011358300000000043, 0.00011379099999999504, 0.00011401400000000256, 0.0001143049999999951, 0.00011411100000000007, 0.00011405600000000127, 0.00011401399999999562, 0.00011377800000000188, 0.00011365299999999828, 0.00011355600000000077, 0.00011445799999999784, 0.0001142499999999963, 0.00011388899999999896, 0.00011436100000000032, 0.00011411100000000007, 0.00011445799999999784, 0.00011445900000000425, 0.00011357000000000034]</msg>
<status status="PASS" starttime="20201029 18:16:47.029" endtime="20201029 18:16:47.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.015" endtime="20201029 18:16:47.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.046" endtime="20201029 18:16:47.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.040" endtime="20201029 18:16:47.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.038" endtime="20201029 18:16:47.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.482" endtime="20201029 18:16:47.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.481" endtime="20201029 18:16:47.072"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.095" endtime="20201029 18:16:47.119"></status>
</kw>
<msg timestamp="20201029 18:16:47.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.092" endtime="20201029 18:16:47.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.122" endtime="20201029 18:16:47.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.129" endtime="20201029 18:16:47.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.084" endtime="20201029 18:16:47.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.078" endtime="20201029 18:16:47.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.153" endtime="20201029 18:16:47.496"></status>
</kw>
<msg timestamp="20201029 18:16:47.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042340278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042455181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.149" endtime="20201029 18:16:47.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042340278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042455181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.505" endtime="20201029 18:16:47.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.523" endtime="20201029 18:16:47.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.142" endtime="20201029 18:16:47.529"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.137" endtime="20201029 18:16:47.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.541" level="INFO">${RESULT} = [{'diff': 0.00011490299999999953}, {'diff': 0.00011457000000000134}, {'diff': 0.00011491599999999963}, {'diff': 0.00011467999999999895}, {'diff': 0.00011456899999999492}, {'diff': 0.000114985999999997...</msg>
<status status="PASS" starttime="20201029 18:16:47.532" endtime="20201029 18:16:47.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.551" level="INFO">${ACCURACY} = {'diff': [0.00011490299999999953, 0.00011457000000000134, 0.00011491599999999963, 0.00011467999999999895, 0.00011456899999999492, 0.00011498599999999748, 0.00011533299999999524, 0.00011477800000000288...</msg>
<status status="PASS" starttime="20201029 18:16:47.543" endtime="20201029 18:16:47.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.562" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.560" endtime="20201029 18:16:47.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.568" level="INFO">VALUE: [0.00011490299999999953, 0.00011457000000000134, 0.00011491599999999963, 0.00011467999999999895, 0.00011456899999999492, 0.00011498599999999748, 0.00011533299999999524, 0.00011477800000000288, 0.00011544499999999874, 0.00011547299999999788, 0.00011545900000000525, 0.00011544399999999927, 0.00011545799999999884, 0.00011479100000000297, 0.00011545799999999884, 0.00011458300000000143, 0.00011540300000000003, 0.00011458400000000091, 0.00011466699999999885, 0.00011512500000000064, 0.00011512500000000064, 0.00011536100000000132, 0.0001149169999999991, 0.00011513900000000021, 0.00011501399999999662, 0.00011456900000000186, 0.0001149169999999991, 0.0001145420000000022, 0.00011457000000000134, 0.0001151249999999937, 0.00011534699999999481, 0.00011523599999999773, 0.00011467999999999895, 0.00011534700000000175, 0.00011545799999999884, 0.00011468099999999842, 0.00011536100000000132, 0.00011458400000000091, 0.00011511200000000055, 0.00011501300000000408, 0.00011501400000000356, 0.00011455499999999535, 0.00011475000000000374, 0.00011512500000000064, 0.00011512500000000064, 0.00011493099999999867, 0.00011512500000000064, 0.00011545899999999831, 0.00011490299999999953, 0.00011534700000000175]</msg>
<status status="PASS" starttime="20201029 18:16:47.565" endtime="20201029 18:16:47.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.553" endtime="20201029 18:16:47.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.581" endtime="20201029 18:16:47.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.576" endtime="20201029 18:16:47.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.574" endtime="20201029 18:16:47.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.074" endtime="20201029 18:16:47.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.073" endtime="20201029 18:16:47.606"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.629" endtime="20201029 18:16:47.653"></status>
</kw>
<msg timestamp="20201029 18:16:47.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.625" endtime="20201029 18:16:47.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.656" endtime="20201029 18:16:47.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.662" endtime="20201029 18:16:47.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.618" endtime="20201029 18:16:47.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.612" endtime="20201029 18:16:47.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.686" endtime="20201029 18:16:48.028"></status>
</kw>
<msg timestamp="20201029 18:16:48.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041795583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041911097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.683" endtime="20201029 18:16:48.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041795583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041911097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.037" endtime="20201029 18:16:48.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.056" endtime="20201029 18:16:48.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.676" endtime="20201029 18:16:48.062"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.671" endtime="20201029 18:16:48.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.074" level="INFO">${RESULT} = [{'diff': 0.00011551400000000406}, {'diff': 0.0001162499999999983}, {'diff': 0.00011645799999999984}, {'diff': 0.00011588899999999402}, {'diff': 0.00011636100000000232}, {'diff': 0.0001156809999999994...</msg>
<status status="PASS" starttime="20201029 18:16:48.065" endtime="20201029 18:16:48.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.085" level="INFO">${ACCURACY} = {'diff': [0.00011551400000000406, 0.0001162499999999983, 0.00011645799999999984, 0.00011588899999999402, 0.00011636100000000232, 0.00011568099999999942, 0.00011633399999999572, 0.00011611200000000155,...</msg>
<status status="PASS" starttime="20201029 18:16:48.076" endtime="20201029 18:16:48.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.096" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.094" endtime="20201029 18:16:48.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.101" level="INFO">VALUE: [0.00011551400000000406, 0.0001162499999999983, 0.00011645799999999984, 0.00011588899999999402, 0.00011636100000000232, 0.00011568099999999942, 0.00011633399999999572, 0.00011611200000000155, 0.00011643100000000017, 0.00011567999999999995, 0.00011567999999999995, 0.00011601399999999762, 0.00011579200000000345, 0.00011590300000000053, 0.00011629199999999701, 0.00011613900000000121, 0.00011609800000000198, 0.00011569400000000646, 0.00011588799999999455, 0.00011623600000000567, 0.00011612500000000164, 0.00011634700000000275, 0.00011577799999999694, 0.00011551399999999712, 0.00011629100000000447, 0.00011568099999999942, 0.00011556900000000286, 0.00011590200000000106, 0.00011612500000000164, 0.00011612500000000164, 0.00011555499999999636, 0.00011608300000000293, 0.00011565300000000028, 0.00011645899999999931, 0.00011558399999999497, 0.00011581999999999565, 0.0001161379999999948, 0.00011590200000000106, 0.00011634700000000275, 0.00011556899999999592, 0.00011612500000000164, 0.00011579199999999651, 0.00011559800000000148, 0.0001159029999999936, 0.00011566700000000679, 0.00011634800000000223, 0.00011632000000000309, 0.00011609799999999504, 0.0001159170000000001, 0.00011645799999999984]</msg>
<status status="PASS" starttime="20201029 18:16:48.098" endtime="20201029 18:16:48.103"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.087" endtime="20201029 18:16:48.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.114" endtime="20201029 18:16:48.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.110" endtime="20201029 18:16:48.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.107" endtime="20201029 18:16:48.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.608" endtime="20201029 18:16:48.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.607" endtime="20201029 18:16:48.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.760" endtime="20201029 18:16:48.140"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:54.632" endtime="20201029 18:16:48.141" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:57.151" endtime="20201029 18:16:48.151"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.288" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:16:48.304" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:16:49.122" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:16:48.284" endtime="20201029 18:16:49.124"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.130" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 18:16:49.126" endtime="20201029 18:16:52.131"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.282" endtime="20201029 18:16:52.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.137" endtime="20201029 18:16:52.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.134" endtime="20201029 18:16:52.436"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.450" endtime="20201029 18:16:52.464"></status>
</kw>
<msg timestamp="20201029 18:16:52.465" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 18:16:52.448" endtime="20201029 18:16:52.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.468" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succes...</msg>
<status status="PASS" starttime="20201029 18:16:52.466" endtime="20201029 18:16:52.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.471" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:52.469" endtime="20201029 18:16:52.472"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:52.445" endtime="20201029 18:16:52.472"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:52.443" endtime="20201029 18:16:52.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.441" endtime="20201029 18:16:52.474"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:52.477" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:52.477" endtime="20201029 18:16:52.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.474" endtime="20201029 18:16:52.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.441" endtime="20201029 18:16:52.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.440" endtime="20201029 18:16:52.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.479" endtime="20201029 18:16:52.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.438" endtime="20201029 18:16:52.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.482" endtime="20201029 18:16:52.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.437" endtime="20201029 18:16:52.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.279" endtime="20201029 18:16:52.486"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.492" endtime="20201029 18:16:52.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.490" endtime="20201029 18:16:52.514"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.529" endtime="20201029 18:16:52.543"></status>
</kw>
<msg timestamp="20201029 18:16:52.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.528" endtime="20201029 18:16:52.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.546" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.544" endtime="20201029 18:16:52.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.550" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:52.547" endtime="20201029 18:16:52.550"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:52.524" endtime="20201029 18:16:52.551"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:52.521" endtime="20201029 18:16:52.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.520" endtime="20201029 18:16:52.552"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:52.556" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:52.555" endtime="20201029 18:16:52.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.553" endtime="20201029 18:16:52.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.519" endtime="20201029 18:16:52.556"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.518" endtime="20201029 18:16:52.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.557" endtime="20201029 18:16:52.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.516" endtime="20201029 18:16:52.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.514" endtime="20201029 18:16:52.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.489" endtime="20201029 18:16:52.561"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.571" endtime="20201029 18:16:58.693"></status>
</kw>
<msg timestamp="20201029 18:16:58.694" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.569" endtime="20201029 18:16:58.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.700" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.696" endtime="20201029 18:16:58.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.703" endtime="20201029 18:16:58.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.566" endtime="20201029 18:16:58.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.563" endtime="20201029 18:16:58.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.715" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 0, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:16:58.711" endtime="20201029 18:16:58.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.728" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:58.724" endtime="20201029 18:16:58.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.733" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:16:58.731" endtime="20201029 18:16:58.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.718" endtime="20201029 18:16:58.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.745" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:16:58.743" endtime="20201029 18:16:58.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.750" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:16:58.748" endtime="20201029 18:16:58.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.737" endtime="20201029 18:16:58.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.762" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:16:58.760" endtime="20201029 18:16:58.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.766" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:16:58.764" endtime="20201029 18:16:58.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.753" endtime="20201029 18:16:58.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.786" endtime="20201029 18:16:59.157"></status>
</kw>
<msg timestamp="20201029 18:16:59.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.168166208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.16816675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:16:58.782" endtime="20201029 18:16:59.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.168166208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.16816675, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201029 18:16:59.167" endtime="20201029 18:16:59.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.185" endtime="20201029 18:16:59.189"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.775" endtime="20201029 18:16:59.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.770" endtime="20201029 18:16:59.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:16:59.204" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10000925000000002}, {'diff': 0.10001030499999997}, {'diff': 0.10001031900000001}, {'diff': 0.100010333}, {'diff': 0.10001033300000006}, {'diff': 0.10001031900000001}, {'diff':...</msg>
<status status="PASS" starttime="20201029 18:16:59.194" endtime="20201029 18:16:59.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.213" level="INFO">${RESULT} = {'diff': [0, 0.10000925000000002, 0.10001030499999997, 0.10001031900000001, 0.100010333, 0.10001033300000006, 0.10001031900000001, 0.10001031999999999, 0.10001033399999992, 0.10001030599999994, 0.1000...</msg>
<status status="PASS" starttime="20201029 18:16:59.206" endtime="20201029 18:16:59.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.225" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:16:59.223" endtime="20201029 18:16:59.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.231" level="INFO">VALUE: [0, 0.10000925000000002, 0.10001030499999997, 0.10001031900000001, 0.100010333, 0.10001033300000006, 0.10001031900000001, 0.10001031999999999, 0.10001033399999992, 0.10001030599999994, 0.10001033400000003, 0.10001033400000003, 0.10001031999999999, 0.1000103750000001, 0.10001043100000007, 0.10001036200000013, 0.10001040299999997, 0.10001040200000011, 0.10001040299999997, 0.10001037499999987, 0.10001038899999992, 0.10001038899999992, 0.1000103750000001, 0.10001038899999992, 0.10001038799999984, 0.10001040300000019, 0.10001036099999983, 0.10001041700000002, 0.10001038899999992, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001084700000007, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001081999999961, 0.10001038899999948, 5.410000003536197e-07, 5.419999995481817e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201029 18:16:59.227" endtime="20201029 18:16:59.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.215" endtime="20201029 18:16:59.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.561" endtime="20201029 18:16:59.236"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:52.486" endtime="20201029 18:16:59.237" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.254" endtime="20201029 18:16:59.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.250" endtime="20201029 18:16:59.279"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.314" endtime="20201029 18:16:59.334"></status>
</kw>
<msg timestamp="20201029 18:16:59.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.310" endtime="20201029 18:16:59.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.342" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.337" endtime="20201029 18:16:59.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.349" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:59.344" endtime="20201029 18:16:59.350"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:59.302" endtime="20201029 18:16:59.351"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:59.296" endtime="20201029 18:16:59.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.293" endtime="20201029 18:16:59.354"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:59.362" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:59.361" endtime="20201029 18:16:59.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.356" endtime="20201029 18:16:59.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.291" endtime="20201029 18:16:59.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.289" endtime="20201029 18:16:59.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.366" endtime="20201029 18:16:59.370"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.285" endtime="20201029 18:16:59.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.280" endtime="20201029 18:16:59.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.248" endtime="20201029 18:16:59.374"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.398" endtime="20201029 18:17:05.522"></status>
</kw>
<msg timestamp="20201029 18:17:05.524" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.393" endtime="20201029 18:17:05.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.530" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.526" endtime="20201029 18:17:05.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.532" endtime="20201029 18:17:05.536"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.385" endtime="20201029 18:17:05.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.379" endtime="20201029 18:17:05.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:05.546" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 5, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:05.541" endtime="20201029 18:17:05.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.556" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:05.554" endtime="20201029 18:17:05.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.560" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:05.558" endtime="20201029 18:17:05.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.547" endtime="20201029 18:17:05.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.574" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:05.571" endtime="20201029 18:17:05.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.578" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:05.576" endtime="20201029 18:17:05.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.564" endtime="20201029 18:17:05.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.590" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:05.588" endtime="20201029 18:17:05.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.595" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:17:05.592" endtime="20201029 18:17:05.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.582" endtime="20201029 18:17:05.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.614" endtime="20201029 18:17:05.947"></status>
</kw>
<msg timestamp="20201029 18:17:05.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135489847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235572542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.610" endtime="20201029 18:17:05.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135489847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235572542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:05.955" endtime="20201029 18:17:05.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.973" endtime="20201029 18:17:05.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.603" endtime="20201029 18:17:05.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.598" endtime="20201029 18:17:05.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:05.990" level="INFO">${FILTERED} = [{'diff': 0.100082695}, {'diff': 0.099956778}, {'diff': 0.10001136100000002}, {'diff': 0.10001036100000005}, {'diff': 0.10001033400000003}, {'diff': 0.10001036100000005}, {'diff': 0.10001036099999994}...</msg>
<status status="PASS" starttime="20201029 18:17:05.982" endtime="20201029 18:17:05.991"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:06.001" level="INFO">${RESULT} = {'diff': [0.100082695, 0.099956778, 0.10001136100000002, 0.10001036100000005, 0.10001033400000003, 0.10001036100000005, 0.10001036099999994, 5.419999999922709e-07, 5.420000002143155e-07, 5.41999999992...</msg>
<status status="PASS" starttime="20201029 18:17:05.992" endtime="20201029 18:17:06.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.011" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:06.009" endtime="20201029 18:17:06.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.016" level="INFO">VALUE: [0.100082695, 0.099956778, 0.10001136100000002, 0.10001036100000005, 0.10001033400000003, 0.10001036100000005, 0.10001036099999994, 5.419999999922709e-07, 5.420000002143155e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 0.10001077799999991, 0.10001036100000005, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001081899999997, 0.10001029199999989, 0.10001033399999981, 0.10001029199999945, 0.10001030499999963, 0.1000103750000001, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:17:06.013" endtime="20201029 18:17:06.018"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.003" endtime="20201029 18:17:06.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.375" endtime="20201029 18:17:06.021"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:59.242" endtime="20201029 18:17:06.022" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:06.039" endtime="20201029 18:17:06.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.035" endtime="20201029 18:17:06.062"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.095" endtime="20201029 18:17:06.113"></status>
</kw>
<msg timestamp="20201029 18:17:06.114" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.092" endtime="20201029 18:17:06.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.121" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.117" endtime="20201029 18:17:06.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:06.128" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:06.123" endtime="20201029 18:17:06.128"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:06.084" endtime="20201029 18:17:06.130"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:06.078" endtime="20201029 18:17:06.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.075" endtime="20201029 18:17:06.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:06.140" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:06.139" endtime="20201029 18:17:06.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.134" endtime="20201029 18:17:06.141"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.074" endtime="20201029 18:17:06.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.072" endtime="20201029 18:17:06.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.144" endtime="20201029 18:17:06.147"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.068" endtime="20201029 18:17:06.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.063" endtime="20201029 18:17:06.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.032" endtime="20201029 18:17:06.151"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:06.174" endtime="20201029 18:17:12.298"></status>
</kw>
<msg timestamp="20201029 18:17:12.299" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:06.170" endtime="20201029 18:17:12.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.306" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.301" endtime="20201029 18:17:12.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.308" endtime="20201029 18:17:12.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.163" endtime="20201029 18:17:12.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.156" endtime="20201029 18:17:12.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.321" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 10, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:12.316" endtime="20201029 18:17:12.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.331" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:12.329" endtime="20201029 18:17:12.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.335" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:12.333" endtime="20201029 18:17:12.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.323" endtime="20201029 18:17:12.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.348" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:12.345" endtime="20201029 18:17:12.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.352" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:12.350" endtime="20201029 18:17:12.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.339" endtime="20201029 18:17:12.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.364" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:12.361" endtime="20201029 18:17:12.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.368" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:17:12.366" endtime="20201029 18:17:12.369"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.356" endtime="20201029 18:17:12.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.387" endtime="20201029 18:17:12.766"></status>
</kw>
<msg timestamp="20201029 18:17:12.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127022208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227173028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.384" endtime="20201029 18:17:12.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127022208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.227173028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.775" endtime="20201029 18:17:12.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.792" endtime="20201029 18:17:12.796"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.376" endtime="20201029 18:17:12.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.372" endtime="20201029 18:17:12.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:12.809" level="INFO">${FILTERED} = [{'diff': 0.10015082}, {'diff': 0.09989368099999998}, {'diff': 5.410000000205528e-07}, {'diff': 5.410000000205528e-07}, {'diff': 5.410000000205528e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.409...</msg>
<status status="PASS" starttime="20201029 18:17:12.800" endtime="20201029 18:17:12.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.820" level="INFO">${RESULT} = {'diff': [0.10015082, 0.09989368099999998, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000000205528e-07, 5.419999999922709e-...</msg>
<status status="PASS" starttime="20201029 18:17:12.811" endtime="20201029 18:17:12.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.830" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:12.827" endtime="20201029 18:17:12.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.835" level="INFO">VALUE: [0.10015082, 0.09989368099999998, 5.410000000205528e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001082000000006, 0.10001034800000008, 0.10001038899999992, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:17:12.832" endtime="20201029 18:17:12.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.821" endtime="20201029 18:17:12.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:06.152" endtime="20201029 18:17:12.839"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:06.027" endtime="20201029 18:17:12.841" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:12.857" endtime="20201029 18:17:12.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.854" endtime="20201029 18:17:12.881"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.914" endtime="20201029 18:17:12.933"></status>
</kw>
<msg timestamp="20201029 18:17:12.934" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.911" endtime="20201029 18:17:12.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.941" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.937" endtime="20201029 18:17:12.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.948" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:12.944" endtime="20201029 18:17:12.950"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:12.903" endtime="20201029 18:17:12.952"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:12.897" endtime="20201029 18:17:12.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.894" endtime="20201029 18:17:12.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:12.962" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:12.960" endtime="20201029 18:17:12.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.956" endtime="20201029 18:17:12.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.892" endtime="20201029 18:17:12.964"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.890" endtime="20201029 18:17:12.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.966" endtime="20201029 18:17:12.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.886" endtime="20201029 18:17:12.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.882" endtime="20201029 18:17:12.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.851" endtime="20201029 18:17:12.973"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.994" endtime="20201029 18:17:19.118"></status>
</kw>
<msg timestamp="20201029 18:17:19.119" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.990" endtime="20201029 18:17:19.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.125" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.121" endtime="20201029 18:17:19.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.128" endtime="20201029 18:17:19.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.983" endtime="20201029 18:17:19.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.978" endtime="20201029 18:17:19.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.146" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 15, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:19.137" endtime="20201029 18:17:19.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.156" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:19.154" endtime="20201029 18:17:19.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.161" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:19.159" endtime="20201029 18:17:19.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.148" endtime="20201029 18:17:19.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.173" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:19.170" endtime="20201029 18:17:19.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.177" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:19.175" endtime="20201029 18:17:19.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.164" endtime="20201029 18:17:19.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.189" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:19.187" endtime="20201029 18:17:19.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.193" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:17:19.191" endtime="20201029 18:17:19.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.181" endtime="20201029 18:17:19.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.212" endtime="20201029 18:17:19.586"></status>
</kw>
<msg timestamp="20201029 18:17:19.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128157931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228421153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.209" endtime="20201029 18:17:19.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128157931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228421153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:19.595" endtime="20201029 18:17:19.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.612" endtime="20201029 18:17:19.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.202" endtime="20201029 18:17:19.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.197" endtime="20201029 18:17:19.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:19.630" level="INFO">${FILTERED} = [{'diff': 0.10026322199999999}, {'diff': 0.10005419500000001}, {'diff': 0.09974270800000001}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201029 18:17:19.621" endtime="20201029 18:17:19.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:19.639" level="INFO">${RESULT} = {'diff': [0.10026322199999999, 0.10005419500000001, 0.09974270800000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.4199999999...</msg>
<status status="PASS" starttime="20201029 18:17:19.632" endtime="20201029 18:17:19.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.649" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:19.647" endtime="20201029 18:17:19.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.654" level="INFO">VALUE: [0.10026322199999999, 0.10005419500000001, 0.09974270800000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000001315751e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 0.10001079099999988, 0.10001033299999973, 0.10001029199999989, 0.10001031999999999, 0.10001031999999999, 0.10001030500000008, 0.10001029100000025, 0.10001031999999999, 0.10001031999999999, 0.10001030600000016, 0.10001030499999963, 0.10001030499999963, 0.10001031900000035, 0.10001030599999972, 0.10001030600000016, 0.10001040199999967, 0.10001081899999953, 0.10001030599999972, 0.10001033399999937, 0.10001027800000006, 0.1000103189999999, 0.10001030499999963, 0.10001030599999972, 0.1000103750000001, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:17:19.651" endtime="20201029 18:17:19.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.640" endtime="20201029 18:17:19.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.974" endtime="20201029 18:17:19.659"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:12.845" endtime="20201029 18:17:19.660" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:19.677" endtime="20201029 18:17:19.698"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.673" endtime="20201029 18:17:19.700"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.735" endtime="20201029 18:17:19.754"></status>
</kw>
<msg timestamp="20201029 18:17:19.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.732" endtime="20201029 18:17:19.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.757" endtime="20201029 18:17:19.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:19.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:19.764" endtime="20201029 18:17:19.769"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:19.725" endtime="20201029 18:17:19.770"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:19.717" endtime="20201029 18:17:19.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.714" endtime="20201029 18:17:19.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:19.781" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:19.779" endtime="20201029 18:17:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.775" endtime="20201029 18:17:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.712" endtime="20201029 18:17:19.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.710" endtime="20201029 18:17:19.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.784" endtime="20201029 18:17:19.788"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.706" endtime="20201029 18:17:19.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.702" endtime="20201029 18:17:19.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.670" endtime="20201029 18:17:19.791"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:19.813" endtime="20201029 18:17:25.937"></status>
</kw>
<msg timestamp="20201029 18:17:25.938" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:19.810" endtime="20201029 18:17:25.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.940" endtime="20201029 18:17:25.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.947" endtime="20201029 18:17:25.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.802" endtime="20201029 18:17:25.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.797" endtime="20201029 18:17:25.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.960" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 20, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:25.955" endtime="20201029 18:17:25.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.971" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:25.968" endtime="20201029 18:17:25.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.975" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:25.973" endtime="20201029 18:17:25.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.962" endtime="20201029 18:17:25.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.987" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:25.985" endtime="20201029 18:17:25.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.991" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:25.989" endtime="20201029 18:17:25.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.979" endtime="20201029 18:17:25.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.004" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:26.001" endtime="20201029 18:17:26.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.009" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:17:26.006" endtime="20201029 18:17:26.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.995" endtime="20201029 18:17:26.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.030" endtime="20201029 18:17:26.384"></status>
</kw>
<msg timestamp="20201029 18:17:26.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128026583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228430028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.026" endtime="20201029 18:17:26.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128026583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.228430028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:26.394" endtime="20201029 18:17:26.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.412" endtime="20201029 18:17:26.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.019" endtime="20201029 18:17:26.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.012" endtime="20201029 18:17:26.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:26.429" level="INFO">${FILTERED} = [{'diff': 0.10040344500000001}, {'diff': 0.100064931}, {'diff': 0.09959505499999999}, {'diff': 0.10001033299999995}, {'diff': 0.10001031900000001}, {'diff': 0.100010347}, {'diff': 0.10001031900000001}...</msg>
<status status="PASS" starttime="20201029 18:17:26.420" endtime="20201029 18:17:26.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:26.438" level="INFO">${RESULT} = {'diff': [0.10040344500000001, 0.100064931, 0.09959505499999999, 0.10001033299999995, 0.10001031900000001, 0.100010347, 0.10001031900000001, 0.10001031900000001, 0.1000103200000001, 0.1000103340000000...</msg>
<status status="PASS" starttime="20201029 18:17:26.431" endtime="20201029 18:17:26.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.449" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:26.446" endtime="20201029 18:17:26.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.454" level="INFO">VALUE: [0.10040344500000001, 0.100064931, 0.09959505499999999, 0.10001033299999995, 0.10001031900000001, 0.100010347, 0.10001031900000001, 0.10001031900000001, 0.1000103200000001, 0.10001033400000003, 0.10001031999999999, 0.10001036100000005, 0.10001029199999989, 0.10001029199999989, 0.10001027800000006, 0.10001031999999999, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001077700000005, 0.10001033299999973, 0.10001033300000017, 0.10001033300000017, 0.10001033299999929, 0.10001036099999983, 5.410000003536197e-07, 5.409999994654413e-07, 0.10001079199999996, 0.10001034800000053, 0.10001031999999999, 0.10001031999999999, 0.10001033299999929]</msg>
<status status="PASS" starttime="20201029 18:17:26.451" endtime="20201029 18:17:26.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.440" endtime="20201029 18:17:26.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:19.793" endtime="20201029 18:17:26.459"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:19.665" endtime="20201029 18:17:26.460" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:26.477" endtime="20201029 18:17:26.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.473" endtime="20201029 18:17:26.500"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.535" endtime="20201029 18:17:26.553"></status>
</kw>
<msg timestamp="20201029 18:17:26.555" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.532" endtime="20201029 18:17:26.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.561" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.557" endtime="20201029 18:17:26.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:26.575" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:26.564" endtime="20201029 18:17:26.576"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:26.524" endtime="20201029 18:17:26.580"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:26.518" endtime="20201029 18:17:26.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.515" endtime="20201029 18:17:26.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:26.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:26.601" endtime="20201029 18:17:26.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.590" endtime="20201029 18:17:26.605"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.513" endtime="20201029 18:17:26.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.512" endtime="20201029 18:17:26.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.608" endtime="20201029 18:17:26.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.507" endtime="20201029 18:17:26.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.502" endtime="20201029 18:17:26.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.470" endtime="20201029 18:17:26.617"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:26.638" endtime="20201029 18:17:32.761"></status>
</kw>
<msg timestamp="20201029 18:17:32.762" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:26.634" endtime="20201029 18:17:32.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.765" endtime="20201029 18:17:32.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.771" endtime="20201029 18:17:32.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.627" endtime="20201029 18:17:32.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.622" endtime="20201029 18:17:32.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.784" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'bg-timer-count': 25, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:32.779" endtime="20201029 18:17:32.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.794" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:32.792" endtime="20201029 18:17:32.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.798" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:32.796" endtime="20201029 18:17:32.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.786" endtime="20201029 18:17:32.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.816" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:32.808" endtime="20201029 18:17:32.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.821" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:32.818" endtime="20201029 18:17:32.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.802" endtime="20201029 18:17:32.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.832" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:32.830" endtime="20201029 18:17:32.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.837" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:32.834" endtime="20201029 18:17:32.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.824" endtime="20201029 18:17:32.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.855" endtime="20201029 18:17:33.203"></status>
</kw>
<msg timestamp="20201029 18:17:33.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152515583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.253101722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.852" endtime="20201029 18:17:33.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.152515583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.253101722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:33.212" endtime="20201029 18:17:33.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:33.230" endtime="20201029 18:17:33.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.845" endtime="20201029 18:17:33.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.840" endtime="20201029 18:17:33.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:33.247" level="INFO">${FILTERED} = [{'diff': 0.10058613899999996}, {'diff': 0.100069625}, {'diff': 0.09941091600000002}, {'diff': 0.10001036099999994}, {'diff': 0.100010347}, {'diff': 0.1000103189999999}, {'diff': 0.10001036099999994},...</msg>
<status status="PASS" starttime="20201029 18:17:33.238" endtime="20201029 18:17:33.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:33.256" level="INFO">${RESULT} = {'diff': [0.10058613899999996, 0.100069625, 0.09941091600000002, 0.10001036099999994, 0.100010347, 0.1000103189999999, 0.10001036099999994, 0.10001031999999999, 0.10001034700000011, 0.1000103889999999...</msg>
<status status="PASS" starttime="20201029 18:17:33.249" endtime="20201029 18:17:33.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.267" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:33.264" endtime="20201029 18:17:33.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:33.273" level="INFO">VALUE: [0.10058613899999996, 0.100069625, 0.09941091600000002, 0.10001036099999994, 0.100010347, 0.1000103189999999, 0.10001036099999994, 0.10001031999999999, 0.10001034700000011, 0.10001038899999992, 5.409999999095305e-07, 5.409999999095305e-07, 0.10001091699999987, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.420000002143155e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.420000004363601e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 18:17:33.270" endtime="20201029 18:17:33.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:33.258" endtime="20201029 18:17:33.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:26.618" endtime="20201029 18:17:33.277"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:26.464" endtime="20201029 18:17:33.279" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:16:48.173" endtime="20201029 18:17:33.295"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:13:48.679" endtime="20201029 18:17:33.372"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
